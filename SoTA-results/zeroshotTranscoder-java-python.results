  0%|          | 0/1746 [00:00<?, ?it/s]  0%|          | 3/1746 [00:00<00:58, 29.88it/s]  0%|          | 7/1746 [00:00<00:53, 32.22it/s]  1%|          | 11/1746 [00:00<00:52, 32.93it/s]  1%|          | 15/1746 [00:00<00:52, 32.82it/s]  1%|          | 19/1746 [00:00<00:52, 32.76it/s]  1%|▏         | 23/1746 [00:00<00:52, 32.91it/s]  2%|▏         | 27/1746 [00:00<00:52, 33.01it/s]  2%|▏         | 31/1746 [00:00<00:51, 33.10it/s]  2%|▏         | 35/1746 [00:01<00:51, 33.31it/s]  2%|▏         | 39/1746 [00:01<00:51, 33.11it/s]  2%|▏         | 43/1746 [00:01<00:52, 32.63it/s]  3%|▎         | 47/1746 [00:01<00:51, 32.78it/s]  3%|▎         | 51/1746 [00:01<00:52, 32.07it/s]  3%|▎         | 55/1746 [00:01<00:51, 32.59it/s]  3%|▎         | 59/1746 [00:01<00:51, 32.91it/s]  4%|▎         | 63/1746 [00:01<00:51, 32.77it/s]  4%|▍         | 67/1746 [00:02<00:51, 32.90it/s]  4%|▍         | 71/1746 [00:02<00:50, 33.05it/s]  4%|▍         | 75/1746 [00:02<00:50, 32.89it/s]  5%|▍         | 79/1746 [00:02<00:50, 33.26it/s]  5%|▍         | 83/1746 [00:02<00:50, 33.19it/s]  5%|▍         | 87/1746 [00:02<00:49, 33.44it/s]  5%|▌         | 91/1746 [00:02<00:49, 33.35it/s]  5%|▌         | 95/1746 [00:02<00:49, 33.36it/s]  File "./junk/1692576527315_2684/main.py", line 9
    while n -- :
               ^
SyntaxError: invalid syntax


  File "./junk/1692576527917_3029/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576528616_4536/main.py", line 24
    res = del + solve ( index + 1 , prev )
          ^
SyntaxError: invalid syntax


  File "./junk/1692576528955_5016/main.py", line 20
    solver . solve ( 1 , options . solver , options . solver , options . solver
                                                                              ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576529257_4934/main.py", line 19
    sys . exit (
               ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576529470_8564/main.py", line 22
    assert
         ^
SyntaxError: invalid syntax


  File "./junk/1692576529826_2405/main.py", line 45
    assert n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n ==
                                                                                                                                                                                                            ^
SyntaxError: invalid syntax


  File "./junk/1692576530110_8931/main.py", line 9
    print ( """ usage : SPACETOKEN % s SPACETOKEN [ - n | - o | - a | - b | - c | - d

SyntaxError: EOF while scanning triple-quoted string literal

  6%|▌         | 99/1746 [00:03<00:50, 32.31it/s]  6%|▌         | 103/1746 [00:03<00:50, 32.71it/s]  6%|▌         | 107/1746 [00:03<00:49, 32.86it/s]  6%|▋         | 111/1746 [00:03<00:50, 32.60it/s]  7%|▋         | 115/1746 [00:03<00:50, 32.59it/s]  7%|▋         | 119/1746 [00:03<00:49, 32.92it/s]  7%|▋         | 123/1746 [00:03<00:48, 33.21it/s]  7%|▋         | 127/1746 [00:03<00:48, 33.33it/s]  8%|▊         | 131/1746 [00:03<00:48, 33.33it/s]  8%|▊         | 135/1746 [00:04<00:48, 33.39it/s]  8%|▊         | 139/1746 [00:04<00:48, 33.19it/s]  8%|▊         | 143/1746 [00:04<00:48, 33.33it/s]  8%|▊         | 147/1746 [00:04<00:48, 33.22it/s]  9%|▊         | 151/1746 [00:04<00:47, 33.40it/s]  9%|▉         | 155/1746 [00:04<00:47, 33.25it/s]  9%|▉         | 159/1746 [00:04<00:48, 32.96it/s]  9%|▉         | 163/1746 [00:04<00:47, 33.08it/s] 10%|▉         | 167/1746 [00:05<00:48, 32.37it/s] 10%|▉         | 171/1746 [00:05<00:48, 32.35it/s] 10%|█         | 175/1746 [00:05<00:48, 32.57it/s] 10%|█         | 179/1746 [00:05<00:48, 32.08it/s] 10%|█         | 183/1746 [00:05<00:49, 31.85it/s] 11%|█         | 187/1746 [00:05<00:48, 32.31it/s] 11%|█         | 191/1746 [00:05<00:47, 32.58it/s] 11%|█         | 195/1746 [00:05<00:48, 32.28it/s] 11%|█▏        | 199/1746 [00:06<00:47, 32.38it/s] 12%|█▏        | 203/1746 [00:06<00:47, 32.63it/s] 12%|█▏        | 207/1746 [00:06<00:46, 32.84it/s] 12%|█▏        | 211/1746 [00:06<00:46, 32.93it/s] 12%|█▏        | 215/1746 [00:06<00:46, 32.73it/s] 13%|█▎        | 219/1746 [00:06<00:46, 32.81it/s] 13%|█▎        | 223/1746 [00:06<00:46, 32.90it/s] 13%|█▎        | 227/1746 [00:06<00:46, 32.57it/s] 13%|█▎        | 231/1746 [00:07<00:46, 32.81it/s] 13%|█▎        | 235/1746 [00:07<00:46, 32.19it/s] 14%|█▎        | 239/1746 [00:07<00:46, 32.45it/s] 14%|█▍        | 243/1746 [00:07<00:45, 32.80it/s] 14%|█▍        | 247/1746 [00:07<00:45, 33.05it/s] 14%|█▍        | 251/1746 [00:07<00:45, 33.18it/s] 15%|█▍        | 255/1746 [00:07<00:44, 33.21it/s] 15%|█▍        | 259/1746 [00:07<00:44, 33.38it/s] 15%|█▌        | 263/1746 [00:08<00:44, 32.98it/s] 15%|█▌        | 267/1746 [00:08<00:44, 32.93it/s] 16%|█▌        | 271/1746 [00:08<00:44, 33.11it/s] 16%|█▌        | 275/1746 [00:08<00:44, 33.21it/s] 16%|█▌        | 279/1746 [00:08<00:44, 33.04it/s] 16%|█▌        | 283/1746 [00:08<00:44, 33.17it/s] 16%|█▋        | 287/1746 [00:08<00:43, 33.37it/s] 17%|█▋        | 291/1746 [00:08<00:43, 33.45it/s] 17%|█▋        | 295/1746 [00:08<00:43, 33.10it/s] 17%|█▋        | 299/1746 [00:09<00:43, 33.15it/s] 17%|█▋        | 303/1746 [00:09<00:43, 33.33it/s] 18%|█▊        | 307/1746 [00:09<00:43, 33.27it/s] 18%|█▊        | 311/1746 [00:09<00:43, 33.24it/s] 18%|█▊        | 315/1746 [00:09<00:42, 33.45it/s] 18%|█▊        | 319/1746 [00:09<00:42, 33.49it/s] 18%|█▊        | 323/1746 [00:09<00:42, 33.41it/s] 19%|█▊        | 327/1746 [00:09<00:42, 33.39it/s] 19%|█▉        | 331/1746 [00:10<00:42, 33.34it/s]
  File "./junk/1692576530441_3326/main.py", line 5
    do :
       ^
SyntaxError: invalid syntax


  File "./junk/1692576530835_4636/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576530923_3444/main.py", line 1
    def main ( $ ) :
               ^
SyntaxError: invalid syntax


  File "./junk/1692576530982_1855/main.py", line 2
    L = [ [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * m +

SyntaxError: unexpected EOF while parsing


  File "./junk/1692576531343_8517/main.py", line 3
    assert find_nth_term ( N ) == [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 38 , 39 , 40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 54 , 55 , 56 , 57 , 58 , 59 , 60 , 61 , 62 , 63 , 64 , 65 , 66 , 67 , 68 , 69 , 70 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 81 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 89 , 90 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 89 , 90 , 81 , 82 , 83 , 84 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 ,

SyntaxError: unexpected EOF while parsing


  File "./junk/1692576531584_7722/main.py", line 51
    return False
    ^
SyntaxError: 'return' outside function


  File "./junk/1692576531733_4424/main.py", line 30
    while T -- != 0 :
               ^
SyntaxError: invalid syntax


  File "./junk/1692576532198_2206/main.py", line 45
    for p in
           ^
SyntaxError: invalid syntax


  File "./junk/1692576533308_4642/main.py", line 45
    return FastScanner ( )
    ^
SyntaxError: 'return' outside function


  File "./junk/1692576533519_7661/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576533704_7158/main.py", line 7
    for j in range ( i * 2 , N , i += 1 ) :
                                   ^
SyntaxError: invalid syntax


  File "./junk/1692576533946_9132/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576534350_2076/main.py", line 10
    for i in range ( 0 , len ( isPrime ) * i <= len ( isPrime ) :
                                                                ^
SyntaxError: invalid syntax


  File "./junk/1692576534739_9630/main.py", line 6
    for j in range ( i * i , MAX , j += i * i ) :
                                     ^
SyntaxError: invalid syntax


  File "./junk/1692576534919_3816/main.py", line 1
    def import ( s ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576534949_4438/main.py", line 11
    for i in range ( p * 2 , MAX , i += p ) :
                                     ^
SyntaxError: invalid syntax


  File "./junk/1692576534978_1763/main.py", line 11
    for i in range ( p * 2 , MAX , i += p ) :
                                     ^
SyntaxError: invalid syntax


  File "./junk/1692576535222_9064/main.py", line 16
    parser . print_help (
                        ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576535463_5827/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576535556_8669/main.py", line 1
    def import ( arr , n , x , y ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576535854_8517/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576535913_2285/main.py", line 1
    def import ( root_data ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576536215_4896/main.py", line 169
    import
         ^
SyntaxError: invalid syntax


  File "./junk/1692576536275_1542/main.py", line 16
    return memo [ pos ] [ fl ] [ pr ] = val
                                      ^
SyntaxError: invalid syntax


  File "./junk/1692576536635_8317/main.py", line 18
    if d . has_key ( 0l ) :
                      ^
SyntaxError: invalid syntax


 19%|█▉        | 335/1746 [00:10<00:42, 33.30it/s] 19%|█▉        | 339/1746 [00:10<00:41, 33.54it/s] 20%|█▉        | 343/1746 [00:10<00:41, 33.41it/s] 20%|█▉        | 347/1746 [00:10<00:42, 33.00it/s] 20%|██        | 351/1746 [00:10<00:42, 32.73it/s] 20%|██        | 355/1746 [00:10<00:42, 32.92it/s] 21%|██        | 359/1746 [00:10<00:42, 33.00it/s] 21%|██        | 363/1746 [00:11<00:41, 33.08it/s] 21%|██        | 367/1746 [00:11<00:41, 33.36it/s] 21%|██        | 371/1746 [00:11<00:41, 33.47it/s] 21%|██▏       | 375/1746 [00:11<00:41, 33.20it/s] 22%|██▏       | 379/1746 [00:11<00:41, 33.29it/s] 22%|██▏       | 383/1746 [00:11<00:41, 33.08it/s] 22%|██▏       | 387/1746 [00:11<00:41, 32.83it/s] 22%|██▏       | 391/1746 [00:11<00:41, 32.54it/s] 23%|██▎       | 395/1746 [00:11<00:41, 32.60it/s] 23%|██▎       | 399/1746 [00:12<00:41, 32.54it/s] 23%|██▎       | 403/1746 [00:12<00:41, 32.61it/s]  File "./junk/1692576537204_8562/main.py", line 7
    for x in [ - 1000 , 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 ,

SyntaxError: unexpected EOF while parsing


  File "./junk/1692576537295_6687/main.py", line 1
    def pythontools . choose ( n , k ) :
                    ^
SyntaxError: invalid syntax


  File "./junk/1692576538113_5556/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576538469_1362/main.py", line 2
    f = open ( ' / home / jdoe

SyntaxError: EOL while scanning string literal


  File "./junk/1692576538650_8801/main.py", line 12
    return dp [ index ] [ cnt ] = ans
                                ^
SyntaxError: invalid syntax


  File "./junk/1692576538710_7055/main.py", line 8
    as = ma . array ( [ 1 , 2 , 3 ] )
    ^
SyntaxError: invalid syntax


  File "./junk/1692576538928_8260/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576539237_8122/main.py", line 32
    assert
         ^
SyntaxError: invalid syntax


  File "./junk/1692576539482_7376/main.py", line 3
    row = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 38 , 39 , 40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 54 , 55 , 56 , 57 , 58 , 59 , 60 , 60 , 61 , 62 , 63 , 64 , 65 , 66 , 67 , 68 , 69 , 70 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 81 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 , 98 , 99 , 99 , 100 , 101 , 102 , 103 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 111 , 112 , 115 , 116 , 117 , 118 , 119 , 120 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 ,

SyntaxError: unexpected EOF while parsing

 23%|██▎       | 407/1746 [00:12<00:41, 32.42it/s] 24%|██▎       | 411/1746 [00:12<00:41, 32.32it/s] 24%|██▍       | 415/1746 [00:12<00:41, 32.31it/s] 24%|██▍       | 419/1746 [00:12<00:40, 32.48it/s] 24%|██▍       | 423/1746 [00:12<00:40, 32.75it/s] 24%|██▍       | 427/1746 [00:12<00:40, 32.87it/s] 25%|██▍       | 431/1746 [00:13<00:40, 32.71it/s] 25%|██▍       | 435/1746 [00:13<00:40, 32.72it/s]
  File "./junk/1692576539515_3136/main.py", line 2
    bin = [ '000' , '001' , '010' , '011' , '100' , '101' , "110',"111' ]
                                                                   ^
SyntaxError: invalid syntax


  File "./junk/1692576539640_6459/main.py", line 1
    def class Solution ( a , b ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576539670_9456/main.py", line 2
    with open

SyntaxError: EOL while scanning string literal


  File "./junk/1692576539764_6870/main.py", line 2
    fibo = 2.078087F * float ( log ( n ) ) + 1.672276F
                   ^
SyntaxError: invalid syntax


  File "./junk/1692576540094_7958/main.py", line 3
    MOD = 1000000007L
                    ^
SyntaxError: invalid syntax


  File "./junk/1692576540281_1168/main.py", line 4
    assert p013 ( ) . run

SyntaxError: EOL while scanning string literal


 25%|██▌       | 439/1746 [00:13<00:40, 32.54it/s] 25%|██▌       | 443/1746 [00:13<00:39, 32.74it/s] 26%|██▌       | 447/1746 [00:13<00:39, 32.85it/s] 26%|██▌       | 451/1746 [00:13<00:39, 32.97it/s] 26%|██▌       | 455/1746 [00:13<00:39, 33.08it/s] 26%|██▋       | 459/1746 [00:13<00:38, 33.01it/s] 27%|██▋       | 463/1746 [00:14<00:38, 33.26it/s] 27%|██▋       | 467/1746 [00:14<00:38, 33.33it/s] 27%|██▋       | 471/1746 [00:14<00:38, 33.35it/s] 27%|██▋       | 475/1746 [00:14<00:38, 33.35it/s] 27%|██▋       | 479/1746 [00:14<00:37, 33.39it/s] 28%|██▊       | 483/1746 [00:14<00:37, 33.30it/s] 28%|██▊       | 487/1746 [00:14<00:37, 33.16it/s] 28%|██▊       | 491/1746 [00:14<00:37, 33.32it/s]  File "./junk/1692576540372_5614/main.py", line 25
    print ( """ SPACETOKEN SPACETOKEN - s SPACETOKEN < file

SyntaxError: EOF while scanning triple-quoted string literal


  File "./junk/1692576540888_3465/main.py", line 26
    return parents [ x ] = r
                         ^
SyntaxError: invalid syntax


  File "./junk/1692576541547_8143/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576541666_7926/main.py", line 10
    yield ( lambda : H [ i ] [ s - 1 ] [ 0 ] for s in range ( 26 ) ]
                                                                   ^
SyntaxError: closing parenthesis ']' does not match opening parenthesis '('


  File "./junk/1692576541847_3507/main.py", line 5
    if str [ l ] != str [ h -- ] :
                               ^
SyntaxError: invalid syntax


  File "./junk/1692576541939_4500/main.py", line 2
    print ( [ 'p071.py' , 'p071.c' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , ' p071 . h

SyntaxError: EOL while scanning string literal


 28%|██▊       | 495/1746 [00:15<00:37, 33.35it/s] 29%|██▊       | 499/1746 [00:15<00:37, 33.43it/s] 29%|██▉       | 503/1746 [00:15<00:37, 33.47it/s] 29%|██▉       | 507/1746 [00:15<00:37, 33.25it/s] 29%|██▉       | 511/1746 [00:15<00:37, 33.03it/s] 29%|██▉       | 515/1746 [00:15<00:37, 32.58it/s] 30%|██▉       | 519/1746 [00:15<00:37, 32.52it/s]  File "./junk/1692576542087_1036/main.py", line 2
    with open

SyntaxError: EOL while scanning string literal


  File "./junk/1692576542147_5157/main.py", line 2
    print ( [ 'pyp500.py

SyntaxError: EOL while scanning string literal


  File "./junk/1692576542237_3391/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576542726_5609/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576542849_1096/main.py", line 9
    print ( """usage:SPACETOKEN%sSPACETOKEN[-a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a"""
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576542880_9111/main.py", line 20
    assert A . find_divisible ( f , t , positive
                                               ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576543005_6482/main.py", line 2
    ''' p

SyntaxError: EOF while scanning triple-quoted string literal

 30%|██▉       | 523/1746 [00:15<00:37, 32.23it/s] 30%|███       | 527/1746 [00:16<00:37, 32.55it/s] 30%|███       | 531/1746 [00:16<00:36, 33.00it/s] 31%|███       | 535/1746 [00:16<00:36, 33.22it/s] 31%|███       | 539/1746 [00:16<00:35, 33.55it/s] 31%|███       | 543/1746 [00:16<00:35, 33.44it/s] 31%|███▏      | 547/1746 [00:16<00:35, 33.35it/s] 32%|███▏      | 551/1746 [00:16<00:36, 32.71it/s] 32%|███▏      | 555/1746 [00:16<00:36, 32.72it/s] 32%|███▏      | 559/1746 [00:16<00:36, 32.93it/s] 32%|███▏      | 563/1746 [00:17<00:35, 33.00it/s] 32%|███▏      | 567/1746 [00:17<00:35, 33.09it/s] 33%|███▎      | 571/1746 [00:17<00:35, 33.38it/s]
  File "./junk/1692576543038_8406/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576543127_9548/main.py", line 39
    elif a == ' - - all - yes - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no -
                                                                                                                                                                                                                                                               ^
SyntaxError: EOL while scanning string literal


  File "./junk/1692576543158_4911/main.py", line 15
    bfs :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576543187_6359/main.py", line 1
    def pythontools . solve ( HastaLaVistaLa ) :
                    ^
SyntaxError: invalid syntax


  File "./junk/1692576543364_9345/main.py", line 17
    # import re, time, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime
                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576543690_4053/main.py", line 1
    def delete_n ( inp , del ) :
                         ^
SyntaxError: invalid syntax


  File "./junk/1692576544091_3994/main.py", line 1
    def class Solution ( num ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576544181_7787/main.py", line 18
    parser . add_argument ( '--queue-name' , type = str , help = 'QueueSPACETOKENnameSPACETOKENtoSPACETOKENprocessSPACETOKENto.'
                                                                                                                               ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576544331_7481/main.py", line 10
    print
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^
SyntaxError: EOL while scanning string literal


 33%|███▎      | 575/1746 [00:17<00:35, 33.22it/s] 33%|███▎      | 579/1746 [00:17<00:35, 33.21it/s] 33%|███▎      | 583/1746 [00:17<00:35, 33.04it/s] 34%|███▎      | 587/1746 [00:17<00:35, 33.07it/s]  File "./junk/1692576544567_1295/main.py", line 14
    print ( """ SPACETOKEN SPACETOKEN - v

SyntaxError: EOF while scanning triple-quoted string literal


 34%|███▍      | 591/1746 [00:17<00:35, 32.54it/s] 34%|███▍      | 595/1746 [00:18<00:35, 32.55it/s] 34%|███▍      | 599/1746 [00:18<00:34, 32.81it/s] 35%|███▍      | 603/1746 [00:18<00:34, 32.98it/s] 35%|███▍      | 607/1746 [00:18<00:34, 33.05it/s] 35%|███▍      | 611/1746 [00:18<00:33, 33.41it/s] 35%|███▌      | 615/1746 [00:18<00:33, 33.33it/s] 35%|███▌      | 619/1746 [00:18<00:33, 33.35it/s] 36%|███▌      | 623/1746 [00:18<00:33, 33.48it/s] 36%|███▌      | 627/1746 [00:19<00:33, 33.31it/s] 36%|███▌      | 631/1746 [00:19<00:33, 33.39it/s] 36%|███▋      | 635/1746 [00:19<00:33, 33.18it/s] 37%|███▋      | 639/1746 [00:19<00:33, 33.00it/s] 37%|███▋      | 643/1746 [00:19<00:33, 32.85it/s] 37%|███▋      | 647/1746 [00:19<00:33, 32.73it/s] 37%|███▋      | 651/1746 [00:19<00:33, 32.61it/s] 38%|███▊      | 655/1746 [00:19<00:33, 32.60it/s] 38%|███▊      | 659/1746 [00:19<00:33, 32.41it/s] 38%|███▊      | 663/1746 [00:20<00:33, 32.46it/s] 38%|███▊      | 667/1746 [00:20<00:33, 32.54it/s] 38%|███▊      | 671/1746 [00:20<00:32, 32.82it/s]  File "./junk/1692576544994_4609/main.py", line 19
    out . append ( StructType ( [ StructField ( "a" , IntegerType ( ) , ArrayType ( IntegerType ( ) , IntegerType ( ) ) , StructField ( "b" , IntegerType ( ) , ArrayType ( IntegerType ( ) , IntegerType ( ) ) , StructField ( "c" , IntegerType ( ) , IntegerType ( ) ) , StructField ( "d" , IntegerType ( ) , IntegerType ( ) ) ] ) )
                                                                                                                                                                                                                                                                                                                                    ^
SyntaxError: closing parenthesis ']' does not match opening parenthesis '('


  File "./junk/1692576545484_1292/main.py", line 3
    assert solve
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576545903_7472/main.py", line 9
    while k -- > 0 :
               ^
SyntaxError: invalid syntax


  File "./junk/1692576546259_7761/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576546782_7455/main.py", line 7
    assert V == [ - 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1

SyntaxError: unexpected EOF while parsing


  File "./junk/1692576546842_3396/main.py", line 24
    assert
         ^
SyntaxError: invalid syntax


  File "./junk/1692576546965_9914/main.py", line 2
    f = open ( ' / home / jekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekek

SyntaxError: EOL while scanning string literal


  File "./junk/1692576547124_7561/main.py", line 4
    work :
         ^
SyntaxError: invalid syntax


  File "./junk/1692576547183_1665/main.py", line 19
    a = np . array ( [ 1 , 3 , 2 , 1
                                   ^
SyntaxError: unexpected EOF while parsing


 39%|███▊      | 675/1746 [00:20<00:32, 32.89it/s] 39%|███▉      | 679/1746 [00:20<00:32, 32.91it/s] 39%|███▉      | 683/1746 [00:20<00:32, 32.88it/s] 39%|███▉      | 687/1746 [00:20<00:32, 33.01it/s] 40%|███▉      | 691/1746 [00:20<00:32, 32.84it/s] 40%|███▉      | 695/1746 [00:21<00:31, 33.17it/s] 40%|████      | 699/1746 [00:21<00:31, 33.33it/s] 40%|████      | 703/1746 [00:21<00:31, 33.27it/s] 40%|████      | 707/1746 [00:21<00:31, 33.32it/s]  File "./junk/1692576547579_2328/main.py", line 2
    L = [ [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * m

SyntaxError: unexpected EOF while parsing


  File "./junk/1692576548003_6006/main.py", line 13
    else : break
           ^
SyntaxError: 'break' outside loop


  File "./junk/1692576548273_2196/main.py", line 23
    task = next_task += 1
                     ^
SyntaxError: invalid syntax


  File "./junk/1692576548362_6844/main.py", line 33
    #
    ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576548632_3877/main.py", line 9
    assert_equal ( res , ( 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 ,

SyntaxError: unexpected EOF while parsing


  File "./junk/1692576548662_7901/main.py", line 11
    print ( """ usage : SPACETOKEN % s SPACETOKEN [ - h | - b | - b | - b ] SPACETOKEN < filename

SyntaxError: EOF while scanning triple-quoted string literal

 41%|████      | 711/1746 [00:21<00:31, 33.23it/s] 41%|████      | 715/1746 [00:21<00:31, 32.90it/s] 41%|████      | 719/1746 [00:21<00:31, 32.92it/s] 41%|████▏     | 723/1746 [00:21<00:31, 32.54it/s] 42%|████▏     | 727/1746 [00:22<00:31, 32.82it/s] 42%|████▏     | 731/1746 [00:22<00:30, 33.03it/s] 42%|████▏     | 735/1746 [00:22<00:30, 32.92it/s] 42%|████▏     | 739/1746 [00:22<00:30, 32.71it/s] 43%|████▎     | 743/1746 [00:22<00:30, 32.69it/s] 43%|████▎     | 747/1746 [00:22<00:30, 32.91it/s] 43%|████▎     | 751/1746 [00:22<00:30, 33.06it/s] 43%|████▎     | 755/1746 [00:22<00:30, 32.98it/s] 43%|████▎     | 759/1746 [00:23<00:29, 33.19it/s] 44%|████▎     | 763/1746 [00:23<00:29, 33.28it/s] 44%|████▍     | 767/1746 [00:23<00:29, 33.03it/s] 44%|████▍     | 771/1746 [00:23<00:29, 32.82it/s] 44%|████▍     | 775/1746 [00:23<00:29, 32.71it/s] 45%|████▍     | 779/1746 [00:23<00:29, 32.80it/s] 45%|████▍     | 783/1746 [00:23<00:29, 32.72it/s] 45%|████▌     | 787/1746 [00:23<00:29, 32.93it/s] 45%|████▌     | 791/1746 [00:24<00:29, 32.91it/s] 46%|████▌     | 795/1746 [00:24<00:28, 33.07it/s] 46%|████▌     | 799/1746 [00:24<00:28, 33.21it/s] 46%|████▌     | 803/1746 [00:24<00:28, 33.16it/s] 46%|████▌     | 807/1746 [00:24<00:28, 32.76it/s] 46%|████▋     | 811/1746 [00:24<00:28, 32.81it/s] 47%|████▋     | 815/1746 [00:24<00:28, 32.90it/s] 47%|████▋     | 819/1746 [00:24<00:28, 32.22it/s] 47%|████▋     | 823/1746 [00:24<00:29, 31.77it/s]
  File "./junk/1692576548818_5520/main.py", line 11
    parser . add_argument ( '--binary-file' , required = True , help
                                                                   ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576548878_7674/main.py", line 14
    return dp [ ind ] [ cnt ] = ans
                              ^
SyntaxError: invalid syntax


  File "./junk/1692576549156_6266/main.py", line 13
    max_len = max ( max_len , yield length )
                              ^
SyntaxError: invalid syntax


  File "./junk/1692576549550_1765/main.py", line 1
    def import ( data ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576549610_2149/main.py", line 2
    LCStuff = [ [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0

SyntaxError: unexpected EOF while parsing


  File "./junk/1692576549913_1668/main.py", line 5
    while t -- :
               ^
SyntaxError: invalid syntax


  File "./junk/1692576549972_9911/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576550272_7127/main.py", line 43
    print ( i
            ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576550947_8798/main.py", line 168
    import
         ^
SyntaxError: invalid syntax


  File "./junk/1692576551189_5921/main.py", line 50
    assert are_equivalent ( n
                            ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576551519_8160/main.py", line 19
    out :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576551552_3283/main.py", line 8
    except getopt . error , msg :
                          ^
SyntaxError: invalid syntax


  File "./junk/1692576552017_3256/main.py", line 5
    dp = [ [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m

SyntaxError: unexpected EOF while parsing


  File "./junk/1692576552147_9403/main.py", line 46
    a = a .
          ^
SyntaxError: invalid syntax


  File "./junk/1692576552176_5067/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


 47%|████▋     | 827/1746 [00:25<00:28, 32.31it/s] 48%|████▊     | 831/1746 [00:25<00:28, 32.23it/s] 48%|████▊     | 835/1746 [00:25<00:28, 32.23it/s] 48%|████▊     | 839/1746 [00:25<00:27, 32.65it/s] 48%|████▊     | 843/1746 [00:25<00:27, 32.45it/s] 49%|████▊     | 847/1746 [00:25<00:27, 32.65it/s] 49%|████▊     | 851/1746 [00:25<00:27, 32.76it/s] 49%|████▉     | 855/1746 [00:25<00:27, 32.82it/s] 49%|████▉     | 859/1746 [00:26<00:28, 31.41it/s] 49%|████▉     | 863/1746 [00:26<00:27, 31.83it/s] 50%|████▉     | 867/1746 [00:26<00:27, 32.30it/s]  File "./junk/1692576552236_5205/main.py", line 2
    """ p

SyntaxError: EOF while scanning triple-quoted string literal


  File "./junk/1692576553000_5143/main.py", line 1
    def import ( n , m , a ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576553183_5720/main.py", line 16
    assert angleextcycquad ( - z ) == ( - z , - z
                                                ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576553594_1860/main.py", line 9
    print ( """ usage : SPACETOKEN % s SPACETOKEN [ - i | - o | - - index

SyntaxError: EOF while scanning triple-quoted string literal

 50%|████▉     | 871/1746 [00:26<00:26, 32.47it/s] 50%|█████     | 875/1746 [00:26<00:26, 32.32it/s] 50%|█████     | 879/1746 [00:26<00:26, 32.53it/s] 51%|█████     | 883/1746 [00:26<00:26, 32.50it/s] 51%|█████     | 887/1746 [00:26<00:26, 32.74it/s] 51%|█████     | 891/1746 [00:27<00:25, 32.91it/s] 51%|█████▏    | 895/1746 [00:27<00:25, 32.88it/s] 51%|█████▏    | 899/1746 [00:27<00:25, 32.93it/s] 52%|█████▏    | 903/1746 [00:27<00:25, 32.70it/s] 52%|█████▏    | 907/1746 [00:27<00:25, 32.95it/s] 52%|█████▏    | 911/1746 [00:27<00:25, 32.96it/s] 52%|█████▏    | 915/1746 [00:27<00:25, 32.88it/s] 53%|█████▎    | 919/1746 [00:27<00:25, 32.79it/s] 53%|█████▎    | 923/1746 [00:28<00:25, 32.64it/s] 53%|█████▎    | 927/1746 [00:28<00:24, 32.80it/s]
  File "./junk/1692576553904_2268/main.py", line 43
    ans = max ( ans , arr [ n - i -
                                  ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576553934_9424/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576554174_6750/main.py", line 2
    ''' main SPACETOKEN : SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN

SyntaxError: EOF while scanning triple-quoted string literal


  File "./junk/1692576554780_7824/main.py", line 4
    assert ( m - 1 - max ( abs ( ( a = s [ i ] - m ) > 0 and n % 2 > 0 ) , abs ( ( b = s [ i ] - m ) > 0 and n % 2 > 0 ) ) % 3 + 1 == 0
                                     ^
SyntaxError: invalid syntax


 53%|█████▎    | 931/1746 [00:28<00:24, 33.00it/s] 54%|█████▎    | 935/1746 [00:28<00:24, 32.90it/s] 54%|█████▍    | 939/1746 [00:28<00:24, 32.85it/s] 54%|█████▍    | 943/1746 [00:28<00:24, 32.85it/s] 54%|█████▍    | 947/1746 [00:28<00:24, 33.06it/s] 54%|█████▍    | 951/1746 [00:28<00:23, 33.15it/s] 55%|█████▍    | 955/1746 [00:29<00:23, 32.97it/s] 55%|█████▍    | 959/1746 [00:29<00:23, 33.16it/s] 55%|█████▌    | 963/1746 [00:29<00:23, 32.75it/s] 55%|█████▌    | 967/1746 [00:29<00:23, 32.66it/s] 56%|█████▌    | 971/1746 [00:29<00:23, 32.70it/s] 56%|█████▌    | 975/1746 [00:29<00:23, 32.24it/s] 56%|█████▌    | 979/1746 [00:29<00:23, 32.42it/s] 56%|█████▋    | 983/1746 [00:29<00:23, 32.57it/s] 57%|█████▋    | 987/1746 [00:30<00:23, 32.76it/s] 57%|█████▋    | 991/1746 [00:30<00:22, 33.05it/s] 57%|█████▋    | 995/1746 [00:30<00:22, 33.05it/s] 57%|█████▋    | 999/1746 [00:30<00:22, 33.35it/s] 57%|█████▋    | 1003/1746 [00:30<00:22, 33.29it/s] 58%|█████▊    | 1007/1746 [00:30<00:22, 32.95it/s] 58%|█████▊    | 1011/1746 [00:30<00:22, 33.01it/s] 58%|█████▊    | 1015/1746 [00:30<00:22, 33.16it/s] 58%|█████▊    | 1019/1746 [00:30<00:22, 32.74it/s] 59%|█████▊    | 1023/1746 [00:31<00:21, 32.87it/s] 59%|█████▉    | 1027/1746 [00:31<00:21, 32.99it/s] 59%|█████▉    | 1031/1746 [00:31<00:21, 33.11it/s] 59%|█████▉    | 1035/1746 [00:31<00:21, 32.97it/s] 60%|█████▉    | 1039/1746 [00:31<00:21, 32.99it/s] 60%|█████▉    | 1043/1746 [00:31<00:21, 32.16it/s] 60%|█████▉    | 1047/1746 [00:31<00:21, 31.94it/s] 60%|██████    | 1051/1746 [00:31<00:21, 32.16it/s] 60%|██████    | 1055/1746 [00:32<00:21, 32.33it/s] 61%|██████    | 1059/1746 [00:32<00:21, 32.63it/s] 61%|██████    | 1063/1746 [00:32<00:20, 32.85it/s] 61%|██████    | 1067/1746 [00:32<00:20, 33.02it/s] 61%|██████▏   | 1071/1746 [00:32<00:20, 33.01it/s] 62%|██████▏   | 1075/1746 [00:32<00:20, 32.83it/s] 62%|██████▏   | 1079/1746 [00:32<00:20, 32.94it/s] 62%|██████▏   | 1083/1746 [00:32<00:19, 33.22it/s] 62%|██████▏   | 1087/1746 [00:33<00:20, 32.86it/s] 62%|██████▏   | 1091/1746 [00:33<00:19, 32.94it/s] 63%|██████▎   | 1095/1746 [00:33<00:19, 33.12it/s] 63%|██████▎   | 1099/1746 [00:33<00:19, 33.03it/s]  File "./junk/1692576555332_1976/main.py", line 19
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 +
                                                    ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576555665_1161/main.py", line 31
    assert codechef ( t ** 29 ) ==
                                 ^
SyntaxError: invalid syntax


  File "./junk/1692576555996_2284/main.py", line 10
    assert res == [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,

SyntaxError: unexpected EOF while parsing


  File "./junk/1692576556057_4654/main.py", line 34
    if w >= s . performance
                          ^
SyntaxError: invalid syntax


  File "./junk/1692576556701_4773/main.py", line 22
    global fp
    ^
SyntaxError: name 'fp' is used prior to global declaration


  File "./junk/1692576557011_4499/main.py", line 31
    assert
         ^
SyntaxError: invalid syntax


  File "./junk/1692576557489_4546/main.py", line 2
    """ STRNEWLINE SPACETOKEN Generate SPACETOKEN a SPACETOKEN set SPACETOKEN of SPACETOKEN integers SPACETOKEN from SPACETOKEN a SPACETOKEN list SPACETOKEN of SPACETOKEN integers . STRNEWLINE STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Permutation STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN print ( partition ( 3 , SPACETOKEN a , SPACETOKEN n , SPACETOKEN num , SPACETOKEN k ) ) STRNEWLINE SPACETOKEN >> >

SyntaxError: EOF while scanning triple-quoted string literal


  File "./junk/1692576557547_5753/main.py", line 8
    for j in range ( 2 * i , MAX , i += 1 ) :
                                     ^
SyntaxError: invalid syntax


  File "./junk/1692576558581_2261/main.py", line 2
    mod = 1000000007L
                    ^
SyntaxError: invalid syntax


  File "./junk/1692576558733_7806/main.py", line 23
    return dp [ pos ] [ first_d ] [ last_d ] [ tight ] = ans
                                                       ^
SyntaxError: invalid syntax


  File "./junk/1692576558793_1447/main.py", line 20
    return l + 1
    ^
SyntaxError: 'return' outside function


  File "./junk/1692576558961_4182/main.py", line 4
    while n -- :
               ^
SyntaxError: invalid syntax


  File "./junk/1692576559506_1880/main.py", line 16
    sum_natual = ( ( n * ( n + 1l ) ) / 2 )
                                ^
SyntaxError: invalid syntax


  File "./junk/1692576559628_4024/main.py", line 1
    def import ( x , y , p ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576559841_7515/main.py", line 1
    def import ( a , n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576560050_8434/main.py", line 8
    do :
       ^
SyntaxError: invalid syntax


  File "./junk/1692576560204_4037/main.py", line 21
    return h
    ^
SyntaxError: 'return' outside function


  File "./junk/1692576560506_5582/main.py", line 1
    def import ( arr , n ) :
        ^
SyntaxError: invalid syntax


 63%|██████▎   | 1103/1746 [00:33<00:19, 33.30it/s] 63%|██████▎   | 1107/1746 [00:33<00:19, 33.11it/s] 64%|██████▎   | 1111/1746 [00:33<00:19, 33.33it/s] 64%|██████▍   | 1115/1746 [00:33<00:18, 33.40it/s] 64%|██████▍   | 1119/1746 [00:34<00:19, 32.08it/s] 64%|██████▍   | 1123/1746 [00:34<00:19, 32.41it/s] 65%|██████▍   | 1127/1746 [00:34<00:18, 32.80it/s] 65%|██████▍   | 1131/1746 [00:34<00:18, 32.91it/s] 65%|██████▌   | 1135/1746 [00:34<00:18, 33.16it/s] 65%|██████▌   | 1139/1746 [00:34<00:18, 33.07it/s] 65%|██████▌   | 1143/1746 [00:34<00:18, 33.22it/s] 66%|██████▌   | 1147/1746 [00:34<00:17, 33.37it/s] 66%|██████▌   | 1151/1746 [00:34<00:18, 32.84it/s] 66%|██████▌   | 1155/1746 [00:35<00:17, 33.01it/s] 66%|██████▋   | 1159/1746 [00:35<00:17, 32.74it/s] 67%|██████▋   | 1163/1746 [00:35<00:17, 32.45it/s] 67%|██████▋   | 1167/1746 [00:35<00:17, 32.51it/s] 67%|██████▋   | 1171/1746 [00:35<00:17, 32.52it/s] 67%|██████▋   | 1175/1746 [00:35<00:17, 32.70it/s]  File "./junk/1692576560625_8823/main.py", line 1
    def import ( n , d ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576560684_4623/main.py", line 29
    assert codechef ( n + 25 ) == ( n ,
                                      ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576561598_7044/main.py", line 13
    return dp [ ind ] = ans
                      ^
SyntaxError: invalid syntax


  File "./junk/1692576561658_5176/main.py", line 5
    nchoosek . append ( nchoosek [ i ] [ i ] = 1 )
                        ^
SyntaxError: expression cannot contain assignment, perhaps you meant "=="?


  File "./junk/1692576562080_7623/main.py", line 2
    f = open

SyntaxError: EOL while scanning string literal


  File "./junk/1692576562514_7631/main.py", line 3
    ''' p

   ^
SyntaxError: EOF while scanning triple-quoted string literal


  File "./junk/1692576562728_9765/main.py", line 3
    f = open ( ' / home / jeko

SyntaxError: EOL while scanning string literal


  File "./junk/1692576562759_6480/main.py", line 14
    return dp [ a ] [ b ] = ans
                          ^
SyntaxError: invalid syntax


 68%|██████▊   | 1179/1746 [00:35<00:17, 32.86it/s] 68%|██████▊   | 1183/1746 [00:35<00:17, 32.74it/s] 68%|██████▊   | 1187/1746 [00:36<00:16, 32.96it/s] 68%|██████▊   | 1191/1746 [00:36<00:16, 32.85it/s] 68%|██████▊   | 1195/1746 [00:36<00:16, 32.96it/s] 69%|██████▊   | 1199/1746 [00:36<00:16, 32.77it/s] 69%|██████▉   | 1203/1746 [00:36<00:16, 32.84it/s] 69%|██████▉   | 1207/1746 [00:36<00:16, 32.73it/s] 69%|██████▉   | 1211/1746 [00:36<00:16, 32.97it/s] 70%|██████▉   | 1215/1746 [00:36<00:16, 33.12it/s] 70%|██████▉   | 1219/1746 [00:37<00:16, 32.53it/s] 70%|███████   | 1223/1746 [00:37<00:15, 32.69it/s] 70%|███████   | 1227/1746 [00:37<00:15, 32.93it/s] 71%|███████   | 1231/1746 [00:37<00:15, 32.98it/s] 71%|███████   | 1235/1746 [00:37<00:15, 32.88it/s] 71%|███████   | 1239/1746 [00:37<00:15, 32.88it/s] 71%|███████   | 1243/1746 [00:37<00:15, 33.05it/s] 71%|███████▏  | 1247/1746 [00:37<00:15, 32.95it/s] 72%|███████▏  | 1251/1746 [00:38<00:15, 32.97it/s] 72%|███████▏  | 1255/1746 [00:38<00:14, 33.25it/s] 72%|███████▏  | 1259/1746 [00:38<00:14, 33.27it/s] 72%|███████▏  | 1263/1746 [00:38<00:14, 32.76it/s] 73%|███████▎  | 1267/1746 [00:38<00:14, 32.63it/s] 73%|███████▎  | 1271/1746 [00:38<00:14, 32.90it/s] 73%|███████▎  | 1275/1746 [00:38<00:14, 33.10it/s] 73%|███████▎  | 1279/1746 [00:38<00:14, 32.94it/s] 73%|███████▎  | 1283/1746 [00:39<00:14, 32.92it/s] 74%|███████▎  | 1287/1746 [00:39<00:13, 33.19it/s] 74%|███████▍  | 1291/1746 [00:39<00:13, 33.18it/s] 74%|███████▍  | 1295/1746 [00:39<00:13, 33.22it/s] 74%|███████▍  | 1299/1746 [00:39<00:13, 33.01it/s] 75%|███████▍  | 1303/1746 [00:39<00:13, 33.30it/s] 75%|███████▍  | 1307/1746 [00:39<00:13, 33.44it/s] 75%|███████▌  | 1311/1746 [00:39<00:12, 33.72it/s] 75%|███████▌  | 1315/1746 [00:39<00:13, 33.03it/s] 76%|███████▌  | 1319/1746 [00:40<00:13, 32.63it/s] 76%|███████▌  | 1323/1746 [00:40<00:12, 32.73it/s] 76%|███████▌  | 1327/1746 [00:40<00:13, 32.20it/s] 76%|███████▌  | 1331/1746 [00:40<00:12, 32.62it/s] 76%|███████▋  | 1335/1746 [00:40<00:12, 32.64it/s] 77%|███████▋  | 1339/1746 [00:40<00:12, 32.71it/s] 77%|███████▋  | 1343/1746 [00:40<00:12, 33.02it/s] 77%|███████▋  | 1347/1746 [00:40<00:12, 32.91it/s] 77%|███████▋  | 1351/1746 [00:41<00:11, 32.99it/s] 78%|███████▊  | 1355/1746 [00:41<00:11, 33.13it/s]  File "./junk/1692576562880_4826/main.py", line 1
    def class GCD ( n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576563030_9896/main.py", line 5
    do :
       ^
SyntaxError: invalid syntax


  File "./junk/1692576563243_8563/main.py", line 1
    def import ( N , P ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576563792_7828/main.py", line 2
    f = open ( ' / home / kryan

SyntaxError: EOL while scanning string literal


  File "./junk/1692576564312_8708/main.py", line 22
    encode ( sys . stdout , sys .
                                ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576564491_1150/main.py", line 15
    cnt = [ [ 1 ] * len ( h ) , [ 0 ] * len ( h ) , [ 0 ] * len ( h ) , [ 0 ] * len ( h ) , [ 0 ] * len ( h ) ] ]
                                                                                                                ^
SyntaxError: unmatched ']'


  File "./junk/1692576565159_7694/main.py", line 13
    count = a [ ( from + i ) % 14 ] + ( stones + 14 - i ) / 14
                  ^
SyntaxError: invalid syntax


  File "./junk/1692576565366_2966/main.py", line 43
    assert
         ^
SyntaxError: invalid syntax


  File "./junk/1692576565397_5829/main.py", line 3
    maxx = max ( [ d1 , max ( d2 , d3 ) for d1 , d2 , d3 in zip ( [ 1 , 2 , 3 ] , [ 4 , 5 ] ) ] )
                                        ^
SyntaxError: invalid syntax


  File "./junk/1692576565677_9033/main.py", line 5
    sys . argv = sys . argv + [ '-N' , '-K' , '-K' , '-N' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K'
                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576566160_9238/main.py", line 9
    loop :
         ^
SyntaxError: invalid syntax


  File "./junk/1692576566611_5616/main.py", line 2
    f = open

SyntaxError: EOL while scanning string literal


  File "./junk/1692576566730_4995/main.py", line 1
    def import ( arrgs ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576566994_1972/main.py", line 14
    assert gf_gf_sum ( [ 1 , 2 ,
                               ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576567277_8470/main.py", line 21
    in . init ( sys . stdin )
    ^
SyntaxError: invalid syntax


  File "./junk/1692576567769_3310/main.py", line 32
    print ( ( ( bx - ax ) * ( cy - ay ) == ( cx - ax ) * ( by - ay ) ) or ( ( ax - bx ) * ( ax - bx ) + ( ay - by ) * ( ay - by ) != ( cx - bx ) * ( cx - bx ) + ( cy - by ) * ( cy - by ) ) ) and ( ( ax - bx ) * ( ax - bx ) + ( ay - by ) * ( ay - by ) ) ) and ( ( cx - bx ) * ( cx - bx ) + ( cy - by ) * ( cy - by ) ) ) and ( ( bx - by ) * ( bx - by ) + ( cx - bx ) ) and ( ( cy - by ) * ( cy - by ) + ( bx - by ) ) ) :
                                                                                                                                                                                                                                                             ^
SyntaxError: unmatched ')'


  File "./junk/1692576567890_9037/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576567919_5582/main.py", line 1
    def class Test ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576568162_1346/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


 78%|███████▊  | 1359/1746 [00:41<00:11, 33.38it/s] 78%|███████▊  | 1363/1746 [00:41<00:11, 33.43it/s] 78%|███████▊  | 1367/1746 [00:41<00:11, 32.85it/s] 79%|███████▊  | 1371/1746 [00:41<00:11, 32.90it/s] 79%|███████▉  | 1375/1746 [00:41<00:11, 33.00it/s] 79%|███████▉  | 1379/1746 [00:41<00:11, 32.94it/s] 79%|███████▉  | 1383/1746 [00:42<00:11, 32.78it/s] 79%|███████▉  | 1387/1746 [00:42<00:10, 32.92it/s] 80%|███████▉  | 1391/1746 [00:42<00:10, 32.71it/s] 80%|███████▉  | 1395/1746 [00:42<00:10, 32.72it/s] 80%|████████  | 1399/1746 [00:42<00:10, 32.59it/s] 80%|████████  | 1403/1746 [00:42<00:10, 32.57it/s] 81%|████████  | 1407/1746 [00:42<00:10, 32.70it/s] 81%|████████  | 1411/1746 [00:42<00:10, 32.99it/s] 81%|████████  | 1415/1746 [00:43<00:09, 33.14it/s] 81%|████████▏ | 1419/1746 [00:43<00:09, 33.13it/s] 82%|████████▏ | 1423/1746 [00:43<00:09, 33.30it/s] 82%|████████▏ | 1427/1746 [00:43<00:09, 33.09it/s] 82%|████████▏ | 1431/1746 [00:43<00:09, 33.15it/s] 82%|████████▏ | 1435/1746 [00:43<00:09, 33.25it/s] 82%|████████▏ | 1439/1746 [00:43<00:09, 33.39it/s] 83%|████████▎ | 1443/1746 [00:43<00:09, 33.60it/s] 83%|████████▎ | 1447/1746 [00:43<00:09, 33.01it/s] 83%|████████▎ | 1451/1746 [00:44<00:08, 33.18it/s] 83%|████████▎ | 1455/1746 [00:44<00:08, 33.09it/s] 84%|████████▎ | 1459/1746 [00:44<00:08, 33.26it/s] 84%|████████▍ | 1463/1746 [00:44<00:08, 33.19it/s] 84%|████████▍ | 1467/1746 [00:44<00:08, 33.11it/s] 84%|████████▍ | 1471/1746 [00:44<00:08, 33.17it/s] 84%|████████▍ | 1475/1746 [00:44<00:08, 33.23it/s] 85%|████████▍ | 1479/1746 [00:44<00:08, 33.26it/s] 85%|████████▍ | 1483/1746 [00:45<00:07, 33.19it/s] 85%|████████▌ | 1487/1746 [00:45<00:07, 33.15it/s] 85%|████████▌ | 1491/1746 [00:45<00:07, 33.06it/s] 86%|████████▌ | 1495/1746 [00:45<00:07, 33.23it/s] 86%|████████▌ | 1499/1746 [00:45<00:07, 33.18it/s] 86%|████████▌ | 1503/1746 [00:45<00:07, 33.17it/s] 86%|████████▋ | 1507/1746 [00:45<00:07, 33.35it/s] 87%|████████▋ | 1511/1746 [00:45<00:07, 33.36it/s] 87%|████████▋ | 1515/1746 [00:46<00:06, 33.10it/s] 87%|████████▋ | 1519/1746 [00:46<00:06, 32.72it/s] 87%|████████▋ | 1523/1746 [00:46<00:06, 32.52it/s] 87%|████████▋ | 1527/1746 [00:46<00:06, 32.97it/s] 88%|████████▊ | 1531/1746 [00:46<00:06, 33.18it/s]  File "./junk/1692576568342_1925/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576568370_8953/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576568399_3624/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576568428_9405/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576568490_1003/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576568521_5449/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576568550_4852/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576569069_3148/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576569100_3609/main.py", line 37
    sys . stdout . write ( '%s\n' %
                                  ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576569343_6069/main.py", line 7
    for i in range (
                   ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576569806_3973/main.py", line 5
    v = [ False ] * max_n , [ False ] * max_m , [ False ] * max_n , [ False ] * max_m ]
                                                                                      ^
SyntaxError: unmatched ']'


  File "./junk/1692576569956_4411/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576570195_5119/main.py", line 5
    work :
         ^
SyntaxError: invalid syntax


  File "./junk/1692576570434_5199/main.py", line 25
    assert R . dup_count_complex_roots ( f , g , h ) ==
                                                      ^
SyntaxError: invalid syntax


  File "./junk/1692576570557_6620/main.py", line 32
    assert count_divisors (
                          ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576570797_6668/main.py", line 14
    bits_are_in_alt_patrnl_in_given_range ( n , l , r ) :
                                                        ^
SyntaxError: invalid syntax


  File "./junk/1692576571099_6590/main.py", line 1
    def import ( arr , n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576571550_2322/main.py", line 1
    def pythontools . solution ( x1 , y1 , r ) :
                    ^
SyntaxError: invalid syntax


  File "./junk/1692576571790_6297/main.py", line 1
    def import ( n , k ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576572150_4912/main.py", line 23
    return str ( sum )
    ^
SyntaxError: 'return' outside function


  File "./junk/1692576572180_8002/main.py", line 2
    input = np . array ( [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 38 , 39 , 40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 54 , 55 , 56 , 57 , 58 , 59 , 60 , 61 , 62 , 63 , 64 , 65 , 66 , 67 , 68 , 69 , 70 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 99 , 100 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 111 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 ]

SyntaxError: unexpected EOF while parsing


  File "./junk/1692576572242_3813/main.py", line 15
    if b [ p ] [ 0 ] <= b [ i ] [ 0 ] <= b [ i ] [ 0 ] and b [ i ] [ 0 ] <= b [ p ] [ 0 ] and b [ p ] [ 1 ] <= b [ j ] [ 1 ] and b [ j ] [ 1 ] <= b [ p ] [ 1 ] and b [ p ] [ 2 ] <= b [ k ] [ 2 ] and b [ k ] [ 2 ] <= b [ p ] [ 2 ] ) :
                                                                                                                                                                                                                                      ^
SyntaxError: unmatched ')'


  File "./junk/1692576572303_2530/main.py", line 23
    def __init__ ( self , f , 1 << 15 ) :
                              ^
SyntaxError: invalid syntax


  File "./junk/1692576573022_7929/main.py", line 1
    def class Solution ( n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576573364_2392/main.py", line 34
    dp [ max ( 0 , i - a [ k ] ) ] [ min ( 100 , j + e [ k ] ) ] = min ( dp [ max ( 0 , i - a [ k ] ) ] [ min ( 100 , j + e [ k ] ) ] , dp [ i ] [ j ] + 1 ) ]
                                                                                                                                                             ^
SyntaxError: unmatched ']'


 88%|████████▊ | 1535/1746 [00:46<00:06, 32.81it/s] 88%|████████▊ | 1539/1746 [00:46<00:06, 32.93it/s] 88%|████████▊ | 1543/1746 [00:46<00:06, 32.77it/s] 89%|████████▊ | 1547/1746 [00:47<00:06, 32.74it/s] 89%|████████▉ | 1551/1746 [00:47<00:05, 32.88it/s] 89%|████████▉ | 1555/1746 [00:47<00:05, 33.03it/s] 89%|████████▉ | 1559/1746 [00:47<00:05, 33.26it/s] 90%|████████▉ | 1563/1746 [00:47<00:05, 33.37it/s] 90%|████████▉ | 1567/1746 [00:47<00:05, 33.15it/s] 90%|████████▉ | 1571/1746 [00:47<00:05, 33.31it/s] 90%|█████████ | 1575/1746 [00:47<00:05, 33.41it/s] 90%|█████████ | 1579/1746 [00:47<00:05, 33.37it/s] 91%|█████████ | 1583/1746 [00:48<00:04, 33.55it/s] 91%|█████████ | 1587/1746 [00:48<00:04, 33.50it/s] 91%|█████████ | 1591/1746 [00:48<00:04, 33.32it/s] 91%|█████████▏| 1595/1746 [00:48<00:04, 33.11it/s] 92%|█████████▏| 1599/1746 [00:48<00:04, 33.27it/s] 92%|█████████▏| 1603/1746 [00:48<00:04, 33.32it/s] 92%|█████████▏| 1607/1746 [00:48<00:04, 33.58it/s] 92%|█████████▏| 1611/1746 [00:48<00:04, 33.58it/s] 92%|█████████▏| 1615/1746 [00:49<00:03, 33.45it/s] 93%|█████████▎| 1619/1746 [00:49<00:03, 33.07it/s] 93%|█████████▎| 1623/1746 [00:49<00:03, 32.56it/s] 93%|█████████▎| 1627/1746 [00:49<00:03, 32.59it/s] 93%|█████████▎| 1631/1746 [00:49<00:03, 32.69it/s] 94%|█████████▎| 1635/1746 [00:49<00:03, 32.85it/s] 94%|█████████▍| 1639/1746 [00:49<00:03, 33.10it/s] 94%|█████████▍| 1643/1746 [00:49<00:03, 32.78it/s] 94%|█████████▍| 1647/1746 [00:50<00:03, 32.44it/s] 95%|█████████▍| 1651/1746 [00:50<00:02, 32.87it/s]  File "./junk/1692576573663_9867/main.py", line 6
    G . add_nodes_from ( [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 38 , 39 , 40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 54 , 55 , 56 , 57 , 58 , 59 , 60 , 61 , 62 , 63 , 64 , 66 , 67 , 68 , 69 , 70 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 81 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 , 98 , 99 , 100 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 111 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 111 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , )

SyntaxError: closing parenthesis ')' does not match opening parenthesis '['


  File "./junk/1692576574483_2925/main.py", line 4
    n , m , l , ans = 0l , 0l , 0l , 0l , 0l , 0l
                       ^
SyntaxError: invalid syntax


  File "./junk/1692576574992_5428/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576575171_3691/main.py", line 20
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) ==
                                            ^
SyntaxError: invalid syntax


  File "./junk/1692576575624_9734/main.py", line 4
    b . append ( b [ n + i ] = a [ i ] )
                 ^
SyntaxError: expression cannot contain assignment, perhaps you meant "=="?


  File "./junk/1692576575683_7725/main.py", line 5
    root = Node ( yield id , 0 , sys . argv [ 2 ] )
                  ^
SyntaxError: invalid syntax


  File "./junk/1692576575713_2034/main.py", line 32
    return dp [ currentTime ] [ currentSpeed ] = bestAns
                                               ^
SyntaxError: invalid syntax


  File "./junk/1692576576253_2967/main.py", line 1
    def import ( root_data ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576576283_2293/main.py", line 12
    return dp [ idx ] [ diff ] = ans % MOD
                               ^
SyntaxError: invalid syntax


  File "./junk/1692576576380_3760/main.py", line 26
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ
                                     ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692576576744_5653/main.py", line 1
    def class GCD ( a , b ) :
        ^
SyntaxError: invalid syntax


 95%|█████████▍| 1655/1746 [00:50<00:02, 32.88it/s] 95%|█████████▌| 1659/1746 [00:50<00:02, 32.93it/s] 95%|█████████▌| 1663/1746 [00:50<00:02, 33.13it/s] 95%|█████████▌| 1667/1746 [00:50<00:02, 33.34it/s] 96%|█████████▌| 1671/1746 [00:50<00:02, 33.14it/s] 96%|█████████▌| 1675/1746 [00:50<00:02, 33.11it/s] 96%|█████████▌| 1679/1746 [00:50<00:02, 33.02it/s] 96%|█████████▋| 1683/1746 [00:51<00:01, 33.00it/s] 97%|█████████▋| 1687/1746 [00:51<00:01, 33.11it/s]  File "./junk/1692576577353_3185/main.py", line 3
    ''' p}

   ^
SyntaxError: EOF while scanning triple-quoted string literal


  File "./junk/1692576577504_3369/main.py", line 152
    import
         ^
SyntaxError: invalid syntax


  File "./junk/1692576577714_7836/main.py", line 1
    def import ( arr , n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576578046_1903/main.py", line 3
    return C
    ^
SyntaxError: invalid syntax


  File "./junk/1692576578106_5651/main.py", line 49
    b = f .
          ^
SyntaxError: invalid syntax


  File "./junk/1692576578289_6989/main.py", line 2
    s = subprocess . Popen ( [ sys . executable , '-c' , ' import   sys ,   getopt ,   getopt ,   getopt _ long ,   getopt _ short ,   getopt _ long ,   getopt _ getopt ,   getopt _ getopt ] , stdout = subprocess . PIPE , stderr = subprocess . PIPE )
                                                                                                                                                                                                                                                         ^
SyntaxError: EOL while scanning string literal


  File "./junk/1692576578409_9904/main.py", line 10
    print ( """ SPACETOKEN - d , SPACETOKEN - e : SPACETOKEN decode SPACETOKEN ASCII SPACETOKEN strings SPACETOKEN ( default

SyntaxError: EOF while scanning triple-quoted string literal

 97%|█████████▋| 1691/1746 [00:51<00:01, 33.31it/s] 97%|█████████▋| 1695/1746 [00:51<00:01, 33.43it/s] 97%|█████████▋| 1699/1746 [00:51<00:01, 33.23it/s] 98%|█████████▊| 1703/1746 [00:51<00:01, 33.26it/s] 98%|█████████▊| 1707/1746 [00:51<00:01, 31.12it/s] 98%|█████████▊| 1711/1746 [00:51<00:01, 31.49it/s] 98%|█████████▊| 1715/1746 [00:52<00:00, 32.04it/s] 98%|█████████▊| 1719/1746 [00:52<00:00, 31.64it/s] 99%|█████████▊| 1723/1746 [00:52<00:00, 32.05it/s] 99%|█████████▉| 1727/1746 [00:52<00:00, 32.42it/s] 99%|█████████▉| 1731/1746 [00:52<00:00, 32.57it/s] 99%|█████████▉| 1735/1746 [00:52<00:00, 32.77it/s]100%|█████████▉| 1739/1746 [00:52<00:00, 32.94it/s]100%|█████████▉| 1743/1746 [00:52<00:00, 33.01it/s]100%|██████████| 1746/1746 [00:53<00:00, 32.92it/s]

  File "./junk/1692576578829_2464/main.py", line 1
    def import ( arr , n ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576578892_3925/main.py", line 15
    outer :
          ^
SyntaxError: invalid syntax


Sorry: IndentationError: expected an indented block (main.py, line 11)

  File "./junk/1692576579006_3255/main.py", line 1
    def class Solution ( matrix ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576579068_8249/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692576579220_1999/main.py", line 6
    current = int ( math . pow ( yield i , 2 ) )
                                 ^
SyntaxError: invalid syntax


  File "./junk/1692576579318_1187/main.py", line 20
    pos1 , pos2 += n - x
    ^
SyntaxError: illegal expression for augmented assignment


  File "./junk/1692576579410_4874/main.py", line 15
    do :
       ^
SyntaxError: invalid syntax


  File "./junk/1692576579559_9860/main.py", line 3
    dp

SyntaxError: unexpected EOF while parsing


  File "./junk/1692576579712_1731/main.py", line 18
    break outer
          ^
SyntaxError: invalid syntax


  File "./junk/1692576580134_7371/main.py", line 22
    else :
    ^
SyntaxError: invalid syntax


Success - 1538, Errors - 208 [Syntax - 207, Indent - 1]
CompAcc: 1538/1746 = 88.08705612829324 %

BLEU:		32.07
Exact Match:		0.00

Ngram match:	34.08
Weighted ngram:	38.84
Syntax match:	32.63
Dataflow match:	34.72
CodeBLEU score: 35.07

  0%|          | 0/1746 [00:00<?, ?it/s]  0%|          | 2/1746 [00:00<01:57, 14.85it/s]  0%|          | 4/1746 [00:03<25:52,  1.12it/s]  0%|          | 7/1746 [00:03<12:03,  2.40it/s]  1%|          | 10/1746 [00:03<07:15,  3.99it/s]  1%|          | 12/1746 [00:03<06:17,  4.60it/s]  1%|          | 15/1746 [00:03<04:16,  6.74it/s]  1%|          | 18/1746 [00:03<03:13,  8.92it/s]  1%|          | 20/1746 [00:03<02:47, 10.32it/s]  1%|▏         | 23/1746 [00:04<02:11, 13.13it/s]  1%|▏         | 26/1746 [00:04<01:47, 15.96it/s]  2%|▏         | 29/1746 [00:04<02:41, 10.63it/s]  2%|▏         | 32/1746 [00:04<02:21, 12.13it/s]  2%|▏         | 34/1746 [00:05<02:44, 10.39it/s]  2%|▏         | 37/1746 [00:05<02:16, 12.48it/s]  2%|▏         | 40/1746 [00:05<01:57, 14.50it/s]  2%|▏         | 43/1746 [00:05<01:41, 16.76it/s]  3%|▎         | 46/1746 [00:05<01:30, 18.70it/s]  3%|▎         | 49/1746 [00:05<01:23, 20.41it/s]  3%|▎         | 52/1746 [00:05<01:18, 21.63it/s]  3%|▎         | 55/1746 [00:05<01:15, 22.29it/s]  3%|▎         | 58/1746 [00:06<01:14, 22.70it/s]  3%|▎         | 61/1746 [00:06<01:11, 23.48it/s]  4%|▎         | 64/1746 [00:06<01:12, 23.06it/s]  4%|▍         | 67/1746 [00:06<01:10, 23.83it/s]  4%|▍         | 70/1746 [00:06<01:08, 24.59it/s]  4%|▍         | 73/1746 [00:06<01:12, 23.21it/s]  4%|▍         | 76/1746 [00:06<01:11, 23.52it/s]  5%|▍         | 79/1746 [00:06<01:07, 24.78it/s]  5%|▍         | 82/1746 [00:07<01:20, 20.61it/s]  5%|▍         | 85/1746 [00:07<01:17, 21.44it/s]  5%|▌         | 88/1746 [00:07<01:12, 22.89it/s]  5%|▌         | 91/1746 [00:08<02:30, 11.01it/s]  5%|▌         | 94/1746 [00:08<02:06, 13.05it/s]  5%|▌         | 96/1746 [00:08<02:10, 12.66it/s]  6%|▌         | 99/1746 [00:08<01:47, 15.26it/s]  6%|▌         | 102/1746 [00:08<01:35, 17.17it/s]  6%|▌         | 105/1746 [00:08<01:27, 18.77it/s]  6%|▌         | 108/1746 [00:08<01:19, 20.55it/s]  6%|▋         | 111/1746 [00:08<01:14, 22.08it/s]  7%|▋         | 114/1746 [00:09<01:27, 18.73it/s]  7%|▋         | 117/1746 [00:09<01:20, 20.27it/s]  7%|▋         | 120/1746 [00:09<01:15, 21.41it/s]  7%|▋         | 123/1746 [00:09<01:11, 22.69it/s]  7%|▋         | 126/1746 [00:09<01:11, 22.57it/s]  7%|▋         | 129/1746 [00:09<01:07, 23.88it/s]  8%|▊         | 132/1746 [00:09<01:07, 23.86it/s]  8%|▊         | 135/1746 [00:09<01:06, 24.22it/s]  8%|▊         | 138/1746 [00:10<01:13, 21.97it/s]  8%|▊         | 141/1746 [00:10<01:10, 22.81it/s]  8%|▊         | 144/1746 [00:10<01:14, 21.55it/s]  8%|▊         | 147/1746 [00:10<01:18, 20.32it/s]  9%|▊         | 150/1746 [00:10<01:12, 21.99it/s]  9%|▉         | 153/1746 [00:10<01:07, 23.60it/s]  9%|▉         | 156/1746 [00:11<01:37, 16.31it/s]  9%|▉         | 159/1746 [00:11<01:29, 17.72it/s]  9%|▉         | 162/1746 [00:11<01:21, 19.54it/s]  9%|▉         | 165/1746 [00:11<01:14, 21.22it/s] 10%|▉         | 168/1746 [00:11<02:04, 12.65it/s] 10%|▉         | 171/1746 [00:12<01:49, 14.36it/s] 10%|▉         | 174/1746 [00:12<01:36, 16.34it/s] 10%|█         | 177/1746 [00:12<01:27, 17.85it/s] 10%|█         | 180/1746 [00:12<01:22, 19.02it/s] 10%|█         | 183/1746 [00:12<01:19, 19.55it/s] 11%|█         | 186/1746 [00:12<01:15, 20.63it/s] 11%|█         | 189/1746 [00:12<01:11, 21.89it/s] 11%|█         | 192/1746 [00:13<01:10, 21.94it/s] 11%|█         | 195/1746 [00:13<01:07, 22.86it/s] 11%|█▏        | 198/1746 [00:13<01:29, 17.32it/s] 12%|█▏        | 201/1746 [00:13<01:22, 18.65it/s] 12%|█▏        | 204/1746 [00:13<01:19, 19.31it/s] 12%|█▏        | 207/1746 [00:13<01:15, 20.37it/s] 12%|█▏        | 210/1746 [00:13<01:11, 21.57it/s] 12%|█▏        | 213/1746 [00:14<01:07, 22.85it/s] 12%|█▏        | 216/1746 [00:14<01:04, 23.64it/s] 13%|█▎        | 219/1746 [00:14<01:05, 23.48it/s] 13%|█▎        | 222/1746 [00:14<01:40, 15.19it/s] 13%|█▎        | 225/1746 [00:14<01:26, 17.51it/s] 13%|█▎        | 228/1746 [00:15<02:24, 10.52it/s] 13%|█▎        | 231/1746 [00:15<02:01, 12.45it/s] 13%|█▎        | 233/1746 [00:15<01:52, 13.50it/s] 13%|█▎        | 235/1746 [00:15<01:43, 14.63it/s] 14%|█▎        | 238/1746 [00:15<01:52, 13.43it/s] 14%|█▍        | 241/1746 [00:16<01:36, 15.66it/s] 14%|█▍        | 244/1746 [00:16<01:23, 17.95it/s] 14%|█▍        | 247/1746 [00:16<01:18, 18.99it/s] 14%|█▍        | 250/1746 [00:16<01:12, 20.60it/s] 14%|█▍        | 253/1746 [00:16<01:09, 21.63it/s] 15%|█▍        | 256/1746 [00:16<01:03, 23.33it/s] 15%|█▍        | 259/1746 [00:16<01:00, 24.45it/s] 15%|█▌        | 262/1746 [00:16<01:03, 23.50it/s] 15%|█▌        | 265/1746 [00:17<01:03, 23.21it/s] 15%|█▌        | 268/1746 [00:17<01:04, 23.09it/s] 16%|█▌        | 271/1746 [00:17<01:03, 23.30it/s] 16%|█▌        | 274/1746 [00:17<01:01, 23.85it/s] 16%|█▌        | 277/1746 [00:17<01:06, 22.18it/s] 16%|█▌        | 280/1746 [00:17<01:08, 21.33it/s] 16%|█▌        | 283/1746 [00:17<01:07, 21.73it/s] 16%|█▋        | 286/1746 [00:17<01:05, 22.43it/s] 17%|█▋        | 289/1746 [00:18<01:00, 23.91it/s] 17%|█▋        | 292/1746 [00:18<01:00, 24.16it/s] 17%|█▋        | 295/1746 [00:18<01:00, 23.90it/s] 17%|█▋        | 298/1746 [00:18<01:01, 23.73it/s] 17%|█▋        | 301/1746 [00:18<00:57, 25.22it/s] 17%|█▋        | 304/1746 [00:18<00:57, 25.28it/s] 18%|█▊        | 307/1746 [00:18<01:02, 23.04it/s] 18%|█▊        | 310/1746 [00:18<01:02, 23.06it/s] 18%|█▊        | 313/1746 [00:19<00:58, 24.36it/s] 18%|█▊        | 316/1746 [00:19<00:57, 24.69it/s] 18%|█▊        | 319/1746 [00:19<00:57, 24.60it/s] 18%|█▊        | 322/1746 [00:19<01:01, 23.03it/s] 19%|█▊        | 325/1746 [00:19<00:59, 23.88it/s] 19%|█▉        | 328/1746 [00:19<01:00, 23.55it/s] 19%|█▉        | 331/1746 [00:19<00:59, 23.94it/s] 19%|█▉        | 334/1746 [00:19<00:56, 24.95it/s] 19%|█▉        | 337/1746 [00:20<02:05, 11.27it/s] 19%|█▉        | 340/1746 [00:20<01:45, 13.35it/s] 20%|█▉        | 343/1746 [00:20<01:29, 15.61it/s] 20%|█▉        | 346/1746 [00:20<01:22, 17.06it/s] 20%|█▉        | 349/1746 [00:21<01:13, 18.88it/s] 20%|██        | 352/1746 [00:21<01:12, 19.22it/s] 20%|██        | 355/1746 [00:21<01:08, 20.39it/s] 21%|██        | 358/1746 [00:21<01:07, 20.64it/s] 21%|██        | 361/1746 [00:21<01:51, 12.39it/s] 21%|██        | 364/1746 [00:22<01:33, 14.80it/s] 21%|██        | 367/1746 [00:22<01:21, 16.92it/s] 21%|██        | 370/1746 [00:22<01:12, 18.93it/s] 21%|██▏       | 373/1746 [00:22<01:18, 17.53it/s] 22%|██▏       | 376/1746 [00:22<01:11, 19.22it/s] 22%|██▏       | 379/1746 [00:22<01:04, 21.06it/s] 22%|██▏       | 382/1746 [00:22<00:59, 22.76it/s] 22%|██▏       | 385/1746 [00:22<00:58, 23.27it/s] 22%|██▏       | 388/1746 [00:23<01:01, 22.24it/s] 22%|██▏       | 391/1746 [00:23<00:59, 22.76it/s] 23%|██▎       | 394/1746 [00:23<01:00, 22.44it/s] 23%|██▎       | 397/1746 [00:23<00:58, 22.99it/s] 23%|██▎       | 400/1746 [00:23<00:59, 22.66it/s] 23%|██▎       | 403/1746 [00:23<01:02, 21.56it/s] 23%|██▎       | 406/1746 [00:23<00:59, 22.61it/s] 23%|██▎       | 409/1746 [00:23<00:54, 24.38it/s] 24%|██▎       | 412/1746 [00:24<00:52, 25.52it/s] 24%|██▍       | 415/1746 [00:24<01:21, 16.31it/s] 24%|██▍       | 418/1746 [00:24<01:13, 18.13it/s] 24%|██▍       | 421/1746 [00:24<01:10, 18.77it/s] 24%|██▍       | 424/1746 [00:24<01:04, 20.63it/s] 24%|██▍       | 427/1746 [00:24<00:59, 22.33it/s] 25%|██▍       | 430/1746 [00:25<00:57, 22.74it/s] 25%|██▍       | 433/1746 [00:25<02:03, 10.60it/s] 25%|██▍       | 436/1746 [00:25<01:40, 13.03it/s] 25%|██▌       | 439/1746 [00:25<01:24, 15.48it/s] 25%|██▌       | 442/1746 [00:25<01:14, 17.45it/s] 25%|██▌       | 445/1746 [00:26<01:09, 18.81it/s] 26%|██▌       | 448/1746 [00:26<01:05, 19.69it/s] 26%|██▌       | 451/1746 [00:26<01:01, 20.92it/s] 26%|██▌       | 454/1746 [00:26<00:58, 22.24it/s] 26%|██▌       | 457/1746 [00:26<00:57, 22.61it/s] 26%|██▋       | 460/1746 [00:26<01:05, 19.53it/s] 27%|██▋       | 463/1746 [00:26<01:00, 21.13it/s] 27%|██▋       | 466/1746 [00:27<00:58, 21.77it/s] 27%|██▋       | 469/1746 [00:27<00:57, 22.30it/s] 27%|██▋       | 472/1746 [00:27<00:56, 22.62it/s] 27%|██▋       | 475/1746 [00:27<00:54, 23.29it/s] 27%|██▋       | 478/1746 [00:27<00:54, 23.43it/s] 28%|██▊       | 481/1746 [00:27<00:53, 23.48it/s] 28%|██▊       | 484/1746 [00:27<00:53, 23.61it/s] 28%|██▊       | 487/1746 [00:27<00:51, 24.55it/s] 28%|██▊       | 490/1746 [00:28<00:50, 25.07it/s] 28%|██▊       | 493/1746 [00:28<00:49, 25.44it/s] 28%|██▊       | 496/1746 [00:28<00:48, 25.64it/s] 29%|██▊       | 499/1746 [00:28<00:49, 25.42it/s] 29%|██▉       | 502/1746 [00:28<00:59, 20.83it/s] 29%|██▉       | 505/1746 [00:28<01:10, 17.63it/s] 29%|██▉       | 508/1746 [00:28<01:03, 19.49it/s] 29%|██▉       | 511/1746 [00:29<00:59, 20.89it/s] 29%|██▉       | 514/1746 [00:29<00:59, 20.79it/s] 30%|██▉       | 517/1746 [00:29<01:00, 20.44it/s] 30%|██▉       | 520/1746 [00:29<00:55, 21.95it/s] 30%|██▉       | 523/1746 [00:29<00:52, 23.18it/s] 30%|███       | 526/1746 [00:29<00:51, 23.71it/s] 30%|███       | 529/1746 [00:29<00:48, 25.21it/s] 30%|███       | 532/1746 [00:29<00:48, 24.82it/s] 31%|███       | 535/1746 [00:30<00:49, 24.64it/s] 31%|███       | 538/1746 [00:30<00:47, 25.65it/s] 31%|███       | 541/1746 [00:30<00:47, 25.18it/s] 31%|███       | 544/1746 [00:30<00:49, 24.38it/s] 31%|███▏      | 547/1746 [00:30<00:47, 25.04it/s] 32%|███▏      | 550/1746 [00:30<00:50, 23.78it/s] 32%|███▏      | 553/1746 [00:30<00:52, 22.77it/s] 32%|███▏      | 556/1746 [00:30<00:54, 21.90it/s] 32%|███▏      | 559/1746 [00:31<00:50, 23.39it/s] 32%|███▏      | 562/1746 [00:31<00:50, 23.55it/s] 32%|███▏      | 565/1746 [00:31<00:54, 21.81it/s] 33%|███▎      | 568/1746 [00:31<00:49, 23.58it/s] 33%|███▎      | 571/1746 [00:31<00:48, 24.08it/s] 33%|███▎      | 574/1746 [00:31<00:47, 24.79it/s] 33%|███▎      | 577/1746 [00:31<00:45, 25.63it/s] 33%|███▎      | 580/1746 [00:31<00:45, 25.37it/s] 33%|███▎      | 583/1746 [00:32<00:45, 25.68it/s] 34%|███▎      | 586/1746 [00:32<00:44, 25.95it/s] 34%|███▎      | 589/1746 [00:32<00:44, 26.01it/s] 34%|███▍      | 592/1746 [00:32<00:49, 23.18it/s] 34%|███▍      | 595/1746 [00:32<00:52, 22.10it/s] 34%|███▍      | 598/1746 [00:32<00:50, 22.89it/s] 34%|███▍      | 601/1746 [00:32<00:48, 23.40it/s] 35%|███▍      | 604/1746 [00:32<00:47, 24.02it/s] 35%|███▍      | 607/1746 [00:33<02:05,  9.07it/s] 35%|███▍      | 610/1746 [00:33<01:40, 11.32it/s] 35%|███▌      | 613/1746 [00:33<01:23, 13.62it/s] 35%|███▌      | 616/1746 [00:34<01:11, 15.83it/s] 35%|███▌      | 619/1746 [00:34<01:04, 17.36it/s] 36%|███▌      | 622/1746 [00:34<00:57, 19.46it/s] 36%|███▌      | 625/1746 [00:34<00:56, 19.77it/s] 36%|███▌      | 628/1746 [00:34<00:52, 21.43it/s] 36%|███▌      | 631/1746 [00:34<00:48, 22.91it/s] 36%|███▋      | 634/1746 [00:34<00:46, 23.66it/s] 36%|███▋      | 637/1746 [00:34<00:45, 24.43it/s] 37%|███▋      | 640/1746 [00:35<00:46, 23.79it/s] 37%|███▋      | 643/1746 [00:35<00:47, 23.46it/s] 37%|███▋      | 646/1746 [00:35<00:50, 21.92it/s] 37%|███▋      | 649/1746 [00:35<00:48, 22.47it/s] 37%|███▋      | 652/1746 [00:35<00:47, 23.13it/s] 38%|███▊      | 655/1746 [00:35<00:44, 24.54it/s] 38%|███▊      | 658/1746 [00:35<00:45, 23.89it/s] 38%|███▊      | 661/1746 [00:35<00:43, 25.08it/s] 38%|███▊      | 664/1746 [00:36<00:43, 24.71it/s] 38%|███▊      | 667/1746 [00:36<00:44, 24.34it/s] 38%|███▊      | 670/1746 [00:36<00:42, 25.32it/s] 39%|███▊      | 673/1746 [00:36<00:52, 20.60it/s] 39%|███▊      | 676/1746 [00:36<00:47, 22.48it/s] 39%|███▉      | 679/1746 [00:36<00:50, 21.31it/s] 39%|███▉      | 682/1746 [00:36<00:52, 20.40it/s] 39%|███▉      | 685/1746 [00:37<00:49, 21.49it/s] 39%|███▉      | 688/1746 [00:37<00:47, 22.27it/s] 40%|███▉      | 691/1746 [00:37<00:44, 23.56it/s] 40%|███▉      | 694/1746 [00:37<00:43, 24.45it/s] 40%|███▉      | 697/1746 [00:37<00:41, 25.24it/s] 40%|████      | 700/1746 [00:37<00:40, 25.68it/s] 40%|████      | 703/1746 [00:37<00:41, 24.96it/s] 40%|████      | 706/1746 [00:37<00:41, 25.28it/s] 41%|████      | 709/1746 [00:37<00:39, 26.03it/s] 41%|████      | 712/1746 [00:38<00:39, 25.89it/s] 41%|████      | 715/1746 [00:38<00:39, 26.41it/s] 41%|████      | 718/1746 [00:38<00:39, 25.93it/s] 41%|████▏     | 721/1746 [00:38<00:41, 24.43it/s] 41%|████▏     | 724/1746 [00:38<00:42, 24.15it/s] 42%|████▏     | 727/1746 [00:38<00:40, 25.33it/s] 42%|████▏     | 730/1746 [00:38<00:40, 24.83it/s] 42%|████▏     | 733/1746 [00:38<00:41, 24.55it/s] 42%|████▏     | 736/1746 [00:39<00:39, 25.49it/s] 42%|████▏     | 739/1746 [00:39<00:40, 24.96it/s] 42%|████▏     | 742/1746 [00:39<00:41, 24.34it/s] 43%|████▎     | 745/1746 [00:39<00:41, 23.91it/s] 43%|████▎     | 748/1746 [00:39<00:41, 23.83it/s] 43%|████▎     | 751/1746 [00:39<00:40, 24.80it/s] 43%|████▎     | 754/1746 [00:39<00:40, 24.36it/s] 43%|████▎     | 757/1746 [00:39<00:40, 24.69it/s] 44%|████▎     | 760/1746 [00:40<00:39, 25.11it/s] 44%|████▎     | 763/1746 [00:40<00:50, 19.42it/s] 44%|████▍     | 766/1746 [00:40<00:50, 19.57it/s] 44%|████▍     | 769/1746 [00:40<00:49, 19.81it/s] 44%|████▍     | 772/1746 [00:40<00:44, 21.67it/s] 44%|████▍     | 775/1746 [00:40<00:45, 21.20it/s] 45%|████▍     | 778/1746 [00:41<00:48, 19.99it/s] 45%|████▍     | 781/1746 [00:41<00:46, 20.76it/s] 45%|████▍     | 784/1746 [00:41<00:44, 21.81it/s] 45%|████▌     | 787/1746 [00:41<00:40, 23.53it/s] 45%|████▌     | 790/1746 [00:41<00:40, 23.59it/s] 45%|████▌     | 793/1746 [00:41<00:38, 24.66it/s] 46%|████▌     | 796/1746 [00:41<00:37, 25.13it/s] 46%|████▌     | 799/1746 [00:41<00:38, 24.40it/s] 46%|████▌     | 802/1746 [00:41<00:38, 24.56it/s] 46%|████▌     | 805/1746 [00:42<00:37, 25.19it/s] 46%|████▋     | 808/1746 [00:42<00:36, 25.43it/s] 46%|████▋     | 811/1746 [00:42<00:37, 25.07it/s] 47%|████▋     | 814/1746 [00:43<01:53,  8.19it/s] 47%|████▋     | 816/1746 [00:43<01:43,  9.00it/s] 47%|████▋     | 818/1746 [00:43<01:30, 10.28it/s] 47%|████▋     | 821/1746 [00:43<01:11, 12.94it/s] 47%|████▋     | 824/1746 [00:43<00:59, 15.47it/s] 47%|████▋     | 827/1746 [00:43<00:50, 18.15it/s] 48%|████▊     | 830/1746 [00:44<01:03, 14.32it/s] 48%|████▊     | 833/1746 [00:44<00:57, 15.79it/s] 48%|████▊     | 836/1746 [00:44<00:52, 17.35it/s] 48%|████▊     | 839/1746 [00:44<00:46, 19.52it/s] 48%|████▊     | 842/1746 [00:44<00:43, 20.65it/s] 48%|████▊     | 845/1746 [00:44<00:41, 21.65it/s] 49%|████▊     | 848/1746 [00:44<00:40, 22.25it/s] 49%|████▊     | 851/1746 [00:45<00:39, 22.59it/s] 49%|████▉     | 854/1746 [00:45<00:37, 24.02it/s] 49%|████▉     | 857/1746 [00:45<00:37, 23.94it/s] 49%|████▉     | 860/1746 [00:45<00:35, 24.65it/s] 49%|████▉     | 863/1746 [00:45<00:37, 23.78it/s] 50%|████▉     | 866/1746 [00:45<00:35, 24.95it/s] 50%|████▉     | 869/1746 [00:48<03:53,  3.75it/s] 50%|████▉     | 872/1746 [00:48<02:54,  5.02it/s] 50%|█████     | 875/1746 [00:48<02:12,  6.58it/s] 50%|█████     | 878/1746 [00:48<01:43,  8.35it/s] 50%|█████     | 881/1746 [00:48<01:30,  9.60it/s] 51%|█████     | 884/1746 [00:48<01:14, 11.60it/s] 51%|█████     | 887/1746 [00:48<01:01, 13.90it/s] 51%|█████     | 890/1746 [00:48<00:52, 16.30it/s] 51%|█████     | 893/1746 [00:49<00:46, 18.42it/s] 51%|█████▏    | 896/1746 [00:49<00:43, 19.41it/s] 51%|█████▏    | 899/1746 [00:49<00:43, 19.47it/s] 52%|█████▏    | 902/1746 [00:49<00:41, 20.53it/s] 52%|█████▏    | 905/1746 [00:49<00:39, 21.49it/s] 52%|█████▏    | 908/1746 [00:49<00:37, 22.36it/s] 52%|█████▏    | 911/1746 [00:49<00:34, 23.91it/s] 52%|█████▏    | 914/1746 [00:49<00:36, 23.03it/s] 53%|█████▎    | 917/1746 [00:50<00:35, 23.22it/s] 53%|█████▎    | 920/1746 [00:50<00:34, 24.17it/s] 53%|█████▎    | 923/1746 [00:50<00:34, 24.16it/s] 53%|█████▎    | 926/1746 [00:50<00:33, 24.45it/s] 53%|█████▎    | 929/1746 [00:50<00:33, 24.55it/s] 53%|█████▎    | 932/1746 [00:50<00:32, 24.97it/s] 54%|█████▎    | 935/1746 [00:50<00:33, 24.34it/s] 54%|█████▎    | 938/1746 [00:50<00:32, 24.71it/s] 54%|█████▍    | 941/1746 [00:51<00:33, 23.98it/s] 54%|█████▍    | 944/1746 [00:51<00:33, 24.24it/s] 54%|█████▍    | 947/1746 [00:51<00:40, 19.58it/s] 54%|█████▍    | 950/1746 [00:51<00:42, 18.73it/s] 55%|█████▍    | 953/1746 [00:51<00:38, 20.50it/s] 55%|█████▍    | 956/1746 [00:51<00:37, 21.21it/s] 55%|█████▍    | 959/1746 [00:51<00:34, 22.88it/s] 55%|█████▌    | 962/1746 [00:52<00:35, 22.30it/s] 55%|█████▌    | 965/1746 [00:52<00:34, 22.95it/s] 55%|█████▌    | 968/1746 [00:52<00:37, 20.89it/s] 56%|█████▌    | 971/1746 [00:52<00:36, 21.09it/s] 56%|█████▌    | 974/1746 [00:52<00:36, 21.36it/s] 56%|█████▌    | 977/1746 [00:52<00:36, 21.23it/s] 56%|█████▌    | 980/1746 [00:52<00:36, 21.19it/s] 56%|█████▋    | 983/1746 [00:53<00:34, 21.95it/s] 56%|█████▋    | 986/1746 [00:53<00:32, 23.06it/s] 57%|█████▋    | 989/1746 [00:53<00:33, 22.46it/s] 57%|█████▋    | 992/1746 [00:53<00:32, 22.86it/s] 57%|█████▋    | 995/1746 [00:53<00:32, 23.11it/s] 57%|█████▋    | 998/1746 [00:53<00:31, 23.98it/s] 57%|█████▋    | 1001/1746 [00:53<00:29, 25.45it/s] 58%|█████▊    | 1004/1746 [00:54<00:37, 20.03it/s] 58%|█████▊    | 1007/1746 [00:54<00:35, 20.96it/s] 58%|█████▊    | 1010/1746 [00:54<00:35, 20.71it/s] 58%|█████▊    | 1013/1746 [00:54<00:33, 21.85it/s] 58%|█████▊    | 1016/1746 [00:54<00:31, 22.91it/s] 58%|█████▊    | 1019/1746 [00:54<00:30, 23.69it/s] 59%|█████▊    | 1022/1746 [00:54<00:30, 23.82it/s] 59%|█████▊    | 1025/1746 [00:54<00:30, 23.64it/s] 59%|█████▉    | 1028/1746 [00:55<00:29, 24.64it/s] 59%|█████▉    | 1031/1746 [00:55<00:29, 24.31it/s] 59%|█████▉    | 1034/1746 [00:55<00:30, 23.72it/s] 59%|█████▉    | 1037/1746 [00:55<00:28, 24.90it/s] 60%|█████▉    | 1040/1746 [00:55<00:29, 23.89it/s] 60%|█████▉    | 1043/1746 [00:55<00:29, 24.21it/s] 60%|█████▉    | 1046/1746 [00:56<01:37,  7.20it/s] 60%|██████    | 1049/1746 [00:56<01:15,  9.22it/s] 60%|██████    | 1052/1746 [00:56<01:01, 11.34it/s] 60%|██████    | 1055/1746 [00:57<00:51, 13.37it/s] 61%|██████    | 1058/1746 [00:57<01:05, 10.58it/s] 61%|██████    | 1060/1746 [00:59<03:23,  3.37it/s] 61%|██████    | 1062/1746 [01:00<04:09,  2.74it/s] 61%|██████    | 1065/1746 [01:00<02:53,  3.93it/s] 61%|██████    | 1068/1746 [01:00<02:04,  5.43it/s] 61%|██████▏   | 1071/1746 [01:01<01:33,  7.21it/s] 62%|██████▏   | 1074/1746 [01:01<01:12,  9.25it/s] 62%|██████▏   | 1077/1746 [01:01<00:58, 11.47it/s] 62%|██████▏   | 1080/1746 [01:01<00:49, 13.39it/s] 62%|██████▏   | 1083/1746 [01:01<00:42, 15.69it/s] 62%|██████▏   | 1086/1746 [01:01<00:38, 17.06it/s] 62%|██████▏   | 1089/1746 [01:01<00:35, 18.51it/s] 63%|██████▎   | 1092/1746 [01:01<00:32, 20.39it/s] 63%|██████▎   | 1095/1746 [01:02<00:30, 21.39it/s] 63%|██████▎   | 1098/1746 [01:02<00:29, 21.73it/s] 63%|██████▎   | 1101/1746 [01:02<00:30, 21.43it/s] 63%|██████▎   | 1104/1746 [01:02<00:28, 22.82it/s] 63%|██████▎   | 1107/1746 [01:02<00:26, 24.16it/s] 64%|██████▎   | 1110/1746 [01:02<00:25, 24.77it/s] 64%|██████▎   | 1113/1746 [01:02<00:24, 25.34it/s] 64%|██████▍   | 1116/1746 [01:02<00:24, 25.74it/s] 64%|██████▍   | 1119/1746 [01:03<00:25, 24.16it/s] 64%|██████▍   | 1122/1746 [01:03<00:25, 24.85it/s] 64%|██████▍   | 1125/1746 [01:03<00:24, 25.12it/s] 65%|██████▍   | 1128/1746 [01:03<00:24, 25.62it/s] 65%|██████▍   | 1131/1746 [01:03<00:24, 24.95it/s] 65%|██████▍   | 1134/1746 [01:03<00:24, 25.04it/s] 65%|██████▌   | 1137/1746 [01:03<00:24, 25.17it/s] 65%|██████▌   | 1140/1746 [01:03<00:24, 24.63it/s] 65%|██████▌   | 1143/1746 [01:03<00:23, 25.28it/s] 66%|██████▌   | 1146/1746 [01:04<00:23, 25.62it/s] 66%|██████▌   | 1149/1746 [01:04<00:23, 25.00it/s] 66%|██████▌   | 1152/1746 [01:04<00:24, 24.05it/s] 66%|██████▌   | 1155/1746 [01:04<00:24, 24.60it/s] 66%|██████▋   | 1158/1746 [01:04<00:24, 24.29it/s] 66%|██████▋   | 1161/1746 [01:04<00:29, 20.11it/s] 67%|██████▋   | 1164/1746 [01:04<00:30, 19.31it/s] 67%|██████▋   | 1167/1746 [01:05<00:33, 17.27it/s] 67%|██████▋   | 1170/1746 [01:05<00:29, 19.51it/s] 67%|██████▋   | 1173/1746 [01:05<00:27, 21.15it/s] 67%|██████▋   | 1176/1746 [01:05<00:25, 22.12it/s] 68%|██████▊   | 1179/1746 [01:05<00:25, 22.34it/s] 68%|██████▊   | 1182/1746 [01:05<00:24, 23.19it/s] 68%|██████▊   | 1185/1746 [01:05<00:23, 24.13it/s] 68%|██████▊   | 1188/1746 [01:06<00:23, 23.38it/s] 68%|██████▊   | 1191/1746 [01:06<00:25, 21.87it/s] 68%|██████▊   | 1194/1746 [01:06<00:24, 22.17it/s] 69%|██████▊   | 1197/1746 [01:06<00:24, 22.25it/s] 69%|██████▊   | 1200/1746 [01:06<00:23, 23.14it/s] 69%|██████▉   | 1203/1746 [01:06<00:24, 21.78it/s] 69%|██████▉   | 1206/1746 [01:06<00:24, 22.43it/s] 69%|██████▉   | 1209/1746 [01:06<00:23, 23.11it/s] 69%|██████▉   | 1212/1746 [01:07<00:24, 22.05it/s] 70%|██████▉   | 1215/1746 [01:07<00:22, 23.14it/s] 70%|██████▉   | 1218/1746 [01:07<00:22, 23.28it/s] 70%|██████▉   | 1221/1746 [01:07<00:21, 24.40it/s] 70%|███████   | 1224/1746 [01:07<00:20, 25.10it/s] 70%|███████   | 1227/1746 [01:07<00:20, 25.23it/s] 70%|███████   | 1230/1746 [01:07<00:19, 25.97it/s] 71%|███████   | 1233/1746 [01:07<00:20, 24.91it/s] 71%|███████   | 1236/1746 [01:08<00:21, 23.25it/s] 71%|███████   | 1239/1746 [01:08<00:21, 23.33it/s] 71%|███████   | 1242/1746 [01:08<00:21, 23.21it/s] 71%|███████▏  | 1245/1746 [01:08<00:21, 23.71it/s] 71%|███████▏  | 1248/1746 [01:08<00:20, 23.75it/s] 72%|███████▏  | 1251/1746 [01:08<00:20, 24.67it/s] 72%|███████▏  | 1254/1746 [01:08<00:19, 25.46it/s] 72%|███████▏  | 1257/1746 [01:08<00:19, 25.30it/s] 72%|███████▏  | 1260/1746 [01:09<00:18, 26.23it/s] 72%|███████▏  | 1263/1746 [01:09<00:23, 20.26it/s] 73%|███████▎  | 1266/1746 [01:09<00:23, 20.36it/s] 73%|███████▎  | 1269/1746 [01:09<00:21, 21.91it/s] 73%|███████▎  | 1272/1746 [01:09<00:21, 22.12it/s] 73%|███████▎  | 1275/1746 [01:09<00:20, 23.02it/s] 73%|███████▎  | 1278/1746 [01:09<00:21, 21.39it/s] 73%|███████▎  | 1281/1746 [01:10<00:21, 21.98it/s] 74%|███████▎  | 1284/1746 [01:10<00:20, 22.98it/s] 74%|███████▎  | 1287/1746 [01:10<00:19, 23.20it/s] 74%|███████▍  | 1290/1746 [01:10<00:20, 21.81it/s] 74%|███████▍  | 1293/1746 [01:10<00:19, 22.72it/s] 74%|███████▍  | 1296/1746 [01:10<00:21, 21.29it/s] 74%|███████▍  | 1299/1746 [01:10<00:19, 22.45it/s] 75%|███████▍  | 1302/1746 [01:11<00:19, 23.13it/s] 75%|███████▍  | 1305/1746 [01:11<00:17, 24.74it/s] 75%|███████▍  | 1308/1746 [01:11<00:16, 25.99it/s] 75%|███████▌  | 1311/1746 [01:11<00:16, 26.76it/s] 75%|███████▌  | 1314/1746 [01:11<00:15, 27.58it/s] 75%|███████▌  | 1317/1746 [01:11<00:16, 25.73it/s] 76%|███████▌  | 1320/1746 [01:11<00:16, 25.90it/s] 76%|███████▌  | 1323/1746 [01:11<00:16, 25.98it/s] 76%|███████▌  | 1326/1746 [01:11<00:18, 23.28it/s] 76%|███████▌  | 1329/1746 [01:12<00:17, 23.34it/s] 76%|███████▋  | 1332/1746 [01:12<00:17, 23.92it/s] 76%|███████▋  | 1335/1746 [01:12<00:16, 24.54it/s] 77%|███████▋  | 1338/1746 [01:12<00:16, 25.48it/s] 77%|███████▋  | 1341/1746 [01:12<00:15, 26.11it/s] 77%|███████▋  | 1344/1746 [01:12<00:16, 24.90it/s] 77%|███████▋  | 1347/1746 [01:12<00:15, 25.27it/s] 77%|███████▋  | 1350/1746 [01:12<00:16, 24.50it/s] 77%|███████▋  | 1353/1746 [01:13<00:15, 24.70it/s] 78%|███████▊  | 1356/1746 [01:13<00:16, 23.95it/s] 78%|███████▊  | 1360/1746 [01:13<00:15, 25.67it/s] 78%|███████▊  | 1364/1746 [01:13<00:14, 26.82it/s] 78%|███████▊  | 1367/1746 [01:13<00:15, 24.38it/s] 78%|███████▊  | 1370/1746 [01:13<00:15, 24.79it/s] 79%|███████▊  | 1373/1746 [01:13<00:14, 24.96it/s] 79%|███████▉  | 1376/1746 [01:13<00:14, 24.86it/s] 79%|███████▉  | 1379/1746 [01:14<00:14, 25.62it/s] 79%|███████▉  | 1382/1746 [01:14<00:13, 26.51it/s] 79%|███████▉  | 1385/1746 [01:14<00:14, 24.97it/s] 79%|███████▉  | 1388/1746 [01:14<00:14, 25.04it/s] 80%|███████▉  | 1391/1746 [01:14<00:14, 24.01it/s] 80%|███████▉  | 1394/1746 [01:15<01:00,  5.80it/s] 80%|████████  | 1397/1746 [01:16<00:46,  7.44it/s] 80%|████████  | 1400/1746 [01:16<00:37,  9.25it/s] 80%|████████  | 1403/1746 [01:16<00:30, 11.36it/s] 81%|████████  | 1406/1746 [01:16<00:25, 13.15it/s] 81%|████████  | 1409/1746 [01:16<00:22, 15.27it/s] 81%|████████  | 1412/1746 [01:16<00:19, 16.97it/s] 81%|████████  | 1415/1746 [01:16<00:17, 18.73it/s] 81%|████████  | 1418/1746 [01:17<00:16, 20.46it/s] 81%|████████▏ | 1421/1746 [01:17<00:15, 20.98it/s] 82%|████████▏ | 1424/1746 [01:17<00:14, 21.76it/s] 82%|████████▏ | 1427/1746 [01:17<00:15, 21.18it/s] 82%|████████▏ | 1430/1746 [01:17<00:14, 22.11it/s] 82%|████████▏ | 1433/1746 [01:17<00:13, 22.53it/s] 82%|████████▏ | 1436/1746 [01:17<00:13, 23.04it/s] 82%|████████▏ | 1439/1746 [01:17<00:12, 23.74it/s] 83%|████████▎ | 1442/1746 [01:18<00:12, 23.92it/s] 83%|████████▎ | 1445/1746 [01:18<00:12, 24.29it/s] 83%|████████▎ | 1448/1746 [01:18<00:11, 25.31it/s] 83%|████████▎ | 1451/1746 [01:18<00:12, 24.30it/s] 83%|████████▎ | 1454/1746 [01:18<00:12, 23.49it/s] 83%|████████▎ | 1457/1746 [01:18<00:12, 23.67it/s] 84%|████████▎ | 1460/1746 [01:18<00:12, 23.21it/s] 84%|████████▍ | 1463/1746 [01:18<00:11, 24.30it/s] 84%|████████▍ | 1466/1746 [01:19<00:13, 20.12it/s] 84%|████████▍ | 1469/1746 [01:19<00:13, 21.10it/s] 84%|████████▍ | 1472/1746 [01:19<00:12, 22.00it/s] 84%|████████▍ | 1475/1746 [01:19<00:12, 21.59it/s] 85%|████████▍ | 1478/1746 [01:19<00:11, 22.82it/s] 85%|████████▍ | 1481/1746 [01:19<00:11, 22.87it/s] 85%|████████▍ | 1484/1746 [01:19<00:11, 23.57it/s] 85%|████████▌ | 1487/1746 [01:19<00:10, 24.29it/s] 85%|████████▌ | 1490/1746 [01:20<00:10, 23.47it/s] 86%|████████▌ | 1493/1746 [01:20<00:10, 23.79it/s] 86%|████████▌ | 1496/1746 [01:20<00:10, 24.17it/s] 86%|████████▌ | 1499/1746 [01:20<00:09, 25.41it/s] 86%|████████▌ | 1502/1746 [01:20<00:09, 26.44it/s] 86%|████████▌ | 1505/1746 [01:20<00:08, 27.15it/s] 86%|████████▋ | 1508/1746 [01:20<00:08, 26.63it/s] 87%|████████▋ | 1512/1746 [01:20<00:08, 27.74it/s] 87%|████████▋ | 1515/1746 [01:21<00:08, 26.69it/s] 87%|████████▋ | 1518/1746 [01:21<00:08, 26.09it/s] 87%|████████▋ | 1521/1746 [01:21<00:08, 25.01it/s] 87%|████████▋ | 1524/1746 [01:21<00:08, 26.14it/s] 87%|████████▋ | 1527/1746 [01:21<00:08, 26.41it/s] 88%|████████▊ | 1530/1746 [01:21<00:08, 25.36it/s] 88%|████████▊ | 1533/1746 [01:21<00:08, 25.10it/s] 88%|████████▊ | 1536/1746 [01:21<00:08, 25.56it/s] 88%|████████▊ | 1539/1746 [01:21<00:07, 26.11it/s] 88%|████████▊ | 1542/1746 [01:22<00:08, 25.34it/s] 88%|████████▊ | 1545/1746 [01:22<00:09, 21.11it/s] 89%|████████▊ | 1548/1746 [01:22<00:09, 21.81it/s] 89%|████████▉ | 1551/1746 [01:22<00:08, 22.60it/s] 89%|████████▉ | 1554/1746 [01:22<00:08, 23.83it/s] 89%|████████▉ | 1557/1746 [01:22<00:07, 24.40it/s] 89%|████████▉ | 1560/1746 [01:22<00:07, 25.14it/s] 90%|████████▉ | 1563/1746 [01:23<00:07, 25.54it/s] 90%|████████▉ | 1566/1746 [01:23<00:07, 24.97it/s] 90%|████████▉ | 1569/1746 [01:23<00:07, 25.16it/s] 90%|█████████ | 1572/1746 [01:23<00:06, 25.27it/s] 90%|█████████ | 1575/1746 [01:23<00:06, 24.86it/s] 90%|█████████ | 1578/1746 [01:23<00:06, 25.91it/s] 91%|█████████ | 1581/1746 [01:23<00:06, 25.64it/s] 91%|█████████ | 1584/1746 [01:23<00:07, 20.62it/s] 91%|█████████ | 1587/1746 [01:24<00:07, 21.19it/s] 91%|█████████ | 1590/1746 [01:24<00:07, 21.98it/s] 91%|█████████ | 1593/1746 [01:24<00:06, 21.87it/s] 91%|█████████▏| 1596/1746 [01:24<00:06, 23.10it/s] 92%|█████████▏| 1599/1746 [01:24<00:06, 24.46it/s] 92%|█████████▏| 1602/1746 [01:24<00:05, 24.16it/s] 92%|█████████▏| 1605/1746 [01:24<00:05, 24.89it/s] 92%|█████████▏| 1608/1746 [01:24<00:05, 25.29it/s] 92%|█████████▏| 1611/1746 [01:25<00:05, 24.90it/s] 92%|█████████▏| 1614/1746 [01:25<00:05, 25.12it/s] 93%|█████████▎| 1617/1746 [01:25<00:05, 24.76it/s] 93%|█████████▎| 1620/1746 [01:25<00:04, 25.49it/s] 93%|█████████▎| 1623/1746 [01:25<00:04, 25.70it/s] 93%|█████████▎| 1626/1746 [01:25<00:04, 25.59it/s] 93%|█████████▎| 1629/1746 [01:25<00:04, 24.28it/s] 93%|█████████▎| 1632/1746 [01:26<00:07, 16.04it/s] 94%|█████████▎| 1635/1746 [01:26<00:06, 17.97it/s] 94%|█████████▍| 1638/1746 [01:26<00:05, 19.97it/s] 94%|█████████▍| 1641/1746 [01:26<00:05, 20.93it/s] 94%|█████████▍| 1644/1746 [01:26<00:05, 19.69it/s] 94%|█████████▍| 1647/1746 [01:26<00:04, 20.83it/s] 95%|█████████▍| 1650/1746 [01:26<00:04, 22.63it/s] 95%|█████████▍| 1653/1746 [01:26<00:04, 23.23it/s] 95%|█████████▍| 1656/1746 [01:27<00:03, 23.77it/s] 95%|█████████▌| 1659/1746 [01:27<00:03, 22.66it/s] 95%|█████████▌| 1662/1746 [01:27<00:03, 23.12it/s] 95%|█████████▌| 1665/1746 [01:27<00:03, 22.73it/s] 96%|█████████▌| 1668/1746 [01:27<00:03, 24.28it/s] 96%|█████████▌| 1671/1746 [01:27<00:03, 23.08it/s] 96%|█████████▌| 1674/1746 [01:27<00:03, 22.99it/s] 96%|█████████▌| 1677/1746 [01:27<00:02, 24.17it/s] 96%|█████████▌| 1680/1746 [01:28<00:02, 24.83it/s] 96%|█████████▋| 1683/1746 [01:28<00:03, 20.14it/s] 97%|█████████▋| 1686/1746 [01:28<00:02, 20.47it/s] 97%|█████████▋| 1689/1746 [01:28<00:02, 22.03it/s] 97%|█████████▋| 1692/1746 [01:28<00:02, 21.76it/s] 97%|█████████▋| 1695/1746 [01:28<00:02, 22.88it/s] 97%|█████████▋| 1698/1746 [01:28<00:02, 23.55it/s] 97%|█████████▋| 1701/1746 [01:29<00:01, 24.82it/s] 98%|█████████▊| 1704/1746 [01:29<00:01, 25.31it/s] 98%|█████████▊| 1707/1746 [01:29<00:01, 24.91it/s] 98%|█████████▊| 1710/1746 [01:29<00:01, 25.68it/s] 98%|█████████▊| 1713/1746 [01:29<00:01, 25.38it/s] 98%|█████████▊| 1716/1746 [01:29<00:01, 21.09it/s] 98%|█████████▊| 1719/1746 [01:29<00:01, 21.55it/s] 99%|█████████▊| 1722/1746 [01:29<00:01, 22.55it/s] 99%|█████████▉| 1725/1746 [01:30<00:00, 22.07it/s] 99%|█████████▉| 1728/1746 [01:30<00:01, 17.30it/s] 99%|█████████▉| 1731/1746 [01:30<00:00, 18.99it/s] 99%|█████████▉| 1734/1746 [01:30<00:00, 20.80it/s] 99%|█████████▉| 1737/1746 [01:30<00:00, 21.76it/s]100%|█████████▉| 1740/1746 [01:30<00:00, 21.49it/s]100%|█████████▉| 1743/1746 [01:30<00:00, 22.03it/s]100%|██████████| 1746/1746 [01:31<00:00, 23.37it/s]100%|██████████| 1746/1746 [01:31<00:00, 19.17it/s]
avgFirstErrPos: 63.574336710943854

./AVATAR_data/third_party
  0%|          | 0/1746 [00:00<?, ?it/s]

-------------------------------------


---> lineNum: 1
---> probID: aizu_p00855_A
---> inputs:
10
11
27
2
492170
0
---> outputs:
4
0
6
0
114

def main ( ) :
    f = sys . stdin
    pg = PrimeNumberGenerator ( )
    while True :
        n = int ( f . readline ( ) )
        if n == 0 :
            break
        if pg . is_prime ( n ) :
            print ( 0 )
            continue
        begin = - 1
        end = - 1
        for i in range ( n - 1 , - 1 , - 1 ) :
            if pg . is_prime ( i ) :
                begin = i
                break
        for i in range ( n + 1 , 2000000 , - 1 ) :
            if pg . is_prime ( i ) :
                end = i
                break
        print ( end - begin )
class PrimeNumberGenerator :
    def __init__ ( self , N ) :
        self . N = 2000000
    def is_prime ( self , index ) :
        return self . N == index
    def is_prime ( self , index ) :
        return self . N == index
    def is_prime ( self , index ) :
        return self . N == index
    def is_prime ( self , index ) :
        return self . N == index
    def is_prime ( self , index ) :
        return self . N == index
    def is_prime ( self , index ) :
        return self . N == index
class PrimeNumberGenerator ( object ) :
    def __init__ ( self , N ) :
        self . N = N
    def is_prime ( self , index ) :
        return self . N == index
    def is_prime ( self , index ) :
        return self . N == index
    def is_prime ( self , index ) :
        return self . N == index
class PrimeNumberGenerator ( object ) :
    def __init__ ( self , N ) :
        self . N = N
    def is_prime ( self , index ) :
        return self . N == index
    def is_prime ( self , index ) :
        return self . N == index
class PrimeNumberGenerator ( object ) :
    def __init__ ( self , N ) :
        self . N = N
    def is_prime ( self , index ) :
        return self . N == index


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 2
---> probID: geeksforgeeks_2849_A
---> inputs:

---> outputs:
aalmymlaa 


def GFG ( str , freq , len ) :
    MAX_CHAR = 26
    def count_freq ( str , freq , len ) :
        for i in range ( len ) :
            freq [ str [ i ] - 'a' ] += 1
    can_make_palindrome ( freq , len )
    count_odd = 0
    for i in range ( MAX_CHAR ) :
        if freq [ i ] % 2 != 0 :
            count_odd += 1
    if len % 2 == 0 :
        if count_odd > 0 :
            return False
        else :
            return True
    if count_odd != 1 :
        return False
    return True
def find_odd_and_remove_itr_freq ( freq ) :
    odd_str = ""
    for i in range ( MAX_CHAR ) :
        if freq [ i ] % 2 != 0 :
            freq [ i ] -= 1
            odd_str = odd_str + chr ( i + 'a' )
            return odd_str
    return odd_str
def find_palindromic_string ( str ) :
    len = len ( str )
    freq = [ 0 ] * MAX_CHAR
    count_freq ( str , freq , len )
    if not can_make_palindrome ( freq , len ) :
        return "No Palindromic String"
    odd_str = find_odd_and_remove_itr_freq ( freq )
    front_str , rear_str = "" , " "
    for i in range ( MAX_CHAR ) :
        temp = ""
        if freq [ i ] != 0 :
            ch = chr ( i + 'a' )
            for j in range ( 1 , freq [ i ] / 2 ) :
                temp = temp + ch
            front_str = front_str + temp
            rear_str = temp + rear_str
    return ( front_str + odd_str + rear_str )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 3
---> probID: aizu_p02296_A
---> inputs:
3
0 0 1 0 0 1 1 1
0 0 1 0 2 1 1 2
-1 0 1 0 0 1 0 -1
---> outputs:
1.0000000000
1.4142135624
0.0000000000

def main ( ) :
    import sys
    import doctest
    import os
    import numpy
    import numpy . linalg
    import numpy . random
    import numpy . ma
    q = numpy . random . randint ( 0 , 10 , size = ( 10 , 10 ) )
    for i in range ( q . size ) :
        doctest . testmod ( numpy . linalg )
    class CGL_2B ( numpy . ndarray ) :
        seg_seg_dist = numpy . empty ( ( q . size , q . size ) )
    def doIt ( self , l1 , l2 ) :
        l1 = l1 . intersects_line ( l2 ) ;
        l2 = l2 . intersects_line ( l1 ) ;
        print ( "%.10f" % seg_seg_dist ( l1 , l2 ) )
    def doIt ( self , l1 , l2 ) :
        l1 = l1 . intersects_line ( l2 ) ;
        l2 = l2 . intersects_line ( l1 ) ;
        print ( "%.10f" % seg_seg_dist ( l1 , l2 ) )
    def doIt ( self , l1 , l2 ) :
        l1 = l1 . intersects_line ( l2 ) ;
        l2 = l2 . intersects_line ( l1 ) ;
        print ( "%.10f" % seg_seg_dist ( l1 , l2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 4
---> probID: geeksforgeeks_528_A
---> inputs:

---> outputs:
8
5
3


def GFG ( number ) :
    n = len ( number )
    d = [ 1 ] * 9
    result = 0
    mod_sum , continuous_zero = 0 , 0
    for i in range ( n ) :
        if ( number [ i ] - '0' ) == 0 :
            continuous_zero += 1
        else :
            continuous_zero = 0
        mod_sum += ( number [ i ] - '0' )
        mod_sum %= 9
        result += d [ mod_sum ]
        d [ mod_sum ] += 1
        result -= continuous_zero
    return result


---> console_out:
 
DIDN'T MATCH!! :(
  0%|          | 4/1746 [00:00<00:45, 38.49it/s]

-------------------------------------


---> lineNum: 5
---> probID: geeksforgeeks_3249_A
---> inputs:

---> outputs:
12


def test_GFG ( ) :
    if K == 0 :
        return 1
    temp = fast_pow ( N , K / 2 )
    if K % 2 == 0 :
        return temp ** 2
    else :
        return N * temp ** 2


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576700794_4296/main.py", line 9
    while n -- :
               ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 6
---> probID: aizu_p00228_A
---> inputs:
3
0
5
1
1
0
-1
---> outputs:
0111111
1010010
1101011
0111111

def main ( ) :
    import sys
    s = [ 0 , 1 , 1 , 1 , 1 , 1 , 1 ]
    for line in sys . stdin :
        n = len ( line )
        a = [ ]
        if n == - 1 :
            break
        while n -- :
            m = len ( line )
            for i in range ( 7 ) :
                print ( ( a [ i ] ^ s [ m ] [ i ] ) + ( i == 6 and '\n' or '' ) )
            a = s [ m ] [ i ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 7
---> probID: geeksforgeeks_1326_A
---> inputs:

---> outputs:
YES
NO


def test_GFG ( ) :
    MAX = 10000
    arr = Vector ( )
    SieveOfEratosthenes ( )
    prime = [ True for i in range ( MAX ) ]
    for p in range ( 2 , MAX * 2 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , MAX , p ) :
                prime [ i ] = False
    for p in range ( 2 , MAX ) :
        if prime [ p ] :
            arr . append ( p )
    is_euclid = 1
    i = 0
    while product ( arr ) < n :
        product = product * arr [ i ]
        if product + 1 == n :
            return True
        i += 1
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 8
---> probID: geeksforgeeks_1321_A
---> inputs:

---> outputs:
YES


def test_GFG ( ) :
    MAX = 1000000
    arr = Vector ( )
    prime = [ False ] * MAX
    SieveOfEratosthenes ( )
    for i in range ( MAX ) :
        prime [ i ] = True
    for p in range ( 2 , p * p < MAX ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , MAX , p ) :
                prime [ i ] = False
    for p in range ( 2 , MAX ) :
        if prime [ p ] :
            arr . append ( p )
    def is_primorial_prime ( n ) :
        if not prime [ n ] :
            return False
        product = 1
        i = 0
        while product < n :
            product = product * arr [ i ]
            if product + 1 == n or product - 1 == n :
                return True
            i += 1
        return False
    def test_prime ( n ) :
        SieveOfEratosthenes ( )
        n = 31
        if is_primorial_prime ( n ) :
            assert 'YES' == str ( arr [ n ] )
        else :
            assert 'NO' == str ( arr [ n ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 9
---> probID: geeksforgeeks_2880_A
---> inputs:

---> outputs:
8 * 1 = 8
8 * 2 = 16
8 * 3 = 24
8 * 4 = 32
8 * 5 = 40
8 * 6 = 48
8 * 7 = 56
8 * 8 = 64
8 * 9 = 72
8 * 10 = 80


def GFG ( N , i ) :
    if i > 10 :
        return
    print ( N , i , " * " , N * i )
    return


---> console_out:
 
DIDN'T MATCH!! :(
  1%|          | 9/1746 [00:00<00:43, 40.36it/s]

-------------------------------------


---> lineNum: 10
---> probID: geeksforgeeks_2069_A
---> inputs:

---> outputs:
12
-18
0
21


def close_to_n_divisible_m ( n , m ) :
    q = n // m
    n1 = m * q
    n2 = ( n * m ) or ( m * ( q + 1 ) )
    if abs ( n - n1 ) < abs ( n - n2 ) :
        return n1
    return n2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 11
---> probID: geeksforgeeks_833_A
---> inputs:

---> outputs:
4


def GFG ( ang , n ) :
    if ( ang * n ) > ( 180 * ( n - 2 ) ) :
        return 0
    elif ( ang * n ) % 180 != 0 :
        return 0
    ans = 1
    freq = ( ang * n ) / 180
    ans = ans * ( n - 1 - freq )
    ans = ans * n
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 12
---> probID: geeksforgeeks_2722_A
---> inputs:

---> outputs:
fix


def GFG ( s ) :
    n = len ( s )
    lps = [ ]
    len = None
    lps . append ( 0 )
    i = 1
    while i < n :
        if s [ i ] == s [ len ( s ) ] :
            len += 1
            lps . append ( len )
            i += 1
        else :
            if len != None :
                len = lps [ - 1 ]
            else :
                lps . append ( 0 )
                i += 1
    return lps


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 13
---> probID: geeksforgeeks_1532_A
---> inputs:

---> outputs:
YES


def test_GFG ( ) :
    min_ele = np . inf
    max_ele = np . inf
    min_index = - 1
    for i in range ( n ) :
        if arr [ i ] < min_ele :
            min_ele = arr [ i ]
            min_index = i
    flag1 = True
    for i in range ( 1 , min_index + 1 ) :
        if arr [ i ] < arr [ i - 1 ] :
            flag1 = False
            break
    flag2 = True
    for i in range ( min_index + 1 , n ) :
        if arr [ i ] < arr [ i - 1 ] :
            flag2 = False
            break
    if min_index == 0 :
        print ( 'NO' )
        return
    if flag1 and flag2 and ( arr [ n - 1 ] < arr [ min_index - 1 ] ) :
        print ( 'YES' )
    else :
        print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 14
---> probID: codeforces_11_A
---> inputs:
4 2
1 3 3 2
---> outputs:
3

def pyiss_runapp ( app ) :
    return app . runapp ( 'pyiss' )


---> console_out:
 
DIDN'T MATCH!! :(
  1%|          | 14/1746 [00:00<00:42, 41.22it/s]

-------------------------------------


---> lineNum: 15
---> probID: geeksforgeeks_891_A
---> inputs:

---> outputs:
Power-isolated Integer
Not a Power-isolated Integer
Power-isolated Integer


def GFG ( num ) :
    input = num
    count = 0
    factor = [ ]
    if num % 2 == 0 :
        while num % 2 == 0 :
            count += 1
            num /= 2
        factor . append ( count )
    for i in range ( 3 , num * i <= num , 2 ) :
        count = 0
        while num % i == 0 :
            count += 1
            num /= i
        if count > 0 :
            factor . append ( count )
    if num > 1 :
        factor . append ( 1 )
    product = 1
    for i in range ( num + 1 ) :
        if factor [ i ] > 0 :
            product = product * factor [ i ] ** i
    if product == input :
        print ( "Power-isolated Integer" )
    else :
        print ( "Not a Power-isolated Integer" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 16
---> probID: aizu_p01772_A
---> inputs:
AIZUNYANPEROPERO
---> outputs:
AZ

def main ( ) :
    import sys
    s = sys . stdin . read ( )
    len = 0
    for c in s :
        if len % 2 == 0 and c == 'A' or len % 2 == 1 and c == 'Z' :
            len += 1
    len /= 2
    if len == 0 :
        print ( - 1 )
    else :
        s = 'AZ'
    print ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 17
---> probID: codeforces_1625_B
---> inputs:
4
7
3 1 5 2 1 3 4
6
1 1 1 1 1 1
6
1 4 2 8 5 7
2
15 15
---> outputs:
4
5
-1
1

def test_r765a ( ) :
    f = open ( 'r765a.txt' , 'r' )
    t = int ( f . readline ( ) )
    while t :
        t = f . readline ( )
        n = int ( t )
        arr = [ ]
        f = open ( 'r765a.txt' , 'w' )
        for i in range ( n ) :
            arr . append ( int ( f . readline ( ) ) )
        solve ( arr )
    class Diff ( object ) :
        prev = None
    def solve ( arr ) :
        max = - 1
        d = { }
        for i in range ( len ( arr ) ) :
            if d . has_key ( arr [ i ] ) :
                diff = d [ arr [ i ] ]
                prev = diff [ 'prev' ]
                count = prev + len ( arr [ i ] ) - i
                if count > max :
                    max = count
                diff [ 'prev' ] = i
            else :
                diff = Diff ( prev = i )
                d [ arr [ i ] ] = diff
        print ( max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 18
---> probID: geeksforgeeks_3058_A
---> inputs:

---> outputs:
2118187521397235888154583183918321221520083884298838480662480


def GFG ( num1 , num2 ) :
    len1 = len ( num1 )
    len2 = len ( num2 )
    if len1 == 0 or len2 == 0 :
        return '0'
    result = [ 0 ] * ( len1 + len2 )
    i_n1 = 0
    i_n2 = 0
    for i in range ( len1 - 1 , - 1 , - 1 ) :
        carry = 0
        n1 = num1 [ i ] - '0'
        i_n2 = 0
        for j in range ( len2 - 1 , - 1 , - 1 ) :
            n2 = num2 [ j ] - '0'
            sum = n1 * n2 + result [ i_n1 + i_n2 ] + carry
            carry = sum / 10
            result [ i_n1 + i_n2 ] = sum % 10
            i_n2 += 1
        if carry > 0 :
            result [ i_n1 + i_n2 ] += carry
        i_n1 += 1
    i = len ( result ) - 1
    while i >= 0 and result [ i ] == 0 :
        i -= 1
    if i == - 1 :
        return '0'
    s = ''
    while i >= 0 :
        s += ( result [ i ] )
    return s


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 19
---> probID: codeforces_1013_A
---> inputs:
5
1 2 3 4 5
2 1 4 3 5
---> outputs:
Yes

def main ( ) :
    import sys
    n = len ( sys . argv )
    arr = [ ]
    sum = 0
    sum1 = 0
    arr1 = [ ]
    for i in range ( n ) :
        arr . append ( sys . argv [ i ] )
        sum += arr [ i ]
    for i in range ( n ) :
        arr1 . append ( sys . argv [ i ] )
        sum1 += arr1 [ i ]
    if sum >= sum1 :
        print ( 'YES' )
    else :
        print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(
  1%|          | 19/1746 [00:00<00:42, 41.09it/s]

-------------------------------------


---> lineNum: 20
---> probID: codeforces_412_A
---> inputs:
2 2
R1
---> outputs:
PRINT 1
LEFT
PRINT R

def main ( ) :
    import sys
    n , k = sys . argv [ 1 : ]
    a = sys . argv [ 2 : ]
    if k > n / 2 :
        while k < n :
            print ( "RIGHT" )
            k += 1
    else :
        while k > 1 :
            print ( "LEFT" )
            k -= 1
    if k == 1 :
        for i in range ( len ( a ) ) :
            print ( "PRINT " + a [ i ] )
            if ( i + 1 ) < len ( a ) :
                print ( "RIGHT" )
    else :
        for i in range ( len ( a ) - 1 , - 1 , - 1 ) :
            print ( "PRINT " + a [ i ] )
            if ( i - 1 ) >= 0 :
                print ( "LEFT" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 21
---> probID: geeksforgeeks_734_A
---> inputs:

---> outputs:
0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 20 

def get_dist_sum ( arr , n ) :
    sum = 0
    for i in range ( n ) :
        sum += arr [ i ]
    dp = [ False for i in range ( n + 1 ) ]
    for i in range ( 0 , n + 1 ) :
        dp [ i ] = True
    for i in range ( 1 , n + 1 ) :
        dp [ i ] [ arr [ i - 1 ] ] = True
        for j in range ( 1 , sum + 1 ) :
            if dp [ i - 1 ] [ j ] == True :
                dp [ i ] [ j ] = True
                dp [ i ] [ j + arr [ i - 1 ] ] = True
    for j in range ( 0 , sum + 1 ) :
        if dp [ n ] [ j ] == True :
            print ( j , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 22
---> probID: geeksforgeeks_2591_A
---> inputs:

---> outputs:
-1
2


def GFG ( a , b ) :
    c = a + ( ~ b + 1 )
    return c


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 23
---> probID: codeforces_622_A
---> inputs:
3
---> outputs:
2

def test_infinite_sequence ( ) :
    f = BytesIO ( )
    n1 = np . array ( [ 1 , 2 , 3 ] )
    n = int ( ( np . sqrt ( 1 + ( 8 * n1 ) ) - 1 ) / 2 )
    ans = n1 - ( ( ( n + 1 ) ** 2 ) / 2 )
    assert ( ans != 0 ) . all ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 24
---> probID: codeforces_939_A
---> inputs:
5
2 4 5 1 3
---> outputs:
YES

def test_codeforces ( ) :
    """
 Test codeforces for the code forces.
 """
    x = symbols ( 'x' )
    n = symbols ( 'n' )
    arr = [ ]
    for i in range ( n ) :
        arr . append ( i )
        arr . append ( i - 1 )
    lt = False
    for i in range ( n ) :
        if i in arr :
            lt = True
            break
    if lt :
        assert 'YES' in arr
    else :
        assert 'NO' in arr


---> console_out:
 
DIDN'T MATCH!! :(
  1%|▏         | 24/1746 [00:00<00:42, 40.95it/s]

-------------------------------------


---> lineNum: 25
---> probID: geeksforgeeks_2843_A
---> inputs:

---> outputs:
abcdhforgieks


def GFG ( i , occurrences ) :
    while i < len ( occurrences ) :
        if occurrences [ i ] == 0 :
            return i
        i += 1
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576701278_4473/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 26
---> probID: codeforces_1493_B
---> inputs:
5
24 60
12:21
24 60
23:59
90 80
52:26
1 100
00:01
10 10
04:04
---> outputs:
12:21
00:00
52:28
00:00
00:00

def import ( ) :
    import sys
    FLIP = [ 0 , 1 , 5 , - 1 , - 1 , 2 , - 1 , - 1 , 8 , - 1 ]
    stdin = sys . stdin
    nC = sys . stdin . readline ( ) . count ( '\n' )
    for loop in range ( nC ) :
        hr , min = stdin . readline ( ) . split ( ':' )
        tok = re . split ( '[:]' , stdin . readline ( ) )
        sHr = int ( tok [ 0 ] )
        sMin = int ( tok [ 1 ] )
        res = None
        for i in range ( sHr * min + sMin , hr * min + 1 ) :
            res = flip ( i , hr , min )
            if res :
                break
        if not res :
            res = [ 0 , 0 , 0 , 0 ]
        print ( '%d%d:%d%d' % ( res [ 0 ] , res [ 1 ] , res [ 2 ] , res [ 3 ] ) )
    def flip ( val , hr , min ) :
        thisHr = val // min
        thisMin = val % min
        disp = [ thisMin % 10 , thisMin // 10 , thisHr % 10 , thisHr // 10 ]
        for disp in disp :
            if FLIP [ disp ] == - 1 :
                return None
            disp = FLIP [ disp ]
        newHr = 10 ** ( disp [ 0 ] ) + disp [ 1 ]
        newMin = 10 ** ( disp [ 2 ] ) + disp [ 3 ]
        if newHr >= hr or newMin >= min :
            return None
        return thisHr // 10 , thisHr % 10 , thisMin // 10 , thisMin % 10
    sys . stdin . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 27
---> probID: codeforces_388_A
---> inputs:
3
0 0 10
---> outputs:
2

def test_fastreader ( ) :
    import sys
    import random
    import doctest
    import tempfile
    import os
    import re
    import random
    import string
    import tempfile
    import os
    import random
    import string
    import tempfile
    import random
    import string
    import re
    import tempfile
    import os
    import random
    import string
    import re
    import tempfile
    import random
    import string
    import re
    import tempfile
    import os
    import re
    import string
    import re
    import tempfile
    import random
    import string
    import re
    import tempfile
    import os
    import tempfile
    import re
    import string
    import re
    import tempfile
    import os
    import re
    import tempfile
    import string
    import re
    import re
    import tempfile
    import os
    import re
    import tempfile
    import re
    import string
    import re
    import re
    import tempfile
    import os
    import re
    import tempfile
    import re
    import string
    import re
    import re
    import tempfile
    import os
    import re
    import tempfile
    import re
    import re
    import string
    import re
    import re
    import tempfile
    import os
    import re
    import re
    import string
    import re
    import re
    import tempfile
    import os
    import re
    import re
    import string
    import re
    import re
    import re
    import tempfile
    import os
    import re
    import tempfile
    import re
    import re
    import re
    import string
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 28
---> probID: codeforces_1688_A
---> inputs:
7
1
2
5
9
16
114514
1000000
---> outputs:
3
3
1
1
17
2
64

def helloworld ( ) :
    import sys
    t = sys . _getframe ( 1 ) . f_back . f_code . co_name
    while t . f_back . f_code . co_filename != '__main__.py' :
        n = sys . _getframe ( 1 ) . f_back . f_code . co_filename
        s = [ ]
        if n == 1 :
            print ( 3 )
        else :
            while n :
                ans = n & 1
                n = n >> 1
                if ans == 1 :
                    s . insert ( 0 , 1 )
                    break
                else :
                    s . insert ( 0 , 0 )
            if n == 0 :
                s . pop ( )
                s . append ( 1 )
            val = eval ( s , { } , { } )
            print ( val )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 29
---> probID: aizu_p01998_A
---> inputs:
3
---> outputs:
2

def main ( ) :
    import sys
    n = len ( sys . argv )
    arr = np . zeros ( ( n + 3 , ) , dtype = bool )
    arr [ 0 , : ] = True
    arr [ 1 , : ] = True
    count = 0
    for i in range ( 2 , len ( arr ) ) :
        if not arr [ i ] :
            for j in range ( 2 , i * len ( arr ) ) :
                arr [ i * j , : ] = True
            if not arr [ i ] and not arr [ i - 2 ] :
                count += 1
    print ( count * 2 )


---> console_out:
 
DIDN'T MATCH!! :(
  2%|▏         | 29/1746 [00:00<00:41, 40.99it/s]

-------------------------------------


---> lineNum: 30
---> probID: codeforces_474_B
---> inputs:
5
2 7 3 4 9
3
1 25 11
---> outputs:
1
5
3

def league ( ) :
    n = len ( sys . argv )
    num = 0
    a = [ 0 ] * 1000001
    start = 0
    for i in range ( 1 , n + 1 ) :
        num += sys . argv [ i ]
        for j in range ( start , num + 1 ) :
            a [ j ] = i
        start = num
    m = sys . argv [ n + 1 ]
    for i in range ( m ) :
        sys . stdout . write ( a [ sys . argv [ n + 1 ] - 1 ] )
        sys . stdout . write ( "\n" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 31
---> probID: codeforces_1558_B
---> inputs:
3 998244353
---> outputs:
5

def ada ( ) :
    n = len ( input ( ) )
    m = len ( input ( ) )
    dp = [ 0 ] * n + [ 0 ] * n + [ 0 ] * n
    pre = [ 0 ] * n + [ 0 ] * n + [ 0 ] * n
    prev_sum = dp [ 1 ] = 1
    for i in range ( 1 , n + 1 ) :
        if i != 1 :
            pre [ i ] = ( pre [ i - 1 ] + pre [ i ] ) % m
            dp [ i ] = ( prev_sum + pre [ i ] ) % m
            prev_sum = ( prev_sum + dp [ i ] ) % m
        for p , j in zip ( 2 * i , 2 * i + 1 ) :
            r = j + p
            pre [ j ] = ( pre [ j ] + dp [ i ] ) % m
            if r <= n :
                pre [ r ] = ( ( pre [ r ] - dp [ i ] ) % m + m ) % m
    print ( dp [ n ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 32
---> probID: geeksforgeeks_660_A
---> inputs:

---> outputs:
78 90 90 90 89


def test_sliding_window ( ) :
    from collections import deque
    from sympy . utilities . randtest import get_random_symbols
    Qi = deque ( )
    i = 0
    for i in range ( k ) :
        while not Qi . empty ( ) and arr [ i ] >= arr [ Qi . pop ( ) ] :
            Qi . pop ( )
        Qi . append ( i )
    for i in range ( n ) :
        print ( arr [ Qi . pop ( ) ] , end = ' ' )
        while ( not Qi . empty ( ) ) and Qi . pop ( ) <= i - k :
            Qi . pop ( )
        while ( not Qi . empty ( ) ) and arr [ i ] >= arr [ Qi . pop ( ) ] :
            Qi . pop ( )
        Qi . append ( i )
    print ( arr [ Qi . pop ( ) ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 33
---> probID: geeksforgeeks_1175_A
---> inputs:

---> outputs:
18
240


def test_GFG ( ) :
    from sympy . polys . distributedmodules import russian_peasant
    res = 0
    while b :
        if ( b & 1 ) :
            res = res + a
        a = a << 1
        b = b >> 1
    assert res == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 34
---> probID: geeksforgeeks_4021_A
---> inputs:

---> outputs:
Invalid


def test_GFG ( ) :
    for i in range ( 1 , len ( str ( x ) ) + 1 ) :
        if str ( x ) == str ( x - 1 ) :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(
  2%|▏         | 34/1746 [00:00<00:41, 41.57it/s]

-------------------------------------


---> lineNum: 35
---> probID: geeksforgeeks_2144_A
---> inputs:

---> outputs:
13 may be Prime.


def pythontag_in_function ( n , t ) :
    rng = np . random . RandomState ( 0 )
    a = rng . randint ( 0 , n - 3 , size = ( n - 3 ) ) + 2
    e = ( n - 1 ) / 2
    while t > 0 :
        result = ( ( np . power ( a , e ) ) . sum ( ) ) % n
        if ( result % n ) == 1 or ( result % n ) == ( n - 1 ) :
            a = rng . randint ( 0 , n - 3 , size = ( n - 3 ) ) + 2
            t -= 1
        else :
            return - 1
    return 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 36
---> probID: codeforces_267_A
---> inputs:
2
4 17
7 987654321
---> outputs:
8
141093479

def pysub ( ) :
    f = sys . stdin
    num = 0
    while num :
        a = f . readline ( )
        b = f . readline ( )
        res = 0
        while a != '' and b != '' :
            if a >= b :
                res += a / b
                a %= b
            else :
                res += b / a
                b %= a
        print ( res )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 37
---> probID: codeforces_844_A
---> inputs:
yandex
6
---> outputs:
0

def _cp ( s ) :
    import sys
    import os
    import getopt
    try :
        opts , args = getopt . getopt ( s , '' )
    except getopt . error as msg :
        print ( msg )
        return
    for o , a in opts :
        if o == '-h' :
            h = sys . argv [ 0 ]
        elif o == '-c' :
            c = sys . argv [ 0 ]
        elif o == '-d' :
            d = sys . argv [ 0 ]
        elif o == '-l' :
            l = sys . argv [ 0 ]
    def gcd ( a , b ) :
        if b == 0 :
            return a
        return gcd ( b , a % b )
    def print_vector ( al ) :
        for i in al :
            print ( i , end = ' ' )
        print ( )
    def digitsum ( n ) :
        sum = 0
        while n != 0 :
            sum += n % 10
            n = n // 10
        return sum
    def main ( ) :
        try :
            s = sys . stdin
        except EOFError :
            print ( sys . argv [ 0 ] )
            return
        s = s . readline ( )
        k = s . tell ( )
        hs = set ( )
        for x in s :
            hs . add ( x )
        if len ( s ) < k :
            s . write ( 'impossible' )
        else :
            if k <= len ( hs ) :
                s . write ( '0\n' )
            else :
                s . write ( k - len ( hs ) )
        print ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 38
---> probID: geeksforgeeks_5251_A
---> inputs:

---> outputs:
20


def GFG ( mat ) :
    N = 3
    MaxTraceSub = 0
    for i in range ( N ) :
        for j in range ( N ) :
            r , s , trace = i , j , 0
            while r < N and s < N :
                trace += mat [ r ] [ s ]
                r += 1
                s += 1
                MaxTraceSub = max ( trace , MaxTraceSub )
    return MaxTraceSub


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 39
---> probID: aizu_p00059_A
---> inputs:
0.0 0.0 5.0 5.0 1.0 1.0 4.0 4.0
0.0 0.0 4.0 5.0 1.0 1.0 5.0 5.0
0.0 0.0 4.0 4.0 -3.0 -5.0 2.0 -1.0
---> outputs:
YES
YES
NO

def pymatlab ( ) :
    import numpy as np
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt
    import matplotlib . pyplot as plt

---> console_out:
 
DIDN'T MATCH!! :(
  2%|▏         | 39/1746 [00:00<00:41, 41.56it/s]

-------------------------------------


---> lineNum: 40
---> probID: codeforces_1601_A
---> inputs:
5
4
4 4 4 4
4
13 7 25 19
6
3 5 3 1 7 1
1
1
5
0 0 0 0 0
---> outputs:
1 2 4
1 2
1
1
1 2 3 4 5

def test_array_elimination ( ) :
    import numpy as np
    t = np . arange ( 10 )
    for tt in t :
        n = t [ tt ]
        bit = [ 0 ] * 32
        arr = [ 0 ] * n
        for i in range ( n ) :
            arr [ i ] = i
        for i in range ( n ) :
            for j in range ( 32 ) :
                temp = ( 1 << ( j - 1 ) )
                bitwise_and = arr [ i ] & temp
                if bitwise_and :
                    bit [ j ] += 1
        for i in range ( 1 , n ) :
            possible = True
            for j in range ( 32 ) :
                if bit [ j ] % i != 0 :
                    possible = False
                    break
            if possible :
                print ( i , end = ' ' )
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 41
---> probID: geeksforgeeks_1302_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    res = 0
    for i in range ( a , b + 1 ) :
        div_count = 0
        for j in range ( 1 , i + 1 ) :
            if i % j == 0 :
                div_count += 1
        if ( div_count % 2 ) != 0 :
            yield ( test_GFG , i , j )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 42
---> probID: codeforces_450_A
---> inputs:
5 2
1 3 1 4 2
---> outputs:
4

def main ( ) :
    import sys
    n , m = sys . argv [ 1 ] , sys . argv [ 2 ]
    M = float ( m )
    arr = [ ]
    for i in range ( n ) :
        arr . append ( i )
    max = 0
    ans = 0
    for i in range ( n ) :
        x = int ( math . ceil ( arr [ i ] / M ) )
        if x >= max :
            max = x
            ans = i
    print ( ans + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 43
---> probID: geeksforgeeks_3877_A
---> inputs:

---> outputs:
2 3 1 2 0 
2 2 4 1 2 0 


def GFG ( N , arr ) :
    for i in range ( N ) :
        print ( arr [ i ] , end = ' ' )
    print ( )
    replacedArray ( N , arr )
    pos_sum , neg_sum , i , j , diff = replacedArray ( N , arr )
    pos_sum = 0
    neg_sum = 0
    for i in range ( N - 1 , - 1 , - 1 ) :
        diff = abs ( pos_sum ) - abs ( neg_sum )
        if arr [ i ] > 0 :
            pos_sum += arr [ i ]
        else :
            neg_sum += arr [ i ]
        arr [ i ] = abs ( diff )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 44
---> probID: geeksforgeeks_3876_A
---> inputs:

---> outputs:
2 3 1 2 0 
2 2 4 1 2 0 


def GFG ( N , arr ) :
    for i in range ( N ) :
        print ( arr [ i ] , end = ' ' )
    print ( )
    replacedArray ( N , arr )
    pos_sum , neg_sum , i , j , diff = replacedArray ( N , arr )
    for i in range ( N ) :
        pos_sum = 0
        neg_sum = 0
        for j in range ( i + 1 , N ) :
            if arr [ j ] > 0 :
                pos_sum += arr [ j ]
            else :
                neg_sum += arr [ j ]
        diff = abs ( pos_sum ) - abs ( neg_sum )
        arr [ i ] = abs ( diff )


---> console_out:
 
DIDN'T MATCH!! :(
  3%|▎         | 44/1746 [00:01<00:40, 41.91it/s]

-------------------------------------


---> lineNum: 45
---> probID: geeksforgeeks_2153_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    n = len ( s )
    count = 0
    for i in range ( n ) :
        if s [ i ] in [ '4' , '8' , '0' ] :
            count += 1
    for i in range ( n - 1 ) :
        h = ( s [ i ] - '0' ) * 10 + ( s [ i + 1 ] - '0' )
        if h % 4 == 0 :
            count = count + i + 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 46
---> probID: codeforces_1535_A
---> inputs:
4
3 7 9 5
4 5 6 9
5 3 8 1
6 5 3 2
---> outputs:
YES
NO
YES
NO

def test_cf1535_A ( ) :
    input = np . array ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] , dtype = np . int32 )
    t = input . dtype . itemsize
    for i in range ( 1 , t ) :
        a = [ ]
        for k in range ( 4 ) :
            a . append ( input ( "%d" % k ) )
        if max ( a ) > min ( a ) and max ( a ) > min ( a ) :
            assert "YES" in a
        else :
            assert "NO" in a


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 47
---> probID: codeforces_96_B
---> inputs:
4500
---> outputs:
4747

def test_96B ( ) :
    f = np . array


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 48
---> probID: codeforces_1349_B
---> inputs:
5
5 3
1 5 2 6 1
1 6
6
3 2
1 2 3
4 3
3 1 2 3
10 3
1 2 3 4 5 6 7 8 9 10
---> outputs:
no
yes
yes
no
yes

def test_orac_and_median_641b ( ) :
    f = open ( '/home/jeko/Downloads/orac_and_median_641b.txt' , 'r' )
    cases = int ( f . read ( ) )
    for cases in cases :
        tokens = f . readline ( ) . split ( )
        n = int ( tokens [ 0 ] )
        target = int ( tokens [ 1 ] )
        nums = [ int ( x ) for x in tokens [ 2 : ] ]
        helper ( nums , target )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576701829_3129/main.py", line 24
    res = del + solve ( index + 1 , prev )
          ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 49
---> probID: codejam_10_12
---> inputs:
2
6 6 2 3
1 7 5
100 1 5 3
1 50 7

---> outputs:
Case #1: 4
Case #2: 17


def py_smooth ( ) :
    import sys
    memo = [ [ ] , [ ] , [ ] ]
    def solve ( ) :
        T = sys . getrecursionlimit ( )
        for i in range ( 1 , T + 1 ) :
            print ( "Case #" + str ( i ) + ": " )
            solve_case ( )
    def SPC ( ) :
        def solve_case ( ) :
            del sys . getrecursionlimit ( )
            ins , max_dist , n = sys . getrecursioninfo ( )
            arr = [ ]
            for i in range ( n ) :
                arr . append ( sys . getrecursionlimit ( ) )
            for arr in memo :
                del arr [ : ]
            print ( solve ( 0 , SPC ) )
        del sys . getrecursionlimit ( ) , ins , max_dist , n
        def solve ( ) :
            if index >= n :
                return 0
            if memo [ index ] [ prev ] == - 1 :
                res = del + solve ( index + 1 , prev )
                for val in SPC :
                    res = min ( res , abs ( arr [ index ] - val ) + ins_cost ( val , prev ) + solve ( index + 1 , val ) )
                memo [ index ] [ prev ] = res
            return memo [ index ] [ prev ]
        def ins_cost ( cur , prev ) :
            if prev == SPC or cur == prev :
                return 0
            if max_dist == 0 :
                return 100000000
            return ins * ( ( abs ( cur - prev ) + max_dist - 1 ) / max_dist - 1 )
        return solve ( )
    

---> console_out:
 
DIDN'T MATCH!! :(
  3%|▎         | 49/1746 [00:01<00:40, 41.49it/s]

-------------------------------------


---> lineNum: 50
---> probID: aizu_p00067_A
---> inputs:
111100001111
111000001111
110000001111
100000001111
000100010000
000000111000
000001111100
100011111110
110001111100
111000111000
111100010000
000000000000

010001111100
110010000010
010010000001
010000000001
010000000110
010000111000
010000000100
010000000010
010000000001
010010000001
010010000010
111001111100

000000000000
111111111111
100010100001
100010100001
100010100001
100010100001
100100100101
101000011101
100000000001
100000000001
111111111111
100000000001
---> outputs:
5
13
4

def main ( ) :
    import sys
    N = 12
    ofs = [ [ 1 , 0 ] , [ 0 , - 1 ] , [ - 1 , 0 ] , [ 0 , 1 ] ]
    del ( map , y , x )
    for i in range ( 4 ) :
        nx = x + ofs [ i ] [ 0 ]
        ny = y + ofs [ i ] [ 1 ]
        if 0 <= ny < N and 0 <= nx < N :
            if map [ ny , nx ] :
                del ( map , ny , nx )
    solve ( map )
    c = 0
    for y in range ( N ) :
        for x in range ( N ) :
            if map [ y , x ] :
                c += 1
                del ( map , y , x )
    return c


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 51
---> probID: geeksforgeeks_3141_A
---> inputs:

---> outputs:
Yes


def GFG ( arr , n ) :
    if n == 0 or n == 1 :
        return True
    for i in range ( 1 , n ) :
        if arr [ i - 1 ] > arr [ i ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 52
---> probID: codeforces_1676_B
---> inputs:
5
5
1 2 3 4 5
6
1000 1000 5 1000 1000 1000
10
1 2 3 5 1 2 7 9 13 5
3
8 8 8
1
10000000
---> outputs:
10
4975
38
0
0

def test_candies ( ) :
    from sympy . utilities . randtest import seed
    t = seed ( )
    while t > 0 :
        a = range ( t )
        x = [ 0 ] * a
        x [ a ] = 1
        x [ a ] = 2
        x [ a ] = 3
        x [ a ] = 4
        x [ a ] = 5
        x [ a ] = 6
        x [ a ] = 7
        x [ a ] = 8
        x [ a ] = 9
        s = 0
        for i in range ( a ) :
            s += abs ( x [ i ] - x [ 0 ] )
        assert s == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 53
---> probID: geeksforgeeks_4980_A
---> inputs:

---> outputs:
4


def get_kmg_count ( arr , n , k ) :
    h = { }
    for i in range ( n ) :
        if h . has_key ( arr [ i ] ) :
            h [ arr [ i ] ] = h [ arr [ i ] ] + 1
        else :
            h [ arr [ i ] ] = 1
    if len ( h ) < k :
        return - 1
    dist_count = 0
    for i in range ( n ) :
        if h [ arr [ i ] ] == 1 :
            dist_count += 1
        if dist_count == k :
            return arr [ i ]
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 54
---> probID: geeksforgeeks_1200_A
---> inputs:

---> outputs:
1
1
3
3


def GFG ( n ) :
    f = [ 0 ] * 60
    for i in range ( 2 , 59 ) :
        f [ i ] = ( f [ i - 1 ] + f [ i - 2 ] ) % 10
    find_last_digit ( n )
    index = int ( n % 60. )
    return f [ index ]


---> console_out:
 
DIDN'T MATCH!! :(
  3%|▎         | 54/1746 [00:01<00:40, 41.76it/s]

-------------------------------------


---> lineNum: 55
---> probID: atcoder_ABC042_A
---> inputs:
5 5 7
---> outputs:
YES

def main ( ) :
    import sys
    import getopt
    global num_1 , num_2 , num_3
    if sys . argv [ 1 : ] != [ '--help' ] :
        sys . exit ( __doc__ )
    num_1 = int ( sys . argv [ 1 ] )
    num_2 = int ( sys . argv [ 2 ] )
    num_3 = int ( sys . argv [ 3 ] )
    if num_1 == 7 :
        if num_2 == 5 and num_3 == 5 :
            sys . exit ( 'YES' )
        else :
            sys . exit ( 'NO' )
    elif num_2 == 7 :
        if num_1 == 5 and num_3 == 5 :
            sys . exit ( 'YES' )
        else :
            sys . exit ( 'NO' )
    elif num_3 == 7 :
        if num_2 == 5 and num_1 == 5 :
            sys . exit ( 'YES' )
        else :
            sys . exit ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 56
---> probID: atcoder_ABC078_D
---> inputs:
3 100 100
10 1000 100
---> outputs:
900

def main ( ) :
    import sys
    n , z , w = sys . argv [ 1 : ]
    a = [ ]
    for i in range ( n ) :
        a . append ( i )
    if n == 1 :
        print ( abs ( w - a [ 0 ] ) )
        return
    ans1 = abs ( a [ - 2 ] - a [ - 1 ] )
    ans2 = abs ( w - a [ - 1 ] )
    print ( max ( ans1 , ans2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 57
---> probID: geeksforgeeks_487_A
---> inputs:

---> outputs:
4 5 5 6 6 6 

def test_GFG ( ) :
    for arr1 in [ 1 , 2 , 3 , 4 , 7 , 9 ] :
        count = 0
        for i in range ( m ) :
            if arr2 [ j ] <= arr1 [ i ] :
                count += 1
        print ( count , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 58
---> probID: codeforces_870_B
---> inputs:
5 2
1 2 3 4 5
---> outputs:
5

def test_maximum_of_maximums_of_minimums ( ) :
    f = BytesIO ( )
    n , k = symbols ( 'n k' , integer = True , positive = True )
    a = [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] ]
    b = [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] ]
    for i in range ( n ) :
        a [ i ] = i
    f . seek ( 0 )
    def solve ( n , a , k ) :
        if k == 1 :
            res = S . Zero
            for x in a :
                res = min ( x , res )
            return res
        if k == 2 :
            if n == 1 :
                return a
            dq = ArrayQueue ( )
            for x in a :
                dq . add ( x )
            lMin , rMin = S . Infinity , S . Infinity
            ans = a [ 0 ]
            while not dq . empty ( ) :
                lMin = min ( dq . pop ( ) , lMin )
                if rMin == S . Infinity and dq . empty ( ) :
                    rMin = S . Infinity
                    break
                if not dq . empty ( ) :
                    break
                rMin = min ( dq . pop ( ) , rMin )
                ans = max ( ans , max ( rMin , lMin ) )
            ans = max ( ans , max ( rMin , lMin ) )
            return ans
        ans = S . Zero
        for x in a :
            ans = max ( ans , x )
        return ans
    def debug ( * obj ) :
        sys . stderr . write ( '%s\n' % type ( obj ) . __name__ )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 59
---> probID: codeforces_776_A
---> inputs:
ross rachel
4
ross joey
rachel phoebe
phoebe monica
monica chandler
---> outputs:
ross rachel
joey rachel
joey phoebe
joey monica
joey chandler

def pynewclass ( ) :
    import sys
    name1 , name2 = sys . argv [ 1 : ]
    print ( name1 , name2 )
    n = 1
    while True :
        s1 , s2 = sys . argv [ 1 : ]
        if s1 == name1 :
            name1 = s2
        if s1 == name2 :
            name2 = s2
        print ( name1 , name2 )
        n -= 1
        if n == 0 :
            break


---> console_out:
 
DIDN'T MATCH!! :(
  3%|▎         | 59/1746 [00:01<00:41, 41.05it/s]  File "./junk/1692576702099_1661/main.py", line 21
    
                                                                                   ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 60
---> probID: codeforces_710_B
---> inputs:
4
1 2 3 4
---> outputs:
2

def main ( ) :
    import sys
    import os
    import getopt
    parser = optparse . OptionParser ( usage = "%progSPACETOKEN[options]" )
    parser . add_option ( "--input" , dest = "input" , help = "InputSPACETOKENfileSPACETOKENtoSPACETOKENread" )
    parser . add_option ( "--output" , dest = "output" , help = "OutputSPACETOKENfileSPACETOKENtoSPACETOKENwrite" )
    parser . add_option ( "--solver" , dest = "solver" , help = "SolverSPACETOKENtoSPACETOKENuse" )
    parser . add_option ( "--solver-file" , dest = "solver_file" , help = "SolverSPACETOKENfileSPACETOKENtoSPACETOKENuse" )
    parser . add_option ( "--solver-file-file" , dest = "solver_file_file" , help = "SolverSPACETOKENfileSPACETOKENtoSPACETOKENuse" )
    parser . add_option ( "--solver-file-file" , dest = "solver_file_file_file" , help = "SolverSPACETOKENfileSPACETOKENtoSPACETOKENuse" )
    parser . add_option ( "--solver-file-file" , dest = "solver_file_file_file" , help = "SolverSPACETOKENfileSPACETOKENtoSPACETOKENuse" )
    parser . add_option ( "--solver-file-file-file" , dest = "solver_file_file_file" , help = "SolverSPACETOKENfileSPACETOKENtoSPACETOKENuse" )
    parser . add_option ( "--solver-file-file-file" , dest = "solver_file_file_file" , help = "SolverSPACETOKENfileSPACETOKENtoSPACETOKENuse" )
    parser . add_option ( "--solver-file-file-file" , dest = "solver_file_file_file" , help = "SolverSPACETOKENfileSPACETOKENtoSPACETOKENuse" )
    parser . add_option ( "--solver-file-file-file-file" , dest = "solver_file_file_file" , help = "SolverSPACETOKENfileSPACETOKENtoSPACETOKENuse" )
    parser . add_option ( "--solver-file-file-file-file" , dest = "solver_file_file_file" , help = "SolverSPACETOKENfileSPACETOKENtoSPACETOKENuse" )
    options , args = parser . parse_args ( )
    solver = TaskA ( )
    solver . solve ( 1 , options . solver , options . solver , options . solver

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 61
---> probID: codeforces_897_B
---> inputs:
2 100
---> outputs:
33

def main ( ) :
    import sys
    import os
    import getopt
    parser = optparse . OptionParser ( usage = "%prog [options]" )
    parser . add_option ( "--input" , dest = "input" , help = "Input file to read" )
    parser . add_option ( "--output" , dest = "output" , help = "Output file to write" )
    parser . add_option ( "--solver" , dest = "solver" , help = "Solver to use" )
    parser . add_option ( "--solver-file" , dest = "solver_file" , help = "Solver file to use" )
    parser . add_option ( "--solver-file-out" , dest = "solver_file_out" , help = "Solver file to use" )
    parser . add_option ( "--solver-file-out" , dest = "solver_file_out" , help = "Solver file to use" )
    parser . add_option ( "--solver-file-out" , dest = "solver_file_out" , help = "Solver file to use" )
    parser . add_option ( "--solver-file-out" , dest = "solver_file_out" , help = "Solver file to use" )
    parser . add_option ( "--solver-file-out" , dest = "solver_file_out" , help = "Solver file to use" )
    parser . add_option ( "--solver-file-out" , dest = "solver_file_out" , help = "Solver file to use" )
    parser . add_option ( "--solver-file-out" , dest = "solver_file_out" , help = "Solver file to use" )
    parser . add_option ( "--solver-file-out" , dest = "solver_file_out" , help = "Solver file to use" )
    parser . add_option ( "--solver-file-out" , dest = "solver_file_out" , help = "Solver file to use" )
    options , args = parser . parse_args ( )
    solver = TaskA ( )
    solver . solve ( 1 , options )

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 62
---> probID: atcoder_AGC005_B
---> inputs:
1
1
---> outputs:
1

def main ( ) :
    import sys
    import getopt
    n = len ( sys . argv )
    a = [ ]
    p = { }
    for i in range ( n ) :
        a . append ( sys . argv [ i ] - 1 )
        p [ a [ i ] ] = i
    x = sorted ( p )
    l = [ ]
    r = [ ]
    for i in range ( n ) :
        x . append ( p [ i ] )
        if x . first ( ) == p [ i ] :
            l . append ( p [ i ] + 1 )
        else :
            lower = x . lower ( p [ i ] )
            l . append ( p [ i ] - lower )
        if x . last ( ) == p [ i ] :
            r . append ( n - p [ i ] )
        else :
            high = x . higher ( p [ i ] )
            r . append ( high - p [ i ] )
    ans = 0
    for i in range ( n ) :
        ans += long ( l [ i ] * r [ i ] * ( i + 1 ) )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 63
---> probID: geeksforgeeks_3935_A
---> inputs:

---> outputs:
The length of the LPS is 5


def LPS ( seq ) :
    n = len ( seq )
    i , j , cl = seq
    L = [ [ 1 ] * n for i in range ( n ) ]
    for cl in range ( 2 , n + 1 ) :
        for i in range ( n - cl + 1 ) :
            j = i + cl - 1
            if seq [ i ] == seq [ j ] and cl == 2 :
                L [ i ] [ j ] = 2
            elif seq [ i ] == seq [ j ] :
                L [ i ] [ j ] = L [ i + 1 ] [ j - 1 ] + 2
            else :
                L [ i ] [ j ] = max ( L [ i ] [ j - 1 ] , L [ i + 1 ] [ j ] )
    return L [ 0 ] [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 64
---> probID: geeksforgeeks_906_A
---> inputs:

---> outputs:
12 = 3 + 4 + 5

def GFG ( last , first ) :
    print ( first )
    for x in range ( first , last + 1 ) :
        print ( " + " + str ( x ) )
    find_consecutive ( N )
    for last in range ( 1 , N + 1 ) :
        for first in range ( 0 , last + 1 ) :
            if 2 * N == ( last - first ) * ( last + first + 1 ) :
                print ( N + " = " )
                print_consecutive ( last , first + 1 )
                return
    print ( "-1" )


---> console_out:
 
DIDN'T MATCH!! :(
  4%|▎         | 64/1746 [00:01<00:41, 40.86it/s]

-------------------------------------


---> lineNum: 65
---> probID: codeforces_761_A
---> inputs:
2 3
---> outputs:
YES

def test_CF ( ) :
    f = py . io . TextIO ( encoding = 'utf-8' )
    f . write ( '' )
    even , odd = f . getvalue ( ) . split ( '\n' )
    if even == '' and odd == '' :
        assert 'NO' in f . getvalue ( )
    else :
        sub = abs ( even - odd )
        if sub <= 1 :
            assert 'YES' in f . getvalue ( )
        else :
            assert 'NO' in f . getvalue ( )
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 66
---> probID: geeksforgeeks_1240_A
---> inputs:

---> outputs:
924


def __gcd ( x , y ) :
    if not isinstance ( x , int ) or not isinstance ( y , int ) :
        return 0
    if not a ( x ) :
        return a ( y )
    if a ( x ) > b ( y ) :
        return __gcd ( a ( x ) - b ( y ) )
    return __gcd ( a ( x ) , b ( y ) - a ( x ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 67
---> probID: geeksforgeeks_2873_A
---> inputs:

---> outputs:
Yes


def get_GFG ( s ) :
    n = len ( s )
    c = [ ]
    for i in range ( n ) :
        c . append ( s [ i ] )
    c . sort ( )
    for i in range ( n ) :
        if c [ i ] != s [ i ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 68
---> probID: geeksforgeeks_659_A
---> inputs:

---> outputs:
3 4 5 6 7 8 9 10 

def GFG ( arr , n , k ) :
    j , max = 0 , 0
    for i in range ( 0 , n - k ) :
        max = arr [ i ]
        for j in range ( 1 , k ) :
            if arr [ i + j ] > max :
                max = arr [ i + j ]
        print ( max , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 69
---> probID: atcoder_AGC011_C
---> inputs:
100 50
1 63
57 63
13 75
56 87
27 31
29 35
79 84
14 56
48 52
29 39
43 53
48 96
27 69
32 77
52 83
22 88
26 79
25 78
57 75
11 24
70 79
4 61
74 79
15 16
31 74
27 43
44 51
61 100
33 98
37 92
71 98
30 61
35 39
63 82
49 91
27 99
18 87
4 45
51 99
44 58
1 50
3 77
6 76
36 80
74 80
40 77
6 25
21 27
24 93
1 8
---> outputs:
6396

def main ( ) :
    import sys
    global graph
    global visited
    color = [ ]
    one = 0
    bipartite = 0
    count = 0
    mujun = 0
    dfs ( )
    if visited [ a ] :
        if color [ a ] >= 0 and color [ a ] != c :
            mujun = True
        return 0
    visited [ a ] = True
    color [ a ] = c
    total = 1
    for b in graph [ a ] :
        total += dfs ( b , 1 - c )
    return total


---> console_out:
 
DIDN'T MATCH!! :(
  4%|▍         | 69/1746 [00:01<00:40, 41.38it/s]  File "./junk/1692576702340_4795/main.py", line 20
    
                        ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 70
---> probID: codeforces_760_B
---> inputs:
4 6 2
---> outputs:
2

def main ( ) :
    import sys
    import getopt
    parser = optparse . OptionParser ( usage = "%progSPACETOKEN[options]" )
    parser . add_option ( "--test-number" , dest = "test_number" , help = "testSPACETOKENnumberSPACETOKENtoSPACETOKENrun" )
    parser . add_option ( "--test-file" , dest = "test_file" , help = "testSPACETOKENfileSPACETOKENtoSPACETOKENrun" )
    parser . add_option ( "--test-file-type" , dest = "test_file_type" , help = "testSPACETOKENfileSPACETOKENtypeSPACETOKENtoSPACETOKENrun" )
    parser . add_option ( "--test-file-type-multiple" , dest = "test_file_type_multiple" , help = "testSPACETOKENfileSPACETOKENtypeSPACETOKENmultipleSPACETOKENtimes" )
    parser . add_option ( "--test-file-type-multiple" , dest = "test_file_type_multiple" , help = "testSPACETOKENfileSPACETOKENtypeSPACETOKENmultipleSPACETOKENtimes" )
    parser . add_option ( "--test-file-type-multiple" , dest = "test_file_type_multiple" , help = "testSPACETOKENfileSPACETOKENtypeSPACETOKENmultipleSPACETOKENtimes" )
    parser . add_option ( "--test-file-type-multiple" , dest = "test_file_type_multiple" , help = "testSPACETOKENfileSPACETOKENtypeSPACETOKENmultipleSPACETOKENtimes" )
    parser . add_option ( "--test-file-type-multiple" , dest = "test_file_type_multiple" , help = "testSPACETOKENfileSPACETOKENtypeSPACETOKENmultipleSPACETOKENtimes" )
    parser . add_option ( "--test-file-type-multiple" , dest = "test_file_type_multiple" , help = "testSPACETOKENfileSPACETOKENtypeSPACETOKENmultipleSPACETOKENtimes" )
    parser . add_option ( "--test-file-type-multiple" , dest = "test_file_type_multiple" , help = "testSPACETOKENfileSPACETOKENtypeSPACETOKENmultipleSPACETOKENtimes" )
    parser . add_option ( "--test-file-type-multiple" , dest = "test_file_type_multiple" , help = "testSPACETOKENfileSPACETOKENtypeSPACETOKENmultipleSPACETOKENtimes" )
    options , args = parser . parse_args ( )
    if options . test_number is None :
        parser . print_help ( )
        sys . exit (

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 71
---> probID: atcoder_ABC075_D
---> inputs:
4 4
1 4
3 3
6 2
8 1
---> outputs:
21

def main ( ) :
    import sys
    main = sys . exit
    class P ( object ) :
        x = [ ]
        y = [ ]
        def __init__ ( self , x , y ) :
            self . x = x
            self . y = y
        @ property
        def __lt__ ( self , other ) :
            return any ( self . x < other . x for x in self . x )
        @ property
        def __gt__ ( self , other ) :
            return any ( self . x > other . x for x in self . x )
    sys . argv = sys . argv [ 1 : ]
    N = sys . argv [ 2 ]
    K = sys . argv [ 3 ]
    x = [ ]
    y = [ ]
    for i in range ( N ) :
        x . append ( i )
        y . append ( i )
    ans = float ( 'inf' )
    for i in range ( N ) :
        x1 = x [ i ]
        for j in range ( N ) :
            x2 = x [ j ]
            if x1 >= x2 :
                continue
            for k in range ( N ) :
                y1 = y [ k ]
                for l in range ( N ) :
                    y2 = y [ l ]
                    if y1 >= y2 :
                        continue
                    cnt = 0
                    for m in range ( N ) :
                        if x1 <= x [ m ] and x [ m ] <= x2 and y1 <= y [ m ] and y [ m ] <= y2 :
                            cnt += 1
                    if cnt == K :
                        ans = min ( ans , ( x2 - x1 ) * ( y2 - y1 ) )
    print ( ans )
    sys . exit ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 72
---> probID: codeforces_1575_A
---> inputs:
5 2
AA
AB
BB
BA
AZ
---> outputs:
5 2 1 3 4

def main ( ) :
    import sys
    import getopt
    for o , a in getopt . getopt ( sys . argv [ 1 : ] , '' ) :
        if o == '-h' :
            return
        if o == '-v' :
            return
        if o == '--version' :
            return
        if o == '--id' :
            return
        if o == '--name' :
            return
        if o == '--id-name' :
            return
        if o == '--name-id' :
            return
        if o == '--id-name' :
            return
        if o == '--name-id' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
        if o == '--id-name' :
            return
    sys . exit ( 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 73
---> probID: geeksforgeeks_972_A
---> inputs:

---> outputs:
e
ek
k


def test_GFG ( substrings , s ) :
    n = len ( s )
    count = 0
    for i in range ( n ) :
        dup = ""
        for j in range ( i , n ) :
            dup += s [ j ]
            substrings [ count ] = dup
    size = len ( substrings )
    for i in range ( size - 1 ) :
        for j in range ( i + 1 , len ( substrings ) ) :
            if substrings [ i ] > substrings [ j ] :
                temp = substrings [ i ]
                substrings [ i ] , substrings [ j ] = substrings [ j ] , substrings [ i ]
                substrings [ j ] = temp
    s = "geek"
    substrings = [ ]
    pre_process ( substrings , s )
    queries = [ 1 , 5 , 10 ]
    q = len ( queries )
    for i in range ( q ) :
        assert substrings [ queries [ i ] - 1 ] == s [ queries [ i ] - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 74
---> probID: aizu_p00686_A
---> inputs:
6 5
FORWARD 3
RIGHT
FORWARD 5
LEFT
BACKWARD 2
STOP
3 1
FORWARD 2
STOP
0 0
---> outputs:
6 2
1 1

def main ( ) :
    import sys
    while 1 :
        w , h = input ( ) . split ( )
        if w == 0 and h == 0 :
            break
        s = ""
        t = 0
        d = 0
        x = 0
        y = 0
        c = ""
        while 1 :
            s = input ( ) . split ( )
            c = s [ 0 ]
            if c == "S" :
                print ( ( x , y ) )
                break
            elif c == "R" :
                d += 1
                if d == 4 :
                    d = 0
            elif c == "L" :
                d -= 1
                if d == - 1 :
                    d = 3
            elif ( c == "F" and d == 0 ) or ( c == "B" and d == 2 ) :
                t = input ( ) . split ( )
                y += t
                if y > h - 1 :
                    y = h - 1
            elif ( c == "F" and d == 1 ) or ( c == "B" and d == 3 ) :
                t = input ( ) . split ( )
                x += t
                if x > w - 1 :
                    x = w - 1
            elif ( c == "F" and d == 2 ) or ( c == "B" and d == 0 ) :
                t = input ( ) . split ( )
                y -= t
                if y < 0 :
                    y = 0
            elif ( c == "F" and d == 3 ) or ( c == "B" and d == 1 ) :
                t = input ( ) . split ( )
                x -= t
                if x < 0 :
                    x = 0


---> console_out:
 
DIDN'T MATCH!! :(
  4%|▍         | 74/1746 [00:01<00:40, 41.06it/s]

-------------------------------------


---> lineNum: 75
---> probID: codeforces_978_B
---> inputs:
6
xxxiii
---> outputs:
1

def get_file_name ( ) :
    import sys
    import string
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'x' )
    except getopt . error as msg :
        print ( msg )
        return
    count = 0
    total = 0
    for o , a in opts :
        if o == '-x' :
            count += 1
            continue
        else :
            if count >= 3 :
                total += count - 2
                count = 0
            count = 0
    if count >= 3 :
        total += count - 2
        count = 0
    print ( total )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 76
---> probID: aizu_p00174_A
---> inputs:
ABAABBBAABABAAABBAA
AABBBABBABBAAABABABAAB
BABAABAABABABBAAAB
AABABAAABBAABBBABAA
AAAAAAAAAAA
ABBBBBBBBBB
0
---> outputs:
11 8
10 12
11 7
11 8
11 0
0 11

def main ( ) :
    f = sys . stdin
    while True :
        a = f . readline ( )
        num = a . split ( )
        if num [ 0 ] == '0' :
            break
        A , B = 0 , 0
        for c in num :
            if c == 'A' :
                A += 1
            else :
                B += 1
        if A > B :
            A += 1
        else :
            B += 1
        print ( A , B )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576702511_8845/main.py", line 22
    assert
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 77
---> probID: geeksforgeeks_4565_A
---> inputs:

---> outputs:
384


def test_GFG ( ) :
    i , product = symbols ( 'i product' , integer = True , positive = True )
    assert product . nthpoly ( 1 ) == ( 1 , 1 )
    assert product . nthpoly ( 2 ) == ( 2 , 2 )
    assert product . nthpoly ( 3 ) == ( 3 , 3 )
    assert product . nthpoly ( 4 ) == ( 4 , 4 )
    assert product . nthpoly ( 5 ) == ( 5 , 5 )
    assert product . nthpoly ( 6 ) == ( 6 , 6 )
    assert product . nthpoly ( 7 ) == ( 7 , 7 )
    assert product . nthpoly ( 8 ) == ( 8 , 8 )
    assert product . nthpoly ( 9 ) == ( 9 , 9 )
    assert product . nthpoly ( 10 ) == ( 10 , 10 )
    assert product . nthpoly ( 11 ) == ( 11 , 11 )
    assert product . nthpoly ( 12 ) == ( 12 , 12 )
    assert product . nthpoly ( 13 ) == ( 13 , 13 )
    assert product . nthpoly ( 14 ) == ( 14 , 14 )
    assert product . nthpoly ( 15 ) == ( 15 , 15 )
    assert product . nthpoly ( 16 ) == ( 16 , 16 )
    assert product . nthpoly ( 17 ) == ( 17 , 17 )
    assert product . nthpoly ( 18 ) == ( 18 , 18 )
    assert product . nthpoly ( 19 ) == ( 19 , 19 )
    assert

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 78
---> probID: geeksforgeeks_2543_A
---> inputs:

---> outputs:
7


def GFG ( arr , n ) :
    is_zero_present = False
    for i in range ( n ) :
        if arr [ i ] == 0 :
            is_zero_present = True
            break
    if is_zero_present :
        return n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 79
---> probID: codeforces_1107_B
---> inputs:
3
1 5
5 2
3 1
---> outputs:
5
38
19

def test_aa ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' , integer = True , positive = True )
    for i in range ( t . size ) :
        k = symbols ( 'k' , integer = True , positive = True )
        x = symbols ( 'x' , integer = True , positive = True )
        f = k * 9
        for y in range ( x , 9 ) :
            f -= 1
        assert f == x ** 9


---> console_out:
 
DIDN'T MATCH!! :(
  5%|▍         | 79/1746 [00:01<00:40, 41.41it/s]

-------------------------------------


---> lineNum: 80
---> probID: geeksforgeeks_826_A
---> inputs:

---> outputs:
56


def test_GFG ( ) :
    left , right , above , below = x * b , ( l - x - 1 ) * b , ( b - y - 1 ) * l
    assert max ( max ( [ left , right ] ) , key = lambda x : x ) == max ( [ above , below ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 81
---> probID: geeksforgeeks_4907_A
---> inputs:

---> outputs:
The length of the smallest substring consisting of maximum distinct characters : 5


def GFG ( str , n ) :
    NO_OF_CHARS = 256
    max_distinct_char = [ 0 ] * ( NO_OF_CHARS - 1 )
    max_distinct = 0
    for char in str :
        if char != 0 :
            max_distinct += 1
    return max_distinct


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 82
---> probID: codeforces_1722_B
---> inputs:
6
2
RG
RB
4
GRBG
GBGB
5
GGGGG
BBBBB
7
BBBBBBB
RRRRRRR
8
RGBRRGBR
RGGRRBGR
1
G
G
---> outputs:
YES
NO
YES
NO
YES
YES

def main ( ) :
    import sys
    import getopt
    import os
    import string
    import re
    import math
    import random
    import time
    import sys
    import string
    import os
    import re
    import math
    import math
    import time
    import string
    import math
    import random
    import string
    import math
    import math
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 83
---> probID: geeksforgeeks_4843_A
---> inputs:

---> outputs:
2


def GFG ( n , q , size ) :
    row = [ ]
    col = [ ]
    for i in range ( size ) :
        x , y = q [ i ]
        row . append ( x - 1 )
        col . append ( y - 1 )
    r1 , r2 = 0 , 0
    c1 , c2 = 0 , 0
    for i in range ( n ) :
        if row [ i ] % 2 == 0 : r1 += 1
        if row [ i ] % 2 == 1 : r2 += 1
        if col [ i ] % 2 == 0 : c1 += 1
        if col [ i ] % 2 == 1 : c2 += 1
    count = r1 * c1 + r2 * c2
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 84
---> probID: geeksforgeeks_4884_A
---> inputs:

---> outputs:
Increasing


def test_GFG ( ) :
    arr = np . array ( [ 1 , 2 , 3 , 4 ] )
    n = len ( arr )
    check_dtype ( arr , n )


---> console_out:
 
DIDN'T MATCH!! :(
  5%|▍         | 84/1746 [00:02<00:40, 41.47it/s]

-------------------------------------


---> lineNum: 85
---> probID: codeforces_1437_B
---> inputs:
3
2
10
4
0110
8
11101000
---> outputs:
0
1
2

def binary_str ( ) :
    bf = open ( '/proc/cpuinfo' , 'r' )
    t = int ( bf . readline ( ) )
    for i in range ( t ) :
        n = int ( bf . readline ( ) )
        arr = bf . readline ( ) . split ( )
        arr2 = [ arr [ i ] ]
        for j in range ( 0 , n - 1 ) :
            if j % 2 == 0 : arr2 . append ( '0' )
            else : arr2 . append ( '1' )
        cur = 0
        k = 0
        for j in range ( 0 , n - 1 ) :
            if arr [ j ] == arr2 [ j ] : continue
            for k in range ( j , n - 1 ) :
                if arr [ k ] == arr2 [ k ] : break
            cur += 1
            j = k - 1
        ans = int ( '' )
        ans = min ( ans , cur )
        for j in range ( 0 , n - 1 ) :
            if arr [ j ] == arr2 [ j ] : continue
            for k in range ( j , n - 1 ) :
                if arr [ k ] == arr2 [ k ] : break
            cur += 1
            j = k - 1
        ans = min ( ans , cur )
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 86
---> probID: codeforces_337_B
---> inputs:
1 1 3 2
---> outputs:
1/3

def test_code_forces ( ) :
    fs = code_forces ( )
    a , b , c , d = fs
    p , q = a * d - b * c , a * d
    k = gcd ( p , q )
    p /= k
    q /= k
    assert p == q


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 87
---> probID: geeksforgeeks_3703_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    x = 3
    assert number_of_ways ( x ) == x


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 88
---> probID: geeksforgeeks_4403_A
---> inputs:

---> outputs:
[-1, -3, -7, 4, 5, 6, 2, 8, 9]


def pyGFG ( arr , n ) :
    j , temp = 0 , 0
    for i in range ( n ) :
        if arr [ i ] < 0 :
            if i != j :
                temp = arr [ i ]
                arr [ i ] , arr [ j ] = arr [ j ] , temp
            j += 1
    return arr


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576702798_9454/main.py", line 45
    assert n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n ==
                                                                                                                                                                                                            ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 89
---> probID: geeksforgeeks_1727_A
---> inputs:

---> outputs:
7th Centered square number: 85


def test_GFG ( ) :
    n = 7
    assert n == 1
    assert n == 2
    assert n == 3
    assert n == 4
    assert n == 5
    assert n == 6
    assert n == 7
    assert n == 8
    assert n == 9
    assert n == 10
    assert n == 11
    assert n == 12
    assert n == 13
    assert n == 14
    assert n == 15
    assert n == 16
    assert n == 17
    assert n == 18
    assert n == 19
    assert n == 20
    assert n == 21
    assert n == 22
    assert n == 23
    assert n == 24
    assert n == 25
    assert n == 26
    assert n == 27
    assert n == 28
    assert n == 29
    assert n == 30
    assert n == 31
    assert n == 32
    assert n == 33
    assert n == 34
    assert n == 35
    assert n == 36
    assert n == 37
    assert n == 38
    assert n == 39
    assert n == 40
    assert n == 41
    assert n == 42
    assert n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n ==

---> console_out:
 
DIDN'T MATCH!! :(
  5%|▌         | 89/1746 [00:02<00:40, 41.17it/s]

-------------------------------------


---> lineNum: 90
---> probID: codeforces_1327_A
---> inputs:
6
3 1
4 2
10 3
10 2
16 4
16 5
---> outputs:
YES
YES
NO
YES
YES
NO

def pyteest ( ) :
    import sys
    import doctest
    import os
    import pickle
    import tempfile
    import time
    import doctest
    import tempfile
    import pickle
    import os
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 91
---> probID: codeforces_1248_B
---> inputs:
3
1 2 3
---> outputs:
26

def test_growth_the_tree ( ) :
    G = nx . DiGraph ( )
    G . add_nodes_from ( [ 1 , 2 , 3 ] )
    G . add_nodes_from ( [ 4 , 5 , 6 ] )
    G . add_nodes_from ( [ 7 , 8 , 9 ] )
    G . add_edge ( 1 , 2 )
    G . add_edge ( 2 , 3 )
    G . add_edge ( 3 , 4 )
    G . add_edge ( 4 , 5 )
    G . add_edge ( 5 , 6 )
    G . add_edge ( 6 , 7 )
    G . add_edge ( 7 , 8 )
    G . add_edge ( 8 , 9 )
    G . add_edge ( 9 , 10 )
    G . add_edge ( 10 , 11 )
    G . add_edge ( 11 , 12 )
    G . add_edge ( 12 , 13 )
    G . add_edge ( 13 , 14 )
    G . add_edge ( 14 , 15 )
    G . add_edge ( 15 , 16 )
    G . add_edge ( 16 , 17 )
    G . add_edge ( 17 , 18 )
    G . add_edge ( 18 , 19 )
    G . add_edge ( 19 , 20 )
    G . add_edge ( 20 , 21 )
    G . add_edge ( 21 , 22 )
    G . add_edge ( 22 , 23 )
    G . add_edge ( 23 , 24 )
    G . add_edge ( 24 , 25 )
    G . add_edge ( 25 , 26 )
    G . add_edge ( 26 , 27 )
    G . add_edge ( 27 , 28 )
    G . add_edge ( 28 , 29 )
    G . add_edge ( 29 , 30 )
    G . add_edge ( 30 , 31 )
    G . add_edge ( 31 , 32 )
    G . add_edge ( 32 , 33 )
    G . add_edge ( 33 , 34 )
    G . add_edge ( 34 , 35 )
    G . add_edge ( 35 , 36 )
    G . add_edge ( 36 , 37 )
    G . add_edge ( 37 , 38 )
    G . add_edge ( 38 , 39 )
    G . add_edge ( 39 , 40 )
    G . add_edge ( 40 , 41 )
    G . add_edge ( 41 , 42 )
    G . add_edge ( 42 , 43 )
    G . add_edge ( 43 , 44 )
    G . add_edge ( 44 , 45 )
    G . add_edge ( 45 , 46 )
    G . add_edge ( 46 , 47 )
    G . add_edge ( 47 , 58 )
    G . add_edge ( 58 , 59 )
    G . add_edge ( 58 , 59 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 92
---> probID: geeksforgeeks_307_A
---> inputs:

---> outputs:
Length of longest subarray having maximum sum = 4


def get_max_subarray_sum ( arr , size ) :
    max_so_far = arr [ 0 ]
    curr_max = arr [ 0 ]
    for i in range ( 1 , size ) :
        curr_max = max ( arr [ i ] , curr_max + arr [ i ] )
        max_so_far = max ( max_so_far , curr_max )
    return max_so_far


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 93
---> probID: aizu_p01880_A
---> inputs:
2
1 2
---> outputs:
2

def main ( ) :
    import sys
    import getopt
    global debug
    global solve
    global dump
    import time
    import sys
    import os
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , "dmp" )
    except getopt . error as msg :
        sys . stdout . write ( msg )
        sys . exit ( 2 )
    for o , a in opts :
        if o == '-d' :
            debug = a
        elif o == '-h' :
            usage ( )
            sys . exit ( 0 )
    if args :
        for arg in args :
            if arg [ 0 ] == '-d' :
                debug = True
    if debug :
        sys . exit ( 0 )
    for arg in args :
        if arg . startswith ( "-" ) :
            if arg [ 1 : ] == "-" :
                arg = arg [ 2 : ]
            if arg not in dump :
                dump [ arg ] = 1
    if debug :
        sys . exit ( 0 )
    for arg in args :
        if arg . startswith ( "-" ) :
            if arg [ 1 : ] == "-" :
                arg = arg [ 2 : ]
            if arg not in dump :
                dump [ arg ] = 1
    if dump :
        print ( "%d ms" % ( len ( dump ) ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 94
---> probID: geeksforgeeks_2848_A
---> inputs:

---> outputs:
3, 1


def GFG ( dividend , divisor , start , end ) :
    if start > end :
        return [ 0 , dividend ]
    mid = start + ( end - start ) // 2
    n = dividend - divisor * mid
    if n > divisor :
        start = mid + 1
    elif n < 0 :
        end = mid - 1
    else :
        if n == divisor :
            yield mid , n
            n = 0
        return [ mid , n ]


---> console_out:
 
DIDN'T MATCH!! :(
  5%|▌         | 94/1746 [00:02<00:40, 40.86it/s]

-------------------------------------


---> lineNum: 95
---> probID: codeforces_567_A
---> inputs:
4
-5 -2 2 7
---> outputs:
3 12
3 9
4 7
5 12

def test_omar ( ) :
    input = np . array ( [ [ 1 , 2 ] , [ 3 , 4 ] ] )
    size = input . shape [ 0 ]
    min , max = 0 , 0
    arr = input [ : size ]
    for i in range ( size ) :
        if i == 0 :
            min , max = abs ( arr [ i ] - arr [ i + 1 ] ) , abs ( arr [ i ] - arr [ size - 1 ] )
        elif i == size - 1 :
            min , max = abs ( arr [ i ] - arr [ i - 1 ] ) , abs ( arr [ i ] - arr [ 0 ] )
        elif i != 0 and i != size - 1 :
            min , max = min ( abs ( arr [ i ] - arr [ i - 1 ] ) , abs ( arr [ i ] - arr [ i + 1 ] ) ) , abs ( arr [ i ] - arr [ size - 1 ] )
        assert min == max


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 96
---> probID: codeforces_1198_A
---> inputs:
6 1
2 1 2 3 4 3
---> outputs:
2

def mp3 ( ) :
    import sys
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 97
---> probID: geeksforgeeks_4345_A
---> inputs:

---> outputs:
Move disk 1 from rod A to rod D
Move disk 2 from rod A to rod B
Move disk 1 from rod D to rod B
Move disk 3 from rod A to rod C
Move disk 4 from rod A to rod D
Move disk 3 from rod C to rod D
Move disk 1 from rod B to rod C
Move disk 2 from rod B to rod D
Move disk 1 from rod C to rod D


def GFG ( n , from_rod , to_rod , aux_rod1 , aux_rod2 ) :
    if n == 0 :
        return
    if n == 1 :
        print ( "Move disk %d from rod %d to rod %d" % ( n , from_rod , to_rod ) )
        return
    towerOfHanoi ( n - 2 , from_rod , aux_rod1 , aux_rod2 , to_rod )
    print ( "Move disk %d from rod %d to rod %d" % ( ( n - 1 ) , from_rod , to_rod ) )
    print ( "Move disk %d from rod %d to rod %d" % ( n , from_rod , to_rod ) )
    print ( "Move disk %d from rod %d to rod %d" % ( ( n - 1 ) , aux_rod2 , to_rod ) )
    towerOfHanoi ( n - 2 , aux_rod1 , to_rod , from_rod , aux_rod2 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576703025_2641/main.py", line 10
    print ( """ usage : SPACETOKEN % s SPACETOKEN [ - n | - o | - a | - b | - c | - d

SyntaxError: EOF while scanning triple-quoted string literal


-------------------------------------


---> lineNum: 98
---> probID: codeforces_133_B
---> inputs:
,.
---> outputs:
220

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , '' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """ usage : SPACETOKEN % s SPACETOKEN [ - n | - o | - a | - b | - c | - d

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 99
---> probID: aizu_p02460_A
---> inputs:
8
0 blue 4
0 red 1
0 white 5
1 red
1 blue
2 red
1 black
1 red
---> outputs:
1
4
0
0

def main ( ) :
    stdscr = curses . initscr ( )
    dic = { }
    count = stdscr . getcount ( )
    for i in range ( count ) :
        command = stdscr . getch ( )
        try :
            dic [ command ] = stdscr . getch ( )
        except curses . error :
            print ( "Invalid command: " + command )
        if dic [ command ] :
            print ( dic [ command ] )
        else :
            print ( 0 )
        break
    stdscr . keypad ( 1 )


---> console_out:
 
DIDN'T MATCH!! :(
  6%|▌         | 99/1746 [00:02<00:40, 40.84it/s]

-------------------------------------


---> lineNum: 100
---> probID: geeksforgeeks_3771_A
---> inputs:

---> outputs:
20


def test_GFG ( ) :
    arr , n = symbols ( 'arr n' , integer = True , positive = True )
    sum , prev = arr , arr
    for i in range ( 1 , n ) :
        if arr [ i ] <= prev :
            prev = prev + 1
            sum , sum = sum + prev , sum
        else :
            sum , sum = sum + arr [ i ] , sum
            prev , prev = arr [ i ] , prev + 1
    assert minsum ( arr , n ) == sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 101
---> probID: geeksforgeeks_3564_A
---> inputs:

---> outputs:
6


def test_GFG ( ) :
    k = 7
    res = find_n ( k )
    if res == - 1 :
        assert "Not possible" in res
    else :
        assert res == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 102
---> probID: geeksforgeeks_326_A
---> inputs:

---> outputs:
3


def get_subset_XOR ( arr , n , K ) :
    max_ele = arr [ 0 ]
    for i in range ( 1 , n ) :
        if arr [ i ] > max_ele :
            max_ele = arr [ i ]
    m = ( 1 << int ( math . log ( max_ele , 2 ) / math . log ( 2 ) + 1 ) ) - 1
    dp = [ [ 0 ] * ( n + 1 ) + [ 0 ] * ( m + 1 ) + [ 0 ] * ( n + 1 ) ]
    for i in range ( 0 , n + 1 ) :
        for j in range ( 0 , m + 1 ) :
            for k in range ( 0 , n + 1 ) :
                dp [ i ] [ j ] [ k ] = 0
    for i in range ( 0 , n + 1 ) :
        dp [ i ] [ 0 ] [ 0 ] = 1
    for i in range ( 1 , n + 1 ) :
        for j in range ( 0 , m + 1 ) :
            for k in range ( 0 , n + 1 ) :
                dp [ i ] [ j ] [ k ] = dp [ i - 1 ] [ j ] [ k ]
                if k != 0 :
                    dp [ i ] [ j ] [ k ] += k * dp [ i - 1 ] [ j ^ arr [ i - 1 ] ] [ k - 1 ]
    ans = 0
    for i in range ( 1 , n + 1 ) :
        ans += dp [ n ] [ K ] [ i ]
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 103
---> probID: atcoder_ABC104_C
---> inputs:
2 700
3 500
5 800
---> outputs:
3

def main ( ) :
    import sys
    D = int ( sys . argv [ 1 ] )
    G = int ( sys . argv [ 2 ] )
    p = [ ]
    c = [ ]
    for i in range ( D ) :
        p . append ( i )
        c . append ( i )
    min = 1001
    count = 0
    ans = 0
    a = 4
    for i in range ( pow ( 2 , D ) ) :
        bit = str ( i ) . replace ( ' ' , '0' )
        N = len ( bit )
        for j in range ( N ) :
            if bit [ j ] == '1' :
                count += p [ j ] * ( j + 1 ) * 100 + c [ j ]
                ans += p [ j ]
        if count < G :
            for j in range ( N - 1 , - 1 , - 1 ) :
                if bit [ j ] == '0' :
                    l = p [ j ]
                    while count < G and l > 0 :
                        count += ( j + 1 ) * 100
                        ans += 1
                        l -= 1
        if count >= G :
            min = min ( ans , min )
        count = 0
        ans = 0
    print ( min )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 104
---> probID: codeforces_1436_A
---> inputs:
2
3 8
2 5 1
4 4
0 1 2 3
---> outputs:
YES
NO

def application ( environ , start_response ) :
    start_response ( '200 OK' , [ ( 'Content-Type' , 'text/plain' ) ] )
    data = environ [ 'wsgi.input' ] . read ( )
    for key in data . keys ( ) :
        k = 0
        a = data [ key ]
        b = data [ key ]
        for i in range ( a ) :
            k += i
        if b == k :
            return 'YES'
        else :
            return 'NO'


---> console_out:
 
DIDN'T MATCH!! :(
  6%|▌         | 104/1746 [00:02<00:40, 40.96it/s]

-------------------------------------


---> lineNum: 105
---> probID: codeforces_768_A
---> inputs:
2
1 5
---> outputs:
0

def test_omar ( ) :
    input = np . array ( [ 1 , 2 , 3 ] )
    size = input . shape [ 0 ]
    count = 0
    arr = np . array ( [ 1 , 2 , 3 ] )
    arr . sort ( )
    for i in range ( size ) :
        if arr [ i ] > arr [ 0 ] and arr [ i ] < arr [ size - 1 ] :
            count += 1
    assert count == size


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 106
---> probID: geeksforgeeks_4680_A
---> inputs:

---> outputs:
1


def test_GFG ( ) :
    """Test the GFG algorithm."""
    left = int ( np . power ( 2 , int ( np . log ( n ) / np . log ( 2 ) ) ) )
    right = left ** 2
    assert min ( ( n - left ) for n in range ( left , right + 1 ) ) == ( right - n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 107
---> probID: geeksforgeeks_3537_A
---> inputs:

---> outputs:
Length of LCIS is 2


def test_GFG ( ) :
    table = [ 0 ] * m
    for j in range ( m ) :
        table [ j ] = 0
    for i in range ( n ) :
        current = 0
        for j in range ( m ) :
            if arr1 [ i ] == arr2 [ j ] :
                if current + 1 > table [ j ] :
                    table [ j ] = current + 1
                if arr1 [ i ] > arr2 [ j ] :
                    if table [ j ] > current :
                        current = table [ j ]
        result = 0
        for i in range ( m ) :
            if table [ i ] > result :
                result = table [ i ]
        return result
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 108
---> probID: geeksforgeeks_4508_A
---> inputs:

---> outputs:
Total set bit count is 5


def GFG ( n ) :
    bit_count = 0
    for i in range ( 1 , n + 1 ) :
        bit_count += count_set_bits_util ( i )
    return bit_count


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576703289_5267/main.py", line 5
    do :
       ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 109
---> probID: geeksforgeeks_1639_A
---> inputs:

---> outputs:
Sorted array:
1 5 7 8 9 10 


def get_GFG ( arr , low , high ) :
    pivot = arr [ low ]
    i , j = low - 1 , high + 1
    while True :
        do :
            i += 1
        while arr [ i ] < pivot :
            do :
                j -= 1
            while arr [ j ] > pivot :
                if i >= j :
                    return j
                temp = arr [ i ]
                arr [ i ] , arr [ j ] = arr [ j ] , temp
    quickSort ( arr , low , high )
    if low < high :
        pi = partition ( arr , low , high )
        quickSort ( arr , low , pi )
        quickSort ( arr , pi + 1 , high )
    printArray ( arr , n )


---> console_out:
 
DIDN'T MATCH!! :(
  6%|▌         | 109/1746 [00:02<00:39, 41.23it/s]

-------------------------------------


---> lineNum: 110
---> probID: geeksforgeeks_1638_A
---> inputs:

---> outputs:
Sorted array:
1 5 7 8 9 10 


def gen_free_order ( array , position1 , position2 ) :
    temp = array [ position1 ]
    array [ position1 ] = array [ position2 ]
    array [ position2 ] = temp
    partition ( arr , low , high )
    i = ( low - 1 , high )
    for j in range ( low , high - 1 ) :
        if arr [ j ] <= pivot :
            i += 1
            swap ( arr , i , j )
    swap ( arr , i + 1 , high )
    return ( i + 1 , i )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 111
---> probID: geeksforgeeks_380_A
---> inputs:

---> outputs:
0.5


def GFG ( a , size ) :
    max_so_far , max_ending_here = int ( a [ 0 ] ) , 0
    for i in range ( size ) :
        max_ending_here = max_ending_here + a [ i ]
        if max_so_far < max_ending_here :
            max_so_far , max_ending_here = max_ending_here , max_ending_here
        if max_ending_here < 0 :
            max_ending_here , max_ending_here = 0 , 0
    return max_so_far , max_ending_here


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 112
---> probID: codeforces_1492_B
---> inputs:
4
4
1 2 3 4
5
1 5 2 4 3
6
4 2 5 3 6 1
1
1
---> outputs:
4 3 2 1
5 2 4 3 1
6 1 5 3 4 2
1

def main ( ) :
    import sys
    import getopt
    import os
    import string
    import re
    import time
    import random
    import string
    import sys
    import os
    import time
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 113
---> probID: geeksforgeeks_4970_A
---> inputs:

---> outputs:
1 6 8 

def pyGFG ( N , SUM , K ) :
    minSum = ( N * ( N + 1 ) ) / 2
    maxSum = ( N * K ) - ( N * ( N - 1 ) ) / 2
    if minSum > SUM or maxSum < SUM :
        print ( "Not Possible" )
        return
    arr = [ i for i in range ( N + 1 ) ]
    sum = minSum
    for i in range ( N , - 1 , - 1 ) :
        x = sum + ( K - i )
        if x < SUM :
            sum = sum + ( K - i )
            arr [ i ] = K
            K -= 1
        else :
            arr [ i ] += ( SUM - sum )
            sum = SUM
            break
    for i in range ( 1 , N + 1 ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 114
---> probID: geeksforgeeks_1309_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    """Test the greatest factorial minimization of polynomials."""
    COST = 3
    def f ( x , y , z ) :
        type1 = x // COST
        x %= COST
        type2 = y // COST
        y %= COST
        type3 = z // COST
        z %= COST
        type4 = min ( x , min ( y , z ) )
        max_items = type1 + type2 + type3 + type4
        return max_items
    assert f ( [ 1 , 2 , 3 , 4 ] ) == [ 1 , 2 , 3 , 4 ]


---> console_out:
 
DIDN'T MATCH!! :(
  7%|▋         | 114/1746 [00:02<00:39, 41.08it/s]

-------------------------------------


---> lineNum: 115
---> probID: geeksforgeeks_3471_A
---> inputs:

---> outputs:
14


def test_GFG ( ) :
    A = Queue ( )
    B = Queue ( )
    total_time = 0
    while not A . empty ( ) :
        x = A . get ( )
        y = B . get ( )
        if x == y :
            A . remove ( )
            B . remove ( )
            total_time += 1
        else :
            A . remove ( )
            A . put ( x )
            total_time += 2
    return total_time


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 116
---> probID: geeksforgeeks_3465_A
---> inputs:

---> outputs:
3.0x + 4.0y = 24.0


def test_GFG ( ) :
    c = int ( 2 * y0 * x0 )
    assert str ( y0 ) == "x" + " + " + str ( x0 ) + "y = " + str ( c )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 117
---> probID: codeforces_975_A
---> inputs:
5
a aa aaa ab abb
---> outputs:
2

def main ( agrs ) :
    f = open ( '/home/jeko/Downloads/test.txt' , 'r' )
    n = len ( f )
    set = set ( )
    for i in range ( n ) :
        s = f . read ( )
        l = len ( s )
        x = [ 0 ] * 26
        s1 = ""
        for j in range ( l ) :
            c = s [ j ] - 'a'
            x [ c ] += 1
        for j in range ( 26 ) :
            if x [ j ] > 0 :
                s1 += chr ( ord ( 'a' ) + j )
        set . add ( s1 )
    print ( len ( set ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 118
---> probID: aizu_p02294_A
---> inputs:
3
0 0 3 0 1 1 2 -1
0 0 3 0 3 1 3 -1
0 0 3 0 3 -2 5 0
---> outputs:
1
1
0

def main ( ) :
    import sys
    import getopt
    q = 0
    for line in sys . stdin :
        getopt . getopt ( line , "q" )
    for i in range ( q ) :
        [ c , l , r ] = getopt . getopt ( sys . stdin , "ql:r:" ) ;
        if not c :
            print ( "Usage:" , sys . argv [ 0 ] , "-q" )
            return
        if not l :
            print ( "No line to read" )
            return
        if not r :
            print ( "No line to read" )
            return
        if not r :
            print ( "No line to read" )
            return
        if not r :
            print ( "No line to read" )
            return
        if not l :
            print ( "No line to read" )
            return
        if not r :
            print ( "No line to read" )
            return
        if not r :
            print ( "No line to read" )
            return
        if not c :
            print ( "No line to read" )
            return
        if not l :
            print ( "No line to read" )
            return
        if not r :
            print ( "No line to read" )
            return
        if not c :
            print ( "No line to read" )
            return
        if not r :
            print ( "No line to read" )
            return
        if not l :
            print ( "No line to read" )
            return
        if not r :
            print ( "No line to read" )
            return
        if not c :
            print ( "No line to read" )
            return
        if not r :
            print ( "No line to read" )
            return
        if not c :
            print ( "No line to read" )
            return
        if not r :
            print ( "No line to read" )
            return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 119
---> probID: geeksforgeeks_2741_A
---> inputs:

---> outputs:
YES


def get_GFG ( s ) :
    unique = set ( )
    for c in s :
        unique . add ( c )
    if len ( unique ) > 1 :
        return unique
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(
  7%|▋         | 119/1746 [00:02<00:39, 41.51it/s]

-------------------------------------


---> lineNum: 120
---> probID: geeksforgeeks_4773_A
---> inputs:

---> outputs:
2


def test_find_majority ( arr , n ) :
    arr = arr [ n // 2 ]
    n = len ( arr )
    assert find_majority ( arr , n ) == n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 121
---> probID: codeforces_750_B
---> inputs:
5
7500 South
10000 East
3500 North
4444 West
4000 North
---> outputs:
YES

def get_solution ( ) :
    """
 Return a list of all possible solutions for the current node.
 """
    nodes_colors = [ ]
    visited = [ ]
    neighborstring = [ ]
    start_indices = [ ]
    edges_to_print = [ ]
    mod = 998244353
    parents = set ( )
    cycle_set = set ( )
    neighborpriority = [ ]
    min_points_to_enter_room = [ ]
    max_points_to_enter_room = [ ]
    point_of_each_room = [ ]
    neighbors = [ ]
    memo = [ ]
    for i in range ( count ) :
        s = nodes_colors [ i ]
        no = int ( s [ 0 ] )
        if s [ 1 ] == 'South' :
            pos += no
            if pos > 20000 :
                break
        elif s [ 1 ] == 'North' :
            pos -= no
            if pos < 0 :
                break
        else :
            if pos == 0 or pos == 20000 :
                pos = 1
                break
    if pos == 0 :
        print ( 'YES' )
    else :
        print ( 'NO' )
    return nodes_colors , visited , neighborstring , start_indices , edges_to_print , mod , parents , cycle_set , min_points_to_enter_room , max_points_to_enter_room , point_of_each_room , neighbors , memo


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576703601_9400/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 122
---> probID: geeksforgeeks_625_A
---> inputs:

---> outputs:
2


def import ( ) :
    import numpy
    class solution :
        def count_subarrays ( arr , n , K ) :
            count = 0
            for i in range ( n ) :
                for j in range ( i , n ) :
                    bitwise_or = 0
                    for k in range ( i , j ) :
                        bitwise_or = bitwise_or | arr [ k ]
                    if bitwise_or >= K :
                        count += 1
            return count
    arr = [ 3 , 4 , 5 ]
    n = len ( arr )
    k = 6
    print ( count_subarrays ( arr , n , k ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 123
---> probID: geeksforgeeks_4766_A
---> inputs:

---> outputs:
Yes


def test_GFG ( ) :
    arr = [ a for a in range ( 3 ) ]
    arr = sorted ( arr )
    diff = 2 * arr [ 2 ] - arr [ 1 ] - arr [ 0 ]
    k = k - diff
    if k < 0 or k % 3 != 0 :
        return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 124
---> probID: geeksforgeeks_4841_A
---> inputs:

---> outputs:
The node 1 has 4 leaf nodes
The node 2 has 1 leaf nodes
The node 3 has 3 leaf nodes
The node 4 has 1 leaf nodes
The node 5 has 1 leaf nodes
The node 6 has 1 leaf nodes


def gen_free_graph ( ) :
    adjacency = [ ]
    insert = lambda x , y : adjacency . append ( [ x , y ] )
    dfs = { }
    for node in adjacency [ node ] :
        it = adjacency [ node ] [ node ]
        if vis [ it ] == 0 :
            dfs ( it , leaf , vis )
            leaf += [ node ]
    if len ( adjacency [ node ] ) == 0 :
        leaf = [ 1 ]
    for i in range ( 1 , n + 1 ) :
        print ( "The node %d has %d leaf nodes\n" % ( i , leaf [ i ] ) )


---> console_out:
 
DIDN'T MATCH!! :(
  7%|▋         | 124/1746 [00:03<00:38, 41.86it/s]  File "./junk/1692576703671_8597/main.py", line 1
    def main ( $ ) :
               ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 125
---> probID: atcoder_ABC106_C
---> inputs:
1
1
---> outputs:
1

def main ( $ ) :
    s = sys . stdin
    v = s . readline ( )
    n = len ( v )
    for i , c in enumerate ( ( '' , '\n' ) ) :
        if c != '1' :
            print ( c )
            return
    print ( '1' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 126
---> probID: codeforces_408_B
---> inputs:
aaabbac
aabbccac
---> outputs:
6

def test_garland ( ) :
    s = nx . Graph ( )
    s1 = s . nodes ( )
    s2 = s . nodes ( )
    if is_valid ( s1 , s2 ) is False :
        assert_equal ( - 1 , len ( s1 ) )
    else :
        m1 = { }
        m2 = { }
        for c in s1 :
            if m1 . has_key ( c ) :
                m1 [ c ] = m1 [ c ] + 1
            else :
                m1 [ c ] = 1
        for c in s2 :
            if m2 . has_key ( c ) :
                m2 [ c ] = m2 [ c ] + 1
            else :
                m2 [ c ] = 1
        ans = 0
        hs = set ( )
        for c in s2 :
            if not hs . isdisjoint ( c ) :
                hs . add ( c )
                x1 = m1 [ c ]
                x2 = m2 [ c ]
                x1 = min ( x1 , x2 )
                ans += x1
        assert_equal ( ans , 0 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576703719_1251/main.py", line 3
    

SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 127
---> probID: geeksforgeeks_2667_A
---> inputs:

---> outputs:
Length of LCS is 2


def LCS_3Strings ( X , Y , Z , m , n , o ) :
    L = [ [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * n + [ 0 ] * o + [ 0 ] * m + [ 0 ] * m +

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 128
---> probID: codeforces_596_B
---> inputs:
5
1 2 3 4 5
---> outputs:
5

def test_cf596B ( ) :
    x = np . array ( [ 1 , 2 , 3 ] )
    n = len ( x )
    arr = np . array ( [ 1 , 2 , 3 ] )
    answer = np . abs ( arr [ 0 ] )
    for i in range ( n ) :
        answer += np . abs ( arr [ i ] - arr [ i - 1 ] )
    assert answer == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 129
---> probID: geeksforgeeks_3602_A
---> inputs:

---> outputs:
YES


def GFG ( n , a ) :
    sum , c1 = 0 , 0
    for i in range ( n ) :
        sum += a [ i ]
        if a [ i ] == 1 :
            c1 += 1
    if sum % 2 != 0 :
        return False
    if ( sum / 2 ) % 2 == 0 :
        return True
    if c1 > 0 :
        return True
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(
  7%|▋         | 129/1746 [00:03<00:38, 41.74it/s]

-------------------------------------


---> lineNum: 130
---> probID: codeforces_933_A
---> inputs:
4
1 2 1 2
---> outputs:
4

def main ( ) :
    import sys
    n = len ( sys . argv )
    arr = [ ]
    for i in range ( 1 , n + 1 ) :
        arr . append ( sys . argv [ i ] )
    dp = [ 0 ] * 5
    for i in range ( 1 , n + 1 ) :
        dp [ 1 ] = dp [ 1 ] + ( arr [ i ] == 1 )
        dp [ 2 ] = max ( dp [ 1 ] , dp [ 2 ] + ( arr [ i ] == 2 ) )
        dp [ 3 ] = max ( dp [ 2 ] , dp [ 3 ] + ( arr [ i ] == 1 ) )
        dp [ 4 ] = max ( dp [ 3 ] , dp [ 4 ] + ( arr [ i ] == 2 ) )
    print ( dp [ 4 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 131
---> probID: geeksforgeeks_3743_A
---> inputs:

---> outputs:
even = 2, odd = 2


def test_GFG ( min , max , steps ) :
    a , b , even , odd = steps
    beven , aeven = True , False , False
    n = 2
    for i in range ( n ) :
        a , b = steps [ i ]
        if not ( aeven or ( a & 1 ) > 0 ) :
            aeven = True
        if beven :
            if ( b & 1 ) > 0 :
                beven = False
        elif not ( ( a & 1 ) > 0 ) :
            if not ( ( b & 1 ) > 0 ) :
                beven = True
        else :
            if ( b & 1 ) > 0 :
                beven = True
    if beven :
        even = int ( max ) // 2 - int ( min - 1 ) // 2
        odd = 0
    else :
        even = int ( max ) // 2 - int ( min - 1 ) // 2
        odd = 0
    if not ( beven ^ aeven ) :
        even += max - min + 1 - int ( max ) // 2 + int ( min - 1 ) // 2
    else :
        odd += max - min + 1 - int ( max ) // 2 + int ( min - 1 )
    assert even == odd


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 132
---> probID: codeforces_678_A
---> inputs:
5 3
---> outputs:
6

def test_JohnyLikesNumbers ( ) :
    import sympy
    n , k = symbols ( 'n k' , integer = True , positive = True ) ;
    assert ( n / k + 1 ) ** k == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 133
---> probID: geeksforgeeks_474_A
---> inputs:

---> outputs:
14 15 18 

def test_GFG ( ) :
    prime = [ True for i in range ( B + 1 ) ]
    p_factors = [ 0 for i in range ( B + 1 ) ]
    for p in range ( 2 , B + 1 ) :
        if p_factors [ p ] == 0 :
            for i in range ( p , B + 1 , p ) :
                p_factors [ i ] += 1
        for i in range ( A , B + 1 ) :
            if p_factors [ i ] == K :
                print ( i , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 134
---> probID: geeksforgeeks_4139_A
---> inputs:

---> outputs:
skeeG rof skeeG

def get_reverse_words ( str ) :
    st = Stack ( )
    for c in str :
        if c not in st :
            st . push ( c )
        else :
            while st . empty ( ) == False :
                print ( st . pop ( ) )
            print ( " " )
    while st . empty ( ) == False :
        print ( st . pop ( ) )


---> console_out:
 
DIDN'T MATCH!! :(
  8%|▊         | 134/1746 [00:03<00:38, 41.87it/s]

-------------------------------------


---> lineNum: 135
---> probID: codeforces_1321_A
---> inputs:
5
1 1 1 0 0
0 1 1 1 1
---> outputs:
3

def test_task ( ) :
    n = symbols ( 'n' , integer = True , positive = True )
    p = [ 1 , 2 , 3 , 4 ]
    only_fist_solve = 0
    only_second_solve = 0
    for i in range ( n ) :
        r = solve ( p [ i ] , p [ i ] )
        if p [ i ] == 1 and r == 0 :
            only_fist_solve += 1
        elif p [ i ] == 0 and r == 1 :
            only_second_solve += 1
    if only_fist_solve == 0 :
        assert - 1 == n
    else :
        assert ( only_second_solve + only_fist_solve ) / only_fist_solve == n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 136
---> probID: codeforces_776_B
---> inputs:
3
---> outputs:
2
1 1 2

def main ( ) :
    import sys
    import os
    import getopt
    try :
        N = int ( sys . argv [ 1 ] )
    except :
        N = 1e7
    IsPrime = [ ]
    def Is_prime ( ) :
        x = ( n <= 2 )
        n += 1
        sys . stdout . write ( x )
        for i in range ( 2 , n + 1 ) :
            if IsPrime [ i ] :
                sys . stdout . write ( 1 + " " )
            else :
                sys . stdout . write ( 2 + " " )
        sys . stdout . close ( )
    def Is_prime ( ) :
        IsPrime = [ ]
        del IsPrime
        IsPrime . append ( False )
        for i in range ( 2 , N + 1 ) :
            if IsPrime [ i ] :
                for j in range ( i * i , N + 1 , i ) :
                    IsPrime . append ( False )
    class IRead ( object ) :
        def __init__ ( self , * args ) :
            self . input = open ( * args )
        def readline ( self ) :
            while not self . input . readline ( ) :
                try :
                    self . input . readline ( )
                except EOFError :
                    pass
            return self . input . readline ( )
        def readline ( self ) :
            return str ( self . input . readline ( ) )
    sys . stdin . close ( )
    sys . stdout . close ( )
    sys . stderr . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 137
---> probID: aizu_p00087_A
---> inputs:
10 2 12 - /
3 4 - 7 2 3 * + *
-1 -2 3 + +
---> outputs:
-1.000000
-13.000000
0.000000

def main ( ) :
    import sys
    import getopt
    h , w , c , ans = getopt . getopt ( sys . argv [ 1 : ] , 'c:' , [ 'color_order' , 'map' , 'tmp' ] )
    if not h :
        h = sys . argv [ 1 : ]
    if not w :
        w = sys . argv [ 1 : ]
    if not c :
        c = sys . argv [ 1 : ]
    if not ans :
        return
    if not count ( c ) :
        return
    color_order = c
    map = { }
    tmp = [ ]
    for n in c :
        if len ( n ) > 1 :
            map [ n ] = float ( n [ 0 ] )
        else :
            sw = n [ 0 ]
            try :
                sw = float ( sw )
            except ValueError :
                pass
        if sw == '0' :
            x = stack ( )
            y = stack ( )
            map [ x + y ] = y
        elif sw == '1' :
            x = stack ( )
            y = stack ( )
            map [ y - x ] = x
        elif sw == '2' :
            x = stack ( )
            y = stack ( )
            map [ y * x ] = y * x
        elif sw == '3' :
            x = stack ( )
            y = stack ( )
            map [ y / x ] = y / x
    ans = stack ( )
    print ( '%.6f' % ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 138
---> probID: codeforces_1036_A
---> inputs:
4 3
---> outputs:
1

def test_function_height ( ) :
    x = Symbol ( 'x' )
    n = Symbol ( 'n' , integer = True )
    k = Symbol ( 'k' , integer = True )
    assert n . is_even is True
    assert ( k . is_even if n . is_even else k / n ) . is_even is True


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576704013_6266/main.py", line 4
    

SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 139
---> probID: geeksforgeeks_1833_A
---> inputs:

---> outputs:
3
32


def test_GFG ( ) :
    N = 4
    assert find_nth_term ( N ) == [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 38 , 39 , 40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 54 , 55 , 56 , 57 , 58 , 59 , 60 , 61 , 62 , 63 , 64 , 65 , 66 , 67 , 68 , 69 , 70 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 81 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 89 , 90 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 89 , 90 , 81 , 82 , 83 , 84 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 , 85 ,

---> console_out:
 
DIDN'T MATCH!! :(
  8%|▊         | 139/1746 [00:03<00:39, 40.93it/s]

-------------------------------------


---> lineNum: 140
---> probID: geeksforgeeks_1568_A
---> inputs:

---> outputs:
8


def GFG ( arr , n ) :
    cnt = 0
    len = 1
    for i in range ( n - 1 ) :
        if arr [ i + 1 ] >= arr [ i ] :
            len += 1
        else :
            cnt += ( ( ( len + 1 ) * len ) / 2 )
            len = 1
    if len > 1 :
        cnt += ( ( ( len - 1 ) * len ) / 2 )
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 141
---> probID: geeksforgeeks_2522_A
---> inputs:

---> outputs:
21


def test_GFG ( ) :
    """Test the maximize of a polynomial in the GF (1-x)."""
    c = [ ]
    sum = 0
    for i in range ( n ) :
        c . append ( A2 [ i ] - A1 [ i ] )
        sum += A1 [ i ]
    temp = None
    for i in range ( n - 1 ) :
        if c [ i ] < c [ i + 1 ] :
            temp = c [ i ]
            c [ i ] , c [ i + 1 ] = c [ i + 1 ] , c [ i + 1 ]
            c [ i + 1 ] , c [ i + 1 ] = temp
    maxi = - 1
    for i in range ( n ) :
        sum += c [ i ]
        if i + 1 >= ( n - x ) :
            maxi = max ( sum , maxi )
    return maxi


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 142
---> probID: codeforces_1433_A
---> inputs:
4
22
9999
1
777
---> outputs:
13
90
1
66

def main ( ) :
    f = open ( '/proc/cpuinfo' , 'r' )
    t = int ( f . readline ( ) )
    while t :
        t = f . readline ( )
        x = int ( t )
        s = str ( x )
        extra = len ( s )
        temp = ord ( s [ 0 ] )
        ans = 0
        for i in range ( 1 , temp ) :
            ans += 10
        ans += ( extra ) * ( extra + 1 ) / 2
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 143
---> probID: aizu_p00117_A
---> inputs:
6
8
1,2,2,2 
1,3,4,3 
1,4,4,2 
2,5,3,2 
3,4,4,2 
3,6,1,2 
4,6,1,1 
5,6,1,2 
2,4,50,30
---> outputs:
11

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        sys . stdout . write ( 'ERROR: %s\n' % msg )
        sys . exit ( 2 )
    N = int ( args [ 0 ] )
    K = [ ]
    for o , a in opts :
        if o == '-d' :
            for i in range ( N ) :
                K . append ( INFINITY )
    m = int ( args [ 1 ] )
    for i in range ( m ) :
        str = args [ i ] . strip ( ) . split ( ',' )
        a = int ( str [ 0 ] ) - 1
        b = int ( str [ 1 ] ) - 1
        K . append ( a )
        K . append ( b )
        K . append ( a )
    str = args [ m ] . strip ( ) . split ( ',' )
    start = int ( str [ 0 ] ) - 1
    goal = int ( str [ 1 ] ) - 1
    V = int ( str [ 2 ] )
    P = int ( str [ 3 ] )
    for k in range ( N ) :
        for i in range ( N ) :
            for j in range ( N ) :
                if K [ i ] [ j ] > K [ i ] [ k ] + K [ k ] [ j ] :
                    K [ i ] [ j ] = K [ i ] [ k ] + K [ k ] [ j ]
    print ( V - P - K [ start ] [ goal ] - K [ goal ] [ start ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 144
---> probID: codeforces_143_A
---> inputs:
3 7
4 6
5 5
---> outputs:
1 2
3 4

def main ( ) :
    input = sys . stdin
    r1 , r2 , c1 , c2 , d1 , d2 = input
    if ( c1 + c2 - r1 - r2 ) != 0 or ( d1 + d2 - r1 - r2 ) != 0 :
        print ( - 1 )
    else :
        flag = True
        t , z = ( r2 - d2 + c2 ) // 2 , d2 - c2 + t , c2 - t , r1 + r2 - y - z - t
        box = [ x , y , z , t ]
        for gem in box :
            if gem > 9 or gem < 1 :
                flag = False
                break
        if ( x == y ) or ( x == z ) or ( x == t ) or ( y == z ) or ( y == t ) or ( z == t ) :
            flag = False
        if flag :
            print ( x , y , z , t )
        else :
            print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
  8%|▊         | 144/1746 [00:03<00:39, 40.70it/s]

-------------------------------------


---> lineNum: 145
---> probID: aizu_p01119_A
---> inputs:
4 2
9 2 7 11
2 9
6 2
7 3 6 12 16 9
2 9
5 2
7 3 6 12 17
2 9
7 5
15 21 33 48 51 75 111
36 54 57 93 113
0 0
---> outputs:
0
5
-1
5

def main ( ) :
    import sys
    for line in sys . stdin :
        n , m = int ( line . split ( ) )
        if n == 0 and m == 0 :
            break
        a = [ int ( x ) for x in line . split ( ) ]
        w = [ int ( x ) for x in line . split ( ) ]
        common_additions = None
        for i in range ( n ) :
            additions = [ ]
            b_just = calc_nearest_weight ( a [ i ] , w , 0 , 0 , additions )
            if not b_just :
                if common_additions is None :
                    common_additions = additions
                else :
                    common_additions . append ( additions )
            if common_additions is None :
                print ( 0 )
            else :
                if common_additions :
                    print ( common_additions [ 0 ] )
                else :
                    print ( - 1 )
        sys . stdin . close ( )
    def calc_nearest_weight ( x , w , i , sum , additions ) :
        if x == sum :
            return True
        if i == len ( w ) :
            additions . append ( abs ( x - sum ) )
            return False
        if calc_nearest_weight ( x , w , i + 1 , sum , additions ) :
            return True
        if calc_nearest_weight ( x , w , i + 1 , sum + w [ i ] , additions ) :
            return True
        return calc_nearest_weight ( x , w , i + 1 , sum - w [ i ] , additions )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 146
---> probID: codeforces_1042_B
---> inputs:
4
5 C
6 B
16 BAC
4 A
---> outputs:
15

def get_DP ( ) :
    import sys
    import getopt
    import os
    import string
    N = len ( sys . argv )
    dp = [ ]
    del dp [ 0 ]
    dp . append ( 0 )
    for i in range ( N ) :
        price = sys . argv [ i ]
        s = sys . argv [ i + 1 ]
        mask = 0
        if s . find ( 'A' ) != - 1 :
            mask |= 1
        if s . find ( 'B' ) != - 1 :
            mask |= 2
        if s . find ( 'C' ) != - 1 :
            mask |= 4
        for k in ( 1 , 3 ) :
            if dp [ k ] != int ( s ) :
                t = k | mask
                dp [ t ] = min ( dp [ t ] , dp [ k ] + price )
    out = ''
    class Scanner :
        def __init__ ( self , s ) :
            self . s = s
        def read ( self ) :
            if not self . s or not self . s . endswith ( '\n' ) :
                self . s = self . s [ : - 1 ]
            return self . s
        def next ( self ) :
            while self . s or not self . s :
                self . s = self . s . split ( '\n' )
            return self . s
        def next ( self ) :
            return int ( next ( self . s ) )
        def next ( self ) :
            return int ( next ( self . s ) )
        def next ( self ) :
            return next ( self . s )
        def next ( self ) :
            return next ( self . s )
        def next ( self ) :
            return next ( self . s )
        def next ( self ) :
            return next ( self . s )
        def next ( self ) :
            return next ( self . s )
        def next ( self ) :
            return next ( self . s )
        def next ( self ) :
            return next ( self . s )
    return Scanner ( '' ) , Scanner ( '' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576704213_5087/main.py", line 51
    return False
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 147
---> probID: geeksforgeeks_2761_A
---> inputs:

---> outputs:
Yes


def pyGFG ( str , pre ) :
    str_len = len ( str )
    pre_len = len ( pre )
    i , j = 0 , 0
    while i < str_len and j < pre_len :
        if str [ i ] != pre [ j ] :
            return False
        i += 1
        j += 1
    return True
def pyGG_is_string ( str , suff ) :
    i = len ( str ) - 1
    j = len ( suff ) - 1
    while i >= 0 and j >= 0 :
        if str [ i ] != suff [ j ] :
            return False
        i -= 1
        j -= 1
    return True
def pyGG_check_string ( str , a , b ) :
    if len ( str ) != len ( a ) + len ( b ) :
        return False
    if startswith ( str , a ) :
        if endswith ( str , b ) :
            return True
    if startswith ( str , b ) :
        if endswith ( str , a ) :
            return True
    return False
def pyGG_is_string ( str , a , b ) :
    if check_string ( str , a , b ) :
        return True
def pyGG_is_string ( str , a , b ) :
    if check_string ( str , a , b ) :
        return True
def pyGG_is_string ( str , a , b ) :
    if check_string ( str , a , b ) :
        return True
def pyGG_is_string ( str , a , b ) :
    if check_string ( str , a , b ) :
        return True
def pyGG_is_string ( str , a , b ) :
    if check_string ( str , a , b ) :
        return True
def pyGG_is_string ( str , a , b ) :
    if check_string ( str , a , b ) :
        return True
def pyGG_is_string ( str , a , b ) :
    if check_string ( str , a , b ) :
        return True
return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 148
---> probID: geeksforgeeks_5217_A
---> inputs:

---> outputs:
1 2 230


def test_GFG ( ) :
    for i in range ( 1 , n ) :
        if i % 3 != 0 :
            for j in range ( 1 , n ) :
                if j % 3 != 0 :
                    for k in range ( 1 , n ) :
                        if k % 3 != 0 and ( i + j + k ) == n :
                            print ( i , j , k )
                            return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 149
---> probID: geeksforgeeks_1130_A
---> inputs:

---> outputs:
10


def test_GFG ( ) :
    n = 3
    assert count_integral_solutions ( n ) == 0


---> console_out:
 
DIDN'T MATCH!! :(
  9%|▊         | 149/1746 [00:03<00:39, 40.71it/s]

-------------------------------------


---> lineNum: 150
---> probID: geeksforgeeks_2018_A
---> inputs:

---> outputs:
19 28 37 46 55 64 73 82 91 109 

def GFG ( n ) :
    def digitsum ( n ) :
        sum = 0
        while n :
            sum += n % TEN
            n /= TEN
        return sum
    def get_nth_term ( n ) :
        sum = digitsum ( n )
        if sum % TEN == 0 :
            return ( n * TEN )
        extra = TEN - ( sum % TEN )
        return ( ( n * TEN ) + extra )
    def first_n_terms ( n ) :
        for i in range ( 1 , n + 1 ) :
            print ( get_nth_term ( i ) , end = ' ' )
    def main ( ) :
        n = 10
        first_n_terms ( n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 151
---> probID: geeksforgeeks_4854_A
---> inputs:

---> outputs:
36


def GFG ( x , a ) :
    res = 1
    while a :
        if ( a & 1 ) :
            res = res * x
        x = x * x
        a >>= 1
    return res


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576704332_3535/main.py", line 30
    while T -- != 0 :
               ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 152
---> probID: aizu_p01403_A
---> inputs:
2
3
5
---> outputs:
5
11

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        sys . stdout . write ( msg + '\n' )
        sys . exit ( 2 )
    res = [ ]
    p = [ ]
    for o , a in opts :
        if o == '-d' :
            res . append ( a )
        elif o == '-u' :
            res . append ( u )
        elif o == '-e' :
            res . append ( e )
        elif o == '-b' :
            res . append ( b )
        elif o == '-f' :
            res . append ( f )
        elif o == '-d' :
            res . append ( d )
        elif o == '-e' :
            res . append ( e )
    for i in range ( 0 , len ( res ) ) :
        res [ i ] = res [ i - 1 ] + f [ i ]
    sys . stdout . write ( '\n' )
    T = len ( res )
    while T -- != 0 :
        sys . stdout . write ( res [ T ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 153
---> probID: atcoder_ABC085_A
---> inputs:
2017/01/07
---> outputs:
2018/01/07

def main ( ) :
    parser = argparse . ArgumentParser ( description = 'Convert a date to a string.' )
    parser . add_argument ( '--date' , required = True , help = 'The date to convert.' )
    parser . add_argument ( '--date_format' , required = True , help = 'The date format to use.' )
    parser . add_argument ( '--date_format_version' , required = True , help = 'The version of the date format to use.' )
    args = parser . parse_args ( )
    s = datetime . datetime . strptime ( args . date , args . date_format )
    s = s . replace ( '2017' , '2018' )
    print ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 154
---> probID: geeksforgeeks_4097_A
---> inputs:

---> outputs:
a -1 b b 


def test_nonreapating_c_queue ( ) :
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import abc
    from collections import abc
    from collections import deque
    from collections import abc
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import abc
    from collections import abc
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import abc
    from collections import abc
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import abc
    from collections import abc
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import abc
    from collections import abc
    from collections import abc
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import abc
    from collections import abc
    from collections import abc
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque


---> console_out:
 
DIDN'T MATCH!! :(
  9%|▉         | 154/1746 [00:03<00:38, 41.03it/s]

-------------------------------------


---> lineNum: 155
---> probID: codeforces_862_B
---> inputs:
3
1 2
1 3
---> outputs:
0

def cf862B ( ) :
    import sys
    import pickle
    import struct
    import random
    import time
    import hashlib
    import pickle
    import struct
    import random
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import pickle
    import struct
    import pickle
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct
    import pickle
    import struct


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 156
---> probID: geeksforgeeks_820_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    """Test the GF algorithm."""
    val = np . arange ( 1 , 5 )
    range = np . array ( [ 1 , 2 , 3 ] )
    c = 1
    for i in range ( len ( range ) - 1 , - 1 , - 1 ) :
        range [ i ] = 2 * range [ i ]
        val -= range [ i ]
        if val <= 0 :
            return c
        else :
            c += 1
    if val > 0 :
        return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 157
---> probID: aizu_p00925_A
---> inputs:
1+2*3+4
11
---> outputs:
M

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , '' )
    except getopt . error as msg :
        print ( msg )
        return
    if len ( args ) != 2 :
        print ( "Usage: %s <input>" % sys . argv [ 0 ] )
        return
    ans1 = 0
    ans2 = int ( args [ 0 ] )
    temp = ans2
    for i in range ( len ( args ) / 2 ) :
        e = args [ 2 * i + 1 ]
        k = int ( args [ 2 * i + 2 ] )
        if e == '+' :
            ans2 += k
            ans1 += temp
            temp = k
        else :
            ans2 *= k
            temp *= k
    ans1 += temp
    bob_ans = int ( args [ 1 ] )
    output = ''
    if bob_ans == ans1 :
        if bob_ans == ans2 :
            output = 'U'
        else :
            output = 'M'
    elif bob_ans == ans2 :
        output = 'L'
    else :
        output = 'I'
    print ( output )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 158
---> probID: leetcode_155_A
---> inputs:

---> outputs:
-3
0
-2

def test_min_stack ( ) :
    from sympy . utilities . randtest import default_sort_key
    from sympy . core . function import Sum
    from sympy . core . limits import oo
    from sympy . core . compatibility import assuming
    from sympy . core . compatibility import assuming
    from sympy . core . compatibility import Wild
    from sympy . core . function import Function
    from sympy . core . function import Derivative
    from sympy . core . function import Function
    from sympy . core . compatibility import assuming
    from sympy . core . function import Derivative
    from sympy . core . function import Function
    from sympy . core . function import Derivative
    from sympy . core . function import Sum
    from sympy . core . function import Sum
    from sympy . core . function import Sum
    from sympy . core . function import Sum
    m = MinStack ( )
    m . push ( - 2 )
    m . push ( 0 )
    m . push ( - 3 )
    assert m . min ( ) == 0
    m . pop ( )
    assert m . top == 0
    assert m . min ( ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 159
---> probID: geeksforgeeks_4470_A
---> inputs:

---> outputs:
forty three crore eighty two lakh thirty seven thousand seven hundred and sixty four 


def GFG ( n ) :
    one = [ '' , 'one ' , 'two ' , 'three ' , 'four ' , 'five ' , 'six ' , 'seven ' , 'eight ' , 'nine ' , 'ten ' , 'eleven ' , 'twelve ' , 'thirteen ' , 'fourteen ' , 'fifteen ' , 'sixteen ' , 'seventeen ' , 'eighteen ' , 'nineteen ' ]
    ten = [ '' , '' , 'twenty ' , 'thirty ' , 'forty ' , 'fifty ' , 'sixty ' , 'seventy ' , 'eighty ' , 'ninety ' ]
    def num_to_words ( n , s ) :
        str = ''
        if n > 19 :
            str += ten [ n // 10 ] + one [ n % 10 ]
        else :
            str += one [ n ]
        if n != 0 :
            str += s
        return str
    def convert_to_words ( n ) :
        out = ''
        out += num_to_words ( int ( n / 10000000 ) , 'crore ' )
        out += num_to_words ( int ( ( n / 100000 ) % 100 ) , 'lakh ' )
        out += num_to_words ( int ( ( n / 1000 ) % 100 ) , 'thousand ' )
        out += num_to_words ( int ( ( n / 100 ) % 10 ) , 'hundred ' )
        if n > 100 and n % 100 > 0 :
            out += 'and '
        out += num_to_words ( int ( n % 100 ) , '' )
        return out
    def main ( ) :
        n = 438237764
        print ( convert_to_words ( n ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(
  9%|▉         | 159/1746 [00:03<00:38, 40.95it/s]

-------------------------------------


---> lineNum: 160
---> probID: geeksforgeeks_3446_A
---> inputs:

---> outputs:
Subtraction is 6
Product is -54
Division is 4


def GFG ( a ) :
    neg = 0
    tmp = a < 0
    while a != 0 :
        neg += tmp
        a += tmp
    return neg
def are_different_sign ( a , b ) :
    return ( ( a < 0 and b > 0 ) or ( a > 0 and b < 0 ) )
def sub ( a , b ) :
    return a + flip_sign ( b )
def mul ( a , b ) :
    if a < b :
        return mul ( b , a )
    sum = 0
    for i in abs ( b ) :
        sum += a
    if b < 0 :
        sum = flip_sign ( sum )
    return sum
def division ( a , b ) :
    if b == 0 :
        raise ZeroDivisionError
    quotient , dividend = 0 , 0
    divisor = flip_sign ( abs ( b ) )
    for dividend in abs ( a ) , dividend >= abs ( divisor ) :
        quotient += 1
    if are_different_sign ( a , b ) :
        quotient = flip_sign ( quotient )
    return quotient
def main ( ) :
    print ( "Subtraction is %d" % sub ( 4 , - 2 ) )
    print ( "Product is %d" % mul ( - 9 , 6 ) )
    try :
        print ( "Division is %d" % division ( 8 , 2 ) )
    except ZeroDivisionError :
        print ( "Exception :- Divide by 0" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 161
---> probID: geeksforgeeks_3995_A
---> inputs:

---> outputs:
Factorial of 5 is 120


def test_factorial ( ) :
    i , fact = symbols ( 'i fact' , integer = True , positive = True )
    while n / i != n :
        fact = fact * i
        i -= 1
    assert fact ( 5 ) == factorial ( 5 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 162
---> probID: geeksforgeeks_5230_A
---> inputs:

---> outputs:
3


def GFG ( arr , n , x ) :
    number = 0
    count = 0
    for i in range ( n ) :
        number = number * 2 + arr [ i ]
        if ( number % x == 0 ) :
            count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 163
---> probID: codeforces_272_B
---> inputs:
3
1 2 4
---> outputs:
3

def test_b272 ( ) :
    x = symbols ( 'x' )
    N = symbols ( 'N' , integer = True , positive = True )
    stat = [ 0 ] * 30
    for n in range ( N ) :
        a = symbols ( 'a' , integer = True , positive = True )
        stat [ int ( a ) ] += 1
    answer = 0
    for count in stat :
        answer += count * ( count - 1 )
    answer /= 2
    assert answer == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 164
---> probID: geeksforgeeks_3386_A
---> inputs:

---> outputs:
3


def pygfG ( arr , n , k ) :
    noOfSubtraction = 0
    res = 0
    for i in range ( 1 , n ) :
        noOfSubtraction = 0
        if arr [ i ] > arr [ i - 1 ] :
            noOfSubtraction = ( arr [ i ] - arr [ i - 1 ] ) / k
            if ( arr [ i ] - arr [ i - 1 ] ) % k != 0 :
                noOfSubtraction += 1
            arr [ i ] = arr [ i ] - k * noOfSubtraction
        res = res + noOfSubtraction
    return res


---> console_out:
 
DIDN'T MATCH!! :(
  9%|▉         | 164/1746 [00:03<00:38, 41.10it/s]

-------------------------------------


---> lineNum: 165
---> probID: geeksforgeeks_327_A
---> inputs:

---> outputs:
8


def GFG ( arr , n , X ) :
    N = int ( math . pow ( 2 , n ) )
    count = 0
    for i in range ( N ) :
        for j in range ( n ) :
            if ( i & ( 1 << j ) ) :
                if arr [ j ] == X :
                    count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 166
---> probID: geeksforgeeks_3344_A
---> inputs:

---> outputs:
3024


def GFG ( arr , n ) :
    n = 5
    max , result = 0 , 0
    for i in range ( n ) :
        for j in range ( n ) :
            if ( j - 3 ) >= 0 :
                result = arr [ i ] [ j ] * arr [ i ] [ j - 1 ] * arr [ i ] [ j - 2 ] * arr [ i ] [ j - 3 ]
                if max < result :
                    max , result = result , max
            if ( i - 3 ) >= 0 :
                result = arr [ i ] [ j ] * arr [ i - 1 ] [ j ] * arr [ i - 2 ] [ j ] * arr [ i - 3 ] [ j ]
                if max < result :
                    max , result = result , max
            if ( i - 3 ) >= 0 and ( j - 3 ) >= 0 :
                result = arr [ i ] [ j ] * arr [ i - 1 ] [ j - 1 ] * arr [ i - 2 ] [ j - 2 ] * arr [ i - 3 ] [ j - 3 ]
                if max < result :
                    max , result = result , max
            if ( i - 3 ) >= 0 and ( j - 1 ) <= 0 :
                result = arr [ i ] [ j ] * arr [ i - 1 ] [ j + 1 ] * arr [ i - 2 ] [ j + 2 ] * arr [ i - 3 ] [ j + 3 ]
                if max < result :
                    max , result = result , max
        return max , result
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576704697_2579/main.py", line 45
    for p in
           ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 167
---> probID: geeksforgeeks_4002_A
---> inputs:

---> outputs:
1


def genmodular ( n , m ) :
    """Generate a modular graph of n and m modular primes.

 >>> from sympy.ntheory.modular import genmodular
 >>> from sympy.ntheory.modular import modular
 >>> from sympy.abc import x, y
 >>> genmodular(2, 2)
 (2, 2)
 >>> genmodular(2, 2)
 (2, 2)
 >>> genmodular(2, 2)
 (2, 2)
 >>> genmodular(2, 2)
 (2, 2)
 >>> genmodular(2, 2)
 (2, 2)
 >>> genmodular(2, 2)
 (2, 2)
 >>> genmodular(2, 2)
 (2, 2)
 >>> genmodular(2, 2)
 (2, 2)
 >>> genmodular(2, 2)
 (2, 2)
 >>> genmodular(2, 2)
 (2, 2)
 >>> genmodular(2, 2)
 (2, 2)
 >>> genmodular(2, 2)
 (2, 2)
 """
    MAX = 50002
    primes = [ ]
    def sieve ( x , y ) :
        """
 Return a list of n x y where x and y are integers.
 """
        is_prime = [ ]
        for i in range ( MAX ) :
            is_prime . append ( True )
        for p in range ( 2 , len ( primes ) ) :
            if is_prime [ p ] is True :
                for i in range ( p * 2 , MAX , p ) :
                    is_prime [ i ] = False
        for p in

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 168
---> probID: geeksforgeeks_5124_A
---> inputs:

---> outputs:
16


def GFG ( arr , n ) :
    i = n - 1
    while i >= 0 and arr [ i ] % 2 == 1 :
        i -= 1
    sum = 0
    for j in range ( 0 , i + 1 ) :
        sum += arr [ j ]
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 169
---> probID: codeforces_304_B
---> inputs:
1900:01:01
2038:12:31
---> outputs:
50768

def main ( ) :
    import sys
    input = sys . stdin . read ( )
    t1 = input . split ( )
    t2 = input . split ( )
    date = datetime . datetime . strptime ( t1 [ 0 ] , "%Y-%m-%dT%H:%M:%SZ" )
    date = date . replace ( tzinfo = pytz . utc )
    print ( abs ( date . year - date . month ) / ( 1000 * 60 * 60 * 24 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 10%|▉         | 169/1746 [00:04<00:38, 41.27it/s]

-------------------------------------


---> lineNum: 170
---> probID: codeforces_894_A
---> inputs:
QAQAQYSYIOIWIN
---> outputs:
4

def main ( ) :
    import sys
    s = sys . stdin . read ( )
    count = 0
    for i in range ( len ( s ) ) :
        al = [ ]
        c = s [ i ]
        if c in al : al . append ( c )
        for j in range ( i + 1 , len ( s ) ) :
            a = s [ j ]
            if al :
                if al [ - 1 ] == 'Q' and a == 'A' : al . append ( a )
                if al [ - 1 ] == 'A' and a == 'Q' : al . append ( a )
                if al [ - 1 ] == 'A' and a == 'A' : al . append ( a )
            if al [ - 1 ] == 'A' and a == 'A' : al . append ( a )
        if len ( al ) >= 3 and al [ 0 ] == 'Q' and al [ - 1 ] == 'Q' :
            count = count + len ( al ) - 3
            al . pop ( - 1 )
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 171
---> probID: atcoder_ABC056_D
---> inputs:
3 6
1 4 3
---> outputs:
1

def main ( ) :
    """
 Main function.

 :return: A tuple of (n, k) where n is the number of nodes in the graph.
 """
    with open ( '/proc/self/stat' , 'r' ) as f :
        n , k = map ( int , f . readline ( ) . split ( ) )
        a = [ ]
        for i in range ( n ) :
            a . append ( i )
        if 1 == n :
            print ( ( k > a [ 0 ] ) . rstrip ( ) )
            return
        a . sort ( )
        ng , ok = 0 , n + 1
        while ok - ng > 1 :
            mid = ( ok + ng ) // 2
            if is_needed ( mid , n , k , a ) :
                ok = mid
            else :
                ng = mid
        print ( ng )
    def is_needed ( now , final , n , k , a ) :
        dp = [ False for i in range ( n + 1 ) ]
        for i in range ( k - 1 , max ( k - a [ now - 1 ] , 0 ) , 0 ) :
            if dp [ i ] :
                return True
        return False
    for i in range ( n + 1 , - 1 , - 1 ) :
        if is_needed ( now , n , k , a ) :
            dp [ i ] = True
            if j + a [ i - 1 ] <= k :
                dp [ i ] = True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 172
---> probID: codeforces_1061_A
---> inputs:
5 11
---> outputs:
3

def test_solution ( ) :
    n = symbols ( 'n' , integer = True , positive = True )
    s = symbols ( 's' , integer = True , positive = True )
    k = symbols ( 'k' , integer = True , positive = True )
    count = 0
    for i in range ( n , 0 , - 1 ) :
        k = s / i
        count += k
        s -= k * i
    assert count == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 173
---> probID: geeksforgeeks_2566_A
---> inputs:

---> outputs:
10539


def get_GFG ( n ) :
    v = [ ]
    multiply = 0
    size = len ( v )
    for i in range ( size ) :
        res = carry + v [ i ] * x
        v [ i ] = res % 10
        carry = res / 10
    while carry != 0 :
        v . append ( carry % 10 )
        carry /= 10
    return sum ( v )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 174
---> probID: codeforces_436_B
---> inputs:
3 3 4
...
R.L
R.U
---> outputs:
0 2 2

def test_b436 ( ) :
    """
 Test B436 algorithm in the book.
 """
    x = symbols ( 'x' )
    N = symbols ( 'N' , integer = True )
    M = symbols ( 'M' , integer = True )
    x = symbols ( 'x' , integer = True , cls = Dummy )
    answer = [ ]
    for n in range ( N ) :
        S = x [ n ]
        for m in range ( M ) :
            c = S [ m ]
            if c == 'L' :
                hit = m - n
            elif c == 'R' :
                hit = m + n
            elif c == 'U' :
                if n % 2 == 0 :
                    answer . append ( hit )
    output = [ ]
    for a in answer :
        output . append ( a + ' ' )
    assert output


---> console_out:
 
DIDN'T MATCH!! :(
 10%|▉         | 174/1746 [00:04<00:38, 41.27it/s]

-------------------------------------


---> lineNum: 175
---> probID: codeforces_356_A
---> inputs:
4 3
1 2 1
1 3 3
1 4 4
---> outputs:
3 1 4 0

def test_codeforces356A ( ) :
    f = FastReader ( )
    n = len ( f )
    left = sorted ( f . keys ( ) )
    answer = [ ]
    for i in range ( n ) :
        left . append ( i )
    q = len ( f )
    while q :
        l , r = f [ q - 1 ] , f [ q ]
        win = f [ win - 1 ]
        while left . ceiling ( l ) and left . ceiling ( l ) <= r :
            curr = left . ceiling ( l )
            answer . append ( win )
            left . remove ( curr )
        answer . append ( win - 1 )
        left . append ( win - 1 )
    ans = [ ]
    for i in range ( n ) :
        ans . append ( answer [ i ] + ' ' )
    assert ans == [ ]
    class FastReader :
        st = [ ]
        f = FastReader ( )
    next = next ( f )
    while not f or not f . isclosed ( ) :
        try :
            f . next ( )
        except StopIteration :
            pass
    return f


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 176
---> probID: codeforces_581_B
---> inputs:
5
1 2 3 1 2
---> outputs:
3 2 0 2 0

def pytime_object_to_timespec ( * args , ** kw ) :
    import time
    f = open ( '/proc/self/timespec' , 'w' )
    n = len ( args )
    a = [ ]
    for i in range ( n ) :
        a . append ( time . time ( ) )
    dp = [ - 1 ] * ( n + 1 )
    del a [ - 1 ]
    dp [ n - 1 ] = a [ - 1 ]
    for i in range ( n - 1 , - 1 , - 1 ) :
        dp [ i ] = max ( dp [ i + 1 ] , a [ i ] )
    for i in range ( n ) :
        if a [ i ] > dp [ i + 1 ] :
            f . write ( 0 + ' ' )
        else :
            f . write ( ( dp [ i + 1 ] - a [ i ] + 1 ) + ' ' )
    f . write ( '\n' )
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 177
---> probID: geeksforgeeks_4606_A
---> inputs:

---> outputs:
12


def pell_number ( n ) :
    if n <= 2 :
        return n
    return 2 * pell ( n - 1 ) + pell ( n - 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 178
---> probID: codeforces_334_A
---> inputs:
2
---> outputs:
1 4
2 3

def main ( * args ) :
    import sys
    import getopt
    import os
    import time
    n = len ( args )
    square = n * n
    odd = [ ]
    even = [ ]
    for i in range ( 1 , square + 1 ) :
        if i % 2 == 0 :
            even . append ( i )
        else :
            odd . append ( i )
    loop = square // n
    div = loop // 2
    debug ( div )
    for i in range ( 1 , loop + 1 ) :
        for j in range ( div ) :
            if i % 2 == 1 :
                sys . stdout . write ( '%d %d ' % ( odd . pop ( 0 ) , ( even . pop ( 0 ) ) ) )
            else :
                sys . stdout . write ( '%d %d ' % ( even . pop ( 0 ) , ( odd . pop ( 0 ) ) ) )
        sys . stdout . write ( '\n' )
    sys . stdout . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 179
---> probID: geeksforgeeks_4880_A
---> inputs:

---> outputs:
1 3 4 2 0 

def test_GFG ( ) :
    """Test the FastGS algorithm."""
    copy_arr = np . array ( [ 1 , 5 , 8 , 9 , 6 , 7 , 3 , 4 , 2 , 0 ] )
    asize = np . argsort ( copy_arr )
    n = 5
    print ( '%d ' % n )
    for i in range ( asize ) :
        if np . sum ( copy_arr [ : , i ] == n ) > 0 :
            print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
 10%|█         | 179/1746 [00:04<00:37, 41.45it/s]

-------------------------------------


---> lineNum: 180
---> probID: geeksforgeeks_4219_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    k = 0
    count = 0
    while n :
        if ( n & 1 ) == 0 :
            count += int ( math . pow ( 2 , k ) )
        k += 1
        n >>= 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 181
---> probID: codeforces_1150_A
---> inputs:
3 4 11
4 2 5
4 4 5 4
---> outputs:
26

def main ( * args ) :
    import sys
    f = sys . stdin
    n , m , money = args
    min , max = int ( max ) , int ( min ) , int ( max )
    for i in range ( n ) :
        min = min ( i )
    for i in range ( m ) :
        max = max ( i )
    if money % min == 0 :
        div = money / min
        div = div * max
        f . write ( max ( div , money ) )
    else :
        div = money / min
        div = ( div * max ) + ( money % min )
        f . write ( max ( div , money ) )
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 182
---> probID: geeksforgeeks_2614_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    global maximum , x , ans
    graph = [ ]
    weight = [ ]
    __builtin_popcount ( x )
    for i in range ( 60 ) :
        if ( ( x >> i ) & 1 ) :
            c += 1
    def dfs ( node , parent ) :
        a = __builtin_popcount ( weight [ node ] + x )
        if maximum < a :
            maximum = a
            ans = node
        elif maximum == a :
            ans = min ( ans , node )
        for i in range ( len ( graph [ node ] ) ) :
            if graph [ node ] [ i ] == parent :
                continue
            dfs ( graph [ node ] [ i ] , node )
    def dfs ( node , parent ) :
        x = 15
        weight . append ( 0 )
        weight . append ( 5 )
        weight . append ( 10 ) ;
        weight . append ( 11 ) ;
        weight . append ( 8 )
        weight . append ( 6 )
        for i in range ( 100 ) :
            graph . append ( [ ] )
        graph [ 1 ] . append ( 2 )
        graph [ 2 ] . append ( 3 )
        graph [ 2 ] . append ( 4 )
        graph [ 1 ] . append ( 5 )
        dfs ( 1 , 1 )
        assert ans == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 183
---> probID: geeksforgeeks_1938_A
---> inputs:

---> outputs:
2


def GFG ( str , freq ) :
    MAX = 26
    def updateFreq ( str , freq ) :
        for i in range ( len ( str ) ) :
            freq [ str [ i ] - 'a' ] += 1
    def maxCount ( str , patt ) :
        strFreq = [ ]
        updateFreq ( str , strFreq )
        pattFreq = [ ]
        updateFreq ( patt , pattFreq )
        ans = int ( 0 )
        for i in range ( MAX ) :
            if pattFreq [ i ] == 0 :
                continue
            ans = min ( ans , strFreq [ i ] / pattFreq [ i ] )
        return ans
    def findFreq ( str , patt ) :
        str = 'geeksforgeeks'
        patt = 'geeks'
        return [ int ( x ) for x in str . split ( patt ) ]
    return findFreq ( str , patt )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 184
---> probID: codeforces_631_A
---> inputs:
5
1 2 4 3 2
2 3 3 12 1
---> outputs:
22

def main ( ) :
    import sys
    n = len ( sys . argv )
    a = [ ]
    b = [ ]
    for i in range ( 1 , n + 1 ) :
        a . append ( sys . argv [ i ] )
    for i in range ( 1 , n + 1 ) :
        b . append ( sys . argv [ i ] )
    a1 , b1 , ans = 0 , 0 , 0
    for i in range ( 1 , n + 1 ) :
        a1 , b1 , ans = a1 | a , b1 | b
        if a1 + b1 > ans :
            ans = a1 + b1
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 11%|█         | 184/1746 [00:04<00:37, 41.49it/s]

-------------------------------------


---> lineNum: 185
---> probID: codeforces_354_A
---> inputs:
3 4 4 19 1
42 3 99
---> outputs:
576

def test_a354 ( ) :
    x = symbols ( 'x' )
    N = symbols ( 'N' , integer = True , positive = True )
    L = symbols ( 'L' , integer = True , positive = True )
    R = symbols ( 'R' , integer = True , positive = True )
    QL = symbols ( 'QL' , integer = True , positive = True )
    QR = symbols ( 'QR' , integer = True , positive = True )
    W = [ ]
    sum = [ ]
    for n in range ( N ) :
        W . append ( x ** n )
        sum . append ( sum [ n ] + W [ n ] )
    min = S . Infinity
    for first_r in range ( 0 , N ) :
        l_count = first_r
        r_count = N - l_count
        cand = sum [ l_count ] * L + ( sum [ N ] - sum [ l_count ] ) * R
        ll_count = max ( 0 , l_count - r_count - 1 )
        rrd_count = max ( 0 , r_count - l_count - 1 )
        cand += ll_count * QL
        cand += rrd_count * QR
        min = min ( cand , min )
    assert min == min


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 186
---> probID: geeksforgeeks_3668_A
---> inputs:

---> outputs:
300.0
1000.0


def GFG ( V , M , N ) :
    wasted_amt , amt_per_min , time_to_fill = V , M - N
    return wasted_amt , amt_per_min , time_to_fill


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 187
---> probID: geeksforgeeks_1500_A
---> inputs:

---> outputs:
4


def GFG ( str , n ) :
    count0 , count1 = 0 , 0
    cnt = 0
    for i in range ( n ) :
        if str [ i ] == '0' :
            count0 += 1
        else :
            count1 += 1
        if count0 == count1 :
            cnt += 1
    if count0 != count1 :
        return - 1
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 188
---> probID: aizu_p02439_A
---> inputs:
4 5 3
---> outputs:
3 5

def py_small_min ( ) :
    import sys
    abc = [ x for x in range ( 3 ) if x != 0 ]
    max = sys . maxint
    min = sys . maxint
    for i in range ( 3 ) :
        if max < abc [ i ] :
            max = abc [ i ]
        if min > abc [ i ] :
            min = abc [ i ]
    sys . maxsize = max


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 189
---> probID: geeksforgeeks_1586_A
---> inputs:

---> outputs:
5


def GFG ( s ) :
    sum = 0
    for n in range ( 1 , s ) :
        sum += n
        if sum == s :
            return n
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(
 11%|█         | 189/1746 [00:04<00:37, 41.56it/s]

-------------------------------------


---> lineNum: 190
---> probID: geeksforgeeks_657_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    """Test the maximum absolute value of the graph."""
    mn = S . Infinity
    mx = S . Infinity
    for i in range ( n ) :
        if i > 0 and arr [ i ] == - 1 and arr [ i - 1 ] != - 1 :
            mn = min ( mn , arr [ i - 1 ] )
            mx = max ( mx , arr [ i - 1 ] )
        if i < n - 1 and arr [ i ] == - 1 and arr [ i + 1 ] != - 1 :
            mn = min ( mn , arr [ i + 1 ] )
            mx = max ( mx , arr [ i + 1 ] )
    common_integer = ( mn + mx ) / 2
    for i in range ( n ) :
        if arr [ i ] == - 1 :
            arr [ i ] = common_integer
    max_diff = 0
    for i in range ( n - 1 ) :
        diff = abs ( arr [ i ] - arr [ i + 1 ] )
        if diff > max_diff :
            max_diff = diff
    return max_diff


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 191
---> probID: geeksforgeeks_1908_A
---> inputs:

---> outputs:
7


def GFG ( N ) :
    MOD = 1000000007
    N = N + 1
    dp = [ 0 ] * ( N + 1 )
    for i in range ( N + 1 ) :
        for j in range ( 9 , 3 ) :
            dp [ i ] [ j ] = 0
    dp [ 1 ] [ 0 ] = 1
    dp [ 1 ] [ 1 ] = 1
    dp [ 1 ] [ 2 ] = 0
    for i in range ( 2 , N + 1 ) :
        dp [ i ] [ 0 ] = ( dp [ i - 1 ] [ 0 ] + dp [ i - 1 ] [ 1 ] + dp [ i - 1 ] [ 2 ] ) % MOD
        dp [ i ] [ 1 ] = dp [ i - 1 ] [ 0 ] % MOD
        dp [ i ] [ 2 ] = dp [ i - 1 ] [ 1 ] % MOD
    ans = ( dp [ N ] [ 0 ] + dp [ N ] [ 1 ] + dp [ N ] [ 2 ] ) % MOD
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 192
---> probID: geeksforgeeks_86_A
---> inputs:

---> outputs:
7


def GFG ( n , k , s ) :
    dp = [ ]
    max_length = [ 0 ] * 26
    for i in range ( n ) :
        curr = s [ i ] - 'a'
        lower = max ( 0 , curr - k )
        upper = min ( 25 , curr + k )
        for j in range ( lower , upper + 1 ) :
            dp . append ( max ( dp [ i ] , max_length [ j ] + 1 ) )
        max_length [ curr ] = max ( dp [ i ] , max_length [ curr ] )
    ans = 0
    for i in dp :
        ans = max ( i , ans )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 193
---> probID: geeksforgeeks_4595_A
---> inputs:

---> outputs:
4


def GFG ( n , a ) :
    if n <= 2 :
        return n
    len = 2
    mx = int ( 0 )
    for i in range ( 2 , n ) :
        if a [ i ] == a [ i - 1 ] + a [ i - 2 ] :
            len += 1
        else :
            len = 2
        mx = max ( mx , len )
    return mx


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 194
---> probID: geeksforgeeks_3796_A
---> inputs:

---> outputs:
5


def test_GFG ( ) :
    """Test the number of subarrays in the GFG."""
    se = Vector ( )
    cnt = 1
    for i in range ( n ) :
        if se . contains ( i ) is False :
            se . append ( i )
        else :
            cnt += 1
            se . clear ( )
            se . append ( i )
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(
 11%|█         | 194/1746 [00:04<00:37, 41.62it/s]

-------------------------------------


---> lineNum: 195
---> probID: geeksforgeeks_1804_A
---> inputs:

---> outputs:
Yes


def GFG ( s ) :
    freq = [ 0 ] * 10
    r , i = divmod ( s , 10 )
    for i in range ( 10 ) :
        freq [ i ] = 0
    while s != 0 :
        r , s = divmod ( s , 10 )
        freq [ r ] += 1
    xor__ = 0
    for i in range ( 10 ) :
        xor__ = xor__ ^ freq [ i ]
        if xor__ == 0 :
            return True
        else :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 196
---> probID: codeforces_1016_A
---> inputs:
3 5
3 7 9
---> outputs:
0 2 1

def test_cv_iterator ( ) :
    f = np . array ( [ 1 , 2 , 3 ] )
    g = np . array ( [ 4 , 5 , 6 ] )
    f = np . array ( [ 1 , 2 , 3 ] )
    sum = 0
    arr = np . array ( [ 1 , 2 , 3 ] )
    for i in range ( n ) :
        arr [ i ] = i
    for i in range ( n ) :
        sum += arr [ i ]
        if m <= sum :
            f += sum / m
            sum %= m
        out = np . array ( [ f , g , f ] )
        out [ 0 ] = f
        out [ 1 ] = g
        out [ 2 ] = f
        out [ 3 ] = g
        out [ 4 ] = f
        out [ 5 ] = g
        out [ 6 ] = f
        out [ 7 ] = g
        out [ 8 ] = f
        out [ 9 ] = g
        out [ 10 ] = f
        out [ 11 ] = g
        out [ 12 ] = f
        out [ 13 ] = g
        out [ 14 ] = f
        out [ 15 ] = g
        out [ 16 ] = f
        out [ 17 ] = g
        out [ 18 ] = f
        out [ 19 ] = g
        out [ 20 ] = f
        out [ 21 ] = g
        out [ 22 ] = f
        out [ 23 ] = g
        out [ 24 ] = f
        out [ 25 ] = g
        out [ 26 ] = f
        out [ 27 ] = g
        out [ 28 ] = g
        out [ 29 ] = f
        out [ 30 ] = g
        out [ 31 ] = g
        out [ 32 ] = f
        out [ 33 ] = g
        out [ 34 ] = f
        out [ 35 ] = g
        out [ 36 ] = f
        out [ 37 ] = g
        out [ 38 ] = f
        out [ 39 ] = g
        out [ 40 ] = f
        out [ 41 ] = g
        out [ 42 ] = f
        out [ 43 ] = g
        out [ 44 ] = f
        out [ 45 ] = g
        out [ 46 ] = f
        out [ 47 ] = g
        out [ 48 ] = f
        out [ 49 ] = g
        out [ 50 ] = f
        out [ 51 ] = g


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 197
---> probID: geeksforgeeks_1178_A
---> inputs:

---> outputs:
Even
Odd
Odd
Even


def GFG ( arr , n ) :
    MAXN = 1000005
    even = [ 0 ] * MAXN
    odd = [ 0 ] * MAXN
    def precompute ( arr , n ) :
        for i in range ( n ) :
            if arr [ i ] % 2 == 1 :
                odd [ i ] = 1
            if arr [ i ] % 2 == 0 :
                even [ i ] = 1
        for i in range ( 1 , n ) :
            even [ i ] = even [ i ] + even [ i - 1 ]
            odd [ i ] = odd [ i ] + odd [ i - 1 ]
    def is_odd ( L , R ) :
        cnt = odd [ R ]
        if L > 0 :
            cnt -= odd [ L - 1 ]
        if cnt == R - L + 1 :
            return True
        return False
    def perform_queries ( a , n , q , m ) :
        precompute ( a , n )
        for i in range ( m ) :
            L , R = q [ i ]
            if is_odd ( L , R ) :
                print ( 'Odd' )
            else :
                print ( 'Even' )
    def test_graph ( ) :
        a = [ 2 , 1 , 5 , 7 , 6 , 8 , 9 ]
        n = len ( a )
        q = [ [ 0 , 2 ] , [ 1 , 2 ] , [ 2 , 3 ] , [ 3 , 6 ] ]
        m = len ( q )
        perform_queries ( a , n , q , m )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 198
---> probID: codeforces_1430_A
---> inputs:
4
30
67
4
14
---> outputs:
['2 2 2\n7 5 3\n-1\n0 0 2', '0 6 0\n0 5 6\n-1\n0 0 2\n']

def test_pre422 ( ) :
    import sys
    import os
    import random
    import string
    import doctest
    import tempfile
    import time
    import tempfile
    import random
    import tempfile
    import string
    import tempfile
    import tempfile
    import tempfile
    import string
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import string
    import tempfile
    import tempfile
    import string
    import tempfile
    import tempfile
    import string
    import tempfile
    import tempfile
    import string
    import tempfile
    import string
    import tempfile
    import tempfile
    import string
    import tempfile
    import string
    import tempfile
    import tempfile
    import string
    import tempfile
    import tempfile
    import string
    import tempfile
    import tempfile
    import string
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import string
    import tempfile
    import tempfile
    import string
    import tempfile
    import string
    import tempfile
    import tempfile
    import string
    import tempfile
    import string
    import tempfile
    import string
    import tempfile
    import string
    import tempfile
    import string
    import tempfile
    import string
    import string
    import tempfile
    import string
    import tempfile
    import string
    import tempfile
    import string
    import string
    import tempfile
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 199
---> probID: codeforces_665_A
---> inputs:
10 30
10 35
05:20
---> outputs:
5

def buses_between_cities ( ) :
    f = open ( 'cities.txt' , 'r' )
    f . seek ( 0 )
    a = int ( f . readline ( ) )
    tA = int ( f . readline ( ) )
    f . seek ( 0 )
    b = int ( f . readline ( ) )
    tB = int ( f . readline ( ) )
    timing = f . readline ( )
    hrs = int ( timing [ : 2 ] )
    mins = int ( timing [ 3 : ] )
    sim_departure = hrs * 60 + mins
    sim_arrival = sim_departure + tA
    counter = 0
    for i in range ( 300 , 1440 , b ) :
        bus_departure = i
        bus_arrival = i + tB
        if bus_departure >= sim_arrival or sim_departure >= bus_arrival :
            continue
        counter += 1
    f . write ( counter )
    f . flush ( )
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(
 11%|█▏        | 199/1746 [00:04<00:37, 41.23it/s]

-------------------------------------


---> lineNum: 200
---> probID: codeforces_893_A
---> inputs:
3
1
1
2
---> outputs:
YES

def main ( ) :
    input = sys . stdin
    n = input . readline ( ) . strip ( )
    out = 3
    good = True
    playing = [ 1 , 2 ]
    for i in range ( n ) :
        win = input . readline ( ) . strip ( )
        if win == out :
            good = False
            break
        else :
            replace = 0
            for j in range ( 1 , 3 ) :
                if win != j and out != j :
                    replace = j
                    break
            index = 0
            for j in range ( len ( playing ) ) :
                if playing [ j ] == replace :
                    index = j
                    break
            playing . pop ( index )
            playing . append ( out )
            out = replace
    if good :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 201
---> probID: geeksforgeeks_830_A
---> inputs:

---> outputs:
3


def GFG ( steps , n ) :
    current_level = 0
    previous_level = 0
    count = 0
    for i in range ( n ) :
        previous_level = current_level
        current_level = current_level + steps [ i ]
        if ( previous_level < 0 and current_level >= 0 ) :
            count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 202
---> probID: aizu_p02112_A
---> inputs:
1
1 1 359 1
---> outputs:
0

def main ( ) :
    parser = argparse . ArgumentParser ( description = 'Generate a new Holiday from a given year.' )
    parser . add_argument ( 'year' , help = 'The year to generate a new Holiday from .' )
    parser . add_argument ( 'month' , help = 'The month to generate a new Holiday from .' )
    parser . add_argument ( 'time' , help = 'The time to generate a new Holiday from .' )
    parser . add_argument ( 'value' , help = 'The value to generate a new Holiday from .' )
    args = parser . parse_args ( )
    n = int ( args . value )
    holidays = [ Holiday ( year , month , day , time , value ) for year , month , day , time in args . year . items ( ) ]
    min = sys . maxint
    for i in range ( 1 , 360 ) :
        max = 0
        for i in range ( n ) :
            max = max ( max , holidays [ i ] . _crowded ( i ) )
        min = min ( min , max )
    print ( min )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576705563_7400/main.py", line 45
    return FastScanner ( )
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 203
---> probID: codeforces_986_B
---> inputs:
5
2 4 5 1 3
---> outputs:
Petr

def petr_permutations ( ) :
    import random
    out = open ( './petr_permutations.txt' , 'w' )
    N = random . randint ( 1 , 10 )
    perm = [ random . randint ( 1 , 10 ) for i in range ( N ) ]
    swaps = 0
    vis = [ False for i in range ( N ) ]
    for i in range ( N ) :
        j , cycle = perm [ i ] , perm [ i + 1 ]
        while not vis [ j ] :
            vis [ j ] = True
            j = perm [ j ] - 1
            cycle += 1
        if cycle :
            swaps += cycle - 1
    if swaps % 2 != N % 2 :
        out . write ( 'Um_nik\n' )
    else :
        out . write ( 'Petr\n' )
    out . flush ( )
class FastScanner :
    def __init__ ( self , f ) :
        self . f = f
    def next ( self ) :
        while self . f . next ( ) is None or not self . f . next ( ) :
            try :
                self . f . next ( )
            except StopIteration :
                pass
        return self . f . next ( )
    def nextInt ( self ) :
        return int ( self . f . next ( ) )
    def nextLong ( self ) :
        return long ( self . f . next ( ) )
    def nextDouble ( self ) :
        return float ( self . f . next ( ) )
    def readNextLine ( self ) :
        str = '' . join ( self . f . next ( ) )
        return str
    def readIntArray ( self , n ) :
        a = [ ]
        for idx in range ( n ) :
            a . append ( nextInt ( ) )
        return a
return FastScanner ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 204
---> probID: geeksforgeeks_975_A
---> inputs:

---> outputs:
abca


def GFG ( s ) :
    l = len ( s )
    ans = ""
    for i in range ( l - 1 ) :
        if s [ i ] > s [ i + 1 ] :
            for j in range ( l ) :
                if i != j :
                    ans += s [ j ]
            return ans
    ans = s [ : l - 1 ]
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 12%|█▏        | 204/1746 [00:04<00:37, 41.31it/s]

-------------------------------------


---> lineNum: 205
---> probID: atcoder_ABC062_A
---> inputs:
1 3
---> outputs:
Yes

def pythree_test ( ) :
    import sys
    a = sys . argv [ 1 ]
    b = sys . argv [ 2 ]
    g = [ 0 , 0 , 2 , 0 , 1 , 0 , 1 , 0 , 0 , 1 , 0 , 1 , 0 ]
    if g [ a ] == g [ b ] :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 206
---> probID: geeksforgeeks_2524_A
---> inputs:

---> outputs:
3


def GFG ( arr , n , k ) :
    i = 0
    j = 0
    min_num = sys . maxint
    found = False
    sum = 0
    while i < n :
        sum = sum + arr [ i ]
        if sum == k :
            min_num = min ( min_num , ( ( n - ( i + 1 ) ) + j ) )
            found = True
        elif sum > k :
            while sum > k :
                sum = sum - arr [ j ]
                j += 1
            if sum == k :
                min_num = min ( min_num , ( ( n - ( i + 1 ) ) + j ) )
                found = True
        i += 1
    if found :
        return min_num
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 207
---> probID: atcoder_ABC081_A
---> inputs:
101
---> outputs:
2

def main ( ) :
    import sys
    import getopt
    global pr
    global solve
    def solve ( ) :
        s = sys . stdin . readline ( ) . strip ( )
        cnt = 0
        for c in s :
            if c == '1' : cnt += 1
        pr ( cnt )
    def main ( ) :
        sys . stdin . close ( )
        pr = sys . stdout
        solve ( )
        pr . close ( )
        sys . stdout . close ( )
    def solve ( ) :
        pr = sys . stdout
        solve ( )
        pr . close ( )
        sys . stdout . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 208
---> probID: geeksforgeeks_3518_A
---> inputs:

---> outputs:
6th palindrome of 5 digit = 10501
10th palindrome of 6 digit = 109901


def GFG ( n , k ) :
    temp = ( k & 1 ) or ( k / 2 )
    palindrome = int ( pow ( 10 , temp ) )
    palindrome += n - 1
    print ( palindrome )
    if ( k & 1 ) :
        palindrome /= 10
    while palindrome > 0 :
        print ( palindrome % 10 )
        palindrome /= 10
    print ( "" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 209
---> probID: atcoder_AGC027_B
---> inputs:
2 100
1 10
---> outputs:
355

def main ( ) :
    INF = sys . maxsize
    def solve ( ) :
        N = len ( sys . argv )
        X = sys . argv [ 1 ]
        x = [ ]
        xsum = [ ]
        for i in range ( N ) :
            x . append ( sys . argv [ i ] )
            xsum . append ( xsum [ i ] + x [ i ] )
        ans = X * N + 5 * xsum [ N ]
        for i in range ( 1 , N ) :
            cost = X * i + 5 * ( xsum [ N ] - xsum [ N - i ] )
            for j , k in enumerate ( N - i , 1 ) :
                if cost > ans :
                    break
                cost += j * ( xsum [ k ] - xsum [ max ( k - i , 0 ) ] )
            ans = min ( ans , cost )
        print ( ans + N * X )
    solve ( )


---> console_out:
 
DIDN'T MATCH!! :(
 12%|█▏        | 209/1746 [00:05<00:37, 41.43it/s]  File "./junk/1692576705733_7841/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 210
---> probID: geeksforgeeks_3455_A
---> inputs:

---> outputs:
2


def import ( ) :
    import sys
    import random
    import string
    import hashlib
    import time
    import random
    import hashlib
    import time
    import random
    import string
    import random
    import hashlib
    import time
    import hashlib
    import random
    import string
    import random
    import hashlib
    import time
    import random
    import string
    import random
    import hashlib
    import time
    import hashlib
    import string
    import random
    import hashlib
    import time
    import random
    import string
    import random
    import hashlib
    import time
    import random
    import string
    import random
    import string
    import random
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 211
---> probID: codeforces_68_A
---> inputs:
2 7 1 8 2 8
---> outputs:
0

def main ( ) :
    input = sys . stdin . readline ( )
    p1 = input . split ( )
    p2 = input . split ( )
    p3 = input . split ( )
    p4 = input . split ( )
    a = input . split ( )
    b = input . split ( )
    i = 0
    min = min ( min ( p1 , p2 ) , min ( p3 , p4 ) )
    c = 0
    for i in range ( a , b + 1 ) :
        if i < min :
            c += 1
    print ( c )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 212
---> probID: projecteuler_p033_A
---> inputs:

---> outputs:
100

def p033 ( ) :
    print ( [ 'p033' ] )
    numer = 1
    denom = 1
    for d in range ( 10 , 100 ) :
        for n in range ( 10 , d ) :
            n0 , n1 = n % 10 , n // 10
            d0 , d1 = d % 10 , d // 10
            if n1 == d0 and n0 * d == n * d1 or n0 == d1 and n1 * d == n * d0 :
                numer *= n
                denom *= d
    return str ( denom / library . gcd ( numer , denom ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 213
---> probID: geeksforgeeks_3003_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    n = 20
    count = 0
    while n :
        count += n & 1
        n >>= 1
    assert int ( count ) == n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 214
---> probID: codeforces_1315_A
---> inputs:
6
8 8 0 0
1 10 0 3
17 31 10 4
2 1 0 0
5 10 3 9
10 10 4 8
---> outputs:
56
6
442
1
45
80

def test_codechef ( ) :
    import sympy
    from sympy . abc import x , y
    t = symbols ( 't' , real = True )
    for n in range ( 10 ) :
        a , b , x , y = symbols ( 'a b x y' , integer = True , cls = Dummy )
        ans = max ( max ( [ x , a - 1 - x ] ) * b , a * max ( [ y , b - 1 - y ] ) )
        assert ans == ( a * max ( [ y , x ] ) * b ) . expand ( )


---> console_out:
 
DIDN'T MATCH!! :(
 12%|█▏        | 214/1746 [00:05<00:36, 41.50it/s]

-------------------------------------


---> lineNum: 215
---> probID: geeksforgeeks_1516_A
---> inputs:

---> outputs:
2


def pyminswaps ( arr ) :
    n = len ( arr )
    arrpos = [ ( arr [ i ] , i ) for i in range ( n ) ]
    arrpos . sort ( key = lambda x : x [ 1 ] )
    if arr [ 0 ] > arr [ 1 ] :
        return 1
    elif arr [ 0 ] == arr [ 1 ] :
        return 0
    else :
        return - 1
    vis = [ False ] * n
    ans = 0
    for i in range ( n ) :
        if vis [ i ] or arrpos [ i ] [ 1 ] == i :
            continue
        cycle_size = 0
        j = i
        while not vis [ j ] :
            vis [ j ] = True
            j = arrpos [ j ] [ 1 ]
            cycle_size += 1
        if cycle_size :
            ans += ( cycle_size - 1 )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576705877_7350/main.py", line 7
    for j in range ( i * 2 , N , i += 1 ) :
                                   ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 216
---> probID: geeksforgeeks_4864_A
---> inputs:

---> outputs:
40


def get_GFG ( n ) :
    N = 1000005
    prime = [ False ] * N
    sieve = [ False ] * N
    for i in range ( 2 , N ) :
        if prime [ i ] :
            for j in range ( i * 2 , N , i += 1 ) :
                prime [ j ] = False
    sum_truncatable_primes = 0
    for i in range ( 2 , n ) :
        num = i
        flag = True
        while num > 0 :
            if not prime [ num ] :
                flag = False
                break
            num /= 10
        num = i
        power = 10
        while num / power > 0 :
            if not prime [ num % power ] :
                flag = False
                break
            power *= 10
        if flag :
            sum += i
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 217
---> probID: geeksforgeeks_3392_A
---> inputs:

---> outputs:
1 3 

def test_GFG ( ) :
    """
 Test the number of weights of the graph.
 """
    sum = 0
    power = 0
    number = 3
    while sum < X :
        sum = number - 1
        sum /= 2
        power += 1
        number *= 3
    ans = 1
    for i in range ( 1 , power + 1 ) :
        print ( ans , end = ' ' )
        ans = ans * 3


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 218
---> probID: geeksforgeeks_2489_A
---> inputs:

---> outputs:
455

def gf_add_ground ( A , K ) :
    """Add an element of ``A`` to a multivariate polynomial in ``GF(p)[x]``. """
    v = [ ]
    ans = [ ]
    rem = 0
    i = 0
    for i in range ( len ( A ) - 1 , - 1 , - 1 ) :
        my = A [ i ] + K % 10 + rem
        if my > 9 :
            rem = 1
            v . append ( my % 10 )
        else :
            v . append ( my )
            rem = 0
        K = K // 10
    while K > 0 :
        my = K % 10 + rem
        v . append ( my % 10 )
        if my / 10 > 0 :
            rem = 1
        else :
            rem = 0
        K = K // 10
    if rem :
        v . append ( rem )
    for j in range ( len ( v ) - 1 , - 1 , - 1 ) :
        ans . append ( v [ j ] )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 219
---> probID: geeksforgeeks_4262_A
---> inputs:

---> outputs:
ad ae 
bd be 


def GFG ( input , R , C ) :
    for i in range ( C ) :
        dfs ( input , '' , 0 , i , R , C )
        print ( )
    def dfs ( input , res , i , j , R , C ) :
        if i == R :
            print ( res , end = ' ' )
            return
        res = res + input [ i ] [ j ]
        for k in range ( C ) :
            dfs ( input , res , i + 1 , k , R , C )
            if i + 1 == R :
                break
    def dfs ( input , res , i , j , R , C ) :
        if i == R :
            print ( res , end = ' ' )
            return
        res = res + input [ i ] [ j ]
        for k in range ( C ) :
            dfs ( input , res , i + 1 , k , R , C )
            if i + 1 == R :
                break
    def dfs ( input , res , i , j , R , C ) :
        if i == R :
            print ( res , end = ' ' )
            return
        res = res + input [ i ] [ j ]
        for k in range ( C ) :
            dfs ( input , res , i + 1 , k , R , C )
            if i + 1 == R :
                break
    def dfs ( input , res , i , j , R , C ) :
        if i == R :
            print ( res , end = ' ' )
            return
        res = res + input [ i ] [ j ]
        for k in range ( C ) :
            dfs ( input , res , i + 1 , k , R , C )
            if i + 1 == R :
                break


---> console_out:
 
DIDN'T MATCH!! :(
 13%|█▎        | 219/1746 [00:05<00:36, 41.71it/s]

-------------------------------------


---> lineNum: 220
---> probID: codeforces_1200_A
---> inputs:
8
LLRL1RL1
---> outputs:
1010000011

def main ( ) :
    import sys
    import string
    import getopt
    global num
    global line
    global hotel
    for i in range ( num ) :
        actual = line [ i ]
        if actual == 'L' :
            bb = True
            for pos in range ( 10 , False , - 1 ) :
                if hotel [ pos ] == 0 :
                    hotel [ pos ] = 1
                    bb = False
        else :
            if actual == 'R' :
                bb = True
                for pos in range ( 9 , False , - 1 ) :
                    if hotel [ pos ] == 0 :
                        hotel [ pos ] = 1
                        bb = False
            else :
                pos = int ( actual + '' )
                hotel [ pos ] = 0
    res = [ ]
    for x in hotel :
        res . append ( x )
    print ( res )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 221
---> probID: codeforces_1351_B
---> inputs:
3
2 3
3 1
3 2
1 3
3 3
1 3
---> outputs:
Yes
Yes
No

def b_Square ( ) :
    import sys
    import tokenize
    import string
    import ast
    import ast . expr
    import ast . stmt
    import ast . expr
    import ast . stmt
    import ast . expr
    import ast . stmt
    import ast . expr
    import ast . expr
    import ast . stmt
    import ast . expr
    import ast . expr
    import ast . stmt
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr
    import ast . expr


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 222
---> probID: geeksforgeeks_2152_A
---> inputs:

---> outputs:
3.142857142857142


def precision_recall_curve ( y_true , y_pred , pos_label = 2 , average = 'weighted' ) :
    """ Compute   Precision   Recall   Recall   curve   for   classification   task . STRNEWLINE STRNEWLINE   Read   more   in   the   : ref : ` User   Guide   < precision _ recall _ curve > ` . STRNEWLINE STRNEWLINE   Parameters STRNEWLINE   - - - - - STRNEWLINE   pos _ label   :   int ,   optional   ( default = 2 ) STRNEWLINE   Position   label . STRNEWLINE STRNEWLINE   average   :   string   or   iterable   of   strings ,   optional   ( default = 'weighted' ) STRNEWLINE   The   type   of   floating   point   number   for   the   precision   curve .   For   more STRNEWLINE   information   see   : func : ` average ` . STRNEWLINE STRNEWLINE   Returns STRNEWLINE   - - - - - STRNEWLINE   precisioncurve   :   : class : ` ~ sklearn . metrics . precisioncurve . RTreeClassifier ` STRNEWLINE   The   precision   curve . STRNEWLINE STRNEWLINE   """
    if average == 'weighted' :
        y_true = np . ravel ( y_true )
    if average == 'macro' :
        y_true = np . ravel ( y_true )
    if pos_label == 2 :
        y_true = y_true [ y_true ]
    if y_true . size == pos_label :
        y_true = y_true [ y_true ]
    if ( ( pos_label > 1 ) and ( pos_label < 2 ) ) or ( ( pos_label < 0 ) and ( pos_label > 2 ) ) :
        y_true = y_true [ y_true ]
    d = y_true / pos_label
    for i in range ( 0 , len ( y_true ) ) :
        y_true = y_true [ y_true ]
        y_pred = y_pred [ y_true ]
        if d < 0 :
            break
        y_pred = y_pred [ y_pred ]
        d = y_pred / pos_label
        if i == 0 :
            y_true = y_pred
    return precision_recall_curve ( y_true , y_pred , average = average )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 223
---> probID: geeksforgeeks_1091_A
---> inputs:

---> outputs:
9261000


def test_GFG ( ) :
    """Test the LM root of the first degree of the first subsequence."""
    if b == 0 :
        return a
    else :
        return gcd ( b , a % b )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576706073_2474/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 224
---> probID: geeksforgeeks_3953_A
---> inputs:

---> outputs:
Specific Level Order Traversal of Binary Tree is
2 3 1 

def import ( ) :
    import sys
    class Node :
        data = 0
        left , right = None
        def __init__ ( self , data ) :
            self . data = data
            self . left = self . right = None
    class BinaryTree :
        root = None
        def print_specific_level_order_util ( self , root , s ) :
            if not root :
                return
            q = Queue ( )
            q . put ( root . left )
            q . put ( root . right )
            first , second = None , None
            while not q . empty ( ) :
                first , second = q . get ( )
                q . put ( second . left )
                q . put ( first . right )
                q . put ( second . right )
                q . put ( first . left )
                if first . left . left :
                    q . put ( first . right )
                    q . put ( second . left )
                    q . put ( first . left )
                    q . put ( second . right )
        def print_specific_level_order ( self , root ) :
            s = Stack ( )
            s . put ( root )
            if root . left :
                s . put ( root . right )
                s . put ( root . left )
            if root . left . left :
                print_specific_level_order_util ( root , s )
            while not s . empty ( ) :
                print ( s . get ( ) . data , end = ' ' )
                s . pop ( )
    

---> console_out:
 
DIDN'T MATCH!! :(
 13%|█▎        | 224/1746 [00:05<00:37, 41.01it/s]

-------------------------------------


---> lineNum: 225
---> probID: geeksforgeeks_1758_A
---> inputs:

---> outputs:
Solid Square:
*****
*****
*****
*****
*****

Hollow Square:
*****
*   *
*   *
*   *
*****


def GFG ( rows ) :
    i , j = 1 , 1
    for i in range ( 1 , rows ) :
        if i == 1 or i == rows :
            for j in range ( 1 , rows ) :
                print ( "*" )
        else :
            for j in range ( 1 , rows ) :
                if j == 1 or j == rows :
                    print ( "*" )
                else :
                    print ( " " )
                print ( "\n" )
    def solidSquare ( rows ) :
        i , j = 1 , 1
        for i in range ( 1 , rows ) :
            for j in range ( 1 , rows ) :
                print ( "*" )
            print ( "\n" )
    def printPattern ( rows ) :
        print ( "Solid Square:\n" )
        solidSquare ( rows )
        print ( "\nHollow Square:\n" )
        hollowSquare ( rows )
    def main ( ) :
        rows = 5
        printPattern ( rows )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 226
---> probID: codeforces_110_B
---> inputs:
5
---> outputs:
abcda

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'ab' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """usage: %s [-c|-b|-a|-d]
        -c: change the copyright and credits to the original license.""" % sys . argv [ 0 ] )
        sys . exit ( 2 )
    for o , a in opts :
        if o == '-c' :
            print ( 'change copyright' )
        elif o == '-b' :
            print ( 'change alternate license' )
        elif o == '-a' :
            print ( 'change main license' )
        else :
            for i in range ( n // 4 ) :
                print ( 'abcd' )
            t = n % 4
            if t == 1 :
                print ( 'a' )
            elif t == 2 :
                print ( 'ab' )
            elif t == 3 :
                print ( 'abc' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 227
---> probID: codeforces_294_B
---> inputs:
5
1 12
1 3
2 15
2 5
2 1
---> outputs:
5

def main ( ) :
    import sys
    n = len ( sys . argv )
    data = [ ]
    max_len = 0
    for i in range ( 1 , n + 1 ) :
        data . append ( sys . argv [ i ] )
        data . append ( sys . argv [ i + 1 ] )
        max_len += len ( data [ i ] )
    sys . exit ( "%d %d" % ( n , max_len ) )
    dp = [ 10000 ] * ( max_len + 1 )
    dp [ 0 ] = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( max_len , i >= data [ i ] [ 0 ] , i ) :
            dp [ j ] = min ( dp [ j ] , dp [ j - data [ i ] [ 0 ] ] + data [ i ] [ 1 ] )
    for i in range ( max_len , i >= 0 , i ) :
        if max_len - i >= dp [ i ] :
            print ( max_len - i )
            return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 228
---> probID: atcoder_ABC094_A
---> inputs:
3 5 4
---> outputs:
YES

def main ( ) :
    import sys
    a = sys . argv [ 1 ]
    b = sys . argv [ 2 ]
    x = sys . argv [ 3 ]
    if ( x < a ) or ( ( a + b ) < x ) :
        print ( "NO" )
    else :
        print ( "YES" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 229
---> probID: geeksforgeeks_220_A
---> inputs:

---> outputs:
3


def GFG ( arr , n ) :
    gcd = 0
    for i in range ( n ) :
        gcd = __gcd ( arr [ i ] , gcd )
    return gcd


---> console_out:
 
DIDN'T MATCH!! :(
 13%|█▎        | 229/1746 [00:05<00:37, 40.82it/s]

-------------------------------------


---> lineNum: 230
---> probID: geeksforgeeks_576_A
---> inputs:

---> outputs:
Second Player wins the game


def GFG ( n ) :
    if ( n - 1 ) % 6 == 0 :
        print ( "Second Player wins the game" )
    else :
        print ( "First Player wins the game" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 231
---> probID: geeksforgeeks_3573_A
---> inputs:

---> outputs:
Following is Breadth First Traversal (starting from vertex 2)
2 0 3 1 

def test_graph2 ( ) :
    import sys
    import networkx
    class Graph ( networkx . Graph ) :
        V = 1
        adj = [ ]
        def __init__ ( self , v ) :
            self . V = v
            self . adj = [ ]
        def add_edge ( self , v , w ) :
            self . adj . append ( w )
        def BFS ( self , s ) :
            self . adj [ s ] . append ( s )
        def is_connected ( self , s ) :
            return self . adj [ s ] == 0
        def is_connected ( self , s ) :
            return self . adj [ s ] == 1
        def is_connected ( self , s ) :
            return self . adj [ s ] == 2
        def is_connected ( self , s ) :
            return self . adj [ s ] == 3
        def is_connected ( self , s ) :
            return self . adj [ s ] == 4
        def is_connected ( self , s ) :
            return self . adj [ s ] == 5
        def is_connected ( self , s ) :
            return self . adj [ s ] == 6
        def is_connected ( self , s ) :
            return self . adj [ s ] == 7
        def is_connected ( self , s ) :
            return self . adj [ s ] == 8
        def is_connected ( self , s ) :
            return self . adj [ s ] == 9
        def is_connected ( self , s ) :
            return self . adj [ s ] == 10
        def is_connected ( self , s ) :
            return self . adj [ s ] == 11
        def is_connected ( self , s ) :
            return self . adj [ s ] == 12
        def is_connected ( self , s ) :
            return self . adj [ s ] == 13
        def is_connected ( self , s ) :
            return self . adj [ s ] == 14
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 232
---> probID: geeksforgeeks_3472_A
---> inputs:

---> outputs:
Following is Breadth First Traversal (starting from vertex 2)
2 0 3 1 

def test_graph2 ( ) :
    import sys
    import networkx
    class Graph ( networkx . Graph ) :
        V = 1
        adj = [ ]
        def __init__ ( self , v ) :
            self . V = v
            self . adj = [ ]
        def add_edge ( self , v , w ) :
            self . adj . append ( w )
        def BFS ( self , s ) :
            self . adj [ s ] . append ( s )
        def is_connected ( self , s ) :
            return self . adj [ s ] == 0
        def is_connected ( self , s ) :
            return self . adj [ s ] == 1
        def is_connected ( self , s ) :
            return self . adj [ s ] == 2
        def is_connected ( self , s ) :
            return self . adj [ s ] == 3
        def is_connected ( self , s ) :
            return self . adj [ s ] == 4
        def is_connected ( self , s ) :
            return self . adj [ s ] == 5
        def is_connected ( self , s ) :
            return self . adj [ s ] == 6
        def is_connected ( self , s ) :
            return self . adj [ s ] == 7
        def is_connected ( self , s ) :
            return self . adj [ s ] == 8
        def is_connected ( self , s ) :
            return self . adj [ s ] == 9
        def is_connected ( self , s ) :
            return self . adj [ s ] == 10
        def is_connected ( self , s ) :
            return self . adj [ s ] == 11
        def is_connected ( self , s ) :
            return self . adj [ s ] == 12
        def is_connected ( self , s ) :
            return self . adj [ s ] == 13
        def is_connected ( self , s ) :
            return self . adj [ s ] == 14
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 233
---> probID: geeksforgeeks_1120_A
---> inputs:

---> outputs:
5 8 10 12 13 

def test_GFG ( ) :
    """Test the GFG algorithm."""
    a = 1
    elements = [ a ]
    for i in range ( n ) :
        elements [ i + 1 ] = arr [ i ] ^ elements [ i ]
    for i in range ( n + 1 ) :
        assert elements [ i ] == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 234
---> probID: codejam_16_41
---> inputs:
4
1 1 1 0
1 2 0 0
2 1 1 2
2 2 0 2

---> outputs:
Case #1: PR
Case #2: IMPOSSIBLE
Case #3: PSRS
Case #4: IMPOSSIBLE


def py2ascii ( ) :
    import sys
    import string
    cs = [ 'P' , 'R' , 'S' ]
    dp = [ [ 'P' , 'R' , 'S' ] , [ 'P' , 'S' ] ]
    for i in range ( 1 , len ( dp [ 0 ] ) ) :
        for j in range ( 3 ) :
            dp [ j ] [ i ] = dp [ j ] [ i - 1 ] + dp [ ( j + 1 ) % 3 ] [ i - 1 ]
            o = dp [ ( j + 1 ) % 3 ] [ i - 1 ] + dp [ j ] [ i - 1 ]
            if o < dp [ j ] [ i ] :
                dp [ j ] [ i ] = o
    T = sys . getrecursionlimit ( )
    for i in range ( 1 , T ) :
        print ( "Case #%d: " % i )
        print ( solve ( ) )
    def solve ( ) :
        N = sys . getrecursionlimit ( )
        R = sys . getrecursionlimit ( )
        P = sys . getrecursionlimit ( )
        S = sys . getrecursionlimit ( )
        ret = None
        for i in range ( 3 ) :
            c = [ ]
            for ch in dp [ i ] [ N ] :
                if ch == 'P' :
                    c . append ( i )
                if ch == 'R' :
                    c . append ( i )
                if ch == 'S' :
                    c . append ( i )
            if c [ 0 ] == P and c [ 1 ] == R and c [ 2 ] == S :
                ret = dp [ i ] [ N ]
        return ret if ret else 'IMPOSSIBLE'
    return ''


---> console_out:
 
DIDN'T MATCH!! :(
 13%|█▎        | 234/1746 [00:05<00:36, 40.98it/s]

-------------------------------------


---> lineNum: 235
---> probID: codeforces_333_B
---> inputs:
3 1
2 2
---> outputs:
0

def pythree_chips ( ) :
    scn = nx . club_tree ( )
    n = scn . shape [ 0 ]
    k = scn . shape [ 1 ]
    row = np . zeros ( ( n , k ) )
    col = np . zeros ( ( n , k ) )
    for i in range ( k ) :
        val = scn . sum ( )
        val2 = scn . sum ( )
        row [ val - 1 ] = True
        col [ val2 - 1 ] = True
    ans = 0
    for i in range ( 1 , n - 1 ) :
        if n % 2 == 1 and i == n // 2 :
            if not row [ i ] or not col [ i ] :
                ans += 1
        elif not row [ i ] or not col [ i ] :
            ans = ans + ( ( not row [ i ] and not col [ i ] ) and 2 or 1 )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 236
---> probID: geeksforgeeks_1493_A
---> inputs:

---> outputs:
The two repeating elements are : 4 & 2


def test_repeat_element ( ) :
    S = 0
    P = 1
    x , y = 1 , 1
    D = 0
    n = size - 2 , i
    for i in range ( size ) :
        S = S + arr [ i ]
        P = P * arr [ i ]
    S = S - n * ( n + 1 ) / 2
    P = P / fact ( n )
    D = int ( sqrt ( S ** 2 - 4 * P ) )
    x = ( D + S ) / 2
    y = ( S - D ) / 2
    print ( "The two repeating elements are : " , x , y )
    print ( )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576706392_1966/main.py", line 10
    for i in range ( 0 , len ( isPrime ) * i <= len ( isPrime ) :
                                                                ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 237
---> probID: aizu_p00836_A
---> inputs:
2
3
17
41
20
666
12
53
0
---> outputs:
1
1
2
3
0
0
1
2

def main ( ) :
    import sys
    count = 1
    isPrime = [ False ] * 10001
    primes = [ 0 ] * 100000
    sum = [ 0 ] * 100000
    try :
        random . seed ( 0 )
        isPrime [ 0 ] = isPrime [ 1 ] = False
        for i in range ( 0 , len ( isPrime ) * i <= len ( isPrime ) :
            if isPrime [ i ] :
                for j in range ( i + 1 , len ( isPrime ) , i ) :
                    isPrime [ j ] = False
        for i in isPrime :
            if isPrime [ i ] :
                primes [ count ] = i
                sum [ count ] = sum [ count - 1 ] + primes [ count ]
                count += 1
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 238
---> probID: atcoder_AGC021_B
---> inputs:
99
-597624 -111746
-763451 -909006
889623 352669
-750222 28248
-18288 -97300
765545 -140277
353638 -843558
-826064 985707
850084 329188
605117 -893630
-491067 -861004
204072 215374
501906 687744
958939 74794
562265 -320746
-188128 456002
650567 -594335
-794253 745145
-475876 834471
123399 573522
34925 443871
-935582 343858
-787505 82135
-145089 658822
602317 -697406
263274 -972576
-929401 844863
-747171 199268
-959666 -601220
-897125 692530
-610884 -436755
-458195 -935396
-90495 715006
-920721 877265
623278 -395430
-30508 514839
321218 -232955
-913055 504732
253154 -482912
-768486 467286
-429825 -821249
151322 800710
916040 892014
-539063 691920
-948109 895210
-958378 356070
-859726 -854798
-266817 -391859
-494814 -837985
771621 -358544
-130241 580634
433743 726425
808927 836079
-428889 -310011
420233 -492990
-374326 178099
607817 -817154
738703 356407
-443209 882732
-545159 622014
461087 -735737
203317 -503046
192009 528706
-691771 988989
365717 -285807
-999587 974231
320484 -226195
-869783 364554
-1858 -918858
43354 366046
246156 -945373
570957 -849030
-205436 523777
-852249 113239
-793866 986146
-823507 -847947
-520779 -115306
-872853 391240
142227 -446959
860826 402362
-415806 -626337
241906 226824
133538 283644
825611 912830
55007 -368019
641090 144135
465173 -150217
545525 -83537
578909 361955
-84097 -615101
-561335 -108710
325878 25712
-943542 -652584
312973 747464
-157504 -388122
373884 265085
-794498 -900206
457864 -44312
-415053 -699362
---> outputs:
0.00000000000000000000
0.03023296010721759561
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00662162848797220958
0.00000000000000000000
0.15812711462230091830
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.06409756998449887833
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.04431690633576074179
0.00000000000000000000
0.00000000000000000000
0.04437887715814670120
0.00000000000000000000
0.00000000000000000000
0.00553054036605005704
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.20564414178076056983
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.09067493950998017915
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.01187028589970203288
0.00000000000000000000
0.24352157176574720787
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.02802741206854937606
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.01412685716278153265
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.05282919475053176467
0.00000000000000000000
0.00000000000000000000

def main ( ) :
    import sys
    import numpy
    import numpy . linalg
    import numpy . random
    import numpy . ma
    import numpy . ma
    import numpy . polynomial
    import numpy . polynomial
    import numpy . polynomial
    import numpy . ma
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . ma
    import numpy . polynomial
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy . ma
    import numpy

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 239
---> probID: aizu_p01369_A
---> inputs:
koukyoukoukokukikou
abrakadabra
acmicpc
japaque
helloworld
#
---> outputs:
0
2
4
5
7

def _main ( ) :
    sc = SparkContext ( appName = "PythonChineseExample" )
    sc . begin ( )
    try :
        while True :
            st = sc . readSplit ( )
            if st == "#" :
                break
            c = sc . parallelize ( range ( len ( st ) ) , 1 )
            count , t = sc . runJob ( "SELECT count(*) FROM %s WHERE name = '%s'" % ( st [ 0 ] , st [ 1 ] ) )
            for i in range ( len ( st ) ) :
                if t != check ( st [ i ] ) :
                    count += 1
                    t = check ( st [ i ] )
            print ( count )
    finally :
        sc . stop ( )


---> console_out:
 
DIDN'T MATCH!! :(
 14%|█▎        | 239/1746 [00:05<00:37, 40.62it/s]

-------------------------------------


---> lineNum: 240
---> probID: codeforces_867_A
---> inputs:
4
FSSF
---> outputs:
NO

def main ( ) :
    import sys
    n = len ( sys . argv )
    str = sys . argv [ 1 ]
    S = 0
    for i in range ( n - 1 ) :
        if str [ i ] == 'S' and str [ i + 1 ] == 'F' :
            S += 1
        elif str [ i ] == 'F' and str [ i + 1 ] == 'S' :
            S -= 1
    if S > 0 :
        print ( 'YES' )
    else :
        print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 241
---> probID: codeforces_1554_A
---> inputs:
4
3
2 4 3
4
3 2 3 1
2
69 69
6
719313 273225 402638 473783 804745 323328
---> outputs:
12
6
4761
381274500335

def test_247 ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' , integer = True , positive = True )
    for i in range ( t . size ) :
        n = symbols ( 'n' , integer = True , positive = True )
        a = [ 0 ] * n
        max = 0
        for i in range ( n ) :
            a [ i ] = a [ i ] * a [ i ]
        if n == 2 :
            max = a [ 0 ] * a [ 1 ]
        for i in range ( 1 , n - 1 ) :
            if a [ i - 1 ] > a [ i + 1 ] :
                if a [ i ] * a [ i - 1 ] > max :
                    max = a [ i ] * a [ i - 1 ]
            else :
                if a [ i ] * a [ i + 1 ] > max :
                    max = a [ i ] * a [ i + 1 ]
        assert max == a [ 0 ] * a [ 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 242
---> probID: geeksforgeeks_1029_A
---> inputs:

---> outputs:
6
190475


def pylcm ( a , b ) :
    """
 Find the LCM of the given number of bits.

 :param a:
 :param b:
 :return:
 """
    return ( a * b ) / sympy . gcd ( a + '' , b + '' ) . expand ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 243
---> probID: codeforces_147_A
---> inputs:
galileo galilei was an   italian physicist  ,mathematician,astronomer
---> outputs:
galileo galilei was an italian physicist, mathematician, astronomer

def punctuation ( c ) :
    """Return a string of punctuation characters."""
    if c . isalnum ( ) :
        return c
    if c . isspace ( ) :
        return c
    if c . isupper ( ) :
        return c
    if c . islower ( ) :
        return c
    return c


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 244
---> probID: geeksforgeeks_4941_A
---> inputs:

---> outputs:
1


def get_gfg ( a , n , k ) :
    m = { }
    for i in range ( n ) :
        if m . has_key ( a [ i ] ) :
            m [ a [ i ] ] = m [ a [ i ] ] + 1
        else :
            m [ a [ i ] ] = 1
    res = sys . maxsize
    s = m . keys ( )
    for temp in s :
        if m [ temp ] == k :
            res = min ( res , temp )
    return ( res , k )


---> console_out:
 
DIDN'T MATCH!! :(
 14%|█▍        | 244/1746 [00:05<00:36, 40.97it/s]

-------------------------------------


---> lineNum: 245
---> probID: geeksforgeeks_2871_A
---> inputs:

---> outputs:
Yes


def test_GFG ( ) :
    n = len ( s )
    c = chr ( 64 )
    for i in range ( 1 , n ) :
        if s [ i ] in [ 'a' , 'e' , 'i' , 'o' , 'u' ] :
            if s [ i ] < c :
                return False
            else :
                c = s [ i ]
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 246
---> probID: aizu_p00748_A
---> inputs:
40
14
5
165
120
103
106
139
0
---> outputs:
2 6
2 14
2 5
1 1
1 18
5 35
4 4
3 37

def main ( ) :
    import sys
    import getopt
    import time
    import random
    import string
    import struct
    import random
    import time
    import sys
    import string
    import struct
    alreadyA = [ ]
    alreadyB = [ ]
    try :
        cnt = 0
        for i in range ( 1 , 1000000 ) :
            t = random . randint ( 0 , 1000000 )
            a = [ t ]
        for i in range ( len ( a ) ) :
            pass
        alreadyA = [ ]
        alreadyB = [ ]
        cnt = 0
        for i in range ( 1 , 1000000 ) :
            t = random . randint ( 0 , 1000000 )
            if t % 2 == 1 :
                b = [ t ]
    except :
        sys . exit ( "Usage: %s <input>" % sys . argv [ 0 ] )
    def a ( ) :
        for i in range ( 1 , 1000000 ) :
            mina = sys . maxint
            minb = sys . maxint
            x , y = 0 , 0
            for j in range ( 180 , a [ i ] <= i ) :
                mina = min ( 1 + alreadyA [ i - a [ j ] ] , mina )
                if a [ j ] % 2 == 1 :
                    minb = min ( 1 + alreadyB [ i - a [ j ] ] , minb )
            alreadyA . append ( mina )
            alreadyB . append ( minb )
    def tetrahedral ( a ) :
        return ( a * ( a + 1 ) * ( a + 2 ) ) / 6
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 247
---> probID: geeksforgeeks_4135_A
---> inputs:

---> outputs:
Yes


def GFG ( str ) :
    letter = 0
    for c in str :
        if ( c >= 'A' and c <= 'Z' ) :
            letter += 1
    return letter
def countOfLetters ( str ) :
    number = 0
    for c in str :
        if c >= '0' and c <= '9' :
            number += 1
    return number
def check ( str ) :
    if countOfLetters ( str ) == countOfNumbers ( str ) :
        print ( "Yes\n" )
    else :
        print ( "No\n" )
def main ( ) :
    str = "GeeKs01324"
    check ( str )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 248
---> probID: aizu_p00013_A
---> inputs:
1
6
0
8
10
0
0
0
---> outputs:
6
10
8
1

def main ( ) :
    import sys
    box = [ ]
    i = 0
    while 1 :
        n = sys . stdin . readline ( )
        if n == '' :
            i -= 1
            print ( box [ i ] )
        else :
            box . append ( n )
            i += 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 249
---> probID: atcoder_AGC006_B
---> inputs:
4 4
---> outputs:
Yes
1
2
3
4
5
6
7


def main ( ) :
    import sys
    for n in range ( 0 , N ) :
        x , y = input ( ) . split ( )
        if x == 1 or x == 2 * N - 1 :
            print ( "No" )
            break
        print ( "Yes" )
        low , high = x - 1 , x + 1
        deq = [ x ]
        while low != 0 or high != 2 * N :
            if low == 0 :
                deq . append ( high )
                deq . append ( high + 1 )
                high += 2
            elif high == 2 * N :
                deq . append ( low )
                deq . append ( low - 1 )
                low -= 2
            else :
                deq . append ( low )
                low -= 1
                deq . append ( high )
                high += 1
        for s in deq :
            print ( s )


---> console_out:
 
DIDN'T MATCH!! :(
 14%|█▍        | 249/1746 [00:06<00:36, 41.08it/s]  File "./junk/1692576706709_3136/main.py", line 6
    for j in range ( i * i , MAX , j += i * i ) :
                                     ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 250
---> probID: geeksforgeeks_273_A
---> inputs:

---> outputs:
Total perfect divisors of 16 = 3
Total perfect divisors of 12 = 2


def GFG ( n ) :
    MAX = 100001
    perfect_div = [ 0 ] * MAX
    precompute_counts = { }
    for i in range ( 1 , MAX ) :
        for j in range ( i * i , MAX , j += i * i ) :
            yield perfect_div [ j ]
    count_perfect_divisors = perfect_div [ n ]
    for i in range ( 16 ) :
        yield count_perfect_divisors [ i ]
    n = 12
    yield 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 251
---> probID: aizu_p02022_A
---> inputs:
3 2
3 1 5
2 4
---> outputs:
54

def main ( ) :
    import sys
    n , m = sys . argv [ 1 ] , sys . argv [ 2 ]
    nn = 0
    for i in range ( n ) :
        nn += sys . stdin . read ( )
    mm = 0
    for i in range ( m ) :
        mm += sys . stdin . read ( )
    print ( nn * mm )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 252
---> probID: aizu_p01520_A
---> inputs:
2 10 2
3 4
---> outputs:
['2', '1\n']

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        print ( msg )
        return
    for o , a in opts :
        if o == '-d' :
            d = a
        elif o == '-e' :
            e = a
    for o , a in args :
        if o == '-d' :
            d = a
        elif o == '-e' :
            e = a
    for o , a in opts :
        if o == '-e' :
            e = a
    print ( '%d %s' % ( len ( args ) , e ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 253
---> probID: geeksforgeeks_5050_A
---> inputs:

---> outputs:
8:20


def test_GFG ( h , r ) :
    IST = ( h * r * 1.0 ) / 360
    int_IST = int ( IST )
    float_IST = int ( math . ceil ( int ( ( IST - int_IST ) * 60 ) ) )
    assert int_IST == float_IST


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 254
---> probID: geeksforgeeks_4860_A
---> inputs:

---> outputs:
1.000 + i 0.000
1.000 + i 0.000
-1.000 + i 0.000
1.000 + i 0.000
-0.500 + i 0.866
-0.500 - i 0.866


def test_GFG ( n ) :
    theta = pi * 2 / n
    for k in range ( n ) :
        real = cos ( k * theta )
        img = sin ( k * theta )
        print ( '%.3f' % real )
        if img >= 0 :
            print ( ' + i ' )
        else :
            print ( ' - i ' )
        print ( '%.3f' % abs ( img ) )


---> console_out:
 
DIDN'T MATCH!! :(
 15%|█▍        | 254/1746 [00:06<00:35, 41.45it/s]

-------------------------------------


---> lineNum: 255
---> probID: geeksforgeeks_2548_A
---> inputs:

---> outputs:
{1, 4}, {1, 5}, {1, 6}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, 

def test_GFG ( ) :
    arr1 = [ 1 , 2 , 3 ]
    arr2 = [ 4 , 5 , 6 ]
    n1 = len ( arr1 )
    n2 = len ( arr2 )
    assert findCart ( arr1 , arr2 , n1 , n2 ) == [ 1 , 2 , 3 ]


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576706850_8837/main.py", line 1
    def import ( s ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 256
---> probID: geeksforgeeks_2709_A
---> inputs:

---> outputs:
3


def import ( s ) :
    n = len ( s )
    count_left , count_right = 0 , 0
    for i in range ( n ) :
        if s [ i ] == s [ 0 ] :
            count_left += 1
        else :
            break
    for i in range ( n - 1 , - 1 , - 1 ) :
        if s [ i ] == s [ n - 1 ] :
            count_right += 1
        else :
            break
    if s [ 0 ] == s [ n - 1 ] :
        return ( ( count_left + 1 ) * ( count_right + 1 ) )
    else :
        return ( count_left + count_right + 1 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576706874_1570/main.py", line 11
    for i in range ( p * 2 , MAX , i += p ) :
                                     ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 257
---> probID: geeksforgeeks_2299_A
---> inputs:

---> outputs:
10


def GFG ( ) :
    MAX = 1000000
    prime = [ True for i in range ( MAX + 1 ) ]
    SieveOfEratosthenes ( )
    for i in prime :
        prime [ i ] = True
    prime [ 1 ] = False
    prime [ 0 ] = False
    for p in range ( 2 , MAX * p <= MAX ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , MAX , i += p ) :
                prime [ i ] = False
    SumOfKthPrimes ( arr , n , k )
    c = 0
    sum = 0
    for i in range ( n ) :
        if prime [ arr [ i ] ] :
            c += 1
            if c % k == 0 :
                sum += arr [ i ]
                c = 0
    print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576706899_8651/main.py", line 11
    for i in range ( p * 2 , MAX , i += p ) :
                                     ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 258
---> probID: geeksforgeeks_4266_A
---> inputs:

---> outputs:
10


def GFG ( arr , n , k ) :
    MAX = 1000000
    prime = [ False ] * ( MAX + 1 )
    SieveOfEratosthenes ( )
    for i in range ( 0 , MAX ) :
        prime [ i ] = True
    prime [ 1 ] = False
    prime [ 0 ] = False
    for p in range ( 2 , MAX * p <= MAX ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , MAX , i += p ) :
                prime [ i ] = False
    solve ( arr , n , k )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 259
---> probID: geeksforgeeks_2331_A
---> inputs:

---> outputs:
21


def GFG ( arr , n , k ) :
    MAX = 1000000
    prime = [ False ] * ( MAX + 1 )
    SieveOfEratosthenes ( )
    prime [ 1 ] = True
    prime [ 0 ] = True
    for p in range ( 2 , p * p <= MAX ) :
        if prime [ p ] == False :
            for i in range ( p * 2 , MAX , p ) :
                prime [ i ] = True
    product_of_kth_primes ( arr , n , k )
    c = 0
    product = 1
    for i in range ( n ) :
        if not prime [ arr [ i ] ] :
            c += 1
            if c % k == 0 :
                product *= arr [ i ]
                c = 0
    print ( product )


---> console_out:
 
DIDN'T MATCH!! :(
 15%|█▍        | 259/1746 [00:06<00:35, 41.64it/s]

-------------------------------------


---> lineNum: 260
---> probID: geeksforgeeks_5053_A
---> inputs:

---> outputs:
0101 1111 1001 0110 0000 1010 


def pyminswaps ( diff , out , start , end ) :
    if abs ( diff ) > ( end - start + 1 ) / 2 :
        return
    if start > end :
        if diff == 0 :
            print ( [ '' ] * ( end - start + 1 ) )
            print ( ' ' )
        return
    out [ start ] = '0'
    out [ end ] = '1'
    findAllSequences ( diff + 1 , out , start + 1 , end - 1 )
    out [ start ] = out [ end ] = '1'
    findAllSequences ( diff , out , start + 1 , end - 1 )
    out [ start ] = out [ end ] = '0'
    findAllSequences ( diff , out , start + 1 , end - 1 )
    out [ start ] = out [ end ] = '1'
    findAllSequences ( diff - 1 , out , start + 1 , end - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 261
---> probID: codeforces_1119_B
---> inputs:
5 7
2 3 5 4 1
---> outputs:
3

def test_narrow_fridge ( ) :
    import numpy as np
    s = np . random . uniform ( size = ( 10 , 10 ) )
    n , h = s . shape
    arr = np . random . uniform ( size = ( n , n ) )
    overall_pq = PriorityQueue ( sorted ( arr ) )
    ans = - 1
    for i in range ( n ) :
        overall_pq . add ( arr [ i ] )
        pq = PriorityQueue ( sorted ( overall_pq ) )
        c1 , c2 = h , h
        flag = True
        while not pq . empty ( ) :
            if flag :
                if c1 >= pq . get ( ) :
                    c1 -= pq . get ( )
                else :
                    break
                flag = False
            else :
                if c2 >= pq . get ( ) :
                    c2 -= pq . get ( )
                else :
                    break
                flag = True
        if pq . empty ( ) :
            ans = i + 1
        else :
            break
    assert ans == n
    s . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 262
---> probID: geeksforgeeks_2488_A
---> inputs:

---> outputs:
1 -> 2 -> 3 -> 4 -> 5 -> 6 -> NULL


def GFG ( data ) :
    def printList ( node ) :
        while node :
            print ( node . data , " -> " )
            node = node . next
        print ( "NULL" )
    def cntNodes ( node ) :
        if node is None :
            return 0
        return ( 1 + cntNodes ( node . next ) )
    def updateList ( head , m ) :
        cnt = cntNodes ( head )
        if cnt != m and m < cnt :
            skip = cnt - m
            prev = None
            curr = head
            while skip :
                prev = curr
                curr = curr . next
                skip -= 1
            prev . next = None
            tempHead = head
            head = curr
            while curr . next :
                curr = curr . next
            curr . next = tempHead
    printList ( head )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 263
---> probID: geeksforgeeks_4939_A
---> inputs:

---> outputs:
3


def get_max_substrings ( s , k ) :
    max_substr , n = 0 , len ( s )
    for c in range ( 26 ) :
        ch = chr ( ord ( 'a' ) + c )
        curr = 0
        for i in range ( 0 , n - k ) :
            if s [ i ] != ch : continue
            cnt = 0
            while i < n and s [ i ] == ch and cnt != k :
                i += 1
                cnt += 1
            i -= 1
            if cnt == k :
                curr += 1
        max_substr = max ( max_substr , curr )
    return max_substr


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 264
---> probID: geeksforgeeks_626_A
---> inputs:

---> outputs:
0
2
6


def pyGFG ( arr , n , l , r , q ) :
    if ( r - l + 1 ) % 2 == 0 :
        print ( '0' )
    else :
        if l % 2 == 0 :
            print ( prefeven [ r ] ^ prefeven [ l - 1 ] )
        else :
            print ( prefodd [ r ] ^ prefodd [ l - 1 ] )
    def wrapper ( arr , n , l , r , q ) :
        prefodd = [ ]
        prefeven = [ ]
        for i in range ( 1 , n + 1 ) :
            if ( i ) % 2 == 0 :
                prefeven . append ( arr [ i - 1 ] ^ prefeven [ i - 1 ] )
                prefodd . append ( prefodd [ i - 1 ] )
            else :
                prefeven . append ( prefeven [ i - 1 ] )
                prefodd . append ( prefodd [ i - 1 ] ^ arr [ i - 1 ] )
        i = 0
        while i != q :
            ansQueries ( prefeven , prefodd , l [ i ] , r [ i ] )
            i += 1
    return wrapper


---> console_out:
 
DIDN'T MATCH!! :(
 15%|█▌        | 264/1746 [00:06<00:35, 41.59it/s]

-------------------------------------


---> lineNum: 265
---> probID: codeforces_624_B
---> inputs:
3
2 5 5
---> outputs:
11

def main ( ) :
    import sys
    n = len ( sys . argv )
    ans = [ ]
    for i in range ( n ) :
        ans . append ( sys . argv [ i ] )
    ans . sort ( )
    count = ans [ - 1 ]
    for i in range ( n - 2 , - 1 , - 1 ) :
        if ans [ i ] < ans [ i + 1 ] :
            count += ans [ i ]
        else :
            while ans [ i ] >= ans [ i + 1 ] :
                ans [ i ] -= 1
            if ans [ i ] > 0 :
                count += ans [ i ]
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576707091_6316/main.py", line 17
    
                                 ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 266
---> probID: codeforces_1440_B
---> inputs:
6
2 4
0 24 34 58 62 64 69 78
2 2
27 61 81 91
4 3
2 4 16 18 21 27 36 53 82 91 92 95
3 4
3 11 12 22 33 35 38 67 69 71 94 99
2 1
11 41
3 3
1 1 1 1 1 1 1 1 1
---> outputs:
165
108
145
234
11
3

def main ( ) :
    import sys
    import getopt
    global parser
    parser = optparse . OptionParser ( usage = "%progSPACETOKEN[options]SPACETOKEN<file>" )
    parser . add_option ( "--fast" , action = "store_true" , dest = "fast" , default = False , help = "SkipSPACETOKENtestsSPACETOKENthatSPACETOKENareSPACETOKENnotSPACETOKENrunSPACETOKENinSPACETOKENaSPACETOKENfastSPACETOKENmode" )
    parser . add_option ( "--skip" , action = "store_true" , dest = "skip" , default = False , help = "SkipSPACETOKENtestsSPACETOKENthatSPACETOKENareSPACETOKENnotSPACETOKENrunSPACETOKENinSPACETOKENaSPACETOKENfastSPACETOKENmode" )
    parser . add_option ( "--skip-random" , action = "store_true" , dest = "skip_random" , default = False , help = "SkipSPACETOKENtestsSPACETOKENthatSPACETOKENareSPACETOKENnotSPACETOKENrunSPACETOKENinSPACETOKENaSPACETOKENfastSPACETOKENmode" )
    parser . add_option ( "--skip-long" , action = "store_true" , dest = "skip_long" , default = False , help = "SkipSPACETOKENtestsSPACETOKENthatSPACETOKENareSPACETOKENnotSPACETOKENrunSPACETOKENinSPACETOKENaSPACETOKENfastSPACETOKENmode" )
    parser . add_option ( "--skip-double" , action = "store_true" , dest = "skip_double" , default = False , help = "SkipSPACETOKENtestsSPACETOKENthatSPACETOKENareSPACETOKENnotSPACETOKENrunSPACETOKENinSPACETOKENaSPACETOKENfastSPACETOKENmode" )
    parser . add_option ( "--skip-string" , action = "store_true" , dest = "skip_string" , default = False , help = "SkipSPACETOKENtestsSPACETOKENthatSPACETOKENareSPACETOKENnotSPACETOKENrunSPACETOKENinSPACETOKENaSPACETOKENfastSPACETOKENmode" )
    parser . add_option ( "--skip-long" , action = "store_true" , dest = "skip_long" , default = False , help = "SkipSPACETOKENtestsSPACETOKENthatSPACETOKENareSPACETOKENnotSPACETOKENrunSPACETOKENinSPACETOKENaSPACETOKENfastSPACETOKENmode" )
    parser . add_option ( "--skip-double" , action = "store_true" , dest = "skip_double" , default = False , help = "SkipSPACETOKENtestsSPACETOKENthatSPACETOKENareSPACETOKENnotSPACETOKENrunSPACETOKENinSPACETOKENaSPACETOKENfastSPACETOKENmode" )
    options , args = parser . parse_args ( )
    if len ( args ) != 0 :
        parser . print_help (

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 267
---> probID: aizu_p02435_A
---> inputs:
3 9
0 0 1
0 0 2
0 0 3
0 2 4
0 2 5
1 0
1 2
2 0
1 0
---> outputs:
3
5
2

def main ( ) :
    import sys
    n , q = sys . argv [ 1 : ]
    Stack = { }
    s = [ ]
    for i in range ( n ) :
        L = deque ( )
        Stack [ i ] = L
    for i in range ( q ) :
        cmd = sys . argv [ 2 ]
        t = sys . argv [ 3 ]
        if cmd == 0 :
            Stack [ t ] . append ( sys . argv [ 4 ] )
        elif cmd == 1 and Stack [ t ] . size != 0 :
            s . append ( Stack [ t ] . pop ( ) + '\n' )
        elif cmd == 2 and Stack [ t ] . size != 0 :
            Stack [ t ] . pop ( )
    sys . stdout . write ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 268
---> probID: geeksforgeeks_289_A
---> inputs:

---> outputs:
0 4 8 12 

def GFG ( arr , n ) :
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )
    def remove_min ( arr , n ) :
        i , min_val = arr [ 0 ] , arr [ 1 ]
        for i in range ( n ) :
            min_val = min ( min_val , arr [ i ] )
        for i in range ( n ) :
            arr [ i ] = arr [ i ] - min_val
    def removeFromMax ( arr , n ) :
        i , maxVal = arr [ 0 ] , arr [ 1 ]
        for i in range ( n ) :
            maxVal = max ( maxVal , arr [ i ] )
        for i in range ( n ) :
            arr [ i ] = maxVal - arr [ i ]
    def modifyArray ( arr , n , k ) :
        if k % 2 == 0 :
            remove_min ( arr , n )
        else :
            removeFromMax ( arr , n )
    def printArray ( arr , n ) :
        arr = arr [ : n ]
        n = len ( arr )
        k = 2
        modifyArray ( arr , n , k )
    return arr


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 269
---> probID: geeksforgeeks_824_A
---> inputs:

---> outputs:
3.333 -3.000


def GFG ( v ) :
    ans = [ ]
    n = len ( v )
    signed_area = 0
    for i in range ( n ) :
        x0 , y0 = v [ i ]
        x1 , y1 = v [ ( i + 1 ) % n ]
        A = ( x0 * y1 ) - ( x1 * y0 )
        signed_area += A
        ans . append ( ( x0 + x1 ) * A )
        ans . append ( ( y0 + y1 ) * A )
    signed_area *= 0.5
    ans = ( ans ) / ( 6 * signed_area )
    ans = ( ans ) / ( 6 * signed_area )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 15%|█▌        | 269/1746 [00:06<00:35, 41.50it/s]

-------------------------------------


---> lineNum: 270
---> probID: codeforces_1531_A
---> inputs:
7
red
violet
unlock
red
orange
lock
indigo
---> outputs:
orange

def pytest_unconfigure ( config ) :
    color = 'blue'
    locked = False
    config . pluginmanager . register ( Config ( ) , 'config' )
    def cleanup ( ) :
        for line in config . pluginmanager . getPlugins ( Plugin ) :
            next = line . split ( ':' )
            if 'lock' in next [ 0 ] . lower ( ) :
                locked = True
                continue
            if 'unlock' in next [ 0 ] . lower ( ) :
                locked = False
                continue
            if locked :
                continue
            color = next [ 0 ]
        config . _pluginmanager . unregister ( Config ( ) , 'config' )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 271
---> probID: geeksforgeeks_3397_A
---> inputs:

---> outputs:
14


def pythagorean_min_operations ( ar , k ) :
    ar . sort ( )
    ops_needed = 0
    for i in range ( k ) :
        ops_needed += ar [ k - 1 ] - ar [ i ]
    ans = ops_needed
    for i in range ( k , len ( ar ) ) :
        ops_needed = ops_needed - ( ar [ i - 1 ] - ar [ i - k ] )
        ops_needed += ( k - 1 ) * ( ar [ i ] - ar [ i - 1 ] )
        ans = min ( ans , ops_needed )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 272
---> probID: geeksforgeeks_4092_A
---> inputs:

---> outputs:
 Special Character 


def test_GFG ( input_char ) :
    if ( input_char >= 65 and input_char <= 90 ) :
        print ( " Alphabet " )
    elif input_char >= 97 and input_char <= 122 :
        print ( " Digit " )
    else :
        print ( " Special Character " )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 273
---> probID: codeforces_1020_B
---> inputs:
3
2 3 2
---> outputs:
2 2 3

def test_practice2 ( ) :
    x = Symbol ( 'x' )
    n = Symbol ( 'n' , integer = True )
    x = Symbol ( 'x' , integer = True , positive = True )
    y = Symbol ( 'y' , integer = True , positive = True )
    for i in range ( n ) :
        x = x + i
        y = y + i
    for i in range ( n ) :
        d = { i + 1 : 1 }
        flag = 0
        j = i
        while flag == 0 :
            if not d . has_key ( x [ j ] ) :
                d [ x [ j ] ] = 1
            else :
                flag = 1
                print ( x [ j ] , end = ' ' )
            j = x [ j ]
            j -= 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576707282_4493/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 274
---> probID: codeforces_102_A
---> inputs:
3 3
1 2 3
1 2
2 3
3 1
---> outputs:
6

def import ( ) :
    import sys
    import pickle
    import os
    import random
    n = len ( sys . argv )
    m = len ( sys . argv )
    p = [ ]
    tab = [ set ( ) for i in range ( n ) ]
    ans = 3000003
    for i in range ( m ) :
        a = sys . argv [ i ] - 1
        b = sys . argv [ i + 1 ] - 1
        for x in tab [ a ] :
            if tab [ b ] . count ( x ) :
                ans = min ( p [ a ] + p [ b ] + p [ x ] , ans )
        tab [ a ] . add ( b )
        tab [ b ] . add ( a )
    if ans == 3000003 :
        print ( - 1 )
    else :
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 16%|█▌        | 274/1746 [00:06<00:35, 41.72it/s]

-------------------------------------


---> lineNum: 275
---> probID: codeforces_67_B
---> inputs:
5 2
1 2 1 0 0
---> outputs:
4 1 5 2 3

def pycf67B ( ) :
    import sys
    import pickle
    import os
    import pickle
    import pickle . dump
    class CF67B ( object ) :
        def __init__ ( self , f , * args , ** kwargs ) :
            super ( CF67B , self ) . __init__ ( f , * args , ** kwargs )
        def main ( self , * args , ** kwargs ) :
            o = pickle . load ( open ( self . f , 'rb' ) )
            o . main ( )
            o . flush ( )
        def __repr__ ( self ) :
            return "<CF67B object %s>" % self . f . __class__ . __name__
    n = len ( pickle . load ( open ( self . f , 'rb' ) ) )
    k = len ( pickle . load ( open ( self . f , 'rb' ) ) )
    bb = [ ]
    for i in range ( n ) :
        bb . append ( pickle . load ( open ( self . f , 'rb' ) ) )
    aa = [ ]
    m = 0
    for a in range ( n - 1 , - 1 , - 1 ) :
        j = 0
        while bb [ a ] > 0 :
            if aa [ j ] >= a + k :
                bb [ a ] -= 1
            j += 1
        for j_ in range ( m + 1 , j , - 1 ) :
            aa . append ( aa [ j_ - 1 ] )
        aa . append ( a )
    for i in range ( n ) :
        print ( aa [ i ] + 1 + " " )
    print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 276
---> probID: codeforces_237_B
---> inputs:
3
3 2 1
4 3 5
6 1
2
---> outputs:
['2\n1 1 2 2\n2 1 3 1', '5\n1 1 2 2 \n1 2 3 1 \n1 3 3 1 \n2 1 2 2 \n2 2 3 1 \n']

def test_b147 ( ) :
    x = Symbol ( 'x' )
    n = Symbol ( 'n' )
    c = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ]
    table = [ [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] , [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] ]
    d = { }
    for i in range ( n ) :
        c [ i ] = x
    d [ 'x' ] = x
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , c [ i - 1 ] + 1 ) :
            cell = x [ i ]
            d [ cell ] = ( i , j )
            table [ i - 1 ] [ j - 1 ] = cell
    cnt = 0
    m = 0
    s = [ ]
    for i in range ( n ) :
        for j in c [ i ] :
            cnt += 1
            if table [ i ] [ j ] == cnt :
                continue
            s . append ( i + 1 )
            s . append ( j + 1 )
            point = d [ cnt ]
            s . append ( point [ 0 ] )
            s . append ( point [ 1 ] )
            tmp = table [ i ] [ j ]
            table [ i ] [ j ] = table [ point [ 0 ] - 1 ] [ point [ 1 ] - 1 ]
            table [ point [ 0 ] - 1 ] [ point [ 1 ] - 1 ] = tmp
            d [ tmp ] = point
            m += 1
    assert m == 0
    s = '' . join ( s )
    if m :
        assert s == ''


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576707357_9294/main.py", line 1
    def import ( arr , n , x , y ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 277
---> probID: geeksforgeeks_951_A
---> inputs:

---> outputs:
7


def import ( arr , n , x , y ) :
    """
 Import a solution to the given array of integers.
 """
    result = 0
    for i in range ( 0 , n - 1 ) :
        ct_x , ct_y = 0 , 0
        for j in range ( i , n - 1 ) :
            if arr [ j ] == x :
                ct_x += 1
            elif arr [ j ] == y :
                ct_y += 1
            if ct_x == ct_y :
                result += 1
    return ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 278
---> probID: codeforces_1633_B
---> inputs:
4
01
1010101010111
00110001000
1
---> outputs:
0
5
3
0

def test_251 ( ) :
    x = [ 0 ]
    t = range ( 3 )
    for i in t :
        a = x [ i ]
        if len ( a ) >= 3 :
            z , o = 0 , 0
            for c in a :
                if c == '1' :
                    o += 1
                else :
                    z += 1
            if z > o :
                assert o == 1
            elif o > z :
                assert z == 1
            else :
                assert z - 1 == 1
        else :
            assert 0
    x = [ 0 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 279
---> probID: codeforces_914_B
---> inputs:
3
4 5 7
---> outputs:
Conan

def coder ( ) :
    import sys
    import os
    import pickle
    import math
    import os . path
    import pickle
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists
    import pickle . lexists


---> console_out:
 
DIDN'T MATCH!! :(
 16%|█▌        | 279/1746 [00:06<00:35, 41.44it/s]

-------------------------------------


---> lineNum: 280
---> probID: geeksforgeeks_803_A
---> inputs:

---> outputs:
1 2 3 4 5 

def test_GFG ( ) :
    a = [ 1 , 2 , 3 , 4 , 5 ]
    i = 0
    for i in range ( 5 ) :
        assert a [ i ] == i


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 281
---> probID: geeksforgeeks_218_A
---> inputs:

---> outputs:
Total number of triplets found: 18


def GFG ( ) :
    target = 93
    arr = [ 1 , 31 , 3 , 1 , 93 , 3 , 31 , 1 , 93 ]
    length = len ( arr )
    totalCount = 0
    for i in range ( length - 2 ) :
        if target % arr [ i ] == 0 :
            for j in range ( i + 1 , length - 1 ) :
                if target % ( arr [ i ] * arr [ j ] ) == 0 :
                    toFind = target / ( arr [ i ] * arr [ j ] )
                    for k in range ( j + 1 , length ) :
                        if arr [ k ] == toFind :
                            totalCount += 1
    print ( "Total number of triplets found: " , totalCount )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 282
---> probID: codeforces_1396_A
---> inputs:
4
1 3 2 4
---> outputs:
['1 1 \n-1\n3 4\n4 2\n2 4\n-3 -6 -6', '1 1\n-1\n1 4\n0 -12 -8 -16\n2 4\n9 6 12\n']

def test_Multiples_Of_Length ( ) :
    class FastReader ( object ) :
        f = open ( '/tmp/foo.txt' , 'r' )
        tokens = [ ]
        def readline ( self ) :
            tokens . append ( self . f . readline ( ) )
        def next ( self ) :
            while not tokens or not tokens . pop ( ) :
                try :
                    tokens . pop ( )
                except IndexError :
                    tokens . append ( '' )
            return tokens
        def readline ( self ) :
            return ''
    t = FastReader ( )
    o = open ( '/tmp/foo.txt' , 'w' )
    n = t . readline ( )
    a = [ ]
    for i in range ( n ) :
        a . append ( t . readline ( ) )
    if n == 1 :
        o . write ( '1 1' )
        o . write ( - a [ 0 ] )
        o . write ( '1 1' )
        o . write ( '0' )
        o . write ( '1 1' )
        o . write ( '0' )
    else :
        o . write ( '1 1' )
        o . write ( - a [ 0 ] )
        o . write ( '1 %d' % n )
        a . append ( 0 )
        for i in range ( n ) :
            o . write ( '%d ' % ( - n * a [ i ] + ' ' ) )
        o . write ( '\n2 %d' % n )
        for i in range ( 1 , n ) :
            o . write ( ( n - 1 ) * a [ i ] + ' ' )
    o . flush ( )
    o . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 283
---> probID: geeksforgeeks_1001_A
---> inputs:

---> outputs:
3


def GFG ( arr , n ) :
    result = 0
    for i in range ( n ) :
        result = __gcd ( result , arr [ i ] )
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 284
---> probID: geeksforgeeks_1838_A
---> inputs:

---> outputs:
1
3


def test_GFG ( ) :
    N = 1000
    v = [ ]
    for i in range ( N ) :
        v . append ( [ ] )
    if n == 1 :
        return a
    for i in range ( 0 , n , 2 ) :
        v . append ( [ a [ i ] | a [ i + 1 ] ] )
    while len ( v [ - 1 ] ) > 1 :
        steps += 1
        for i in range ( 0 , len ( v [ - 1 ] ) , 2 ) :
            if steps % 2 == 1 :
                v [ - 1 ] . append ( v [ - 1 ] [ i ] | v [ - 1 ] [ i + 1 ] )
            else :
                v [ - 1 ] . append ( v [ - 1 ] [ i ] ^ v [ - 1 ] [ i + 1 ] )
    return v [ - 1 ] [ 0 ]


---> console_out:
 
DIDN'T MATCH!! :(
 16%|█▋        | 284/1746 [00:06<00:35, 41.53it/s]

-------------------------------------


---> lineNum: 285
---> probID: geeksforgeeks_4700_A
---> inputs:

---> outputs:
4
93
2626


def test_GFG ( ) :
    n = 2
    assert number_cake ( n ) == 2
    n = 8
    assert number_cake ( n ) == 25


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 286
---> probID: atcoder_ARC062_B
---> inputs:
2 2
---> outputs:
0


def main ( ) :
    import sys
    input = sys . stdin . read ( )
    result = 0
    p = 0
    g = 1
    for c in input :
        if c == 'g' :
            if p + 1 <= g :
                result += 1
                p += 1
            else :
                g += 1
        else :
            if p + 1 <= g :
                p += 1
            else :
                g += 1
                result -= 1
    print ( result )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576707598_3127/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 287
---> probID: geeksforgeeks_4386_A
---> inputs:

---> outputs:
***********
***** *****
****   ****
***     ***
**       **
*         *



def import ( ) :
    import sys
    class solution :
        pattern = 1
    i , j , k = 0 , 1 , 1 , N
    for i in range ( rows , 1 , - 1 ) :
        for j in range ( 1 , i + 1 ) :
            sys . stdout . write ( "*" )
        if i != rows :
            for k in range ( 1 , space + 1 ) :
                sys . stdout . write ( " " )
            space = space + 2
        for j in range ( i , - 1 , - 1 ) :
            if j != rows :
                sys . stdout . write ( "*" )
        sys . stdout . write ( "\n" )
    sys . stdout . write ( "\n" )


---> console_out:
 
MATCHED!! :D


-------------------------------------


---> lineNum: 288
---> probID: geeksforgeeks_5207_A
---> inputs:

---> outputs:
7
9


def test_GFG ( ) :
    """Test the maximum middle value of the degree of the graph."""
    ans = - 1
    low = ( n + 1 - k ) // 2
    high = ( n + 1 - k ) // 2 + k
    for i in range ( low , high + 1 ) :
        ans = max ( ans , key = itemgetter ( 1 ) )
    assert ans == - 1
    n , k = 5 , 2
    arr = [ 9 , 5 , 3 , 7 , 10 ]
    assert maximum_middle_value ( n , k , arr ) == - 1
    n , k = 9 , 3
    arr1 = [ 2 , 4 , 3 , 9 , 5 , 8 , 7 , 6 , 10 ]
    assert maximum_middle_value ( n , k , arr1 ) == - 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576707646_2622/main.py", line 1
    def import ( root_data ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 289
---> probID: leetcode_437_A
---> inputs:

---> outputs:
3

def import ( root_data ) :
    class TreeNode ( object ) :
        def __init__ ( self , val ) :
            self . val = val
            self . left = None
            self . right = None
        def get ( self , root , sum ) :
            result = 0
            cache = { }
            cache [ 0 ] = 1
            self . pathSumHelper ( root , sum , 0 )
            return result
        def set ( self , root , target , soFar ) :
            if root not in cache :
                cache [ root ] = 1
            complement = soFar + root . val - target
            if cache . has_key ( complement ) :
                result += cache [ complement ]
            cache [ soFar + root . val ] = cache . getOrDefault ( soFar + root . val , 0 ) + 1
            self . pathSumHelper ( root . left , target , soFar + root . val )
            self . pathSumHelper ( root . right , target , soFar + root . val )
            cache [ soFar + root . val ] = cache [ soFar + root . val ] - 1
    class Solution ( object ) :
        def __init__ ( self , root , soFar ) :
            self . root = root
            self . soFar = soFar
        def get ( self , root , sum ) :
            result = 0
            cache = { }
            cache [ 0 ] = 1
            self . pathSumHelper ( root . left , target , soFar + root . val )
            self . pathSumHelper ( root . right , target , soFar + root . val )
            cache [ soFar + root . val ] = cache [ soFar + root . val ] - 1
        def set ( self , root , soFar ) :
            cache [ soFar + root . val ] = cache [ soFar + root . val ] - 1
        def get ( self , root , sum ) :
            result = 0
            cache = { }
            cache [ 0 ] = 1
            self . pathSumHelper ( root . left , target , soFar + root . val )
            self . pathSumHelper ( root . right , target , soFar + root . val )
            cache [ soFar + root . val ] = cache [ soFar + root . val ] - 1
    return Solution ( )


---> console_out:
 
DIDN'T MATCH!! :(
 17%|█▋        | 289/1746 [00:07<00:35, 41.28it/s]

-------------------------------------


---> lineNum: 290
---> probID: geeksforgeeks_3650_A
---> inputs:

---> outputs:
5


def test_GFG ( ) :
    arr = [ 1 , 2 , 3 , 4 ]
    x = 5
    arr_size = len ( arr )
    getmax ( arr , arr_size , x )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 291
---> probID: aizu_p00137_A
---> inputs:
2
123
567
---> outputs:
Case 1:
151
228
519
2693
2522
3604
9888
7725
6756
6435
Case 2:
3214
3297
8702
7248
5335
4622
3628
1623
6341
2082

def main ( ) :
    import sys
    n = len ( sys . argv )
    for i in range ( 1 , n + 1 ) :
        print ( "Case %d:" % i )
        msm ( sys . argv [ 1 ] , 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 292
---> probID: aizu_p00753_A
---> inputs:
1
10
13
100
1000
10000
100000
0
---> outputs:
1
4
3
21
135
1033
8392

def main ( ) :
    import sys
    sosu = [ ]
    sosu . append ( True )
    sosu . append ( False )
    for i in range ( 2 , 123456 * 2 + 1 ) :
        if sosu [ i ] :
            for j in range ( 2 , i * j + 1 ) :
                sosu [ i * j ] = False
    while True :
        n = sys . stdin . readline ( )
        if n == '' :
            break
        count = 0
        for i in range ( n + 1 , n * 2 + 1 ) :
            if sosu [ i ] :
                count += 1
            else :
                continue
        sys . stdout . write ( count + '\n' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 293
---> probID: geeksforgeeks_722_A
---> inputs:

---> outputs:
28


def GFG ( arr , n ) :
    maxVal = 0
    for i in range ( n - 1 ) :
        for j in range ( i + 1 , n ) :
            maxVal = max ( maxVal , arr [ i ] | arr [ j ] )
    return maxVal


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 294
---> probID: leetcode_771_A
---> inputs:

---> outputs:
3

def test_numJewelsInStones ( ) :
    class Solution ( object ) :
        def __init__ ( self , J , S ) :
            self . J = J
            self . S = S
        def numJewelsInStones ( self ) :
            return self . J
        def isSightly ( self ) :
            return self . S
    sObj = Solution ( )
    J = 'aA'
    S = 'aAAbbbb'
    out = sObj . numJewelsInStones ( J , S )
    assert out == 0


---> console_out:
 
DIDN'T MATCH!! :(
 17%|█▋        | 294/1746 [00:07<00:35, 41.32it/s]

-------------------------------------


---> lineNum: 295
---> probID: geeksforgeeks_3572_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    MAX , n = 100 , 10
    store = [ 0 ] * MAX
    graph = np . zeros ( ( MAX , n ) )
    d = np . zeros ( ( MAX , n ) )
    def is_clique ( b ) :
        for i in range ( 1 , b + 1 ) :
            for j in range ( i + 1 , b + 1 ) :
                if graph [ store [ i ] ] [ store [ j ] ] == 0 :
                    return False
            return True
    def max_cliques ( i , l ) :
        max_ = 0
        for j in range ( i + 1 , n + 1 ) :
            store [ l ] = j
            if is_clique ( l + 1 ) :
                max_ = max ( max_ , l )
                max_ = max ( max_ , max_cliques ( j , l + 1 ) )
        return max_
    edges = [ [ 1 , 2 ] , [ 2 , 3 ] , [ 3 , 1 ] , [ 4 , 3 ] , [ 4 , 1 ] , [ 4 , 2 ] ]
    size = len ( edges )
    n = 4
    for i in range ( size ) :
        graph [ edges [ i ] [ 0 ] ] [ edges [ i ] [ 1 ] ] = 1
        graph [ edges [ i ] [ 1 ] ] [ edges [ i ] [ 0 ] ] = 1
        d [ edges [ i ] [ 0 ] ] += 1
        d [ edges [ i ] [ 1 ] ] += 1
    assert max_cliques ( 0 , 1 ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 296
---> probID: geeksforgeeks_1887_A
---> inputs:

---> outputs:
256


def GFG ( n ) :
    k = int ( math . log ( n , 2 ) / math . log ( 2 ) )
    return int ( math . pow ( 2 , k ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 297
---> probID: codeforces_342_B
---> inputs:
3 5 1 3
1 1 2
2 2 3
3 3 3
4 1 1
10 1 3
---> outputs:
XXRR

def xenia_and_spies ( ) :
    """
 Return a list of the Xenia and Spies of the given input.
 """
    input = open ( './junk/1692576707840_9863/input.txt' , 'r' ) . read ( ) . split ( )
    m = int ( input [ 1 ] )
    s = int ( input [ 2 ] )
    f = int ( input [ 3 ] )
    max_t = - 1
    d = { }
    while m > 0 :
        mth = input [ m ] . split ( )
        k = int ( mth [ 0 ] )
        d [ k ] = [ ]
        d [ k ] . append ( int ( mth [ 1 ] ) )
        d [ k ] . append ( int ( mth [ 2 ] ) )
        max_t = max ( max_t , k )
        m -= 1
    actions = [ ]
    def M ( s , f ) :
        d = ( s < f ) + 1
        cur = s
        a = - 1
        b = - 1
        for t in range ( 1 , max_t + 1 ) :
            if d . has_key ( t ) :
                a = d [ t ] [ 0 ]
                b = d [ t ] [ 1 ]
            if d . has_key ( t ) and ( ( cur >= a and cur <= b ) or ( cur + d >= a and cur + d <= b ) ) :
                actions . append ( 'X' )
            else :
                actions . append ( M ( s , f ) )
                cur += d
            if cur == f :
                break
        while cur != f :
            actions . append ( M ( cur , f ) )
            cur += d
        print ( actions )
    return actions


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 298
---> probID: geeksforgeeks_3524_A
---> inputs:

---> outputs:
3


def test_subset_pair_not_divisible_by_K ( ) :
    """Test if the number of subsets of a set is not divisible by K."""
    arr = [ 0 ] * K
    for i in range ( N ) :
        f = [ 0 ] * K
        for i in range ( K ) :
            f [ arr [ i ] % K ] += 1
        if K % 2 == 0 :
            f [ K / 2 ] = min ( f [ K / 2 ] , 1 )
        res = min ( f [ 0 ] , 1 )
        for i in range ( 1 , K / 2 + 1 ) :
            res += max ( f [ i ] , f [ K - i ] )
        return res


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576707889_9056/main.py", line 169
    import
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 299
---> probID: codeforces_373_B
---> inputs:
9 1 1
---> outputs:
9

def main ( a ) :
    import sys
    import getopt
    import time
    import random
    import string
    import random
    import struct
    import time
    import random
    import string
    import struct
    import random
    import struct
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import

---> console_out:
 
DIDN'T MATCH!! :(
 17%|█▋        | 299/1746 [00:07<00:35, 41.20it/s]

-------------------------------------


---> lineNum: 300
---> probID: geeksforgeeks_4862_A
---> inputs:

---> outputs:
1, -2.5


def GFG ( a , b , c ) :
    print ( 1 , c / ( a * 1.0 ) )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576707938_9638/main.py", line 16
    return memo [ pos ] [ fl ] [ pr ] = val
                                      ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 301
---> probID: geeksforgeeks_465_A
---> inputs:

---> outputs:
8


def GFG ( pos , fl , pr , bin ) :
    if pos == len ( bin ) :
        return 1
    if memo [ pos ] [ fl ] [ pr ] != - 1 :
        return memo [ pos ] [ fl ] [ pr ]
    val = 0
    if bin [ pos ] == '0' :
        val = val + dp ( pos + 1 , fl , 0 , bin )
    elif bin [ pos ] == '1' :
        val = val + dp ( pos + 1 , 1 , 0 , bin )
    if pr == 0 :
        if fl == 1 :
            val += dp ( pos + 1 , fl , 1 , bin )
        elif bin [ pos ] == '1' :
            val += dp ( pos + 1 , fl , 1 , bin )
    return memo [ pos ] [ fl ] [ pr ] = val
    def findIntegers ( num ) :
        bin = ""
        while num > 0 :
            if num % 2 == 1 :
                bin += "1"
            else :
                bin += "0"
            num /= 2
        bin = reverse ( bin )
        for i in range ( 32 ) :
            for j in range ( 2 ) :
                for l in range ( 2 ) :
                    memo [ i ] [ j ] [ l ] = - 1
        return dp ( 0 , 0 , 0 , bin )
    reverse ( input )
    a = input . split ( )
    l , r = len ( a ) - 1 , len ( a )
    for l in range ( r ) :
        temp = a [ l ]
        a [ l ] , a [ r ] = a [ r ] , temp
    return str ( a )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 302
---> probID: geeksforgeeks_3483_A
---> inputs:

---> outputs:
111


def GFG ( mat , n ) :
    N = 4
    MaximumDecimalValue = [ 1 ] * n
    if mat [ 0 ] [ 0 ] == 1 :
        dp = [ 1 ] * n
    for i in range ( 1 , n ) :
        if mat [ 0 ] [ i ] == 1 :
            dp [ 0 ] [ i ] = int ( dp [ 0 ] [ i - 1 ] + pow ( 2 , i ) )
        else :
            dp [ 0 ] [ i ] = dp [ 0 ] [ i - 1 ]
    for i in range ( 1 , n ) :
        if mat [ i ] [ 0 ] == 1 :
            dp [ i ] [ 0 ] = int ( dp [ i - 1 ] [ 0 ] + pow ( 2 , i ) )
        else :
            dp [ i ] [ 0 ] = dp [ i - 1 ] [ 0 ]
    for i in range ( 1 , n ) :
        for j in range ( 1 , n ) :
            if mat [ i ] [ j ] == 1 :
                dp [ i ] [ j ] = int ( max ( dp [ i ] [ j - 1 ] , dp [ i - 1 ] [ j ] ) + pow ( 2 , i + j ) )
            else :
                dp [ i ] [ j ] = max ( dp [ i ] [ j - 1 ] , dp [ i - 1 ] [ j ] )
    return dp [ n - 1 ] [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 303
---> probID: geeksforgeeks_3183_A
---> inputs:

---> outputs:
1, 89


def pyGFG ( n ) :
    """
 Create a hash of the given number of primes.
 """
    prev , curr = 0 , 1
    hash = [ prev , curr ]
    while curr < n :
        temp = curr + prev
        hash . append ( temp )
        prev , curr = curr , temp
    return hash


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 304
---> probID: geeksforgeeks_4540_A
---> inputs:

---> outputs:
3


def genmodular ( a , n ) :
    """Generate a modular graph of n modular symbols.

 Parameters
 -----
 a : array_like
 Input array.
 n : int
 Degree of the generated modular graph.

 Returns
 -----
 G : NetworkX graph
 A modular graph.

 Examples
 -----
 >>> from scipy.sparse import digraph
 >>> G=digraph([[1, 2, 3], [4, 5, 6]])
 >>> print(G.modular(2))
 [1, 2, 3, 4, 5, 6]

 """
    a = [ 1 , 2 , 3 ]
    n = len ( a )
    return _genmodular_graph ( a , n )


---> console_out:
 
DIDN'T MATCH!! :(
 17%|█▋        | 304/1746 [00:07<00:35, 41.02it/s]

-------------------------------------


---> lineNum: 305
---> probID: geeksforgeeks_3580_A
---> inputs:

---> outputs:
13


def max_length ( s , n ) :
    ans = int ( s )
    A = [ ]
    L = [ ]
    R = [ ]
    freq = [ 0 ] * ( n + 5 )
    for i in range ( 26 ) :
        count = 0
        for j in range ( n ) :
            if s [ j ] - 'a' == i :
                count += 1
            freq [ j ] = count
        for j in range ( 1 , n ) :
            L . append ( ( 2 * freq [ j - 1 ] ) - j )
            R . append ( ( 2 * freq [ j ] ) - j )
        max_len = int ( '' )
        min_val = int ( '' )
        for j in range ( len ( L ) ) :
            min_val = min ( min_val , L [ j ] )
            A . append ( min_val )
            l , r = 0 , j
            while l <= r :
                mid = ( l + r ) >> 1
                if A [ mid ] <= R [ j ] :
                    max_len = max ( max_len , j - mid + 1 )
                    r = mid - 1
                else :
                    l = mid + 1
        ans = max ( ans , max_len )
        A . reverse ( )
        R . reverse ( )
        L . reverse ( )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 306
---> probID: geeksforgeeks_3383_A
---> inputs:

---> outputs:
1 2
1 3
1 4


def test_GFG ( ) :
    class GFG ( object ) :
        def __init__ ( self , x , y ) :
            self . x = x
            self . y = y
        def __call__ ( self , * args , ** kwargs ) :
            return self . x , self . y
    N = 100005
    gr = Vector ( N )
    colour = [ ]
    edges = Vector ( )
    bip = False
    def add_edge ( x , y ) :
        gr [ x ] . append ( y )
        gr [ y ] . append ( x )
        edges . append ( ( x , y ) )
    def dfs ( x , col ) :
        colour . append ( col )
        for i in gr [ x ] :
            if colour [ i ] == - 1 :
                dfs ( i , col ^ 1 )
            elif colour [ i ] == col :
                bip = False
    def Directed_Graph ( n , m ) :
        for i in range ( N ) :
            colour . append ( - 1 )
        bip = True
        dfs ( 1 , 1 )
        if not bip :
            print ( - 1 )
            return
        for i in range ( m ) :
            if colour [ edges [ i ] [ 0 ] ] == 0 :
                del edges [ i ]
            print ( edges [ i ] [ 0 ] , edges [ i ] [ 1 ] )
    def test_directed ( ) :
        n , m = 4 , 3
        for i in range ( N ) :
            gr = Directed_Graph ( n , m )
        add_edge ( 1 , 2 )
        add_edge ( 1 , 3 )
        add_edge ( 1 , 4 )
        Directed_Graph ( n , m )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 307
---> probID: codeforces_1174_B
---> inputs:
3
4 1 7
---> outputs:
1 4 7

def test_ehab_odd_person ( ) :
    f = open ( 'ehabo.txt' , 'r' )
    n = int ( f . readline ( ) . strip ( ) )
    line1 = f . readline ( ) . strip ( ) . split ( )
    arr = [ int ( x ) for x in line1 ]
    odd , even = False , False
    ans = [ ]
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            even = True
        else :
            odd = True
        ans . append ( arr [ i ] )
    if odd and even :
        ans . sort ( )
    for i in range ( n ) :
        assert ans [ i ] == arr [ i ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 308
---> probID: codeforces_546_A
---> inputs:
3 17 4
---> outputs:
13

def main ( ) :
    import sys
    o , g , x = getopt . getopt ( sys . argv [ 1 : ] , 'g:x:' )
    n , borrow = 0 , 0
    o , g = getopt . getopt ( sys . argv [ 2 : ] , 'n:' )
    for i in range ( 1 , g + 1 ) :
        x = x + i * o
    borrow = x - n
    if borrow <= 0 :
        print ( 0 )
    else :
        print ( borrow )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 309
---> probID: geeksforgeeks_2171_A
---> inputs:

---> outputs:
28


def GFG ( k ) :
    if k <= 1 :
        return False
    for i in range ( 2 , k ) :
        if k % i == 0 :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(
 18%|█▊        | 309/1746 [00:07<00:35, 40.53it/s]

-------------------------------------


---> lineNum: 310
---> probID: codeforces_288_A
---> inputs:
7 4
---> outputs:
ababacd

def main ( ) :
    import sys
    import getopt
    global a , l , ans , map
    import string
    import re
    import random
    import time
    import sys
    import os
    import sys
    import string
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 311
---> probID: geeksforgeeks_3460_A
---> inputs:

---> outputs:
3


def GFG ( ) :
    maxn = 16
    dp , arr = precompute ( )
    dp = dp . copy ( )
    for i in range ( maxn ) :
        dp [ i ] = - 1
    dp [ 0 ] = 0
    for i in range ( 1 , maxn ) :
        for k in range ( 3 ) :
            j = arr [ k ]
            if i >= j and dp [ i - j ] != - 1 :
                dp [ i ] = max ( dp [ i ] , dp [ i - j ] + 1 )
    return dp


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 312
---> probID: geeksforgeeks_4481_A
---> inputs:

---> outputs:
Count of squares is 14


def GFG ( n ) :
    return ( n * ( n + 1 ) / 2 ) ** ( 2 * n + 1 ) / 3


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576708237_5750/main.py", line 18
    if d . has_key ( 0l ) :
                      ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 313
---> probID: atcoder_ABC105_D
---> inputs:
1 2
1
---> outputs:
0

def main ( ) :
    import sys
    n = int ( sys . argv [ 1 ] )
    m = int ( sys . argv [ 2 ] )
    a = [ ]
    for i in range ( 1 , n + 1 ) :
        a . append ( i )
    sum = [ ]
    for i in range ( 1 , n + 1 ) :
        sum . append ( a [ i ] + sum [ i - 1 ] )
    d = { }
    for i in range ( 1 , n + 1 ) :
        d [ sum [ i ] % m ] = 0
    for i in range ( 1 , n + 1 ) :
        x = d [ sum [ i ] % m ]
        d [ sum [ i ] % m ] += x + 1
    ans = 0
    if d . has_key ( 0l ) :
        ans = d [ 0l ]
    for i in d :
        if d [ i ] >= 2 :
            for j in d [ i ] :
                ans += j - 1
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 314
---> probID: geeksforgeeks_1959_A
---> inputs:

---> outputs:
2


def GFG ( arr , n , k ) :
    count_one = [ int ( x ) for x in arr ]
    sum = count_one [ 0 ]
    if n == 1 :
        if count_one [ 0 ] >= k :
            return 1
        else :
            return - 1
    ans = int ( '-1' )
    i = 1
    j = 0
    while i < n :
        if k == count_one [ j ] :
            ans = 1
            break
        elif k == count_one [ i ] :
            ans = 1
            break
        elif sum + count_one [ i ] < k :
            sum += count_one [ i ]
            i += 1
        elif sum + count_one [ i ] > k :
            ans = min ( ans , ( i - j ) + 1 )
            sum -= count_one [ j ]
            j += 1
        elif sum + count_one [ i ] == k :
            ans = min ( ans , ( i - j ) + 1 )
            sum += count_one [ i ]
            i += 1
    if ans != int ( '-1' ) :
        return ans
    else :
        return - 1


---> console_out:
 
DIDN'T MATCH!! :(
 18%|█▊        | 314/1746 [00:07<00:35, 40.73it/s]

-------------------------------------


---> lineNum: 315
---> probID: geeksforgeeks_2367_A
---> inputs:

---> outputs:
Loss = 474.725


def GFG ( SP , P ) :
    loss = 0
    loss = float ( 2 * P * P * SP ) / ( 100 * 100 - P * P )
    print ( 'Loss = %s' % str ( loss ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 316
---> probID: atcoder_ABC094_B
---> inputs:
5 3 3
1 2 4
---> outputs:
1

def main ( ) :
    import sys
    n , m , x = sys . argv [ 1 : ]
    a = [ 1 for i in range ( m ) ]
    ans1 , ans2 = 0 , 0
    for i in range ( x , 0 , - 1 ) :
        ans1 += a [ i ]
    for i in range ( x , n ) :
        ans2 += a [ i ]
    print ( min ( ans1 , ans2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 317
---> probID: codeforces_1138_A
---> inputs:
7
2 2 2 1 1 2 2
---> outputs:
4

def test_a1138_SushiForTwo ( ) :
    x = np . array ( [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 ] )
    n = len ( x )
    len , prev , one_seq , two_seq = 1 , 0 , 0 , 0 , 0
    while n :
        x = x [ n - 1 ]
        if x == 1 :
            if prev == 1 :
                one_seq += 1
            else :
                one_seq = 1
            prev = 1
        else :
            if prev == 2 :
                two_seq += 1
            else :
                two_seq = 1
            prev = 2
        if min ( one_seq , two_seq ) > len :
            len = min ( one_seq , two_seq )
    assert len * 2 == n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 318
---> probID: projecteuler_p092_A
---> inputs:

---> outputs:
8581146

def p092 ( ) :
    print ( [ ] )
    def run ( ) :
        LIMIT = library . pow ( 10 , 7 )
        count = 0
        for i in range ( 1 , LIMIT ) :
            if is_class_89 ( i ) :
                count += 1
        return str ( count )
    def is_class_89 ( x ) :
        while True :
            try :
                return False
            except :
                x = next_number ( x )
    sum = 0
    while x != 0 :
        sum += ( x % 10 ) ** ( x % 10 )
        x /= 10
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 319
---> probID: geeksforgeeks_2840_A
---> inputs:

---> outputs:
5040


def test_GFG ( ) :
    """Test the fact of the degree of a polynomial."""
    fact = 1
    for i in range ( 1 , n + 1 ) :
        fact *= i
    assert fact == 1


---> console_out:
 
DIDN'T MATCH!! :(
 18%|█▊        | 319/1746 [00:07<00:34, 41.21it/s]

-------------------------------------


---> lineNum: 320
---> probID: geeksforgeeks_4256_A
---> inputs:

---> outputs:
8 1 

def test_GFG ( ) :
    M = 4
    N = 5
    mp = { }
    for j in range ( N ) :
        mp [ mat [ 0 ] [ j ] ] = 1
    for i in range ( 1 , M ) :
        for j in range ( N ) :
            if mp [ mat [ i ] [ j ] ] != 1 and mp [ mat [ i ] [ j ] ] == i :
                mp [ mat [ i ] [ j ] ] = i + 1
                if i == M - 1 :
                    print ( mat [ i ] [ j ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 321
---> probID: codeforces_593_B
---> inputs:
4
1 2
1 2
1 0
0 1
0 2
---> outputs:
NO

def anon_and_lines ( ) :
    eps = 10e-9
    def func ( n , * args ) :
        start = float ( n )
        end = float ( n )
        first = [ ]
        second = [ ]
        for i in range ( n ) :
            st = np . array ( args [ i ] )
            a = np . array ( st )
            b = np . array ( st )
            y1 = a * ( start + eps ) + b
            y2 = a * ( end - eps ) + b
            first . append ( ( i + 1 , y1 , y2 ) )
            second . append ( ( i + 1 , y2 , y1 ) )
        first . sort ( )
        second . sort ( )
        for i in first :
            if first [ i ] [ 'id' ] != second [ i ] [ 'id' ] :
                print ( 'YES' )
                return
        print ( 'NO' )
    class Pair ( object ) :
        x1 , x2 = [ ] , [ ]
        id = [ ]
        def __init__ ( self , i , a , b ) :
            self . x1 = a
            self . x2 = b
            self . id = i
        def __lt__ ( self , other ) :
            return ( ( self . x1 , self . x2 ) < ( other . x1 , other . x2 ) )
        def __gt__ ( self , other ) :
            return ( ( self . x1 , self . x2 ) > ( other . x1 , other . x2 ) )
        def __eq__ ( self , other ) :
            return ( ( self . x1 , self . x2 ) == ( other . x1 , other . x2 ) )
        def __repr__ ( self ) :
            return '<%s %s %s>' % ( func ( self . x1 , self . x2 ) , func ( self . x1 , self . x2 ) , func ( self . x1 , self . x2 ) )
    return Pair


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 322
---> probID: codeforces_1153_A
---> inputs:
2 2
6 4
9 5
---> outputs:
1

def main ( ) :
    import sys
    import getopt
    global n , t , s , d
    n = int ( sys . argv [ 1 ] )
    t = int ( sys . argv [ 2 ] )
    s = [ ]
    d = [ ]
    for i in range ( n ) :
        s . append ( sys . argv [ 1 ] )
        d . append ( sys . argv [ 2 ] )
    sys . stdout . write ( solve ( s , d , t ) )
    sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 323
---> probID: geeksforgeeks_4085_A
---> inputs:

---> outputs:
335.0


def GFG ( a , d , n ) :
    sum = 0
    for i in range ( n ) :
        sum = sum + a
        a = a + d
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 324
---> probID: geeksforgeeks_5112_A
---> inputs:

---> outputs:
5 7 8


def GFG ( arr , n ) :
    small , large = + 2147483647 , + 2147483647
    i = 0
    for i in range ( n ) :
        if arr [ i ] <= small :
            small = arr [ i ]
        elif arr [ i ] <= large :
            large = arr [ i ]
        else :
            break
    if i == n :
        print ( "No such triplet found" )
        return
    for j in range ( 0 , i ) :
        if arr [ j ] < large :
            small = arr [ j ]
            break
    print ( small , large , arr [ i ] )
    return


---> console_out:
 
DIDN'T MATCH!! :(
 19%|█▊        | 324/1746 [00:07<00:34, 41.29it/s]

-------------------------------------


---> lineNum: 325
---> probID: geeksforgeeks_896_A
---> inputs:

---> outputs:
Numbers with 3 divisors :
4 9 25 49 

def test_GFG ( ) :
    prime = [ True for i in range ( n + 1 ) ]
    for p in range ( 2 , n + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , n + 1 , p ) :
                prime [ i ] = False
    print ( "Numbers with 3 divisors :" )
    for i in range ( 0 , n + 1 ) :
        if prime [ i ] :
            print ( i * i + " " )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 326
---> probID: geeksforgeeks_3039_A
---> inputs:

---> outputs:
10


def GFG ( N , K ) :
    count = 0
    rem = [ N / K ]
    for i in range ( 1 , K ) :
        rem . append ( ( N - i ) / K + 1 )
    if K % 2 == 0 :
        count += ( rem [ 0 ] * ( rem [ 0 ] - 1 ) ) / 2
        for i in range ( 1 , K / 2 ) :
            count += rem [ i ] * rem [ K - i ]
        count += ( rem [ K / 2 ] * ( rem [ K / 2 ] - 1 ) ) / 2
    else :
        count += ( rem [ 0 ] * ( rem [ 0 ] - 1 ) ) / 2
        for i in range ( 1 , K / 2 ) :
            count += rem [ i ] * rem [ K - i ]
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 327
---> probID: aizu_p00615_A
---> inputs:
4 5
20 35 60 70
15 30 40 80 90
3 2
10 20 30
42 60
0 1
100
1 1
10
50
0 0
---> outputs:
20
18
100
40

def main ( ) :
    import sys
    n , m = sys . argv [ 1 : ]
    array = [ 0 ] * 20000
    n , m = sys . argv [ 2 : ]
    while not ( n == 0 and m == 0 ) :
        array = [ ]
        for i in range ( n + m ) :
            array . append ( sys . argv [ i ] )
        array . sort ( )
        interval = 0
        nt = 0
        for time in array :
            if time - nt > interval :
                interval = time - nt
            nt = time
        print ( interval )
        n , m = sys . argv [ 3 : ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 328
---> probID: codeforces_1201_B
---> inputs:
4
1 1 2 2
---> outputs:
YES

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'qv' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """Usage: %s [-v|-q|-v] [-v|-q]""" % sys . argv [ 0 ] )
        sys . exit ( 2 )
    for o , a in opts :
        if o == '-v' :
            print ( "Verbose" )
        elif o == '-q' :
            print ( "Question" )
        elif o == '-v' :
            print ( "Version" )
        elif o == '-q' :
            print ( "Version without question" )
        elif o == '-v' :
            print ( "Verbose" )
        elif o == '-q' :
            print ( "Question without answer" )
        elif o == '-v' :
            print ( "Version without answer" )
        elif o == '-q' :
            print ( "Question with answer" )
        elif o == '-v' :
            print ( "Version with answer" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 329
---> probID: geeksforgeeks_4598_A
---> inputs:

---> outputs:
9th Fibonacci Number = 34


def GFG ( n ) :
    PHI = 1.6180339
    f = [ 0 , 1 , 1 , 2 , 3 , 5 ]
    fib = 5
    if n < 6 :
        return f [ n ]
    t = 5
    fn = 5
    while t < n :
        fn = int ( round ( fn * PHI ) )
        t += 1
    return fn


---> console_out:
 
DIDN'T MATCH!! :(
 19%|█▉        | 329/1746 [00:07<00:34, 41.61it/s]

-------------------------------------


---> lineNum: 330
---> probID: geeksforgeeks_1427_A
---> inputs:

---> outputs:
8


def GFG ( n , k ) :
    return ( 2 ** k )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 331
---> probID: geeksforgeeks_727_A
---> inputs:

---> outputs:
18 18 18 
27 27 27 
36 36 36 


def test_GFG ( ) :
    """Test the sum of the squares of the elements of the matrix."""
    n = 5
    if k > n :
        return
    stripSum = [ [ 0 ] * n for k in range ( n ) ]
    for j in range ( n ) :
        sum = 0
        for i in range ( k ) :
            sum += mat [ i ] [ j ]
        stripSum [ 0 ] [ j ] = sum
        for i in range ( 1 , n - k + 1 ) :
            sum += ( mat [ i + k - 1 ] [ j ] - mat [ i - 1 ] [ j ] )
            stripSum [ i ] [ j ] = sum
    for i in range ( n - k + 1 ) :
        sum = 0
        for j in range ( k ) :
            sum += stripSum [ i ] [ j ]
        print ( sum , end = ' ' )
        for j in range ( 1 , n - k + 1 ) :
            sum += ( stripSum [ i ] [ j + k - 1 ] - stripSum [ i ] [ j - 1 ] )
            print ( sum , end = ' ' )
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576708689_5858/main.py", line 8
    
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 332
---> probID: codeforces_30_A
---> inputs:
2 18 2
---> outputs:
3

def test_A30 ( ) :
    A = symbols ( 'A' , integer = True , positive = True )
    B = symbols ( 'B' , integer = True , positive = True )
    N = symbols ( 'N' , integer = True , positive = True )
    bigA = symbols ( 'bigA' , integer = True , positive = True )
    bigB = symbols ( 'bigB' , integer = True , positive = True )
    for x in [ - 1000 , 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 , - 1000 ,

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 333
---> probID: geeksforgeeks_3279_A
---> inputs:

---> outputs:
150


def test_GFG ( ) :
    ans = 1
    for i in range ( 1 , r + 1 , 1 ) :
        ans *= ( n - r + i )
        ans /= i
    assert ans == 1
    total_ways = ( ncr ( M , X ) * ncr ( W , Y ) )
    assert total_ways == ( ncr ( M , X ) * ncr ( W , Y ) )
    X , Y , M , W = MV . setup ( 'X,Y,M,W' )
    assert total_ways == ( ncr ( X , Y ) * ncr ( W , X ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 334
---> probID: geeksforgeeks_361_A
---> inputs:

---> outputs:
2


def GFG ( n ) :
    count = 0
    if n != 0 and ( n & ( n - 1 ) ) == 0 :
        return n
    while n != 0 :
        n >>= 1
        count += 1
    return 1 << count


---> console_out:
 
DIDN'T MATCH!! :(
 19%|█▉        | 334/1746 [00:08<00:34, 41.36it/s]  File "./junk/1692576708765_8357/main.py", line 1
    def pythontools . choose ( n , k ) :
                    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 335
---> probID: atcoder_AGC017_A
---> inputs:
50 0
72 87 15 1 78 11 80 46 35 87 67 17 83 69 2 54 88 12 60 41 96 83 49 22 99 81 84 83 28 82 58 79 63 88 42 39 49 78 4 38 71 89 15 17 20 82 68 9 53 42
---> outputs:
562949953421312

def pythontools . choose ( n , k ) :
    """
 Return a number of primes in a given number of integers.

 >>> from sympy.utilities.randtest import pythontools
 >>> n = 3
 >>> p = pythontools.choose(n, 2)
 >>> print(p)
 3
 >>> print(n)
 3
 >>> print(p)
 3
 >>> print(n)
 3
 >>> print(p)
 3
 >>> print(n)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(n)
 3
 >>> print(p)
 3
 >>> print(n)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(n)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 >>> print(p)
 3
 """
    n = int ( n )
    P = int ( p )
    Even , Odd = 0 , 0
    for i in range ( N ) :
        A =

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 336
---> probID: geeksforgeeks_1582_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    a , m = symbols ( 'a m' , integer = True , positive = True )
    for x in [ 1 , m ] :
        if ( a ** x ) % m == 1 :
            assert x == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 337
---> probID: geeksforgeeks_2184_A
---> inputs:

---> outputs:
834


def GFG ( x ) :
    sum = 0
    while x != 0 :
        sum += x % 10
        x = x / 10
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 338
---> probID: geeksforgeeks_916_A
---> inputs:

---> outputs:
a^b is greater
Both are equal


def test_GFG ( ) :
    x = Symbol ( 'x' )
    y = Symbol ( 'y' )
    if y . is_integer :
        assert ask ( Q . is_greater ( x , y ) , Q . is_greater ( x , y ) ) is True
    elif y . is_integer :
        assert ask ( Q . is_greater ( x , y ) , Q . is_greater ( x , y ) ) is True
    else :
        assert ask ( Q . is_greater ( x , y ) , Q . is_greater ( x , y ) ) is False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 339
---> probID: geeksforgeeks_4217_A
---> inputs:

---> outputs:
2


def get_GFG ( str1 , str2 , n ) :
    l , r = 0 , 0
    ans = 2
    for i in range ( n ) :
        if str1 [ i ] != str2 [ i ] :
            l = i
            break
    for i in range ( n - 1 , - 1 , - 1 ) :
        if str1 [ i ] != str2 [ i ] :
            r = i
            break
    if r < l :
        return 26 * ( n + 1 )
    elif l == r :
        return ans
    else :
        for i in range ( l + 1 , r + 1 ) :
            if str1 [ i ] != str2 [ i - 1 ] :
                ans -= 1
                break
        for i in range ( l + 1 , r + 1 ) :
            if str1 [ i - 1 ] != str2 [ i ] :
                ans -= 1
                break
        return ans


---> console_out:
 
DIDN'T MATCH!! :(
 19%|█▉        | 339/1746 [00:08<00:33, 41.51it/s]

-------------------------------------


---> lineNum: 340
---> probID: codeforces_1366_B
---> inputs:
3
6 4 3
1 6
2 3
5 5
4 1 2
2 4
1 2
3 3 2
2 3
1 2
---> outputs:
6
2
3

def test_solution10 ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' , integer = True , positive = True )
    str = [ ]
    for z in range ( t ) :
        n , x , m = symbols ( 'n x m' , integer = True , positive = True )
        arr = [ ]
        for i in range ( m ) :
            arr . append ( [ n , x , i ] )
        si = x
        ei = x
        for i in range ( m ) :
            l = arr [ i ] [ 0 ]
            r = arr [ i ] [ 1 ]
            if ( l <= si and si <= r ) or ( l <= ei and ei <= r ) :
                si = min ( l , si )
                ei = max ( r , ei )
        str . append ( ei - si + 1 )
        str . append ( '' )
    assert str


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 341
---> probID: geeksforgeeks_4524_A
---> inputs:

---> outputs:
Yes


def GFG ( n , l , r ) :
    num , prev , curr = n >> ( l - 1 ) , n >> 1
    for i in range ( 1 , ( r - l ) + 1 ) :
        curr = num & 1
        if curr == prev :
            return False
        prev , num = curr , num >> 1
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 342
---> probID: codeforces_302_A
---> inputs:
2 3
1 -1
1 1
1 2
2 2
---> outputs:
0
1
0

def eugene ( ) :
    import sys
    n = len ( sys . argv )
    k = len ( sys . argv )
    arr = [ ]
    for i in range ( n ) :
        arr . append ( sys . argv [ i ] )
    res = ''
    o , e = 0 , 0
    for i in range ( n ) :
        if arr [ i ] == 1 :
            o += 1
        else :
            e += 1
    for i in range ( k ) :
        l , r = divmod ( arr [ i ] , n )
        if ( r - l + 1 ) % 2 == 1 :
            res += '0\n'
        else :
            if ( r - l + 1 ) / 2 <= o and ( r - l + 1 ) / 2 <= e :
                res += '1\n'
            else :
                res += '0\n'
    print ( res )
    sys . exit ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 343
---> probID: geeksforgeeks_1792_A
---> inputs:

---> outputs:
255


def test_GFG ( ) :
    assert nth_group ( n ) == n * ( 2 ** int ( math . pow ( n , 2 ) ) + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 344
---> probID: codeforces_711_B
---> inputs:
3
4 0 2
3 5 7
8 1 6
---> outputs:
9

def ex711B ( ) :
    """
 Ex711B
 """
    x = input ( )
    n = len ( x )
    magic_square = [ [ 0 ] * n for i in range ( n ) ]
    row , column = - 1 , - 1
    for i in range ( n ) :
        for j in range ( n ) :
            magic_square [ i ] [ j ] = x [ i ] [ j ]
            if magic_square [ i ] [ j ] == 0 :
                row = i
                column = j
    if n == 1 :
        print ( 1 )
        return
    sum = 0
    for i in range ( n ) :
        if row != 0 :
            sum += magic_square [ 0 ] [ i ]
        else :
            sum += magic_square [ 1 ] [ i ]
    answer = sum
    for i in range ( n ) :
        answer -= magic_square [ row ] [ i ]
    magic_square [ row ] [ column ] = answer
    m = 0
    current_sumi , current_sumj = 0 , 0
    for i in range ( n ) :
        for j in range ( n ) :
            current_sumi += magic_square [ i ] [ j ]
            current_sumj += magic_square [ j ] [ i ]
        if current_sumi != sum or current_sumj != sum :
            m += 1
        current_sumi = 0
        current_sumj = 0
    for i in range ( n ) :
        current_sumi += magic_square [ i ] [ i ]
        current_sumj += magic_square [ n - i - 1 ] [ i ]
    if current_sumi != sum or current_sumj != sum :
        m += 1
    if m == 0 and answer > 0 :
        print ( answer )
    else :
        print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 20%|█▉        | 344/1746 [00:08<00:33, 41.39it/s]

-------------------------------------


---> lineNum: 345
---> probID: codeforces_732_B
---> inputs:
3 5
2 0 1
---> outputs:
4
2 3 2

def test_issue_7171 ( ) :
    x = Symbol ( 'x' )
    n = Symbol ( 'n' , integer = True )
    k = Symbol ( 'k' , integer = True )
    arr = [ ]
    sum1 , sum2 = 0 , 0
    for i in range ( n ) :
        arr . append ( i )
        sum1 = sum1 + arr [ i ]
    for i in range ( 1 , n ) :
        csum = 0
        csum = arr [ i ] + arr [ i - 1 ]
        if k > csum :
            arr [ i ] = arr [ i ] + k - csum
    for i in range ( n ) :
        sum2 = sum2 + arr [ i ]
    assert sum2 - sum1 == 0
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )
    print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 346
---> probID: geeksforgeeks_4878_A
---> inputs:

---> outputs:
4


def get_maximum_occurred_element ( L , R , n ) :
    arr = [ 0 ] * ( n + 1 )
    maxi = - 1
    for i in range ( n ) :
        arr [ L [ i ] ] += 1
        arr [ R [ i ] + 1 ] -= 1
        if R [ i ] > maxi : maxi = R [ i ]
    msum = arr [ 0 ]
    ind = 0
    for i in range ( 1 , maxi + 1 ) :
        arr [ i ] += arr [ i - 1 ]
        if msum < arr [ i ] :
            msum = arr [ i ]
            ind = i
    return ind


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 347
---> probID: codeforces_344_A
---> inputs:
6
10
10
10
01
10
10
---> outputs:
3

def test_Rough_02 ( ) :
    x = Symbol ( 'x' )
    n = Symbol ( 'n' , integer = True )
    arr = [ x ** i for i in range ( n ) ]
    count = 1
    for i in range ( n - 1 ) :
        if arr [ i ] != arr [ i + 1 ] :
            count += 1
    assert count == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 348
---> probID: codeforces_190_A
---> inputs:
1 2
---> outputs:
2 2

def main ( ) :
    import sys
    import getopt
    global n , m
    if n == 0 :
        if m != 0 :
            print ( "Impossible" )
        else :
            print ( 0 , 0 , 0 )
        return
    if m <= n :
        if m == 0 :
            m = 1
        print ( n , ( m + n - 1 ) , end = ' ' )
        return
    print ( m , ( m + n - 1 ) , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 349
---> probID: geeksforgeeks_3442_A
---> inputs:

---> outputs:
0.6879


def test_GFG ( ) :
    func = lambda x : ( 1 / ( 1 + x ** 2 ) )
    calculate = lambda lower_limit , upper_limit , interval_limit : ( lower_limit , upper_limit )
    value = 0
    interval_size = ( upper_limit - lower_limit ) / interval_limit
    sum = func ( lower_limit ) + func ( upper_limit )
    for i in range ( 1 , interval_limit ) :
        if i % 3 == 0 :
            sum = sum + 2 * func ( lower_limit + i * interval_size )
        else :
            sum = sum + 3 * func ( lower_limit + i * interval_size )
    assert ( 3 * interval_size / 8 ) == sum


---> console_out:
 
DIDN'T MATCH!! :(
 20%|█▉        | 349/1746 [00:08<00:33, 41.39it/s]

-------------------------------------


---> lineNum: 350
---> probID: atcoder_ABC044_A
---> inputs:
5
3
10000
9000
---> outputs:
48000

def main ( ) :
    import sys
    import getopt
    global n , k , x , y
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , "k:x:y:" )
    except getopt . error as msg :
        sys . stdout . write ( msg + "\n" )
        sys . exit ( 2 )
    if args == [ ] :
        n = 1
    elif args == [ "-k" , "--k" ] :
        k = int ( args [ 0 ] )
    else :
        n = 1
    if len ( args ) != 2 :
        sys . exit ( 2 )
    for o , a in opts :
        if o in ( "-k" , "--k" ) :
            k = int ( a )
        elif o in ( "-x" , "--x" ) :
            x = int ( a )
        elif o in ( "-y" , "--y" ) :
            y = int ( a )
        else :
            sys . exit ( 2 )
    if n == 1 :
        x = x * k
        y = y * ( n - k )
    else :
        x = x * n
        y = y * ( n - k )
    sys . stdout . write ( "%d\n" % ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 351
---> probID: aizu_p00073_A
---> inputs:
6
4
7
9
0
0
---> outputs:
96.000000
184.192455

def main ( ) :
    import sys
    while 1 :
        x , h = sys . stdin . readline ( ) . split ( )
        if x == '' and h == '' :
            break
        c = math . sqrt ( h ** 2 + ( x / 2 ) ** 2 )
        ans = x ** 2 + x * c / 2 ** 4
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 352
---> probID: codeforces_919_B
---> inputs:
1
---> outputs:
19

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , '' )
    except getopt . error as msg :
        sys . stdout . write ( msg + "\n" )
        sys . exit ( 2 )
    if args == [ ] :
        sys . stdout . write ( "No input files.\n" )
        sys . exit ( 1 )
    k , i , mo = 1 , 19
    k = int ( args [ 0 ] )
    while i != k :
        mo += 1
        if 10 == count ( mo ) :
            i += 1
    sys . stdout . write ( mo + "\n" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 353
---> probID: geeksforgeeks_5176_A
---> inputs:

---> outputs:
5 7 11 13
11 13 17 19


def pygmm_prime ( n ) :
    import numpy as np
    import random
    import math
    import sys
    MAX = 1000000
    prime = [ True for i in range ( MAX ) ]
    sieve = [ True for i in range ( 2 , MAX * p ) ]
    for p in range ( 2 , MAX * p + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , MAX , p ) :
                prime [ i ] = False
    print_prime_quad ( n )
    for i in range ( n - 7 ) :
        if prime [ i ] and prime [ i + 2 ] and prime [ i + 6 ] and prime [ i + 8 ] :
            print ( i , ( i + 2 ) , ( i + 6 ) , ( i + 8 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 354
---> probID: geeksforgeeks_1284_A
---> inputs:

---> outputs:
3


def GFG ( x , y , n , m ) :
    dp = [ [ 0 ] * MAX ]
    for i in range ( 0 , m ) :
        for j in range ( 0 , n ) :
            dp [ i ] [ j ] = 0
    for i in range ( 1 , m ) :
        for j in range ( 1 , n ) :
            if x [ j - 1 ] == y [ i - 1 ] :
                dp [ i ] [ j ] = 1 + dp [ i - 1 ] [ j - 1 ]
            else :
                dp [ i ] [ j ] = dp [ i ] [ j - 1 ]
    ans = 0
    for i in range ( 1 , m ) :
        ans = max ( ans , dp [ i ] [ n ] )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 20%|██        | 354/1746 [00:08<00:33, 41.51it/s]

-------------------------------------


---> lineNum: 355
---> probID: geeksforgeeks_2092_A
---> inputs:

---> outputs:
23


def test_GFG ( ) :
    n , a , b = symbols ( 'n a b' , integer = True , positive = True )
    assert find_sum ( n , a , b ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 356
---> probID: codeforces_518_B
---> inputs:
AbC
DCbA
---> outputs:
3 0

def test_tanyaandpostcard ( ) :
    f = py . io . TextIO ( )
    s1 = f . reset ( )
    s2 = f . reset ( )
    a = [ ]
    b = [ ]
    i , y , w = 0 , 0 , 0
    ch = None
    for i in range ( len ( s2 ) ) :
        a . append ( s2 [ i ] )
    for i in range ( len ( s1 ) ) :
        ch = s1 [ i ]
        if a [ ch ] >= 1 :
            a [ ch ] -= 1
            b . append ( 1 )
            y += 1
    for i in range ( len ( s1 ) ) :
        ch = s1 [ i ]
        if b [ i ] == 0 :
            if ch <= 90 :
                ch = chr ( int ( ch + 32 ) )
            else :
                ch = chr ( int ( ch - 32 ) )
            if a [ ch ] >= 1 :
                a [ ch ] -= 1
                w += 1
    assert y == w


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 357
---> probID: geeksforgeeks_507_A
---> inputs:

---> outputs:
2
23


def GFG ( ) :
    MAX = 1000
    sequence = [ 0 ] * MAX
    vanEckSequence ( )
    for i in range ( MAX - 1 ) :
        sequence [ i ] = 0
    for i in range ( MAX - 1 ) :
        for j in range ( i - 1 , - 1 , - 1 ) :
            if sequence [ j ] == sequence [ i ] :
                sequence [ i + 1 ] = i - j
                break
    getNthTerm ( n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 358
---> probID: geeksforgeeks_498_A
---> inputs:

---> outputs:
1
5


def GFG ( ) :
    MAX = 100000
    sequence = [ 0 ] * ( MAX + 1 )
    vanEckSequence ( )
    for i in range ( MAX ) :
        sequence [ i ] = 0
    for i in range ( MAX ) :
        for j in range ( i - 1 , - 1 , - 1 ) :
            if sequence [ j ] == sequence [ i ] :
                sequence [ i + 1 ] = i - j
                break
    def getCount ( n ) :
        count = 1
        i = n - 1
        while sequence [ i + 1 ] != 0 :
            count += 1
            i = i - sequence [ i + 1 ]
        return count
    def main ( ) :
        vanEckSequence ( )
        n = 5
        print ( getCount ( n ) )
        n = 11
        print ( getCount ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 359
---> probID: geeksforgeeks_497_A
---> inputs:

---> outputs:
1
5


def GFG ( ) :
    MAX = 100000
    sequence = [ 0 ] * ( MAX + 1 )
    def vanEckSequence ( ) :
        for i in range ( MAX ) :
            sequence [ i ] = 0
        for i in range ( MAX ) :
            for j in range ( i - 1 , - 1 , - 1 ) :
                if sequence [ j ] == sequence [ i ] :
                    sequence [ i + 1 ] = i - j
                    break
    def getCount ( n ) :
        nthTerm = sequence [ n - 1 ]
        count = 0
        for i in range ( n ) :
            if sequence [ i ] == nthTerm :
                count += 1
        return count
    def main ( ) :
        vanEckSequence ( )
        n = 5
        print ( getCount ( n ) )
        n = 11
        print ( getCount ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 21%|██        | 359/1746 [00:08<00:33, 41.60it/s]

-------------------------------------


---> lineNum: 360
---> probID: geeksforgeeks_2382_A
---> inputs:

---> outputs:
10


def __gcd ( a , b ) :
    if a == 0 or b == 0 :
        return 0
    if a == b :
        return a
    if a > b :
        return __gcd ( a - b , b )
    return __gcd ( a , b - a )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 361
---> probID: codeforces_678_B
---> inputs:
2016
---> outputs:
2044

def main ( ) :
    import sys
    import time
    import calendar
    import doctest
    import os
    import re
    import urllib
    import urllib . parse
    import urllib . request
    import urllib . response
    import urllib . request
    import urllib . parse
    import urllib . response
    import urllib . request
    import urllib . parse
    import urllib . parse
    import urllib . request
    import urllib . response
    import urllib . parse
    import urllib . request
    import urllib . parse
    import urllib . response
    import urllib . parse
    import urllib . request
    import urllib . parse
    import urllib . request
    import urllib . parse
    import urllib . response
    import urllib . parse
    import urllib . request
    import urllib . parse
    import urllib . response
    import urllib . parse
    import urllib . request
    import urllib . parse
    import urllib . response
    import urllib . parse
    import urllib . request
    import urllib . parse
    import urllib . response
    import urllib . parse
    import urllib . request
    import urllib . response
    import urllib . parse
    import urllib . parse
    import urllib . request
    import urllib . parse
    import urllib . response
    import urllib . parse
    import urllib . request
    import urllib . response
    import urllib . parse
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . request
    import urllib . response
    import urllib . parse
    import urllib . error
    import urllib . error
    import urllib . response
    import urllib . parse
    import urllib . error
    import urllib . error
    import urllib . response
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . response
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . response
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . response
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error
    import urllib . error


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576709415_8048/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 362
---> probID: aizu_p00103_A
---> inputs:
2
HIT
OUT
HOMERUN
HIT
HIT
HOMERUN
HIT
OUT
HIT
HIT
HIT
HIT
OUT
HIT
HIT
OUT
HIT
OUT
OUT
---> outputs:
7
0

def import ( ) :
    import sys
    import pickle
    import queue
    def read ( ) :
        cnt = 0
        event = None
        events = queue . Queue ( )
        do ( )
        if event == 'OUT' :
            cnt += 1
        else :
            events . put ( event )
    def solve ( ) :
        ans , s = 0 , 0
        while not events . empty ( ) :
            e = events . get ( )
            s = ( s << 1 ) + 1
            if e == 'HIT' :
                if ( s & 8 ) > 1 :
                    ans += 1
                s = ( s & 7 )
            else :
                for i in range ( 1 , 16 ) :
                    if ( s & i ) >= 1 :
                        ans += 1
                s = 0
        return ans
    def solve ( ) :
        ans , s = 0 , 0
        while n ( ) and read ( ) :
            print ( solve ( ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 363
---> probID: geeksforgeeks_3210_A
---> inputs:

---> outputs:
120


def GFG ( a , b ) :
    if a == 0 or b == 0 :
        return 0
    if a == b :
        return a
    if a > b :
        return __gcd ( a - b , b )
    return __gcd ( a , b - a )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 364
---> probID: geeksforgeeks_3655_A
---> inputs:

---> outputs:
x2 = 0.4 y2 = 0.2 z2 = 4.0 

def pythontools ( arr ) :
    import math
    import doctest
    class solution :
        def foot ( self , a , b , c , d , x1 , y1 , z1 ) :
            k = ( - a * x1 - b * y1 - c * z1 - d ) / float ( a ** 2 + b ** 2 + c ** 2 )
            x2 = a * k + x1
            y2 = b * k + y1
            z2 = c * k + z1
            print ( "x2 = %s" % str ( x2 ) )
            print ( " y2 = %s" % str ( y2 ) )
            print ( " z2 = %s" % str ( z2 ) )
        def doit ( self , arr ) :
            a = 1
            b = - 2
            c = 0
            d = 0
            x1 = - 1
            y1 = 3
            z1 = 4
            foot ( a , b , c , d , x1 , y1 , z1 )
    

---> console_out:
 
DIDN'T MATCH!! :(
 21%|██        | 364/1746 [00:08<00:33, 41.34it/s]

-------------------------------------


---> lineNum: 365
---> probID: atcoder_ABC077_A
---> inputs:
pot
top
---> outputs:
YES

def main ( ) :
    import sys
    import getopt
    if len ( sys . argv ) == 2 :
        c1 = sys . argv [ 1 ]
        c2 = sys . argv [ 2 ]
        if c1 [ 0 ] == c2 [ - 1 ] and c2 [ 0 ] == c1 [ - 1 ] and c1 [ 1 ] == c2 [ 1 ] :
            print ( "YES" )
        else :
            print ( "NO" )
        sys . exit ( 1 )
    else :
        print ( "ERROR" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 366
---> probID: geeksforgeeks_1659_A
---> inputs:

---> outputs:
2


def get_minimum_ops ( ar ) :
    n = len ( ar )
    small = sorted ( ar )
    large = sorted ( ar )
    dp = [ [ abs ( ar [ 0 ] - j ) for j in range ( small , large + 1 ) ] for i in range ( 1 , n ) ]
    for i in range ( small , large + 1 ) :
        minimum = sys . maxint
        for j in range ( small , large + 1 ) :
            minimum = min ( minimum , dp [ i - 1 ] [ j ] )
            dp [ i ] [ j ] = minimum + abs ( ar [ i ] - j )
    ans = sys . maxint
    for j in range ( small , large + 1 ) :
        ans = min ( ans , dp [ n - 1 ] [ j ] )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 367
---> probID: geeksforgeeks_3686_A
---> inputs:

---> outputs:
27.969019925000005


def test_GFG ( ) :
    pi = 3.14159265
    assert ( a ** 2 * ( pi / 2 - 1 ) ) . ae ( pi / 2 - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 368
---> probID: geeksforgeeks_677_A
---> inputs:

---> outputs:
3
5


def pythree_remove_alternate ( n ) :
    class Circular ( object ) :
        def __init__ ( self , n ) :
            self . n = n
        def removeAlternate ( self ) :
            if n == 1 :
                return 1
            if n % 2 == 0 :
                return 2 * removeAlternate ( n / 2 ) - 1
            else :
                return 2 * removeAlternate ( ( ( n - 1 ) / 2 ) ) + 1
        def __repr__ ( self ) :
            return "%s" % self . n
    n = 5
    print ( "\n%s" % removeAlternate ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 369
---> probID: geeksforgeeks_635_A
---> inputs:

---> outputs:
Yes


def test_GFG ( ) :
    if n == 2 or m == 2 or n % m == 0 :
        assert ask ( Q . prime ( n ) , Q . prime ( m ) )
    else :
        assert ask ( Q . prime ( n ) , Q . prime ( m ) )


---> console_out:
 
DIDN'T MATCH!! :(
 21%|██        | 369/1746 [00:08<00:33, 41.70it/s]

-------------------------------------


---> lineNum: 370
---> probID: codeforces_1710_A
---> inputs:
6
4 6 3
12 9 8
3 3 2
8 8
3 3 2
9 5
4 5 2
10 11
5 4 2
9 11
10 10 3
11 45 14
---> outputs:
Yes
No
Yes
Yes
No
No

def color_the_picture ( ) :
    f = open ( 'color_the_picture.txt' , 'r' )
    pr = open ( 'color_the_picture.txt' , 'w' )
    t = int ( f . readline ( ) )
    while t != 0 :
        solve ( f , pr )
        t -= 1
    pr . flush ( )
    pr . close ( )
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 371
---> probID: geeksforgeeks_2660_A
---> inputs:

---> outputs:
8


def GFG ( arr , n ) :
    positive , negative = 1 , 0
    for i in range ( n ) :
        if arr [ i ] > 0 :
            arr [ i ] = 1
        else :
            arr [ i ] = - 1
        if i > 0 :
            arr [ i ] *= arr [ i - 1 ]
        if arr [ i ] == 1 :
            positive += 1
        else :
            negative += 1
    return ( positive * negative )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 372
---> probID: geeksforgeeks_240_A
---> inputs:

---> outputs:
7


def GFG ( arr , n ) :
    positive , negative = 1 , 0
    for i in range ( n ) :
        if arr [ i ] > 0 :
            arr [ i ] = 1
        else :
            arr [ i ] = - 1
        if i > 0 :
            arr [ i ] *= arr [ i - 1 ]
        if arr [ i ] == 1 :
            positive += 1
        else :
            negative += 1
    return ( positive * negative )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 373
---> probID: codeforces_1606_B
---> inputs:
4
8 3
6 6
7 1
1 1
---> outputs:
4
3
6
0

def pycf3 ( ) :
    import sys
    import tokenize
    import doctest
    import tempfile
    import os
    import random
    import time
    import string
    import doctest
    import tempfile
    import random
    import time
    import string
    import tempfile
    import random
    import string
    import tempfile
    import random
    import time
    import string
    import random
    import string
    import tempfile
    import random
    import time
    import string
    import tempfile
    import random
    import string
    import string
    import tempfile
    import random
    import string
    import string
    import string
    import tempfile
    import random
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576709703_7721/main.py", line 2
    f = open ( ' / home / jdoe

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 374
---> probID: codeforces_340_A
---> inputs:
2 3 6 18
---> outputs:
3

def main ( ) :
    f = open ( ' / home / jdoe

---> console_out:
 
DIDN'T MATCH!! :(
 21%|██▏       | 374/1746 [00:09<00:33, 41.42it/s]

-------------------------------------


---> lineNum: 375
---> probID: geeksforgeeks_5206_A
---> inputs:

---> outputs:
2


def main ( arr , n ) :
    LIS = [ ]
    len = 0
    for i in range ( n ) :
        LIS . append ( 1 )
    for i in range ( 1 , n ) :
        for j in range ( i ) :
            if arr [ i ] > arr [ j ] and ( i - j ) <= ( arr [ i ] - arr [ j ] ) :
                LIS [ i ] = max ( LIS [ i ] , LIS [ j ] + 1 )
        len = max ( len , LIS [ i ] )
    return n - len


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 376
---> probID: geeksforgeeks_1441_A
---> inputs:

---> outputs:
9 7 6 8 8 8 5 


def test_GFG ( ) :
    max_upto = [ ]
    s = Stack ( )
    s . push ( 0 )
    for i in range ( 1 , n ) :
        while not s . empty ( ) and a [ s . pop ( ) ] < a [ i ] :
            max_upto . append ( i - 1 )
            s . pop ( )
        s . push ( i )
    while not s . empty ( ) :
        max_upto . append ( n - 1 )
        s . pop ( )
    j = 0
    for i in range ( 0 , n - k ) :
        while j < i or max_upto [ j ] < i + k - 1 :
            j += 1
        print ( a [ j ] , end = ' ' )
    print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 377
---> probID: projecteuler_p056_A
---> inputs:

---> outputs:
972

def p_p056 ( p ) :
    '''p


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 378
---> probID: geeksforgeeks_957_A
---> inputs:

---> outputs:
3
4
4
3


def countWindowDistinct ( win , k ) :
    """
 Return the number of distinct elements in a window.

 :param win: A list of integers.
 :param k: The number of elements in the window.
 :return: The number of distinct elements in the window.
 """
    dist_count = 0
    for i in range ( k ) :
        j = 0
        for j in range ( i ) :
            if win [ i ] == win [ j ] :
                break
            if j == i :
                dist_count += 1
    return dist_count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 379
---> probID: geeksforgeeks_2750_A
---> inputs:

---> outputs:
6


def GFG ( str ) :
    len ( str )
    count = 0
    for i in range ( len ( str ) ) :
        temp = str [ i ] - '0'
        if temp % 2 == 0 :
            count += ( i + 1 )
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 22%|██▏       | 379/1746 [00:09<00:33, 41.09it/s]  File "./junk/1692576709853_5340/main.py", line 12
    return dp [ index ] [ cnt ] = ans
                                ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 380
---> probID: geeksforgeeks_3926_A
---> inputs:

---> outputs:
12


def solution ( index , cnt , dp , n , m , k ) :
    if index == n :
        if cnt == k :
            return 1
        else :
            return 0
    if dp [ index ] [ cnt ] != - 1 :
        return dp [ index ] [ cnt ]
    ans = 0
    ans += count_ways ( index + 1 , cnt , dp , n , m , k )
    ans += ( m - 1 ) * count_ways ( index + 1 , cnt + 1 , dp , n , m , k )
    return dp [ index ] [ cnt ] = ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 381
---> probID: geeksforgeeks_2213_A
---> inputs:

---> outputs:
12 16 15 9 4 3 1 0 

def get_sym ( n ) :
    sum = 0
    for i in range ( 1 , math . sqrt ( n ) ) :
        if n % i == 0 :
            if n / i == i :
                sum = sum + i
            else :
                sum = sum + i
                sum = sum + ( n / i )
    return sum - n


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576709900_2336/main.py", line 8
    as = ma . array ( [ 1 , 2 , 3 ] )
    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 382
---> probID: codeforces_421_A
---> inputs:
4 2 3
1 2
2 3 4
---> outputs:
1 1 2 2

def test_pasha_and_hamsters ( ) :
    import numpy as np
    import numpy . ma as ma
    dims = np . array ( [ 1 , 2 , 3 ] )
    total = np . array ( [ 1 , 2 , 3 ] )
    at , pt = ma . histogram ( dims , bins = total )
    vals = np . zeros ( total )
    as = ma . array ( [ 1 , 2 , 3 ] )
    for i in range ( len ( as ) ) :
        x = np . array ( [ 1 , 2 , 3 ] )
        vals [ x - 1 , i ] = True
    s = ''
    for i in range ( total ) :
        s += ( vals [ i ] or '1' ) + ' '
    assert s == ''


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 383
---> probID: geeksforgeeks_4371_A
---> inputs:

---> outputs:
6 1 2 7 3 5 

def pythree_vector ( arr , n ) :
    for i in range ( n // 2 ) :
        swap ( arr , i , ( n + ~ i + 1 ) + ~ 1 + 1 )
    swap ( arr , i , j )
    temp = arr [ i ]
    arr [ i ] , arr [ j ] = arr [ j ] , temp
    return arr


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 384
---> probID: geeksforgeeks_4394_A
---> inputs:

---> outputs:
201.0


def GFG ( N ) :
    sum = 0
    a = 1
    cnt = 0
    flag = True
    sum += a
    while cnt < N :
        nextElement = 0
        if flag == True :
            nextElement = a * 2
            sum += nextElement
            flag = not flag
        else :
            nextElement = a * 3 / 2
            sum += nextElement
            flag = not flag
        a = nextElement
        cnt += 1
    print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(
 22%|██▏       | 384/1746 [00:09<00:32, 41.44it/s]

-------------------------------------


---> lineNum: 385
---> probID: aizu_p01855_A
---> inputs:
3
2 3
3 3
4 3
---> outputs:
1 1
1 0
1 1

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        sys . stdout . write ( msg + '\n' )
        sys . exit ( 1 )
    for o , a in opts :
        if o == '-d' :
            d = a
        elif o == '-u' :
            u = a
        elif o == '-e' :
            e = a
        else :
            a , b = ( o , a % 2 )
            print ( a , b )
    return d


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 386
---> probID: geeksforgeeks_468_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    from sympy . polys . distributedmodules import gf_degree
    sz = int ( 1e5 )
    is_prime = [ False ] * sz + [ False ] * sz
    sieve = gf_degree ( [ ] , 1 , ZZ )
    for i in range ( 2 , sz * sz + 1 ) :
        if is_prime [ i ] :
            for j in range ( i * i , sz , i ) :
                is_prime [ j ] = False
    min_difference = 0
    for i in range ( L , R ) :
        if is_prime [ i ] :
            fst = i
            break
    snd = 0
    for i in range ( fst + 1 , R ) :
        if is_prime [ i ] :
            snd = i
            break
    if not snd :
        return - 1
    diff = snd - fst
    left = snd + 1
    right = R
    for i in range ( left , right + 1 ) :
        if is_prime [ i ] :
            if i - snd <= diff :
                fst = snd
                snd = i
                diff = snd - fst
    return diff


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 387
---> probID: geeksforgeeks_1962_A
---> inputs:

---> outputs:
6


def GFG ( arr , n ) :
    start = 0
    pre_cnt = 0
    while start < n and arr [ start ] == 1 :
        pre_cnt += 1
        start += 1
    end = n - 1
    suff_cnt = 0
    while end >= 0 and arr [ end ] == 1 :
        suff_cnt += 1
        end -= 1
    if start > end :
        return n
    mid_cnt = 0
    result = 0
    for i in range ( start , end + 1 ) :
        if arr [ i ] == 1 :
            mid_cnt += 1
            result = max ( result , mid_cnt )
        else :
            mid_cnt = 0
    return max ( result , pre_cnt + suff_cnt )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 388
---> probID: aizu_p00502_A
---> inputs:
3 4
31
27
35
20 25 30
23 29 90
21 35 60
28 33 40
---> outputs:
80

def main ( ) :
    s = sys . stdin
    d = len ( s )
    n = len ( s )
    temp = [ ]
    a = [ ]
    b = [ ]
    c = [ ]
    for i in range ( d ) :
        temp . append ( s [ i ] )
    for i in range ( n ) :
        a . append ( s [ i ] )
        b . append ( s [ i ] )
        c . append ( s [ i ] )
    dp = [ ]
    for i in range ( d ) :
        for j in range ( n ) :
            dp . append ( - 1 )
    for i in range ( n ) :
        if a [ i ] <= temp [ 0 ] and b [ i ] >= temp [ 0 ] :
            dp . append ( 0 )
    for i in range ( 1 , d ) :
        for j in range ( n ) :
            if a [ j ] <= temp [ i ] and b [ j ] >= temp [ i ] :
                for k in range ( n ) :
                    if dp [ i - 1 ] [ k ] < 0 :
                        continue
                    dp [ i ] [ j ] = max ( dp [ i ] [ j ] , dp [ i - 1 ] [ k ] + abs ( c [ j ] - c [ k ] ) )
    ans = 0
    for i in range ( n ) :
        ans = max ( ans , dp [ d - 1 ] [ i ] )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576710074_3354/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 389
---> probID: codeforces_1155_A
---> inputs:
7
abacaba
---> outputs:
['YES\n2 5', 'YES\n2 3\n']

def import ( ) :
    import sys
    import os
    import getopt
    import imp
    import pdb
    import pdb
    import pdb . post_mortem
    import pdb . set_trace
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )
    import pdb . set_trace ( )


---> console_out:
 
DIDN'T MATCH!! :(
 22%|██▏       | 389/1746 [00:09<00:33, 40.67it/s]

-------------------------------------


---> lineNum: 390
---> probID: geeksforgeeks_4861_A
---> inputs:

---> outputs:
Square root of 9.2345 = 3.03883


def GFG ( s ) :
    pSq = None
    N = None
    for i in range ( int ( s ) ) :
        for j in range ( 1 , i ) :
            if j * j == i :
                pSq = i
                N = j
                break
        if pSq :
            break
    d = s - pSq
    P = d / ( 2.0 * N )
    A = N + P
    sqrt_of_s = A - ( ( P * P ) / ( 2.0 * A ) )
    return sqrt_of_s


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 391
---> probID: codeforces_583_B
---> inputs:
3
0 2 0
---> outputs:
1

def main ( ) :
    import sys
    for line in sys . stdin :
        n = len ( line )
        a = [ ]
        b = [ ]
        s = - 1
        for i in range ( n ) :
            a . append ( line [ i ] )
            b . append ( 0 )
        tem = 1
        q = 0
        while q != n :
            s += 1
            if tem == 1 :
                for i in range ( n ) :
                    if a [ i ] <= q and b [ i ] == 0 :
                        b . append ( 1 )
                        q += 1
                tem = 0
            else :
                for i in range ( n - 1 , - 1 , - 1 ) :
                    if a [ i ] <= q and b [ i ] == 0 :
                        b . append ( 1 )
                        q += 1
                tem = 1
        sys . stdout . write ( "%d\n" % s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 392
---> probID: aizu_p00775_A
---> inputs:
2 3
-2 -1 3
0 1 3
2 3 3
2 2
-2 0 4
0 2 3
2 6
-3 3 1
-2 3 2
-1 3 3
0 3 4
1 3 5
2 3 6
2 6
-3 3 1
-3 2 2
-3 1 3
-3 0 4
-3 -1 5
-3 -2 6
0 0
---> outputs:
0.0000
3.0000
2.2679
2.2679

def main ( ) :
    import sys
    while True :
        r = sys . stdin . readline ( )
        n = r . rstrip ( )
        if r == '' :
            break
        field = [ 0 ] * 40
        for i in range ( n ) :
            xl = r . rstrip ( )
            xr = r . rstrip ( )
            h = r . rstrip ( )
            for j in range ( xl + 20 , xr + 20 ) :
                field [ j ] = max ( field [ j ] , h )
        min_time = INF
        for i in range ( len ( field ) ) :
            min_time = min ( min_time , cross_time ( i - 20 , field [ i ] , r ) )
            min_time = min ( min_time , cross_time ( i + 1 - 20 , field [ i ] , r ) )
        print ( min_time )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 393
---> probID: codeforces_1358_B
---> inputs:
4
5
1 1 2 2 1
6
2 3 4 5 6 7
6
1 5 4 5 1 9
5
1 2 3 5 6
---> outputs:
6
1
6
4

def main ( ) :
    import sys
    t = sys . argv [ 1 ]
    for i in range ( t ) :
        n = len ( sys . argv )
        list = [ ]
        for j in range ( n ) :
            list . append ( sys . argv [ i ] )
        find ( list )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 394
---> probID: aizu_p00208_A
---> inputs:
15
100
1000000000
3
0
---> outputs:
19
155
9358757000
3

def main ( ) :
    import sys
    import getopt
    global num
    if not sys . argv [ 1 : ] :
        sys . exit ( __doc__ )
    if len ( sys . argv ) == 1 :
        num = sys . argv [ 1 ]
    if not sys . argv [ 2 : ] :
        sys . exit ( __doc__ )
    def read ( ) :
        if sys . argv [ 2 ] :
            num = sys . argv [ 2 ]
        if not sys . argv [ 3 ] :
            sys . exit ( __doc__ )
    def solve ( ) :
        table = [ 0 , 1 , 2 , 3 , 5 , 7 , 8 , 9 ]
        s = oct ( num )
        for i in range ( len ( s ) ) :
            num2 = int ( '' . join ( [ '%02x' % c for c in s [ i ] ] ) , 8 )
            print ( table [ num2 ] )
        print ( )
    def solve ( ) :
        for i in range ( len ( s ) ) :
            num2 = int ( '' . join ( [ '%02x' % c for c in s [ i ] ] ) , 8 )
            print ( table [ num2 ] )
    sys . exit ( solve ( ) )


---> console_out:
 
DIDN'T MATCH!! :(
 23%|██▎       | 394/1746 [00:09<00:33, 40.91it/s]

-------------------------------------


---> lineNum: 395
---> probID: geeksforgeeks_1464_A
---> inputs:

---> outputs:
Maximum sum = 25


def GFG ( arr , n ) :
    if n == 1 :
        return arr [ 0 ]
    dec = [ ]
    inc = [ ]
    dec = inc + [ arr [ 0 ] ]
    flag = 0
    for i in range ( 1 , n ) :
        for j in range ( i ) :
            if arr [ j ] > arr [ i ] :
                dec [ i ] = max ( dec [ i ] , inc [ j ] + arr [ i ] )
                flag = 1
            elif arr [ j ] < arr [ i ] and flag == 1 :
                inc [ i ] = max ( inc [ i ] , dec [ j ] + arr [ i ] )
    result = int ( '' )
    for i in range ( n ) :
        if result < inc [ i ] :
            result = inc [ i ]
        if result < dec [ i ] :
            result = dec [ i ]
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 396
---> probID: geeksforgeeks_1884_A
---> inputs:

---> outputs:
0 1 0 1 4 4 

def generate_arr ( arr , n ) :
    if n <= 1 :
        return arr
    prev = arr [ 0 ]
    arr [ 0 ] = arr [ 0 ] & arr [ 1 ]
    for i in range ( 1 , n - 1 ) :
        curr = arr [ i ]
        arr [ i ] = prev & arr [ i + 1 ]
        prev = curr
    arr [ n - 1 ] = prev & arr [ n - 1 ]
    return arr


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 397
---> probID: geeksforgeeks_3872_A
---> inputs:

---> outputs:
1 6 6 2 3 

def pyGFG ( arr , n ) :
    if n <= 1 :
        return arr
    prev = arr [ 0 ]
    arr [ 0 ] = arr [ 0 ] ^ arr [ 1 ]
    for i in range ( 1 , n - 1 ) :
        curr = arr [ i ]
        arr [ i ] = prev ^ arr [ i + 1 ]
        prev = curr
    arr [ n - 1 ] = prev ^ arr [ n - 1 ]
    return arr


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 398
---> probID: geeksforgeeks_3879_A
---> inputs:

---> outputs:
5 6 8 10 11 

def test_GFG ( ) :
    if n <= 1 :
        return
    prev = arr [ 0 ]
    arr [ 0 ] = arr [ 0 ] + arr [ 1 ]
    for i in range ( 1 , n - 1 ) :
        curr = arr [ i ]
        arr [ i ] = prev + arr [ i + 1 ]
        prev = curr
    arr [ n - 1 ] = prev + arr [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576710314_4956/main.py", line 32
    assert
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 399
---> probID: geeksforgeeks_4047_A
---> inputs:

---> outputs:
6


def test_GFG ( ) :
    """Test the number of triplets in the GFG."""
    A , B , C = symbols ( 'A,B,C' )
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert count_triplets ( A , B , C ) == 3
    assert

---> console_out:
 
DIDN'T MATCH!! :(
 23%|██▎       | 399/1746 [00:09<00:32, 41.17it/s]

-------------------------------------


---> lineNum: 400
---> probID: geeksforgeeks_1376_A
---> inputs:

---> outputs:
11 97
10007 99991


def test_GFG ( ) :
    MAX = 100000
    prime = [ True ] * MAX + 1
    SieveOfEratosthenes ( )
    for i in range ( MAX + 1 ) :
        prime [ i ] = True
    for p in range ( 2 , MAX * p + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * p , MAX , p ) :
                prime [ i ] = False
    smallest_prime = int ( math . pow ( 10 , d - 1 ) )
    r = int ( math . pow ( 10 , d ) - 1 )
    for i in range ( l , r ) :
        if prime [ i ] :
            return i
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 401
---> probID: aizu_p00534_A
---> inputs:
3 5
10
25
15
50
30
15
40
30
---> outputs:
1125

def main ( ) :
    import sys
    import getopt
    import os
    import string
    import time
    class Main ( object ) :
        def __init__ ( self , f ) :
            self . f = f
            self . n = int ( self . f . readline ( ) )
            self . m = int ( self . f . readline ( ) )
            self . tir = [ ]
            self . tir . append ( INF )
            self . tir . append ( 0 )
            self . d = [ ]
            self . c = [ ]
            for line in open ( self . f , 'r' ) :
                line = line . strip ( )
                n = int ( line )
                m = int ( line )
                tir . append ( min ( tir [ i + 1 ] [ j ] , tir [ i + 1 ] [ j + 1 ] + d [ j ] * c [ i ] ) )
            self . tir . append ( tir [ 0 ] [ 0 ] )
            self . tir . append ( tir [ 0 ] [ 1 ] )
            d = [ ]
            c = [ ]
            for i in range ( n ) :
                d . append ( int ( line [ 0 ] ) )
            for i in range ( m ) :
                c . append ( int ( line [ 1 ] ) )
            for i in range ( m - 1 , - 1 , - 1 ) :
                for j in range ( n - 1 , - 1 , - 1 ) :
                    tir [ i ] [ j ] = min ( tir [ i + 1 ] [ j ] , tir [ i + 1 ] [ j + 1 ] + d [ j ] * c [ i ] )
            self . tir . append ( tir [ 0 ] [ 0 ] )
            self . tir . append ( tir [ 0 ] [ 1 ] )
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 402
---> probID: codeforces_873_A
---> inputs:
4 2 2
3 6 7 10
---> outputs:
13

def main ( ) :
    input = sys . stdin
    n = int ( input [ 1 ] )
    k = int ( input [ 2 ] )
    x = input [ 3 ]
    arr = [ ]
    for i in range ( n ) :
        arr . append ( input [ i ] )
    for i in range ( len ( arr ) - k , len ( arr ) ) :
        arr [ i ] = x
    sum = 0
    for i in range ( len ( arr ) ) :
        sum += arr [ i ]
    print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 403
---> probID: codeforces_883_A
---> inputs:
1 1 3 4
7
---> outputs:
1

def test_automatic_door ( ) :
    """
 Test the automatic door function.
 """
    n = Symbol ( 'n' )
    m = Symbol ( 'm' )
    a = Symbol ( 'a' )
    d = Symbol ( 'd' )
    arr = [ Symbol ( 'arr' ) for i in range ( m ) ]
    count = 0
    time = 0
    x = d / a + 1
    y = d - ( x - 1 ) * a
    if y < 0 :
        y = 0
    last = 0
    for i in range ( m ) :
        b = max ( [ ( arr [ i ] - 1 ) / a , n ] )
        c = b - time
        k = c / x
        count += k
        time += k * x
        if k != 0 :
            while i < m and arr [ i ] <= time * a + y :
                i += 1
        if i >= m :
            break
        count += 1
        last = arr [ i ] + d
        if time < n :
            last = min ( last , ( time + 1 ) * a + d )
        while i < m and arr [ i ] <= last :
            i += 1
        time = max ( time , min ( n , last / a ) )
    if time < n :
        count += ( n - time + x - 1 ) / x
    assert count == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 404
---> probID: codeforces_598_A
---> inputs:
2
4
1000000000
---> outputs:
-4
499999998352516354

def test_PA_tricky_sum ( ) :
    data = np . array ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] )
    data = data . T
    t = np . array ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] )
    sum , valu , result = pa . tricky_sum ( data , t )
    for p in range ( t ) :
        n1 = np . array ( [ 1 , 2 , 3 ] )
        sum = n1 * ( n1 + 1 ) / 2
        for i in range ( 1 , n1 + 1 , 2 ) :
            valu += i
        result = sum - ( valu * 2 )
        data . T . append ( result )
        data . T . append ( valu )
        valu = 0
    data . T . append ( sum )
    data . T . append ( valu )


---> console_out:
 
DIDN'T MATCH!! :(
 23%|██▎       | 404/1746 [00:09<00:32, 41.13it/s]

-------------------------------------


---> lineNum: 405
---> probID: codeforces_276_B
---> inputs:
aba
---> outputs:
First

def main ( ) :
    import sys
    s = sys . stdin . read ( )
    ar = [ ]
    for ch in s :
        ar . append ( ch - 97 )
    cntod = 0
    for i in range ( 26 ) :
        if ( ar [ i ] % 2 ) != 0 :
            cntod += 1
    if cntod == 0 :
        print ( "First" )
    else :
        if cntod % 2 == 0 :
            print ( "Second" )
        else :
            print ( "First" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 406
---> probID: geeksforgeeks_2292_A
---> inputs:

---> outputs:
Sum odd = 20
Sum even = 15


def pythontag_reverse ( n ) :
    rev = 0
    while n != 0 :
        rev = ( rev * 10 ) + ( n % 10 )
        n //= 10
    return rev


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576710508_7857/main.py", line 4
    

SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 407
---> probID: geeksforgeeks_823_A
---> inputs:

---> outputs:
224


def test_GFG ( ) :
    disp ( row_no = 0 , block = 1 )
    row = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 38 , 39 , 40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 54 , 55 , 56 , 57 , 58 , 59 , 60 , 60 , 61 , 62 , 63 , 64 , 65 , 66 , 67 , 68 , 69 , 70 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 81 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 , 98 , 99 , 99 , 100 , 101 , 102 , 103 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 111 , 112 , 115 , 116 , 117 , 118 , 119 , 120 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 , 115 , 101 , 110 , 112 ,

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576710534_9712/main.py", line 2
    bin = [ '000' , '001' , '010' , '011' , '100' , '101' , "110',"111' ]
                                                                   ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 408
---> probID: geeksforgeeks_5049_A
---> inputs:

---> outputs:
2


def GFG ( s ) :
    bin = [ '000' , '001' , '010' , '011' , '100' , '101' , "110',"111' ]
    binary = ''
    for c in s :
        binary += bin [ c - '0' ]
    binary = binary [ : : - 1 ]
    count , prev = 1 , - 1 , i , 0
    for i in range ( len ( binary ) - 1 , - 1 , - 1 ) :
        if binary [ i ] == '1' :
            count = max ( count , j - prev )
            prev = j
    return count , prev


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 409
---> probID: geeksforgeeks_2776_A
---> inputs:

---> outputs:
1101


def GFG ( s , n , k ) :
    return ( s [ 0 ] , s [ 1 ] , s [ 2 ] )


---> console_out:
 
DIDN'T MATCH!! :(
 23%|██▎       | 409/1746 [00:09<00:32, 41.23it/s]

-------------------------------------


---> lineNum: 410
---> probID: geeksforgeeks_3448_A
---> inputs:

---> outputs:
15.0631


def GFG ( arr , freq , n ) :
    sum , frequency_sum = 0 , 0
    for i in range ( n ) :
        sum = sum + float ( freq [ i ] ) / arr [ i ]
        frequency_sum = frequency_sum + freq [ i ]
    return ( frequency_sum / sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 411
---> probID: geeksforgeeks_3645_A
---> inputs:

---> outputs:
210.444


def test_GFG ( ) :
    if a < 0 and n < 0 :
        return - 1
    A = ( a ** 2 * n ) / float ( 4 * tan ( ( 180 / n ) * pi / 180 ) )
    assert A == 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576710629_2343/main.py", line 1
    def class Solution ( a , b ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 412
---> probID: geeksforgeeks_3834_A
---> inputs:

---> outputs:
3


def class Solution ( a , b ) :
    if a == 0 : return b
    if b == 0 : return a
    if a == b : return a
    if a > b : return __gcd ( a - b , b )
    return __gcd ( a , b - a )
def lcm ( a , b ) : return ( a / __gcd ( a , b ) ** 2 )
def getMinValue ( c ) :
    ans = sys . maxint
    for i in range ( 1 , math . sqrt ( c ) ) :
        if c % i == 0 and lcm ( i , c / i ) == c : ans = min ( ans , max ( i , c / i ) )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576710653_6903/main.py", line 2
    with open

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 413
---> probID: aizu_p01085_A
---> inputs:
5 2 4
100
90
82
70
65
5 2 4
100
90
80
75
65
3 1 2
5000
4000
3000
4 2 3
10000
10000
8000
8000
4 2 3
10000
10000
10000
8000
5 2 3
100
80
68
60
45
0 0 0
---> outputs:
3
4
2
2
3
2

def main ( ) :
    with open

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 414
---> probID: codeforces_789_B
---> inputs:
3 2 30 4
6 14 25 48
---> outputs:
3

def main ( ) :
    import sys
    start = long ( sys . argv [ 1 ] )
    ratio = long ( sys . argv [ 2 ] )
    max = long ( sys . argv [ 3 ] )
    m = len ( sys . argv )
    bad = [ ]
    for i in range ( m ) :
        bad . append ( long ( sys . argv [ i ] ) )
    if abs ( start ) > max :
        print ( '0' )
        return
    if start == 0 :
        if bad :
            print ( '0' )
            return
        else :
            print ( 'inf' )
            return
    if ratio == 1 :
        if bad :
            print ( '0' )
            return
        else :
            print ( 'inf' )
            return
    if ratio == - 1 :
        if bad and bad [ start ] * ( - 1 ) :
            print ( '0' )
            return
        else :
            print ( 'inf' )
            return
    if ratio == 0 :
        if bad :
            print ( 'inf' )
            return
        elif bad :
            print ( '0' )
            return
        else :
            print ( '1' )
            return
    cnt = 0
    while abs ( start ) <= max :
        if bad :
            cnt += 1
        start *= ratio
    print ( cnt )


---> console_out:
 
DIDN'T MATCH!! :(
 24%|██▎       | 414/1746 [00:10<00:32, 41.21it/s]

-------------------------------------


---> lineNum: 415
---> probID: codeforces_1656_A
---> inputs:
3
3
5 2 7
5
1 4 2 2 3
1
2
---> outputs:
2 3
1 2
1 1

def main ( ) :
    import sys
    import re
    import os
    import tempfile
    import atexit
    import subprocess
    import re
    import tempfile
    import atexit
    import os
    import tempfile
    import atexit
    import re
    import tempfile
    import atexit
    import re
    import tempfile
    import atexit
    import re
    import tempfile
    import atexit
    import re
    import atexit
    import tempfile
    import atexit
    import re
    import atexit
    import re
    import tempfile
    import atexit
    import re
    import atexit
    import re
    import tempfile
    import atexit
    import re
    import atexit
    import re
    import tempfile
    import atexit
    import re
    import re
    import tempfile
    import atexit
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576710729_4198/main.py", line 2
    fibo = 2.078087F * float ( log ( n ) ) + 1.672276F
                   ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 416
---> probID: geeksforgeeks_601_A
---> inputs:

---> outputs:
8


def test_fibonacci ( ) :
    fibo = 2.078087F * float ( log ( n ) ) + 1.672276F
    assert round ( fibo , 5 ) == fibo


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 417
---> probID: geeksforgeeks_198_A
---> inputs:

---> outputs:
11999
0999900


def pyGFG ( str1 , str2 ) :
    n1 , n2 = len ( str1 ) , len ( str2 )
    if n1 < n2 :
        return True
    if n2 < n1 :
        return False
    for i in range ( n1 ) :
        if str1 [ i ] < str2 [ i ] :
            return True
        elif str1 [ i ] > str2 [ i ] :
            return False
    return False
def find_diff ( str1 , str2 ) :
    if is_smaller ( str1 , str2 ) :
        t = str1
        str1 , str2 = str2 , t
    str = ""
    n1 , n2 = len ( str1 ) , len ( str2 )
    str1 = [ str [ i ] for i in range ( n1 ) ]
    str2 = [ str [ i ] for i in range ( n2 ) ]
    carry = 0
    for i in range ( n2 ) :
        sub = ( int ( str1 [ i ] - '0' ) - int ( str2 [ i ] - '0' ) - carry )
        if sub < 0 :
            sub = sub + 10
            carry = 1
        else :
            carry = 0
        str += chr ( sub + '0' )
    for i in range ( n1 ) :
        sub = ( int ( str1 [ i ] - '0' ) - carry )
        if sub < 0 :
            sub = sub + 10
            carry = 1
        else :
            carry = 0
        str += chr ( sub + '0' )
    return [ str [ i ] for i in range ( n1 ) ]
def main ( ) :
    str1 = "978"
    str2 = "12977"
    print ( find_diff ( str1 , str2 ) )
    s1 = "100"
    s2 = "1000000"
    print ( find_diff ( s1 , s2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 418
---> probID: geeksforgeeks_3315_A
---> inputs:

---> outputs:
1


def GFG ( s1 , s2 ) :
    c0 , c1 = 0 , 0
    for c in s1 :
        if c == '0' and s2 [ c ] == '1' : c0 += 1
        elif c == '1' and s2 [ c ] == '0' : c1 += 1
    ans = c0 / 2 + c1 / 2
    if c0 % 2 == 0 and c1 % 2 == 0 :
        return ans
    elif ( c0 + c1 ) % 2 == 0 :
        return ans + 2
    else :
        return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 419
---> probID: aizu_p01545_A
---> inputs:
4
1 4 2 3
---> outputs:
4

def main ( ) :
    import sys
    import getopt
    global n
    x = [ ]
    for o , a in getopt . getopt ( sys . argv [ 1 : ] , "n:" ) :
        if o == '-n' :
            n = int ( a )
        else :
            x . append ( a )
    all = 0
    for i in range ( n ) :
        all += x [ i ]
    seg = SegmentTree ( n + 1 )
    for i in range ( n ) :
        pre = seg . query ( 0 , x [ i ] )
        seg . set ( x [ i ] , pre + x [ i ] )
    fix = seg . query ( 0 , n + 1 )
    print ( all - fix )
    class SegmentTree :
        n = 1
        val = [ ]
        def set ( self , n ) :
            while self . n < n :
                self . n *= 2
            self . val = [ ]
        def query ( self , k , l ) :
            k += n - 1
            self . val . append ( l )
            while k > 0 :
                k = ( k - 1 ) // 2
                self . val . append ( max ( self . val [ 2 * k + 1 ] , self . val [ 2 * k + 2 ] ) )
        def query ( self , a , b ) :
            return self . val [ 0 ]
        def query ( self , a , b , l , r , k ) :
            if r <= a or b <= l :
                return 0
            elif a <= l <= b :
                return self . val [ k ]
            else :
                vl = self . query ( a , b , l , ( l + r ) // 2 , 2 * k + 1 )
                vr = self . query ( a , b , ( l + r ) // 2 , r , 2 * k + 2 )
                return max ( vl , vr )
    

---> console_out:
 
DIDN'T MATCH!! :(
 24%|██▍       | 419/1746 [00:10<00:32, 40.68it/s]

-------------------------------------


---> lineNum: 420
---> probID: codeforces_376_A
---> inputs:
=^==
---> outputs:
balance

def test_a376_Lever_Round221 ( ) :
    s = input ( "Enter a string to test: " )
    s = s . strip ( )
    s = s . split ( "^" )
    part = s . count ( "^" )
    left = 0
    right = 0
    for i in range ( part ) :
        if s [ i ] <= '9' and s [ i ] >= '1' :
            left += ( part - i ) * ( s [ i ] - '0' )
    for j in range ( part + 1 , len ( s ) ) :
        if s [ j ] <= '9' and s [ j ] >= '1' :
            right += ( j - part ) * ( s [ j ] - '0' )
    if left == right :
        assert "balance" in s
    elif left < right :
        assert "right" in s
    elif right < left :
        assert "left" in s


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 421
---> probID: geeksforgeeks_1748_A
---> inputs:

---> outputs:
2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 

def test_gf_gf_normal ( ) :
    """Test normal primes."""
    prime = [ False ] * n
    for i in range ( 3 , n // 2 , 2 ) :
        if prime [ i // 2 ] == False :
            for j in range ( i * i , n , i * 2 ) :
                prime [ j // 2 ] = True
    assert '2 ' in prime
    for i in range ( 3 , n // 2 , 2 ) :
        if prime [ i // 2 ] == False :
            assert i == n // 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 422
---> probID: codeforces_59_A
---> inputs:
HoUse
---> outputs:
house

def test_word ( ) :
    f = py . io . TextIO ( encoding = 'utf-8' )
    word = f . readline ( )
    uppercase = 0
    lowercase = 0
    for ch in word :
        if ord ( ch ) < 128 :
            uppercase += 1
        else :
            lowercase += 1
    if uppercase > lowercase :
        assert word . upper ( ) == lowercase
    elif lowercase > uppercase :
        assert word . lower ( ) == lowercase
    else :
        assert word . lower ( ) == lowercase


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 423
---> probID: geeksforgeeks_4548_A
---> inputs:

---> outputs:
1


def test_GFG ( ) :
    N = 5
    arr = [ 3 , 2 , 3 , 4 , 4 ]
    assert frequencyOfSmallest ( N , arr ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 424
---> probID: geeksforgeeks_1108_A
---> inputs:

---> outputs:
YES


def GFG ( A , B , n , m ) :
    i , j = 0 , 0
    while i < n and j < m :
        if A [ i ] == B [ j ] :
            i += 1
            j += 1
            if j == m :
                return True
        else :
            i = i - j + 1
            j = 0
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 24%|██▍       | 424/1746 [00:10<00:32, 41.28it/s]

-------------------------------------


---> lineNum: 425
---> probID: codeforces_265_B
---> inputs:
2
1
2
---> outputs:
5

def problem_b ( ) :
    scn = nx . club_shortest_path ( nx . DiGraph ( ) , 1 )
    n = scn . size
    arr = [ scn [ i ] for i in range ( n ) ]
    ans = arr [ 0 ] + 1
    for i in range ( 1 , len ( arr ) ) :
        ans += abs ( arr [ i ] - arr [ i - 1 ] ) + 2
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 426
---> probID: geeksforgeeks_2625_A
---> inputs:

---> outputs:
64


def GFG ( n , k ) :
    res = 1
    MOD = 1000000007
    for i in range ( k ) :
        res = ( res * n ) % MOD
    return res


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576710993_7525/main.py", line 3
    MOD = 1000000007L
                    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 427
---> probID: atcoder_ABC122_D
---> inputs:
3
---> outputs:
61

def main ( ) :
    N = 0
    MOD = 1000000007L
    TOKENS = [ 'A' , 'C' , 'G' , 'T' ]
    memo = { }
    for i in range ( len ( sys . argv ) ) :
        sys . argv [ i ] = ''
        N = sys . argv [ i ]
        sys . argv [ i ] = ''
        memo [ i ] = { }
    def calc ( ) :
        return dfs ( 0 , 'TTT' )
    def is_ok ( last4 ) :
        if last4 in memo :
            return False
        for i in range ( 3 ) :
            vals = last4 [ i + 1 : i + 2 ]
            vals = vals [ i + 1 : i + 2 ]
            s = '' . join ( vals )
            if s in memo :
                return False
        return True
    def dfs ( current , last3 ) :
        if this . memo [ current ] . has_key ( last3 ) :
            return ( this . memo [ current ] [ last3 ] )
        if current == N :
            return 1
        result = 0
        for c in TOKENS :
            if is_ok ( last3 + c ) :
                result = ( result + dfs ( current + 1 , last3 [ 1 : last3 [ 0 ] ] ) ) % MOD
        memo [ current ] [ last3 ] = result
        return result
    def main ( ) :
        ins = Main ( )
        print ( ins . calc ( ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 428
---> probID: aizu_p00045_A
---> inputs:
100,20
50,10
70,35
---> outputs:
4950
22

def pytest_unconfigure ( config ) :
    config . pluginmanager . register ( TestUndo , "undo" )
    config . pluginmanager . register ( TestRedo , "redo" )
    class Main ( object ) :
        def __init__ ( self , pluginmanager ) :
            self . _plugin = pluginmanager
        def pytest_sessionstart ( session ) :
            try :
                value = int ( session . config . option . undo . value )
            except :
                pass
            else :
                if value == 1 :
                    self . _plugin . undo . value = 0
                else :
                    self . _plugin . undo . value = 1
    config . addinivalue_line ( "markers" , "undo finished" )
    config . addinivalue_line ( "markers" , "redo finished" )
    config . addinivalue_line ( "markers" , "undo finished" )
    config . addinivalue_line ( "markers" , "redo finished" )
    config . addinivalue_line ( "markers" , "undo finished" )
    config . addinivalue_line ( "markers" , "redo finished" )
    config . addinivalue_line ( "markers" , "undo finished" )
    config . addinivalue_line ( "markers" , "redo finished" )
    config . addinivalue_line ( "markers" , "redo finished" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 429
---> probID: geeksforgeeks_2989_A
---> inputs:

---> outputs:
15


def test_GFG ( ) :
    MAX = 100
    binomial_coeff = [ 1 ] * MAX
    C = [ 1 ] * ( k + 1 )
    for i in range ( 1 , n + 1 ) :
        for j in range ( min ( i , k ) , max ( i , k ) ) :
            C [ j ] = C [ j ] + C [ j - 1 ]
    assert C [ k ] == 1
    sum_ofproduct = binomial_coeff ( 2 * n , n - 1 )
    assert sum_ofproduct == MAX


---> console_out:
 
DIDN'T MATCH!! :(
 25%|██▍       | 429/1746 [00:10<00:31, 41.41it/s]

-------------------------------------


---> lineNum: 430
---> probID: geeksforgeeks_4247_A
---> inputs:
abxhydl
abxhydl

---> outputs:
Enter the first string: abxhydl
Enter the second string: abxhydl
Are both strings same: Yes


def test_GFG ( ) :
    f = QQ . old_poly_ring ( x , y )
    string1 = f . ideal ( x , y )
    assert f . ideal ( x , y ) . is_univariate is True
    string2 = f . ideal ( x , y )
    assert f . ideal ( x , y ) . is_univariate is True
    print ( "Are both strings same: " )
    if string1 == string2 == True :
        assert "Yes" in f . ideal ( x , y ) . is_univariate is True
    else :
        assert "No" in f . ideal ( x , y ) . is_univariate is False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 431
---> probID: geeksforgeeks_1058_A
---> inputs:

---> outputs:
6


def test_GFG ( ) :
    max_val = sum ( [ i for i in range ( 0 , max_val + 1 ) if i < max_val ] )
    prime = Vector ( max_val + 1 )
    for i in range ( max_val + 1 ) :
        prime [ i ] = True
    prime [ 0 ] = False
    prime [ 1 ] = False
    for p in range ( 2 , max_val * p <= max_val + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , max_val , p + 1 ) :
                prime [ i ] = False
    count = 0
    for i in range ( n ) :
        if prime [ i ] :
            count += 1
    return ( count * ( count - 1 ) ) / 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 432
---> probID: geeksforgeeks_521_A
---> inputs:

---> outputs:
13


def test_GFG ( ) :
    max_val = sum ( [ i for i in range ( 0 , max_val + 1 ) if i < max_val ] )
    prime = Vector ( max_val + 1 )
    for i in range ( max_val + 1 ) :
        prime [ i ] = True
    prime [ 1 ] = False
    prime [ 2 ] = False
    for p in range ( 2 , max_val * p <= max_val + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , max_val + 1 , p ) :
                prime [ i ] = False
    maximum = - 1
    for i in range ( n ) :
        if prime [ i ] :
            maximum = max ( maximum , i )
    return maximum


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576711139_3589/main.py", line 4
    assert p013 ( ) . run

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 433
---> probID: projecteuler_p013_A
---> inputs:

---> outputs:
5537376230

def pypyx053 ( ) :
    return p013 ( ) . run ( )
def test_p013 ( ) :
    assert p013 ( ) . run

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 434
---> probID: geeksforgeeks_1484_A
---> inputs:

---> outputs:
-6 1 2 

def test_GFG ( ) :
    arr = np . array ( [ 2 , - 6 , 3 , 5 , 1 ] )
    n = len ( arr )
    assert np . all ( arr == n )


---> console_out:
 
DIDN'T MATCH!! :(
 25%|██▍       | 434/1746 [00:10<00:31, 41.52it/s]

-------------------------------------


---> lineNum: 435
---> probID: geeksforgeeks_1785_A
---> inputs:

---> outputs:
4 5 6 9 10 120 

def test_GFG ( ) :
    arr = [ 6 , 10 , 5 , 4 , 9 , 120 , 4 , 6 , 10 ]
    n = len ( arr )
    print ( n )
    for i in range ( n ) :
        while i < n - 1 and arr [ i ] == arr [ i + 1 ] :
            i += 1
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576711209_7905/main.py", line 26
    print ( """ SPACETOKEN SPACETOKEN - s SPACETOKEN < file

SyntaxError: EOF while scanning triple-quoted string literal


-------------------------------------


---> lineNum: 436
---> probID: aizu_p02477_A
---> inputs:
5 8
---> outputs:
40

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 's+' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """Usage:SPACETOKEN%sSPACETOKEN<file>SPACETOKEN<file>""" % sys . argv [ 0 ] )
        return
    A = [ ]
    B = [ ]
    for o , a in opts :
        if o == '-s' :
            A . append ( a )
        elif o == '-e' :
            B . append ( a )
        elif o == '-d' :
            D . append ( a )
        elif o == '-l' :
            L . append ( a )
        elif o == '--help' :
            print ( __doc__ )
            print ( """SPACETOKENSPACETOKEN-h,SPACETOKEN--help""" )
            print ( """ SPACETOKEN SPACETOKEN - s SPACETOKEN < file > SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 437
---> probID: geeksforgeeks_4600_A
---> inputs:

---> outputs:
7


def GFG ( a , b , n ) :
    z = 0
    if n % 6 == 1 :
        z = a
    elif n % 6 == 2 :
        z = b
    elif n % 6 == 3 :
        z = b - a
    elif n % 6 == 4 :
        z = - a
    elif n % 6 == 5 :
        z = - b
    if n % 6 == 0 :
        z = - ( b - a )
    return z


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 438
---> probID: geeksforgeeks_535_A
---> inputs:

---> outputs:
24


def get_group_lengths ( s , num ) :
    res = 0
    i = 0
    while num :
        if ( num & 1 ) == 1 :
            res += s [ i ] - '0'
        i += 1
        num = num >> 1
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 439
---> probID: geeksforgeeks_963_A
---> inputs:

---> outputs:
9


def get_gfg ( cost , n ) :
    dp1 , dp2 = 0 , 0
    for i in range ( n ) :
        dp0 = cost [ i ] + min ( dp1 , dp2 )
        dp2 = dp1
        dp1 = dp0
    return min ( dp1 , dp2 )


---> console_out:
 
DIDN'T MATCH!! :(
 25%|██▌       | 439/1746 [00:10<00:31, 41.87it/s]

-------------------------------------


---> lineNum: 440
---> probID: geeksforgeeks_1369_A
---> inputs:

---> outputs:
Count = 10


def test_GFG ( ) :
    assert count_multiples ( 25 ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 441
---> probID: geeksforgeeks_2875_A
---> inputs:

---> outputs:
Length = 3


def pygfG ( str1 , k ) :
    freq = [ 0 ] * SIZE
    str = str1 . split ( ' ' )
    start = 0
    max_len = 0
    ch = None
    n = len ( str1 )
    for i in range ( n ) :
        ch = str [ i ]
        freq [ ch - 'a' ] += 1
        if freq [ ch - 'a' ] > k :
            if max_len < ( i - start ) :
                max_len = i - start
            while freq [ ch - 'a' ] > k :
                freq [ str [ start ] - 'a' ] -= 1
                start += 1
    if max_len < ( n - start ) :
        max_len = n - start
    return max_len


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 442
---> probID: codeforces_282_B
---> inputs:
2
1 999
999 1
---> outputs:
AG

def class6 ( arg ) :
    n = arg . count ( 'A' )
    ch = [ ]
    s1 , s2 = 0 , 0
    i , j , flag , dif = 0 , 0 , 0
    for i in range ( n ) :
        x , y = arg [ i ]
        temp1 = s1 + x
        temp2 = s2 + y
        if abs ( temp1 - s2 ) <= 500 :
            s1 += x
            ch . append ( 'A' )
            continue
        if abs ( temp2 - s1 ) <= 500 :
            s2 += y
            ch . append ( 'G' )
            continue
        flag = 1
        break
    if flag == 1 :
        print ( - 1 )
    else :
        ans = '' . join ( ch )
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 443
---> probID: leetcode_405_A
---> inputs:

---> outputs:
1a

def to_hex ( num ) :
    hex_map = "0123456789abcdef"
    if num == 0 :
        return "0"
    res = ""
    while num != 0 and len ( res ) < 8 :
        res = hex_map [ num & 15 ] + res
        num = num >> 4
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 444
---> probID: codeforces_544_B
---> inputs:
5 2
---> outputs:
['YES\nSSSSS\nLLLLL\nSSSSS\nLLLLL\nSSSSS', 'YES\nLSLSS\nSSSSS\nSSSSS\nSSSSS\nSSSSS\n']

def main ( ) :
    import sys
    import getopt
    global n , count
    n = int ( sys . argv [ 1 ] )
    count = int ( sys . argv [ 2 ] )
    print ( 'Island is %d' % n )
    print ( 'Count is %d' % count )
    print ( 'Island is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )
    print ( 'Count is %d' % count )


---> console_out:
 
DIDN'T MATCH!! :(
 25%|██▌       | 444/1746 [00:10<00:31, 41.91it/s]

-------------------------------------


---> lineNum: 445
---> probID: geeksforgeeks_5111_A
---> inputs:

---> outputs:
ek


def GFG ( str1 , str2 ) :
    count1 , count2 = [ 0 ] * 26 , [ 0 ] * 26
    for i in range ( len ( str1 ) ) :
        count1 [ str1 [ i ] - 'a' ] += 1
    for i in range ( len ( str2 ) ) :
        count2 [ str2 [ i ] - 'a' ] += 1
    result = ""
    for i in range ( 26 ) :
        for j in range ( 1 , min ( count1 [ i ] , count2 [ i ] ) + 1 ) :
            result += chr ( ord ( 'a' ) + i )
    print ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 446
---> probID: geeksforgeeks_1843_A
---> inputs:

---> outputs:
4


def GFG ( x ) :
    ret = 0
    while ( x >> ( ret + 1 ) ) :
        ret += 1
    return ret
def xorRange ( l , r ) :
    max_bit = msb ( r )
    mul = 2
    ans = 0
    for i in range ( 1 , max_bit + 1 ) :
        if ( l / mul ) * mul == ( r / mul ) * mul :
            if ( ( l & ( 1 << i ) ) != 0 ) :
                ans += mul
            mul *= 2
            continue
        odd_c = 0
        if ( ( l & ( 1 << i ) ) != 0 ) and l % 2 == 1 :
            odd_c = ( odd_c ^ 1 )
        if ( ( r & ( 1 << i ) ) != 0 ) and r % 2 == 0 :
            odd_c = ( odd_c ^ 1 )
        if odd_c != 0 :
            ans += mul
        mul *= 2
    zero_bit_cnt = zero_bit_cnt = ( r - l + 1 ) / 2
    if l % 2 == 1 and r % 2 == 1 :
        zero_bit_cnt += 1
    if zero_bit_cnt % 2 == 1 :
        ans += 1
    return ans
def main ( ) :
    l , r = 1 , 4
    print ( xorRange ( l , r ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 447
---> probID: geeksforgeeks_4393_A
---> inputs:

---> outputs:
No


def GFG ( s , i ) :
    if i == len ( s ) :
        print ( "Yes" )
        return
    if s [ i ] == 'a' :
        q1 ( s , i + 1 )
    else :
        q2 ( s , i + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 448
---> probID: aizu_p00154_A
---> inputs:
5
1 10
5 3
10 3
25 2
50 2
4
120
500
100
168
7
1 10
3 10
5 10
10 10
25 10
50 10
100 10
3
452
574
787
0
---> outputs:
16
0
12
7
9789
13658
17466

def main ( ) :
    import sys
    while 1 :
        n = input ( ) . count ( "Enter n" )
        if n == 0 :
            break
        m = [ 0 ] * 10000
        t = [ 1 ] * 10000
        a , b = divmod ( n , 10000 )
        max = 0
        for i in range ( n ) :
            m [ 0 ] = t [ 0 ]
            t [ 0 ] = 1
            a , b = divmod ( a , 10000 )
            for j in range ( 0 , a * b , a ) :
                for k in range ( 0 , max ) :
                    if t [ k ] :
                        m [ j + k ] += t [ k ]
            max += a * b
            t = m [ 0 ]
        s = sys . stdout . getvalue ( ) . count ( "\n" )
        for i in range ( s ) :
            print ( m [ sys . stdout . getvalue ( ) . find ( "\n" ) + 1 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 449
---> probID: geeksforgeeks_1134_A
---> inputs:

---> outputs:
22:22


def GFG ( T , K ) :
    minutes = ( ( T [ 0 ] - '0' ) * 10 + T [ 1 ] - '0' ) * 60 + ( ( T [ 3 ] - '0' ) * 10 + T [ 4 ] - '0' )
    minutes += K
    hour = ( minutes / 60 ) % 24
    min = minutes % 60
    if hour < 10 :
        print ( '0' + hour + ':' )
    else :
        print ( hour + ':' )
    if min < 10 :
        print ( '0' + min )
    else :
        print ( min )


---> console_out:
 
DIDN'T MATCH!! :(
 26%|██▌       | 449/1746 [00:10<00:31, 41.56it/s]

-------------------------------------


---> lineNum: 450
---> probID: geeksforgeeks_2226_A
---> inputs:

---> outputs:
Maximum Product = 3150
Maximum Sum = 26


def test_GFG ( ) :
    n = len ( str ( x ) )
    max_prod , max_sum = [ int ( i ) for i in range ( n - m ) ]
    for i in range ( n + m ) :
        product , sum = 1 , 0
        for j in range ( i , m + i ) :
            product = product * ( str ( j ) - '0' )
            sum = sum + ( str ( j ) - '0' )
        max_prod = max ( max_prod , product )
        max_sum = max ( max_sum , sum )
    assert max ( max_prod ) == max_prod
    assert max ( max_sum ) == max_sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 451
---> probID: geeksforgeeks_3429_A
---> inputs:

---> outputs:
8


def GFG ( x , y , z ) :
    if x < y :
        return ( x , z )
    else :
        return ( y , z )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 452
---> probID: codeforces_985_A
---> inputs:
6
1 2 6
---> outputs:
2

def main ( ) :
    import sys
    n = len ( sys . argv )
    x = sys . argv [ 1 : ]
    ji = sys . argv [ 2 : ]
    shu = [ ]
    for i in range ( n // 2 ) :
        shu . append ( i )
    shu . sort ( )
    l1 = 0
    l2 = 0
    for i in range ( n // 2 ) :
        s1 = i * 2 + 1
        s2 = i * 2 + 2
        id = shu [ i ]
        if id != s1 :
            l1 = l1 + abs ( s1 - id )
        if id != s2 :
            l2 = l2 + abs ( s2 - id )
    min = min ( l1 , l2 )
    print ( min )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576711617_2556/main.py", line 26
    return parents [ x ] = r
                         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 453
---> probID: aizu_p02344_A
---> inputs:
5 6
0 0 2 5
0 1 2 3
1 0 1
1 1 3
0 1 4 8
1 0 4
---> outputs:
2
?
10

def main ( ) :
    import sys
    import getopt
    global parents , weight , rank
    n = len ( sys . argv )
    q = len ( sys . argv )
    parents = [ ]
    weight = [ ]
    rank = [ ]
    for i in range ( n ) :
        parents . append ( i )
    type , x , y , z = getopt . getopt ( sys . argv [ 1 : ] , "q:" )
    for i in range ( q ) :
        type , x , y , z = getopt . getopt ( sys . argv [ 2 : ] , "q:" )
        if type == 0 :
            z = sys . stdin . read ( )
            relate ( x , y , z )
        else :
            diff ( x , y )
    def find ( x ) :
        if x == parents [ x ] :
            return x
        else :
            r = find ( parents [ x ] )
            weight [ x ] += weight [ parents [ x ] ]
            return parents [ x ] = r
    def weight ( x ) :
        find ( x )
        return weight [ x ]
    def relate ( x , y , z ) :
        z += weight ( x )
        z -= weight ( y )
        x = find ( x )
        y = find ( y )
        if x == y :
            return
        if rank [ x ] < rank [ y ] :
            tmp = x
            x , y = y , tmp
            z = - z
        if rank [ x ] == rank [ y ] :
            rank [ x ] += 1
        parents [ y ] = x
        weight [ y ] = z
    def diff ( x , y ) :
        if find ( x ) == find ( y ) :
            print ( weight ( y ) - weight ( x ) )
        else :
            print ( "?" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 454
---> probID: geeksforgeeks_2430_A
---> inputs:

---> outputs:
42


def test_GFG ( ) :
    A , B , M = symbols ( 'A,B,M' )
    assert gf_degree ( A ) == 6
    assert gf_degree ( B ) == 15
    assert gf_degree ( M ) == 3


---> console_out:
 
DIDN'T MATCH!! :(
 26%|██▌       | 454/1746 [00:10<00:31, 41.53it/s]

-------------------------------------


---> lineNum: 455
---> probID: geeksforgeeks_1744_A
---> inputs:

---> outputs:
Count of numbers from 1 to 328 that have 4 as a digit is 60


def GFG ( n ) :
    if n < 4 :
        return 0
    d = int ( math . log10 ( n ) )
    a = [ 0 ] * ( d + 2 )
    for i in range ( 2 , d + 1 ) :
        a [ i ] = a [ i - 1 ] * 9 + int ( math . ceil ( math . pow ( 10 , i - 1 ) ) )
    p = int ( math . ceil ( math . pow ( 10 , d ) ) )
    msd = n // p
    if msd == 4 :
        return ( msd ) * a [ d ] + ( n % p ) + 1
    if msd > 4 :
        return ( msd - 1 ) * a [ d ] + p + count_numbers_with_4 ( n % p )
    return ( msd ) * a [ d ] + count_numbers_with_4 ( n % p )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 456
---> probID: codeforces_450_B
---> inputs:
2 3
3
---> outputs:
1

def test_vfe ( ) :
    x = Symbol ( 'x' )
    y = Symbol ( 'y' )
    seq = [ x , y , y - x ]
    i = 2
    while not ( seq [ i ] == y and seq [ i - 1 ] == x or seq [ i ] == 0 and seq [ i - 1 ] == 0 ) :
        seq . append ( seq [ i ] - seq [ i - 1 ] )
        i += 1
    k = Symbol ( 'k' , integer = True )
    i -= 1
    k = k % i
    if k == 0 :
        k = i
    assert ( ( seq [ k - 1 ] % 1000000007 ) + 1000000007 ) % 1000000007 == seq [ k ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 457
---> probID: geeksforgeeks_3088_A
---> inputs:

---> outputs:
35 30 100 80 40 

def test_solution ( ) :
    class INT :
        data = 0
    def find_post_order_util ( pre , n , minval , maxval , pre_index ) :
        if pre_index . data == n :
            return
        if pre [ pre_index . data ] < minval or pre [ pre_index . data ] > maxval :
            return
        val = pre [ pre_index . data ]
        pre_index . data += 1
        find_post_order_util ( pre , n , minval , val , pre_index )
        find_post_order_util ( pre , n , val , maxval , pre_index )
        print ( val , end = '' )
    def find_post_order ( pre , n ) :
        pre_index = INT ( 0 )
        find_post_order_util ( pre , n , int ( minval ) , int ( maxval ) , pre_index )
    def find_post_order ( pre , n ) :
        pre_index = INT ( 0 )
        find_post_order_util ( pre , n , int ( minval ) , int ( maxval ) , pre_index )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 458
---> probID: geeksforgeeks_1057_A
---> inputs:

---> outputs:
1


def test_GFG ( ) :
    if k <= 0 or k >= n :
        return 0
    s = set ( [ arr [ i ] for i in range ( n ) ] )
    if len ( s ) <= k :
        return 0
    return len ( s ) - k


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 459
---> probID: codeforces_250_B
---> inputs:
6
a56f:d3:0:0124:01:f19a:1000:00
a56f:00d3:0000:0124:0001::
a56f::0124:0001:0000:1234:0ff0
a56f:0000::0000:0001:0000:1234:0ff0
::
0ea::4d:f4:6:0
---> outputs:
a56f:00d3:0000:0124:0001:f19a:1000:0000
a56f:00d3:0000:0124:0001:0000:0000:0000
a56f:0000:0000:0124:0001:0000:1234:0ff0
a56f:0000:0000:0000:0001:0000:1234:0ff0
0000:0000:0000:0000:0000:0000:0000:0000
00ea:0000:0000:0000:004d:00f4:0006:0000

def _250B ( ) :
    import sys
    import random
    import string
    import pickle
    import struct
    import time
    import random
    import struct
    import pickle
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct


---> console_out:
 
DIDN'T MATCH!! :(
 26%|██▋       | 459/1746 [00:11<00:31, 41.25it/s]

-------------------------------------


---> lineNum: 460
---> probID: geeksforgeeks_395_A
---> inputs:

---> outputs:
2


def GFG ( n ) :
    flag = 1
    for i in range ( 2 , n * i <= n ) :
        if n % i == 0 :
            flag = 0
            break
    return ( flag == 1 and True or False )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 461
---> probID: atcoder_ABC109_B
---> inputs:
100
wzcitmdfbw
ziowcpggbu
niopnjdjcw
rixzquldia
lwrdjmbhvk
gysprovnzf
rajessmyby
cdqmsxsryd
soiktyfxjo
mtwyskctdj
fuvekmckrw
izayctxcfx
pgruprmpnz
suoegwgdbb
yiruisjqib
apbombsjoq
ozsdgdrgyq
yfrkssntfg
ufqrqzxecg
ulnxeatmlq
xjkyjxifir
szudolgmnl
jzjujuayji
icervhavvg
twhlsrwaqo
tgokhtwgjm
fslvhzpgns
fhgboehmzp
ortkqjuanp
nfnluezljs
qtofmenwfz
lrrpzetxog
oqrhuhlyge
nbkpwqbwwc
zxeiyoztkm
gvjusurkti
eahzrntrra
skbabwcsrh
aznxyudgfp
qpguijawgh
wvfogdvtuh
mrjceofctz
qgfietzkbe
gbsjzmfzrm
fmgvoafxfy
imayuxcjre
dydnvlxwvh
uaiqgluufb
btpvtcfhpr
lrbvvlntrq
zqawbssran
jaxtjvsxsd
uzsxloeblc
ibyfeuonsy
rcvccfpkzt
ialhqhqeky
dqxmnzcapl
zyxvfbpdzm
lfmmlgtnfr
aoebtfduzx
gsaqwcnjiy
trzyfwkrdl
aywhcmfgzv
cbflkacyhh
casmblhbdj
ejnfwylcqv
nmzxugfsiy
juicgffiwr
szdbzjyhvg
pfsapufjqf
epxbfljgtd
gmfeecqfwf
vweiacditm
sfaldcqlry
clmccmodln
lkwvgmdzwa
pbzyrwxasq
vtbmtbpide
dvrpxqndca
htgzshjaru
umquxrrvth
ocdkuurwur
kexhypsbup
xisdeshlts
vhvjvhnxgg
avcdaiiaqa
djjernidpe
rjdqucsaup
rtyfoiiklh
tsznddftcg
echwbizhes
dxmacmzild
eegshhntfz
nbbgxavmpn
fhpxylxkyz
tbqwpuymql
nmetghtnre
fypivpyndo
bresgvlmkk
xhlomigiri
---> outputs:
No

def main ( ) :
    parser = argparse . ArgumentParser ( description = 'Generate a sentence of words from a sentence of words' )
    parser . add_argument ( '-N' , '--N' , type = int , help = 'Number of words to generate' )
    parser . add_argument ( 'previous' , type = str , help = 'The previous word' )
    parser . add_argument ( 'next' , type = str , help = 'The next word' )
    used_words = set ( )
    used_words . add ( previous )
    while N > 1 :
        next = parser . parse_args ( ) [ - 1 ]
        if not ( ( previous [ - 1 ] == next [ 0 ] ) and used_words . add ( next ) ) :
            print ( 'No' )
            parser . print_help ( )
            return
        previous = next
        N -= 1
    parser . print_help ( )
    print ( 'Yes' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 462
---> probID: geeksforgeeks_2976_A
---> inputs:

---> outputs:
18


def GFG ( div , rem , N ) :
    num = rem [ N - 1 ]
    for i in range ( N - 2 , - 1 , - 1 ) :
        num = num * div [ i ] + rem [ i ]
    return num


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 463
---> probID: geeksforgeeks_3759_A
---> inputs:

---> outputs:
Array after segregation is 0 0 1 1 1 1 

def test_GFG ( arr ) :
    """Test the segregation of the generators of a function."""
    type0 = 0
    type1 = len ( arr ) - 1
    while type0 < type1 :
        if arr [ type0 ] == 1 :
            arr [ type1 ] = arr [ type1 ] + arr [ type0 ]
            arr [ type0 ] = arr [ type1 ] - arr [ type0 ]
            arr [ type1 ] = arr [ type1 ] - arr [ type0 ]
            type1 -= 1
        else :
            type0 += 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 464
---> probID: atcoder_ABC085_B
---> inputs:
4
10
8
8
6
---> outputs:
3

def main ( ) :
    import sys
    n = len ( sys . argv )
    d = [ ]
    for i in range ( n ) :
        d . append ( sys . argv [ i ] )
    d . sort ( )
    ans = 1
    for i in range ( n - 1 ) :
        if d [ i ] != d [ i + 1 ] :
            ans += 1
    print ( ans )
    sys . exit ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(
 27%|██▋       | 464/1746 [00:11<00:30, 41.66it/s]

-------------------------------------


---> lineNum: 465
---> probID: codeforces_3_A
---> inputs:
a8
h1
---> outputs:
7
RD
RD
RD
RD
RD
RD
RD

def pyShortestKingPath ( ) :
    s = input ( "Enter a string: " )
    s1 = input ( "Enter a string: " )
    c = s . split ( )
    c1 = s1 . split ( )
    diff = c1 [ 0 ] - c [ 0 ]
    dif = c1 [ 1 ] - c [ 1 ]
    n = abs ( diff )
    m = abs ( dif )
    ans = ""
    while diff != 0 or dif != 0 :
        if diff > 0 :
            ans += "R"
            diff -= 1
        if diff < 0 :
            ans += "L"
            diff += 1
        if dif > 0 :
            ans += "U"
            dif -= 1
        if dif < 0 :
            ans += "D"
            dif += 1
        ans += "\n"
    print ( max ( n , m ) )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 466
---> probID: aizu_p02025_A
---> inputs:
2 2
1 2
4 8
---> outputs:
60

def main ( ) :
    import sys
    h , w = sys . argv [ 1 : ]
    total = 0
    for i in range ( h ) :
        for j in range ( w ) :
            x = sys . stdin . readline ( )
            total += x * ( i + 1 ) * ( h - i ) * ( j + 1 ) * ( w - j )
    print ( total )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 467
---> probID: codeforces_821_A
---> inputs:
3
1 1 2
2 3 1
6 4 1
---> outputs:
Yes

def okabeandfuturegadgetlaboratory ( ) :
    fin = open ( 'okabeandfuturegadgetlaboratory.txt' , 'r' )
    n = int ( fin . readline ( ) )
    lab = [ ]
    for i in range ( n ) :
        st = fin . readline ( ) . split ( )
        for j in range ( n ) :
            lab . append ( int ( st [ 0 ] ) )
    ans = True
    for x in range ( n ) :
        for y in range ( n ) :
            if lab [ x ] [ y ] != 1 :
                cur = lab [ x ] [ y ]
                is_valid = False
                for i in range ( n ) :
                    for j in range ( n ) :
                        if lab [ x ] [ i ] + lab [ j ] [ y ] == cur :
                            is_valid = True
                            break
                    if is_valid :
                        break
                if not is_valid :
                    ans = False
                    break
        if not ans :
            break
    print ( ans and "Yes" or "No" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 468
---> probID: aizu_p02424_A
---> inputs:
8 10
---> outputs:
00000000000000000000000000001000
00000000000000000000000000001010
00000000000000000000000000000010

def main ( ) :
    import sys
    x , y = sys . argv [ 1 : ]
    print_bin ( fill_zero ( long ( x & y ) ) )
    print_bin ( fill_zero ( long ( x | y ) ) )
    print_bin ( fill_zero ( long ( x ^ y ) ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 469
---> probID: aizu_p02423_A
---> inputs:
8
---> outputs:
00000000000000000000000000001000
11111111111111111111111111110111
00000000000000000000000000010000
00000000000000000000000000000100

def main ( ) :
    import sys
    x = sys . stdin . read ( 32 )
    print_bin ( fill_zero ( long ( x ) ) )
    print_bin ( fill_zero ( long ( ~ x ) ) )
    print_bin ( fill_zero ( long ( x << 1 ) ) )
    print_bin ( fill_zero ( long ( x >> 1 ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 27%|██▋       | 469/1746 [00:11<00:30, 41.96it/s]

-------------------------------------


---> lineNum: 470
---> probID: atcoder_ABC089_C
---> inputs:
1
AAA
---> outputs:
0

def py ( ) :
    import sys
    import getopt
    M = 5
    def main ( ) :
        s = getopt . getopt ( sys . argv [ 1 : ] , 'm' )
        ma = [ ]
        for i in range ( 0 , len ( s ) ) :
            s = s [ i : i + M ]
            try : ma . append ( int ( s [ : i ] ) )
            except : pass
        sys . argv = [ '-m' , '--' ]
        ans = 0.0
        for i in range ( 0 , M - 2 ) :
            for j in range ( i + 1 , M - 1 ) :
                for k in range ( j + 1 , M ) :
                    ans += ma [ i ] * ma [ j ] * ma [ k ]
        sys . argv = [ '-m' , '--' ]
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 471
---> probID: codeforces_950_B
---> inputs:
7 6
2 5 3 1 11 4 4
7 8 2 4 1 8
---> outputs:
3

def test_intercepted_message ( ) :
    """Test that the message is intercepted."""
    app = flask . Flask ( __name__ )
    total_first_files = app . config . get ( 'TRAILBACK_FIRST_FILES' , 10 )
    total_second_files = app . config . get ( 'TRAILBACK_SECOND_FILES' , 10 )
    first_files = [ ]
    second_files = [ ]
    for i in range ( total_first_files ) :
        first_files . append ( i )
    for i in range ( total_second_files ) :
        second_files . append ( i )
    assert len ( _intercepted_message ( first_files , second_files ) ) == total_first_files + total_second_files


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 472
---> probID: aizu_p02401_A
---> inputs:
1 + 2
56 - 18
13 * 2
100 / 10
27 + 81
0 ? 0
---> outputs:
3
38
26
10
108

def pythontag_in_dir ( path ) :
    """
 Given a path to a Python module, return the path to its .py file.
 """
    path = os . path . abspath ( path )
    for op , _ , filenames in os . walk ( path ) :
        for filename in filenames :
            if op == '?' :
                break
            if op == '+' :
                yield op , os . path . join ( path , filename )
            if op == '-' :
                yield op , os . path . join ( path , filename )
            if op == '*' :
                yield op , os . path . join ( path , filename )
            if op == '/' :
                yield op , os . path . join ( path , filename )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 473
---> probID: atcoder_AGC013_A
---> inputs:
6
1 2 3 2 2 1
---> outputs:
2

def main ( ) :
    stdscr = stdscr . clear ( )
    N = len ( sys . argv )
    A = [ ]
    for i in range ( N ) :
        A . append ( sys . argv [ i ] )
    count = 0
    for i in range ( N ) :
        if i == N - 1 :
            count += 1
        elif A [ i ] == A [ i + 1 ] :
            pass
        elif A [ i ] < A [ i + 1 ] :
            while A [ i ] <= A [ i + 1 ] :
                i += 1
                if i == N - 1 :
                    break
            count += 1
        else :
            while A [ i ] >= A [ i + 1 ] :
                i += 1
                if i == N - 1 :
                    break
            count += 1
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 474
---> probID: geeksforgeeks_3904_A
---> inputs:

---> outputs:
31


def test_GFG ( ) :
    """Test the number of pairs of symbols in the GFG."""
    MAX = 256
    count_pairs = [ 0 ] * MAX
    for i in range ( len ( s ) ) :
        count_pairs [ s [ i ] ] += 1
    ans = 0
    for i in range ( MAX ) :
        ans += count_pairs [ i ] * count_pairs [ i ]
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 27%|██▋       | 474/1746 [00:11<00:30, 42.20it/s]  File "./junk/1692576712140_3731/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 475
---> probID: geeksforgeeks_1637_A
---> inputs:

---> outputs:
1 11 100 2 17 500 

def import ( ) :
    import numpy
    class solution :
        prime = [ False ] * 100006
        def SieveOfEratosthenes ( n ) :
            for i in range ( 1 , n + 1 ) :
                prime [ i ] = True
            prime [ 1 ] = False
            for p in range ( 2 , n * p + 1 ) :
                if prime [ p ] == True :
                    for i in range ( p * 2 , n + 1 , p ) :
                        prime [ i ] = False
    def sortedArray ( arr , n ) :
        SieveOfEratosthenes ( 100005 )
        v = [ ]
        for i in range ( n ) :
            if prime [ arr [ i ] ] == False :
                v . append ( arr [ i ] )
        v . sort ( )
        j = 0
        for i in range ( n ) :
            if prime [ arr [ i ] ] == True :
                print ( arr [ i ] , end = ' ' )
            else :
                print ( v [ j ] , end = ' ' )
                j += 1
    solution ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 476
---> probID: geeksforgeeks_636_A
---> inputs:

---> outputs:
3


def get_gcdfibonaccifreq ( arr , max_element ) :
    """
 Given a list of integers, create a hash of the frequency of the given
 element, and return the frequency of the element.
 """
    hash = set ( )
    create_hash ( hash , list ( arr ) . max ( ) . get ( ) )
    i = 0
    m = { }
    for i in range ( n ) :
        if m . has_key ( arr [ i ] ) :
            m [ arr [ i ] ] = m [ arr [ i ] ] + 1
        else :
            m [ arr [ i ] ] = 1
    gcd = 0
    for key , value in m . items ( ) :
        if hash . has_key ( key ) :
            gcd = __gcd ( gcd , value )
    return gcd


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 477
---> probID: geeksforgeeks_828_A
---> inputs:

---> outputs:
Area of semicircle = 8.6198


def GFG ( a ) :
    R = a * float ( 2.0 - math . sqrt ( 2 ) )
    area = float ( ( 3.14 * R ** 2 ) / 2.0 )
    return area


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 478
---> probID: geeksforgeeks_3808_A
---> inputs:

---> outputs:
4


def GFG ( a , b , c , d , x , n ) :
    count = 0
    for i in range ( n ) :
        for j in range ( n ) :
            for k in range ( n ) :
                for l in range ( n ) :
                    if ( a [ i ] ^ b [ j ] ^ c [ k ] ^ d [ l ] ) == x :
                        count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576712235_7325/main.py", line 10
    yield ( lambda : H [ i ] [ s - 1 ] [ 0 ] for s in range ( 26 ) ]
                                                                   ^
SyntaxError: closing parenthesis ']' does not match opening parenthesis '('


-------------------------------------


---> lineNum: 479
---> probID: geeksforgeeks_2410_A
---> inputs:

---> outputs:
b
c
e


def test_GFG ( ) :
    from sympy . polys . distributedmodules import gf_degree
    from sympy . polys . domains import ZZ
    from sympy . polys . densebasic import DMP
    from sympy . polys . domains import QQ
    from sympy . polys . distributedmodules import DMP
    N = len ( ZZ . map ( [ 1 , 2 , 3 ] ) )
    H = [ [ QQ ( 1 , 2 ) ] , [ QQ ( 1 , 2 ) ] ]
    for i in range ( 1 , N + 1 ) :
        yield ( lambda : H [ i ] [ s - 1 ] [ 0 ] for s in range ( 26 ) ]
    m = len ( ZZ . map ( [ 1 , 2 , 3 ] ) )
    for j in range ( m ) :
        l , r , n = ZZ . map ( [ 1 , 2 , 3 ] )
        sum = 0
        for i in range ( 26 ) :
            sum += H [ r ] [ i ] - H [ l - 1 ] [ i ]
            if sum >= n :
                print ( ( 'a' , i ) )
                break


---> console_out:
 
DIDN'T MATCH!! :(
 27%|██▋       | 479/1746 [00:11<00:30, 42.12it/s]

-------------------------------------


---> lineNum: 480
---> probID: codeforces_1443_B
---> inputs:
2
1 1
01000010
5 1
01101110
---> outputs:
2
6

def main ( ) :
    import sys
    import getopt
    test_cases = getopt . getopt ( sys . argv [ 1 : ] , 'i:' )
    for i in test_cases :
        activating = int ( i )
        placing = int ( i )
        input = sys . stdin . readline ( )
        res = 0
        if placing >= activating :
            for i in input :
                if i == '0' :
                    continue
                else :
                    res += activating
                    while i < len ( input ) and input [ i ] == '1' :
                        i += 1
            print ( res )
        else :
            diff = activating / placing
            first_one = - 1
            for i in input :
                if i == '1' :
                    first_one = i
                    break
            if first_one == - 1 :
                print ( 0 )
            else :
                array = [ ]
                last_one = first_one
                for i in range ( first_one + 1 , len ( input ) ) :
                    if input [ i ] == '1' :
                        array . append ( i - last_one - 1 )
                        last_one = i
                res1 = 0
                for i in range ( len ( array ) ) :
                    first = array [ i ]
                    if first <= diff :
                        res1 += ( first ) * placing
                    else :
                        res1 += activating
                res1 += activating
                print ( res1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 481
---> probID: codeforces_1716_A
---> inputs:
4
1
3
4
12
---> outputs:
2
1
2
4

def test_223 ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' , integer = True , positive = True )
    for j in range ( t . size ) :
        x = symbols ( 'x' , integer = True , positive = True )
        if x == 1 :
            assert '2' in t
        elif x == 2 :
            assert '1' in t
        elif x % 3 == 0 :
            assert x / 3 == t
        else :
            assert x / 3 + 1 == t


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 482
---> probID: codeforces_999_B
---> inputs:
10
rocesfedoc
---> outputs:
codeforces

def test_b999 ( ) :
    f = open ( 'b999.txt' , 'r' )
    t = int ( f . readline ( ) )
    str = f . readline ( )
    for i in range ( 1 , t + 1 ) :
        if t % i == 0 :
            str = reverse ( str , i - 1 )
    assert str == reverse ( str , last )
    arr = [ ]
    for i in range ( len ( str ) ) :
        arr . append ( str [ i ] )
    counter_up , counter_down = 0 , last
    for i in range ( 0 , last // 2 ) :
        del arr [ counter_up : counter_down ]
        counter_up += 1
        counter_down -= 1
    result = ''
    for i in range ( len ( str ) ) :
        result += arr [ i ]
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 483
---> probID: geeksforgeeks_1466_A
---> inputs:

---> outputs:
-1 1 -4 4 -8 8 -9 9 

def test_GFG ( ) :
    v = [ ]
    for i in range ( n ) :
        for j in range ( i + 1 , n ) :
            if abs ( arr [ i ] ) == abs ( arr [ j ] ) :
                v . append ( abs ( arr [ i ] ) )
        if len ( v ) == 0 :
            return
        v . sort ( )
        for i in v :
            print ( - v [ i ] , v [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 484
---> probID: geeksforgeeks_3020_A
---> inputs:

---> outputs:
Double factorial is 15


def test_GFG ( ) :
    if not isinstance ( n , int ) or n == 0 :
        return 1
    assert n * n == n


---> console_out:
 
DIDN'T MATCH!! :(
 28%|██▊       | 484/1746 [00:11<00:30, 41.49it/s]  File "./junk/1692576712384_4848/main.py", line 5
    if str [ l ] != str [ h -- ] :
                               ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 485
---> probID: geeksforgeeks_3365_A
---> inputs:

---> outputs:
1
2


def get_GFG ( str ) :
    l = 0
    h = len ( str ) - 1
    while h > l :
        if str [ l ] != str [ h -- ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 486
---> probID: geeksforgeeks_3286_A
---> inputs:

---> outputs:
1670


def test_GFG ( ) :
    n = len ( str ( num ) )
    sumofdigit = [ num [ 0 ] - '0' for num in range ( 1 , n ) ]
    res = sumofdigit [ 0 ]
    for i in range ( 1 , n ) :
        numi = num [ i ] - '0'
        sumofdigit [ i ] = ( i + 1 ) * numi + 10 * sumofdigit [ i - 1 ]
        res += sumofdigit [ i ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 487
---> probID: geeksforgeeks_4209_A
---> inputs:

---> outputs:
22


def test_GFG ( ) :
    a , b , n = symbols ( 'a b n' , integer = True , positive = True )
    ans = 0
    ans += n * ( a / n ) ** ( b / n )
    ans += ( a / n ) ** ( b % n )
    ans += ( a % n ) ** ( b / n )
    ans += ( ( a % n ) + ( b % n ) ) / n
    assert find_count_of_pairs ( a , b , n ) == ans


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576712457_2194/main.py", line 2
    print ( [ 'p071.py' , 'p071.c' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , ' p071 . h

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 488
---> probID: projecteuler_p071_A
---> inputs:

---> outputs:
428570

def p071 ( ) :
    print ( [ 'p071.py' , 'p071.c' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , 'p071.h' , ' p071 . h

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 489
---> probID: geeksforgeeks_2328_A
---> inputs:

---> outputs:
Prime


def GFG ( n ) :
    c = [ 1 ] * 100
    coef ( n )
    for i in range ( n ) :
        c [ 0 ] = 1
        for i in range ( n ) :
            c [ 1 + i ] = 1
            for j in range ( i , 0 , - 1 ) :
                c [ j ] = c [ j - 1 ] - c [ j ]
    isPrime ( n )
    c [ 0 ] += 1
    c [ n ] -= 1
    i = n
    while ( i ) :
        c [ i ] = c [ i - 1 ]
        i -= 1
    return i


---> console_out:
 
DIDN'T MATCH!! :(
 28%|██▊       | 489/1746 [00:11<00:30, 41.10it/s]

-------------------------------------


---> lineNum: 490
---> probID: geeksforgeeks_480_A
---> inputs:

---> outputs:
2


def GFG ( arr , n ) :
    min = sys . maxint
    counter = 0
    for i in range ( n - 1 , - 1 , - 1 ) :
        if arr [ i ] > min :
            counter += 1
        if arr [ i ] <= min :
            min = arr [ i ]
    return counter


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 491
---> probID: atcoder_AGC027_A
---> inputs:
3 70
20 30 10
---> outputs:
2

def main ( ) :
    import sys
    N = len ( sys . argv )
    x = sys . argv [ 1 ]
    sweet = [ ]
    for i in range ( N ) :
        a = sys . argv [ i ]
        sweet . append ( a )
    sweet . sort ( )
    num = 0
    for i in range ( N ) :
        if x - sweet [ num ] >= 0 :
            x = x - sweet [ num ]
            num += 1
        else :
            break
    if ( num == N ) :
        num -= 1
    print ( num )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 492
---> probID: codeforces_900_A
---> inputs:
3
1 1
-1 -1
2 -1
---> outputs:
Yes

def main ( ) :
    leer = input ( )
    casos , x , y , conta , cont = leer
    casos = len ( casos )
    for i in range ( casos ) :
        x , y = leer
        if x > 0 : conta += 1
        else : cont += 1
    if conta > 1 and cont > 1 :
        print ( "No" )
    else :
        print ( "Yes" )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576712580_9529/main.py", line 2
    with open

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 493
---> probID: aizu_p01924_A
---> inputs:
5 2 3
3
5
1
2
3
3 100 100
3
3
4
20 3 8
3
2
6
1
9
1
8
4
2
2
8
1
8
8
2
5
3
4
3
8
7 2 2
0
2
5
2
5
2
1
0 0 0
---> outputs:
3
0
11
5

def main ( ) :
    with open

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 494
---> probID: geeksforgeeks_256_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    arr = [ 2 , 3 , 4 , 1 , 5 ]
    count = 0
    i = 0
    while i < len ( arr ) :
        if arr [ i ] != i + 1 :
            while arr [ i ] != i + 1 :
                temp = 0
                temp = arr [ arr [ i ] - 1 ]
                arr [ arr [ i ] - 1 ] = arr [ i ]
                arr [ i ] = temp
                count += 1
        i += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 28%|██▊       | 494/1746 [00:11<00:30, 41.23it/s]  File "./junk/1692576712629_6947/main.py", line 2
    print ( [ 'pyp500.py

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 495
---> probID: projecteuler_p500_A
---> inputs:

---> outputs:
35407281

def pyp500 ( ) :
    print ( [ 'pyp500.py

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 496
---> probID: geeksforgeeks_1410_A
---> inputs:

---> outputs:
The unique pair is (7, 5)


def GFG ( arr , n ) :
    XOR = arr [ 0 ]
    for i in range ( 1 , n ) :
        XOR = XOR ^ arr [ i ]
    set_bit_no = XOR & ~ ( XOR - 1 )
    x , y = 0 , 0
    for i in range ( n ) :
        if ( arr [ i ] & set_bit_no ) > 0 :
            x = x ^ arr [ i ]
        else :
            y = y ^ arr [ i ]
    print ( "The unique pair is (%d, %d)" % ( x , y ) )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1692576712678_6955/main.py", line 23, in <module>
    class CustomScanner :
  File "./junk/1692576712678_6955/main.py", line 24, in CustomScanner
    f = open ( '/proc/self/stdin' , 'r' )
FileNotFoundError: [Errno 2] No such file or directory: '/proc/self/stdin'


-------------------------------------


---> lineNum: 497
---> probID: codeforces_404_A
---> inputs:
5
xooox
oxoxo
soxoo
oxoxo
xooox
---> outputs:
NO

def valeraX ( ) :
    cs = CustomScanner ( )
    n = cs . count ( '\n' )
    xch , nxch = '\u0000' , '\u0000'
    for i in range ( n ) :
        line = cs . next ( )
        if i == 0 :
            xch = line [ 0 ]
            nxch = line [ 1 ]
        if xch == nxch :
            print ( 'NO' )
            return
        for j in range ( n ) :
            if j == i or j == n - i - 1 :
                if line [ j ] != xch :
                    print ( 'NO' )
                    return
            else :
                if line [ j ] != nxch :
                    print ( 'NO' )
                    return
    print ( 'YES' )
class CustomScanner :
    f = open ( '/proc/self/stdin' , 'r' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576712702_9422/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 498
---> probID: aizu_p00077_A
---> inputs:
ab@5C1@8050
@99+1=1@90
---> outputs:
abCCCCC10000000050
999999999+1=1000000000

def import ( ) :
    import sys
    while 1 :
        lines = sys . stdin . readline ( ) . split ( '\n' )
        lines = lines [ : - 1 ]
        for line in lines :
            now = line [ : - 1 ]
            if now != '@' :
                sys . stdout . write ( now )
            else :
                i = 0
                num = line [ i ] - '0'
                i += 1
                if 0 <= num <= 9 :
                    now = line [ i ]
                    for j in range ( num ) :
                        sys . stdout . write ( now )
        sys . stdout . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 499
---> probID: geeksforgeeks_5181_A
---> inputs:

---> outputs:
Yes


def test_GFG ( ) :
    mp = { }
    for i in range ( n ) :
        if mp . has_key ( i ) :
            mp [ i ] = mp [ i ] + 1
        else :
            mp [ i ] = 1
    for x , y in mp . items ( ) :
        if x >= n / 2 :
            return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 29%|██▊       | 499/1746 [00:12<00:30, 41.30it/s]

-------------------------------------


---> lineNum: 500
---> probID: aizu_p02316_A
---> inputs:
4 8
4 2
5 2
2 1
8 3
---> outputs:
21

def main ( ) :
    import sys
    import random
    import pickle
    import struct
    import time
    import random
    import pickle
    import struct
    import struct
    import pickle
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 501
---> probID: aizu_p00076_A
---> inputs:
3
6
-1
---> outputs:
0.29 
1.71
-2.31 
0.80

def main ( ) :
    do_it ( )
    n = input ( )
    while n != - 1 :
        rad = 0
        hyp = 1
        for i in range ( 1 , n ) :
            rad += math . atan ( 1 / hyp )
            hyp = math . sqrt ( hyp * hyp + 1 )
        print ( hyp * math . cos ( rad ) )
        print ( hyp * math . sin ( rad ) )
        n = input ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 502
---> probID: geeksforgeeks_4813_A
---> inputs:

---> outputs:
1 5 6 

def test_GFG ( ) :
    arr = [ 2 , 3 , 4 ]
    i = 0
    while i < n and arr [ i ] <= 0 :
        i += 1
    count , curr = 0 , 1
    while count < k and i < n :
        if arr [ i ] != curr :
            print ( curr , end = ' ' )
            count += 1
        else :
            i += 1
        curr += 1
    while count < k :
        print ( curr , end = ' ' )
        curr += 1
        count += 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 503
---> probID: geeksforgeeks_615_A
---> inputs:

---> outputs:
2 3 4 5 

def pyGFG ( a , n ) :
    mpp = { }
    for i in range ( n ) :
        num = a [ i ]
        for j in range ( 1 , n * j <= num ) :
            if num % j == 0 :
                if j != 1 :
                    if mpp . has_key ( j ) : mpp [ j ] = mpp [ j ] + 1
                    else : mpp [ j ] = 1
                if ( num / j ) != j :
                    if mpp . has_key ( num / j ) : mpp [ num / j ] = mpp [ num / j ] + 1
                    else : mpp [ num / j ] = 1
    maxi = 0
    for k , v in mpp . items ( ) :
        maxi = max ( v )
    for k , v in mpp . items ( ) :
        if v == maxi :
            print ( k , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 504
---> probID: codeforces_1146_B
---> inputs:
aaaaa
---> outputs:
aaaaa

def pycf1146B ( ) :
    import sys
    import string
    import re
    import doctest
    import tempfile
    import os
    import re
    import tempfile
    import tempfile
    import re
    import tempfile
    import tempfile
    import re
    import tempfile
    import tempfile
    import re
    import tempfile
    import tempfile
    import re
    import tempfile
    import re
    import tempfile
    import re
    import tempfile
    import re
    import tempfile
    import tempfile
    import re
    import tempfile
    import re
    import tempfile
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import re
    import tempfile
    import re
    import tempfile
    import re
    import re
    import re
    import re
    import tempfile
    import re
    import tempfile
    import re
    import tempfile
    import re
    import re
    import re
    import re
    import tempfile
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import tempfile
    import re
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import tempfile
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import tempfile
    import tempfile
    import re
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re
    import re
    import tempfile
    import re


---> console_out:
 
DIDN'T MATCH!! :(
 29%|██▉       | 504/1746 [00:12<00:30, 40.99it/s]

-------------------------------------


---> lineNum: 505
---> probID: codeforces_637_A
---> inputs:
5
1 3 2 2 1
---> outputs:
2

def voting ( ) :
    f = FScanner ( )
    out = open ( 'voting.txt' , 'w' )
    n = f . count ( '\n' )
    ans , max = 0 , 0
    a = [ 0 ] * 1000001
    for i in range ( n ) :
        b = f . count ( '\n' )
        a [ b ] += 1
        if a [ b ] > max :
            max = a [ b ]
            ans = b
    out . write ( ans )
    out . close ( )
    class FScanner :
        def readline ( self ) :
            s = ''
            next = ''
        def readline ( self ) :
            while not s . endswith ( '\n' ) :
                try :
                    s = s [ : - 1 ]
                except IndexError :
                    pass
            return s
        def readline ( self ) :
            return int ( next ( ) )
        def readline ( self ) :
            return long ( next ( ) )
    return FScanner ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 506
---> probID: geeksforgeeks_1181_A
---> inputs:

---> outputs:
Accepted
Not Accepted


def GFG ( str ) :
    if str [ 0 ] >= 'A' and str [ 0 ] <= 'Z' :
        return 1
    else :
        return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 507
---> probID: geeksforgeeks_1752_A
---> inputs:

---> outputs:
Average of 1 numbers is 10.0
Average of 2 numbers is 15.0
Average of 3 numbers is 20.0
Average of 4 numbers is 25.0
Average of 5 numbers is 30.0
Average of 6 numbers is 35.0


def GFG ( prev_avg , x , n ) :
    return ( prev_avg * n + x ) / ( n + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 508
---> probID: projecteuler_p050_A
---> inputs:

---> outputs:
997651

def p050 ( ) :
    print ( [ 'p050' , 'p051' , 'p052' , 'p053' , 'p054' , 'p055' , 'p056' , 'p057' , 'p058' , 'p059' , 'p0510' , 'p0511' , 'p0512' , 'p0513' , 'p0514' , 'p0515' , 'p0516' , 'p0517' , 'p0518' , 'p0519' , 'p0520' , 'p0521' , 'p0522' , 'p0522' , 'p0523' , 'p0524' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , 'p0526' , ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 509
---> probID: geeksforgeeks_5228_A
---> inputs:

---> outputs:
Length of lst is 5


def test_GFG ( ) :
    max = 0
    lst = [ 1 ]
    lst . sort ( )
    for i in range ( 1 , n ) :
        for j in range ( i ) :
            if arr [ i ] > arr [ j ] and lst [ i ] < lst [ j ] + 1 :
                lst [ i ] , lst [ j ] = lst [ j ] + 1
    for i in range ( n ) :
        if max < lst [ i ] :
            max = lst [ i ]
    return max


---> console_out:
 
DIDN'T MATCH!! :(
 29%|██▉       | 509/1746 [00:12<00:30, 41.21it/s]

-------------------------------------


---> lineNum: 510
---> probID: atcoder_ABC086_B
---> inputs:
1 21
---> outputs:
Yes

def main ( ) :
    import sys
    a = sys . argv [ 1 ]
    b = sys . argv [ 2 ]
    k = int ( math . log10 ( b ) ) + 1
    a = int ( a * math . pow ( 10 , k ) + b )
    yono = math . sqrt ( a )
    if yono - math . ceil ( yono ) == 0 :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 511
---> probID: geeksforgeeks_4236_A
---> inputs:

---> outputs:
[-1, 1, 2, 3, 4, -1, 6, -1, -1, 9]


def test_GFG ( ) :
    A = [ - 1 , - 1 , 6 , 1 , 9 , 3 , 2 , - 1 , 4 , - 1 ]
    G = [ [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] ]
    for i in range ( len ( A ) ) :
        if G [ i ] :
            A [ i ] = i
        else :
            A [ i ] = - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 512
---> probID: aizu_p02212_A
---> inputs:
2 1 3 4
---> outputs:
0

def main ( ) :
    import sys
    import os
    import time
    import random
    import string
    import doctest
    import tempfile
    global systemin
    global log
    global result
    global systemin
    global log
    global result
    global systemin
    global log
    global result
    global systemin
    global log
    global result
    systemin = sys . stdin . readline ( )
    sys . stdin . close ( )
    systemin = sys . stdin . readline ( )
    sys . stdin . close ( )
    result = sys . stdin . readline ( )
    sys . stdin . close ( )
    log = sys . stdout . readline ( )
    sys . stdout . close ( )
    systemin = sys . stdout . readline ( )
    sys . stdout . close ( )
    result = sys . stdout . readline ( )
    sys . stdout . close ( )
    systemin = sys . stdout . readline ( )
    sys . stdout . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 513
---> probID: geeksforgeeks_4846_A
---> inputs:

---> outputs:
Original List: 6 9 8 7 4 
New odd List: 3 9 5 7 23 

def GFG ( head_ref , new_data ) :
    def push ( head_ref , new_data ) :
        new_node = Node ( data = new_data , prev = None , next = ( head_ref , ) )
        if ( head_ref ) :
            ( head_ref , ) = ( head_ref , )
        ( head_ref , ) = new_node
        return head_ref
    def make_oddnode ( head_ref , A , n ) :
        ptr = head_ref
        next = None
        i = 0
        while ptr :
            next = ptr . next
            if ptr . data % 2 == 0 :
                ptr . data = A [ i ]
                i += 1
            ptr = next
        return head_ref
    def print_list ( head ) :
        while head :
            print ( head . data , end = ' ' )
            head = head . next
    def print_list ( head ) :
        arr = [ 3 , 5 , 23 , 17 , 1 ]
        head = push ( head , 4 )
        head = push ( head , 7 )
        head = push ( head , 8 )
        head = push ( head , 9 )
        head = push ( head , 6 )
        n = len ( arr )
        print ( "Original List: " )
        print_list ( head )
        print ( )
        head = make_oddnode ( head , arr , n )
        print ( "New odd List: " )
        print_list ( head )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576713091_2245/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 514
---> probID: aizu_p00070_A
---> inputs:
3 10
3 1
---> outputs:
8
0

def import ( ) :
    f = sys . stdin
    line = ''
    dp = [ [ 11 , 331 ] , [ 331 , 11 ] , [ 331 , 11 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ 331 , 331 ] , [ ] , [ ] , [ ] ]
    for i in range ( 11 , 331 + 1 ) :
        f . append

---> console_out:
 
DIDN'T MATCH!! :(
 29%|██▉       | 514/1746 [00:12<00:29, 41.08it/s]

-------------------------------------


---> lineNum: 515
---> probID: geeksforgeeks_335_A
---> inputs:

---> outputs:
5


def genmodular ( n ) :
    mod = 1000000007
    fact = 1
    for i in range ( 2 , n + 1 ) :
        res = res ** i
    return res
    def nCr ( n , r ) :
        return fact ( n ) / ( fact ( r ) * fact ( n - r ) )
    def powmod ( a , n ) :
        if n == 0 :
            return 1
        pt = powmod ( a , n / 2 )
        pt = ( pt * pt ) % mod
        if n % 2 == 1 :
            return ( pt * a ) % mod
        else :
            return pt
    def CountSubset ( arr , n ) :
        ans = powmod ( 2 , n - 1 )
        arr . sort ( )
        for i in range ( n ) :
            j = i + 1
            while j < n and arr [ j ] == arr [ i ] :
                r = n - 1 - j
                l = i
                ans = ( ans + nCr ( l + r , l ) ) % mod
                j += 1
        return ans
    def main ( ) :
        arr = [ 2 , 3 , 2 ]
        n = len ( arr )
        print ( CountSubset ( arr , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 516
---> probID: geeksforgeeks_1206_A
---> inputs:

---> outputs:
5


def GFG ( ) :
    MAX = 1000001
    primeUpto = [ 0 ] * MAX
    SieveOfEratosthenes ( )
    isPrime = [ 1 ] * MAX
    for i in range ( MAX ) :
        isPrime [ i ] = 1
    isPrime [ 0 ] = isPrime [ 1 ] = 0
    for i in range ( 2 , i * MAX ) :
        if isPrime [ i ] == 1 :
            for j in range ( i * 2 , MAX , i ) :
                isPrime [ j ] = 0
    for i in range ( 1 , MAX ) :
        primeUpto [ i ] = primeUpto [ i - 1 ]
        if isPrime [ i ] == 1 :
            primeUpto [ i ] += 1
    return primeUpto


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 517
---> probID: geeksforgeeks_3222_A
---> inputs:

---> outputs:
1


def GFG ( n ) :
    i = 2
    while ( i * i ) < n and ( n % i ) > 0 :
        i += 1
    if ( i * i ) > n :
        i = n
    return ( 1 + ( n - i ) / 2 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576713189_6902/main.py", line 10
    
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 518
---> probID: atcoder_ABC122_C
---> inputs:
8 3
ACACTACG
3 7
2 3
1 8
---> outputs:
2
0
3

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'a' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """usage:SPACETOKEN%sSPACETOKEN[-a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a|--a"""

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576713212_6349/main.py", line 21
    
                                                    ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 519
---> probID: codeforces_1096_A
---> inputs:
3
1 10
3 14
1 10
---> outputs:
['1 7\n3 9\n5 10', '1 2\n3 6\n1 2\n']

def test_A_find_divisible ( ) :
    f = symbols ( 'f' , integer = True , positive = True )
    t = symbols ( 't' , integer = True , positive = True )
    l , r = symbols ( 'l,r' , integer = True , positive = True )
    assert A . find_divisible ( f , t ) == ( l , r )
    assert A . find_divisible ( f , t , positive = True ) == ( l , r )
    assert A . find_divisible ( f , t , negative = True ) == ( l , r )
    assert A . find_divisible ( f , t , negative = True ) == ( l , r )
    assert A . find_divisible ( f , t , positive = True ) == ( l , r )
    assert A . find_divisible ( f , t , negative = True ) == ( l , r )
    assert A . find_divisible ( f , t , negative = True ) == ( l , r )
    assert A . find_divisible ( f , t , positive = True ) == ( l , r )
    assert A . find_divisible ( f , t , negative = True ) == ( l , r )
    assert A . find_divisible ( f , t , negative = True ) == ( l , r )
    assert A . find_divisible ( f , t , positive = True ) == ( l , r )
    assert A . find_divisible ( f , t , positive = True ) == ( l , r )
    assert A . find_divisible ( f , t , negative = True ) == ( l , r )
    assert A . find_divisible ( f , t , negative = True ) == ( l , r )
    assert A . find_divisible ( f , t , positive = True ) == ( l , r )
    assert A . find_divisible ( f , t , positive

---> console_out:
 
DIDN'T MATCH!! :(
 30%|██▉       | 519/1746 [00:12<00:29, 41.14it/s]

-------------------------------------


---> lineNum: 520
---> probID: projecteuler_p249_A
---> inputs:

---> outputs:
9275262564250418

def p249 ( ) :
    print ( [ ] )
    def run ( ) :
        is_prime = library . list_primality ( LIMIT * LIMIT / 2 )
        num_subsets = [ 1 ] * LIMIT * LIMIT / 2
        max_sum = 0
        for i in range ( LIMIT ) :
            if not is_prime [ i ] :
                continue
            max_sum += i
            for j in range ( max_sum , i - i , - 1 ) :
                temp = num_subsets [ j ] + num_subsets [ j - i ]
                if temp < MODULUS :
                    num_subsets [ j ] = temp
                else :
                    num_subsets [ j ] = temp - MODULUS
        sum = 0
        for i in range ( len ( num_subsets ) ) :
            if is_prime [ i ] :
                sum = ( sum + num_subsets [ i ] ) % MODULUS
        return str ( sum )
    return run


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 521
---> probID: geeksforgeeks_2286_A
---> inputs:

---> outputs:
1 2 2 4 2 4 4 8 2 4 4 8 4 8 8 16 

def GFG ( row_num ) :
    count = 0
    while row_num > 0 :
        count += row_num & 1
        row_num >>= 1
    return ( 1 << count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 522
---> probID: geeksforgeeks_3425_A
---> inputs:

---> outputs:
Following is minimal number of change for 93 : 50 20 20 2 1 

def test_GFG ( ) :
    deno = [ 1 , 2 , 5 , 10 , 20 , 50 , 100 , 500 , 1000 ]
    n = len ( deno )
    ans = [ ]
    for i in range ( n - 1 , - 1 , - 1 ) :
        while V >= deno [ i ] :
            V -= deno [ i ]
            ans . append ( deno [ i ] )
    for i in range ( len ( ans ) ) :
        print ( ans [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576713308_5248/main.py", line 3
    ''' p

SyntaxError: EOF while scanning triple-quoted string literal


-------------------------------------


---> lineNum: 523
---> probID: projecteuler_p052_A
---> inputs:

---> outputs:
142857

def p_p052 ( p ) :
    ''' p

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576713332_2116/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 524
---> probID: geeksforgeeks_3822_A
---> inputs:

---> outputs:
15


def import ( ) :
    import numpy
    class solution :
        def count ( arr , n , x ) :
            if x == 1 :
                ans = long ( math . pow ( 2 , n ) - 1 )
                return ans
            count = 0
            for i in range ( n ) :
                if arr [ i ] % x == 0 :
                    count += 1
            ans = long ( math . pow ( 2 , count ) - 1 )
            return ans
        def __repr__ ( ) :
            return '%s(%s)' % ( solution ( ) . __name__ , solution ( ) . __qualname__ )
    arr = [ 2 , 4 , 3 , 5 ]
    n = len ( arr )
    x = 1
    return '%s(%s)' % ( solution ( ) . __name__ , solution ( ) . __qualname__ )


---> console_out:
 
DIDN'T MATCH!! :(
 30%|███       | 524/1746 [00:12<00:29, 41.45it/s]

-------------------------------------


---> lineNum: 525
---> probID: geeksforgeeks_676_A
---> inputs:

---> outputs:
6


def test_GFG ( ) :
    arr = [ 1 , 2 , 3 , 6 ]
    n = len ( arr )
    assert find_ele ( arr , n ) == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 526
---> probID: geeksforgeeks_2689_A
---> inputs:

---> outputs:
d


def GFG ( str_a , str_b ) :
    m1 = [ ]
    for i in range ( 256 ) :
        m1 . append ( str_b [ i ] )
    for i in range ( 256 ) :
        m1 . append ( str_a [ i ] )
    for i in range ( len ( m1 ) ) :
        if m1 [ i ] == 1 :
            return chr ( i )
    return ord ( '\0' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576713402_5380/main.py", line 39
    elif a == ' - - all - yes - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no -
                                                                                                                                                                                                                                                               ^
SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 527
---> probID: aizu_p00803_A
---> inputs:
100
64
50
20
151200
0
---> outputs:
99
64
47
20
151200

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , "a:b:" )
    except getopt . error as msg :
        print ( msg )
        return
    for o , a in opts :
        if o == '-a' :
            if a == '--all' :
                print ( "all" )
            elif a == '--all-yes' :
                print ( "all" )
            elif a == '--all-no' :
                print ( "all" )
            elif a == '--all-yes-no' :
                print ( "all" )
            elif a == '--all-yes-no' :
                print ( "all" )
            elif a == '--all-no-yes' :
                print ( "all" )
            elif a == '--all-yes-no' :
                print ( "all" )
            elif a == '--all-yes-no' :
                print ( "all" )
            elif a == '--all-yes-no-no' :
                print ( "all" )
            elif a == '--all-yes-no-no' :
                print ( "all" )
            elif a == '--all-yes-no-no-yes' :
                print ( "all" )
            elif a == '--all-yes-no-no' :
                print ( "all" )
            elif a == '--all-yes-no-no' :
                print ( "all" )
            elif a == '--all-yes-no-no-no-yes' :
                print ( "all" )
            elif a == ' - - all - yes - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no - no -

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576713426_3375/main.py", line 15
    bfs :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 528
---> probID: aizu_p00875_A
---> inputs:
2
a bb
b aa
a
bbbbbbbb
1
a aa
a
aaaaa
3
ab aab
abc aadc
ad dee
abc
deeeeeeeec
10
a abc
b bai
c acf
d bed
e abh
f fag
g abe
h bag
i aaj
j bbb
a
abacfaabe
0
---> outputs:
3
-1
7
4

def main ( ) :
    import sys
    while True :
        n = input ( )
        if n == '' :
            sys . exit ( )
        conv = [ ]
        for i in range ( n ) :
            conv . append ( i )
        before = input ( )
        after = input ( )
        seq = [ before ]
        depth = 0
        convertable = False
        bfs :
            while not seq :
                depth += 1
                size = len ( seq )
                for q in range ( size ) :
                    poll = seq . pop ( q )
                    for i in range ( conv ) :
                        test = poll . replace ( conv [ i ] , conv [ i ] )
                        if test == poll :
                            continue
                        elif test == after :
                            convertable = True
                            break
                        elif len ( test ) <= len ( after ) :
                            seq . append ( test )
            if convertable :
                print ( depth )
            else :
                print ( - 1 )
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576713450_8038/main.py", line 1
    def pythontools . solve ( HastaLaVistaLa ) :
                    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 529
---> probID: codeforces_296_A
---> inputs:
1
1
---> outputs:
YES

def pythontools . solve ( HastaLaVistaLa ) :
    import sys
    import getopt
    scn = sys . stdin
    s = [ ]
    out = [ ]
    def main ( ) :
        t = 1
        for tests in range ( t ) :
            solve ( )
        out . append ( "" )
        out . append ( "" )
    def solve ( ) :
        n = scn . readline ( )
        a = [ scn . readline ( ) for i in range ( n ) ]
        freq = [ 0 ] * 1010
        can = ( n + 1 )
        for i in a :
            freq [ i ] += 1
            if freq [ i ] > can / 2 :
                s . append ( "NO" )
                return
        s . append ( "YES" )
    return s


---> console_out:
 
DIDN'T MATCH!! :(
 30%|███       | 529/1746 [00:12<00:29, 41.72it/s]

-------------------------------------


---> lineNum: 530
---> probID: geeksforgeeks_5084_A
---> inputs:

---> outputs:
17


def AAB ( arr1 , n1 , arr2 , n2 ) :
    max1 = int ( 0 )
    max2 = int ( 0 )
    for i in range ( n1 ) :
        if arr1 [ i ] > max1 :
            max1 = arr1 [ i ]
    for i in range ( n2 ) :
        if arr2 [ i ] > max2 :
            max2 = arr2 [ i ]
    return max1 + max2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 531
---> probID: geeksforgeeks_3166_A
---> inputs:

---> outputs:
71391


def GFG ( op , n , k ) :
    i , count = 0 , 0
    nVal = 0
    min = sys . maxint
    for i in range ( n ) :
        nVal += op [ i ]
        min = min ( min , nVal )
        if ( k + nVal ) <= 0 :
            return ( i + 1 , - 1 )
    if nVal >= 0 :
        return ( - 1 , 0 )
    times = ( k - abs ( min ) ) / abs ( nVal )
    k = ( k - ( times * abs ( nVal ) ) )
    count = ( times * n )
    while k > 0 :
        for i in range ( n ) :
            k = k + op [ i ]
            count += 1
            if k <= 0 :
                break
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 532
---> probID: geeksforgeeks_4717_A
---> inputs:

---> outputs:
9 100 8 35 

def GFG ( x ) :
    pref = np . zeros ( 100010 )
    is_perfect_cube = np . round ( np . cbrt ( x ) )
    if cr * cr * cr == float ( x ) :
        return x
    return 0
    def compute ( ) :
        for i in range ( 1 , 100000 ) :
            pref [ i ] = pref [ i - 1 ] + is_perfect_cube ( i )
    def print_sum ( L , R ) :
        sum = pref [ R ] - pref [ L - 1 ]
        print ( sum , end = ' ' )
    def main ( ) :
        compute ( )
        Q = 4
        arr = [ [ 1 , 10 ] , [ 1 , 100 ] , [ 2 , 25 ] , [ 4 , 50 ] ]
        for i in range ( Q ) :
            print_sum ( arr [ i ] [ 0 ] , arr [ i ] [ 1 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 533
---> probID: aizu_p00277_A
---> inputs:
3 4 600
3 100 5
1 200 10
2 400 20
3 500 20
---> outputs:
1

def main ( ) :
    import sys
    import getopt
    global N , R , L , po , c
    now = 0
    index = 0
    for line in sys . stdin :
        line = line . strip ( )
        d = int ( line ) - 1
        t = int ( line )
        x = int ( line )
        c [ index ] += t - now
        po [ d ] += x
        now = t
        if x > 0 :
            if d == index :
                continue
            if po [ index ] < po [ d ] :
                index = d
            elif po [ index ] == po [ d ] and index > d :
                index = d
        else :
            if d != index :
                continue
            maxp = int ( line )
            for j in range ( N ) :
                if maxp < po [ j ] :
                    maxp = po [ j ]
                    index = j
    c [ index ] += L - now
    ans = 0
    max = 0
    for i in range ( N ) :
        if c [ i ] > max :
            max = c [ i ]
            ans = i
    print ( ans + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 534
---> probID: geeksforgeeks_1722_A
---> inputs:

---> outputs:
3th Centered cube number: 91
10th Centered cube number: 2331


def test_GFG ( ) :
    n = 3
    print ( n , "th Centered" , "cube number: " , repr ( n ) )
    assert centered_cube ( n ) == n
    n = 10
    print ( n , "th Centered" , "cube number: " , repr ( n ) )
    assert centered_cube ( n ) == n


---> console_out:
 
DIDN'T MATCH!! :(
 31%|███       | 534/1746 [00:12<00:29, 41.20it/s]  File "./junk/1692576713598_9811/main.py", line 18
    
                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 535
---> probID: codeforces_1369_B
---> inputs:
5
10
0001111111
4
0101
8
11001101
10
1110000000
1
1
---> outputs:
0001111111
001
01
0
1

def   pre132 ( ) :
# import sys, os, re, string, tokenize, __builtin__
# import time, time, datetime, datetime, datetime, time, time
# import sys, os, re, string, __builtin__
# import time, time, datetime, datetime, time, time
# import sys, re, string, __builtin__
# import time, time, datetime, datetime, time, time ,   time ,   time
# import re, string, __builtin__
# import sys, re, time, datetime, datetime, datetime, time, time, time, time
# import re, string, __builtin__
# import re, time, datetime, datetime, datetime, time, time, time, time
# import re, string, __builtin__
# import re, time, datetime, datetime, datetime, time, time, time, time ,   time
# import re, string, __builtin__
# import re, time, datetime, datetime, datetime, datetime, datetime, time, time, time, time, time, time, time, time, time, time
# import re, string, __builtin__
# import re, time, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime, datetime

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 536
---> probID: geeksforgeeks_2638_A
---> inputs:

---> outputs:
32


def test_GFG ( ) :
    nth , i = symbols ( 'n i' , integer = True , positive = True )
    for n in [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 ] :
        assert nth_term ( n , i ) == nth


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 537
---> probID: geeksforgeeks_3160_A
---> inputs:

---> outputs:
True
False
True
False


def test_ispower ( ) :
    assert ispower ( 10 , 1 ) is True
    assert ispower ( 1 , 20 ) is True
    assert ispower ( 2 , 128 ) is True
    assert ispower ( 2 , 30 ) is True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 538
---> probID: geeksforgeeks_2048_A
---> inputs:

---> outputs:
1
0
1
0


def test_power ( ) :
    assert is_power ( 10 , 1 )
    assert is_power ( 1 , 20 )
    assert is_power ( 2 , 128 )
    assert is_power ( 2 , 30 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 539
---> probID: geeksforgeeks_692_A
---> inputs:

---> outputs:
200


def test_GFG ( ) :
    arr = [ 4 , 21 , 5 , 3 , 8 ]
    n = len ( arr )
    assert minimum_value ( arr , n , k ) == 0


---> console_out:
 
DIDN'T MATCH!! :(
 31%|███       | 539/1746 [00:13<00:28, 41.63it/s]

-------------------------------------


---> lineNum: 540
---> probID: aizu_p00303_A
---> inputs:
4
1 lock 1
2 lock 2
1 wait 2
2 wait 1
---> outputs:
1

def main ( ) :
    import sys
    N = int ( sys . argv [ 1 ] )
    vs = set ( )
    indeg = { }
    outdeg = { }
    for i in range ( N ) :
        u , d , rel = 'u' , 'd' , 'rel'
        u = 'u' + u
        d = 'd' + d
        vs . add ( u )
        vs . add ( d )
        indeg [ u ] = set ( )
        indeg [ d ] = set ( )
        outdeg [ u ] = set ( )
        outdeg [ d ] = set ( )
        if rel == 'lock' :
            indeg [ u ] . add ( d )
            outdeg [ d ] . add ( u )
        else :
            indeg [ d ] . add ( u )
            outdeg [ u ] . add ( d )
    que = Queue ( )
    for v in indeg :
        if len ( indeg [ v ] ) == 0 :
            que . put ( v )
    while not que . empty ( ) :
        u = que . get ( )
        for v in outdeg [ u ] :
            indeg [ v ] . remove ( u )
            if len ( indeg [ v ] ) == 0 :
                que . put ( v )
        vs . remove ( u )
    print ( len ( vs ) if len ( vs ) > 0 else 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 541
---> probID: geeksforgeeks_3591_A
---> inputs:

---> outputs:
32


def GFG ( N ) :
    E = ( N * ( N - 1 ) ) / 2
    if N == 1 :
        return 0
    return int ( pow ( 2 , E - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 542
---> probID: geeksforgeeks_1082_A
---> inputs:

---> outputs:
2


def GFG ( a , b ) :
    if a == 0 or b == 0 :
        return 0
    if a == b :
        return a
    if a > b :
        return __gcd ( a - b , b )
    return __gcd ( a , b - a )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 543
---> probID: aizu_p00507_A
---> inputs:
3
2
7
5
---> outputs:
52

def main ( ) :
    import sys
    import getopt
    global n
    global a
    global k
    global v
    n = len ( sys . argv )
    a = min ( n , 4 )
    num = [ ]
    for i in range ( n ) :
        num . append ( sys . argv [ i ] )
    num . sort ( )
    ans = [ ]
    for i in range ( a ) :
        for j in range ( a ) :
            if i == j :
                continue
            ans . append ( int ( str ( num [ i ] ) + str ( num [ j ] ) ) )
        ans . sort ( )
        print ( ans [ 2 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 544
---> probID: codeforces_1203_B
---> inputs:
5
1
1 1 10 10
2
10 5 2 10 1 1 2 5
2
10 5 1 10 5 1 1 1
2
1 1 1 1 1 1 1 1
1
10000 10000 10000 10000
---> outputs:
YES
YES
NO
YES
YES

def run ( Z ) :
    f = open ( Z , 'r' )
    op = [ ]
    stz = [ ]
    T = int ( f . readline ( ) )
    while T :
        n = int ( f . readline ( ) )
        stz = f . readline ( )
        a = [ int ( stz . split ( ) [ 0 ] ) for i in range ( n << 2 ) ]
        yes = True
        a . sort ( )
        area = a [ 0 ] * a [ - 1 ]
        for i in range ( n ) :
            lf , rg = i * 2 , 4 * n - ( i * 2 ) - 1
            if ( a [ lf ] != a [ lf + 1 ] ) or ( a [ rg ] != a [ rg - 1 ] ) or ( a [ lf ] * a [ rg ] != area ) :
                yes = False
                break
        if yes :
            op . append ( 'YES\n' )
        else :
            op . append ( 'NO\n' )
    print ( '' . join ( op ) )


---> console_out:
 
DIDN'T MATCH!! :(
 31%|███       | 544/1746 [00:13<00:28, 41.61it/s]

-------------------------------------


---> lineNum: 545
---> probID: geeksforgeeks_3391_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    mp = { }
    for i in range ( n ) :
        if mp . has_key ( i ) :
            mp [ i ] = mp [ i ] + 1
        else :
            mp [ i ] = 1
    ans = 0
    for i , frequency in mp . items ( ) :
        x = i
        frequency = frequency . value
        if x <= frequency :
            ans += ( frequency - x )
        else :
            ans += frequency
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576713859_5137/main.py", line 1
    def delete_n ( inp , del ) :
                         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 546
---> probID: geeksforgeeks_1197_A
---> inputs:

---> outputs:
num_after_deleting_from_starting 124
num_after_deleting_from_ending 134


def delete_n ( inp , del ) :
    in_num = 1234
    inp = str ( inp )
    del in_num
    print ( 'num_after_deleting_from_starting ' + str ( from_start ( inp , del ) ) )
    print ( 'num_after_deleting_from_ending ' + str ( from_end ( inp , del ) ) )
    def from_start ( inp , del ) :
        try :
            inp1 = inp [ : del - 1 ]
            inp2 = inp [ del : len ( inp ) ]
            return inp1 + inp2
        except :
            return 'Check Input'
    def from_end ( inp , del ) :
        try :
            inp1 = inp [ : del ]
            inp2 = inp [ len ( inp ) - del + 1 : ]
            return inp1 + inp2
        except :
            return 'Check Input'
    return from_start , from_end


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 547
---> probID: geeksforgeeks_2384_A
---> inputs:

---> outputs:
199


def test_GFG ( ) :
    x = 0
    for n in range ( n , - 1 , - 1 ) :
        no = x
        prev_dig = 11
        flag = True
        while no != 0 :
            if prev_dig < no % 10 :
                flag = False
                break
            prev_dig = no % 10
            no //= 10
        if flag == True :
            break


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 548
---> probID: codeforces_459_A
---> inputs:
0 0 0 1
---> outputs:
1 0 1 1

def main ( * args ) :
    import sys
    f = sys . stdout
    x1 , y1 , x2 , y2 = args
    if x1 == x2 :
        dif = abs ( y1 - y2 )
        f . write ( ( x1 + dif ) + ' ' + y1 + ' ' + ( x1 + dif ) + ' ' + y2 )
    elif y1 == y2 :
        dif = abs ( x1 - x2 )
        f . write ( ( x1 , y1 + dif ) + ' ' + ( x2 , y2 + dif ) )
    elif abs ( x1 - x2 ) == abs ( y1 - y2 ) :
        f . write ( x1 + ' ' + y2 + ' ' + x2 + ' ' + y1 )
    else :
        f . write ( - 1 )
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 549
---> probID: codeforces_79_A
---> inputs:
2 2
---> outputs:
Ciel

def get_bus_game ( x_needed , x_available , y_needed , y_available ) :
    f = open ( "/proc/meminfo" , "r" )
    x = int ( f . readline ( ) )
    y = int ( f . readline ( ) )
    turn = 0
    while True :
        if turn % 2 == 0 :
            if can_take ( 2 , x , 2 , y ) :
                x -= 2
                y -= 2
            elif can_take ( 1 , x , 12 , y ) :
                x -= 1
                y -= 12
            elif can_take ( 0 , x , 22 , y ) :
                y -= 22
            else :
                print ( "Hanako" )
                return
        else :
            if can_take ( 0 , x , 22 , y ) :
                y -= 22
            elif can_take ( 1 , x , 12 , y ) :
                x -= 1
                y -= 12
            elif can_take ( 2 , x , 2 , y ) :
                x -= 2
                y -= 2
            else :
                print ( "Ciel" )
                return
        turn += 1


---> console_out:
 
DIDN'T MATCH!! :(
 31%|███▏      | 549/1746 [00:13<00:28, 41.62it/s]

-------------------------------------


---> lineNum: 550
---> probID: codeforces_445_A
---> inputs:
1 1
.
---> outputs:
B

def test_DZYLovesChessboard ( ) :
    f = FastReader ( )
    out = open ( './junk/1692576713956_8238/input.txt' , 'w' )
    n , m = f . read ( ) . split ( '\n' )
    arr = [ ]
    for i in range ( n ) :
        arr . append ( f . read ( ) . split ( ) [ 0 ] )
    for i in range ( n ) :
        w = i % 2 == 0
        for j in range ( m ) :
            w = not w
            if arr [ i ] [ j ] == '.' :
                out . write ( w and 'W' or 'B' )
            else :
                out . write ( '-' )
        out . write ( '\n' )
    out . close ( )
    class FastReader :
        f = open ( './junk/1692576713956_8238/input.txt' , 'r' )
        st = [ ]
        def readline ( ) :
            while st == [ ] or not st :
                try :
                    st . append ( f . readline ( ) )
                except StopIteration :
                    pass
            return st
        def next ( ) :
            return None
        def readline ( ) :
            return ''
        def next ( ) :
            return ''
        def readline ( ) :
            return ''
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 551
---> probID: codeforces_327_A
---> inputs:
5
1 0 0 1 0
---> outputs:
4

def test_flippinggame ( ) :
    import sys
    if sys . platform == 'win32' :
        n = int ( sys . argv [ 1 ] )
        arr = [ ]
        for i in range ( n ) :
            arr . append ( i )
        max = int ( sys . argv [ 1 ] )
        for i in range ( n ) :
            for j in range ( i , n ) :
                x = 0
                brr = [ ]
                for k in arr :
                    brr . append ( k )
                for k in range ( i , j ) :
                    if brr [ k ] == 0 :
                        brr . append ( 1 )
                    else :
                        brr . append ( 0 )
                count = checKNo ( brr )
                if count > max :
                    max = count
        if n == 1 :
            if arr [ 0 ] == 1 :
                assert 0
            else :
                assert 1
        else :
            assert max == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 552
---> probID: geeksforgeeks_417_A
---> inputs:

---> outputs:
5


def test_countdistict_subarray ( ) :
    """
 Test countdistic subarray.
 """
    vis = { }
    for key in range ( n ) :
        vis [ arr [ key ] ] = 1
    k = len ( vis )
    vis . clear ( )
    ans , right , window = 0 , 0 , 0 , 0
    for left in range ( n ) :
        while right < n and window < k :
            vis [ arr [ right ] ] = vis [ arr [ right ] ] + 1
            if vis [ arr [ right ] ] == 1 :
                window += 1
            right += 1
        if window == k :
            ans += ( n - right + 1 )
        vis [ arr [ left ] ] = vis [ arr [ left ] ] - 1
        if vis [ arr [ left ] ] == 0 :
            window -= 1
    return ans , right , window


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 553
---> probID: codeforces_608_A
---> inputs:
3 7
2 1
3 8
5 2
---> outputs:
11

def test_cv_max ( ) :
    f = np . array ( [ 1 , 2 , 3 ] )
    s = np . array ( [ 1 , 2 , 3 ] )
    max = 0
    while n > 0 :
        f = f [ : n ]
        t = f [ n : ]
        if max < f + t :
            max = f + t
    o = [ max ( max , s ) ]
    assert o == [ max ( max , s ) ]
    assert o == [ max ( max , s ) ]
    assert o == [ max ( max , s ) , max ( max , s ) ]
    assert o == [ max ( max , s ) , max ( max , s ) , max ( max , s ) ]
    assert o == [ max ( max , s ) , max ( max , s ) , max ( max , s ) , max ( max , s ) ]
    assert o == [ max ( max , s ) , max ( max , s ) , max ( max , s ) , max ( max , s ) ]
    assert o == [ max ( max , s ) , max ( max , s ) , max ( max , s ) , max ( max , s ) ]
    assert o == [ max ( max , s ) , max ( max , s ) , max ( max , s ) , max ( max , s ) , max ( max , s ) ]
    assert o == [ max ( max , s ) , max ( max , s ) , max ( max , s ) , max ( max , s ) , max ( max , s ) ]
    assert o == [ max ( max , s ) , max ( max , s ) , max ( max , s ) , max ( max , s ) , max ( max , s ) , max ( max , s ) , max ( max , s ) , max ( max , s ) ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 554
---> probID: geeksforgeeks_1395_A
---> inputs:

---> outputs:
4


def pyGFG ( n ) :
    if n <= 1 :
        return False
    if n <= 3 :
        return True
    if n % 2 == 0 or n % 3 == 0 :
        return False
    for i in range ( 5 , n * i <= n , 2 ) :
        if n % i == 0 or n % ( i + 2 ) == 0 :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(
 32%|███▏      | 554/1746 [00:13<00:28, 41.52it/s]

-------------------------------------


---> lineNum: 555
---> probID: geeksforgeeks_3856_A
---> inputs:

---> outputs:
1


def GFG ( n ) :
    count = 0
    while n :
        n &= ( n - 1 )
        count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 556
---> probID: geeksforgeeks_3130_A
---> inputs:

---> outputs:
50 40 30 20 10 60 70 80 90 100 

def reverse_k_element_queue ( k ) :
    queue = [ ]
    queue . append ( 0 )
    queue . append ( 1 )
    queue . append ( 2 )
    queue . append ( 3 )
    queue . append ( 4 )
    queue . append ( 5 )
    queue . append ( 6 )
    queue . append ( 7 )
    queue . append ( 8 )
    queue . append ( 9 )
    queue . append ( 10 )
    queue . append ( 11 )
    queue . append ( 12 )
    queue . append ( 13 )
    queue . append ( 14 )
    queue . append ( 15 )
    queue . append ( 16 )
    queue . append ( 17 )
    queue . append ( 18 )
    queue . append ( 19 )
    queue . append ( 20 )
    queue . append ( 21 )
    queue . append ( 22 )
    queue . append ( 23 )
    queue . append ( 24 )
    queue . append ( 25 )
    queue . append ( 26 )
    queue . append ( 27 )
    queue . append ( 28 )
    queue . append ( 29 )
    queue . append ( 30 )
    queue . append ( 31 )
    queue . append ( 32 )
    queue . append ( 33 )
    queue . append ( 34 )
    queue . append ( 35 )
    queue . append ( 36 )
    queue . append ( 37 )
    queue . append ( 38 )
    queue . append ( 39 )
    queue . append ( 40 )
    queue . append ( 41 )
    queue . append ( 42 )
    queue . append ( 43 )
    queue . append ( 44 )
    queue . append ( 45 )
    queue . append ( 46 )
    queue . append ( 47 )
    queue . append ( 48 )
    queue . append ( 49 )
    queue . append ( 50 )
    queue . append ( 51 )
    queue . append ( 52 )
    queue . append ( 53 )
    queue . append ( 54 )
    queue . append ( 55 )
    queue . append ( 56 )
    queue . append ( 57 )
    queue . append ( 58 )
    queue . append ( 59 )
    queue . append ( 60 )
    queue . append ( 61 )
    queue . append ( 62 )
    queue . append ( 63 )
    queue . append ( 64 )
    queue . append ( 65 )
    queue . append ( 66 )
    queue . append ( 67 )
    queue . append ( 72 )
    queue . append ( 72 )
    queue . append

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 557
---> probID: codeforces_1672_A
---> inputs:
2
4
2 4 2 1
1
1
---> outputs:
errorgorn
maomao90

def ideone ( ) :
    import sys
    import getopt
    n = int ( sys . argv [ 1 ] )
    for i in range ( n ) :
        sum = - int ( sys . argv [ i ] )
        for x in sys . argv [ i + 1 : ] . strip ( ) . split ( ) :
            sum += int ( x )
        if sum % 2 == 0 :
            print ( 'maomao90' )
        else :
            print ( 'errorgorn' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 558
---> probID: geeksforgeeks_4727_A
---> inputs:

---> outputs:
15


def GFG ( k ) :
    if k == 1 :
        return 2
    if ( ( k + 1 ) & k ) == 0 :
        return k // 2
    return 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576714175_3751/main.py", line 1
    def class Solution ( num ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 559
---> probID: leetcode_367_A
---> inputs:

---> outputs:
true

def class Solution ( num ) :
    low = 1
    high = num
    while low <= high :
        mid = ( low + high ) >> 1
        if mid * mid == num :
            return True
        elif mid * mid < num :
            low = int ( mid + 1 )
        else :
            high = int ( mid - 1 )
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 32%|███▏      | 559/1746 [00:13<00:28, 41.46it/s]

-------------------------------------


---> lineNum: 560
---> probID: atcoder_ABC047_A
---> inputs:
10 30 20
---> outputs:
Yes

def main ( ) :
    import sys
    a = sys . argv [ 1 ]
    b = sys . argv [ 2 ]
    c = sys . argv [ 3 ]
    result = "No"
    if max ( a , max ( b , c ) ) * 2 == a + b + c :
        result = "Yes"
    print ( result )
    class Scanner :
        def __init__ ( self , f ) :
            self . f = f
        def scan ( self , f ) :
            self . f = self . f . read ( )
        def readline ( self ) :
            return self . f . readline ( )
        def readline ( self ) :
            return self . f . readline ( )
        def readline ( self ) :
            return self . f . readline ( )
        def readline ( self ) :
            return self . f . readline ( )
    return Scanner ( sys . stdin )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 561
---> probID: codeforces_134_A
---> inputs:
5
1 2 3 4 5
---> outputs:
1
3

def test_problem_5 ( ) :
    input = np . array ( [ 1 , 2 , 3 ] )
    n1 = len ( input )
    arr = [ ]
    sum = 0
    for i in range ( n1 ) :
        n2 = input [ i ]
        arr . append ( n2 )
        sum += float ( arr [ i ] )
    summ = sum
    summ /= float ( n1 )
    nos = 0
    for i in range ( len ( arr ) ) :
        if arr [ i ] == summ :
            nos += 1
    print ( nos )
    for i in range ( n1 ) :
        if float ( arr [ i ] ) == summ :
            print ( ( i + 1 ) , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576714247_9291/main.py", line 19
    
                                                                                                                                    ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 562
---> probID: aizu_p02264_A
---> inputs:
5 100
p1 150
p2 80
p3 200
p4 350
p5 20
---> outputs:
p2 180
p5 400
p1 450
p3 550
p4 800

def main ( ) :
    parser = argparse . ArgumentParser ( description = 'ProcessSPACETOKENQueueSPACETOKENexample' )
    parser . add_argument ( 'size' , type = int , help = 'SizeSPACETOKENofSPACETOKENtheSPACETOKENqueue.' )
    parser . add_argument ( 'quantum' , type = int , help = 'quantumSPACETOKENofSPACETOKENtheSPACETOKENqueue.' )
    parser . add_argument ( '--sum' , type = int , help = 'SumSPACETOKENofSPACETOKENtheSPACETOKENqueue.' )
    parser . add_argument ( '--queue' , type = int , help = 'QueueSPACETOKENtoSPACETOKENprocess.' )
    parser . add_argument ( '--queue-name' , type = str , help = 'QueueSPACETOKENnameSPACETOKENtoSPACETOKENprocess.' )
    parser . add_argument ( '--queue-name' , type = str , help = 'QueueSPACETOKENnameSPACETOKENtoSPACETOKENprocessSPACETOKENto.' )
    parser . add_argument ( '--queue-name' , type = str , help = 'QueueSPACETOKENnameSPACETOKENtoSPACETOKENprocessSPACETOKENto.' )
    parser . add_argument ( '--queue-name' , type = str , help = 'QueueSPACETOKENnameSPACETOKENtoSPACETOKENprocessSPACETOKENto.' )
    parser . add_argument ( '--queue-name' , type = str , help = 'QueueSPACETOKENnameSPACETOKENtoSPACETOKENprocessSPACETOKENto.' )
    parser . add_argument ( '--queue-name' , type = str , help = 'QueueSPACETOKENnameSPACETOKENtoSPACETOKENprocessSPACETOKENto.' )
    parser . add_argument ( '--queue-name' , type = str , help = 'QueueSPACETOKENnameSPACETOKENtoSPACETOKENprocessSPACETOKENto.' )
    parser . add_argument ( '--queue-name' , type = str , help = 'QueueSPACETOKENnameSPACETOKENtoSPACETOKENprocessSPACETOKENto.' )
    parser . add_argument ( '--queue-name' , type = str , help = 'QueueSPACETOKENnameSPACETOKENtoSPACETOKENprocessSPACETOKENto.' )
    parser . add_argument ( '--queue-name' , type = str , help = 'QueueSPACETOKENnameSPACETOKENtoSPACETOKENprocessSPACETOKENto.' )
    parser . add_argument ( '--queue-name' , type = str , help = 'QueueSPACETOKENnameSPACETOKENtoSPACETOKENprocessSPACETOKENto.' )
    parser . add_argument ( '--queue-name' , type = str , help = 'QueueSPACETOKENnameSPACETOKENtoSPACETOKENprocessSPACETOKENto.'

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 563
---> probID: geeksforgeeks_3870_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    for i in range ( rotations - 1 , - 1 , - 1 ) :
        left , right = ranges [ i ]
        if left <= index and right >= index :
            if index == left :
                index = right
            else :
                index -= 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 564
---> probID: geeksforgeeks_924_A
---> inputs:

---> outputs:
Yes


def GFG ( ) :
    MAXN = 1000001
    spf = [ 0 ] * MAXN
    hash1 = [ 0 ] * MAXN
    def sieve ( ) :
        spf [ 1 ] = 1
        for i in range ( 2 , MAXN ) :
            spf [ i ] = i
        for i in range ( 4 , MAXN , 2 ) :
            spf [ i ] = 2
        for i in range ( 3 , i * MAXN ) :
            if spf [ i ] == i :
                for j in range ( i * i , MAXN , i ) :
                    if spf [ j ] == j :
                        spf [ j ] = i
        def getFactorization ( x ) :
            temp = 0
            while x != 1 :
                temp = spf [ x ]
                if x % temp == 0 :
                    hash1 [ spf [ x ] ] += 1
                    x = x / spf [ x ]
                while x % temp == 0 :
                    x = x / temp
            return True
        def check ( x ) :
            temp = 0
            while x != 1 :
                temp = spf [ x ]
                if x % temp == 0 and hash1 [ temp ] > 1 :
                    return False
                while x % temp == 0 :
                    x = x / temp
            return True
        def hasValidNum ( arr , n ) :
            sieve ( )
            for i in range ( n ) :
                getFactorization ( arr [ i ] )
            for i in range ( n ) :
                if check ( arr [ i ] ) :
                    return True
            return False
        def main ( ) :
            arr = [ 2 , 8 , 4 , 10 , 6 , 7 ]
            n = len ( arr )
            if hasValidNum ( arr , n ) :
                print ( "Yes" )
            else :
                print ( "No" )
    

---> console_out:
 
DIDN'T MATCH!! :(
 32%|███▏      | 564/1746 [00:13<00:28, 41.30it/s]

-------------------------------------


---> lineNum: 565
---> probID: geeksforgeeks_672_A
---> inputs:

---> outputs:
Yes


def pythree_solution ( a , n ) :
    """
 Return True if the number of times a is found in the given array.
 """
    freq = { }
    sum = 0
    for i in range ( n ) :
        freq [ a [ i ] ] = freq [ a [ i ] ] if i != 0 else 0
        sum += a [ i ]
    if sum % 2 == 0 :
        if freq [ sum / 2 ] != 0 :
            return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 566
---> probID: geeksforgeeks_5026_A
---> inputs:

---> outputs:
Area of Kite = 12.0


def GFG ( d1 , d2 ) :
    area = ( d1 * d2 ) / 2
    return area


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576714366_9942/main.py", line 10
    print

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 567
---> probID: codeforces_475_A
---> inputs:
9
---> outputs:
+------------------------+
|O.O.O.#.#.#.#.#.#.#.#.|D|)
|O.O.O.#.#.#.#.#.#.#.#.|.|
|O.......................|
|O.O.#.#.#.#.#.#.#.#.#.|.|)
+------------------------+

def main ( ) :
    import sys
    import getopt
    n = 0
    a = [ [ ] for i in range ( 4 ) ]
    for i , j in enumerate ( sys . argv [ 1 : ] ) :
        if i == 2 and j != 0 :
            i += 1
        a [ i ] . append ( j )
    print

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 568
---> probID: codeforces_55_A
---> inputs:
1
---> outputs:
YES

def test_codeforces ( ) :
    x = symbols ( 'x' )
    n = symbols ( 'n' )
    if ( n & ( n - 1 ) ) == 0 :
        assert codeforces ( x ) == 'YES'
    else :
        assert codeforces ( x ) == 'NO'


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 569
---> probID: geeksforgeeks_2229_A
---> inputs:

---> outputs:
No


def GFG ( n ) :
    if n < 10 :
        return False
    prodOdd , prodEven = 1 , 1
    while n > 0 :
        digit = n % 10
        prodOdd *= digit
        n /= 10
        if n == 0 :
            break
        digit = n % 10
        prodEven *= digit
        n /= 10
    if prodEven == prodOdd :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 33%|███▎      | 569/1746 [00:13<00:28, 41.63it/s]

-------------------------------------


---> lineNum: 570
---> probID: aizu_p01620_A
---> inputs:
2
1 2
bdd
3
3 2 1
DDDA
5
3 1 4 5 3
dcdkIlkP
0
---> outputs:
abc
ABCx
abZfFijL

def main ( ) :
    import sys
    while 1 :
        n = input ( "Enter n (or quit): " )
        if n == 'quit' : break
        key = [ ]
        str = sys . stdin . readline ( ) . split ( )
        for i in range ( n ) :
            key . append ( int ( str [ i ] ) )
        c = sys . stdin . readline ( ) . split ( )
        key_count = 0
        for i in range ( len ( c ) ) :
            for j in key [ key_count ] :
                if c [ i ] == 97 :
                    c [ i ] = 90
                elif c [ i ] == 65 :
                    c [ i ] = 122
                else :
                    c [ i ] -= 1
            if key_count == len ( key ) - 1 :
                key_count = 0
            else :
                key_count += 1
        for i in range ( len ( c ) ) :
            print ( c [ i ] )
        print ( "" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 571
---> probID: geeksforgeeks_1107_A
---> inputs:

---> outputs:
odd


def test_GFG ( ) :
    if arr [ r ] == 1 :
        assert 'odd' in arr
    else :
        assert 'even' in arr


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 572
---> probID: aizu_p02394_A
---> inputs:
5 4 2 2 1
---> outputs:
Yes

def main ( ) :
    f = open ( '/proc/cpuinfo' , 'r' )
    try :
        lines = f . readlines ( )
        split = lines . split ( )
        w , h , x , y , r = split
        if ( x - r >= 0 ) and ( x + r <= w ) and ( y - r >= 0 ) and ( y + r <= h ) :
            print ( 'Yes' )
        else :
            print ( 'No' )
    finally :
        f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 573
---> probID: geeksforgeeks_4264_A
---> inputs:

---> outputs:
5


def GFG ( n ) :
    if n <= 1 :
        return False
    for i in range ( 2 , n ) :
        if n % i == 0 :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 574
---> probID: geeksforgeeks_2808_A
---> inputs:

---> outputs:
24


def test_gf_gf_composite_product ( ) :
    """Test composite product of polynomials."""
    max_val = gf_max_val ( [ 1 ] , ZZ )
    prime = [ True ] * ( max_val + 1 )
    for p in range ( 2 , max_val + 1 ) :
        if prime [ p ] is True :
            for i in range ( p * 2 , max_val + 1 , p ) :
                prime [ i ] = False
    product = 1
    for i in range ( n ) :
        if not prime [ i ] :
            product *= i
    return product


---> console_out:
 
DIDN'T MATCH!! :(
 33%|███▎      | 574/1746 [00:13<00:27, 41.92it/s]  File "./junk/1692576714555_1397/main.py", line 15
    print ( """ SPACETOKEN SPACETOKEN - v
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
SyntaxError: EOF while scanning triple-quoted string literal


-------------------------------------


---> lineNum: 575
---> probID: aizu_p02397_A
---> inputs:
3 2
2 2
5 3
0 0
---> outputs:
2 3
2 2
3 5

def main ( ) :
    import sys
    import getopt
    global verbose , verbose , header_list
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , "hv" )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """usage:SPACETOKEN%sSPACETOKEN[-h|-v]SPACETOKEN[-d|--debug]""" % sys . argv [ 0 ] )
        print ( """SPACETOKENSPACETOKEN-h,SPACETOKEN-v,SPACETOKEN--help""" )
        print ( """SPACETOKENSPACETOKEN-d,SPACETOKEN--debug""" )
        print ( """SPACETOKENSPACETOKEN-v,SPACETOKEN--verbose""" )
        print ( """ SPACETOKEN SPACETOKEN - v

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 576
---> probID: codeforces_1281_A
---> inputs:
8
kamusta_po
genki_desu
ohayou_gozaimasu
annyeong_hashimnida
hajime_no_ippo
bensamu_no_sentou_houhou_ga_okama_kenpo
ang_halaman_doon_ay_sarisari_singkamasu
si_roy_mustang_ay_namamasu
---> outputs:
FILIPINO
JAPANESE
JAPANESE
KOREAN
FILIPINO
FILIPINO
JAPANESE
JAPANESE

def main ( ) :
    strarr = [ 'FILIPINO' , 'JAPANESE' , 'KOREAN' ]
    s = input ( )
    t = len ( s )
    index_word = 0
    for i in range ( t ) :
        s1 = s [ i ]
        if s1 . endswith ( 'po' ) :
            index_word = 0
        elif s1 . endswith ( 'mnida' ) :
            index_word = 2
        else :
            index_word = 1
        print ( strarr [ index_word ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 577
---> probID: geeksforgeeks_4384_A
---> inputs:

---> outputs:
18
40
22


def GFG ( arr , n , left , right ) :
    k = right - left
    d = arr [ 1 ] - arr [ 0 ]
    ans = arr [ left - 1 ] * ( k + 1 )
    ans = ans + ( d * ( k * ( k + 1 ) ) ) / 2
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 578
---> probID: geeksforgeeks_3185_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    """Test the greatest factorial minimization of the polynomials."""
    n , a , b , c = symbols ( 'n a b c' , integer = True , positive = True )
    maxVal = 0
    for i in range ( 0 , n + 1 , a ) :
        for j in range ( 0 , n - i , b ) :
            z = ( n - ( i + j ) ) / c
            if math . floor ( z ) == math . ceil ( z ) :
                x = i / a
                y = j / b
                maxVal = max ( maxVal , x + y + int ( z ) )
    assert maxfactorial ( n ) == maxVal


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 579
---> probID: aizu_p00001_A
---> inputs:
1819
2003
876
2840
1723
1673
3776
2848
1592
922
---> outputs:
3776
2848
2840

def _main ( a ) :
    """
 Main function to sort a list of integers.
 """
    for i in range ( len ( a ) - 1 ) :
        for j in range ( len ( a ) - 1 , i , - 1 ) :
            if a [ j ] > a [ j - 1 ] :
                t = a [ j ]
                a [ j ] , a [ j - 1 ] = a [ j - 1 ] , a [ j - 1 ]
                a [ j - 1 ] , a [ j - 1 ] = t
    def print_hill ( a ) :
        for i in range ( 3 ) :
            print ( a [ i ] )
    hills = [ ]
    inp = open ( '/proc/cpuinfo' , 'r' )
    bre = re . compile ( '^(\d+): (\d+): (\d+)$' )
    n = None
    for line in inp :
        num = line . split ( )
        n = int ( num [ 0 ] )
        hills . append ( n )
    sort ( hills )
    print_hill ( hills )


---> console_out:
 
DIDN'T MATCH!! :(
 33%|███▎      | 579/1746 [00:14<00:27, 42.01it/s]

-------------------------------------


---> lineNum: 580
---> probID: geeksforgeeks_4099_A
---> inputs:

---> outputs:
4


def get_number_of_possible_pallindrome ( str , n ) :
    ans = 1
    for i in range ( 1 , n + 1 ) :
        ans = ans * i
    return ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 581
---> probID: codeforces_1145_A
---> inputs:
4
1 2 2 4
---> outputs:
4

def main ( ) :
    import sys
    size = len ( sys . argv )
    arr = [ ]
    for i in range ( 1 , size + 1 ) :
        arr . append ( sys . argv [ i ] )
    print ( split ( arr , 1 , size ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 582
---> probID: geeksforgeeks_4516_A
---> inputs:

---> outputs:
100


def pygfg ( n , m ) :
    num = ( 1 << m ) - 1
    return ( n ^ num )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 583
---> probID: codeforces_1672_B
---> inputs:
4
AABAB
ABB
AAAAAAAAB
A
---> outputs:
YES
NO
YES
NO

def pycf1672b ( ) :
    import sys
    t = sys . stdin . readline ( )
    while t :
        s = t . rstrip ( )
        a , b = 0 , 0
        f = True
        for ch in s :
            if ch == 'A' :
                a += 1
            else :
                b += 1
                if a < b :
                    print ( 'NO' )
                    f = False
                    break
        if f :
            if b != 0 and s [ - 1 ] == 'B' :
                print ( 'YES' )
            else :
                print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 584
---> probID: geeksforgeeks_2838_A
---> inputs:

---> outputs:
man


def get_first_substring ( s ) :
    n , c = len ( s ) , 0
    s1 , s2 = '' , ''
    mpp = { }
    for i in range ( n ) :
        if s [ i ] in [ ' ' , '#' ] :
            s1 = s [ c : i ]
            mpp [ s1 ] = 1
            c = i + 1
    for i in range ( n ) :
        if s [ i ] == ' ' :
            continue
        for j in range ( n ) :
            if s [ i ] == ' ' :
                break
            s1 = s [ i : j - i + 1 ]
            s2 = s1
            s1 = reverse ( s1 )
            if mpp . has_key ( s1 ) :
                return s2
    return '-1'


---> console_out:
 
DIDN'T MATCH!! :(
 33%|███▎      | 584/1746 [00:14<00:27, 41.84it/s]

-------------------------------------


---> lineNum: 585
---> probID: geeksforgeeks_2391_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    n = 44522255
    assert count_consecutive ( n ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 586
---> probID: geeksforgeeks_832_A
---> inputs:

---> outputs:
Interior angle: 144
Exterior angle: 36


def test_GFG ( ) :
    """Test the degree of the first degree."""
    interiorAngle , exteriorAngle = ( n - 2 ) * 180 / n , 360 / n
    assert interiorAngle == - 2 * n
    assert exteriorAngle == - n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 587
---> probID: geeksforgeeks_1096_A
---> inputs:

---> outputs:
1024 9801


def GFG ( n ) :
    smallest = int ( math . ceil ( math . sqrt ( math . pow ( 10 , n - 1 ) ) ) )
    print ( smallest , end = ' ' )
    largest = int ( math . ceil ( math . sqrt ( math . pow ( 10 , n ) ) ) - 1 )
    print ( largest , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 588
---> probID: codeforces_1411_A
---> inputs:
5
2
))
12
gl))hf))))))
9
gege)))))
14
)aa))b))))))))
1
)
---> outputs:
Yes
No
Yes
Yes
Yes

def test_A ( ) :
    raises ( ValueError , lambda : solve ( [ 1 , 2 , 3 ] ) )
    f = symbols ( 'f' , integer = True )
    def solve ( ) :
        f = symbols ( 'f' , integer = True )
        t = symbols ( 't' , integer = True )
        while t :
            n = symbols ( 'n' , integer = True )
            message = [ x for x in solve ( f ) if x . is_integer ]
            assert message == [ '(n, t)' ]
    def identify_message ( message , n ) :
        del message [ : n ]
        left_symbols = 0
        for character in message :
            if character == ')' :
                left_symbols += 1
            else :
                break
        assert left_symbols > ( n - left_symbols )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576714890_3826/main.py", line 19
    out . append ( StructType ( [ StructField ( "a" , IntegerType ( ) , ArrayType ( IntegerType ( ) , IntegerType ( ) ) , StructField ( "b" , IntegerType ( ) , ArrayType ( IntegerType ( ) , IntegerType ( ) ) , StructField ( "c" , IntegerType ( ) , IntegerType ( ) ) , StructField ( "d" , IntegerType ( ) , IntegerType ( ) ) ] ) )
                                                                                                                                                                                                                                                                                                                                    ^
SyntaxError: closing parenthesis ']' does not match opening parenthesis '('


-------------------------------------


---> lineNum: 589
---> probID: codeforces_1216_A
---> inputs:
4
bbbb
---> outputs:
['2\nabba', '2\nabab\n']

def test_akarshanand2810 ( ) :
    solve ( )
    sc = SparkContext ( "local[2]" )
    out = sc . parallelize ( [ 1 , 2 , 3 ] ) . toDF ( )
    n = sc . sc . parallelize ( range ( 3 ) ) . count ( )
    arr = sc . parallelize ( range ( 3 ) ) . toArray ( )
    cnt = 0
    idx = [ ]
    for i in range ( n - 1 , - 1 , - 1 ) :
        if arr [ i ] == arr [ i + 1 ] :
            cnt += 1
            idx . append ( i )
    print ( cnt )
    for index in idx :
        if arr [ index ] == 'a' :
            arr [ index ] = 'b'
        else :
            arr [ index ] = 'a'
    out . append ( StructType ( [ StructField ( "a" , IntegerType ( ) , ArrayType ( IntegerType ( ) , IntegerType ( ) ) , StructField ( "b" , IntegerType ( ) , ArrayType ( IntegerType ( ) , IntegerType ( ) ) , StructField ( "c" , IntegerType ( ) , IntegerType ( ) ) , StructField ( "d" , IntegerType ( ) , IntegerType ( ) ) ] ) )
    out . append ( StructType ( [ StructField ( "a" , IntegerType ( ) , ArrayType ( IntegerType ( ) , IntegerType ( ) ) , StructField ( "b" , IntegerType ( ) , IntegerType ( ) ) , StructField ( "c" , IntegerType ( ) , IntegerType ( ) ) , StructField ( "d" , IntegerType ( ) , IntegerType ( ) ) ] ) )


---> console_out:
 
DIDN'T MATCH!! :(
 34%|███▎      | 589/1746 [00:14<00:27, 41.76it/s]

-------------------------------------


---> lineNum: 590
---> probID: geeksforgeeks_301_A
---> inputs:

---> outputs:
9


def GFG ( a , n ) :
    discard_count = 0
    power ( a , n )
    if n == 0 :
        return 1
    p = power ( a , n / 2 )
    p = p * p
    if n % 2 == 1 :
        p = p * a
    return p
def solve ( i , n , sum , k , a , prefix ) :
    if sum > k :
        discard_count += power ( 2 , n - i )
        return
    if i == n :
        return
    rem = prefix [ - 1 ] - prefix [ i ]
    if sum + a [ i ] + rem > k :
        solve ( i + 1 , n , sum + a [ i ] , k , a , prefix )
    if sum + rem > k :
        solve ( i + 1 , n , sum , k , a , prefix )
def count_subsequences ( arr , n , K ) :
    sum = 0.0
    k = float ( math . log ( K , 2 ) )
    prefix = [ ]
    a = [ ]
    for i in range ( n ) :
        a . append ( float ( math . log ( arr [ i ] , 2 ) ) )
        sum += a [ i ]
    prefix . append ( a [ 0 ] )
    for i in range ( 1 , n ) :
        prefix . append ( prefix [ - 1 ] + a [ i ] )
    total = power ( 2 , n ) - 1
    if sum <= k :
        return int ( total )
    solve ( 0 , n , 0.0 , k , a , prefix )
    return int ( total - discard_count )
def main ( ) :
    arr = [ 4 , 8 , 7 , 2 ]
    n = len ( arr )
    k = 50
    print ( count_subsequences ( arr , n , k ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 591
---> probID: geeksforgeeks_1546_A
---> inputs:

---> outputs:
Both BSTs are identical


def GFG ( data ) :
    class Node ( object ) :
        data = data
        left = None
        right = None
    def newNode ( data ) :
        node = Node ( )
        node . data = data
        node . left = None
        node . right = None
        return node
    def inorder ( root ) :
        if root is None :
            return
        inorder ( root . left )
        print ( root . data , end = ' ' )
        inorder ( root . right )
    def isIdentical ( root1 , root2 ) :
        if root1 is None and root2 is None :
            return 1
        elif root1 is not None and root2 is None :
            return 0
        elif root1 is None and root2 is not None :
            return 0
        else :
            if root1 . data == root2 . data and isIdentical ( root1 . left , root2 . left ) == 1 and isIdentical ( root1 . right , root2 . right ) == 1 :
                return 1
            else :
                return 0
    def main ( ) :
        root1 = newNode ( 5 )
        root2 = newNode ( 5 )
        root1 . left = newNode ( 3 )
        root1 . right = newNode ( 8 )
        root1 . left . left = newNode ( 2 )
        root1 . left . right = newNode ( 4 )
        root2 . left = newNode ( 3 )
        root2 . right = newNode ( 8 )
        root2 . left . left = newNode ( 2 )
        root2 . left . right = newNode ( 4 )
        if isIdentical ( root1 , root2 ) == 1 :
            print ( "Both BSTs are identical" )
        else :
            print ( "BSTs are not identical" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 592
---> probID: aizu_p00549_A
---> inputs:
5
JOIOI
---> outputs:
6

def main ( ) :
    import sys
    n = len ( sys . argv )
    arr = sys . argv [ 1 : ]
    left_j = [ ]
    right_i = [ ]
    for i in range ( 1 , n + 1 ) :
        left_j . append ( left_j [ i - 1 ] )
        if arr [ i - 1 ] == 'J' :
            left_j [ i ] += 1
        right_i . append ( right_i [ n - i + 1 ] )
        if arr [ n - i ] == 'I' :
            right_i [ n - i + 1 ] += 1
    sum_i = 0
    sum_j = 0
    max_o = 0
    total = 0
    for i in range ( 1 , n + 1 ) :
        tmp = 0
        if arr [ i - 1 ] == 'O' :
            tmp = left_j [ i - 1 ] * right_i [ i + 1 ]
            total += tmp
            sum_j += ( left_j [ i - 1 ] + 1 ) * right_i [ i + 1 ]
            sum_i += left_j [ i - 1 ] * ( right_i [ i + 1 ] + 1 )
        else :
            tmp = left_j [ i - 1 ] * right_i [ i ]
        max_o = max ( max_o , tmp )
    total += max_o
    total = max ( total , sum_j )
    total = max ( total , sum_i )
    print ( total )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 593
---> probID: aizu_p02383_A
---> inputs:
1 2 4 8 16 32
SE
---> outputs:
8

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'd' )
    except getopt . error as msg :
        print ( msg )
        return
    if len ( args ) != 2 :
        print ( "Usage: Dise <surface> <order>" )
        return
    if args [ 0 ] == '-d' :
        dice1 = Dise ( )
        dice1 . SetSurface ( surface = args [ 1 ] )
        dice1 . SetDice ( 1 , 2 , 3 )
        dice1 . RollDice ( order = args [ 1 ] )
    else :
        dise = Dise ( )
        surface = [ ]
        top , bottom , right , left , front , back = dice1 . SetSurface ( )
        for i in range ( 6 ) :
            surface . append ( int ( i ) )
    def SetDice ( top , front , right ) :
        top = top - 1
        front = front - 1
        right = right - 1
        bottom = 5 - ( top - 1 )
        back = 5 - ( front - 1 )
        left = 5 - ( right - 1 )
    def RollDice ( RollString ) :
        for i in range ( len ( RollString ) ) :
            if RollString [ i ] == 'W' :
                bottom = Left
                left = Top
                top = 5 - Bottom
                right = 5 - Left
            elif RollString [ i ] == 'S' :
                bottom = Front
                front = Top
                top = 5 - Bottom
                Back = 5 - Front
            elif RollString [ i ] == 'E' :
                bottom = Right
                right = Top
                top = 5 - Bottom
                left = 5 - Right
            else :
                bottom = Back
                Back = Top
                Top = 5 - Bottom
                Front = 5 - Back
        print ( surface [ top ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 594
---> probID: geeksforgeeks_3578_A
---> inputs:

---> outputs:
1 2 3 4 5 

def GFG ( ) :
    class node :
        data = 0
        next = None
    def add ( data ) :
        newnode = node ( )
        newnode . data = data
        newnode . next = None
        return newnode
    def print_arr ( a , n ) :
        for i in range ( n ) :
            print ( a [ i ] , end = ' ' )
    def findlength ( head ) :
        curr = head
        cnt = 0
        while curr :
            cnt += 1
            curr = curr . next
        return cnt
    def convert_arr ( head ) :
        len = findlength ( head )
        arr = [ 0 ] * len ( head )
        index = 0
        curr = head
        while curr :
            arr [ index ] = curr . data
            curr = curr . next
        print_arr ( arr , len )
    def main ( ) :
        head = node ( )
        head = add ( 1 )
        head . next = add ( 2 )
        head . next . next = add ( 3 )
        head . next . next . next = add ( 4 )
        head . next . next . next . next = add ( 5 )
        convert_arr ( head )


---> console_out:
 
DIDN'T MATCH!! :(
 34%|███▍      | 594/1746 [00:14<00:27, 41.25it/s]

-------------------------------------


---> lineNum: 595
---> probID: geeksforgeeks_2237_A
---> inputs:

---> outputs:
Non-decreasing digits = 55


def test_GFG ( ) :
    a = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ]
    for i in range ( 0 , 9 ) :
        a [ 0 ] [ i ] = 1
    for i in range ( 1 , n + 1 ) :
        a [ i ] [ 9 ] = 1
    for i in range ( 1 , n + 1 ) :
        for j in range ( 8 , - 1 , - 1 ) :
            a [ i ] [ j ] = a [ i - 1 ] [ j ] + a [ i ] [ j + 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 596
---> probID: codeforces_1344_A
---> inputs:
6
1
14
2
1 -1
4
5 5 5 1
3
3 2 1
2
0 1
5
-239 -2 -100 -3 -11
---> outputs:
YES
YES
YES
NO
NO
YES

def pythree_class_29 ( arg ) :
    import sys
    t = sys . getrecursionlimit ( )
    while t :
        n = len ( t )
        st = set ( )
        i , flag = 0 , 0
        a = [ ]
        vis = [ ]
        for i in range ( n ) :
            a . append ( t [ i ] )
            val = ( i + a [ i ] ) % n
            if val < 0 : val += n
            vis . add ( int ( val ) )
        for i in range ( n ) :
            if vis [ i ] == 0 :
                flag = 1
                break
        if flag == 0 :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 597
---> probID: leetcode_453_A
---> inputs:

---> outputs:
3

def minMoves ( nums ) :
    """
 Return the minimum number of moves in the given list.
 """
    if len ( nums ) == 0 :
        return 0
    nums = sorted ( nums )
    min_num = nums [ 0 ]
    ans = 0
    for num in nums [ 1 : ] :
        ans += num - min_num
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 598
---> probID: atcoder_AGC002_A
---> inputs:
1 3
---> outputs:
Positive

def pytime_compare ( a , b ) :
    a , b = map ( int , a . split ( '.' ) )
    if a <= 0 and b >= 0 or a <= 0 and b >= 0 :
        return 'Zero'
    elif a < 0 and b < 0 :
        return ( ( b - a + 1 ) % 2 == 0 )
    elif a > 0 and b > 0 :
        return 'Positive'
    return 'Negative'


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 599
---> probID: geeksforgeeks_3119_A
---> inputs:

---> outputs:
4


def geeks ( n ) :
    x = n & ( n - 1 )
    return ( n ^ x )


---> console_out:
 
DIDN'T MATCH!! :(
 34%|███▍      | 599/1746 [00:14<00:27, 41.39it/s]

-------------------------------------


---> lineNum: 600
---> probID: geeksforgeeks_3375_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    MAX_CHAR = 256
    def maximum_chars ( str ) :
        n = len ( str )
        res = - 1
        first_ind = [ - 1 ] * MAX_CHAR
        for i in range ( MAX_CHAR ) :
            first_ind [ i ] = i
        for i in range ( n ) :
            first_ind [ str [ i ] ] = i
        return res
    for i in range ( MAX_CHAR ) :
        if i == 0 :
            first_ind [ str [ 0 ] ] = i
        else :
            res = max ( res , abs ( i - first_ind [ 0 ] - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 601
---> probID: codeforces_580_B
---> inputs:
4 5
75 5
0 100
150 20
75 1
---> outputs:
100

def test_kefa_and_company ( ) :
    f = open ( 'kefa.txt' , 'r' )
    lines = f . readlines ( )
    n = int ( lines [ 0 ] )
    k = int ( lines [ 1 ] )
    pf = [ ]
    list = [ ]
    for i in range ( n ) :
        input = lines [ i ] . strip ( ) . split ( )
        money = int ( input [ 0 ] )
        friend = int ( input [ 1 ] )
        list . append ( Kefa ( money , friend ) )
    list . sort ( key = KefaCmp )
    ans = 0
    s , e = 0 , 0
    sum = 0
    while e < n :
        if list [ e ] [ 'money' ] - list [ s ] [ 'money' ] < k :
            sum += list [ e ] [ 'friend' ]
            e += 1
        else :
            sum -= list [ s ] [ 'friend' ]
            s += 1
        ans = max ( ans , sum )
    assert ans == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 602
---> probID: geeksforgeeks_1232_A
---> inputs:

---> outputs:
Area: 216.51
Volume: 272.71


def test_GFG ( ) :
    a = 5
    assert findArea ( a ) == 5
    assert findVolume ( a ) == 5


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 603
---> probID: projecteuler_p205_A
---> inputs:

---> outputs:
0.5731441

def p205 ( ) :
    print ( np . sum ( np . array ( [ 0 , 1 , 1 , 1 , 1 ] ) ) )
    PYRAMIDAL_DIE_PDF = [ 0 , 1 , 1 , 1 , 1 , 1 ]
    CUBIC_DIE_PDF = [ 0 , 1 , 1 , 1 , 1 , 1 , 1 ]
    nine_pyramidal_pdf = [ 1 ]
    for i in range ( 9 ) :
        nine_pyramidal_pdf = convolve ( nine_pyramidal_pdf , PYRAMIDAL_DIE_PDF )
    sixc_pyramidal_pdf = [ 1 ]
    for i in range ( 6 ) :
        sixc_pyramidal_pdf = convolve ( sixc_pyramidal_pdf , CUBIC_DIE_PDF )
    numer = 0
    for i in range ( len ( nine_pyramidal_pdf ) ) :
        numer += float ( nine_pyramidal_pdf [ i ] ) * sum ( sixc_pyramidal_pdf [ i ] )
    denom = float ( sum ( nine_pyramidal_pdf [ i ] ) * sum ( sixc_pyramidal_pdf [ i ] ) )
    return '%.7f' % float ( numer / denom )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 604
---> probID: geeksforgeeks_2401_A
---> inputs:

---> outputs:
9


def test_GFG ( ) :
    N = 6
    Even = N // 2
    Odd = N - Even
    assert Even * Odd == 1


---> console_out:
 
DIDN'T MATCH!! :(
 35%|███▍      | 604/1746 [00:14<00:27, 41.46it/s]  File "./junk/1692576715279_4784/main.py", line 4
    

SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 605
---> probID: geeksforgeeks_2907_A
---> inputs:

---> outputs:
12


def test_GFG ( ) :
    N , M , s = symbols ( 'NSPACETOKENMSPACETOKENs' , integer = True , positive = True )
    assert solve

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 606
---> probID: geeksforgeeks_399_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    if not isinstance ( a , int ) :
        return
    assert gcd ( b % a , a ) == gcd ( a , b )
    assert lcm ( a , b ) == ( a * b ) / gcd ( a , b )
    assert count_pairs ( arr , n ) == 0
    ans = 0
    for i in range ( n ) :
        for j in range ( i + 1 , n ) :
            if lcm ( arr [ i ] , arr [ j ] ) == gcd ( arr [ i ] , arr [ j ] ) :
                ans += 1
    assert ans == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 607
---> probID: codeforces_886_A
---> inputs:
1 3 2 1 2 1
---> outputs:
YES

def main ( ) :
    input = sys . stdin
    list = [ ]
    sum = 0
    for i in range ( 6 ) :
        _l = input . readline ( )
        list . append ( _l )
        sum += _l
    i , j , k = 0 , 0 , 0
    for i in range ( 4 ) :
        for j in range ( i + 1 , 5 ) :
            for k in range ( j + 1 , 6 ) :
                sum1 = list [ i ] + list [ j ] + list [ k ]
                if sum1 == sum - sum1 :
                    print ( "YES" )
                    return
    print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 608
---> probID: geeksforgeeks_1394_A
---> inputs:

---> outputs:
2147483648


def _GFG ( number ) :
    counter = 0
    while number > 0 :
        if number % 2 == 1 :
            counter += 1
        number = number / 2
    return counter


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 609
---> probID: codeforces_1712_A
---> inputs:
4
3 1
2 3 1
3 3
1 2 3
4 2
3 4 1 2
1 1
1
---> outputs:
1
0
2
0

def test_CF_1712_A ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' , integer = True , positive = True )
    while t . is_integer :
        n , k = t . as_coeff_Mul ( )
        a = [ i for i in range ( n ) ]
        counter = 0
        for i in range ( k , n ) :
            if a [ i ] <= k :
                counter += 1
        assert counter == 1


---> console_out:
 
DIDN'T MATCH!! :(
 35%|███▍      | 609/1746 [00:14<00:27, 41.53it/s]

-------------------------------------


---> lineNum: 610
---> probID: codeforces_651_A
---> inputs:
3 5
---> outputs:
6

def test_python_application_38 ( ) :
    x = symbols ( 'x' )
    num1 = symbols ( 'num1' )
    num2 = symbols ( 'num2' )
    counter = 0
    while num1 != 0 and num2 != 0 :
        if num1 == 1 and num2 == 1 :
            break
        if num1 <= num2 :
            num1 += 1
            num2 -= 2
        else :
            num1 -= 2
            num2 += 1
        counter += 1
    assert counter == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 611
---> probID: leetcode_1310_A
---> inputs:

---> outputs:
[2,7,14,8]

def py2int ( arr , queries ) :
    """
 Convert a list of integers to a list of integers.

 >>> py2int([1,2,3], [4,5,6])
 [1, 2, 3, 4, 5, 6]
 """
    res , q = [ ] , [ ]
    for i in range ( 1 , len ( arr ) ) :
        arr [ i ] ^= arr [ i - 1 ]
    for i in range ( len ( queries ) ) :
        q = queries [ i ]
        res . append ( q [ 0 ] > 0 and arr [ q [ 0 ] - 1 ] ^ arr [ q [ 1 ] ] or arr [ q [ 1 ] ] )
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 612
---> probID: geeksforgeeks_4157_A
---> inputs:

---> outputs:
e


def GFG ( str , k ) :
    expand = ""
    temp = ""
    freq = 0
    for i in range ( len ( str ) ) :
        temp = ""
        freq = 0
        while i < len ( str ) and str [ i ] >= 'a' and str [ i ] <= 'z' :
            temp += str [ i ]
            i += 1
        while i < len ( str ) and str [ i ] >= '1' and str [ i ] <= '9' :
            freq = freq * 10 + str [ i ] - '0'
            i += 1
        for j in range ( 1 , freq ) :
            expand += temp
    if freq == 0 :
        expand += temp
    return expand [ k - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 613
---> probID: geeksforgeeks_4561_A
---> inputs:

---> outputs:
YES


def test_GFG ( ) :
    if ( a + b + c ) % 2 != 0 or a + b < c :
        print ( 'NO' )
    else :
        print ( 'YES' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 614
---> probID: geeksforgeeks_1048_A
---> inputs:

---> outputs:
-3


def GFG ( n ) :
    abs_sum = n * ( n + 1 ) / 2
    sign = n + 1 % 2 if n % 2 else 1
    result_sum = sign * abs_sum
    return result_sum


---> console_out:
 
DIDN'T MATCH!! :(
 35%|███▌      | 614/1746 [00:14<00:27, 41.68it/s]

-------------------------------------


---> lineNum: 615
---> probID: geeksforgeeks_1640_A
---> inputs:

---> outputs:
Before sort
-6 -3 -1 2 4 5 
After sort
1 4 9 16 25 36 

def test_GFG ( ) :
    arr = [ - 6 , - 3 , - 1 , 2 , 4 , 5 ]
    n = len ( arr )
    print ( "Before sort" )
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )
    sortSquares ( arr )
    print ( "" )
    print ( "After sort" )
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 616
---> probID: codeforces_500_A
---> inputs:
8 4
1 2 1 2 1 2 1
---> outputs:
YES

def test_CP19 ( ) :
    x = symbols ( 'x' )
    n , t , k , pos = symbols ( 'n t k' , integer = True , positive = True )
    n = int ( n )
    arr = [ ]
    for i in range ( n - 1 ) :
        arr . append ( x [ i ] )
    while pos < t :
        k = pos + arr [ - 1 ]
        pos = k
    if pos == t :
        assert 'YES' in arr
    else :
        assert 'NO' in arr


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 617
---> probID: aizu_p00344_A
---> inputs:
3
1 1 1
---> outputs:
3

def main ( ) :
    f = sys . stdin
    N = int ( f . readline ( ) )
    a = [ ]
    f . readline ( )
    for line in f :
        a . append ( int ( line . strip ( ) ) )
    indeg = [ ]
    used = [ ]
    for i in range ( N ) :
        indeg [ ( i + a [ i ] ) % N ] += 1
    for i in range ( N ) :
        j = i
        while not used and indeg [ j ] == 0 :
            used . append ( True )
            j = ( j + a [ j ] ) % N
            indeg [ j ] -= 1
    print ( sum ( indeg ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 618
---> probID: geeksforgeeks_1738_A
---> inputs:

---> outputs:
The number is a triangular number


def test_GFG ( ) :
    if isinstance ( num , int ) :
        c = ( - 2 * num )
        b , a = 1 , 1
        d = ( b ** 2 ) - ( 4 * a ** 2 )
    else :
        d = ( - 2 * num ) - ( 2 * a ** 2 )
    root1 = ( - b + float ( 'inf' ) ) / ( 2 * a )
    root2 = ( - b - float ( 'inf' ) ) / ( 2 * a )
    if root1 and math . floor ( root1 ) == root1 :
        return True
    if root2 and math . floor ( root2 ) == root2 :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576715612_1297/main.py", line 9
    while k -- > 0 :
               ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 619
---> probID: geeksforgeeks_2789_A
---> inputs:

---> outputs:
4000

def test_GFG ( ) :
    k , d = 4 , 4
    print ( '%d' % k )
    if d == 0 and k != 1 :
        print ( '-1' )
    else :
        print ( d )
        k -= 1
        while k -- > 0 :
            print ( '0' )


---> console_out:
 
DIDN'T MATCH!! :(
 35%|███▌      | 619/1746 [00:14<00:26, 41.95it/s]

-------------------------------------


---> lineNum: 620
---> probID: geeksforgeeks_4358_A
---> inputs:

---> outputs:
9 8 7 
6 5 4 
3 2 1 


def test_GFG ( ) :
    N = 3
    rotate_matrix ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] )
    for i in range ( N - 1 , - 1 , - 1 ) :
        for j in range ( N - 1 , - 1 , - 1 ) :
            print ( mat ( i , j ) , end = ' ' )
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 621
---> probID: aizu_p02137_A
---> inputs:
5700
---> outputs:
5500

def main ( ) :
    import sys
    p = sys . argv [ 1 ]
    print ( p / 500 * 500 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 622
---> probID: geeksforgeeks_2228_A
---> inputs:

---> outputs:
60


def test_GFG ( ) :
    """Test the multiplication of the polynomials of degree 3."""
    n = 1
    while n != 0 :
        n = n * ( n % 10 )
        n = n / 10
    assert n == 4513


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1692576715706_9631/main.py", line 1, in <module>
    def pystones ( loops = LOOPS ) :
NameError: name 'LOOPS' is not defined


-------------------------------------


---> lineNum: 623
---> probID: aizu_p00229_A
---> inputs:
3 2 30 3 26 226
9 0 18 3 20 118
5 5 12 2 15 203
7 4 19 2 22 197
7 4 24 4 17 209
0 0 0 0 0 0
---> outputs:
127
793
414
629
617

def pystones ( loops = LOOPS ) :
    import pystones
    def pystones ( loops = LOOPS ) :
        while 1 :
            slot = pystones ( loops , pystones )
            if slot . pystones ( loops ) < 0 :
                break
            time . sleep ( 0.001 )
        return slot
    class Slot ( pystones ) :
        def pystones ( loops = LOOPS ) :
            b , r , g , c , s , t = pystones ( loops , pystones )
            return ( 100 + slot . _benefit - slot . _lost ) / ( b - g - c )
        def pystones ( loops = LOOPS ) :
            b , r , g , c , s , t = pystones ( loops , pystones )
            return ( 100 + slot . _greenwall - slot . _lost ) / ( b - c )
        def pystones ( loops = LOOPS ) :
            r , g , b , s , t = pystones ( loops , pystones )
            return ( 100 + slot . _atooine - slot . _lost ) / ( b - c )
        def pystones ( loops = LOOPS ) :
            r , g , b , s , t = pystones ( loops , pystones )
            return ( 100 + slot . _greenwall - slot . _lost ) / ( b - c )
        def pystones ( loops = LOOPS ) :
            r , g , b , s , t = pystones ( loops , pystones )
            return ( 100 + slot . _atooine - slot . _lost ) / ( b - c )
    return Slot ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 624
---> probID: codeforces_553_A
---> inputs:
3
2
2
1
---> outputs:
3

def colored ( ) :
    import sys
    import os
    import getopt
    import time
    import random
    import string
    import sys
    import os . path
    import sys
    import time
    import random
    import string
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    import sys
    

---> console_out:
 
DIDN'T MATCH!! :(
 36%|███▌      | 624/1746 [00:15<00:26, 41.74it/s]

-------------------------------------


---> lineNum: 625
---> probID: geeksforgeeks_2043_A
---> inputs:

---> outputs:
85.98229710000001


def test_GFG ( ) :
    """Test the length of the GFG."""
    PI = 3.14159265
    assert ( ( 2 * PI * r ) + 6 * r ) == PI


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 626
---> probID: geeksforgeeks_2413_A
---> inputs:

---> outputs:
Is 4562 a Palindrome number? -> False
Is 2002 a Palindrome number? -> True


def GFG ( num ) :
    rev_num = 0
    while num > 0 :
        rev_num = rev_num * 10 + num % 10
        num = num / 10
    return rev_num


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 627
---> probID: leetcode_415_A
---> inputs:

---> outputs:
134

def add_strings ( num1 , num2 ) :
    result = [ ]
    carry = 0
    for i , j in enumerate ( num1 ) :
        x = i if i < 0 else num1 [ i ] - '0'
        y = j if j < 0 else num2 [ j ] - '0'
        result . append ( ( x + y + carry ) % 10 )
        carry = ( x + y + carry ) / 10
    return result . reverse ( ) . encode ( 'utf-8' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 628
---> probID: geeksforgeeks_265_A
---> inputs:

---> outputs:
Below are all perfect numbers till 10000
6 is a perfect number
28 is a perfect number
496 is a perfect number
8128 is a perfect number


def GFG ( n ) :
    sum = 1
    for i in range ( 2 , n * i <= n ) :
        if n % i == 0 :
            if i * i != n :
                sum = sum + i + n / i
            else :
                sum = sum + i
    if sum == n and n != 1 :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 629
---> probID: geeksforgeeks_77_A
---> inputs:

---> outputs:
4 8 9 16 25 27 32 36 49 64 81 

def GFG ( n ) :
    for x in range ( 2 , math . sqrt ( n ) + 1 ) :
        p = x
        while p <= n :
            p = p * x
            if p == n :
                return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 36%|███▌      | 629/1746 [00:15<00:26, 41.87it/s]

-------------------------------------


---> lineNum: 630
---> probID: geeksforgeeks_76_A
---> inputs:

---> outputs:
4 8 9 16 25 27 32 36 49 64 81 

def GFG ( n ) :
    for x in range ( 2 , math . sqrt ( n ) ) :
        y = 2
        p = math . pow ( x , y )
        while p <= n and p > 0 :
            if p == n :
                return True
            y += 1
            p = math . pow ( x , y )
    return False


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576715900_9555/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 631
---> probID: geeksforgeeks_2002_A
---> inputs:

---> outputs:
a = 2, b = 6


def import ( ) :
    import sys
    class Solution ( object ) :
        def __gcd ( self , a , b ) :
            if b == 0 :
                return a
            return __gcd ( b , a % b )
        def find_two_numbers ( self , sum , gcd ) :
            if __gcd ( gcd , sum - gcd ) == gcd and sum != gcd :
                print ( "a = %d, b = %d" % ( min ( gcd , sum - gcd ) , int ( sum - min ( gcd , sum - gcd ) ) ) )
            else :
                print ( - 1 )
    sum = 8
    gcd = 2
    find_two_numbers ( sum , gcd )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 632
---> probID: codeforces_1623_A
---> inputs:
5
10 10 6 1 2 8
10 10 9 9 1 1
9 8 5 6 2 1
6 9 2 2 5 8
2 2 1 1 2 1
---> outputs:
7
10
9
3
0

def robot_cleaner ( m , n , rb , cb , rd , cd ) :
    t = 0
    dr = 1
    dc = 1
    while True :
        if rb == rd or cb == cd :
            return t
        t += 1
        if ( rb + dr ) <= 0 or ( rb + dr > m ) :
            dr *= - 1
        if ( cb + dc ) <= 0 or ( cb + dc > n ) :
            dc *= - 1
        rb += dr
        cb += dc


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 633
---> probID: aizu_p00564_A
---> inputs:
10 3 100 5 180
---> outputs:
360

def pythontag_in_parallel ( ) :
    import sys
    n = int ( sys . argv [ 1 ] )
    a = int ( sys . argv [ 2 ] )
    b = int ( sys . argv [ 3 ] )
    c = int ( sys . argv [ 4 ] )
    d = int ( sys . argv [ 5 ] )
    ans1 , ans2 = 100000 , 1000000
    for i in range ( 1 , n + 1 ) :
        if a * i >= n :
            ans1 = i * b
            break
    for i in range ( 1 , n + 1 ) :
        if c * i >= n :
            ans2 = i * d
            break
    assert min ( ans2 , ans1 ) == min ( ans1 , ans2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 634
---> probID: geeksforgeeks_1975_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    """Test the number of pairs of bits in the GFG."""
    n = 0
    while n :
        n &= ( n - 1 )
        count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 36%|███▋      | 634/1746 [00:15<00:26, 42.03it/s]

-------------------------------------


---> lineNum: 635
---> probID: geeksforgeeks_1723_A
---> inputs:

---> outputs:
2 th centered hexadecagonal number :  17
12 th centered hexadecagonal number :  1057


def test_gf_center_hexadecagonal_num ( ) :
    assert gf_center_hexadecagonal_num ( [ ] , 11 , ZZ ) == 8
    assert gf_center_hexadecagonal_num ( [ 1 ] , 11 , ZZ ) == 8
    assert gf_center_hexadecagonal_num ( [ 1 , 2 ] , 11 , ZZ ) == 8
    assert gf_center_hexadecagonal_num ( [ 1 , 2 , 3 ] , 11 , ZZ ) == 8
    assert gf_center_hexadecagonal_num ( [ 1 , 2 , 3 ] , 11 , ZZ ) == 8


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 636
---> probID: atcoder_AGC019_A
---> inputs:
20 30 70 90
3
---> outputs:
150

def main ( ) :
    import sys
    Q , H , S , D , N = sys . argv [ 1 : ]
    one_price = min ( min ( Q * 4 , H * 2 ) , S )
    if float ( one_price ) <= float ( D / 2 ) :
        print ( N * one_price )
    else :
        print ( ( N / 2 ) * D + ( N % 2 ) * one_price )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 637
---> probID: geeksforgeeks_2785_A
---> inputs:

---> outputs:
2


def GFG ( L , R , K ) :
    if K == 9 :
        K = 0
    totalnumbers = R - L + 1
    factor9 = totalnumbers // 9
    rem = totalnumbers % 9
    ans = factor9
    for i in range ( R , R - rem ) :
        rem1 = i % 9
        if rem1 == K :
            ans += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 638
---> probID: codeforces_1271_A
---> inputs:
4
5
6
3
1
2
---> outputs:
6

def main ( ) :
    import sys
    for line in sys . stdin :
        a , b = line . split ( )
        c , d = a . split ( )
        e , f = b . split ( )
        y = min ( c , b )
        x = a
        if y + x <= d :
            print ( y * f + x * e )
        elif f >= e :
            print ( min ( y , d ) * f + ( d - min ( y , d ) ) * e )
        elif e >= f :
            print ( min ( x , d ) * e + ( d - min ( x , d ) ) * f )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 639
---> probID: geeksforgeeks_4951_A
---> inputs:

---> outputs:
3


def get_GFG ( A ) :
    ans = 2
    n = len ( A )
    if n <= 2 :
        return n
    llap = [ ]
    for i in range ( n ) :
        llap . append ( 2 )
    A . sort ( )
    for j in range ( n - 2 , - 1 , - 1 ) :
        i = j - 1
        k = j + 1
        while i >= 0 and k < n :
            if A [ i ] + A [ k ] == 2 * A [ j ] :
                llap [ j ] = max ( llap [ k ] + 1 , llap [ j ] )
                ans = max ( ans , llap [ j ] )
                i -= 1
                k += 1
            elif A [ i ] + A [ k ] < 2 * A [ j ] :
                k += 1
            else :
                i -= 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 37%|███▋      | 639/1746 [00:15<00:26, 41.67it/s]

-------------------------------------


---> lineNum: 640
---> probID: geeksforgeeks_358_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    max_freq = - 1
    freq = { }
    for i in range ( n ) :
        a0 = arr [ i ] - ( i ) * d
        if freq . has_key ( a0 ) :
            freq [ a0 ] = freq [ a0 ] + 1
        else :
            freq [ a0 ] = 1
        if freq [ a0 ] > max_freq :
            max_freq = freq [ a0 ]
    return ( n - max_freq )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 641
---> probID: codeforces_106_B
---> inputs:
5
2100 512 150 200
2000 2048 240 350
2300 1024 200 320
2500 2048 80 300
2000 512 180 150
---> outputs:
4

def main ( ) :
    import sys
    import getopt
    global verbose , verbose , ansprice
    n = len ( sys . argv )
    vec = [ ]
    for i in range ( n ) :
        vec . append ( sys . argv [ i ] )
    ans = 500
    ansprice = 20000
    for i in range ( n ) :
        fl = 1
        for j in range ( n ) :
            if vec [ i ] [ 0 ] < vec [ j ] [ 0 ] and vec [ i ] [ 1 ] < vec [ j ] [ 1 ] and vec [ i ] [ 2 ] < vec [ j ] [ 2 ] : fl = 0
        if fl == 1 :
            if vec [ i ] [ 3 ] < ansprice :
                ansprice = vec [ i ] [ 3 ]
                ans = i + 1
    sys . stdout . write ( ans )
    sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 642
---> probID: geeksforgeeks_4668_A
---> inputs:

---> outputs:
1


def test_GFG ( ) :
    a = np . array ( [ 1 , 5 ] )
    b = np . array ( [ 1 , 1 , 2 ] )
    j = 0
    count = 0
    for i in range ( n ) :
        while j < m :
            if a [ i ] + y < b [ j ] :
                break
            if b [ j ] >= a [ i ] - x and b [ j ] <= a [ i ] + y :
                count += 1
                j += 1
                break
            else :
                j += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 643
---> probID: geeksforgeeks_4746_A
---> inputs:

---> outputs:
14


def GFG ( x ) :
    return ( x << 1 ) + x + ( x >> 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 644
---> probID: codeforces_1084_B
---> inputs:
3 3
4 3 5
---> outputs:
3

def test_B ( ) :
    f = QQ . old_poly_ring ( x , y )
    g = QQ . old_poly_ring ( x , y )
    n = f . numer
    s = f . denom
    a = [ i for i in range ( n ) if i != 0 ]
    g . add ( f . denom ( s ) )
    g . add ( f . numer ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . numer ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    g . add ( f . denom ( s ) )
    

---> console_out:
 
DIDN'T MATCH!! :(
 37%|███▋      | 644/1746 [00:15<00:26, 41.57it/s]

-------------------------------------


---> lineNum: 645
---> probID: geeksforgeeks_3413_A
---> inputs:

---> outputs:
5


def get_gfg ( s ) :
    cnt , maxi = 1 , 1
    n = len ( s )
    for i in range ( 1 , n ) :
        if s [ i ] != s [ i - 1 ] :
            cnt += 1
        else :
            maxi = max ( cnt , maxi )
            cnt = 1
    maxi = max ( cnt , maxi )
    return maxi


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 646
---> probID: atcoder_ABC068_D
---> inputs:
0
---> outputs:
50
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49


def main ( ) :
    main = unittest . main ( )
    main . setUp ( )
    k = os . urandom ( 50 )
    n = 50
    sum = k // n
    amari = k % n
    a = [ i + sum for i in range ( n ) ]
    for i in range ( amari ) :
        a . append ( sum )
    print ( n )
    for i in range ( n ) :
        print ( a [ i ] + ( i == n - 1 ) )
    main . tearDown ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 647
---> probID: geeksforgeeks_2111_A
---> inputs:

---> outputs:
Count of numbers from 1 to 107 is 17
Count of numbers from 1 to 1264 is 315


def GFG ( digits ) :
    first = int ( ( pow ( 10 , digits ) - 1 ) / 9 )
    second = int ( ( pow ( 9 , digits ) - 1 ) / 8 )
    return 9 * ( first - second )
    def toInt ( char ) :
        return int ( char ) - 48
    def countZero ( num ) :
        k = len ( num )
        total = zeroUpto ( k - 1 )
        nonZero = 0
        for i in num :
            if i == '0' :
                nonZero -= 1
                break
            nonZero += ( toInt ( i ) - 1 ) * ( pow ( 9 , k - 1 - i ) )
        no , remaining , calculatedUpto = 0 , 0 , 0 , 0
        for i in num :
            no = no * 10 + ( toInt ( i ) )
            if i != 0 :
                calculatedUpto = calculatedUpto * 10 + 9
        remaining = no - calculatedUpto
        ans = zeroUpto ( k - 1 ) + ( remaining - nonZero - 1 )
        return ans
    def countOne ( num ) :
        k = len ( num )
        total = zeroUpto ( k )
        nonZero = 0
        for i in num :
            if i == '0' :
                nonZero -= 1
                break
            nonZero += ( toInt ( i ) - 1 ) * ( pow ( 9 , k - 1 - i ) )
        nonZero = ( nonZero - nonZero )
        ans = zeroUpto ( k - 1 ) + ( remaining - nonZero - 1 )
        return ans
    def countTwo ( num ) :
        k = len ( num )
        total = zeroUpto ( k )
        nonZero = 0
        for i in num :
            if i == '0' :
                nonZero -= 1
                break
            nonZero += ( toInt ( i ) - 1 ) * ( pow ( 9 , k - 1 - i ) )
        nonZero = ( nonZero - nonZero )
        ans = zeroUpto ( k ) + ( total - nonZero - 1 ) * ( pow ( 9 , k - 1 - i ) )
        return ans
    def countThree ( num ) :
        nonZero = 0
        for i in num :
            nonZero += 1
        return nonZero
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576716309_7680/main.py", line 8
    

SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 648
---> probID: geeksforgeeks_2314_A
---> inputs:

---> outputs:
58.1481


def test_GFG ( ) :
    if a < 0 :
        return - 1
    r = float ( a * sqrt ( 2 ) ) / 3
    h = ( 2 * a ) / 3
    V = float ( 3.14 * pow ( r , 2 ) * h )
    assert V == [ - 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 649
---> probID: geeksforgeeks_2904_A
---> inputs:

---> outputs:
Prime


def genprimelist ( n ) :
    if n == 1 :
        return False
    for i in range ( 2 , n * i <= n ) :
        if n % i == 0 :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(
 37%|███▋      | 649/1746 [00:15<00:26, 41.64it/s]  File "./junk/1692576716356_6096/main.py", line 24
    assert
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 650
---> probID: geeksforgeeks_5011_A
---> inputs:

---> outputs:
2.718
2.929


def test_GFG ( ) :
    assert gf_degree ( [ ] ) == 0
    assert gf_degree ( [ 1 ] ) == 1
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 651
---> probID: geeksforgeeks_3274_A
---> inputs:

---> outputs:
1


def GFG ( p , n ) :
    ans = 0
    for i in range ( 1 , n - 1 ) :
        if p [ i - 1 ] > p [ i ] and p [ i ] > p [ i + 1 ] :
            ans += 1
        elif p [ i - 1 ] < p [ i ] and p [ i ] < p [ i + 1 ] :
            ans += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 652
---> probID: atcoder_ABC078_A
---> inputs:
A B
---> outputs:
<

def main ( ) :
    import sys
    a = sys . stdin . readline ( ) . rstrip ( '\n' )
    b = sys . stdin . readline ( ) . rstrip ( '\n' )
    if a > b :
        sys . stdout . write ( '>' )
    elif a == b :
        sys . stdout . write ( '=' )
    else :
        sys . stdout . write ( '<' )


---> console_out:
 
MATCHED!! :D


-------------------------------------


---> lineNum: 653
---> probID: geeksforgeeks_1228_A
---> inputs:

---> outputs:
Volume of triangular prism:  972.0


def test_GFG ( ) :
    from sympy . polys . distributedmodules import GFG
    volume = ( l * b * h ) / 2
    assert volume == volume


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576716452_7044/main.py", line 2
    f = open ( ' / home / jekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekek

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 654
---> probID: codeforces_462_B
---> inputs:
15 10
DZFDFZDFDDDDDDF
---> outputs:
82

def test_practice462b ( ) :
    f = open ( ' / home / jekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekekek

---> console_out:
 
DIDN'T MATCH!! :(
 37%|███▋      | 654/1746 [00:15<00:26, 41.74it/s]

-------------------------------------


---> lineNum: 655
---> probID: projecteuler_p045_A
---> inputs:

---> outputs:
1533776805

def p045 ( ) :
    print ( [ 'p045.py' , 'p045.h' , 'p045.c' , 'p045.d' , 'p045.e' , 'p045.f' , 'p045.g' , 'p045.h' , 'p045.i' , 'p045.j' , 'p045.k' , 'p045.l' , 'p045.m' , 'p045.n' , 'p045.o' , 'p045.p' , 'p045.q' , 'p045.r' , 'p045.s' , 'p045.t' , 'p045.u' , 'p045.v' , 'p045.w' , 'p045.x' , 'p045.y' , 'p045.z' , 'p045.w' , 'p045.x' , 'p045.y' , 'p045.z' , 'p045.w' , 'p045.x' , 'p045.y' , 'p045.z' , 'p045.w' , 'p045.x' , 'p045.y' , 'p045.z' , 'p045.w' , 'p045.x' , 'p045.y' , 'p045.z' , 'p045.w' , 'p045.x' , 'p045.y' , 'p045.z' , 'p045.w' , 'p045.x' , 'p045.y' , 'p045.z' , 'p045.w' , 'p045.x' , 'p045.y' , 'p045.z' , 'p045.w' , 'p045.x' , 'p045.y' , 'p045.z' , 'p045.w' , ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 656
---> probID: geeksforgeeks_554_A
---> inputs:

---> outputs:
4


def GFG ( N ) :
    if N < 2 :
        return 0
    arr = [ False ] * ( N + 1 )
    prod , res = 1 , 0
    for p in range ( 2 , N * p + 1 ) :
        if arr [ p ] == False :
            for i in range ( p * 2 , N , p ) :
                arr [ i ] = True
            prod *= p
            if prod > N :
                return res
            res += 1
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 657
---> probID: geeksforgeeks_1351_A
---> inputs:

---> outputs:
Yes


def test_GFG ( ) :
    """Test the greatest factorial minimization of a polynomial."""
    m = symbols ( 'm' , integer = True , positive = True )
    for i in range ( len ( a ) ) :
        m = max ( a [ i ] , m )
    assert checkdivisors ( m ) == 1
    X = max_element ( a )
    b = [ ]
    for i in range ( 1 , X * X ) :
        if X % i == 0 :
            b . append ( i )
            if X / i != i :
                b . append ( X / i )
    if len ( b ) != n :
        return False
    a = sorted ( a )
    b = sorted ( b )
    for i in range ( n ) :
        if b [ i ] != a [ i ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 658
---> probID: geeksforgeeks_3295_A
---> inputs:

---> outputs:
All Non-empty Subarrays
1 
1 2 
1 2 3 
1 2 3 4 
2 
2 3 
2 3 4 
3 
3 4 
4 


def test ( ) :
    arr = [ 1 , 2 , 3 , 4 ]
    subarray ( arr )
    for i in range ( n ) :
        for j in range ( i , n ) :
            for k in range ( i , j ) :
                print ( arr [ k ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576716569_6635/main.py", line 4
    work :
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 659
---> probID: codeforces_1679_A
---> inputs:
4
4
7
24
998244353998244352
---> outputs:
1 1
-1
4 6
166374058999707392 249561088499561088

def main ( ) :
    input = sys . stdin
    tc = int ( input . readline ( ) )
    work :
        while tc :
            n = input . readline ( )
            x = long ( n )
            y = long ( n )
            if n % 6 == 0 :
                x = min ( x , n // 6 )
                y = max ( y , n // 6 )
            if n % 6 == 2 and n != 2 :
                x = min ( x , ( ( n // 6 ) - 1 ) + 2 )
                y = max ( y , ( ( n // 6 ) - 1 ) + 2 )
            if n % 6 == 4 and n != 4 :
                x = min ( x , n // 6 + 1 )
                y = max ( y , n // 6 + 1 )
            if n % 4 == 0 :
                x = min ( x , n // 4 )
                y = max ( y , n // 4 )
            if n % 4 == 2 and n != 2 :
                x = min ( x , ( n // 4 ) - 1 + 1 )
                y = max ( y , ( n // 4 ) - 1 + 1 )
            if x != long ( n ) and y != long ( n ) :
                print ( x , y )
            else :
                print ( '-1' )


---> console_out:
 
DIDN'T MATCH!! :(
 38%|███▊      | 659/1746 [00:15<00:25, 41.97it/s]

-------------------------------------


---> lineNum: 660
---> probID: geeksforgeeks_1508_A
---> inputs:

---> outputs:
31


def test_GFG ( ) :
    arr = np . array ( [ 3 , 5 , 6 , 1 ] )
    n = len ( arr )
    assert max_sum ( arr , n ) == 3


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576716616_7746/main.py", line 20
    
                                        ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 661
---> probID: geeksforgeeks_5065_A
---> inputs:

---> outputs:
7


def test_GFG ( ) :
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
    a = np . array ( [ 1 , 3 , 2 , 1

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 662
---> probID: geeksforgeeks_5116_A
---> inputs:

---> outputs:
28465


def test_GFG ( ) :
    arr = np . array ( [ 53 , 28 , 143 , 5 ] )
    n = len ( arr )
    assert find_answer ( n , arr ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 663
---> probID: geeksforgeeks_3772_A
---> inputs:

---> outputs:
21


def test_GFG ( ) :
    arr = [ 1 , 2 , 3 , 1 , 1 , 4 , 5 , 6 ]
    n = len ( arr )
    assert find_sum ( arr , n ) == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 664
---> probID: geeksforgeeks_5172_A
---> inputs:

---> outputs:
Deepest Left Leaf Node :: 9


def pyGFG ( root ) :
    class GFG ( object ) :
        def __init__ ( self , data ) :
            self . data = data
            self . left = self . right = None
        def __reduce__ ( self ) :
            return ( self . data , self . left , self . right )
        def __mul__ ( self , rhs ) :
            if rhs . left is None :
                return rhs
            q = [ rhs ]
            result = None
            while not q :
                temp = q . pop ( )
                q . extend ( temp )
                if temp . left is not None :
                    q . append ( temp . left )
                    if temp . left . left is None and temp . left . right is None :
                        result = temp . left
                if temp . right is not None :
                    q . append ( temp . right )
            return result
        def __div__ ( self , other ) :
            return self . data / other . data
        def __truediv__ ( self , other ) :
            return self . data / other . data
        def __floordiv__ ( self , other ) :
            return self . data / other . data
        def __mod__ ( self , other ) :
            return self . data % other . data
        def __powered__ ( self , other ) :
            return self . data % other . data
        def __mod__ ( self , other ) :
            return self . data % other . data
        def __le__ ( self , other ) :
            return self . data <= other . data
        def __ge__ ( self , other ) :
            return self . data >= other . data
        def __ne__ ( self , other ) :
            return self . data != other . data
        def __hash__ ( self ) :
            return hash ( self . data )
    return GFG


---> console_out:
 
DIDN'T MATCH!! :(
 38%|███▊      | 664/1746 [00:16<00:25, 41.75it/s]

-------------------------------------


---> lineNum: 665
---> probID: geeksforgeeks_1273_A
---> inputs:

---> outputs:
Deepest Right Leaf Node :: 10


def pyGFG ( root ) :
    class GFG ( object ) :
        def __init__ ( self , data ) :
            self . data = data
            self . left = self . right = None
        def __reduce__ ( self ) :
            return ( self . data , self . left , self . right )
        def __mul__ ( self , rhs ) :
            if rhs . left is not None :
                return rhs . left
            if rhs . right is not None :
                return rhs . right
            if rhs . left . right is not None and rhs . left . right is None :
                return rhs . left . right
            return None
        def __div__ ( self , rhs ) :
            return rhs . left / rhs . right
        def __truediv__ ( self , rhs ) :
            return rhs . left / rhs . right
        def __floordiv__ ( self , rhs ) :
            return rhs . left / rhs . right
        def __mod__ ( self , rhs ) :
            return rhs . left % rhs . right
        def __pow__ ( self , rhs ) :
            return rhs . left ** rhs . right
        def __exquo__ ( self , rhs ) :
            return rhs . left ** rhs . right
        def __div__ ( self , rhs ) :
            return rhs . left / rhs . right
        def __pow__ ( self , rhs ) :
            return rhs . left ** rhs . right
        def __mod__ ( self , rhs ) :
            return rhs . left % rhs . right
        def __floordiv__ ( self , rhs ) :
            return rhs . left / rhs . right
        def __truediv__ ( self , rhs ) :
            return rhs . left / rhs . right
        def __div__ ( self , rhs ) :
            return rhs . left / rhs . right
        def __le__ ( self , rhs ) :
            return rhs . left <= rhs . right
        def __ge__ ( self , rhs ) :
            return rhs . left >= rhs . right
        def __ne__ ( self , rhs ) :
            return rhs . left != rhs . right
    return GFG ( root )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 666
---> probID: atcoder_ABC079_B
---> inputs:
5
---> outputs:
11

def main ( ) :
    s = sys . stdin
    n = len ( s )
    arr = [ 2 ] * n + [ 1 ] * n
    for i in range ( 2 , len ( arr ) ) :
        arr [ i ] = arr [ i - 1 ] + arr [ i - 2 ]
    print ( arr [ n ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 667
---> probID: geeksforgeeks_1235_A
---> inputs:

---> outputs:
3 : 4


def __gcd ( a , b ) :
    if a == 0 : return b
    if b == 0 : return a
    if a == b : return a
    if a > b : return __gcd ( a - b , b )
    return __gcd ( a , b - a )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 668
---> probID: geeksforgeeks_3832_A
---> inputs:

---> outputs:
Maximum sum :  6


def GFG ( arr , n ) :
    max_sum = 0
    current_sum = arr [ 0 ]
    for i in range ( 1 , n ) :
        if arr [ i - 1 ] < arr [ i ] :
            current_sum = current_sum + arr [ i ]
        else :
            max_sum = max ( max_sum , current_sum )
            current_sum = arr [ i ]
    return max ( max_sum , current_sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 669
---> probID: geeksforgeeks_2973_A
---> inputs:

---> outputs:
16


def test_GFG ( ) :
    if b == 0 :
        return a
    return GCD ( b , a % b )


---> console_out:
 
DIDN'T MATCH!! :(
 38%|███▊      | 669/1746 [00:16<00:25, 41.72it/s]

-------------------------------------


---> lineNum: 670
---> probID: geeksforgeeks_5234_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    """Test the degree of the first two of the first two of the second."""
    a , b = symbols ( 'a b' , integer = True , cls = Dummy )
    while b is not None :
        t = b
        b , a = a % b , t
    assert a == b


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 671
---> probID: aizu_p01303_A
---> inputs:
2
1 3 20 10
4
21 13
1 15
10 10
25 10
1 3 20 10
4
21 13
1 15
10 10
25 10
---> outputs:
2
2

def main ( ) :
    stdscr = stdscr . stdscr ( )
    a = stdscr . getkey ( )
    while a != 'q' :
        X , Y , W , H , N = stdscr . getkey ( )
        count = 0
        for i in range ( N ) :
            x , y = stdscr . getkey ( )
            if ( X <= x <= X + W ) :
                count += 1
        print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 672
---> probID: geeksforgeeks_2428_A
---> inputs:

---> outputs:
True


def GFG ( n1 ) :
    l = len ( n1 )
    if n1 == '0' :
        return 0
    if l % 3 == 1 :
        n1 = '00' + n1
        l += 2
    elif l % 3 == 2 :
        n1 = '0' + n1
        l += 1
    n = n1 . split ( ' ' )
    gSum = 0
    while l != 0 :
        gvalue = 0
        if l == 2 :
            gvalue = ( int ( n [ ( l - 2 ) ] ) - 48 ) * 100 + ( int ( n [ ( l - 1 ) ] ) - 48 ) * 10
        elif l == 1 :
            gvalue = ( int ( n [ ( l - 1 ) ] ) - 48 ) * 100
        else :
            gvalue = ( int ( n [ ( l - 3 ) ] ) - 48 ) * 100 + ( int ( n [ ( l - 2 ) ] ) - 48 ) * 10 + ( int ( n [ ( l - 1 ) ] ) - 48 ) * 1
        l = l - 3
        gSum = gSum + gvalue
    if gSum >= 1000 :
        return ( divisibleby37 ( str ( gSum ) ) )
    else :
        return ( gSum % 37 == 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 673
---> probID: codeforces_111_A
---> inputs:
5 15 15
---> outputs:
['4\n4\n1\n1\n2', '1\n1\n1\n1\n11']

def py2ascii ( ) :
    import sys
    import io
    import os
    import struct
    import time
    import random
    import string
    import tempfile
    import doctest
    import tempfile
    import time
    import random
    import string
    import tempfile
    import string
    import tempfile
    import random
    import string
    import string
    import random
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576716932_6166/main.py", line 3
    
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 674
---> probID: geeksforgeeks_3336_A
---> inputs:

---> outputs:
Minimum Cost to make two strings identical is =  60


def get_lcs ( X , Y , m , n ) :
    L = [ [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * m

---> console_out:
 
DIDN'T MATCH!! :(
 39%|███▊      | 674/1746 [00:16<00:25, 41.35it/s]

-------------------------------------


---> lineNum: 675
---> probID: geeksforgeeks_3156_A
---> inputs:

---> outputs:
6


def squares ( base ) :
    base = ( base - 2 )
    base = base / 2
    return base * ( base + 1 ) / 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 676
---> probID: geeksforgeeks_2553_A
---> inputs:

---> outputs:
7.3485


def GFG ( arr , n ) :
    square = 0
    mean = 0
    root = 0
    for i in range ( n ) :
        square += math . pow ( arr [ i ] , 2 )
    mean = ( square / float ( n ) )
    root = float ( math . sqrt ( mean ) )
    return root


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 677
---> probID: aizu_p00522_A
---> inputs:
4 3
180
160
170
190
2 100
3 120
4 250
---> outputs:
480

def main ( ) :
    import sys
    import getopt
    M = sys . argv [ 1 ]
    N = sys . argv [ 2 ]
    P = [ ]
    for i in range ( M ) :
        P . append ( sys . stdin . read ( ) )
    P . sort ( )
    dp = [ sys . maxint ] * ( M + 10001 )
    dp [ 0 ] = 0
    for i in range ( N ) :
        C = sys . stdin . read ( )
        E = sys . stdin . read ( )
        for j in range ( len ( dp ) - 1 , - C >= 0 , - E ) :
            if dp [ j - C ] == sys . maxint :
                continue
            dp [ j ] = min ( dp [ j ] , dp [ j - C ] + E )
    sum = [ ]
    for i in range ( M ) :
        sum . append ( sum [ i ] + P [ M - 1 - i ] )
    for i in range ( M + 1 , len ( sum ) ) :
        sum . append ( sum [ M ] )
    ans = 0
    for i in range ( sum [ 0 ] ) :
        if dp [ i ] == sys . maxint :
            continue
        ans = max ( ans , sum [ i ] - dp [ i ] )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 678
---> probID: aizu_p02287_A
---> inputs:
5
7 8 1 2 3
---> outputs:
node 1: key = 7, left key = 8, right key = 1, 
node 2: key = 8, parent key = 7, left key = 2, right key = 3, 
node 3: key = 1, parent key = 7, 
node 4: key = 2, parent key = 8, 
node 5: key = 3, parent key = 8,

def main ( ) :
    import sys
    import getopt
    global n
    global array
    for i in range ( 1 , n + 1 ) :
        getopt . getopt ( sys . argv [ 1 : ] , "n:a:" , [ "node=" , "parent=" , "left=" , "right=" ] )
    for i in range ( 1 , n + 1 ) :
        print ( "node %d: key = %d, " % ( i , array [ i ] ) )
        if i / 2 > 0 :
            print ( "parent key = %d, " % array [ i / 2 ] )
        if 2 * i <= n :
            print ( "left key = %d, " % array [ 2 * i ] )
        if ( 2 * i + 1 ) <= n :
            print ( "right key = %d, " % array [ 2 * i + 1 ] )
        print ( "" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 679
---> probID: geeksforgeeks_634_A
---> inputs:

---> outputs:
35


def GFG ( arr ) :
    n , m = 6 , 6
    dp = [ ]
    for i in range ( n ) :
        m1 , m2 , m3 = 0 , 0 , 0
        for j in range ( m ) :
            if ( j / ( m / 3 ) ) == 0 :
                m1 = max ( m1 , arr [ i ] [ j ] )
            elif ( j / ( m / 3 ) ) == 1 :
                m2 = max ( m2 , arr [ i ] [ j ] )
            elif ( j / ( m / 3 ) ) == 2 :
                m3 = max ( m3 , arr [ i ] [ j ] )
        dp . append ( max ( dp [ i ] [ 1 ] , dp [ i ] [ 2 ] ) + m1 )
        dp . append ( max ( dp [ i ] [ 0 ] , dp [ i ] [ 2 ] ) + m2 )
        dp . append ( max ( dp [ i ] [ 1 ] , dp [ i ] [ 0 ] ) + m3 )
    print ( max ( max ( dp [ n ] [ 0 ] , dp [ n ] [ 1 ] ) , dp [ n ] [ 2 ] ) + "\n" )


---> console_out:
 
DIDN'T MATCH!! :(
 39%|███▉      | 679/1746 [00:16<00:25, 41.32it/s]

-------------------------------------


---> lineNum: 680
---> probID: geeksforgeeks_4697_A
---> inputs:

---> outputs:
( 2 ,  3 )  ( 7 ,  8 )  ( 2 ,  8 )  ( 7 ,  3 ) 


def GFG ( x1 , y1 , x2 , y2 , x3 , y3 , x4 , y4 ) :
    x5 = max ( x1 , x3 )
    y5 = max ( y1 , y3 )
    x6 = min ( x2 , x4 )
    y6 = min ( y2 , y4 )
    if x5 > x6 or y5 > y6 :
        print ( "No intersection" )
        return
    print ( "(" + str ( x5 ) + ", " + str ( y5 ) + ") " )
    print ( "(" + str ( x6 ) + ", " + str ( y6 ) + ") " )
    x7 = x5
    y7 = y6
    print ( "(" + str ( x7 ) + ", " + str ( y7 ) + ") " )
    x8 = x6
    y8 = y5
    print ( "(" + str ( x8 ) + ", " + str ( y8 ) + ") " )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 681
---> probID: codeforces_424_A
---> inputs:
4
xxXx
---> outputs:
1
XxXx

def test_424_a ( ) :
    import sys
    n = len ( sys . argv )
    sys . argv = [ '--n' , '--s' , '--sitting' , '--standing' ] + sys . argv
    s = sys . argv [ 1 : ]
    sittingToStanding = 0
    sitting , standing = 0 , 0
    for i in range ( n ) :
        if s [ i ] == 'x' :
            sitting += 1
        else :
            standing += 1
    sittingToStanding = ( sitting - standing ) / 2
    assert abs ( sittingToStanding ) < 1e-10
    for i in range ( n ) :
        if s [ i ] == 'x' and sittingToStanding > 0 :
            print ( 'X' )
            sittingToStanding -= 1
        elif s [ i ] == 'X' and sittingToStanding < 0 :
            print ( 'x' )
            sittingToStanding += 1
        else :
            print ( s [ i ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 682
---> probID: codeforces_1214_A
---> inputs:
100
60
70
---> outputs:
40

def class1 ( arg ) :
    import sys
    import tokenize
    import string
    import tokenize
    import tokenize . tokentype as tokentype
    class FastReader ( tokenize . TokenReader ) :
        f = tokenize . StringIO ( )
        tokens = tokenize . generate_tokens ( lambda : tokentype . readline ( ) )
        def next ( self ) :
            while self . f . readline ( ) or not self . tokens :
                try :
                    self . tokens = self . tokens . next ( )
                except StopIteration :
                    pass
            return self . tokens
        def readline ( self ) :
            str = self . f . readline ( )
            if not str :
                return
            else :
                return str
    class Scanner ( object ) :
        def __init__ ( self , filename = None ) :
            self . filename = filename
            self . lines = [ ]
        def readline ( self ) :
            if not self . lines or not self . filename :
                return
            self . lines . append ( self . filename )
        def readline ( self ) :
            if not self . lines :
                return
            self . lines . pop ( 0 )
    class Scanner ( Scanner ) :
        def __init__ ( self , filename = None ) :
            self . filename = filename
            self . lines = [ ]
        def readline ( self ) :
            if not self . lines :
                return
            else :
                return self . lines . pop ( 0 )
        def readline ( self ) :
            if not self . lines :
                return
            else :
                return self . lines . pop ( 0 )
    class Scanner ( Scanner ) :
        def __init__ ( self , filename = None ) :
            self . filename = filename
            self . lines = [ ]
        def readline ( self ) :
            if not self . lines :
                return
            else :
                return self . lines . pop ( 0 )
    class Scanner ( Scanner ) :
        def __init__ ( self , filename = None ) :
            self . filename = filename
            self . lines = [ ]
        def readline ( self ) :
            if not self . lines :
                return
            else :
                return self . lines . pop ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 683
---> probID: geeksforgeeks_981_A
---> inputs:

---> outputs:
244.44444444444446


def GFG ( W , wt , val , n ) :
    maxratio = float ( 'inf' )
    maxindex = 0
    for i in range ( n ) :
        if ( val [ i ] / wt [ i ] ) > maxratio :
            maxratio = ( val [ i ] / wt [ i ] )
            maxindex = i
    return ( W * maxratio , maxindex )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 684
---> probID: geeksforgeeks_4682_A
---> inputs:

---> outputs:
2 9 8 13 14 19 

def pyGFG ( arr , n ) :
    arr . sort ( )
    v1 = Vector ( )
    v2 = Vector ( )
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            v1 . append ( arr [ i ] )
        else :
            v2 . append ( arr [ i ] )
    index , i , j = 0 , 0 , 0
    flag = False
    if arr [ 0 ] % 2 == 0 :
        flag = True
    while index < n :
        if flag == True :
            arr [ index ] = int ( v1 [ i ] )
            i += 1
            index += 1
            flag = not flag
        else :
            arr [ index ] = int ( v2 [ j ] )
            j += 1
            index += 1
            flag = not flag
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
 39%|███▉      | 684/1746 [00:16<00:25, 41.19it/s]

-------------------------------------


---> lineNum: 685
---> probID: atcoder_ABC061_A
---> inputs:
1 3 2
---> outputs:
Yes

def main ( ) :
    import sys
    A = sys . stdin . readline ( ) . rstrip ( )
    B = sys . stdin . readline ( ) . rstrip ( )
    C = sys . stdin . readline ( ) . rstrip ( )
    if A <= C and B >= C :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 686
---> probID: geeksforgeeks_1960_A
---> inputs:

---> outputs:
1 3 0 1 

def get_GFG ( n ) :
    binary_num = [ 0 ] * 32
    i = 0
    while n > 0 :
        binary_num [ i ] = n % 2
        n = n / 2
        i += 1
    binary = ""
    for j in range ( i - 1 , - 1 , - 1 ) :
        binary += str ( binary_num [ j ] )
    return binary


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 687
---> probID: geeksforgeeks_2512_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    x = 0
    for i in range ( n ) :
        x += ( arr [ i ] & 1 )
    assert min ( x ) == n - x


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576717272_2613/main.py", line 13
    else : break
           ^
SyntaxError: 'break' outside loop


-------------------------------------


---> lineNum: 688
---> probID: leetcode_215_A
---> inputs:

---> outputs:
5

def find_kth_largest ( nums , k ) :
    """
 Find the Kth largest of the given number of numbers.
 """
    shuffle ( nums )
    k = len ( nums ) - k
    lo = 0
    hi = len ( nums ) - 1
    while lo < hi :
        def exch ( a , lo , hi ) :
            if a [ lo ] < a [ hi ] : lo = a [ lo ] + 1
            elif a [ hi ] > a [ lo ] : hi = a [ hi ] - 1
            else : break
        return a [ lo ]
    def exch ( a , lo , hi ) :
        if a [ lo ] < a [ hi ] : hi = a [ hi ] + 1
        elif a [ hi ] > a [ lo ] : lo = a [ lo ] - 1
        else : break
    def exch ( a , lo , hi ) :
        tmp = a [ i ]
        a [ i ] , a [ j ] = a [ j ] , a [ j ]
        a [ j ] = tmp
    def less ( v , w ) :
        return v < w
    def shuffle ( a ) :
        random . shuffle ( a )
        for ind in range ( 1 , len ( a ) ) :
            r = random . randint ( 0 , ind + 1 )
            exch ( a [ ind ] , r )
    sObj = Solution ( )
    nums = [ 3 , 2 , 1 , 5 , 6 , 4 ]
    k = 2
    out = sObj . find_kth_largest ( nums , k )
    print ( out )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 689
---> probID: geeksforgeeks_2291_A
---> inputs:

---> outputs:
YES


def GFG ( n ) :
    temp = n
    while n :
        k = n % 10
        if temp % k == 0 :
            return "YES"
        n /= 10
    return "NO"


---> console_out:
 
DIDN'T MATCH!! :(
 39%|███▉      | 689/1746 [00:16<00:25, 41.41it/s]

-------------------------------------


---> lineNum: 690
---> probID: geeksforgeeks_1809_A
---> inputs:

---> outputs:
NO


def GFG ( n ) :
    temp = n
    sum = 0
    while n != 0 :
        k = int ( n % 10 )
        sum += k
        n /= 10
    if temp % sum == 0 :
        return "YES"
    return "NO"


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 691
---> probID: atcoder_ABC059_B
---> inputs:
36
24
---> outputs:
GREATER

def main ( ) :
    s = sys . stdin
    a = s . readline ( )
    b = s . readline ( )
    answer = ""
    naa = len ( a )
    nab = len ( b )
    i = 0
    if naa == nab :
        if a == b :
            answer = "EQUAL"
        else :
            for i in range ( naa ) :
                q = a [ i ] + 0
                l = b [ i ] - 0
                if q > l :
                    answer = "GREATER"
                    break
                elif q < l :
                    answer = "LESS"
                    break
    elif naa > nab :
        answer = "GREATER"
    elif naa < nab :
        answer = "LESS"
    print ( answer )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 692
---> probID: geeksforgeeks_1237_A
---> inputs:

---> outputs:
54


def GFG ( l , b ) :
    size = 1
    max_size = min ( l , b )
    total_area = 0
    for i in range ( 1 , max_size + 1 ) :
        total_squares = ( l - size + 1 ) * ( b - size + 1 )
        area = total_squares * size * size
        total_area += area
        size += 1
    return total_area


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 693
---> probID: geeksforgeeks_751_A
---> inputs:

---> outputs:
5 3 1 4 2 

def GFG ( N ) :
    if N == 1 :
        print ( '1' )
        return
    if N == 2 or N == 3 :
        print ( '-1' )
        return
    even , odd = - 1 , - 1
    if N % 2 == 0 :
        even , odd = N , N - 1
    else :
        odd , even = N , N - 1
    while odd >= 1 :
        print ( odd )
        print ( ' ' )
        odd = odd - 2
    while even >= 2 :
        print ( even )
        print ( ' ' )
        even = even - 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 694
---> probID: geeksforgeeks_2339_A
---> inputs:

---> outputs:
4


def find_min_equal_sums ( a , N ) :
    sum = 0
    for i in range ( N ) :
        sum += a [ i ]
    sum1 , sum2 = 0 , 0
    min = sys . maxint
    for i in range ( N ) :
        sum1 += a [ i ]
        sum2 = sum - sum1
        if abs ( sum1 - sum2 ) < min :
            min = abs ( sum1 - sum2 )
        if min == 0 :
            break
    return min


---> console_out:
 
DIDN'T MATCH!! :(
 40%|███▉      | 694/1746 [00:16<00:25, 41.83it/s]

-------------------------------------


---> lineNum: 695
---> probID: codeforces_1647_A
---> inputs:
5
1
2
3
4
5
---> outputs:
1
2
21
121
212

def main ( ) :
    import sys
    t = sys . argv [ 1 ]
    for i in range ( t ) :
        n = int ( i )
        parts = [ ]
        mod = n % 3
        if mod == 1 :
            for j in range ( n // 3 ) :
                parts . append ( 12 )
            parts . append ( 1 )
        else :
            for j in range ( n // 3 ) :
                parts . append ( 21 )
            if mod == 2 :
                parts . append ( 2 )
        sys . argv [ 1 : ] = parts


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 696
---> probID: geeksforgeeks_1514_A
---> inputs:

---> outputs:
56


def test_GFG ( ) :
    a = [ 1 , 4 , 2 , 3 , 9 ]
    N = len ( a )
    assert find_optimal ( a , N ) == 0


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576717485_6521/main.py", line 23
    task = next_task += 1
                     ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 697
---> probID: codeforces_644_B
---> inputs:
5 1
2 9
4 8
10 9
15 2
19 1
---> outputs:
11 19 -1 21 22

def main ( ) :
    f = open ( sys . argv [ 1 ] )
    data = f . read ( )
    tasks = list ( map ( int , data . split ( ) ) )
    task_list = Queue . Queue ( )
    events = PriorityQueue ( tasks [ 0 ] )
    task_dur = [ ]
    for i in range ( tasks [ 0 ] ) :
        task_input = list ( map ( int , data . split ( ) ) )
        task_dur . append ( task_input [ 1 ] )
        events . add ( task_input [ 0 ] * 2 + 1 )
    sol = [ ]
    next_task = 0
    while events :
        event = events . pop ( )
        time = event [ 0 ] // 2
        if event [ 1 ] % 2 == 0 :
            task_id = task_list . pop ( )
            sol . append ( time )
            if not task_list :
                events . append ( ( time + task_dur [ task_list . index ( task ) ] ) * 2 )
        else :
            task = next_task += 1
            if len ( task_list ) <= tasks [ 1 ] :
                task_list . append ( task )
                if len ( task_list ) == 1 :
                    events . append ( ( time + task_dur [ task ] ) * 2 )
            else :
                sol . append ( - 1 )
    print ( sum ( sol ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 698
---> probID: codeforces_1668_B
---> inputs:
6
3 2
1 1 1
2 4
1 1
2 5
2 1
3 8
1 2 1
4 12
1 2 1 3
4 19
1 2 1 3
---> outputs:
NO
YES
NO
YES
NO
YES

def main ( ) :
    import sys
    t = sys . argv [ 1 ]
    while t :
        n , m = t . split ( ' ' )
        a = [ ]
        for i in range ( n ) :
            a . append ( i )
        if n > m :
            print ( 'NO' )
            continue
        a . sort ( )
        ans = a [ - 1 ]
        for i in range ( n - 1 , - 1 , - 1 ) :
            ans += 1
            if i > 0 :
                ans += a [ i ]
        if ans <= m :
            print ( 'YES' )
        else :
            print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 699
---> probID: geeksforgeeks_428_A
---> inputs:

---> outputs:
6


def GFG ( a ) :
    count = 0
    for i in range ( len ( a ) ) :
        for j in range ( len ( a ) ) :
            if a [ i ] < a [ j ] :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 40%|████      | 699/1746 [00:16<00:25, 41.79it/s]  File "./junk/1692576717557_6489/main.py", line 34
    
     ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 700
---> probID: codeforces_1230_B
---> inputs:
5 3
51528
---> outputs:
10028

def   pre5 ( ) :
# import sys, os, time, string, random, random
# import random, string, random, random
# import time, random, time, time
# import string, random, random
# import random, string, random, random
# import random, string, random, random
# import time, string, time, time
# import random, string, random, random
# import random, string, random, random ,   random
# import string, random, random ,   random
# import random, string, random, random
# import random, string, random, random ,   random
# import string, random, string
# import random, string, random, random
# import random, string, random, random
# import random, string, random, random ,   random
# import string, random, string
# import random, string, random, random
# import string
# import random, string, random, random ,   random
# import string
# import random, string, random, random ,   random
# import random, string, random, random ,   random
# import random, string, random, random ,   random
# import string, random, random ,   random ,   random
# import random, string, random, random ,   random ,   random
# import random, string, random, random ,   random ,   random
# import random, string, random, random ,   random ,   random
# import random, string, random, random ,   random ,   random
# import random, string, random, random ,   random ,   random
# import random, string, random, random ,   random
#

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 701
---> probID: codeforces_812_A
---> inputs:
1 0 0 1
0 1 0 0
0 0 1 0
0 0 0 1
---> outputs:
YES

def main1 ( ) :
    import sys
    arr = [ ]
    for i in range ( 4 ) :
        for j in range ( 4 ) :
            arr . append ( i )
    if arr [ 0 ] [ 3 ] == 1 :
        if arr [ 0 ] [ 1 ] == 1 or arr [ 0 ] [ 2 ] == 1 or arr [ 0 ] [ 0 ] == 1 or arr [ 1 ] [ 0 ] == 1 or arr [ 2 ] [ 1 ] == 1 or arr [ 3 ] [ 2 ] == 1 :
            print ( "YES" )
            return
    if arr [ 1 ] [ 3 ] == 1 :
        if arr [ 1 ] [ 1 ] == 1 or arr [ 1 ] [ 2 ] == 1 or arr [ 1 ] [ 0 ] == 1 or arr [ 2 ] [ 0 ] == 1 or arr [ 3 ] [ 1 ] == 1 or arr [ 0 ] [ 2 ] == 1 :
            print ( "YES" )
            return
    if arr [ 2 ] [ 3 ] == 1 :
        if arr [ 2 ] [ 1 ] == 1 or arr [ 2 ] [ 2 ] == 1 or arr [ 0 ] [ 0 ] == 1 or arr [ 3 ] [ 0 ] == 1 or arr [ 0 ] [ 2 ] == 1 :
            print ( "YES" )
            return
    if arr [ 3 ] [ 3 ] == 1 :
        if arr [ 3 ] [ 1 ] == 1 or arr [ 3 ] [ 2 ] == 1 or arr [ 0 ] [ 0 ] == 1 or arr [ 1 ] [ 1 ] == 1 or arr [ 0 ] [ 0 ] == 1 or arr [ 0 ] [ 0 ] == 1 or arr [ 1 ] [ 2 ] == 1 :
            print ( "YES" )
            return
    print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 702
---> probID: geeksforgeeks_140_A
---> inputs:

---> outputs:
47


def GFG ( ) :
    N = 10000
    MOD = 1000000007
    F = np . zeros ( ( N , N ) )
    def precompute ( ) :
        F [ 1 : ] = 2
        F [ 2 : ] = 3
        F [ 3 : ] = 4
        for i in range ( 4 , N ) :
            F [ i ] = ( F [ i - 1 ] + F [ i - 2 ] ) % MOD
    def main ( ) :
        n = 8
        precompute ( )
        print ( F [ n ] )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 703
---> probID: aizu_p01314_A
---> inputs:
9
500
0
---> outputs:
2
3

def py ( z ) :
    i , j , k , c , t , b = z
    s = [ ]
    for ( t , c ) in zip ( t , c ) :
        for ( b , c ) in zip ( b , c ) :
            for ( i , j ) in zip ( i , j ) :
                b += c if t == i else 1
    return b


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 704
---> probID: geeksforgeeks_4886_A
---> inputs:

---> outputs:
Length of Longest Increasing Subsequence is  6


def pylis_ceil ( A , l , r , key ) :
    while r - l > 1 :
        m = l + ( r - l ) // 2
        if A [ m ] >= key :
            r = m
        else :
            l = m
    return r


---> console_out:
 
DIDN'T MATCH!! :(
 40%|████      | 704/1746 [00:17<00:24, 41.75it/s]

-------------------------------------


---> lineNum: 705
---> probID: aizu_p00402_A
---> inputs:
3
4 0 1
---> outputs:
2

def main ( ) :
    s = sys . stdin
    N = len ( s )
    ban = [ s [ i ] for i in range ( N ) ]
    ban . sort ( )
    print ( ( ban [ N - 1 ] - ban [ 0 ] + 1 ) / 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 706
---> probID: projecteuler_p074_A
---> inputs:

---> outputs:
402

def p074 ( n ) :
    print ( [ n ] )
    def factorial ( n ) :
        return library . pow ( 10 , 6 )
    def factorial ( n ) :
        count = 0
        for i in range ( LIMIT ) :
            if get_chain_length ( n ) == 60 :
                count += 1
        return str ( count )
    def factorial ( n ) :
        seen = set ( )
        while True :
            if not seen . add ( n ) :
                return len ( seen )
            n = factorialize ( n )
    FACTORIAL = [ 1 , 1 , 2 , 6 , 24 , 120 , 720 , 5040 , 40320 , 362880 ]
    def factorialize ( n ) :
        sum = 0
        for _ in range ( n ) :
            sum += FACTORIAL [ n % 10 ]
        return sum
    return factorial


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 707
---> probID: geeksforgeeks_2975_A
---> inputs:

---> outputs:
2


def colour_visible ( height , colour , K ) :
    arr = [ 0 ] * K + [ 0 ] * K
    visible = 0
    max = height [ K - 1 ]
    arr [ colour [ K - 1 ] ] = 1
    for i in range ( K - 2 , - 1 , - 1 ) :
        if height [ i ] > max :
            max = height [ i ]
            arr [ colour [ i ] ] = 1
    for i in range ( 1 , K + 1 ) :
        if arr [ i ] == 1 :
            visible += 1
    return visible


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 708
---> probID: geeksforgeeks_2959_A
---> inputs:

---> outputs:
No


def GFG ( n ) :
    i = math . log ( n ) / math . log ( 8 )
    return ( i - math . floor ( i ) < 0.000001 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576717772_5242/main.py", line 10
    

SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 709
---> probID: codeforces_1611_B
---> inputs:
6
5 5
10 1
2 3
0 0
17 2
1000000000 1000000000
---> outputs:
2
1
1
0
2
500000000

def test_solution ( ) :
    """
SPACETOKENTestSPACETOKENsolutionSPACETOKENtoSPACETOKENtheSPACETOKENKroneckerSPACETOKENForestSPACETOKENalgorithm.
SPACETOKEN"""
    f = nx . complete_graph ( 5 )
    for t in range ( 5 ) :
        a , b = f ( t )
        res = min ( ( a + b ) / 4 , min ( a , b ) )
        assert_equal ( res , ( 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 ,

---> console_out:
 
DIDN'T MATCH!! :(
 41%|████      | 709/1746 [00:17<00:24, 41.73it/s]  File "./junk/1692576717797_2253/main.py", line 12
    print ( """ usage : SPACETOKEN % s SPACETOKEN [ - h | - b | - b | - b ] SPACETOKEN < filename

SyntaxError: EOF while scanning triple-quoted string literal


-------------------------------------


---> lineNum: 710
---> probID: aizu_p01117_A
---> inputs:
5 2
10 20 30 40 50
15 25 35 45 55
6 3
10 20 30 15 25 35
21 34 11 52 20 18
31 15 42 10 21 19
4 2
0 0 0 0
0 0 0 0
0 0
---> outputs:
105
83
0

def main ( ) :
    import sys
    import getopt
    global maxes
    global verbose
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , "hb" )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """ usage : SPACETOKEN % s SPACETOKEN [ - h | - b | - b | - b ] SPACETOKEN < filename

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 711
---> probID: codeforces_920_B
---> inputs:
2
2
1 3
1 4
3
1 5
1 1
2 3
---> outputs:
1 2
1 0 2

def main ( ) :
    import sys
    t = sys . argv [ 1 ]
    while t :
        n = len ( t )
        l = [ ]
        r = [ ]
        for i in range ( n ) :
            l . append ( t [ i ] )
            r . append ( t [ i ] )
        s = 0
        for i in range ( n ) :
            if s < r :
                if l [ i ] > s :
                    s = l [ i ]
                else :
                    s += 1
                sys . stdout . write ( s + " " )
            else :
                sys . stdout . write ( 0 + " " )
        sys . stdout . write ( "\n" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 712
---> probID: geeksforgeeks_728_A
---> inputs:

---> outputs:
Number of ways =  5


def test_GFG ( ) :
    n = 7
    m = 4
    assert count_ways ( n , m ) == n + m


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 713
---> probID: geeksforgeeks_4845_A
---> inputs:

---> outputs:
4
2 1 3 2 

def GFG ( n ) :
    print ( n + n / 2 )
    for i in range ( 2 , n + 2 , 2 ) :
        print ( i , end = ' ' )
    for i in range ( 1 , n + 2 , 2 ) :
        print ( i , end = ' ' )
    for i in range ( 2 , n + 2 , 2 ) :
        print ( i , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 714
---> probID: aizu_p02116_A
---> inputs:
2
---> outputs:
1

def main ( ) :
    bfo = open ( '/proc/cpuinfo' , 'r' )
    str = bfo . read ( )
    res = 0
    han = 0
    ni_beki = 1
    ruijyo = 0
    if str == '' :
        sys . exit ( 0 )
    else :
        res = int ( str )
        for i in range ( 1 ) :
            han = ( res >> ruijyo ) % 2
            if han == 0 :
                res = ( res % ni_beki ) + 1
                i = 1
                break
            else :
                ni_beki = ni_beki * 2
                ruijyo += 1
        sys . exit ( res )


---> console_out:
 
DIDN'T MATCH!! :(
 41%|████      | 714/1746 [00:17<00:24, 41.90it/s]  File "./junk/1692576717915_9359/main.py", line 12
    
                                                                        ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 715
---> probID: atcoder_ABC043_B
---> inputs:
01B0
---> outputs:
00

def main ( ) :
    parser = argparse . ArgumentParser ( description = 'GenerateSPACETOKENaSPACETOKENbinarySPACETOKENfileSPACETOKENfromSPACETOKENaSPACETOKENsetSPACETOKENofSPACETOKENbinarySPACETOKENdata' )
    parser . add_argument ( '--binary' , required = True , help = 'TheSPACETOKENbinarySPACETOKENfileSPACETOKENtoSPACETOKENgenerateSPACETOKENaSPACETOKENbinarySPACETOKENfileSPACETOKENfrom' )
    parser . add_argument ( '--binary-file' , required = True , help = 'TheSPACETOKENbinarySPACETOKENfileSPACETOKENtoSPACETOKENgenerateSPACETOKENaSPACETOKENbinarySPACETOKENfileSPACETOKENfrom' )
    parser . add_argument ( '--binary-file' , required = True , help = 'TheSPACETOKENbinarySPACETOKENfileSPACETOKENtoSPACETOKENgenerateSPACETOKENaSPACETOKENbinarySPACETOKENfileSPACETOKENfrom' )
    parser . add_argument ( '--binary-file' , required = True , help = 'TheSPACETOKENbinarySPACETOKENfileSPACETOKENtoSPACETOKENgenerateSPACETOKENaSPACETOKENbinarySPACETOKENfileSPACETOKENfrom' )
    parser . add_argument ( '--binary-file' , required = True , help = 'TheSPACETOKENbinarySPACETOKENfileSPACETOKENtoSPACETOKENgenerateSPACETOKENaSPACETOKENbinarySPACETOKENfileSPACETOKENfrom' )
    parser . add_argument ( '--binary-file' , required = True , help = 'TheSPACETOKENbinarySPACETOKENfileSPACETOKENtoSPACETOKENgenerateSPACETOKENaSPACETOKENbinarySPACETOKENfileSPACETOKENfrom' )
    parser . add_argument ( '--binary-file' , required = True , help = 'TheSPACETOKENbinarySPACETOKENfileSPACETOKENtoSPACETOKENgenerateSPACETOKENaSPACETOKENbinarySPACETOKENfileSPACETOKENfrom' )
    parser . add_argument ( '--binary-file' , required = True , help = 'TheSPACETOKENbinarySPACETOKENfileSPACETOKENtoSPACETOKENgenerateSPACETOKENaSPACETOKENbinarySPACETOKENfileSPACETOKENfrom' )
    parser . add_argument ( '--binary-file' , required = True , help

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 716
---> probID: aizu_p02412_A
---> inputs:
5 9
0 0
---> outputs:
2

def main ( ) :
    import sys
    while True :
        a , b = input ( ) . split ( )
        if a == 0 and b == 0 :
            break
        count = { 0 : 0 , 1 : 0 }
        used = [ ]
        for x in range ( 1 , a + 1 ) :
            if y != x :
                y = x + 1
            if y != x and y != b :
                y = y + 1
            if y != x and y != b :
                y = y + 1
            if y != x and y != b :
                y = y + 1
            if y != x and y != b :
                y = y + 1
            if y != x and y != b :
                sorted = sorted ( y )
                if used [ sorted ] == 1 :
                    return
                used [ sorted ] += 1
                count [ 1 ] += 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576717963_4259/main.py", line 14
    return dp [ ind ] [ cnt ] = ans
                              ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 717
---> probID: geeksforgeeks_2835_A
---> inputs:

---> outputs:
9


def gen2int ( ind , cnt , last , a , n , k , dp ) :
    if cnt == k :
        return 0
    if ind == n :
        return int ( - 1e9 )
    if dp [ ind ] [ cnt ] != - 1 :
        return dp [ ind ] [ cnt ]
    ans = 0
    for i in range ( ind , n ) :
        if cnt % 2 == 0 :
            ans = max ( ans , recur ( i + 1 , cnt + 1 , i , a , n , k , dp ) )
        else :
            ans = max ( ans , __gcd ( a [ last ] , a [ i ] ) + recur ( i + 1 , cnt + 1 , 0 , a , n , k , dp ) )
    return dp [ ind ] [ cnt ] = ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 718
---> probID: codeforces_351_A
---> inputs:
3
0.000 0.500 0.750 1.000 2.000 3.000
---> outputs:
0.250

def test_A ( ) :
    f = open ( '/tmp/A.txt' , 'r' )
    lines = f . readlines ( )
    n = int ( lines [ 0 ] )
    tokens = lines [ 1 : ]
    arr = [ ]
    non_int = 0
    sum_before , sum = 0 , 0
    for i in range ( 2 * n ) :
        num = float ( tokens [ i ] )
        sum_before += num
        if num != math . floor ( num ) :
            non_int += 1
        sum += math . floor ( num )
        arr . append ( num )
    max_sum = min ( n , non_int ) + sum
    min_sum = max ( 0 , non_int - n ) + sum
    ans = None
    if min_sum > sum_before :
        ans = ( min_sum - sum_before )
    elif max_sum < sum_before :
        ans = ( sum_before - max_sum )
    else :
        x = sum_before - math . floor ( sum_before )
        ans = min ( 1 - x , x )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 719
---> probID: geeksforgeeks_3293_A
---> inputs:

---> outputs:
Yes


def GFG ( bin ) :
    if bin == '00' :
        return 0
    if bin == '01' :
        return 1
    if bin == '10' :
        return 2
    return 3
def is_divisible_by_5 ( bin ) :
    l = len ( bin )
    if l % 2 != 0 :
        bin = '0' + bin
    odd_sum , even_sum = 0 , 0
    is_odd_digit = 1
    for i in range ( 0 , len ( bin ) , 2 ) :
        if is_odd_digit != 0 :
            odd_sum += equivalent_base4 ( bin [ i : i + 2 ] )
        else :
            even_sum += equivalent_base4 ( bin [ i : i + 2 ] )
        is_odd_digit ^= 1
    if abs ( odd_sum - even_sum ) % 5 == 0 :
        return 'Yes'
    return 'No'
def main ( ) :
    bin = '10000101001'
    print ( is_divisible_by_5 ( bin ) )


---> console_out:
 
DIDN'T MATCH!! :(
 41%|████      | 719/1746 [00:17<00:24, 41.87it/s]

-------------------------------------


---> lineNum: 720
---> probID: aizu_p00121_A
---> inputs:
0 1 2 3 4 5 6 7
1 0 2 3 4 5 6 7
7 6 5 4 3 2 1 0
---> outputs:
0
1
28

def main ( ) :
    import sys
    queue = [ ]
    d = { }
    d [ 0 ] = 0
    d [ 1 ] = 1
    d [ 2 ] = 2
    d [ 3 ] = 3
    d [ 4 ] = 4
    d [ 5 ] = 5
    d [ 6 ] = 6
    d [ 7 ] = 7
    d [ 8 ] = 8
    d [ 9 ] = 9
    d [ 10 ] = 10
    d [ 11 ] = 11
    d [ 12 ] = 12
    d [ 13 ] = 13
    d [ 14 ] = 14
    d [ 15 ] = 15
    d [ 16 ] = 16
    d [ 17 ] = 17
    d [ 18 ] = 18
    d [ 19 ] = 19
    d [ 20 ] = 20
    d [ 21 ] = 21
    d [ 22 ] = 22
    d [ 23 ] = 23
    d [ 24 ] = 24
    d [ 25 ] = 25
    d [ 26 ] = 26
    d [ 27 ] = 27
    d [ 28 ] = 28
    d [ 29 ] = 29
    d [ 30 ] = 30
    d [ 31 ] = 31
    d [ 32 ] = 32
    d [ 33 ] = 33
    d [ 34 ] = 34
    d [ 35 ] = 35
    d [ 36 ] = 36
    d [ 37 ] = 37
    d [ 38 ] = 38
    d [ 39 ] = 39
    d [ 40 ] = 40
    d [ 41 ] = 41
    d [ 42 ] = 42
    d [ 43 ] = 43
    d [ 44 ] = 44
    d [ 45 ] = 45
    d [ 46 ] = 46
    d [ 47 ] = 47
    d [ 48 ] = 48
    d [ 49 ] = 49
    d [ 50 ] = 50
    d [ 51 ] = 51
    d [ 52 ] = 52
    d [ 53 ] = 53
    d [ 54 ] = 54
    d [ 55 ] = 55
    d [ 56 ] = 56
    d [ 57 ] = 57
    d [ 58 ] = 58
    d [ 59 ] = 58
    d [ 60 ] = 60
    d [ 61 ] = 61
    d [ 62 ] = 62
    d [ 63 ] = 63
    d [ 64 ] = 64
    d [ 65 ] = 65
    d [ 66 ] = 66
    d [ 67 ] = 67
    d [ 68 ] = 67
    d [ 69 ] = 69
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 721
---> probID: codeforces_55_B
---> inputs:
1 1 1 1
+ + *
---> outputs:
3

def py_smallest_number ( arr , ops , idx ) :
    """
 Return the smallest number of elements in arr.
 """
    min = np . inf
    arr = np . array ( arr )
    ops = [ ]
    for i in range ( 4 ) :
        ops . append ( i )
    util . sort ( arr , ops , 0 )
    print ( min )
    return min


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 722
---> probID: geeksforgeeks_4183_A
---> inputs:

---> outputs:
Minimum Number of Square Free Divisors is 3
Minimum Number of Square Free Divisors is 1


def test_GFG ( ) :
    from sympy . polys . distributedmodules import gf_degree
    MAX = 1005
    SieveOfEratosthenes ( )
    primes = [ True for i in range ( MAX ) ]
    for p in primes :
        if p == True :
            for i in range ( p * 2 , MAX , p ) :
                prime = False
    for p in primes :
        if prime :
            primes . insert ( 0 , p )
    minimum_squared_free_divisors = [ ]
    for i in range ( 0 , len ( primes ) , 2 ) :
        if primes [ i ] * primes [ i ] <= N :
            if N % primes [ i ] == 0 :
                tmp = 0
                while N % primes [ i ] == 0 :
                    tmp += 1
                    N /= primes [ i ]
                max_count = max ( max_count , tmp )
        if max_count == 0 :
            max_count = 1
        return max_count
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 723
---> probID: atcoder_ABC087_A
---> inputs:
1234
150
100
---> outputs:
84

def main ( ) :
    import sys
    x = sys . argv [ 1 ]
    a = sys . argv [ 2 ]
    b = sys . argv [ 3 ]
    print ( ( x - a ) % b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 724
---> probID: codeforces_222_A
---> inputs:
3 2
3 1 1
---> outputs:
1

def main ( ) :
    import sys
    n = len ( sys . argv )
    k = len ( sys . argv )
    arr = [ ]
    for i in range ( n ) :
        arr . append ( sys . argv [ i ] )
    idx = k - 1
    flag = True
    while idx < n :
        if arr [ idx ] != arr [ k - 1 ] :
            flag = False
            break
        idx += 1
    if not flag :
        sys . stdout . write ( - 1 )
    else :
        i = k - 1
        while i >= 0 :
            if arr [ i ] != arr [ k - 1 ] :
                break
            i -= 1
        sys . stdout . write ( i + 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 41%|████▏     | 724/1746 [00:17<00:24, 41.00it/s]

-------------------------------------


---> lineNum: 725
---> probID: geeksforgeeks_4747_A
---> inputs:

---> outputs:
The number after unsetting the rightmost set bit 6


def GFG ( n ) :
    return n & ( n - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576718187_4617/main.py", line 13
    max_len = max ( max_len , yield length )
                              ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 726
---> probID: geeksforgeeks_2348_A
---> inputs:

---> outputs:
5


def get_GFG ( A , n ) :
    S = set ( )
    for t in A :
        S . add ( t )
    max_len , x , y = 0 , A [ n ] + A [ n ]
    for i in range ( n ) :
        for j in range ( i + 1 , n ) :
            x , y = A [ j ] , A [ i ] + A [ j ]
            length = 3
            while S . add ( y ) and ( y != S . last ( ) ) :
                z = x + y
                x , y = y , z
                max_len = max ( max_len , yield length )
    return max_len >= 3


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 727
---> probID: geeksforgeeks_2188_A
---> inputs:

---> outputs:
7


def count_pairs ( a , b , n , m ) :
    cnt = 0
    s = set ( )
    for i in range ( n ) :
        for j in range ( m ) :
            sum = a [ i ] + b [ j ]
            if s . intersection ( sum ) == False :
                cnt += 1
                s . add ( sum )
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 728
---> probID: geeksforgeeks_94_A
---> inputs:

---> outputs:
Yes


def GFG ( arr , x , n ) :
    sum = 0
    for i in range ( n ) :
        y = math . sqrt ( arr [ i ] )
        if math . floor ( y ) == math . ceil ( y ) :
            sum += arr [ i ]
    if sum % x == 0 :
        return True
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 729
---> probID: aizu_p02437_A
---> inputs:
2 10
0 0 3
0 0 9
0 0 1
1 0
2 0
1 0
0 0 4
1 0
0 1 8
1 1
---> outputs:
9
3
4
8

def main ( ) :
    import sys
    n = len ( sys . argv )
    pque = [ ]
    for i in range ( n ) :
        pque . append ( PriorityQueue ( cmp ( i , 0 ) ) )
    q = sys . stdin . readline ( ) . split ( )
    for i in range ( q ) :
        command = sys . argv [ i ]
        t = sys . argv [ i + 1 ]
        try :
            x = int ( command )
            pque [ t ] . append ( x )
        except :
            print ( "Error while parsing command line arguments" )


---> console_out:
 
DIDN'T MATCH!! :(
 42%|████▏     | 729/1746 [00:17<00:24, 41.07it/s]

-------------------------------------


---> lineNum: 730
---> probID: geeksforgeeks_2928_A
---> inputs:

---> outputs:
The minimum sum of pairs is 40
The maximum sum of pairs is 80


def test_GFG ( ) :
    a = [ 10 , - 10 , 20 , - 40 ]
    n = len ( a )
    assert ask ( Q . is_prime ( a [ 0 ] ) , Q . is_prime ( a [ 1 ] ) )
    min_sum = 0
    for i in range ( 1 , n , 2 ) :
        min_sum += abs ( a [ i ] - a [ i - 1 ] )
    assert ask ( Q . is_prime ( a [ 0 ] ) , Q . is_prime ( a [ 1 ] ) )
    max_sum = 0
    for i in range ( n // 2 ) :
        max_sum += abs ( a [ n - 1 - i ] - a [ i ] )
    assert ask ( Q . is_prime ( a [ 0 ] ) , Q . is_prime ( a [ 1 ] ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 731
---> probID: aizu_p02442_A
---> inputs:
3
1 2 3
2
2 4
---> outputs:
1

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """usage: %s [-d|-e|-u|-t] [-d|-e|-u|-t]""" % sys . argv [ 0 ] )
        print ( """ -d : decode ASCII strings and exit with -u if not --""" )
        sys . exit ( 2 )
    for o , a in opts :
        if o == '-e' :
            print ( '0' )
            break
        if o == '-d' :
            print ( '1' )
            break
        if o == '-u' :
            print ( '0' )
            break
        if o == '-t' :
            print ( 'decode ASCII strings and exit with --' )
            sys . exit ( 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 732
---> probID: atcoder_ABC069_C
---> inputs:
3
1 10 100
---> outputs:
Yes

def main ( ) :
    sum = 0
    fsm = fsm . fsm
    a = fsm . a
    state_list = fsm . state_list
    cnt4 = 0
    cnt2 = 0
    work = 0
    for i in range ( a ) :
        state_list . append ( fsm . state [ i ] )
        work = state_list [ i ] % 4
        if work == 0 :
            cnt4 += 1
        else :
            work = state_list [ i ] % 2
            if work == 0 :
                cnt2 += 1
    work = a / 2
    if work <= cnt4 :
        print ( "Yes" )
        return
    work = a - ( cnt4 * 2 )
    if ( work == 0 ) | ( cnt2 == 0 ) :
        print ( "No" )
        return
    if work == cnt2 :
        print ( "Yes" )
        return
    print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 733
---> probID: geeksforgeeks_2852_A
---> inputs:

---> outputs:
2


def pyGFG ( s ) :
    for i in range ( len ( s ) ) :
        if s [ i ] != s [ - i - 1 ] :
            return False
    return True
    ans = [ ]
    for i in range ( len ( s ) ) :
        s2 = s [ - 1 ] + s2
        s2 = s2 [ : - 1 ]
        if ( s == [ ] if s2 != [ ] else not s ) and isPalindrome ( s2 ) :
            return True
    return False
def solve ( s ) :
    if len ( s ) <= 3 :
        return - 1
    cnt = [ 0 ] * 25
    for i in range ( len ( s ) ) :
        cnt [ s [ i ] - 'a' ] += 1
    if sum ( cnt ) >= ( len ( s ) - 1 ) :
        return - 1
    else :
        return ( ans ( s ) or 1 )
def main ( ) :
    s = 'nolon'
    print ( solve ( s ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 734
---> probID: geeksforgeeks_2565_A
---> inputs:

---> outputs:
891


def count_numbers ( k , n ) :
    """
 Return the number of numbers in the given k-th order.

 Parameters
 -----
 k : int
 The order of the numbers in the given k-th order.
 n : int
 The order of the numbers in the given k-th order.

 Returns
 -----
 n : int
 The number of numbers in the given k-th order.

 Examples
 -----
 >>> from sympy.ntheory.factorint import count_numbers
 >>> count_numbers(10, 3)
 3
 >>> count_numbers(10, 3)
 2
 >>> count_numbers(10, 3)
 1
 """
    k = int ( k )
    n = int ( n )
    return n + 1


---> console_out:
 
DIDN'T MATCH!! :(
 42%|████▏     | 734/1746 [00:17<00:24, 41.08it/s]

-------------------------------------


---> lineNum: 735
---> probID: geeksforgeeks_1186_A
---> inputs:

---> outputs:
31


def gfG ( n , arr , cost ) :
    sum , total_cost = 0 , 0
    for i in range ( n - 1 ) :
        sum += arr [ i ]
    total_cost += cost * sum
    arr [ n - 1 ] += sum
    total_cost += ( 2 * cost * arr [ n - 1 ] )
    return total_cost


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 736
---> probID: aizu_p00276_A
---> inputs:
4
3 0 0
1 1 1
9 4 1
0 1 2
---> outputs:
1
1
4
0

def main ( ) :
    import sys
    main = sys . argv [ 1 ]
    main . teamFormationMake ( )
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 737
---> probID: aizu_p00461_A
---> inputs:
1
13
OOIOIOIOIIOII
2
13
OOIOIOIOIIOII
0
---> outputs:
4
2

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'i:o:' )
    except getopt . error as msg :
        sys . stdout . write ( 'ERROR: %s\n' % msg )
        sys . exit ( 2 )
    for o , a in opts :
        if o == '-i' :
            for n in a :
                if n not in ( '-o' , '--output' ) :
                    sys . stdout . write ( 'ERROR: %s\n' % n )
                    sys . exit ( 2 )
                elif n == n - 1 :
                    count += 1
                    i += 1
    sys . stdout . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 738
---> probID: codeforces_1593_B
---> inputs:
5
100
71345
3259
50555
2050047
---> outputs:
0
3
1
3
2

def b1593 ( ) :
    t = sys . stdin . readline ( )
    while t :
        s = t . rstrip ( )
        ans = 0
        list = [ ]
        for i in range ( len ( s ) - 1 , - 1 , - 1 ) :
            ch = s [ i ]
            if len ( list ) == 0 :
                if ch in [ '0' , '5' ] :
                    list . append ( ch + '' )
                else :
                    ans += 1
            else :
                found = False
                for str in list :
                    if int ( ch + str ) % 25 == 0 :
                        found = True
                        ans += len ( list ) - 1
                        break
                if found :
                    break
                if ch in [ '0' , '5' ] :
                    list . append ( ch + '' )
                else :
                    ans += 1
        print ( ans )
    t = sys . stdin . readline ( )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576718504_1480/main.py", line 1
    def import ( data ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 739
---> probID: geeksforgeeks_1277_A
---> inputs:

---> outputs:
1 2 3 4 5 

def import ( data ) :
    import sys
    class Node :
        data = data
        left = right = None
    class GFG :
        def insert ( self , root , data ) :
            if not root :
                return Node ( data )
            if data < root . data :
                root . left = self . insert ( root . left , data )
            if data > root . data :
                root . right = self . insert ( root . right , data )
            return root
        def inOrder ( root ) :
            if not root :
                return
            inOrder ( root . left )
            print ( root . data , end = ' ' )
            inOrder ( root . right )
        def main ( ) :
            arr = [ 1 , 2 , 3 , 2 , 5 , 4 , 4 ]
            n = len ( arr )
            root = None
            for i in range ( n ) :
                root = self . insert ( root , arr [ i ] )
            inOrder ( root )
    

---> console_out:
 
DIDN'T MATCH!! :(
 42%|████▏     | 739/1746 [00:17<00:24, 40.94it/s]

-------------------------------------


---> lineNum: 740
---> probID: geeksforgeeks_2710_A
---> inputs:

---> outputs:
geeksgeeks


def GFG ( str , k ) :
    MAX_CHAR = 26
    hash = [ ]
    n = len ( str )
    for i in range ( n ) :
        hash . append ( str [ i ] - 'a' )
    res = ''
    for i in range ( n ) :
        if hash [ str [ i ] - 'a' ] >= k :
            res += str [ i ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576718553_7946/main.py", line 3
    

SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 741
---> probID: geeksforgeeks_3533_A
---> inputs:

---> outputs:
Length of Longest Common Substring is 10


def LongestCommonSubSequence ( X , Y , m , n ) :
    LCStuff = [ [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 742
---> probID: geeksforgeeks_1502_A
---> inputs:

---> outputs:
Max occurring digit is 5


def test_GFG ( ) :
    x = 1223355
    assert len ( GFG ( x ) ) == 2
    assert len ( GFG ( x , 0 ) ) == 2
    assert len ( GFG ( x , 1 ) ) == 2
    assert len ( GFG ( x , 2 ) ) == 2
    assert len ( GFG ( x , 3 ) ) == 2
    assert len ( GFG ( x , 4 ) ) == 2
    assert len ( GFG ( x , 5 ) ) == 2
    assert len ( GFG ( x , 6 ) ) == 2
    assert len ( GFG ( x , 7 ) ) == 2
    assert len ( GFG ( x , 8 ) ) == 2
    assert len ( GFG ( x , 9 ) ) == 2
    assert len ( GFG ( x , 10 ) ) == 2
    assert len ( GFG ( x , 11 ) ) == 2
    assert len ( GFG ( x , 12 ) ) == 2
    assert len ( GFG ( x , 13 ) ) == 2
    assert len ( GFG ( x , 14 ) ) == 2
    assert len ( GFG ( x , 15 ) ) == 2
    assert len ( GFG ( x , 16 ) ) == 2
    assert len ( GFG ( x , 17 ) ) == 2
    assert len ( GFG ( x , 18 ) ) == 2
    assert len ( GFG ( x , 19 ) ) == 2
    assert len ( GFG ( x , 20 ) ) == 2
    assert len ( GFG ( x , 21 ) ) == 2
    assert len ( GFG ( x , 22 ) ) == 2
    assert len ( GFG ( x , 23 ) ) == 2
    assert len ( GFG ( x , 24 ) ) == 2
    assert len ( GFG ( x , 25 ) ) == 2
    assert len ( GFG ( x , 26 ) ) == 2
    assert len ( GFG ( x , 27 ) ) == 2
    assert len ( GFG ( x , 28 ) ) == 2
    assert len ( GFG ( x , 29 ) ) == 2
    assert len ( GFG ( x , 30 ) ) == 2
    assert len ( GFG ( x , 31 ) ) == 2
    assert len ( GFG ( x , 32 ) ) == 2
    assert len ( GFG ( x , 33 ) ) == 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 743
---> probID: geeksforgeeks_311_A
---> inputs:

---> outputs:
3 5 7 8 9 

def pyGFG ( arr , n ) :
    max , len , max_index = 1 , 1 , 0
    for i in range ( 1 , n ) :
        if arr [ i ] > arr [ i - 1 ] :
            len += 1
        else :
            if max < len :
                max = len
                max_index = i - max
            len = 1
    if max < len :
        max = len
        max_index = n - max
    for i in range ( max_index , max + max_index ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 744
---> probID: codeforces_58_B
---> inputs:
10
---> outputs:
10 5 1

def main ( ) :
    import sys
    import getopt
    global n
    global m
    n = 0
    m = 0
    for line in sys . stdin :
        if line . startswith ( "#" ) :
            continue
        n += 1
        m += 1
    sys . exit ( n )


---> console_out:
 
DIDN'T MATCH!! :(
 43%|████▎     | 744/1746 [00:17<00:24, 40.80it/s]

-------------------------------------


---> lineNum: 745
---> probID: codeforces_811_B
---> inputs:
5 5
5 4 3 2 1
1 5 3
1 3 1
2 4 3
4 4 4
2 5 3
---> outputs:
Yes
No
Yes
Yes
No

def program ( ) :
    sf = sys . stdin
    t = 1
    for t1 in range ( t ) :
        n , m = sf . readline ( ) . split ( )
        p = [ ]
        hash = [ ]
        for i in range ( n ) :
            p . append ( sf . readline ( ) )
            hash . append ( p [ i ] )
        for i in range ( m ) :
            l , r , x = sf . readline ( ) . split ( )
            l -= 1
            r -= 1
            x -= 1
            ind = x
            if ind < l or ind > r :
                print ( "Yes" )
            else :
                hash1 = [ ]
                for j in range ( l ) :
                    hash1 . append ( p [ j ] )
                for j in range ( r + 1 , n ) :
                    hash1 . append ( p [ j ] )
                cnt = 0
                for j in range ( 1 , n + 1 ) :
                    if hash1 [ j ] == 0 :
                        cnt += 1
                    if j == hash [ x ] :
                        break
                dif1 = ind - l + 1
                if dif1 != cnt :
                    print ( "No" )
                else :
                    print ( "Yes" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 746
---> probID: geeksforgeeks_3778_A
---> inputs:

---> outputs:
Maximum sum is: 25


def test_GFG ( ) :
    a = [ - 6 , 10 , - 3 , 10 , - 2 ]
    b = [ ]
    S = 0
    res = 0
    for i in range ( n ) :
        b . append ( res )
        res += a [ i ]
        S += a [ i ]
        res = max ( res , - S )
    ans = S
    ans = max ( ans , res )
    g = 0
    for i in range ( n - 1 , - 1 , - 1 ) :
        g -= a [ i ]
        ans = max ( ans , g + b [ i ] )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 747
---> probID: codeforces_1452_A
---> inputs:
5
5 5
3 4
7 1
0 0
2 0
---> outputs:
10
7
13
0
3

def test_a1452 ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' , real = True )
    while t . is_real :
        a = [ symbols ( 'a' , real = True ) for i in range ( 2 ) ]
        a . sort ( )
        if a [ 0 ] == a [ 1 ] :
            assert 2 * a [ 0 ] == 2 * a [ 1 ]
        else :
            assert 2 * a [ 1 ] - 1 == 2 * a [ 0 ]
    x = symbols ( 'x' , real = True )
    t = symbols ( 't' , real = True )
    while t . is_integer :
        a = [ symbols ( 'a' , integer = True ) for i in range ( 2 ) ]
        a . sort ( )
        if a [ 0 ] == a [ 1 ] :
            assert 2 * a [ 0 ] == 2 * a [ 1 ]
        else :
            assert 2 * a [ 1 ] - 1 == 2 * a [ 0 ]
    x = symbols ( 'x' , real = True )
    t = symbols ( 't' , integer = True )
    while t . is_integer :
        a = [ symbols ( 'a' , integer = True ) for i in range ( 2 ) ]
        a . sort ( )
        if a [ 0 ] == a [ 1 ] :
            assert 2 * a [ 0 ] == 2 * a [ 1 ]
        else :
            assert 2 * a [ 1 ] - 1 == 2 * a [ 0 ]
    x = symbols ( 'x' , real = True )
    t = symbols ( 't' , integer = True )
    assert t . is_integer is False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 748
---> probID: geeksforgeeks_2945_A
---> inputs:

---> outputs:
geeksrofgeeks

def GFG ( str , x ) :
    n = ( len ( str ) - x ) // 2
    for i in range ( n ) :
        print ( str [ i ] )
    for i in range ( n + x - 1 , - n , - 1 ) :
        print ( str [ i ] )
    for i in range ( n + x , len ( str ) ) :
        print ( str [ i ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 749
---> probID: geeksforgeeks_2859_A
---> inputs:

---> outputs:
Minimum number of deletions =  8


def GFG ( str ) :
    n = len ( str )
    L = [ [ 1 ] * n for i in range ( n ) ]
    for cl in range ( 2 , n + 1 ) :
        for i in range ( n - cl + 1 ) :
            j = i + cl - 1
            if str [ i ] == str [ j ] and cl == 2 :
                L [ i ] [ j ] = 2
            elif str [ i ] == str [ j ] :
                L [ i ] [ j ] = L [ i + 1 ] [ j - 1 ] + 2
            else :
                L [ i ] [ j ] = max ( L [ i ] [ j - 1 ] , L [ i + 1 ] [ j ] )
    return L [ 0 ] [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(
 43%|████▎     | 749/1746 [00:18<00:24, 40.93it/s]

-------------------------------------


---> lineNum: 750
---> probID: geeksforgeeks_561_A
---> inputs:

---> outputs:
0


def GFG ( n ) :
    if ( n & ( n - 1 ) ) == 0 :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576718797_6224/main.py", line 5
    while t -- :
               ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 751
---> probID: codeforces_1213_B
---> inputs:
5
6
3 9 4 6 7 5
1
1000000
2
2 1
10
31 41 59 26 53 58 97 93 23 84
7
3 2 1 2 3 4 5
---> outputs:
3
0
1
8
2

def p_test ( p ) :
    '''test : ID EQUALS expr'''
    p [ 0 ] = ( 'test' , p [ 2 ] )
    t = len ( p )
    while t -- :
        n = p [ 1 ]
        arr = [ ]
        for i in range ( n ) :
            arr . append ( p [ 3 ] )
        curr = arr [ - 1 ]
        c = 0
        for i in range ( n - 2 , - 1 , - 1 ) :
            if arr [ i ] <= curr :
                curr = arr [ i ]
            else :
                c += 1
        print ( c )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 752
---> probID: projecteuler_p187_A
---> inputs:

---> outputs:
17427258

def p_p187 ( p ) :
    print ( ast . parse ( p ) )
    LIMIT = library . pow ( 10 , 8 ) - 1
    count = 0
    primes = library . list_primes ( LIMIT / 2 )
    for i , sqrt in enumerate ( library . sqrt ( LIMIT ) ) :
        end = bisect . bisect ( primes , LIMIT / primes [ i ] )
        if end >= 0 :
            end += 1
        else :
            end = - end - 1
        count += end - i
    return str ( count )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576718847_2935/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 753
---> probID: geeksforgeeks_2098_A
---> inputs:

---> outputs:
17


def import ( ) :
    import sys
    M = 20
    dp = { }
    d , K = 1 , 1
    def count ( pos , cnt , tight , nonz , num ) :
        if pos == len ( num ) :
            if cnt == K :
                return 1
            return 0
        if dp [ pos ] [ cnt ] [ tight ] [ nonz ] != - 1 :
            return dp [ pos ] [ cnt ] [ tight ] [ nonz ]
        ans = 0
        limit = ( ( tight != 0 ) and 9 or num [ pos ] )
        for dig in range ( 0 , limit ) :
            curr_cnt = cnt
            if dig == d :
                if d != 0 or ( d == 0 and nonz != 0 ) :
                    curr_cnt += 1
            curr_tet = tight
            if dig < num [ pos ] :
                curr_tet = 1
            ans += count ( pos + 1 , curr_cnt , curr_tet , ( dig != 0 ) , num )
        return dp [ pos ] [ cnt ] [ tight ] [ nonz ] = ans
    def solve ( x ) :
        num = [ ]
        while x != 0 :
            num . append ( x % 10 )
            x //= 10
        del num
        for i in range ( M ) :
            for j in range ( M ) :
                for k in range ( 2 ) :
                    for l in range ( 2 ) :
                        dp [ i ] [ j ] [ k ] [ l ] = - 1
            return count ( 0 , 0 , 0 , 0 , num )
        def main ( ) :
            L , R = 11 , 100
            d = 2
            K = 1
            print ( solve ( R ) - solve ( L - 1 ) )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 754
---> probID: codeforces_514_A
---> inputs:
27
---> outputs:
22

def test_test1 ( ) :
    x = Symbol ( 'x' )
    y = Symbol ( 'y' )
    assert x . is_integer is True
    assert x . is_rational is True
    assert x . is_algebraic is True
    assert x . is_transcendental is True
    assert x . is_real is True
    assert x . is_complex is True
    assert x . is_noninteger is True
    assert x . is_integer is False
    assert x . is_rational is False
    assert x . is_algebraic is False
    assert x . is_transcendental is False
    assert x . is_real is False
    assert x . is_complex is False
    assert x . is_noninteger is False
    assert x . is_integer is False
    assert x . is_rational is False
    assert x . is_algebraic is False
    assert x . is_transcendental is False
    assert x . is_real is False
    assert x . is_complex is False
    assert x . is_noninteger is False
    assert x . is_integer is False
    assert x . is_rational is False
    assert x . is_algebraic is False
    assert x . is_transcendental is False
    assert x . is_real is False
    assert x . is_complex is False
    assert x . is_noninteger is False
    assert x . is_integer is False
    assert x . is_rational is False
    assert x . is_algebraic is False
    assert x . is_complex is False
    assert x . is_noninteger is False
    assert x . is_integer is False
    assert x . is_rational is False
    assert x . is_algebraic is False
    assert x . is_transcendental is False
    assert x . is_noninteger is False
    assert x . is_integer is False
    assert x . is_rational is False
    assert x . is_noninteger is False
    assert x . is_rational is False
    assert x . is_algebraic is False
    assert x . is_transcendental is False
    assert x . is_noninteger is False
    assert x . is_real is False
    assert x . is_complex is False
    assert x . is_noninteger is False
    assert x . is_rational is False
    assert x . is_real is False
    assert x . is_complex is False
    assert x . is_noninteger is False


---> console_out:
 
DIDN'T MATCH!! :(
 43%|████▎     | 754/1746 [00:18<00:24, 40.80it/s]

-------------------------------------


---> lineNum: 755
---> probID: geeksforgeeks_5076_A
---> inputs:

---> outputs:
Peaks : 10 7 5 
Troughs : 5 5 3 

def get_GFG ( arr , n , num , i , j ) :
    if i >= 0 and arr [ i ] > num :
        return False
    if j < n and arr [ j ] > num :
        return False
    return True
def is_trough ( arr , n , num , i , j ) :
    if i >= 0 and arr [ i ] < num :
        return False
    if j < n and arr [ j ] < num :
        return False
    return True
def print_peeks_troughs ( arr , n ) :
    print ( "Peaks : " )
    for i in range ( n ) :
        if is_peak ( arr , n , arr [ i ] , i - 1 , i + 1 ) :
            print ( arr [ i ] , end = ' ' )
    print ( "" )
    print ( "Troughs : " )
    for i in range ( n ) :
        if is_trough ( arr , n , arr [ i ] , i - 1 , i + 1 ) :
            print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 756
---> probID: geeksforgeeks_1173_A
---> inputs:

---> outputs:
30 is positive
-20 is negative
0 is zero


def GFG ( i ) :
    return 1 + ( i >> 31 ) - ( - i >> 31 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 757
---> probID: geeksforgeeks_2932_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    a = [ 0 , 5 , 5 , 5 , 4 ]
    x = 5
    n = len ( a )
    assert frequency ( a , n , x ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 758
---> probID: geeksforgeeks_1807_A
---> inputs:

---> outputs:
YES


def main ( num ) :
    num = abs ( num )
    str = num + ''
    ch_arr = str . split ( )
    hs = set ( )
    for ch in ch_arr :
        hs . add ( ch )
    str_len = len ( str )
    hs_len = len ( hs )
    if hs_len <= str_len / 2 or hs_len == str_len :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 759
---> probID: geeksforgeeks_4836_A
---> inputs:

---> outputs:
Yes
No
No


def GFG ( n ) :
    if n <= 1 :
        return False
    if n <= 3 :
        return True
    if n % 2 == 0 or n % 3 == 0 :
        return False
    for i in range ( 5 , n * i <= n , 6 ) :
        if n % i == 0 or n % ( i + 2 ) == 0 :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(
 43%|████▎     | 759/1746 [00:18<00:24, 40.35it/s]

-------------------------------------


---> lineNum: 760
---> probID: projecteuler_p065_A
---> inputs:

---> outputs:
272

def p_p065 ( p ) :
    """p065 : DIVIDE"""
    p [ 0 ] = p [ 1 ] / p [ 2 ]
    n = p [ 1 ]
    d = p [ 2 ]
    for i in range ( 99 , - 1 , - 1 ) :
        temp = eval ( '%s * %s + %s' % ( _continued_fraction_term ( i ) , n , d ) )
        d = n
        n = temp
    sum = 0
    while not n . is_infinite ( ) :
        divrem = n . divide_and_remainder ( )
        sum += divrem [ 1 ] . value
        n = divrem [ 0 ]
    return str ( sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 761
---> probID: geeksforgeeks_2334_A
---> inputs:

---> outputs:
1020


def __gcd ( n , x , y , z ) :
    if not b :
        return a
    else :
        return __gcd ( b , a % b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 762
---> probID: geeksforgeeks_1101_A
---> inputs:

---> outputs:
2 3 

def GFG ( ) :
    MAXN = 100001
    prime = [ False ] * MAXN
    SieveOfEratosthenes ( )
    for i in prime :
        prime [ i ] = True
    prime [ 0 ] = False
    prime [ 1 ] = False
    for p in range ( 2 , MAXN * p ) :
        if prime [ p ] == True :
            for i in range ( p * p , MAXN , p ) :
                prime [ i ] = False
    common_prime = int ( __gcd ( a , b ) )
    for i in range ( 2 , ( gcd ( a , b ) ) ) :
        if prime [ i ] and gcd ( a , b ) % i == 0 :
            print ( i , end = ' ' )
    __gcd ( a , b )
    if a == 0 :
        return b
    return __gcd ( b % a , a )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576719100_3776/main.py", line 44
    
                         ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 763
---> probID: aizu_p01614_A
---> inputs:
3
4 5 15
2 3 4
7 8 39
2
6
8
---> outputs:
19
39

def py ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , '' )
    except getopt . error as msg :
        print ( msg )
        return
    n = len ( args )
    s , l , p = [ ] , [ ] , [ ]
    for o , a in opts :
        if o == '--n' : n = int ( a )
        if o == '--s' : s = a
        if o == '--l' : l = a
        if o == '--p' : p = a
        if o == '--d' : d = a
        if o == '--d' : d = a
        if o == '--d-e' : d = a
        if o == '--d-f' : d = a
        if o == '--d-h' : d = a
        if o == '--d-l' : d = a
        if o == '--d-f' : d = a
        if o == '--d-h' : d = a
        if o == '--d-f' : d = a
        if o == '--d-e' : d = a
        if o == '--d-f' : d = a
        if o == '--d-l' : d = a
        if o == '--d-f' : d = a
        if o == '--d-h' : d = a
        if o == '--d-f' : d = a
        if o == '--d-e' : d = a
        if o == '--d-f' : d = a
        if o == '--d-h' : d = a
        if o == '--d-f' : d = a
        if o == '--d-h' : d = a
        if o == '--d-f' : d = a
        if o == '--d-f' : d = a
        if o == '--d-f' : d = a
    if not args :
        print ( - 1 )
    else :
        for i in args :
            print ( i

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 764
---> probID: atcoder_AGC014_D
---> inputs:
2
1 2
---> outputs:
Second

def main ( ) :
    import sys
    import getopt
    try :
        g = getopt . getopt ( sys . argv [ 1 : ] , 'a' )
    except getopt . error as msg :
        print ( msg )
        sys . exit ( 2 )
    a = 0
    o = 0
    for w in g [ 1 : ] :
        if w == p :
            continue
        r = max_matching ( w , v )
        a += r // 2
        o += r % 2
    return 2 * a + min ( 1 , o ) + 1


---> console_out:
 
DIDN'T MATCH!! :(
 44%|████▍     | 764/1746 [00:18<00:24, 40.15it/s]

-------------------------------------


---> lineNum: 765
---> probID: codeforces_1647_B
---> inputs:
5
3 3
100
011
011
3 3
110
111
110
1 5
01111
4 5
11111
01010
01000
01000
3 2
11
00
11
---> outputs:
YES
NO
YES
NO
YES

def main ( ) :
    N , M = 205 , 205
    grid = [ [ 0 ] * M ] * M
    t = time . time ( )
    while t > 0 :
        solve ( )
    def solve ( ) :
        n , m = int ( time . time ( ) ) , int ( time . time ( ) )
        for i in range ( n ) :
            line = input ( )
            for j in range ( m ) :
                grid [ i ] [ j ] = line [ j ] - '0'
        for i in range ( n - 1 ) :
            for j in range ( m - 1 ) :
                sum = grid [ i ] [ j ] + grid [ i + 1 ] [ j ] + grid [ i ] [ j + 1 ] + grid [ i + 1 ] [ j + 1 ]
                if sum == 3 :
                    print ( 'NO' )
                    return
        print ( 'YES' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 766
---> probID: codeforces_721_B
---> inputs:
5 2
cba
abc
bb1
abC
ABC
abc
---> outputs:
1 15

def main ( ) :
    import sys
    tc = 1
    while tc :
        n , k = sys . argv [ 1 : ]
        len = [ len ( s ) for s in sys . argv [ 2 : ] ]
        s = ''
        min , max = 0 , 0
        for s in sys . argv [ 2 : ] :
            s = s . strip ( )
            len . append ( len )
        p = sys . argv [ 3 : ]
        plen = len ( p )
        kk = k
        s = p . strip ( )
        for i in range ( n ) :
            if len ( s ) == plen :
                min += 1
                break
            if k > 0 :
                k -= 1
                min += 1
            if k == 0 :
                k = kk
                min += 5
        k = kk
        for i in range ( n - 1 ) :
            if ( len ( s ) == plen and len ( s [ i + 1 ] ) > plen ) :
                max += 1
                break
            if k > 0 :
                k -= 1
                max += 1
            if k == 0 :
                k = kk
                max += 5
        if len ( s ) == plen :
            max += 1
        sys . stdout . write ( min + ' ' + max )
    sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 767
---> probID: codeforces_61_B
---> inputs:
Iran_
Persian;
W_o;n;d;e;r;f;u;l;
7
WonderfulPersianIran
wonderful_PersIAN_IRAN;;_
WONDERFUL___IRAN__PERSIAN__;;
Ira__Persiann__Wonderful
Wonder;;fulPersian___;I;r;a;n;
__________IranPersianWonderful__________
PersianIran_is_Wonderful
---> outputs:
ACC
ACC
ACC
WA
ACC
ACC
WA

def test_test ( ) :
    f = np . random . RandomState ( 0 )
    word1 = f . randn ( 5 , 5 ) . astype ( 'float32' ) . astype ( 'float32' )
    word2 = f . randn ( 5 , 5 ) . astype ( 'float32' ) . astype ( 'float32' )
    word3 = f . randn ( 5 , 5 ) . astype ( 'float32' ) . astype ( 'float32' )
    perm1 = word1 + word2 + word3
    perm2 = word1 + word3 + word2
    perm3 = word2 + word1 + word3
    perm4 = word2 + word3 + word1
    perm5 = word3 + word2 + word1
    perm6 = word3 + word1 + word2
    students = f . randn ( 5 , 5 )
    f . shuffle ( )
    for i in range ( students ) :
        test_case = f . randn ( 5 , 5 ) . astype ( 'float32' )
        if test_case in perm1 or test_case in perm2 or test_case in perm3 or test_case in perm4 or test_case in perm5 or test_case in perm6 :
            print ( 'ACC' )
        else :
            print ( 'WA' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 768
---> probID: codejam_14_11
---> inputs:
3
3 2
01 11 10
11 00 10
2 3
101 111
010 001
2 2
01 10
10 01

---> outputs:
Case #1: 1
Case #2: NOT POSSIBLE
Case #3: 0


def test_A ( ) :
    x = symbols ( 'x' )
    cases = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ]
    for caze in range ( 1 , cases + 1 ) :
        N , L = symbols ( 'N,L' )
        need , have = set ( [ ] ) , set ( [ ] )
        for i in range ( N ) :
            tmp = x [ i ]
            tmp2 = 0
            for j in range ( L ) :
                if tmp [ j ] == '1' :
                    tmp2 |= ( 1 << j )
            have . add ( tmp2 )
        last_needed = 0
        for i in range ( N ) :
            tmp = x [ i ]
            tmp2 = 0
            for j in range ( L ) :
                if tmp [ j ] == '1' :
                    tmp2 |= ( 1 << j )
            need . add ( tmp2 )
            last_needed = tmp2
        ans = L + 1
        for elem in have :
            flip = last_needed ^ elem
            got = set ( [ e ^ flip for e in need ] )
            if got == have :
                ans = min ( ans , key = lambda x : x . bit_length ( ) )
        assert ans == L


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 769
---> probID: leetcode_695_A
---> inputs:

---> outputs:
6

def maxAreaOfIsland ( grid ) :
    """
 Return the maximum area of Island, 0 if the grid is empty.
 """
    dr = [ 1 , - 1 , 0 , 0 ]
    dc = [ 0 , 0 , 1 , - 1 ]
    ans = 0
    for r0 in range ( len ( grid ) ) :
        for c0 in range ( len ( grid [ 0 ] ) ) :
            if grid [ r0 ] [ c0 ] == 1 :
                shape = 0
                stack = [ [ r0 , c0 ] ]
                grid [ r0 ] [ c0 ] = 0
                while not stack . empty ( ) :
                    node = stack . pop ( )
                    r , c = node [ 0 ] , node [ 1 ]
                    shape += 1
                    for k in range ( 4 ) :
                        nr = r + dr [ k ]
                        nc = c + dc [ k ]
                        if 0 <= nr < len ( grid ) and 0 <= nc < len ( grid [ 0 ] ) and grid [ nr ] [ nc ] == 1 :
                            stack . append ( ( nr , nc ) )
                            grid [ nr ] [ nc ] = 0
            ans = max ( ans , shape )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 44%|████▍     | 769/1746 [00:18<00:24, 40.29it/s]

-------------------------------------


---> lineNum: 770
---> probID: geeksforgeeks_5288_A
---> inputs:

---> outputs:
40


def GFG ( x , y , n ) :
    sum1 = int ( ( pow ( x , 2 ) * ( pow ( x , 2 * n ) - 1 ) ) / ( pow ( x , 2 ) - 1 ) )
    sum2 = int ( ( x * y * ( pow ( x , n ) * pow ( y , n ) - 1 ) ) / ( x * y - 1 ) )
    return sum1 , sum2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 771
---> probID: geeksforgeeks_1614_A
---> inputs:

---> outputs:
8


def test_GFG ( ) :
    n = 3
    assert find_sum ( n ) == 3


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 772
---> probID: geeksforgeeks_3145_A
---> inputs:

---> outputs:
21


def test_GFG ( ) :
    n = 687
    assert gf_degree ( n ) == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 773
---> probID: geeksforgeeks_3146_A
---> inputs:

---> outputs:
21


def test_GFG ( ) :
    n = 687
    assert gf_degree ( n ) == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 774
---> probID: geeksforgeeks_5092_A
---> inputs:

---> outputs:
Original List: 
15 16 6 7 17 
Modified List: 
7 17 

def GFG ( ) :
    class Node :
        data = 0
        next = 0
    def push ( head_ref , new_data ) :
        new_node = Node ( )
        new_node . data = new_data
        new_node . next = ( head_ref , new_node )
        ( head_ref , new_node ) = new_node
        return head_ref , new_node
    def is_prime ( n ) :
        if n <= 1 :
            return False
        if n <= 3 :
            return True
        if n % 2 == 0 or n % 3 == 0 :
            return False
        for i in range ( 5 , n * i <= n , 6 ) :
            if n % i == 0 or n % ( i + 2 ) == 0 :
                return False
        return True
    def delete_non_prime_nodes ( head_ref ) :
        ptr = head_ref
        while ptr and not is_prime ( ptr . data ) :
            temp = ptr
            ptr = ptr . next
        head_ref = ptr
        if not ptr :
            return None
        curr = ptr . next
        while curr :
            if not is_prime ( curr . data ) :
                ptr . next = curr . next
                curr = ptr . next
            else :
                ptr = curr
                curr = curr . next
        return head_ref
    def print_list ( head ) :
        while head :
            print ( head . data , end = ' ' )
            head = head . next
    def main ( ) :
        head = None
        head = push ( head , 17 )
        head = push ( head , 7 )
        head = push ( head , 6 )
        head = push ( head , 16 )
        head = push ( head , 15 )
        print ( "Original List: " )
        print_list ( head )
        head = delete_non_prime_nodes ( head )
        print ( "\nModified List: " )
        print_list ( head )


---> console_out:
 
DIDN'T MATCH!! :(
 44%|████▍     | 774/1746 [00:18<00:23, 40.79it/s]

-------------------------------------


---> lineNum: 775
---> probID: aizu_p01074_A
---> inputs:
3 7 3
0 1 1 1
0 1 1 2
1 1 3 4
1 1 1 1
1 2 1 2
2 1 1 3
2 2 2 1
---> outputs:
9

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        sys . stdout . write ( msg + '\n' )
        sys . exit ( 2 )
    N , M , L = int ( args [ 0 ] ) , int ( args [ 1 ] )
    cs = [ ]
    for i in range ( N * M ) :
        cs . append ( [ ] )
    for i in range ( M ) :
        D , A , K , T = divmod ( D , N - 1 )
        start = D * N + A
        cs [ start ] . append ( ( K << 16 ) | T )
    dp = [ ]
    for i in range ( L + 1 ) :
        for j in range ( L ) :
            for c in cs [ i ] :
                len = c >> 16
                t = c & 0xFFFF
                dp . append ( max ( dp [ j + 1 ] [ i + len ] , dp [ j ] [ i ] + t ) )
        for j in range ( 0 , L + 1 ) :
            dp . append ( max ( dp [ j ] [ i + 1 ] , dp [ j ] [ i ] ) )
    ans = 0
    for i in range ( 0 , L + 1 ) :
        ans = max ( ans , dp [ i ] [ N * M ] )
    sys . stdout . write ( ans + '\n' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 776
---> probID: atcoder_AGC002_B
---> inputs:
3 2
1 2
2 3
---> outputs:
2

def test_main ( ) :
    from sympy . abc import n , m
    boxs = [ ]
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )
    boxs . append ( Box ( ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 777
---> probID: aizu_p02052_A
---> inputs:
3 3
B.B
..B
.BB
---> outputs:
4

def main ( ) :
    import sys
    h , w = sys . argv [ 1 : ]
    list = [ ]
    max = 0
    for i in range ( h ) :
        arr = sys . stdin . readline ( ) . split ( )
        for j in range ( w ) :
            if arr [ j ] == '.' :
                continue
            for x in list :
                hh = x // w
                ww = x % w
                max = max ( max , abs ( i - hh ) + abs ( j - ww ) )
            list . append ( i * w + j )
    sys . stdout . write ( max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 778
---> probID: geeksforgeeks_3350_A
---> inputs:

---> outputs:
abcxdefy


def GFG ( str ) :
    if len ( str ) > 26 :
        print ( 'IMPOSSIBLE' )
    else :
        hash = [ 0 ] * 26
        for i in range ( len ( str ) ) :
            hash [ str [ i ] - 'a' ] += 1
        count = 0
        for i in range ( len ( str ) ) :
            if hash [ str [ i ] - 'a' ] > 1 :
                for j in range ( 26 ) :
                    if hash [ j ] == 0 :
                        hash [ str [ i ] - 'a' ] -= 1
                        str = str [ : i ] + chr ( j + 'a' ) + str [ i + 1 : ]
                        hash [ j ] += 1
                        break
        print ( str )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 779
---> probID: geeksforgeeks_1286_A
---> inputs:

---> outputs:
12


def GFG ( s ) :
    n = len ( s )
    pre_count_0 = [ 0 ] * ( n + 2 )
    pre_count_1 = [ 0 ] * ( n + 1 )
    post_count_0 = [ 0 ] * ( n + 2 )
    pre_count_0 [ 0 ] = 0
    post_count_0 [ n + 1 ] = 0
    pre_count_1 [ 0 ] = 0
    for j in range ( 1 , n + 1 ) :
        pre_count_0 [ j ] = pre_count_0 [ j - 1 ]
        pre_count_1 [ j ] = pre_count_1 [ j - 1 ]
        post_count_0 [ n - j + 1 ] = post_count_0 [ n - j + 2 ]
        if s [ j - 1 ] == '0' :
            pre_count_0 [ j ] += 1
        else :
            pre_count_1 [ j ] += 1
        if s [ n - j ] == '0' :
            post_count_0 [ n - j + 1 ] += 1
    if pre_count_0 [ n ] == n or pre_count_0 [ n ] == 0 :
        return n
    ans = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( i , n + 1 ) :
            ans = max ( pre_count_0 [ i - 1 ] + pre_count_1 [ j ] - pre_count_1 [ i - 1 ] + post_count_0 [ j + 1 ] , 0 )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 45%|████▍     | 779/1746 [00:18<00:23, 40.75it/s]

-------------------------------------


---> lineNum: 780
---> probID: geeksforgeeks_549_A
---> inputs:

---> outputs:
Factor Power
2	3
3	2
5	1


def GFG ( N ) :
    prime = [ False for i in range ( 2 , N + 1 , 2 ) ]
    for i in range ( 3 , N + 1 , 2 ) :
        if prime [ i ] == False :
            s = [ i for i in range ( i , N * i , 2 ) if prime [ i * j ] == False ]
            for j in range ( i , N * i , 2 ) :
                if prime [ i * j ] == False :
                    prime [ i * j ] = True
                    s . append ( i )
    generatePrimeFactors ( N )
    print ( "Factor Power" )
    curr = s [ N ]
    cnt = 1
    while N > 1 :
        N /= s [ N ]
        if curr == s [ N ] :
            cnt += 1
            continue
        print ( curr , '\t' , cnt )
        curr = s [ N ]
        cnt = 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 781
---> probID: geeksforgeeks_1380_A
---> inputs:

---> outputs:
4


def GFG ( a , n ) :
    hash = { }
    for i in range ( n ) :
        num = a [ i ]
        while num != 0 :
            hash [ i ] [ num % 10 ] = 1
            num /= 10
    longest = int ( '-1' )
    count = 0
    for i in range ( n - 1 ) :
        j = 0
        for j in range ( 10 ) :
            if hash [ i ] [ j ] == 1 & hash [ i + 1 ] [ j ] == 1 :
                count += 1
                break
        if j == 10 :
            longest = max ( longest , count + 1 )
            count = 0
    longest = max ( longest , count + 1 )
    return longest


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 782
---> probID: codeforces_1196_A
---> inputs:
4
1 3 4
1 10 100
10000000000000000 10000000000000000 10000000000000000
23 34 45
---> outputs:
4
55
15000000000000000
51

def test_1196A_ThreePilesOfCandies ( ) :
    input = np . array ( [ 1 , 2 , 3 ] )
    test = np . array ( [ 1 , 2 , 3 ] )
    while test :
        a , b , c = input
        result = ( a + b + c ) / 2
        print ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 783
---> probID: geeksforgeeks_3567_A
---> inputs:

---> outputs:
1


def test_GFG ( ) :
    c = [ ]
    v = [ ]
    while x % 2 == 0 :
        c . append ( c )
        x /= 2
    v . append ( c )
    c = [ ]
    while x % 3 == 0 :
        c . append ( c )
        x /= 3
    v . append ( c )
    c = [ ]
    while x % 7 == 0 :
        c . append ( c )
        x /= 7
    v . append ( c )
    v . append ( x )
    return v


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 784
---> probID: geeksforgeeks_122_A
---> inputs:

---> outputs:
4


def genGFG ( N ) :
    N = 1000001
    c , n , m , a , b = N
    dfs ( a , b , v , vis )
    vis [ a ] = 1
    c += 1
    for i in v [ a ] :
        if vis [ i ] == 0 and i != b :
            dfs ( i , b , v , vis )
    Calculate ( v )
    ans1 = n - c - 1
    del vis [ a ]
    del vis [ b ]
    ans2 = n - c - 1
    print ( ans1 * ans2 , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
 45%|████▍     | 784/1746 [00:18<00:23, 41.13it/s]  File "./junk/1692576719634_7929/main.py", line 168
    import
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 785
---> probID: codeforces_1143_B
---> inputs:
390
---> outputs:
216

def B_Nirvana ( ) :
    import sys
    import tokenize
    import string
    import random
    import time
    import string
    import random
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 786
---> probID: codeforces_379_A
---> inputs:
4 2
---> outputs:
7

def test_helloworld ( ) :
    x = symbols ( 'x' )
    a = symbols ( 'a' , integer = True , positive = True )
    b = symbols ( 'b' , integer = True , positive = True )
    res = a
    while a >= b :
        res += ( a / b )
        a = ( a / b ) + ( a % b )
    assert res == a


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 787
---> probID: geeksforgeeks_1317_A
---> inputs:

---> outputs:
7


def get_gcd ( n ) :
    """Return the gcd of the given integer."""
    sum = 0
    while n != 0 :
        sum = sum + n % 10
        n = n / 10
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 788
---> probID: codeforces_86_A
---> inputs:
3 7
---> outputs:
20

def pylint_power ( a ) :
    """
 Return the power of a number.

 >>> pylint_power(10)
 3
 >>> pylint_power(10)
 3
 >>> pylint_power(10)
 3
 >>> pylint_power(10)
 3
 >>> pylint_power(10)
 3
 >>> pylint_power(10)
 3
 >>> pylint_power(10)
 3
 >>> pylint_power(10)
 3
 >>> pylint_power(10)
 3
 >>> pylint_power(10)
 3
 >>> pylint_power(10)
 3
 """
    a = long ( a )
    res = 0
    while a > 0 :
        res += 1
        a = a / 10
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 789
---> probID: aizu_p02255_A
---> inputs:
6
5 2 4 6 1 3
---> outputs:
5 2 4 6 1 3
2 5 4 6 1 3
2 4 5 6 1 3
2 4 5 6 1 3
1 2 4 5 6 3
1 2 3 4 5 6

def main ( request , response ) :
    headers = [ ( "Content-type" , "text/plain" ) ]
    content = ""
    response . headers . set ( "Content-Length" , len ( content ) )
    response . headers . set ( "Content-Type" , "text/plain" )
    response . headers . set ( "Access-Control-Allow-Origin" , "*" )
    response . headers . set ( "Access-Control-Allow-Methods" , "GET, POST, PUT, DELETE" )
    response . headers . set ( "Access-Control-Allow-Headers" , "x-user-agent" )
    response . headers . set ( "Access-Control-Allow-Methods" , "OPTIONS, PATCH, POST, PUT" )
    response . headers . set ( "Access-Control-Allow-Headers" , "x-user-agent" )
    response . headers . set ( "Access-Control-Expose-Headers" , "x-user-agent" )
    response . headers . set ( "Access-Control-Allow-Methods" , "OPTIONS, PATCH, POST" )
    response . headers . set ( "Access-Control-Expose-Headers" , "x-user-agent" )
    response . headers . set ( "Access-Control-Allow-Headers" , "x-user-agent" )
    response . headers . set ( "Access-Control-Expose-Headers" , "x-user-agent" )
    response . headers . set ( "Access-Control-Allow-Methods" , "OPTIONS, PATCH, POST, PUT" )
    response . headers . set ( "Access-Control-Expose-Headers" , "x-user-agent" )
    response . headers . set ( "Access-Control-Allow-Headers" , "x-user-agent" )
    response . headers . set ( "Access-Control-Expose-Headers" , "x-user-agent" )
    response . headers . set ( "Access-Control-Allow-Methods" , "OPTIONS, PATCH, PUT, DELETE" )
    response . headers . set ( "Access-Control-Expose-Headers" , "x-user-agent" )
    response . headers . set ( "Access-Control-Allow-Methods" , "OPTIONS" )


---> console_out:
 
DIDN'T MATCH!! :(
 45%|████▌     | 789/1746 [00:19<00:23, 40.98it/s]

-------------------------------------


---> lineNum: 790
---> probID: geeksforgeeks_861_A
---> inputs:

---> outputs:
6 10 14 15 21 22 26 

def test_GFG ( ) :
    """Test the degree of the first degree of the first group."""
    sr = sqrt ( x )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )
    assert ( ( sr - floor ( sr ) ) == 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 791
---> probID: codeforces_290_B
---> inputs:
1 1
---> outputs:
0

def test_iter_allocate_output_iterator ( ) :
    s
    it = iter ( s )
    x , y = next ( it )
    assert x == 42
    assert y == 42


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 792
---> probID: codeforces_1520_B
---> inputs:
6
1
2
3
4
5
100
---> outputs:
1
2
3
4
5
18

def test_new_class_37 ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' , integer = True , positive = True )
    p = symbols ( 'p' , integer = True , positive = True )
    while t . is_positive :
        n = symbols ( 'n' , integer = True , positive = True )
        count = 0
        x = n
        if n < 10 :
            assert n in t
            continue
        while x in t :
            count += 1
            x /= 10
        first = 0
        while count > 0 :
            first = first * 10 + 1
            count -= 1
        sum = 0
        if first <= n :
            sum += n / first
        first /= 10
        while first :
            sum += 9
            first /= 10
        assert sum in t


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576719831_4015/main.py", line 51
    
                                 ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 793
---> probID: geeksforgeeks_897_A
---> inputs:

---> outputs:
Equivalent


def test_GFG ( ) :
    """TestSPACETOKENtheSPACETOKENsymbolicSPACETOKENrepresentationSPACETOKENofSPACETOKENtheSPACETOKENGFG."""
    n = 1
    for i in range ( 2 , n ** 2 ) :
        if n % i == 0 :
            n = sum ( [ i + n // i for i in range ( n ) ] )
    assert n == 1
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n , 1 )
    assert are_equivalent ( n

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 794
---> probID: geeksforgeeks_516_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    x = 5
    assert find_y ( x ) == 5


---> console_out:
 
DIDN'T MATCH!! :(
 45%|████▌     | 794/1746 [00:19<00:23, 40.77it/s]

-------------------------------------


---> lineNum: 795
---> probID: geeksforgeeks_4018_A
---> inputs:

---> outputs:
2


def GFG ( n , m ) :
    MOD = 1000000007
    result = 1
    for i in range ( 1 , m + 1 ) :
        result = ( result * i ) % MOD
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 796
---> probID: aizu_p02260_A
---> inputs:
6
5 6 4 2 1 3
---> outputs:
1 2 3 4 5 6
4

def main ( ) :
    a = input ( "Enter n of the matrix: " )
    n = len ( a )
    A = [ ]
    for i in range ( n ) :
        A . append ( a [ i ] )
    minj = None
    count = 0
    for i in range ( 0 , n - 2 ) :
        minj = i
        c = 0
        for j in range ( i + 1 , n - 1 ) :
            if A [ j ] < A [ minj ] :
                minj = j
                c = 1
        if c == 1 :
            x = A [ i ]
            A [ i ] , A [ minj ] = A [ minj ] , A [ minj ]
            count += 1
    for i in range ( n ) :
        print ( A [ i ] )
        if i < n - 1 :
            print ( " " )
    print ( )
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 797
---> probID: aizu_p00492_A
---> inputs:
8 4
0 1 0 1 0 1 1 1
0 1 1 0 0 1 0 0
1 0 1 0 1 1 1 1
0 1 1 0 1 0 1 0
---> outputs:
64

def main ( ) :
    import sys
    import getopt
    global w , h , v
    w = int ( sys . argv [ 1 ] )
    h = int ( sys . argv [ 2 ] )
    map = [ [ 0 ] * ( h + 2 ) , [ 0 ] * ( w + 2 ) ]
    v = [ [ 0 ] * ( h + 2 ) , [ 0 ] * ( w + 2 ) ]
    for i in range ( 1 , h + 1 ) :
        for j in range ( 1 , w + 1 ) :
            map [ i ] [ j ] = sys . argv [ 3 ] == 1
    print ( slove ( 0 , 0 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 798
---> probID: codeforces_847_B
---> inputs:
5
1 3 2 5 4
---> outputs:
1 3 5
2 4

def test_prepformerge ( ) :
    f = BytesIO ( )
    f . seek ( 0 )
    n = int ( f . readline ( ) )
    lists = [ ]
    a = [ ]
    f . seek ( 0 )
    for i in range ( 1 , n + 1 ) :
        a . append ( int ( f . readline ( ) ) )
    for i in range ( 1 , n + 1 ) :
        if i == 1 :
            start = [ a [ i ] ]
            lists . append ( start )
        else :
            lo = 0
            hi = len ( lists ) - 1
            if lists [ hi ] [ lists [ hi ] [ - 1 ] ] > a [ i ] :
                start = [ a [ i ] ]
                lists . append ( start )
            else :
                while lo != hi :
                    mid = ( lo + hi ) // 2
                    if lists [ mid ] [ lists [ mid ] [ - 1 ] ] < a [ i ] :
                        hi = mid
                    else :
                        lo = mid + 1
                lists [ lo ] . append ( a [ i ] )
    for lis in lists :
        for i in range ( len ( lis ) ) :
            print ( lis [ i ] , end = ' ' )
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 799
---> probID: geeksforgeeks_1213_A
---> inputs:

---> outputs:
30.634146341463413


def GFG ( a , b ) :
    if a < 0 or b < 0 :
        return - 1
    A = float ( ( 3.14 * pow ( a , 2 ) * pow ( b , 2 ) ) / ( 4 * ( pow ( a , 2 ) + pow ( b , 2 ) ) ) )
    return A


---> console_out:
 
DIDN'T MATCH!! :(
 46%|████▌     | 799/1746 [00:19<00:22, 41.19it/s]

-------------------------------------


---> lineNum: 800
---> probID: geeksforgeeks_736_A
---> inputs:

---> outputs:
YES


def GFG ( arr , length , s ) :
    for i in range ( 1 , ( pow ( 2 , length ) ) + 1 ) :
        sum = 0
        for j in range ( length ) :
            if ( ( i >> j ) & 1 ) % 2 == 1 :
                sum += arr [ j ]
        if sum == s :
            print ( 'YES' )
            return
    print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 801
---> probID: geeksforgeeks_1941_A
---> inputs:

---> outputs:
ab


def GFG ( s , k ) :
    n = len ( s )
    fre = [ 0 ] * 26
    for i in range ( n ) :
        fre [ s [ i ] - 'a' ] += 1
    str = ""
    for i in range ( 26 ) :
        if fre [ i ] % k == 0 :
            x = fre [ i ] / k
            while x != 0 :
                str += chr ( i + 'a' )
                x -= 1
        else :
            return "-1"
    return str


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 802
---> probID: aizu_p00642_A
---> inputs:
1
2
3
0
---> outputs:
1.00000000
1.50000000
2.12500000

def main ( ) :
    import sys
    while 1 :
        n = input ( ) . count ( ">" )
        if n == 0 :
            break
        dp = np . zeros ( ( n + 1 , 25 ) )
        dp [ 0 ] [ 0 ] = 1.0
        sum = 0
        for i in range ( n ) :
            for j in range ( 24 ) :
                pp = math . pow ( 2.0 , j )
                dp [ i + 1 ] [ j + 1 ] += dp [ i ] [ j ] * 1.0 / pp
                dp [ i + 1 ] [ 0 ] += dp [ i ] [ j ] * ( 1.0 - ( 1.0 / pp ) )
                sum += j * dp [ i ] [ j ] * ( 1.0 - ( 1.0 / pp ) )
        for j in range ( 25 ) :
            sum += j * dp [ n ] [ j ]
        print ( "%.20f" % sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 803
---> probID: aizu_p00054_A
---> inputs:
1 2 3
2 3 4
5 4 3
4 3 2
---> outputs:
5
24
7
6

def main ( ) :
    import sys
    import getopt
    for c in sys . argv [ 1 : ] :
        a , b , n = c . split ( ' ' )
        c = eval ( float ( a ) / b )
        f = [ ]
        idx = c . find ( "." )
        f . append ( eval ( c [ idx - 1 ] ) )
        for i in range ( 1 , min ( 200 , len ( c [ idx + 1 ] ) + 1 ) ) :
            f . append ( eval ( c [ idx + i ] ) )
        res = 0
        for i in range ( 1 , n + 1 ) :
            res += f [ i ]
        print ( res )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576720096_9227/main.py", line 19
    out :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 804
---> probID: atcoder_AGC029_C
---> inputs:
1
1
---> outputs:
1

def main ( ) :
    import sys
    n = len ( sys . argv )
    a = [ ]
    for i in range ( n ) :
        a . append ( sys . argv [ i ] )
    sys . argv = a
    nodec = True
    for i in range ( 1 , n ) :
        if a [ i ] <= a [ i - 1 ] :
            nodec = False
    if nodec :
        print ( 1 )
        return
    m = 500
    l , r = 1 , 210000
    mid = 2
    dec = [ ]
    out :
        while r - l > 1 :
            mid = ( l + r ) // 2
            dec = [ ]
            del dec [ 0 ]
            nout :
                for i in range ( 1 , n ) :
                    if a [ i ] <= a [ i - 1 ] and a [ i ] - 1 < m :
                        if dec [ a [ i ] - 1 ] < mid :
                            dec [ a [ i ] - 1 ] += 1
                        else :
                            pos = a [ i ] - 1
                            while pos > 0 :
                                dec [ pos - 1 ] += 1
                                for j in range ( pos , m ) :
                                    dec [ j ] = 1
                                if dec [ pos - 1 ] <= mid :
                                    continue nout
                                pos -= 1
                            l = mid
                            continue out
                    else :
                        for j in range ( a [ i ] - 1 , m ) :
                            dec [ j ] = 1
                r = mid
            print ( r )
    

---> console_out:
 
DIDN'T MATCH!! :(
 46%|████▌     | 804/1746 [00:19<00:22, 41.18it/s]  File "./junk/1692576720121_4472/main.py", line 8
    except getopt . error , msg :
                          ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 805
---> probID: aizu_p00605_A
---> inputs:
2 3
5 4 5
1 2 3
3 2 1
3 5
1 2 3 4 5
0 1 0 1 2
0 1 1 2 2
1 0 3 1 1
0 0
---> outputs:
Yes
No

def main ( ) :
    import sys
    import getopt
    global verbose
    global recurse
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , "r" , [ "recurse" ] )
    except getopt . error , msg :
        sys . stdout . write ( msg + "\n" )
        sys . exit ( 2 )
    if args == [ ] :
        sys . stdout . write ( "No input files.\n" )
        sys . exit ( 1 )
    N = int ( args [ 0 ] )
    K = int ( args [ 1 ] )
    if N == 0 and K == 0 :
        return
    args = args [ : N ]
    bloodAmt = [ ]
    for o , a in opts :
        if o == '-r' :
            recurse = a
        elif o == '-c' :
            recurse = None
        elif o == '-d' :
            recurse = None
        elif o == '--recurse' :
            recurse = True
        elif o == '--recurse-amount' :
            recurse = int ( a )
        elif o == '--recurse-amount-list' :
            recurse = int ( a )
        elif o == '--recurse-amount-list' :
            recurse = int ( a )
    for i in range ( K ) :
        if bloodAmt [ i ] < 0 :
            print ( "No" )
            break
        if i == K - 1 :
            print ( "Yes" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 806
---> probID: geeksforgeeks_2779_A
---> inputs:

---> outputs:
4


def get_max_freq ( s , a , b ) :
    fre = [ 0 ] * 10
    n = len ( s )
    if a > b :
        temp = a
        a , b = b , temp
    for i in range ( n ) :
        fre [ s [ i ] - '0' ] += 1
    if fre [ a ] == 0 and fre [ b ] == 0 :
        return - 1
    elif fre [ a ] >= fre [ b ] :
        return a
    else :
        return b


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 807
---> probID: geeksforgeeks_1966_A
---> inputs:

---> outputs:
3


def GFG ( n ) :
    if n == 0 or ( n & ( n - 1 ) ) == 0 :
        return - 1
    b = 4
    set_bit , prev = 1 , 0
    for i in range ( 1 , b * 8 ) :
        prev += 1
        if ( n & set_bit ) == set_bit :
            set_bit = set_bit << 1
            break
        set_bit = set_bit << 1
    max0 , cur = int ( prev ) , prev
    for j in range ( i + 1 , b * 8 ) :
        cur += 1
        if ( n & set_bit ) == set_bit :
            if max0 < ( cur - prev - 1 ) :
                max0 , cur = cur - prev - 1 , cur
            prev , cur = cur , cur
        set_bit = set_bit << 1
    return max0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 808
---> probID: geeksforgeeks_1675_A
---> inputs:

---> outputs:
42.0


def test_GFG ( ) :
    """Test the sum of the powers of the polynomials of the form
 (n, k).

 >>> from sympy.polys.distributedmodules import GFG
 >>> from sympy.polys.domains import ZZ
 >>> from sympy.polys.densebasic import dmp_GFG
 >>> f = ZZ.map([[1, 2], [3, 4]])
 >>> g = ZZ.map([[1, 2], [3, 4]])
 >>> dmp_GFG(f, g)
 (1, 2)
 >>> dmp_GFG(f, ZZ(2), ZZ(3))
 (1, 2)
 >>> dmp_GFG(f, ZZ(4), ZZ(2))
 (1, 2)
 >>> dmp_GFG(f, ZZ(5), ZZ(2))
 (1, 2)
 """
    n , k = symbols ( 'n k' , integer = True , cls = Dummy )
    sum , num = dmp_gf_power ( f , n , k , K )
    assert sum == num


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 809
---> probID: geeksforgeeks_817_A
---> inputs:

---> outputs:
[-4.0, -1.6, -1.1428571428571428]


def test_GFG ( ) :
    A = 2
    B = 5
    C = 7
    D = 8
    rslt = xandYandZintercept ( A , B , C , D )
    assert np . allclose ( rslt , [ [ 0 , 1 , 2 ] , [ 3 , 4 , 5 ] , [ 6 , 7 , 8 ] ] )


---> console_out:
 
DIDN'T MATCH!! :(
 46%|████▋     | 809/1746 [00:19<00:22, 41.38it/s]

-------------------------------------


---> lineNum: 810
---> probID: geeksforgeeks_5109_A
---> inputs:

---> outputs:
10
2 1 3 2


def test_GFG ( ) :
    l = [ ]
    s = 0
    for i in range ( n ) :
        s += abs ( a [ i ] )
        if a [ i ] >= 0 :
            continue
        if i == 0 :
            l . append ( i + 1 )
        else :
            l . append ( i + 1 )
            l . append ( i )
    assert s == 0
    for i in l :
        print ( i , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 811
---> probID: geeksforgeeks_3067_A
---> inputs:

---> outputs:
Mr%20John%20Smith


def GFG ( str ) :
    MAX = 1000
    def replace_spaces ( str ) :
        space_count , i = 0 , 0
        for i in range ( len ( str ) ) :
            if str [ i ] == ' ' :
                space_count += 1
        while str [ i - 1 ] == ' ' :
            space_count -= 1
            i -= 1
        new_length = i + space_count * 2
        if new_length > MAX :
            return str
        index = new_length - 1
        new_str = str [ : index ]
        str = str [ index : ]
        for j in range ( i - 1 , - 1 , - 1 ) :
            if new_str [ j ] == ' ' :
                str [ index ] = '0'
                str [ index - 1 ] = '2'
                str [ index - 2 ] = '%'
                index = index - 3
            else :
                str [ index ] = new_str [ j ]
                index -= 1
        return str
    def replace_string ( str ) :
        str = 'Mr John Smith ' . join ( str )
        str = replace_spaces ( str )
        for i in range ( len ( str ) ) :
            print ( str [ i ] )
    return GFG


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 812
---> probID: aizu_p01866_A
---> inputs:
5
00001
3
---> outputs:
11101

def main ( ) :
    import sys
    import doctest
    import os
    import tempfile
    import time
    import re
    import string
    import doctest
    class B ( object ) :
        def doIt ( self ) :
            n = len ( self . str )
            self . str = self . str [ : n ]
            ctr = self . str [ n : ]
            m = len ( self . str )
            num = n
            s = [ ]
            for i in range ( n ) :
                if m == 0 :
                    s . append ( ctr [ i ] )
                elif m < num :
                    if ctr [ i ] == '0' :
                        s . append ( 1 )
                        m -= 1
                    else :
                        s . append ( 1 )
                else :
                    if ctr [ i ] == '0' :
                        s . append ( 1 )
                    else :
                        s . append ( 0 )
                num -= 1
            print ( s )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 813
---> probID: geeksforgeeks_2186_A
---> inputs:

---> outputs:
5


def test_GFG ( ) :
    m = n
    while n != 0 :
        r = n % 10
        if r :
            if ( m % r ) != 0 :
                return False
        n /= 10
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 814
---> probID: codeforces_1225_A
---> inputs:
1 2
---> outputs:
['199 200', '1 2\n']

def main ( agrs ) :
    a = int ( agrs [ 0 ] )
    b = int ( agrs [ 1 ] )
    if a == b :
        print ( a * 10 + 1 , ( a * 10 + 2 ) )
    elif a + 1 == b :
        print ( a , b )
    elif a + 1 == b * 10 :
        print ( a , b * 10 )
    else :
        print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 47%|████▋     | 814/1746 [00:19<00:22, 41.68it/s]

-------------------------------------


---> lineNum: 815
---> probID: codeforces_496_A
---> inputs:
3
1 4 6
---> outputs:
5

def test_python_application_115 ( ) :
    import sys
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 816
---> probID: codeforces_456_B
---> inputs:
4
---> outputs:
4

def test_hw19 ( ) :
    f = BytesIO ( )
    try :
        f . read ( )
    finally :
        f . close ( )
    i = int ( str ( f . read ( ) ) )
    if len ( f . read ( 1 ) ) > 1 and ( int ( str ( f . read ( 1 ) ) ) * 10 + i ) % 4 == 0 :
        assert 4 == i
    elif len ( f . read ( 1 ) ) == 1 and i % 4 == 0 :
        assert 4 == i
    else :
        assert 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 817
---> probID: codeforces_835_B
---> inputs:
3
11
---> outputs:
1

def test_pre5 ( ) :
    import sys
    import random
    import string
    import random
    import string . ascii_lowercase
    import string . digits
    import string . ascii_uppercase
    import string . ascii_lowercase
    import string . digits
    import string . ascii_lowercase
    import string . digits
    import string . ascii_uppercase
    import string . ascii_lowercase
    import string . digits
    import string . ascii_uppercase
    import string . digits
    import string . ascii_lowercase
    import string . digits
    import string . ascii_uppercase
    import string . digits
    import string . ascii_lowercase
    import string . digits
    import string . ascii_lowercase
    import string . digits
    import string . ascii_uppercase
    import string . digits
    import string . ascii_lowercase
    import string . digits
    import string . ascii_uppercase
    import string . digits
    import string . ascii_lowercase
    import string . digits
    import string . ascii_lowercase
    import string . digits
    import string . ascii_uppercase
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits
    import string . digits


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 818
---> probID: codeforces_940_B
---> inputs:
9
2
3
1
---> outputs:
6

def test_B940 ( ) :
    x = symbols ( 'x' )
    N = symbols ( 'N' , integer = True , positive = True )
    K = symbols ( 'K' , integer = True , positive = True )
    A = symbols ( 'A' , integer = True , positive = True )
    B = symbols ( 'B' , integer = True , positive = True )
    cost = 0
    while N != 1 :
        if N < K :
            cost += ( N - 1 ) * A
            break
        r = N % K
        cost += r * A
        N -= r
        if B >= ( N - N / K ) * A :
            cost += ( N - 1 ) * A
            break
        cost += B
        N /= K
    assert cost == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 819
---> probID: geeksforgeeks_858_A
---> inputs:

---> outputs:
1


def test_gfg ( ) :
    class GfG ( object ) :
        def digsum ( self ) :
            sum = 0
            while self . n or sum > 9 :
                if self . n == 0 :
                    self . n = sum
                    sum = 0
                sum += self . n % 10
                self . n /= 10
    assert gfg ( ) == 0


---> console_out:
 
DIDN'T MATCH!! :(
 47%|████▋     | 819/1746 [00:19<00:22, 41.15it/s]  File "./junk/1692576720484_8448/main.py", line 6
    

SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 820
---> probID: codeforces_1446_B
---> inputs:
4 5
abba
babab
---> outputs:
5

def main ( ) :
    import sys
    n , m = sys . argv [ 1 ] , sys . argv [ 2 ]
    a , b = sys . argv [ 3 ] , sys . argv [ 4 ]
    dp = [ [ 0 ] * n + [ 0 ] * m + [ 0 ] * n + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m + [ 0 ] * m

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 821
---> probID: geeksforgeeks_1729_A
---> inputs:

---> outputs:
5th Centered heptagonal number :  71


def test_GFG ( ) :
    n = 5
    assert n == 1
    assert n == 2
    assert n == 3
    assert n == 4
    assert n == 5
    assert n == 6
    assert n == 7
    assert n == 8
    assert n == 9
    assert n == 10
    assert n == 11
    assert n == 12
    assert n == 13
    assert n == 14
    assert n == 15
    assert n == 16
    assert n == 17
    assert n == 18
    assert n == 19
    assert n == 20
    assert n == 21
    assert n == 22
    assert n == 23
    assert n == 24
    assert n == 25
    assert n == 26
    assert n == 27
    assert n == 28
    assert n == 29
    assert n == 30
    assert n == 31
    assert n == 32
    assert n == 33
    assert n == 34
    assert n == 35
    assert n == 36
    assert n == 37
    assert n == 38
    assert n == 39
    assert n == 40
    assert n == 41
    assert n == 42
    assert n == n == n
    assert n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n == n

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 822
---> probID: geeksforgeeks_4441_A
---> inputs:

---> outputs:
14


def test_GFG ( ) :
    arr = [ int ( i ) for i in range ( 10 ) ]
    minvalue = min ( arr ) ;
    xornum = 0
    for i in range ( n ) :
        xornum ^= ( minvalue ) ^ arr [ i ]
        minvalue += 1
    return xornum ^ minvalue


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 823
---> probID: geeksforgeeks_5032_A
---> inputs:

---> outputs:
2143675


def GFG ( n ) :
    res = [ ]
    if n % 2 == 0 :
        for i in range ( n ) :
            if i % 2 == 0 :
                res . append ( chr ( 48 + i + 2 ) )
            else :
                res . append ( chr ( 48 + i ) )
    else :
        for i in range ( n - 2 ) :
            if i % 2 == 0 :
                res . append ( chr ( 48 + i + 2 ) )
            else :
                res . append ( chr ( 48 + i ) )
        res . append ( chr ( 48 + n - 2 ) )
        res . append ( chr ( 48 + n ) )
        res . append ( chr ( 48 + n - 1 ) )
    res . append ( '\0' )
    for i in range ( n ) :
        print ( res [ i ] )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576720582_8823/main.py", line 46
    a = a .
          ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 824
---> probID: geeksforgeeks_1189_A
---> inputs:

---> outputs:
1


def pygeeks ( a , n , K ) :
    """
 Return the number of elements in a and n in the graph.

 Parameters
 -----
 a : array_like
 Input array.
 n : int
 Number of elements in the graph.
 K : int
 Number of elements in the graph.

 Returns
 -----
 n : int
 Number of elements in the graph.

 See Also
 -----
 pygeeks

 Examples
 -----
 >>> from scipy.sparse import csr_matrix, digraph
 >>> a = np.arange(4)
 >>> a[0, 0] = 1
 >>> a[1, 1] = 1
 >>> a[2, 2] = 1
 >>> a[3, 3] = 1
 >>> a[4, 4] = 1
 >>> a[5, 5] = 1
 >>> a[6, 6] = 1
 >>> a[7, 7] = 1
 >>> a[8, 8] = 1
 >>> a[9, 9] = 1
 >>> a[10, 10] = 1
 >>> a[11, 11] = 1
 >>> a[12, 12] = 1
 >>> a[13, 13] = 1
 >>> a[14, 14] = 1
 >>> a[15, 15] = 1
 >>> a[16, 16] = 1
 """
    K = 3
    a = a .

---> console_out:
 
DIDN'T MATCH!! :(
 47%|████▋     | 824/1746 [00:19<00:22, 41.14it/s]  File "./junk/1692576720605_5323/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 825
---> probID: aizu_p01139_A
---> inputs:
10 10
.....W....
....W.W...
...W...W..
....W...W.
.....W...W
......W.W.
BBB....W..
..B..BBBBB
..B..B....
..B..B..W.
5 3
...B.
...BB
.....
1 1
.
0 0
---> outputs:
6 21
12 0
0 0

def import ( ) :
    import sys
    h , w = sys . argv [ 1 ]
    grid = [ ]
    B , W = Boolean ( ) , Boolean ( )
    count_b , count_w = 0 , 0
    dx = [ 1 , - 1 , 0 , 0 ]
    dy = [ 0 , 0 , 1 , - 1 ]
    from_to , to_to = sys . argv [ 2 : ]
    count_grid = 0
    def solve ( ) :
        f = sys . stdin . readline ( )
        while w != '' :
            h , w = sys . argv [ 1 ] , sys . argv [ 2 ]
            grid . append ( f . split ( ) )
        count_b = 0
        count_w = 0
        for i in range ( h ) :
            for j in range ( w ) :
                if grid [ i ] [ j ] == '.' :
                    B = False
                    W = False
                    count_grid = 0
                    dfs ( j , i )
                    if B and not W :
                        count_b += count_grid
                    if not B and W :
                        count_w += count_grid
            print ( count_b , count_w )
            w = sys . argv [ 2 ]
    def dfs ( x , y ) :
        grid [ y ] [ x ] = 'x'
        count_grid += 1
        for i in range ( 4 ) :
            nx = x + dx [ i ]
            ny = y + dy [ i ]
            if nx < w and nx >= 0 and ny < h and ny >= 0 :
                if grid [ ny ] [ nx ] == 'B' :
                    B = True
                elif grid [ ny ] [ nx ] == 'W' :
                    W = True
                elif grid [ ny ] [ nx ] == '.' :
                    dfs ( nx , ny )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 826
---> probID: codeforces_270_A
---> inputs:
3
30
60
90
---> outputs:
NO
YES
YES

def test_vfe ( ) :
    f = Poly ( x ** 2 + x + 1 , x )
    t = f . t
    while t :
        n = f . n
        if 360 % ( 180 - n ) == 0 :
            assert 'YES' in f . as_expr ( )
        else :
            assert 'NO' not in f . as_expr ( )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576720653_7851/main.py", line 3
    """ p

SyntaxError: EOF while scanning triple-quoted string literal


-------------------------------------


---> lineNum: 827
---> probID: projecteuler_p493_A
---> inputs:

---> outputs:
6.818741802

def p_p493 ( p ) :
    """ p

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 828
---> probID: codeforces_967_A
---> inputs:
6 60
0 0
1 20
3 21
5 0
19 30
23 40
---> outputs:
6 1

def exquo ( ) :
    """
 Compute the quotient of the landings of the current landings.
 """
    data = pd . read_csv ( 'landings_data.csv' , index_col = 0 )
    landings = data . index
    time = data . columns [ 'time' ]
    minutes = [ ]
    for i in range ( landings ) :
        hours = data . index [ 'hours' ] * 60
        minute = data . index [ 'minutes' ]
        minutes . append ( minute + hours )
    if time + 1 <= minutes [ 0 ] :
        print ( 0 , 0 , 0 )
        return
    for i in range ( landings - 1 ) :
        if minutes [ i + 1 ] - minutes [ i ] >= 2 * time + 2 :
            flight = minutes [ i ] + time + 1
            h = flight // 60
            m = flight % 60
            print ( h , m )
            return
    flight = minutes [ landings - 1 ] + time + 1
    h = flight // 60
    m = flight % 60
    print ( h , m )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 829
---> probID: codeforces_1521_A
---> inputs:
3
5 3
13 2
7 11
---> outputs:
['YES\n10 50 60\nYES\n169 39 208\nYES\n28 154 182', 'YES\n5 15 20\nYES\n13 26 39\nYES\n7 77 84\n']

def main ( ) :
    import sys
    k = len ( sys . argv )
    for i in range ( k ) :
        A = sys . argv [ i ]
        B = sys . argv [ i + 1 ]
        if B == 1 :
            print ( 'NO' )
        else :
            print ( 'YES' )
            print ( A , A * B , ( B + 1 ) * A )


---> console_out:
 
DIDN'T MATCH!! :(
 47%|████▋     | 829/1746 [00:20<00:22, 41.31it/s]

-------------------------------------


---> lineNum: 830
---> probID: aizu_p00226_A
---> inputs:
1234 5678
1234 1354
1234 1234
1230 1023
0123 1234
0 0
---> outputs:
0 0
2 1
4 0
1 3
0 3

def main ( ) :
    import sys
    import getopt
    from numpy . core import zeros
    from numpy . testing import assert_equal , assert_array_equal
    from numpy . testing . assert_equal import assert_equal
    from numpy . testing . assert_array_equal import assert_array_equal
    from numpy . testing . assert_equal import assert_equal
    from numpy . testing . assert_equal import assert_equal
    from numpy . testing import assert_equal
    from numpy . testing import assert_equal
    from numpy . testing import assert_equal
    from numpy . testing import assert_equal
    from numpy . testing import assert_raises
    from numpy . testing import assert_raises
    from numpy . testing import assert_raises
    from numpy . testing import assert_equal
    from numpy . testing import assert_raises
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_raises
    from numpy . testing import assert_raises
    from numpy . testing import assert_raises
    from numpy . testing import debug
    from numpy . testing import assert_raises
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug
    from numpy . testing import debug


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 831
---> probID: geeksforgeeks_1509_A
---> inputs:

---> outputs:
23


def test_GFG ( ) :
    if n < 4 :
        print ( "The array should have" " atleast 4 elements" )
    table1 = np . zeros ( ( n + 1 , n ) )
    table2 = np . zeros ( ( n , n ) )
    table3 = np . zeros ( ( n - 1 , n - 1 ) )
    table4 = np . zeros ( ( n - 2 , n - 2 ) )
    table1 [ : , 0 ] = np . inf
    table2 [ : , 1 ] = np . inf
    table3 [ : , 2 ] = np . inf
    table4 [ : , 3 ] = np . inf
    for i in range ( n - 1 , - 1 , - 1 ) :
        table1 [ i ] = max ( table1 [ i + 1 ] , arr [ i ] )
    for i in range ( n - 2 , - 1 , - 1 ) :
        table2 [ i ] = max ( table2 [ i + 1 ] , table1 [ i + 1 ] - arr [ i ] )
    for i in range ( n - 3 , - 1 , - 1 ) :
        table3 [ i ] = max ( table3 [ i + 1 ] , table2 [ i + 1 ] + arr [ i ] )
    for i in range ( n - 4 , - 1 , - 1 ) :
        table4 [ i ] = max ( table4 [ i + 1 ] , table3 [ i + 1 ] - arr [ i ] )
    return table4


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 832
---> probID: geeksforgeeks_1726_A
---> inputs:

---> outputs:
1 7 19 37 61 91 127 169 217 271 

def test_GFG ( ) :
    for i in range ( 1 , n + 1 ) :
        assert 3 * i ** ( i - 1 ) + 1 == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 833
---> probID: aizu_p01811_A
---> inputs:
ABC
---> outputs:
Yes

def main ( * args ) :
    import sys
    import string
    import getopt
    import re
    import os
    import ast
    import ast . nodes
    import ast . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes . nodes
    import ast . nodes . nodes . nodes
    import ast . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes . nodes
    import ast . nodes . nodes . nodes
    import ast . nodes . nodes . nodes
    import ast . nodes . nodes . nodes
    import ast . nodes . nodes . nodes
    import ast . nodes . nodes . nodes
    import ast . nodes . nodes . nodes
    import ast . nodes . nodes . nodes
    import ast . nodes . nodes . nodes


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 834
---> probID: codeforces_1028_A
---> inputs:
5 6
WWBBBW
WWBBBW
WWBBBW
WWWWWW
WWWWWW
---> outputs:
2 4

def code_ninety_seven ( ) :
    input = sys . stdin . readline ( )
    m = input . find ( 'Enter the number of characters to be tested.' )
    n = input . find ( 'Enter the number of characters to be tested.' )
    array_one = [ ]
    for i in range ( m ) :
        data = ''
        if input . find ( 'Enter the string to be tested.' ) != - 1 :
            data = input . split ( ) [ 0 ]
        else :
            break
        for j in range ( n ) :
            array_one . append ( data [ j ] )
    sumr = 0
    sumc = 0
    count1 = 0
    count2 = 0
    for i in range ( m ) :
        for j in range ( n ) :
            if array_one [ i ] [ j ] == 66 :
                sumr += i + 1
                count1 += 1
    for i in range ( m ) :
        for j in range ( n ) :
            if array_one [ i ] [ j ] == 66 :
                sumc += j + 1
                count2 += 1
    print ( sumr / count1 , sumc / count2 )


---> console_out:
 
DIDN'T MATCH!! :(
 48%|████▊     | 834/1746 [00:20<00:22, 40.76it/s]

-------------------------------------


---> lineNum: 835
---> probID: geeksforgeeks_4333_A
---> inputs:

---> outputs:
Principal Diagonal Smallest Element:  -5
Principal Diagonal Greatest Element :  11
Secondary Diagonal Smallest Element:  4
Secondary Diagonal Greatest Element:  11


def GFG ( mat ) :
    n = len ( mat )
    if n == 0 : return
    principalMin , principalMax = mat [ 0 ] , mat [ 0 ] [ 0 ]
    secondaryMin , secondaryMax = mat [ n - 1 ] , mat [ n - 1 ] [ 0 ]
    for i in range ( 1 , n ) :
        for j in range ( 1 , n ) :
            if i == j :
                if mat [ i ] [ j ] < principalMin : principalMin = mat [ i ] [ j ]
                if mat [ i ] [ j ] > principalMax : principalMax = mat [ i ] [ j ]
            if ( i + j ) == ( n - 1 ) :
                if mat [ i ] [ j ] < secondaryMin : secondaryMin = mat [ i ] [ j ]
                if mat [ i ] [ j ] > secondaryMax : secondaryMax = mat [ i ] [ j ]
    print ( "Principal Diagonal Smallest Element:  " + principalMin )
    print ( "Principal Diagonal Greatest Element : " + principalMax )
    print ( "Secondary Diagonal Smallest Element: " + secondaryMin )
    print ( "Secondary Diagonal Greatest Element: " + secondaryMax )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 836
---> probID: geeksforgeeks_4334_A
---> inputs:

---> outputs:
Principal Diagonal Smallest Element:  -5
Principal Diagonal Greatest Element :  11
Secondary Diagonal Smallest Element:  -10
Secondary Diagonal Greatest Element:  11


def GFG ( mat ) :
    n = len ( mat )
    if n == 0 : return
    principalMin , principalMax = mat [ 0 ] , mat [ 0 ] [ 0 ]
    secondaryMin , secondaryMax = mat [ n - 1 ] , mat [ n - 1 ] [ 0 ]
    for i in range ( n ) :
        if mat [ i ] [ i ] < principalMin : principalMin = mat [ i ] [ i ]
        if mat [ i ] [ i ] > principalMax : principalMax = mat [ i ] [ i ]
        if mat [ n - 1 - i ] [ i ] < secondaryMin : secondaryMin = mat [ n - 1 - i ] [ i ]
        if mat [ n - 1 - i ] [ i ] > secondaryMax : secondaryMax = mat [ n - 1 - i ] [ i ]
    print ( "Principal Diagonal Smallest Element:  " + principalMin )
    print ( "Principal Diagonal Greatest Element : " + principalMax )
    print ( "Secondary Diagonal Smallest Element: " + secondaryMin )
    print ( "Secondary Diagonal Greatest Element: " + secondaryMax )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 837
---> probID: geeksforgeeks_4783_A
---> inputs:

---> outputs:
8


def test_GFG ( ) :
    if n % 2 == 0 :
        print ( 'Invalid Input' )
        return - 1
    sum , count = 0 , 0
    while n >= 1 :
        count += 1
        sum += n
        n = n - 2
    assert sum / count == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 838
---> probID: geeksforgeeks_4784_A
---> inputs:

---> outputs:
8


def test_GFG ( ) :
    if n % 2 == 0 :
        print ( 'Invalid Input' )
        return - 1
    return ( n + 1 ) // 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 839
---> probID: geeksforgeeks_4027_A
---> inputs:

---> outputs:
Yes


def get_gfg ( arr , n ) :
    us = set ( )
    for i in range ( n ) :
        us . add ( arr [ i ] )
    count = 1
    curr_ele = arr [ 0 ] - 1
    while us . intersection ( curr_ele ) == True :
        count += 1
        curr_ele -= 1
    curr_ele = arr [ 0 ] + 1
    while us . intersection ( curr_ele ) == True :
        count += 1
        curr_ele += 1
    return ( count , ( us , curr_ele ) )


---> console_out:
 
DIDN'T MATCH!! :(
 48%|████▊     | 839/1746 [00:20<00:22, 40.80it/s]Traceback (most recent call last):
  File "./junk/1692576720974_1313/main.py", line 29, in <module>
    perform_queries ( arr , n , queries , q )
NameError: name 'perform_queries' is not defined


-------------------------------------


---> lineNum: 840
---> probID: geeksforgeeks_3398_A
---> inputs:

---> outputs:
0
1
-1


def get_left_most_zero ( zero ) :
    """
 Return the left most zero of the given queue.
 """
    if not zero :
        return - 1
    zero . pop ( )
    return 0
def get_left_most_one ( one ) :
    if not one :
        return - 1
    one . pop ( )
    return 1
def get_left_most_element ( zero , one ) :
    if not zero and not one :
        return - 1
    elif not zero :
        one . pop ( )
        return 1
    elif not one :
        zero . pop ( )
        return 0
    res = ( zero . pop ( ) , one . pop ( ) )
    if res == 0 :
        zero . pop ( )
    else :
        one . pop ( )
    return res
perform_queries ( arr , n , queries , q )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 841
---> probID: geeksforgeeks_4079_A
---> inputs:

---> outputs:
6 0 0 6


def GFG ( x , y ) :
    val = abs ( x ) + abs ( y )
    print ( val * ( x < 0 ) + 1 , 0 , end = ' ' )
    print ( '0 ' + val * ( y < 0 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 842
---> probID: geeksforgeeks_1932_A
---> inputs:

---> outputs:
3 4 6 

def get_sum ( a , n ) :
    P = [ a [ 0 ] ]
    for i in range ( 1 , n ) :
        P [ i ] = a [ i ] + P [ i - 1 ]
    S = P [ - 1 ]
    hash = { }
    for i in range ( n ) :
        hash [ P [ i ] ] = 1
    res = set ( )
    for i in range ( 1 , n * i + 1 ) :
        if S % i == 0 :
            pres = True
            div1 , div2 = i , S // i
            for j in range ( div1 , S , i + 1 ) :
                if hash [ j ] is None or hash [ j ] != 1 :
                    pres = False
                    break
            if pres and div1 != S :
                res . add ( div1 )
            pres = True
            for j in range ( S // i , S , i + 1 ) :
                if hash [ j ] is None or hash [ j ] != 1 :
                    pres = False
                    break
            if pres and div2 != S :
                res . add ( div2 )
    if len ( res ) == 0 :
        print ( '-1' )
        return
    for i in res :
        print ( i , end = '' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 843
---> probID: geeksforgeeks_4554_A
---> inputs:

---> outputs:
1 4 5 6 7 2 3 

def pyGFG ( greater , n ) :
    temp = [ ]
    for i in range ( 0 , n ) :
        temp . append ( i )
    arr = [ ]
    for i in range ( n ) :
        k = n - greater [ i ] - i
        arr . append ( temp [ k ] )
        temp . pop ( k )
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 844
---> probID: codeforces_154_A
---> inputs:
ababa
1
ab
---> outputs:
2

def practice ( ) :
    scn = input ( )
    s , p = scn . split ( )
    k , x , y , ans = scn . split ( )
    a , b = scn . split ( )
    for i in range ( k ) :
        p = scn . split ( )
        for j in range ( len ( s ) ) :
            if s [ j ] == p [ 0 ] :
                x += 1
            elif s [ j ] == p [ 1 ] :
                y += 1
            else :
                ans += min ( x , y )
                x = 0
                y = 0
        ans += min ( x , y )
        x = 0
        y = 0
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 48%|████▊     | 844/1746 [00:20<00:22, 40.79it/s]

-------------------------------------


---> lineNum: 845
---> probID: leetcode_475_A
---> inputs:

---> outputs:
1

def get_radius ( houses , heaters ) :
    heaters = sorted ( heaters )
    result = int ( - 1 )
    for house in houses :
        index = bisect . bisect_left ( heaters , house )
        if index < 0 :
            index = - ( index + 1 )
        dist1 = index - 1 >= 0 and house - heaters [ index - 1 ] or int ( - 1 )
        dist2 = index < len ( heaters ) and heaters [ index ] - house or int ( - 1 )
        result = max ( result , min ( dist1 , dist2 ) )
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 846
---> probID: projecteuler_p130_A
---> inputs:

---> outputs:
149253

def p130 ( n ) :
    print ( [ 'p130 run' , n ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 847
---> probID: geeksforgeeks_873_A
---> inputs:

---> outputs:
1


def test_solution ( num , x , k , n ) :
    if x == 0 :
        res += 1
    r = int ( math . floor ( math . pow ( num , 1.0 / n ) ) )
    for i in range ( k + 1 , r + 1 ) :
        a = x - int ( math . pow ( i , n ) )
        if a >= 0 :
            check_recursive ( num , x - int ( math . pow ( i , n ) ) , i , n )
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 848
---> probID: atcoder_ABC079_C
---> inputs:
1222
---> outputs:
1+2+2+2=7

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , '' )
    except getopt . error as msg :
        sys . stdout . write ( msg + '\n' )
        sys . exit ( 2 )
    if args == [ ] :
        if opts == '--help' :
            usage ( )
            sys . exit ( 0 )
    else :
        if opts == '--input' :
            input ( )
            sys . exit ( 0 )
    if not args :
        if opts == '--output' :
            output ( )
            sys . exit ( 0 )
    if not args :
        return
    if not output :
        output ( )
        sys . exit ( 0 )
    if not input :
        input ( )
        sys . exit ( 0 )
    if not output :
        output ( )
        sys . exit ( 0 )
    plus = input ( )
    if not plus :
        plus ( )
    if not plus :
        plus ( )
    if not output :
        output ( )
    return plus , output


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 849
---> probID: codeforces_1458_B
---> inputs:
3
6 5
6 5
10 2
---> outputs:
7.0000000000 11.0000000000 12.0000000000

def main ( agrs ) :
    import sys
    out = sys . stdout
    n = len ( agrs )
    a = [ ]
    b = [ ]
    total = 0
    for i in agrs :
        a . append ( i )
        b . append ( i )
        total += b [ i ] / 2.0
    dp = [ [ - 1 ] * 10001 for i in range ( n + 1 ) ]
    for i in range ( 0 , n ) :
        del dp [ i ]
    dp [ 0 ] [ 0 ] = total
    for i in range ( 0 , n ) :
        for k in range ( n - 1 , - 1 , - 1 ) :
            for j in range ( 0 , 10001 ) :
                if dp [ k ] [ j ] == - 1 :
                    continue
                dp [ k + 1 ] [ j + a [ i ] ] = float ( max ( dp [ k + 1 ] [ j + a [ i ] ] , dp [ k ] [ j ] + b [ i ] / 2.0 ) )
    max = 0
    for k in range ( 1 , n + 1 ) :
        max = 0
        for j in range ( 0 , 10001 ) :
            max = float ( max ( max , min ( dp [ k ] [ j ] , j ) ) )
        out . write ( "%d " % max )
    out . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(
 49%|████▊     | 849/1746 [00:20<00:21, 40.79it/s]

-------------------------------------


---> lineNum: 850
---> probID: codeforces_1060_B
---> inputs:
35
---> outputs:
17

def main ( ) :
    import sys
    rand = random . Random ( )
    n = rand . randint ( 1 , 1000 )
    print ( solve ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 851
---> probID: geeksforgeeks_5282_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    for i in range ( 2 , n + 1 ) :
        if n % i == 0 :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576721266_6314/main.py", line 1
    def import ( n , m , a ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 852
---> probID: geeksforgeeks_3153_A
---> inputs:

---> outputs:
4


def import ( n , m , a ) :
    import numpy as np
    class solution ( object ) :
        def __init__ ( self , n , m , a ) :
            self . n = n
            self . m = m
            self . a = a
        def __repr__ ( self ) :
            return '%s(%s,%s,%s)' % ( self . n , self . m , self . a , self . n )
    arr = np . arange ( 6 )
    print ( Squares ( arr , n , m , a ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 853
---> probID: codeforces_1312_A
---> inputs:
2
6 3
7 3
---> outputs:
YES
NO

def test_two_regular_polygons ( ) :
    f = Poly ( x ** 2 + x + 1 , x )
    t = Poly ( x ** 2 + x + 1 , x )
    while t :
        n , m = f . degree ( ) , Poly ( x ** 2 + x + 1 , x )
        assert ( n % m ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 854
---> probID: geeksforgeeks_5067_A
---> inputs:

---> outputs:
Count of Cubes is  2


def GFG ( a , b ) :
    cnt = 0
    for i in range ( a , b + 1 ) :
        for j in range ( 1 , j ** 2 ) :
            if j ** 2 * j == i :
                cnt += 1
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(
 49%|████▉     | 854/1746 [00:20<00:21, 41.20it/s]

-------------------------------------


---> lineNum: 855
---> probID: atcoder_ABC111_C
---> inputs:
4
3 1 3 2
---> outputs:
1

def main ( ) :
    import sys
    n = len ( sys . argv )
    oddList = [ ]
    evenList = [ ]
    for i in range ( 1 , n + 1 ) :
        v = sys . argv [ i ]
        if i % 2 == 1 :
            oddList . append ( v )
        if i % 2 == 0 :
            evenList . append ( v )
    maxOdd , maxEven , secondmaxOdd , secondmaxEven , countOdd , countEven = 0 , 0 , 0 , 0 , 0
    for i in range ( 1 , 100001 ) :
        maxOdd = max ( oddList [ i ] , maxOdd )
        maxEven = max ( evenList [ i ] , maxEven )
    oddnum , evennum = 0 , 0 , 0
    for i in range ( 1 , 100001 ) :
        if oddList [ i ] == maxOdd :
            oddnum = i
            countOdd += 1
        if evenList [ i ] == maxEven :
            evennum = i
            countEven += 1
    for i in range ( 1 , 100001 ) :
        if oddList [ i ] != maxOdd :
            secondmaxOdd = max ( oddList [ i ] , secondmaxOdd )
        if evenList [ i ] != maxEven :
            secondmaxEven = max ( evenList [ i ] , secondmaxEven )
    if countOdd >= 2 :
        secondmaxOdd = maxOdd
    if countEven >= 2 :
        secondmaxEven = maxEven
    for i in range ( 1 , 100001 ) :
        if oddList [ i ] == maxOdd :
            oddnum = i
        if evenList [ i ] == maxEven :
            evennum = i
    if oddnum == evennum :
        if maxOdd > maxEven :
            maxEven = secondmaxEven
        elif maxOdd < maxEven :
            maxOdd = secondmaxOdd
        else :
            maxEven = max ( secondmaxOdd , secondmaxEven )
    ans = n - maxOdd - maxEven
    if ans == 0 :
        return 0
    else :
        return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 856
---> probID: geeksforgeeks_4177_A
---> inputs:

---> outputs:
a
ab
abc
abcd
b
bc
bcd
c
cd
d


def GFG ( str , n ) :
    for i in range ( n ) :
        for j in range ( i + 1 , n + 1 ) :
            print ( str [ i : j ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 857
---> probID: geeksforgeeks_4268_A
---> inputs:

---> outputs:
Number of 0s = 1
Number of 1s = 1


def GFG ( n ) :
    if n <= 1 :
        return False
    for i in range ( 2 , n ) :
        if n % i == 0 :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576721410_3328/main.py", line 17
    
                                                     ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 858
---> probID: geeksforgeeks_834_A
---> inputs:

---> outputs:
The exterior angle of thecyclic quadrilateral is 48  degrees


def test_GFG ( ) :
    assert angleextcycquad ( z ) == ( - z , - z )
    assert angleextcycquad ( - z ) == ( - z , - z )
    assert angleextcycquad ( z ) == ( - z , - z )
    assert angleextcycquad ( - z ) == ( - z , - z )
    assert angleextcycquad ( - z ) == ( - z , - z )
    assert angleextcycquad ( - z ) == ( - z , - z )
    assert angleextcycquad ( - z ) == ( - z , - z )
    assert angleextcycquad ( - z ) == ( - z , - z )
    assert angleextcycquad ( - z ) == ( - z , - z )
    assert angleextcycquad ( - z ) == ( - z , - z )
    assert angleextcycquad ( - z ) == ( - z , - z )
    assert angleextcycquad ( - z ) == ( - z , - z )
    assert angleextcycquad ( - z ) == ( - z , - z )
    assert angleextcycquad ( - z ) == ( - z , - z )
    assert angleextcycquad ( - z ) == ( - z , - z

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 859
---> probID: geeksforgeeks_2767_A
---> inputs:

---> outputs:
Minimum Index Character =  e


def GFG ( str , patt ) :
    min_index = int ( str )
    m = len ( str )
    n = len ( patt )
    for i in range ( n ) :
        for j in range ( m ) :
            if patt [ i ] == str [ j ] and j < min_index :
                min_index = j
                break
    if min_index != int ( m ) :
        print ( "Minimum Index Character = " + str [ min_index ] )
    else :
        print ( "No character present" )


---> console_out:
 
DIDN'T MATCH!! :(
 49%|████▉     | 859/1746 [00:20<00:21, 41.26it/s]

-------------------------------------


---> lineNum: 860
---> probID: codeforces_456_A
---> inputs:
2
1 2
2 1
---> outputs:
Happy Alex

def main ( ) :
    import sys
    import getopt
    for args , opts , args in getopt . getopt ( sys . argv [ 1 : ] , '' ) :
        for o , a in opts :
            if o == '-h' :
                print ( '\n' )
                return
        if o == '-v' :
            print ( '\n' )
            return
    print ( '\nPoor Alex' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 861
---> probID: geeksforgeeks_545_A
---> inputs:

---> outputs:
658


def gen2 ( n , k ) :
    for j in range ( k ) :
        ans = 0
        i = 1
        while n / i > 0 :
            temp = ( n / ( i * 10 ) ) ** i + ( n % i )
            i *= 10
            ans = max ( ans , temp )
        n = ans
    return n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 862
---> probID: aizu_p01037_A
---> inputs:
5 3
0 1
2 1
3 1
---> outputs:
2 1
1 1

def main ( ) :
    log = logging . getLogger ( __name__ )
    result = sys . stdout
    parser = argparse . ArgumentParser ( description = 'Generate a simple histogram of a random number of values.' )
    parser . add_argument ( 'N' , type = int , help = 'The number of values to generate.' )
    parser . add_argument ( '-M' , type = int , help = 'The number of values to generate.' )
    parser . add_argument ( '-L' , type = int , help = 'The number of values to generate.' )
    parser . add_argument ( '-s' , type = int , help = 'The number of values to generate.' )
    parser . add_argument ( '-f' , type = int , help = 'The number of values to generate.' )
    parser . add_argument ( '-s0' , type = int , help = 'The number of values to generate.' )
    args = parser . parse_args ( )
    N = args . N
    M = args . M
    w = [ ]
    for i in range ( N ) :
        a = int ( random . uniform ( 0 , N ) )
        L = int ( random . uniform ( 0 , N ) )
        for j in range ( L ) :
            w . append ( 1 )
    t = [ ]
    s = 0
    f = 0
    s0 = 0
    i = 0
    for i in range ( N ) :
        if f == 0 and w [ i ] == 1 :
            s = i
            f = 1
        elif f == 1 and w [ i ] == 0 :
            f = 0
            if s == 0 : s0 = i
            else : t . append ( i - s )
    if f == 1 : t [ i - s + s0 ] += 1
    elif s0 != 0 : t . append ( s0 )
    for i in range ( N , 0 , - 1 ) :
        if t [ i ] > 0 : result . write ( i , t [ i ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 863
---> probID: atcoder_ABC059_C
---> inputs:
4
1 -3 1 0
---> outputs:
4

def main ( ) :
    io = sys . stdin
    n = io . readline ( ) . rstrip ( )
    a = [ ]
    for i in range ( 1 , n + 1 ) :
        a . append ( io . readline ( ) )
    sum = 0
    now = 0
    border = 1
    end = 0
    ans_p = 0
    for i in range ( 1 , n + 1 ) :
        sum += a [ i ]
        end = border - sum
        if border > 0 :
            if now < end :
                ans_p += abs ( now - end )
                now = end
        else :
            if now > end :
                ans_p += abs ( now - end )
                now = end
        border = - border
    sum = 0
    now = 0
    border = - 1
    end = 0
    ans_m = 0
    for i in range ( 1 , n + 1 ) :
        sum += a [ i ]
        end = border - sum
        if border > 0 :
            if now < end :
                ans_m += abs ( now - end )
                now = end
        else :
            if now > end :
                ans_m += abs ( now - end )
                now = end
        border = - border
    print ( min ( ans_p , ans_m ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 864
---> probID: geeksforgeeks_2964_A
---> inputs:

---> outputs:
For N =  1 :  1
For N =  2 :  3
For N =  3 :  9
For N =  4 :  33
For N =  5 :  53
For N =  6 :  73
For N =  7 :  13
For N =  8 :  33
For N =  9 :  13
For N =  10 :  13


def AAA ( N ) :
    if N <= 10 :
        ans , fac = 0 , 1
        for i in range ( 1 , N + 1 ) :
            fac = fac * i
            ans += fac
        return int ( ans % 100 )
    else :
        return 13


---> console_out:
 
DIDN'T MATCH!! :(
 49%|████▉     | 864/1746 [00:20<00:21, 40.99it/s]

-------------------------------------


---> lineNum: 865
---> probID: geeksforgeeks_2148_A
---> inputs:

---> outputs:
9


def GFG ( ) :
    binary_number = "1001"
    print ( int ( binary_number , 2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 866
---> probID: geeksforgeeks_3617_A
---> inputs:

---> outputs:
Yes


def test_GFG ( ) :
    a = x ** 2 + y ** 2 + z ** 2
    if math . ceil ( a ) == 1 and math . floor ( a ) == 1 :
        return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 867
---> probID: geeksforgeeks_2541_A
---> inputs:

---> outputs:
288
34560


def test_GFG ( ) :
    MAX = 1000000
    MOD = 10000007
    result = [ ]
    fact = [ 0 ] * MAX + [ 1 ] * MAX
    def pre_compute ( ) :
        fact [ 0 ] = 1
        result [ 0 ] = 1
        for i in range ( 1 , MAX + 1 ) :
            fact [ i ] = ( ( fact [ i - 1 ] % MOD ) ** i ) % MOD
            result [ i ] = ( ( result [ i - 1 ] % MOD ) ** ( fact [ i ] % MOD ) ) % MOD
    def perform_queries ( q , n ) :
        pre_compute ( )
        for i in range ( n ) :
            assert result [ q [ i ] ] == fact [ q [ i ] ]
    def test_gf_gf_list ( ) :
        q = [ 4 , 5 ]
        n = len ( q )
        perform_queries ( q , n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 868
---> probID: codeforces_1540_A
---> inputs:
3
3
0 2 3
2
0 1000000000
1
0
---> outputs:
-3
0
0

def test_D ( ) :
    x = symbols ( 'x' )
    T = symbols ( 'T' )
    while T :
        n = symbols ( 'n' )
        a = [ ]
        for i in range ( n ) :
            a . append ( i )
        a . sort ( )
        mini = 0
        ans = 0
        for i in range ( 1 , n ) :
            diff = a [ i ] - a [ i - 1 ]
            mini = mini + ( - 1 ) * diff * i
            ans += mini
        assert ans == a [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 869
---> probID: geeksforgeeks_3171_A
---> inputs:

---> outputs:
The smallest positive missing number is  1


def pythree_binary_search ( arr , size ) :
    """
 Search for a binary element in a given array.

 Parameters
 -----
 arr : array_like
 The array to search in.
 size : int
 The size of the array to search.

 Returns
 -----
 j : int
 The index of the element in arr that is greater than or equal to size.
 """
    j , i = 0 , 0
    for i in range ( size ) :
        if arr [ i ] <= 0 :
            temp = arr [ i ]
            arr [ i ] , arr [ j ] = arr [ j ] , arr [ j ]
            j += 1
    return j


---> console_out:
 
DIDN'T MATCH!! :(
 50%|████▉     | 869/1746 [00:21<00:21, 41.31it/s]

-------------------------------------


---> lineNum: 870
---> probID: geeksforgeeks_1382_A
---> inputs:

---> outputs:
648


def get_GFG ( n ) :
    mod = 1000000007
    def digitnumber ( n ) :
        if n == 0 :
            return 1
        if n == 1 :
            return 9
        if n % 2 != 0 :
            temp = digitnumber ( ( n - 1 ) / 2 ) % mod
            return ( 9 * ( temp ** 2 ) % mod ) % mod
        else :
            temp = digitnumber ( n / 2 ) % mod
            return ( temp ** 2 ) % mod
    def count_excluding ( n , d ) :
        if d == 0 :
            return ( 9 * digitnumber ( n - 1 ) ) % mod
        else :
            return ( 8 * digitnumber ( n - 1 ) ) % mod
    def count_included ( n , d ) :
        if d == 0 :
            return ( 9 * digitnumber ( n - 1 ) ) % mod
        else :
            return ( 8 * digitnumber ( n - 1 ) ) % mod
    def count_excluded ( n , d ) :
        if d == 0 :
            return ( 9 * digitnumber ( n - 1 ) ) % mod
        else :
            return ( 8 * digitnumber ( n - 1 ) ) % mod
    def count_included ( n , d ) :
        if d == 0 :
            return ( 9 * digitnumber ( n - 1 ) ) % mod
        else :
            return ( 8 * digitnumber ( n - 1 ) ) % mod
    def count_excluded ( n , d ) :
        if d == 0 :
            return ( 9 * digitnumber ( n - 1 ) ) % mod
        else :
            return ( 8 * digitnumber ( n - 1 ) ) % mod
    def count_included ( n , d ) :
        if d == 0 :
            return ( 9 * digitnumber ( n - 1 ) ) % mod
        else :
            return ( 8 * digitnumber ( n - 1 ) ) % mod
    return count_excluded ( n , d )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576721734_9507/main.py", line 10
    print ( """ usage : SPACETOKEN % s SPACETOKEN [ - i | - o | - - index

SyntaxError: EOF while scanning triple-quoted string literal


-------------------------------------


---> lineNum: 871
---> probID: codeforces_1398_A
---> inputs:
3
7
4 6 11 11 15 18 20
4
10 10 10 11
3
1 1 1000000000
---> outputs:
['2 3 6\n-1\n1 2 3', '1 2 7\n-1\n1 2 3\n']

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'i:' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """ usage : SPACETOKEN % s SPACETOKEN [ - i | - o | - - index

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 872
---> probID: geeksforgeeks_1132_A
---> inputs:

---> outputs:
5:35:20 PM


def test_GFG ( ) :
    h1 = int ( str ( x ) [ 0 ] ) - '0'
    h2 = int ( str ( x ) [ 1 ] ) - '0'
    hh = h1 * 10 + h2
    Meridien = ''
    if hh < 12 :
        Meridien = 'AM'
    else :
        Meridien = 'PM'
    hh %= 12
    if hh == 0 :
        print ( '12' )
        for i in range ( 2 , 8 ) :
            print ( str ( i ) )
    else :
        print ( hh )
        for i in range ( 2 , 8 ) :
            print ( str ( i ) )
    print ( ' ' . join ( Meridien ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 873
---> probID: geeksforgeeks_2662_A
---> inputs:

---> outputs:
2


def GFG ( s , k ) :
    for i in range ( len ( s ) ) :
        if s [ i ] != s [ i % k ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 874
---> probID: geeksforgeeks_979_A
---> inputs:

---> outputs:
220
30
20


def GFG ( a , b ) :
    return ( a > b )
def printknapSack ( W , wt , val , n ) :
    i , w = 0 , W
    K = [ [ 0 ] * ( n + 1 ) ] * ( W + 1 )
    for i in range ( 0 , n + 1 ) :
        for w in range ( 0 , W + 1 ) :
            if i == 0 or w == 0 :
                K [ i ] [ w ] = 0
            elif wt [ i - 1 ] <= w :
                K [ i ] [ w ] = max ( val [ i - 1 ] + K [ i - 1 ] [ w - wt [ i - 1 ] ] , K [ i - 1 ] [ w ] )
            else :
                K [ i ] [ w ] = K [ i - 1 ] [ w ]
    res = K [ n ] [ W ]
    print ( res )
    w = W
    for i in range ( n , 0 , - 1 ) :
        if res == K [ i - 1 ] [ w ] :
            continue
        else :
            print ( wt [ i - 1 ] + " " )
            res = res - val [ i - 1 ]
            w = w - wt [ i - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(
 50%|█████     | 874/1746 [00:21<00:21, 40.31it/s]

-------------------------------------


---> lineNum: 875
---> probID: codeforces_268_A
---> inputs:
3
1 2
2 4
3 4
---> outputs:
1

def main ( ) :
    import sys
    n = len ( sys . argv )
    z = n * 2
    c = 0
    arr = [ ]
    ff = [ ]
    ss = [ ]
    while n :
        ff . append ( sys . argv [ 0 ] )
        ss . append ( sys . argv [ 0 ] )
    pp = len ( ff )
    for i in range ( pp ) :
        for j in range ( pp ) :
            if ff [ i ] == ss [ j ] :
                c += 1
            else :
                continue
    print ( c )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 876
---> probID: geeksforgeeks_3438_A
---> inputs:

---> outputs:
Found at index 2


def test_GFG ( ) :
    """Test the FastICG algorithm."""
    elements = [ ]
    indices = [ ]
    temp , i = 0 , 0
    j , ind , start , end = 0 , 0 , 0
    for i in range ( 0 , n , 3 ) :
        elements . append ( arr [ i ] )
        indices . append ( i )
        ind += 1
    if k < elements [ 0 ] :
        print ( "Not found" )
        return
    else :
        for i in range ( 1 , ind + 1 ) :
            if k < elements [ i ] :
                start , end = indices [ i - 1 ] , indices [ i ]
                break
        for i in range ( start , end + 1 ) :
            if k == arr [ i ] :
                j = 1
                break
        if j == 1 :
            print ( "Found at index " + str ( i ) )
        else :
            print ( "Not found" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 877
---> probID: geeksforgeeks_3029_A
---> inputs:

---> outputs:
9009


def GFG ( n ) :
    upper_limit = 0
    for i in range ( 1 , n + 1 ) :
        upper_limit *= 10
        upper_limit += 9
    lower_limit = 1 + upper_limit / 10
    max_product = 0
    for i in range ( upper_limit , lower_limit , - 1 ) :
        for j in range ( i , lower_limit , - 1 ) :
            product = i * j
            if product < max_product :
                break
            number = product
            reverse = 0
            while number != 0 :
                reverse = reverse * 10 + number % 10
                number /= 10
            if product == reverse and product > max_product :
                max_product = product
    return max_product


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 878
---> probID: aizu_p02317_A
---> inputs:
5
5
1
3
2
4
---> outputs:
3

def main ( dp , a ) :
    start = 0
    end = len ( dp ) - 1
    while True :
        if dp [ start ] >= a :
            return start
        elif dp [ end ] <= a :
            return end
        else :
            if start + 1 == end :
                return end
            else :
                mid = ( start + end ) // 2
                if dp [ mid ] == a :
                    return mid
                elif dp [ mid ] > a :
                    end = mid
                else :
                    start = mid


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 879
---> probID: codeforces_1313_A
---> inputs:
7
1 2 1
0 0 0
9 1 7
2 2 3
2 3 2
3 2 2
4 4 4
---> outputs:
3
0
4
5
5
5
7

def test_fastfood_Restaurant ( ) :
    import random
    test = random . randrange ( 1 , 10 )
    while test :
        a , b , c = test
        if a == 0 and b == 0 and c == 0 :
            assert 0
        else :
            if b > c and b > a :
                k = a
                a , b , c = b , c
            if c > b and c > a :
                k = a
                a , c , c = c , c
            res = 0
            if a >= 1 :
                a -= 1
                res += 1
            if b >= 1 :
                b -= 1
                res += 1
            if c >= 1 :
                c -= 1
                res += 1
            if a >= 1 and b >= 1 :
                a -= 1
                b -= 1
                res += 1
            if a >= 1 and c >= 1 :
                a -= 1
                c -= 1
                res += 1
            if c >= 1 and b >= 1 :
                c -= 1
                b -= 1
                res += 1
            if a >= 1 and b >= 1 and c >= 1 :
                res += 1
            assert res == 1


---> console_out:
 
DIDN'T MATCH!! :(
 50%|█████     | 879/1746 [00:21<00:21, 40.59it/s]

-------------------------------------


---> lineNum: 880
---> probID: codeforces_788_A
---> inputs:
5
1 4 2 3 1
---> outputs:
3

def test_solution788_a ( ) :
    import sys
    import random
    import string
    import time
    import doctest
    import os
    import tempfile
    import hashlib
    import random
    import pickle
    import tempfile
    import time
    import pickle
    import os
    import pickle
    import random
    import time
    import pickle
    import os
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576721979_1136/main.py", line 44
    
                                               ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 881
---> probID: geeksforgeeks_910_A
---> inputs:

---> outputs:
9


def maximum_xor ( arr , n ) :
    """
SPACETOKENComputeSPACETOKENtheSPACETOKENmaximumSPACETOKENXORSPACETOKENofSPACETOKENtwoSPACETOKENarrays.

SPACETOKENParameters
SPACETOKEN-----
SPACETOKENarrSPACETOKEN:SPACETOKENarray_like
SPACETOKENInputSPACETOKENarray.
SPACETOKENnSPACETOKEN:SPACETOKENint
SPACETOKENNumberSPACETOKENofSPACETOKENelementsSPACETOKENtoSPACETOKENbeSPACETOKENcompared.

SPACETOKENReturns
SPACETOKEN-----
SPACETOKENansSPACETOKEN:SPACETOKENint
SPACETOKENMaximumSPACETOKENXORSPACETOKENofSPACETOKENtwoSPACETOKENarrays.

SPACETOKENExamples
SPACETOKEN-----
SPACETOKEN>>>SPACETOKENfromSPACETOKENscipy.linalgSPACETOKENimportSPACETOKENsolve
SPACETOKEN>>>SPACETOKENsolve([[1,SPACETOKEN2],SPACETOKEN[3,SPACETOKEN4]])
SPACETOKEN[1,SPACETOKEN2,SPACETOKEN3]
SPACETOKEN>>>SPACETOKENsolve([[1,SPACETOKEN2],SPACETOKEN[3,SPACETOKEN4]])
SPACETOKEN[1,SPACETOKEN2,SPACETOKEN3]
SPACETOKEN>>>SPACETOKENsolve([[1,SPACETOKEN2],SPACETOKEN[3,SPACETOKEN4]])
SPACETOKEN[1,SPACETOKEN2,SPACETOKEN3]
SPACETOKEN>>>SPACETOKENsolve([[1,SPACETOKEN2],SPACETOKEN[3,SPACETOKEN4]])
SPACETOKEN[1,SPACETOKEN2,SPACETOKEN3]
SPACETOKEN>>>SPACETOKENsolve([[1,SPACETOKEN2],SPACETOKEN[3,SPACETOKEN4]])
SPACETOKEN[1,SPACETOKEN2,SPACETOKEN3]
SPACETOKEN>>>SPACETOKENsolve([[1,SPACETOKEN2],SPACETOKEN[3,SPACETOKEN4]])
SPACETOKEN[1,SPACETOKEN2,SPACETOKEN3]
SPACETOKEN>>>SPACETOKENsolve([[1,SPACETOKEN2],SPACETOKEN[3,SPACETOKEN4]])
SPACETOKEN[1,SPACETOKEN2,SPACETOKEN3]
SPACETOKEN"""
    sForward , sBackward = [ ] , [ ]
    ans = - 1
    for i in range ( n ) :
        while not sForward and arr [ i ] < arr [ sForward [ i ] ] :
            ans = max ( ans , arr [ i ] ^ arr [ sForward [ i ] ] )
            sForward . pop ( )
        sForward . append ( i )
        while not sBackward and arr [ n - i - 1 ] < arr [ sBackward [ i ] ] :
            ans = max ( ans , arr [ n - i -

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576722003_4678/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 882
---> probID: geeksforgeeks_1247_A
---> inputs:

---> outputs:
9F1

def import ( n ) :
    hexaDeciNum = [ ]
    i = 0
    while n != 0 :
        temp = 0
        temp = n % 16
        if temp < 10 :
            hexaDeciNum . append ( chr ( temp + 48 ) )
            i += 1
        else :
            hexaDeciNum . append ( chr ( temp + 55 ) )
            i += 1
        n = n / 16
    for j in range ( i - 1 , - 1 , - 1 ) :
        print ( hexaDeciNum [ j ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 883
---> probID: atcoder_ABC072_C
---> inputs:
7
3 1 4 1 5 9 2
---> outputs:
4

def pymatlab ( ) :
    import numpy as np
    import sys
    import numpy . linalg
    import numpy . ma
    import numpy . ma
    import numpy . ma . mcode
    import numpy . ma . mcode
    import numpy . ma . mcode
    import numpy . ma . mcode
    import numpy . ma . mcode . mcode
    import numpy . ma . mcode . mcode
    import numpy . ma . mcode . mcode
    import numpy . ma . mcode . mcode
    import numpy . ma . mcode . mcode
    import numpy . ma . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode . mcode . mcode . mcode
    import numpy . ma . mcode . mcode . mcode . mcode . mcode
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 884
---> probID: aizu_p01118_A
---> inputs:
3 9
ABCDEFGHI
JKLMNOPQR
STUVWXYZ_
ICPC
5 11
___________
____A______
________M__
___________
_C_________
ACM
4 21
1_2_3_4_5_6_7_8_9_0_-
QqWwEeRrTtYyUuIiOoPp@
AaSsDdFfGgHhJjKkLl;_:
ZzXxCcVvBbNnMm,_._/__
ICPC2019,AsiaYokohamaRegional,QualificationRound
0 0
---> outputs:
28
23
493

def main ( ) :
    import sys
    sys . stdout = sys . stderr
    while 1 :
        R , C = read_csv ( sys . stdin )
        if R == 0 and C == 0 :
            break
        hm = { }
        for i in range ( R ) :
            lines = read_csv ( sys . stdin )
            for j in range ( C ) :
                c = lines [ j ]
                if c == '_' :
                    continue
                hm [ c ] = ( i , j )
        lines = read_csv ( sys . stdin )
        iPos = 0
        jPos = 0
        count = len ( lines )
        for i in range ( len ( lines ) ) :
            loc = hm [ lines [ i ] ]
            count += abs ( iPos - loc [ 'i' ] ) + abs ( jPos - loc [ 'j' ] )
            iPos = loc [ 'i' ]
            jPos = loc [ 'j' ]
        sys . stdout . write ( count )


---> console_out:
 
DIDN'T MATCH!! :(
 51%|█████     | 884/1746 [00:21<00:21, 40.47it/s]

-------------------------------------


---> lineNum: 885
---> probID: atcoder_ABC112_A
---> inputs:
2
1
1
---> outputs:
2

def main ( ) :
    m = re . compile ( r'(.*)\.(.*)$' )
    m . run ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 886
---> probID: geeksforgeeks_375_A
---> inputs:

---> outputs:
564


def GFG ( str ) :
    num , res = 0 , 0
    for c in str :
        if ord ( c ) < 128 :
            num = num * 10 + ( ord ( c ) - ord ( '0' ) )
        else :
            res = max ( res , num )
            num = 0
    return max ( res , num )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 887
---> probID: geeksforgeeks_3204_A
---> inputs:

---> outputs:
0   1   3


def GFG ( arr ) :
    max = 50009
    sum = [ 0 ] * max
    index_1 , index_2 , index_3 , index = 0 , 0 , 0 , 0
    k , i = 1 , 0 , 0
    for i in range ( 1 , n ) :
        sum [ i ] = sum [ i - 1 ] + arr [ k ]
    ans = - ( 1e15 )
    index_1 = index_2 = index_3 = - 1
    for l in range ( 0 , n ) :
        index = 0
        vmin = ( 1e15 )
        for r in range ( l , n ) :
            if sum [ r ] < vmin :
                vmin = sum [ r ]
                index = r
            if sum [ l ] + sum [ r ] - vmin > ans :
                ans = sum [ l ] + sum [ r ] - vmin
                index_1 = l
                index_2 = index
                index_3 = r
    print ( index_1 , index_2 , index_3 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 888
---> probID: geeksforgeeks_481_A
---> inputs:

---> outputs:
3 5 9 

def GFG ( arr , n ) :
    for i in range ( 1 , n - 1 ) :
        if arr [ i ] > arr [ i - 1 ] and arr [ i ] > arr [ i + 1 ] :
            print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 889
---> probID: geeksforgeeks_1405_A
---> inputs:

---> outputs:
5


def GFG ( ar , n ) :
    sum = 0
    for i in range ( n ) :
        sum = sum + ar [ i ]
    if sum % n == 0 :
        return sum / n
    else :
        A , B = sum // n + 1 , sum // n + 1
        ValueA , ValueB = 0 , 0
        for i in range ( n ) :
            ValueA += ( ar [ i ] - A ) * ( ar [ i ] - A )
            ValueB += ( ar [ i ] - B ) * ( ar [ i ] - B )
        if ValueA < ValueB :
            return A
        else :
            return B


---> console_out:
 
DIDN'T MATCH!! :(
 51%|█████     | 889/1746 [00:21<00:20, 41.07it/s]  File "./junk/1692576722195_5774/main.py", line 3
    ''' main SPACETOKEN : SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN

SyntaxError: EOF while scanning triple-quoted string literal


-------------------------------------


---> lineNum: 890
---> probID: codeforces_1625_A
---> inputs:
7
3 5
18 9 21
3 5
18 18 18
1 1
1
5 30
1 2 3 4 5
6 10
99 35 85 46 78 55
2 1
0 1
8 8
5 16 42 15 83 65 78 42
---> outputs:
17
18
1
1
39
0
2

def p_main ( p ) :
    ''' main SPACETOKEN : SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN int SPACETOKEN

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 891
---> probID: atcoder_ABC066_B
---> inputs:
abaababaab
---> outputs:
6

def py2exe_options ( ) :
    parser = optparse . OptionParser ( )
    parser . add_option ( '-s' , '--script' , dest = 'script' , help = 'Path to Python executable' )
    parser . add_option ( '-t' , '--type' , dest = 'type' , help = 'Type of the script' )
    parser . add_option ( '-v' , '--verbose' , dest = 'verbose' , help = 'Verbose output' )
    parser . add_option ( '--no-headers' , dest = 'no_headers' , help = 'Do not include headers in the output' )
    parser . add_option ( '--no-script' , dest = 'no_script' , help = 'Do not include the script' )
    parser . add_option ( '--no-header' , dest = 'no_header' , help = 'Do not include the header' )
    parser . add_option ( '--no-version' , dest = 'no_version' , help = 'Do not include the version' )
    parser . add_option ( '--no-comment' , dest = 'no_comment' , help = 'Do not include the comment' )
    parser . add_option ( '--no-stamp' , dest = 'stamp' , help = 'Path to touch on success' )
    parser . add_option ( '--no-user' , dest = 'no_user' , help = 'Do not include the stamp' )
    parser . add_option ( '--no-stamp' , dest = 'stamp' , help = 'Path to touch on failure' )
    return parser


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 892
---> probID: geeksforgeeks_2582_A
---> inputs:

---> outputs:
55


def find_nth ( n ) :
    count = 0
    for curr in range ( 19 , 9 ) :
        sum = 0
        for x in range ( curr , 0 , 10 ) :
            sum = sum + x % 10
        if sum == 10 :
            count += 1
        if count == n :
            return curr


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 893
---> probID: geeksforgeeks_2581_A
---> inputs:

---> outputs:
55


def get_gf_nth ( n ) :
    count = 0
    for curr in range ( 1 , 10 ) :
        sum = 0
        for x in range ( curr , 0 , 10 ) :
            sum = sum + x % 10
        if sum == 10 :
            count += 1
        if count == n :
            return curr


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 894
---> probID: geeksforgeeks_1113_A
---> inputs:

---> outputs:
3


def GFG ( N , S ) :
    count_elements = 0
    curr_sum = 0
    while curr_sum <= S :
        curr_sum += N
        N -= 1
        count_elements += 1
    return count_elements


---> console_out:
 
DIDN'T MATCH!! :(
 51%|█████     | 894/1746 [00:21<00:20, 41.32it/s]

-------------------------------------


---> lineNum: 895
---> probID: geeksforgeeks_2822_A
---> inputs:

---> outputs:
Yes


def pyGFG ( str , pattern , n , m ) :
    if m == 0 :
        return ( n , 0 )
    lookup = [ False ] * ( n + 1 )
    for i in range ( n + 1 ) :
        del lookup [ i ]
    lookup [ 0 ] = True
    for j in range ( 1 , m + 1 ) :
        if pattern [ j - 1 ] == '*' :
            lookup [ 0 ] = lookup [ 0 ] [ j - 1 ]
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , m + 1 ) :
            if pattern [ j - 1 ] == '*' :
                lookup [ i ] = lookup [ i ] [ j - 1 ] or lookup [ i - 1 ] [ j ]
            elif pattern [ j - 1 ] == '?' or str [ i - 1 ] == pattern [ j - 1 ] :
                lookup [ i ] = lookup [ i - 1 ] [ j - 1 ]
            else :
                lookup [ i ] = False
    return lookup [ n ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 896
---> probID: aizu_p01171_A
---> inputs:
10 15
30 20
0 0
---> outputs:
a
b

def main ( ) :
    import sys
    N = 1000001
    p = [ True ] * N
    p [ 0 ] = p [ 1 ] = False
    for i in range ( 2 , N ) :
        if p [ i ] :
            for j in range ( i + i , N , i ) :
                p [ j ] = False
    while True :
        a , b = divmod ( sys . stdin . read ( N ) , sys . stdin . read ( N ) )
        if ( a | b ) == 0 :
            break
        sa = [ ]
        sb = [ ]
        k = 2
        while a > 1 :
            if p [ k ] and a % k == 0 :
                a //= k
                sa . append ( k )
            else :
                k += 1
        k = 2
        while b > 1 :
            if p [ k ] and b % k == 0 :
                b //= k
                sb . append ( k )
            else :
                k += 1
        pa = sa . pop ( )
        sa . remove ( pa )
        pb = sb . pop ( )
        sb . remove ( pb )
        for x in sa :
            pa -= x
        for x in sb :
            pb -= x
        print ( pa > pb , 'a' , 'b' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 897
---> probID: geeksforgeeks_4378_A
---> inputs:

---> outputs:
11.0


def test_GFG ( ) :
    n = 3
    k = 3
    ans = nCr ( n + k - 1 , k ) + nCr ( k - 1 , n - 1 )
    assert ans == nCr ( n + k - 1 , k )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 898
---> probID: atcoder_ABC094_D
---> inputs:
5
6 9 4 2 11
---> outputs:
11 6

def main ( ) :
    import sys
    n = len ( sys . argv )
    a = [ ]
    for i in range ( n ) :
        a . append ( sys . argv [ i ] )
    a . sort ( )
    min = sys . maxint
    ans = None
    for i in range ( n - 1 ) :
        sa = abs ( a [ - 1 ] - a [ i ] ** 2 )
        if sa < min :
            min = sa
            ans = a [ i ]
    sys . stdout . write ( a [ - 1 ] + " " )
    sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 899
---> probID: geeksforgeeks_918_A
---> inputs:

---> outputs:
5


def test_GFG ( ) :
    a , b = symbols ( 'a b' , cls = Dummy )
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( b % a , a ) == a
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == a
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == a
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == a
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == a
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == a
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == a
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == a
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == a
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == a
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == a
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == a
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == a
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b ) == b
    assert gf_gcd ( a , b )

---> console_out:
 
DIDN'T MATCH!! :(
 51%|█████▏    | 899/1746 [00:21<00:20, 41.28it/s]

-------------------------------------


---> lineNum: 900
---> probID: aizu_p02275_A
---> inputs:
7
2 5 1 3 2 3 0
---> outputs:
0 1 2 2 3 3 5

def main ( ) :
    import sys
    import getopt
    global n
    global A , B , C
    n = len ( sys . argv )
    A = [ ]
    B = [ ]
    for i in range ( n ) :
        A . append ( sys . argv [ i ] )
        C [ A [ i ] ] += 1
    for i in range ( 1 , 10000 ) :
        C [ i ] = C [ i - 1 ] + C [ i ]
    for i in range ( n - 1 , - 1 , - 1 ) :
        B [ C [ A [ i ] ] - 1 ] = A [ i ]
        C [ A [ i ] ] -= 1
    for i in range ( n - 1 ) :
        sys . stdout . write ( B [ i ] )
        sys . stdout . write ( " " )
    print ( "%d %d\n" % ( n , B [ n - 1 ] ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 901
---> probID: codeforces_1060_A
---> inputs:
11
00000000008
---> outputs:
1

def main ( ) :
    import sys
    n = len ( sys . argv )
    s = sys . argv [ 1 ]
    count = 0
    for i in range ( n ) :
        if s [ i ] == '8' :
            count += 1
    print ( min ( count , n // 11 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 902
---> probID: geeksforgeeks_1813_A
---> inputs:

---> outputs:
3


def GFG ( n , b ) :
    unit_digit , sum = 0 , 0
    while n :
        unit_digit = n % b
        sum += unit_digit
        n = n // b
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 903
---> probID: geeksforgeeks_157_A
---> inputs:

---> outputs:
5555555550

def test_GFG ( ) :
    i , c0 , c5 = symbols ( 'i c s' , integer = True , positive = True )
    for i in range ( n ) :
        if a [ i ] == 0 :
            c0 += 1
        else :
            c5 += 1
    c5 = int ( floor ( c5 / 9 ) ) * 9
    if c0 == 0 :
        assert - 1 == F ( 5 ) == F ( 5 )
    elif c5 == 0 :
        assert 0 == F ( 5 ) == F ( 5 )
    else :
        for i in range ( c5 ) :
            assert 5 == F ( 5 ) == F ( 5 )
        for i in range ( c0 ) :
            assert 0 == F ( 5 ) == F ( 5 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 904
---> probID: geeksforgeeks_2209_A
---> inputs:

---> outputs:
5


def test_GFG ( ) :
    counter = 0
    for i in range ( 1 , n ) :
        for j in range ( i , n ) :
            for k in range ( j , n ) :
                for l in range ( k , n ) :
                    if i + j + k + l == n :
                        counter += 1


---> console_out:
 
DIDN'T MATCH!! :(
 52%|█████▏    | 904/1746 [00:21<00:20, 41.43it/s]

-------------------------------------


---> lineNum: 905
---> probID: geeksforgeeks_2060_A
---> inputs:

---> outputs:
40 min


def test_GFG ( ) :
    """Test the number of minutes in a GFG."""
    Min , S1 = symbols ( 'Min S1' , integer = True , positive = True )
    assert number_of_minutes ( S , S1 ) == Min


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 906
---> probID: codeforces_1110_B
---> inputs:
4 100 2
20 30 75 80
---> outputs:
17

def test_codechef_submission ( ) :
    import numpy as np
    import pickle
    n , m , k = 100 , 100 , 10
    b = [ ]
    if n < k :
        print ( n )
        return
    for i in range ( n ) :
        b . append ( i )
    d = [ ]
    for i in range ( n - 1 ) :
        d . append ( b [ i + 1 ] - b [ i ] - 1 )
    d . sort ( )
    sum = b [ - 1 ] - b [ 0 ] + 1
    for i in range ( len ( d ) - 1 , - 1 , - 1 ) :
        sum -= d [ i ]
    print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 907
---> probID: geeksforgeeks_1816_A
---> inputs:

---> outputs:
9


def GFG ( n ) :
    number_of_bits = int ( math . floor ( math . log ( n , 2 ) / math . log ( 2 , 2 ) ) ) + 1
    return ( ( 1 << number_of_bits ) - 1 ) ^ n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 908
---> probID: codeforces_1472_A
---> inputs:
5
2 2 3
3 3 2
5 10 2
11 13 1
1 4 4
---> outputs:
YES
NO
YES
YES
YES

def test_new_class_27 ( ) :
    f = Function ( 'f' )
    t = Symbol ( 't' )
    while t :
        w , h , n = f ( t )
        sheet = 1
        while w % 2 == 0 :
            w /= 2
            sheet *= 2
        while h % 2 == 0 :
            h /= 2
            sheet *= 2
        if sheet >= n :
            assert 'YES' == f ( w )
        else :
            assert 'NO' == f ( h )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 909
---> probID: geeksforgeeks_4194_A
---> inputs:

---> outputs:
( 2 , 2 )


def GFG ( x1 , y1 , x2 , y2 ) :
    print ( '(%d,%d )' % ( int ( 2 * x2 - x1 ) , int ( 2 * y2 - y1 ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 52%|█████▏    | 909/1746 [00:22<00:20, 41.56it/s]  File "./junk/1692576722675_3849/main.py", line 4
    assert ( m - 1 - max ( abs ( ( a = s [ i ] - m ) > 0 and n % 2 > 0 ) , abs ( ( b = s [ i ] - m ) > 0 and n % 2 > 0 ) ) % 3 + 1 == 0
                                     ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 910
---> probID: aizu_p00479_A
---> inputs:
11
4
5 2
9 7
4 4
3 9
---> outputs:
2
3
1
3

def py ( z ) :
    s = z . copy ( )
    for n , m , a , b , i in s :
        assert ( m - 1 - max ( abs ( ( a = s [ i ] - m ) > 0 and n % 2 > 0 ) , abs ( ( b = s [ i ] - m ) > 0 and n % 2 > 0 ) ) % 3 + 1 == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 911
---> probID: geeksforgeeks_388_A
---> inputs:

---> outputs:
X = 0 ,  Y = 1


def test_GFG ( ) :
    while True :
        if not isinstance ( x , ( int , long ) ) or not isinstance ( y , ( int , long ) ) :
            break
        if x >= 2 * y :
            x = x % ( 2 * y )
        elif y >= 2 * x :
            y = y % ( 2 * x )
        else :
            break
    assert x == 12
    assert y == 5


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 912
---> probID: aizu_p00969_A
---> inputs:
6
0 1 3 5 6 9
---> outputs:
4

def main ( ) :
    with open ( './junk/1692576722722_3430/input.txt' , 'r' ) as f :
        n = len ( f . read ( ) )
        v = [ ]
        set = set ( )
        for i in range ( n ) :
            v . append ( i )
            set . add ( v [ i ] )
        for i in range ( 1 , n ) :
            swap ( v , int ( random . uniform ( 0 , ( i - 1 ) ) ) , i )
        v . sort ( )
        ans = 2
        for i in range ( n ) :
            for j in range ( i + 1 , n ) :
                d = v [ j ] - v [ i ]
                if set . intersection ( v [ i ] - d ) :
                    continue
                cnt , cur = 2 , v [ j ]
                while set . intersection ( cur + d ) :
                    cur += d
                    cnt += 1
                ans = max ( ans , cnt )
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 913
---> probID: codeforces_1569_A
---> inputs:
4
1
a
6
abbaba
6
abbaba
9
babbabbaa
---> outputs:
['-1 -1\n1 6\n3 6\n2 5', '-1 -1\n1 2\n1 2\n1 2\n']

def test_a1569 ( ) :
    import sys
    import random
    cases = random . randint ( 1 , 10 )
    while cases :
        flag = False
        letters = random . choice ( string . ascii_lowercase )
        ab = string . join ( letters , ' ' )
        for i in range ( 1 , len ( letters ) ) :
            if ab [ i - 1 ] != ab [ i ] :
                flag = True
                print ( ( i , i + 1 ) )
                break
        if flag == False :
            print ( '-1 ' , '-1' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 914
---> probID: geeksforgeeks_4637_A
---> inputs:

---> outputs:
252666158


def test_GFG ( ) :
    mod = 1000000007
    inv2 = 500000004
    modulo = int ( num )
    res = 0
    for i in range ( len ( num ) ) :
        res = ( res * 10 + int ( num [ i ] ) - '0' ) % mod
    assert res == 0
    def find_sum ( L , R ) :
        a , b , l , r , ret = modulo ( L )
        return ( ( a * ( a - 1 ) ) % mod * inv2 ) % mod
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )
    assert find_sum ( L , R ) == ( ( 1 , 1 ) , ( 1 , 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 52%|█████▏    | 914/1746 [00:22<00:20, 41.49it/s]

-------------------------------------


---> lineNum: 915
---> probID: geeksforgeeks_4459_A
---> inputs:

---> outputs:
3  1  4  6  2  8  5  9  10  7  

def GFG ( l , r , a , k ) :
    if k < 1 or l + 1 == r :
        return
    k -= 2
    mid = ( l + r ) // 2
    temp = a [ mid - 1 ]
    a [ mid - 1 ] = a [ mid ]
    a [ mid ] = temp
    unsort ( l , mid , a , k )
    unsort ( mid , r , a , k )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 916
---> probID: geeksforgeeks_3056_A
---> inputs:

---> outputs:
15.756968956847974


def test_GFG ( lower_limit , upper_limit , freq , n ) :
    mid , freq = lower_limit
    for i in range ( n ) :
        sum , freq_sum = gf_mean ( mid , freq , n )
        assert sum / freq_sum == 0
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( lower_limit ) == n
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( freq ) == n
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( freq ) == n
    assert len ( lower_limit ) == n
    assert len ( upper_limit ) == n
    assert len ( freq ) == n
    assert len ( freq ) == n
    assert len ( freq ) == n
    assert len ( freq ) == n
    assert len ( freq ) == n
    assert len ( freq ) == n
    assert len ( freq ) == n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 917
---> probID: geeksforgeeks_886_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    a = 2
    b = 4
    assert gcd ( a , b ) == b


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 918
---> probID: geeksforgeeks_2458_A
---> inputs:

---> outputs:
160


def test_GFG ( ) :
    a , b = symbols ( 'a b' , real = True )
    assert rectanglearea ( a , b ) == - 1
    assert rectanglearea ( 2 * a * b ) == 2 * a * b


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 919
---> probID: codeforces_397_B
---> inputs:
2
5 2 3
6 4 5
---> outputs:
Yes
No

def test_CF427_1 ( ) :
    N = symbols ( 'N' , integer = True , positive = True )
    MOD = int ( 1e9 + 7 )
    f = Function ( 'f' )
    g = Function ( 'g' )
    t = symbols ( 't' , integer = True , positive = True )
    while t :
        n , a , b = f ( t )
        if n < a :
            g ( n )
            continue
        if a == b :
            if n % a == 0 :
                g ( n )
            else :
                g ( n )
            continue
        x = b / ( b - a )
        if n > x * a :
            g ( x )
            continue
        low = 1
        high = x + 1
        ans = 1
        while low <= high :
            mid = ( low + high ) // 2
            if mid * a < n :
                low = mid + 1
            else :
                ans = mid
                high = mid - 1
        if n > ( ans - 1 ) * b and n < ans * a :
            g ( n )
        else :
            g ( n )
    g ( )


---> console_out:
 
DIDN'T MATCH!! :(
 53%|█████▎    | 919/1746 [00:22<00:19, 41.64it/s]

-------------------------------------


---> lineNum: 920
---> probID: geeksforgeeks_3302_A
---> inputs:

---> outputs:
5


def GFG ( x ) :
    return ( x * ( x + 1 ) ) / 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 921
---> probID: geeksforgeeks_3538_A
---> inputs:

---> outputs:
3


def GFG ( dp , arr1 , n , arr2 , m , k ) :
    if k < 0 :
        return - 10000000
    if n < 0 or m < 0 :
        return 0
    ans = dp [ n ] [ m ] [ k ]
    if ans != - 1 :
        return ans
    try :
        ans = max ( lcs ( dp , arr1 , n - 1 , arr2 , m , k ) , lcs ( dp , arr1 , n , arr2 , m - 1 , k ) )
        if arr1 [ n - 1 ] == arr2 [ m - 1 ] :
            ans = max ( ans , 1 + lcs ( dp , arr1 , n - 1 , arr2 , m - 1 , k ) )
        ans = max ( ans , 1 + lcs ( dp , arr1 , n - 1 , arr2 , m - 1 , k - 1 ) )
    except :
        pass
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 922
---> probID: atcoder_AGC007_C
---> inputs:
3 75 91
---> outputs:
1310.833333333333258

def main ( ) :
    import numpy
    N = numpy . arange ( 0 , 10 )
    d = numpy . arange ( 0 , 10 )
    x = numpy . arange ( 0 , 10 )
    ans = numpy . zeros ( ( N , N ) )
    while N > 0.5 :
        adnum = numpy . arange ( d + x * ( N - 0.5 ) , N - 0.5 )
        ans = ans + adnum
        d = ( N + 1.0 ) * d / N + ( 5.0 * x ) / ( 2.0 * N )
        x = ( 1.0 + ( 2.0 / N ) ) * x
        del N
    format = '%.*f' % ( N , N )
    print ( format . format ( ans ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 923
---> probID: geeksforgeeks_5143_A
---> inputs:

---> outputs:
Prime number in reverse order
23 19 17 13 11 7 5 3 2 

def genprimelist ( n ) :
    prime = [ True for i in range ( n + 1 ) ]
    for i in range ( n ) :
        prime [ i ] = True
    for p in range ( 2 , n * p + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , n , p ) :
                prime [ i ] = False
    for i in range ( n , - 2 , - 1 ) :
        if prime [ i ] == True :
            print ( i , end = ' ' )
    N = 25
    print ( 'Prime number in reverse order' )
    if N == 1 :
        print ( 'No prime no exist in this range' )
    else :
        return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 924
---> probID: geeksforgeeks_4501_A
---> inputs:

---> outputs:
    *        *
   ***      ***
  *****    *****
 *******  *******
******************


def test_GFG ( min_stars , p_height ) :
    p_space = p_height - 1
    i , j , k , n , x = symbols ( 'i,j,k,n,x' )
    x = 1
    for i in range ( p_height ) :
        for j in range ( p_space , i > 0 , - 1 ) :
            assert x == 1
        for k in range ( min_stars ) :
            assert x == 1
        for n in range ( ( p_height + p_height - 2 ) , x , - 1 ) :
            assert x == 1
        for k in range ( min_stars ) :
            assert x == 1
        min_stars = min_stars + 2
        x = x + 2
        assert x == 1


---> console_out:
 
MATCHED!! :D
 53%|█████▎    | 924/1746 [00:22<00:19, 41.58it/s]

-------------------------------------


---> lineNum: 925
---> probID: codeforces_629_B
---> inputs:
4
M 151 307
F 343 352
F 117 145
M 24 128
---> outputs:
2

def test_b629 ( ) :
    """
 Test B629 algorithm in the book.
 """
    n = symbols ( 'n' , integer = True )
    FfriendPerDay = [ 0 ] * 367
    MfriendPerDay = [ 0 ] * 367
    answer = 0
    for i in range ( n ) :
        c = symbols ( 'c' , integer = True )
        a = symbols ( 'a' , integer = True )
        b = symbols ( 'b' , integer = True )
        for j in range ( a , b + 1 ) :
            if c == 'M' :
                MfriendPerDay [ j ] += 1
            else :
                FfriendPerDay [ j ] += 1
            if MfriendPerDay [ j ] < FfriendPerDay [ j ] :
                if MfriendPerDay [ j ] > answer :
                    answer = MfriendPerDay [ j ]
            else :
                if FfriendPerDay [ j ] > answer :
                    answer = FfriendPerDay [ j ]
    assert answer * 2 == answer


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 926
---> probID: geeksforgeeks_3694_A
---> inputs:

---> outputs:
22


def test_GFG ( ) :
    x = [ - 1 , 1 , 3 , 2 ]
    y = [ 5 , 6 , 5 , 3 ]
    n = len ( x )
    assert distancesum ( x , y , n ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 927
---> probID: geeksforgeeks_351_A
---> inputs:

---> outputs:
10


def test_GFG ( ) :
    """Test the calculation of the nth order polynomial of the nth order group."""
    phi = ( 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576723109_8041/main.py", line 20
    
                                                         ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 928
---> probID: geeksforgeeks_2646_A
---> inputs:

---> outputs:
50


def test_GFG ( ) :
    """TestSPACETOKENtheSPACETOKENcalculationSPACETOKENofSPACETOKENtheSPACETOKENnthSPACETOKENorderSPACETOKENpolynomialSPACETOKENofSPACETOKENtheSPACETOKENnthSPACETOKENorderSPACETOKENgroup."""
    phi = ( 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 + sqrt ( 5 ) ) / 2
    assert ( integrate ( phi , ( x , 0 , 1 ) ) == 1 +

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 929
---> probID: geeksforgeeks_2647_A
---> inputs:

---> outputs:
50


def GFG ( n ) :
    phi = ( 1 + sqrt ( 5 ) ) / 2
    return int ( round ( pow ( phi , n ) / sqrt ( 5 ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 53%|█████▎    | 929/1746 [00:22<00:19, 41.38it/s]

-------------------------------------


---> lineNum: 930
---> probID: codeforces_897_A
---> inputs:
3 1
ioi
1 1 i n
---> outputs:
noi

def main ( ) :
    input = sys . stdin
    n = len ( input )
    q = n
    s = input [ : n ]
    str = s [ n : ]
    for i in range ( q ) :
        l = input [ n - 1 ]
        r = input [ n - 1 ]
        c1 = input [ 0 ] [ 0 ]
        c2 = input [ 0 ] [ 1 ]
        start = l
        end = r
        while start <= end :
            if str [ start ] == c1 :
                str [ start ] = c2
            start += 1
    for c in str :
        print ( c )
    print ( "" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 931
---> probID: geeksforgeeks_2672_A
---> inputs:

---> outputs:
10


def pythree_string ( str1 , str2 ) :
    i = 0
    while i < len ( str1 ) - 1 and str1 [ i ] == str2 [ i ] :
        i += 1
    if str1 [ i ] > str2 [ i ] :
        return - 1
    if str1 [ i ] < str2 [ i ] :
        return 1
    else :
        return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 932
---> probID: codeforces_171_A
---> inputs:
3 14
---> outputs:
44

def main ( ) :
    import sys
    a = sys . argv [ 1 ]
    b = sys . argv [ 2 ]
    ans = getNum ( a , b )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 933
---> probID: codeforces_749_B
---> inputs:
0 0
1 0
0 1
---> outputs:
3
1 -1
-1 1
1 1

def test_a1133 ( ) :
    x1 = Symbol ( "x" )
    y1 = Symbol ( "y" )
    x2 = Symbol ( "x" , positive = True )
    y2 = Symbol ( "y" , positive = True )
    x3 = Symbol ( "x" , negative = True )
    y3 = Symbol ( "y" , negative = True )
    assert "3" in str ( x1 )
    assert ( x1 + x2 - x3 ) == ( y1 + y2 - y3 )
    assert ( x3 + x2 - x1 ) == ( y3 + y2 - y1 )
    assert ( x1 + x3 - x2 ) == ( y1 + y3 - y2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 934
---> probID: codeforces_1552_A
---> inputs:
4
3
lol
10
codeforces
5
aaaaa
4
dcba
---> outputs:
2
6
0
4

def main ( ) :
    import sys
    f = open ( '/proc/cpuinfo' , 'w' )
    t = sys . stdin . readline ( ) . rstrip ( )
    while t :
        n = sys . stdin . readline ( ) . rstrip ( )
        s = sys . stdin . readline ( ) . rstrip ( )
        tmp = [ ]
        freq = [ 0 ] * 26
        freq [ s [ i ] - 'a' ] += 1
        for i in range ( n ) :
            freq [ s [ i ] - 'a' ] += 1
        for i in range ( 26 ) :
            for j in freq [ i ] :
                tmp . append ( chr ( ord ( 'a' ) + i ) + "" )
        count = 0
        for i in range ( n ) :
            if s [ i ] != tmp [ i ] :
                count += 1
        f . write ( "%d\n" % count )
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(
 53%|█████▎    | 934/1746 [00:22<00:19, 41.47it/s]

-------------------------------------


---> lineNum: 935
---> probID: geeksforgeeks_2374_A
---> inputs:

---> outputs:
110


def GFG ( n , d ) :
    n /= d
    return ( n ) * ( 1 + n ) * d / 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 936
---> probID: aizu_p00238_A
---> inputs:
10
3
6 11
12 15
18 22
14
2
6 11
13 20
0
---> outputs:
OK
2

def main ( ) :
    import sys
    t = sys . stdin
    while t :
        n = t . readline ( )
        s = t . readline ( )
        f = sys . stdin . buffer
        sum = 0
        for i in range ( n ) :
            s = f . readline ( )
            f = sys . stdin . buffer
            sum += f . readline ( )
        if t <= sum :
            print ( "OK" )
        else :
            print ( t - sum )
        t = sys . stdin . readline ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 937
---> probID: geeksforgeeks_124_A
---> inputs:

---> outputs:
14 5 4 5 14 

def GFG ( num ) :
    fact = 1
    while num > 1 :
        fact *= num
        num -= 1
    return fact


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 938
---> probID: codeforces_1238_A
---> inputs:
4
100 98
42 32
1000000000000000000 1
41 40
---> outputs:
YES
YES
YES
NO

def ques ( ) :
    import sys
    n = len ( sys . argv )
    for i in range ( n ) :
        a = sys . argv [ i ]
        b = sys . argv [ i + 1 ]
        if abs ( a - b ) == 1 :
            print ( 'NO' )
        else :
            print ( 'YES' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576723371_3104/main.py", line 31
    assert codechef ( t ** 29 ) ==
                                 ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 939
---> probID: codeforces_1401_A
---> inputs:
6
4 0
5 8
0 1000000
0 0
1 0
1000000 1000000
---> outputs:
0
3
1000000
0
1
0

def test_codechef ( ) :
    import sympy
    t = symbols ( 't' , integer = True , positive = True )
    assert codechef ( t ) == ( t , 0 )
    assert codechef ( t ** 2 ) == ( t , 0 )
    assert codechef ( t ** 3 ) == ( t , 0 )
    assert codechef ( t ** 4 ) == ( t , 0 )
    assert codechef ( t ** 5 ) == ( t , 0 )
    assert codechef ( t ** 6 ) == ( t , 0 )
    assert codechef ( t ** 7 ) == ( t , 0 )
    assert codechef ( t ** 8 ) == ( t , 0 )
    assert codechef ( t ** 9 ) == ( t , 0 )
    assert codechef ( t ** 10 ) == ( t , 0 )
    assert codechef ( t ** 11 ) == ( t , 0 )
    assert codechef ( t ** 12 ) == ( t , 0 )
    assert codechef ( t ** 13 ) == ( t , 0 )
    assert codechef ( t ** 14 ) == ( t , 0 )
    assert codechef ( t ** 16 ) == ( t , 0 )
    assert codechef ( t ** 17 ) == ( t , 0 )
    assert codechef ( t ** 18 ) == ( t , 0 )
    assert codechef ( t ** 19 ) == ( t , 0 )
    assert codechef ( t ** 20 ) == ( t , 0 )
    assert codechef ( t ** 21 ) == ( t , 0 )
    assert codechef ( t ** 22 ) == ( t , 0 )
    assert codechef ( t ** 23 ) == ( t , 0 )
    assert codechef ( t ** 24 ) == ( t , 0 )
    assert codechef ( t ** 25 ) == ( t , 0 )
    assert codechef ( t ** 26 ) == ( t , 0 )
    assert codechef ( t ** 27 ) == ( t , 0 )
    assert codechef ( t ** 28 ) == ( t , 0 )
    assert codechef ( t ** 29 ) ==

---> console_out:
 
DIDN'T MATCH!! :(
 54%|█████▍    | 939/1746 [00:22<00:19, 41.62it/s]

-------------------------------------


---> lineNum: 940
---> probID: geeksforgeeks_2252_A
---> inputs:

---> outputs:
5


def GFG ( n , arr , ** kwargs ) :
    count = [ 1 ] * ( n + 1 )
    if n == 0 :
        return 1
    for i in range ( 1 , n + 1 ) :
        no_ways = 0
        for j in range ( len ( arr ) ) :
            if i - arr [ j ] >= 0 :
                no_ways += count [ i - arr [ j ] ]
            count [ i ] = no_ways
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 941
---> probID: aizu_p00206_A
---> inputs:
10000
5000 3150
5000 5000
0 0
5000 1050
5000 3980
5000 210
5000 5000
5000 5000
0 0
5000 2100
5000 2100
5000 2100
29170
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 70831
0
---> outputs:
6
NA

def main ( ) :
    import sys
    import doctest
    import numpy
    import numpy
    import numpy . linalg
    import numpy . random
    import numpy . testing
    import numpy . testing
    import numpy . testing
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main
    import numpy . testing . main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 942
---> probID: codeforces_1272_A
---> inputs:
8
3 3 4
10 20 30
5 5 5
2 4 3
1 1000000000 1000000000
1 1000000000 999999999
3 2 5
3 2 6
---> outputs:
0
36
0
0
1999999994
1999999994
2
4

def test_practice_1 ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' )
    while t != 0 :
        a , b , c = symbols ( 'a b c' , integer = True )
        if a == b and c == b :
            assert 0 == sum ( [ a - b , b - c , c - a ] )
        else :
            sum = abs ( a - b ) + abs ( b - c ) + abs ( c - a )
            sum -= 4
            assert max ( [ sum , sum ] ) == max ( [ sum , sum ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 943
---> probID: codeforces_709_A
---> inputs:
2 7 10
5 6
---> outputs:
1

def test_cf709_a ( ) :
    f = Function ( 'f' )
    n = symbols ( 'n' , integer = True , positive = True )
    b = symbols ( 'b' , integer = True , positive = True )
    d = symbols ( 'd' , integer = True , positive = True )
    a , sum , count = f ( n ) . subs ( n , 1 ) . as_coeff_Mul ( )
    assert count == 1
    f = Function ( 'f' )
    n = symbols ( 'n' , integer = True , positive = True )
    b = symbols ( 'b' , integer = True , positive = True )
    d = symbols ( 'd' , integer = True , positive = True )
    a , sum , count = f ( n ) . subs ( n , 1 ) . as_coeff_Mul ( )
    assert count == 1
    f = Function ( 'f' )
    n = symbols ( 'n' , integer = True , positive = True )
    b = symbols ( 'b' , integer = True , positive = True )
    d = symbols ( 'd' , integer = True , positive = True )
    a , sum , count = f ( n ) . subs ( n , 1 ) . as_coeff_Mul ( )
    assert count == 1
    f = Function ( 'f' )
    n = symbols ( 'n' , integer = True , positive = True )
    b = symbols ( 'b' , integer = True , positive = True )
    d = symbols ( 'd' , integer = True , positive = True )
    a , sum , count = f ( n ) . subs ( n , 1 ) . as_coeff_Mul ( )
    assert count == 1
    f = Function ( 'f' )
    n = symbols ( 'n' , integer = True , positive = True )
    b = symbols ( 'b' , integer = True , positive = True )
    d = symbols

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 944
---> probID: geeksforgeeks_1543_A
---> inputs:

---> outputs:
Index: 5


def main ( arr , low , high , key ) :
    if high < low :
        return - 1
    mid = ( low + high ) // 2
    if key == arr [ mid ] :
        return mid
    if key > arr [ mid ] :
        return binary_search ( arr , ( mid + 1 ) , high , key )
    return binary_search ( arr , low , ( mid - 1 ) , key )


---> console_out:
 
DIDN'T MATCH!! :(
 54%|█████▍    | 944/1746 [00:22<00:20, 40.00it/s]

-------------------------------------


---> lineNum: 945
---> probID: geeksforgeeks_1078_A
---> inputs:

---> outputs:
NO


def GFG ( arr , n ) :
    Sum = 0
    Xor = 0
    for i in range ( n ) :
        Sum = Sum + arr [ i ]
        Xor = Xor ^ arr [ i ]
    if Sum == Xor :
        print ( 'YES' )
    else :
        print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 946
---> probID: codeforces_796_B
---> inputs:
7 3 4
3 4 6
1 2
2 5
5 7
7 1
---> outputs:
1

def main ( ) :
    import sys
    x = [ False ] * 10000001
    def main ( ) :
        f = sys . stdin
        out = [ ]
        tk = f . readline ( )
        n , m , k = Int ( tk . split ( ) )
        tk = f . readline ( )
        for i in range ( m ) :
            x [ Int ( tk . split ( ) [ 0 ] ) ] = True
        pos = 1
        while k :
            if x [ pos ] :
                print ( pos )
                return
            tk = f . readline ( )
            a , b = Int ( tk . split ( ) [ 0 ] ) , Int ( tk . split ( ) [ 1 ] )
            pos = ( pos , a , b )
        print ( pos )
    def Int ( s ) :
        return int ( s )
    def Lon ( s ) :
        return long ( s )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 947
---> probID: geeksforgeeks_430_A
---> inputs:

---> outputs:
Odd pairs =  6
Even pairs =  4


def GFG ( arr , n ) :
    cntEven , cntOdd = 0 , 0
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            cntEven += 1
        else :
            cntOdd += 1
    evenPairs = 0
    evenPairs += ( ( cntEven * ( cntEven - 1 ) ) / 2 )
    evenPairs += ( ( cntOdd * ( cntOdd - 1 ) ) / 2 )
    oddPairs = 0
    oddPairs += ( cntEven * cntOdd )
    print ( "Odd pairs = " , oddPairs )
    print ( "Even pairs = " , evenPairs )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 948
---> probID: geeksforgeeks_1150_A
---> inputs:

---> outputs:
20


def _min_broadcast_range ( houses , towers ) :
    n , m = len ( houses ) , len ( towers )
    left_tower = np . inf
    right_tower = towers [ 0 ]
    j , k = 0 , 0
    min_range = 0
    while j < n :
        if houses [ j ] < right_tower :
            left = houses [ j ] - left_tower
            right = right_tower - houses [ j ]
            local_max = left < right
            if local_max > min_range :
                min_range = local_max
            j += 1
        else :
            left_tower = towers [ k ]
            if k < m - 1 :
                k += 1
                right_tower = towers [ k ]
            else :
                right_tower = np . inf
    return min_range


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 949
---> probID: geeksforgeeks_1922_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    assert ( 1 - divisor ** ( num / divisor ) ) == 1


---> console_out:
 
DIDN'T MATCH!! :(
 54%|█████▍    | 949/1746 [00:22<00:19, 40.46it/s]  File "./junk/1692576723654_7920/main.py", line 11
    

SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 950
---> probID: codeforces_764_A
---> inputs:
1 1 10
---> outputs:
10

def test_tennis ( ) :
    x = Symbol ( 'x' )
    y = Symbol ( 'y' )
    res , cnt1 , cnt2 = [ ] , [ ] , [ ]
    n , m , z = symbols ( 'nSPACETOKENmSPACETOKENz' , integer = True )
    for i in range ( m , z + 1 , m ) :
        for j in range ( n , z + 1 , n ) :
            if i == j :
                res . append ( i )
    assert res == [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 951
---> probID: aizu_p00181_A
---> inputs:
3 9
500
300
800
200
100
600
900
700
400
4 3
1000
1000
1000
0 0
---> outputs:
1800
1000

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'aJ0181' )
    except getopt . error as msg :
        print ( msg )
        return
    for o , a in opts :
        if o == '--no-input' :
            continue
        if o == '-a' :
            if a == '--input' :
                continue
            if a == '-b' :
                if b == '--output' :
                    continue
            elif o == '-c' :
                if c == '--input' :
                    continue
                if c == '-b' :
                    if b == '--output' :
                        continue
                elif c == '-c' :
                    if c == '--input' :
                        continue
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576723703_7454/main.py", line 34
    if w >= s . performance
                          ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 952
---> probID: aizu_p02252_A
---> inputs:
3 50
60 10
100 20
120 30
---> outputs:
240

def pytime_func ( ) :
    import time
    import numpy as np
    import numpy . linalg
    import numpy . random as np
    class Stuff ( object ) :
        def __init__ ( self , v , w ) :
            self . v = v
            self . w = w
            self . performance = 1.0 * v / w
        def __lt__ ( self , other ) :
            if self . performance < other . performance :
                return 1
            if self . performance > other . performance :
                return - 1
            return 0
    class Main ( object ) :
        def __init__ ( self , v , w ) :
            self . v = v
            self . w = w
        def __reduce__ ( self ) :
            return ( lambda x : np . reduce_sum ( x . v * self . v , self . v , self . v ) , lambda x , y : np . reduce_sum ( y * self . v , self . v , self . v ) )
        def __reduce__ ( self ) :
            return ( lambda x , y : np . reduce_sum ( x . v * self . v , self . v , self . v ) , lambda x , y : np . reduce_sum ( y * self . v , self . v , self . v ) )
        def __reduce__ ( self ) :
            return ( lambda x , y : np . reduce_sum ( x . v * self . v , self . v , self . v ) , lambda x , y : np . reduce_sum ( y * self . v , self . v , self . v ) )
        def __reduce__ ( self ) :
            return ( lambda x , y : np . reduce_sum ( x . v * self . v , self . v , self . v ) , lambda x , y : np . reduce_sum ( y * self . v , self . v , self . v ) )
        def __reduce__ ( self ) :
            return ( lambda x , y : np . reduce_sum ( x . v * self . v , self . v , self . v ) , lambda x , y : np . reduce_sum ( y * self . v , self . v , self . v ) )
    res = 0
    while w and not self . q :
        s = self . q . pop ( )
        if w >= s . performance

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 953
---> probID: geeksforgeeks_1766_A
---> inputs:

---> outputs:
The element with single occurrence is  2


def GFG ( arr , n ) :
    ones , twos = 0 , 0
    common_bit_mask = 0
    for i in range ( n ) :
        twos = twos | ( ones & arr [ i ] )
        ones = ones ^ arr [ i ]
        common_bit_mask = ~ ( ones & twos )
        ones &= common_bit_mask
        twos &= common_bit_mask
    return ones , twos


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 954
---> probID: geeksforgeeks_491_A
---> inputs:

---> outputs:
2


def gen2int ( arr , n ) :
    freq = { }
    for i in range ( n ) :
        freq [ arr [ i ] ] = freq [ arr [ i ] ] if i != 0 else 1
    ans = 0
    for i in range ( n ) :
        for j in range ( n ) :
            if freq [ arr [ i ] ] > freq [ arr [ j ] ] and arr [ i ] > arr [ j ] :
                ans = max ( ans , freq [ arr [ i ] ] - freq [ arr [ j ] ] )
            elif freq [ arr [ i ] ] < freq [ arr [ j ] ] and arr [ i ] < arr [ j ] :
                ans = max ( ans , freq [ arr [ j ] ] - freq [ arr [ i ] ] )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 55%|█████▍    | 954/1746 [00:23<00:19, 40.58it/s]

-------------------------------------


---> lineNum: 955
---> probID: codeforces_1447_B
---> inputs:
2
2 2
-1 1
1 1
3 4
0 -1 -2 -3
-1 -2 -3 -4
-2 -3 -4 -5
---> outputs:
2
30

def test_CF_1447B_numbers_box ( ) :
    data = np . array ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] )
    count = data . shape [ 0 ]
    for i in range ( count ) :
        n , m = data . shape
        arr = np . zeros ( ( n * m , n * m ) , dtype = int )
        nagivitetimes = 0
        min_num = np . inf
        sum_num = 0
        for j in range ( len ( arr ) ) :
            arr [ j ] = data [ j ]
            if arr [ j ] < 0 :
                arr [ j ] = 0 - arr [ j ]
                nagivitetimes += 1
                sum_num += arr [ j ]
                if min_num > arr [ j ] : min_num = arr [ j ]
            else :
                sum_num += arr [ j ]
                if min_num > arr [ j ] : min_num = arr [ j ]
        if nagivitetimes % 2 == 0 :
            assert sum_num == 0
        else :
            assert sum_num - min_num * 2 == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 956
---> probID: geeksforgeeks_2253_A
---> inputs:

---> outputs:
-1 3 7 


def pythager_make_ap ( arr , n ) :
    initial_term , common_difference = 0 , 0
    if n == 3 :
        common_difference = arr [ 2 ] - arr [ 1 ]
        initial_term = arr [ 1 ] - common_difference
    elif ( arr [ 1 ] - arr [ 0 ] ) == arr [ 2 ] - arr [ 1 ] :
        initial_term = arr [ 0 ]
        common_difference = arr [ 1 ] - arr [ 0 ]
    elif ( arr [ 2 ] - arr [ 1 ] ) == ( arr [ 3 ] - arr [ 2 ] ) :
        common_difference = arr [ 2 ] - arr [ 1 ]
        initial_term = arr [ 1 ] - common_difference
    else :
        common_difference = ( arr [ 3 ] - arr [ 0 ] ) / 3
        initial_term = arr [ 0 ]
    for i in range ( n ) :
        print ( initial_term + ( i * common_difference ) , end = ' ' )
    print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 957
---> probID: geeksforgeeks_4205_A
---> inputs:

---> outputs:
11


def GFG ( n ) :
    count = 0
    for x in range ( 1 , n ) :
        for y in range ( x + 1 , n ) :
            if ( y + x ) % ( y ^ x ) == 0 :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 958
---> probID: geeksforgeeks_3030_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    n = 15
    assert count_pairs ( n ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 959
---> probID: leetcode_409_A
---> inputs:

---> outputs:
7

def longest_palindrome ( s ) :
    count = [ 0 ] * 128
    for c in s :
        count [ c ] += 1
    ans = 0
    for v in count :
        ans += v / 2 ** 2
        if ans % 2 == 0 and v % 2 == 1 :
            ans += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 55%|█████▍    | 959/1746 [00:23<00:19, 39.45it/s]

-------------------------------------


---> lineNum: 960
---> probID: geeksforgeeks_2569_A
---> inputs:

---> outputs:
Total possible expressions of length 6 is 5


def GFG ( n , k ) :
    res = 1
    if k > n - k :
        k = n - k
    for i in range ( k ) :
        res *= ( n - i )
        res /= ( i + 1 )
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 961
---> probID: codeforces_400_A
---> inputs:
4
OXXXOXOOXOOX
OXOXOXOXOXOX
XXXXXXXXXXXX
OOOOOOOOOOOO
---> outputs:
3 1x12 2x6 4x3
4 1x12 2x6 3x4 6x2
6 1x12 2x6 3x4 4x3 6x2 12x1
0

def ex8 ( ) :
    import sys
    import getopt
    count = 0
    flag = 0
    s = [ ]
    for i in range ( 0 , len ( sys . argv ) ) :
        s . append ( ' ' . join ( sys . argv [ i ] ) )
    for i in range ( 0 , len ( sys . argv ) ) :
        res = ''
        count = 0
        for q in range ( 1 , 12 ) :
            if s [ i ] [ q ] == 'X' :
                res = ' 1x12'
                count += 1
                break
        for j in range ( 2 , 6 ) :
            flag = 0
            if 12 % j == 0 :
                for k in range ( 1 , 12 / j ) :
                    flag = 0
                    for p in range ( k , 12 , 12 / j ) :
                        if s [ i ] [ p ] == 'O' :
                            flag = 1
                            break
                    if flag == 0 :
                        count += 1
                        res += ' ' + str ( j ) + 'x' + str ( 12 / j )
                        break
        flag = 0
        for l in range ( 1 , 12 ) :
            if s [ i ] [ l ] == 'O' :
                flag = 1
                break
        if flag == 0 :
            res += ' 12x1'
            count += 1
        print ( count , res )
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 962
---> probID: codeforces_203_A
---> inputs:
30 5 20 20 3 5
---> outputs:
YES

def main ( ) :
    import sys
    import os
    import numpy
    import numpy
    import numpy . linalg
    import numpy . random
    import numpy . testing
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    import numpy . testing . assert_equal
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 963
---> probID: geeksforgeeks_1676_A
---> inputs:

---> outputs:
Yes


def GFG ( n ) :
    if n % 2 == 1 :
        return False
    else :
        return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 964
---> probID: geeksforgeeks_4796_A
---> inputs:

---> outputs:
14


def test_GFG ( ) :
    result = 0
    for i in range ( 1 , 9 ) :
        s = [ ]
        if i <= n :
            s . append ( i )
            result += 1
        while not s :
            tp = s . pop ( )
            s . append ( tp )
            for j in range ( tp % 10 , 9 ) :
                x = tp * 10 + j
                if x <= n :
                    s . append ( x )
                    result += 1
    return result


---> console_out:
 
DIDN'T MATCH!! :(
 55%|█████▌    | 964/1746 [00:23<00:19, 39.78it/s]

-------------------------------------


---> lineNum: 965
---> probID: geeksforgeeks_3477_A
---> inputs:

---> outputs:
5.2


def GFG ( cost , N ) :
    dp = [ 0 ] * ( N + 1 )
    dp [ 0 ] = cost [ 0 ]
    for i in range ( 1 , N ) :
        dp [ i ] = dp [ i - 1 ] + cost [ i ]
    for j in range ( 1 , N ) :
        dp [ 0 ] = dp [ 0 ] [ j - 1 ] + cost [ 0 ]
    for i in range ( 1 , N ) :
        for j in range ( 1 , N ) :
            dp [ i ] = max ( dp [ i - 1 ] , dp [ i ] [ j - 1 ] ) + cost [ i ]
    return float ( dp [ N - 1 ] [ N - 1 ] ) / ( 2 * N - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 966
---> probID: geeksforgeeks_1374_A
---> inputs:

---> outputs:
Count = 500000
Count = 166667


def test_GFG ( ) :
    MAX = 1000000
    sieve_prime = [ 0 ] * ( MAX + 4 )
    sieve_count = [ 0 ] * ( MAX + 4 )
    def form_sieve ( ) :
        sieve_prime [ 1 ] = 1
        for i in range ( 2 , MAX + 1 ) :
            if sieve_prime [ i ] == 0 :
                for j in range ( i * 2 , MAX + 1 , i ) :
                    if sieve_prime [ j ] == 0 :
                        sieve_prime [ j ] = 1
                        sieve_count [ i ] += 1
    assert form_sieve ( ) == [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , ]

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 967
---> probID: aizu_p01415_A
---> inputs:
1 1 1 2 3 100
50
---> outputs:
49.500000000

def main ( ) :
    import sys
    import getopt
    global n , k , t , u , v , l
    n = int ( sys . argv [ 1 ] )
    k = int ( sys . argv [ 2 ] )
    t = int ( sys . argv [ 3 ] )
    u = int ( sys . argv [ 4 ] )
    v = int ( sys . argv [ 5 ] )
    l = int ( sys . argv [ 6 ] )
    d = [ ]
    for i in range ( n + 1 ) :
        d . append ( sys . argv [ i ] )
    d . reverse ( )
    pos , c , nk = 0 , 0 , 0
    tm = 0
    while pos < l :
        if pos < d [ c ] :
            if nk > 0 :
                nk -= 1
                x = min ( l , pos + t * v )
                tm += ( x - pos ) / float ( v )
                pos = x
            else :
                tm += ( d [ c ] - pos ) / float ( u )
                pos = d [ c ]
        else :
            if d [ c ] == pos :
                x = min ( l , pos + t * v )
                tm += ( x - pos ) / float ( v )
                pos = x
                yield pos
                c += 1
            else :
                if nk < k :
                    c += 1
                    nk += 1
                else :
                    x = min ( l , d [ c ] + t * v )
                    tm += ( x - pos ) / float ( v )
                    pos = x
    print ( tm )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 968
---> probID: geeksforgeeks_462_A
---> inputs:

---> outputs:
2


def GFG ( s ) :
    n = len ( s )
    answer = 0
    prefix = [ 0 ] * n
    suffix = [ 0 ] * n
    seen = [ 0 ] * 26
    for i in range ( n ) :
        prev = ( i - 1 >= 0 and prefix [ i - 1 ] or 0 )
        if seen [ s [ i ] - 'a' ] == 0 :
            prefix [ i ] += ( prev + 1 )
        else :
            prefix [ i ] = prev
        seen [ s [ i ] - 'a' ] = 1
    for i in range ( 26 ) :
        seen [ i ] = 0
    suffix [ n - 1 ] = 0
    for i in range ( n - 1 , - 1 , - 1 ) :
        prev = suffix [ i ]
        if seen [ s [ i ] - 'a' ] == 0 :
            suffix [ i - 1 ] += ( prev + 1 )
        else :
            suffix [ i - 1 ] = prev
        seen [ s [ i ] - 'a' ] = 1
    for i in range ( n ) :
        if prefix [ i ] == suffix [ i ] :
            answer += 1
    return answer


---> console_out:
 
DIDN'T MATCH!! :(
 55%|█████▌    | 968/1746 [00:23<00:19, 39.78it/s]

-------------------------------------


---> lineNum: 969
---> probID: projecteuler_p121_A
---> inputs:

---> outputs:
2269

def p_p121 ( p ) :
    '''p121 : p121_list p121_list COMMA p121_list '''
    p [ 0 ] = [ p [ 1 ] ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 970
---> probID: codeforces_350_B
---> inputs:
5
0 0 0 0 1
0 1 2 3 4
---> outputs:
5
1 2 3 4 5

def main ( ) :
    import sys
    import getopt
    global n
    a = [ ]
    b = [ ]
    num = { }
    for i in range ( 1 , n + 1 ) :
        a . append ( i )
    for i in range ( 1 , n + 1 ) :
        b . append ( i )
    for i in range ( 1 , n + 1 ) :
        num [ b [ i ] ] += 1
    ss = ""
    ans = 0
    st = [ ]
    for i in range ( 1 , n + 1 ) :
        if a [ i ] == 1 :
            st [ i ] = True
            s = [ ]
            x = b [ i ]
            sss = [ i ]
            s . reverse ( )
            s = 1
            while not st [ x ] and num [ x ] == 1 and x != 0 and a [ x ] != 1 :
                sss = [ x ]
                s . reverse ( )
                st [ x ] = True
                x = b [ x ]
                s += 1
            if s > ans :
                ans = s
                ss = s . reverse ( ) . encode ( 'utf-8' )
    print ( ans )
    print ( ss )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 971
---> probID: geeksforgeeks_1469_A
---> inputs:

---> outputs:
After Merging 
First Array: [1, 2, 3, 5, 8, 9]
Second Array: [10, 13, 15, 20]


def py2int ( ) :
    import sys
    arr1 = [ 1 , 5 , 9 , 10 , 15 , 20 ]
    arr2 = [ 2 , 3 , 8 , 13 ]
    def merge ( m , n ) :
        for i in range ( n - 1 , - 1 , - 1 ) :
            j , last = arr1 [ m - 1 ] , arr2 [ i ]
            for j in range ( m - 2 , - 1 , - 1 ) :
                arr1 [ j + 1 ] , arr1 [ j ] = arr1 [ j ] , arr1 [ i ]
            if j != m - 2 or last > arr2 [ i ] :
                arr1 [ j + 1 ] , arr2 [ i ] = arr2 [ i ] , arr2 [ i ]
    def main ( ) :
        merge ( len ( arr1 ) , len ( arr2 ) )
        print ( "After Merging \nFirst Array: " )
        print ( sorted ( arr1 ) )
        print ( "Second Array: " )
        print ( sorted ( arr2 ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 972
---> probID: geeksforgeeks_1925_A
---> inputs:

---> outputs:
35


def test_GFG ( ) :
    if not isinstance ( a , int ) :
        return
    assert gcd ( b % a , a ) == gcd ( b , a )
    assert same_remainder ( a , gcd ( b , c ) ) == gcd ( c , a )
    a1 , b1 , c1 = ( b - a ) , ( c - b ) , ( c - a )
    assert same_remainder ( a1 , gcd ( b1 , c1 ) ) == gcd ( b1 , c1 )


---> console_out:
 
DIDN'T MATCH!! :(
 56%|█████▌    | 972/1746 [00:23<00:19, 39.73it/s]  File "./junk/1692576724236_2839/main.py", line 22
    global fp
    ^
SyntaxError: name 'fp' is used prior to global declaration


-------------------------------------


---> lineNum: 973
---> probID: codeforces_1185_A
---> inputs:
5 2 6 3
---> outputs:
2

def main ( ) :
    import sys
    import getopt
    global verbose , fp , join , verbose
    if verbose > 0 :
        initReader ( )
        a = nextLong ( )
        b = nextLong ( )
        c = nextLong ( )
        d = nextLong ( )
        an = [ a , b , c ]
        an . sort ( )
        ans = 0
        if an [ 1 ] - an [ 0 ] < d :
            ans += ( d - an [ 1 ] + an [ 0 ] )
        if an [ 2 ] - an [ 1 ] < d :
            ans += ( d - an [ 2 ] + an [ 1 ] )
        fp . write ( ans )
        fp . close ( )
    global reader
    global tokenizer
    global fp
    global initReader
    if not initReader ( ) :
        initReader ( )
    fp = open ( join ( join ( dirname ( __file__ ) , '..' ) , 'r' ) )
    tokenizer = open ( join ( dirname ( __file__ ) , 'tokenizer.txt' ) )
    fp = open ( join ( dirname ( __file__ ) , 'tokenizer.txt' ) , 'w' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )
    fp . write ( '' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 974
---> probID: geeksforgeeks_2210_A
---> inputs:

---> outputs:
5


def GFG ( n , parts , next_part ) :
    if parts == 0 and n == 0 :
        return 1
    if n <= 0 or parts <= 0 :
        return 0
    if dp [ n ] [ next_part ] [ parts ] != - 1 :
        return dp [ n ] [ next_part ] [ parts ]
    ans = 0
    for i in range ( next_part , n + 1 ) :
        ans += count_ways_util ( n - i , parts - 1 , i )
    return ( dp [ n ] [ next_part ] [ parts ] , ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 975
---> probID: geeksforgeeks_5051_A
---> inputs:

---> outputs:
9


def GFG ( a , b ) :
    if ( a + b ) % 2 == 0 :
        return ( ( a + b ) / 2 )
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 976
---> probID: geeksforgeeks_2045_A
---> inputs:

---> outputs:
3675.0


def GFG ( x , y , z ) :
    N = 101
    mod = int ( 1e9 + 7 )
    exactsum = [ 0 ] * N
    exactnum = [ 0 ] * N
    def getSum ( x , y , z ) :
        ans = 0
        exactnum [ 0 ] [ 0 ] = 1
        for i in range ( 0 , x ) :
            for j in range ( 0 , y ) :
                for k in range ( 0 , z ) :
                    if i > 0 :
                        exactsum [ i ] [ j ] [ k ] += ( exactsum [ i - 1 ] [ j ] [ k ] * 10 + 4 * exactnum [ i - 1 ] [ j ] [ k ] ) % mod
                        exactnum [ i ] [ j ] [ k ] += exactnum [ i - 1 ] [ j ] [ k ] % mod
                    if j > 0 :
                        exactsum [ i ] [ j ] [ k ] += ( exactsum [ i ] [ j - 1 ] [ k ] * 10 + 5 * exactnum [ i ] [ j - 1 ] [ k ] ) % mod
                        exactnum [ i ] [ j ] [ k ] += exactnum [ i ] [ j - 1 ] [ k ] % mod
                    if k > 0 :
                        exactsum [ i ] [ j ] [ k ] += ( exactsum [ i ] [ j ] [ k - 1 ] * 10 + 6 * exactnum [ i ] [ j ] [ k - 1 ] ) % mod
                        exactnum [ i ] [ j ] [ k ] += exactnum [ i ] [ j ] [ k - 1 ] % mod
                    ans += exactsum [ i ] [ j ] [ k ] % mod
                    ans %= mod
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 977
---> probID: geeksforgeeks_2704_A
---> inputs:

---> outputs:
YES


def GFG ( ) :
    CHARS = 26
    def is_valid_string ( str ) :
        freq = [ 0 ] * CHARS
        for c in str :
            freq [ c - 'a' ] += 1
        i , freq1 , count_freq1 = 0 , 0 , 0
        for i in range ( CHARS ) :
            if freq [ i ] != 0 :
                freq1 , count_freq1 = freq [ i ] , 1
                break
        j , freq2 , count_freq2 = 0 , 0 , 0
        for j in range ( i + 1 , CHARS ) :
            if freq [ j ] != 0 :
                if freq [ j ] == freq1 :
                    count_freq1 += 1
                else :
                    count_freq2 = 1
                    freq2 = freq [ j ]
                    break
        for k in range ( j + 1 , CHARS ) :
            if freq [ k ] != 0 :
                if freq [ k ] == freq1 :
                    count_freq1 += 1
                if freq [ k ] == freq2 :
                    count_freq2 += 1
                else :
                    return False
            if count_freq1 > 1 and count_freq2 > 1 :
                return False
        return True
    def is_valid_string ( str ) :
        return ( str . find ( 'abcbc' ) != - 1 )
    def is_valid_string ( str ) :
        return ( str . find ( 'abcba' ) != - 1 )
    def is_valid_string ( str ) :
        return ( str . find ( 'abcba' ) != - 1 )
    def is_valid_string ( str ) :
        return ( str . find ( 'abcba' ) != - 1 )
    def is_valid_string ( str ) :
        return ( str . find ( 'abcba' ) != - 1 )
    def is_valid_string ( str ) :
        return ( str . find ( 'abcba' ) != - 1 )
    def is_valid_string ( str ) :
        return ( str . find ( 'abcba' ) != - 1 )
    def is_valid_string ( str ) :
        return ( str . find ( 'abcba' ) != - 1 )
    return is_valid_string , is_valid_string , is_valid_string
    

---> console_out:
 
DIDN'T MATCH!! :(
 56%|█████▌    | 977/1746 [00:23<00:19, 40.07it/s]

-------------------------------------


---> lineNum: 978
---> probID: codeforces_1480_A
---> inputs:
3
a
bbbb
az
---> outputs:
b
azaz
by

def test_codechef ( ) :
    import sys
    import doctest
    import os
    import tempfile
    t = sys . argv [ 1 ]
    while t :
        s = sys . stdin . readline ( )
        ch = s . split ( '\n' )
        for i in range ( len ( ch ) ) :
            if ( i + 1 ) % 2 != 0 :
                if ch [ i ] != 'a' :
                    ch [ i ] = 'a'
                else :
                    ch [ i ] = 'b'
            elif ( i + 1 ) % 2 == 0 :
                if ch [ i ] != 'z' :
                    ch [ i ] = 'z'
                else :
                    ch [ i ] = 'y'
        s = str ( ch )
        assert s == ''


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 979
---> probID: geeksforgeeks_3321_A
---> inputs:

---> outputs:
3


def GFG ( A , B ) :
    number_of_subsequences = 1
    sizeOfB = len ( B )
    sizeOfA = len ( A )
    inf = 1000000
    next = [ [ ] for i in range ( 26 ) ]
    for i in range ( sizeOfB ) :
        for j in range ( sizeOfB ) :
            next [ i ] [ j ] = inf
    for i in range ( sizeOfB ) :
        next [ B [ i ] - 'a' ] [ i ] = i
    for i in range ( 26 ) :
        for j in range ( sizeOfB - 2 , - 1 , - 1 ) :
            if next [ i ] [ j ] == inf :
                next [ i ] [ j ] = next [ i ] [ j + 1 ]
    pos = 0
    i = 0
    while i < sizeOfA :
        if pos == 0 and next [ A [ i ] - 'a' ] [ pos ] == inf :
            number_of_subsequences = - 1
            break
        elif pos < sizeOfB and next [ A [ i ] - 'a' ] [ pos ] < inf :
            nextIndex = next [ A [ i ] - 'a' ] [ pos ] + 1
            pos = nextIndex
            i += 1
        else :
            number_of_subsequences += 1
            pos = 0
    return number_of_subsequences


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 980
---> probID: codeforces_1627_B
---> inputs:
2
4 3
1 2
---> outputs:
3 3 4 4 4 4 4 4 5 5 5 5 
1 1

def main ( rgs ) :
    """
 Main function for the algorithm of the algorithm of the input file.
 """
    f = open ( rgs , 'r' )
    stringBuilder = [ ]
    t = int ( f . readline ( ) )
    for i in range ( t ) :
        a = f . readline ( ) . split ( )
        row = int ( a [ 0 ] )
        col = int ( a [ 1 ] )
        ans = [ ]
        ansarray = [ ]
        p = 0
        rowarray = [ 0 , 0 , row - 1 , row - 1 ]
        colarray = [ 0 , col - 1 , 0 , col - 1 ]
        for j in range ( row ) :
            for k in range ( col ) :
                dis = 0
                for l in range ( 4 ) :
                    dis = max ( dis , abs ( rowarray [ l ] - j ) + abs ( colarray [ l ] - k ) )
                ansarray . append ( dis )
        ansarray . sort ( )
        for j in range ( len ( ansarray ) ) :
            ans . append ( ansarray [ j ] + " " )
        stringBuilder . append ( ans )
    print ( stringBuilder )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 981
---> probID: geeksforgeeks_1555_A
---> inputs:

---> outputs:
1 2 2 3 4 1 

def test_GFG ( ) :
    print ( '1' , end = ' ' )
    for i in range ( 1 , len ( arr ) ) :
        rank = 1
        for j in range ( i ) :
            if arr [ j ] > arr [ i ] :
                rank += 1
        print ( rank , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 982
---> probID: atcoder_ABC085_D
---> inputs:
1 10
3 5
---> outputs:
3

def main ( ) :
    import sys
    n = len ( sys . argv )
    h = sys . argv [ 1 ]
    a = [ ]
    b = [ ]
    for i in range ( n ) :
        a . append ( sys . argv [ i ] )
        b . append ( sys . argv [ i + 1 ] )
    a . sort ( )
    b . sort ( )
    ans = sys . maxint
    for i in range ( 0 , n ) :
        if i != 0 :
            h -= b [ i - 1 ]
        cnt = 0
        if h > 0 :
            cnt = ( h + a [ - 1 ] - 1 ) / a [ - 1 ]
        ans = min ( ans , cnt + i )
    sys . stdout . write ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 56%|█████▌    | 982/1746 [00:23<00:18, 40.35it/s]  File "./junk/1692576724481_1542/main.py", line 31
    assert
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 983
---> probID: geeksforgeeks_2324_A
---> inputs:

---> outputs:
4378


def test_digits ( ) :
    n = 15
    k = 4
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert firstkdigits ( n , k ) == n
    assert

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 984
---> probID: aizu_p00595_A
---> inputs:
57 38
60 84
---> outputs:
19
12

def main ( ) :
    r = requests . get ( 'http://www.google.com/' )
    try :
        m , n = re . findall ( r'(\d+)' , r . text )
        if m < n :
            t = m
            m , n = re . findall ( r'(\d+)' , r . text )
        while n != 0 :
            t , n = re . findall ( r'(\d+)' , r . text )
            m , n = re . findall ( r'(\d+)' , r . text )
        print ( m , n )
    except requests . ConnectionError :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 985
---> probID: aizu_p01916_A
---> inputs:
hcpc
---> outputs:
1

def main ( ) :
    import sys
    s = sys . stdin . read ( )
    a = [ 0 ] * 26
    sum = 0
    for i in s :
        a [ i - 'a' ] += 1
    for i in range ( 26 ) :
        sum += a [ i ] % 2
    print ( sum / 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 986
---> probID: geeksforgeeks_558_A
---> inputs:

---> outputs:
75
544


def test_GFG ( ) :
    i , len , temp , comp = 0 , 0 , 0 , 0
    temp = num
    while True :
        len += 1
        num , temp = num / 10 , temp
        if abs ( num ) == 0 :
            break
    num , temp = temp , temp
    comp = int ( pow ( 10 , len ) - num )
    assert comp == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 987
---> probID: geeksforgeeks_4490_A
---> inputs:

---> outputs:
3


def test_gf_count_unset_bits ( ) :
    x = ZZ . map ( [ 1 , 2 , 3 ] )
    n = ZZ . map ( [ 1 , 2 , 3 ] )
    assert gf_count_unset_bits ( x , n ) == 1


---> console_out:
 
DIDN'T MATCH!! :(
 57%|█████▋    | 987/1746 [00:23<00:19, 39.82it/s]

-------------------------------------


---> lineNum: 988
---> probID: geeksforgeeks_1519_A
---> inputs:

---> outputs:
1


def test_GFG ( ) :
    """Test the minOperations function."""
    maxi , result = 0 , 0
    freq = np . zeros ( 1000001 )
    for i in range ( n ) :
        x = arr [ i ]
        freq [ x ] += 1
    maxi = np . max ( arr )
    for i in range ( 1 , maxi + 1 ) :
        if freq [ i ] != 0 :
            for j in range ( i * 2 , maxi + 1 , i ) :
                freq [ j ] = 0
            result += 1
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 989
---> probID: geeksforgeeks_3277_A
---> inputs:

---> outputs:
3


def get_total_ways ( N , M , X ) :
    dp = [ ]
    if X == 1 :
        dp . append ( 1 )
    else :
        dp . append ( 0 )
    if X == 1 :
        dp . append ( 0 )
        dp . append ( M - 1 )
    else :
        dp . append ( 1 )
        dp . append ( ( M - 2 ) )
    for i in range ( 2 , N ) :
        dp . append ( dp [ i - 1 ] [ 1 ] )
        dp . append ( dp [ i - 1 ] [ 0 ] * ( M - 1 ) + dp [ i - 1 ] [ 1 ] * ( M - 2 ) )
    return dp [ N - 1 ] [ 0 ] , dp [ N - 1 ] [ 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 990
---> probID: geeksforgeeks_1984_A
---> inputs:

---> outputs:
8


def get_minnum ( a , b , c ) :
    if c < a or c > b :
        return c
    x = ( ( b / c ) ** 2 ) + c
    return x


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 991
---> probID: atcoder_ABC052_B
---> inputs:
5
IIDID
---> outputs:
2

def main ( ) :
    import sys
    n = len ( sys . argv )
    s = sys . argv [ 1 : ]
    x = 0
    max = 0
    for i in range ( n ) :
        if s [ i ] == 'I' : x += 1
        else : x -= 1
        max = max ( max , x )
    sys . exit ( max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 992
---> probID: aizu_p01144_A
---> inputs:
2 8
5 6
4 5
3 1
5 10
5 10
5 10
0 0
---> outputs:
5
140

def main ( ) :
    import sys
    while True :
        ans = 0
        n , m = sys . stdin . readline ( ) . split ( )
        al = [ ]
        if n == 0 and m == 0 :
            break
        for i in range ( n ) :
            al . append ( ( sys . stdin . readline ( ) , i ) )
        al . sort ( )
        while not al :
            st = al . pop ( 0 )
            m -= st . d
            if m <= 0 :
                ans -= m * st . p
                break
        while not al :
            st = al . pop ( 0 )
            ans += st . d * st . p
        sys . stdout . write ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 57%|█████▋    | 992/1746 [00:24<00:18, 40.59it/s]

-------------------------------------


---> lineNum: 993
---> probID: atcoder_ABC062_D
---> inputs:
2
3 1 4 1 5 9
---> outputs:
1

def main ( ) :
    import sys
    n = len ( sys . argv )
    front = PriorityQueue ( )
    back = PriorityQueue ( )
    arr = [ ]
    front_sum = 0
    back_sum = 0
    for i in range ( n ) :
        x = sys . argv [ i ]
        front_sum += x
        front . add ( x )
    for i in range ( n ) :
        arr . append ( sys . argv [ i ] )
    for i in range ( n ) :
        x = sys . argv [ i ]
        back_sum += x
        back . add ( - x )
    values = [ front_sum , - back_sum ]
    for i in range ( n ) :
        front_sum += arr [ i ]
        front . add ( arr [ i ] )
        front_sum -= front . pop ( )
        values [ i + 1 ] += front_sum
        back_sum += arr [ n - i - 1 ]
        back . add ( - arr [ n - i - 1 ] )
        back_sum += back . pop ( )
        values [ n - i - 1 ] -= back_sum
    max = long ( 0 )
    for i in range ( 0 , n ) :
        max = max ( max , values [ i ] )
    print ( max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 994
---> probID: geeksforgeeks_4045_A
---> inputs:

---> outputs:
Total number of ways =  6


def GFG ( N ) :
    arr = [ 1 , 5 , 6 ]
    countWays = [ 1 ] * ( N + 1 )
    for i in range ( 1 , N + 1 ) :
        for j in range ( len ( arr ) ) :
            if i >= arr [ j ] :
                countWays [ i ] += count [ i - arr [ j ] ]
    return countWays


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 995
---> probID: geeksforgeeks_3702_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    if x == 0 or x == 1 :
        return 1
    else :
        return number_of_ways ( x - 1 ) + ( x - 1 ) * number_of_ways ( x - 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 996
---> probID: geeksforgeeks_2931_A
---> inputs:

---> outputs:
1 -> 2
3 -> 3
2 -> 5
4 -> 6


def GFG ( a , n ) :
    hm = [ ]
    for i in range ( n ) :
        hm . append ( a [ i ] )
    cumul = 0
    for i in range ( n ) :
        cumul += hm [ a [ i ] ]
        if hm [ a [ i ] ] != 0 :
            print ( a [ i ] , "->" , cumul )
        hm [ a [ i ] ] = 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 997
---> probID: geeksforgeeks_2899_A
---> inputs:

---> outputs:
( 2 , 3 , 4 ) is one such possible triplet between 2 and 10
( 24 , 25 , 26 ) is one such possible triplet between 24 and 46


def test_gf_gf_add_subs_range ( ) :
    flag = False
    possible_a , possible_b , possible_c = gf_add_subs_range ( [ 1 , 2 , 3 ] , [ 1 , 2 , 3 ] , ZZ )
    numbers_in_range = ( R - 1 , R - 1 )
    if numbers_in_range < 3 :
        flag = False
    elif numbers_in_range > 3 :
        flag = True
        if L % 2 :
            L += 1
        possible_a , possible_b , possible_c = gf_add_subs_range ( [ 1 , 2 , 3 ] , [ 1 , 2 , 3 ] , ZZ )
    else :
        if not ( L % 2 ) :
            flag = True
            possible_a , possible_b , possible_c = gf_add_subs_range ( [ 1 , 2 , 3 ] , [ 1 , 2 , 3 ] , ZZ )
        else :
            flag = False
    if flag == True :
        assert gf_add_subs_range ( [ 1 , 2 , 3 ] , [ 1 , 2 , 3 ] , ZZ ) == [ 1 , 2 , 3 ]
    else :
        assert gf_add_subs_range ( [ 1 , 2 , 3 ] , [ 1 , 2 , 3 ] , ZZ ) == [ 1 , 2 , 3 ]


---> console_out:
 
DIDN'T MATCH!! :(
 57%|█████▋    | 997/1746 [00:24<00:18, 41.09it/s]

-------------------------------------


---> lineNum: 998
---> probID: geeksforgeeks_2688_A
---> inputs:

---> outputs:
code


def GFG ( ) :
    alphabets = 'abcdefghijklmnopqrstuvwxyz'
    conversion = ''
    s2 = ''
    for i in str1 :
        s2 += alphabets [ charset . index ( i ) ]
    return s2


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576724869_2107/main.py", line 3
    """ STRNEWLINE SPACETOKEN Generate SPACETOKEN a SPACETOKEN set SPACETOKEN of SPACETOKEN integers SPACETOKEN from SPACETOKEN a SPACETOKEN list SPACETOKEN of SPACETOKEN integers . STRNEWLINE STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Permutation STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN print ( partition ( 3 , SPACETOKEN a , SPACETOKEN n , SPACETOKEN num , SPACETOKEN k ) ) STRNEWLINE SPACETOKEN >> >

SyntaxError: EOF while scanning triple-quoted string literal


-------------------------------------


---> lineNum: 999
---> probID: geeksforgeeks_3206_A
---> inputs:

---> outputs:
The 10 distinct integers are:
6 8 10 11 13 16 20 22 25 34 

def pythree_integers ( count , a , n , num , k ) :
    """ STRNEWLINE SPACETOKEN Generate SPACETOKEN a SPACETOKEN set SPACETOKEN of SPACETOKEN integers SPACETOKEN from SPACETOKEN a SPACETOKEN list SPACETOKEN of SPACETOKEN integers . STRNEWLINE STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Permutation STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN sympy . combinatorics . partitions SPACETOKEN import SPACETOKEN Partition STRNEWLINE SPACETOKEN >> > SPACETOKEN print ( partition ( 3 , SPACETOKEN a , SPACETOKEN n , SPACETOKEN num , SPACETOKEN k ) ) STRNEWLINE SPACETOKEN >> >

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1000
---> probID: geeksforgeeks_2230_A
---> inputs:

---> outputs:
9
59


def GFG ( x ) :
    prod = 1
    while x :
        prod *= ( x % 10 )
        x /= 10
    return prod


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576724916_5908/main.py", line 8
    for j in range ( 2 * i , MAX , i += 1 ) :
                                     ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1001
---> probID: geeksforgeeks_4265_A
---> inputs:

---> outputs:
5


def GFG ( n ) :
    MAX = 100005
    isPrime = [ False ] * MAX
    sieveOfEratostheneses = [ False ] * MAX
    isPrime [ 1 ] = True
    for i in range ( 2 , i * 2 < MAX ) :
        if not isPrime [ i ] :
            for j in range ( 2 * i , MAX , i += 1 ) :
                isPrime [ j ] = True
    def findPrime ( n ) :
        num = n + 1
        while num :
            if not isPrime [ num ] :
                return num
            num = num + 1
        return 0
    minNumber = 0
    for i in range ( n ) :
        sum += arr [ i ]
    if not isPrime [ sum ] :
        return 0
    num = findPrime ( sum )
    return num - sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1002
---> probID: geeksforgeeks_3062_A
---> inputs:

---> outputs:
26


def GFG ( arr , n ) :
    MAX = 25
    get_min_sum , max_bit , sum , ans = 0 , 0 , 0 , 0
    for d in range ( n ) :
        e , f = arr [ d ] , 0
        while e :
            rem = e % 2
            e , f = e // 2 , f % 2
            if rem == 1 :
                bits_count [ f ] += rem
            f += 1
        max_bit = max ( max_bit , f )
    for d in range ( max_bit ) :
        temp = int ( pow ( 2 , d ) )
        if bits_count [ d ] > n // 2 :
            ans = ans + temp
    for d in range ( n ) :
        arr [ d ] = arr [ d ] ^ ans
        sum = sum + arr [ d ]
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
 57%|█████▋    | 1002/1746 [00:24<00:18, 41.16it/s]

-------------------------------------


---> lineNum: 1003
---> probID: codeforces_70_B
---> inputs:
25
Hello. I am a little walrus.
---> outputs:
2

def _70B ( ) :
    import sys
    import tokenize
    import doctest
    import os
    import tempfile
    import re
    import subprocess
    import tempfile
    import os
    import sys
    import tempfile
    import re
    import subprocess
    import tempfile
    import re
    import subprocess
    import tempfile
    import re
    import sys
    import tempfile
    import re
    import subprocess
    import tempfile
    import re
    import sys
    import tempfile
    import re
    import subprocess
    import tempfile
    import re
    import sys
    import tempfile
    import re
    import subprocess
    import re
    import sys
    import tempfile
    import re
    import subprocess
    import re
    import sys
    import tempfile
    import re
    import subprocess
    import tempfile
    import re
    import sys
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1004
---> probID: codeforces_689_B
---> inputs:
3
2 2 3
---> outputs:
0 1 2

def test_mikeand_shortcuts ( ) :
    f = open ( '/tmp/mikeand_shortcuts.txt' , 'r' )
    out = [ ]
    tk = f . readline ( )
    n = int ( tk . split ( ) [ 0 ] )
    a = [ ]
    tk = f . readline ( )
    for i in tk :
        a . append ( int ( i ) - 1 )
    g = [ ]
    for i in range ( n ) :
        g . append ( [ ] )
    for i in range ( n - 1 ) :
        if a [ i ] != i :
            g [ i ] . append ( a [ i ] )
        g [ i ] . append ( i + 1 )
        g [ i + 1 ] . append ( i )
    if a [ n - 1 ] != n - 1 :
        g [ n - 1 ] . append ( a [ n - 1 ] )
    dist = [ ]
    del dist [ 0 ]
    dist . append ( 0 )
    q = Queue ( )
    q . put ( 0 )
    while not q . empty ( ) :
        u = q . get ( )
        for v in g [ u ] :
            if dist [ v ] == - 1 :
                q . put ( v )
                dist [ v ] = dist [ u ] + 1
    out . append ( dist [ 0 ] )
    for i in range ( 1 , n ) :
        out . append ( "%d" % dist [ i ] )
    print ( out )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1005
---> probID: codeforces_1470_A
---> inputs:
2
5 4
2 3 4 3 2
3 5 12 20
5 5
5 4 3 2 1
10 40 90 160 250
---> outputs:
30
190

def test_strange_birth_day ( ) :
    n = np . random . randint ( 1 , 10 , size = ( 10 , 10 ) )
    m = np . random . randint ( 1 , 10 , size = ( 10 , 10 ) )
    n = n . astype ( int )
    ans = 0
    j = 0
    for i in range ( len ( n ) - 1 , - 1 , - 1 ) :
        k = n [ i ]
        if k in m :
            if m [ k ] > m [ j ] :
                ans += m [ j ]
                j += 1
            else :
                ans += m [ k ]
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1006
---> probID: geeksforgeeks_3217_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    for i in range ( n , - 1 , - 1 ) :
        count = 0
        for j in range ( n ) :
            if i <= j :
                count += 1
        if count >= i :
            return i


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1007
---> probID: aizu_p02422_A
---> inputs:
abcde
3
replace 1 3 xyz
reverse 0 2
print 1 4
---> outputs:
xaze

def main ( ) :
    import sys
    import getopt
    global verbose , recurse , verbose , recurse
    opts , args = getopt . getopt ( sys . argv [ 1 : ] , "p:r:" , [ "recurse" , "rev" ] )
    if opts == [ ] :
        usage ( )
        sys . exit ( 2 )
    if recurse :
        recurse = 1
    else :
        recurse = 0
    for o , a , b in opts :
        if o == '-p' :
            sys . stdout . write ( recurse )
        elif o == '-r' :
            temp = os . path . join ( os . path . dirname ( __file__ ) , a )
            temp . reverse ( )
            sys . stdout . write ( temp )
        else :
            p = o
            sys . stdout . write ( p )


---> console_out:
 
DIDN'T MATCH!! :(
 58%|█████▊    | 1007/1746 [00:24<00:18, 40.94it/s]

-------------------------------------


---> lineNum: 1008
---> probID: geeksforgeeks_3833_A
---> inputs:

---> outputs:
3


def GFG ( A , n ) :
    dp = [ [ 0 ] * 2000 for i in range ( n ) ]
    flag = 1
    sum = 0
    for i in range ( n ) :
        sum += A [ i ]
    for i in range ( - sum , sum + 1 ) :
        try :
            dp [ 0 ] [ i ] = int ( A [ i ] )
        except :
            pass
    dp [ 0 ] [ 0 ] = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( 0 , sum + 1 ) :
            try :
                dp [ flag ] [ j ] = int ( A [ i - 1 ] )
                if j - A [ i - 1 ] <= sum and j - A [ i - 1 ] >= - sum :
                    dp [ flag ] [ j ] = dp [ flag ^ 1 ] [ j - A [ i - 1 ] ]
                if j + A [ i - 1 ] <= sum and j + A [ i - 1 ] >= - sum and dp [ flag ^ 1 ] [ j + A [ i - 1 ] ] != int ( A [ i - 1 ] ) :
                    dp [ flag ] [ j ] = min ( dp [ flag ] [ j ] , dp [ flag ^ 1 ] [ j + A [ i - 1 ] ] + 1 )
            except :
                pass
        flag = flag ^ 1
    for i in range ( 0 , sum + 1 ) :
        if dp [ flag ^ 1 ] [ i ] != int ( A [ i ] ) :
            return dp [ flag ^ 1 ] [ i ]
    return n - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1009
---> probID: aizu_p00058_A
---> inputs:
1.0 1.0 2.0 2.0 0.0 0.0 1.0 -1.0
0.0 0.0 2.0 0.0 -1.0 2.0 2.0 2.0
10.0 6.0 3.4 5.2 6.8 9.5 4.3 2.1
2.5 3.5 2.5 4.5 -3.3 -2.3 6.8 -2.3
---> outputs:
YES
NO
NO
YES

def pydot ( ) :
    import numpy as np
    eps = 1e-10
    np . random . seed ( 0 )
    x1 , y1 , x2 , y2 , x3 , y3 , x4 , y4 = np . random . uniform ( size = ( 10 , 10 ) )
    for i in range ( 10 ) :
        vax = x2 - x1 , y2 - y1 , x3 - x1 , y3 - y1 , x4 - x1 , y4 - y1
        vbx = x4 - x3 , y4 - y3
        if abs ( vax * vbx + vay * vby ) < eps :
            return 'YES'
        else :
            return 'NO'


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1010
---> probID: aizu_p00221_A
---> inputs:
5 7
1
2
Fizz
4
Buzz
6
7
3 5
1
2
3
4
5
0 0
---> outputs:
2 3 4 5
1

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'aJ0221' )
    except getopt . error as msg :
        print ( msg )
        return
    for o , a in opts :
        if o == '-a' :
            if a == '--all' :
                print ( 'all' )
            elif o == '--all' :
                print ( 'all' )
            elif o == '--all' :
                print ( 'all' )
            elif o == '--all' :
                print ( 'all' )
            elif o == '--all' :
                print ( 'all' )
    def get_talk ( num ) :
        user = 0
        cnt = 0
        for i in range ( 1 , n ) :
            input = input ( )
            talk = get_talk ( i )
            if input == talk and m - cnt > 1 :
                person = [ ]
                cnt += 1
            user = get_user ( user )
        i = 0
        for i in range ( m ) :
            if person [ i ] == False :
                print ( i + 1 )
                break
            for i in range ( i + 1 , m ) :
                if person [ i ] == False :
                    print ( ' ' + str ( i + 1 ) )
                print ( )
    get_talk ( num )
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1011
---> probID: geeksforgeeks_2552_A
---> inputs:

---> outputs:
56


def GFG ( n , r ) :
    l = [ [ ] for i in range ( 1001 ) ]
    initialize ( )
    l [ 0 ] [ 0 ] = 1
    for i in range ( 1 , 1001 ) :
        l [ i ] [ 0 ] = 1
        for j in range ( 1 , i + 1 ) :
            l [ i ] [ j ] = ( l [ i - 1 ] [ j - 1 ] + l [ i - 1 ] [ j ] )
    nCr = l [ n ] [ r ]
    return nCr


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1012
---> probID: atcoder_ABC070_B
---> inputs:
0 75 25 100
---> outputs:
50

def main ( ) :
    import sys
    a = sys . argv [ 1 ]
    b = sys . argv [ 2 ]
    c = sys . argv [ 3 ]
    d = sys . argv [ 4 ]
    array = [ ]
    for i in range ( a , b ) :
        array . append ( i )
    for i in range ( c , d ) :
        array . append ( i )
    ans = 0
    for i in range ( 101 ) :
        if array [ i ] == 2 :
            ans += 1
    sys . exit ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 58%|█████▊    | 1012/1746 [00:24<00:18, 40.76it/s]

-------------------------------------


---> lineNum: 1013
---> probID: geeksforgeeks_1125_A
---> inputs:

---> outputs:
0 16 1 

def test_GFG ( ) :
    a = [ 5 , 100 , 8 ]
    b = [ 2 , 3 ]
    n = len ( a )
    m = len ( b )
    assert GFG ( a , b , n , m ) == [ 2 , 3 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1014
---> probID: codeforces_519_B
---> inputs:
5
1 5 8 123 7
123 7 5 1
5 1 7
---> outputs:
8
123

def problemB ( a , d , c ) :
    i = d
    j = c
    mid = a [ ( d + c ) / 2 ]
    while i <= j :
        while a [ i ] < mid :
            i += 1
        while a [ j ] > mid :
            j -= 1
        if i <= j :
            tg = a [ i ]
            a [ i ] , a [ j ] = a [ j ] , tg
            i += 1
            j -= 1
    if d < j :
        quickSort ( a , d , j )
    if i < c :
        quickSort ( a , i , c )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1015
---> probID: codeforces_1140_B
---> inputs:
3
2
<>
3
><<
1
>
---> outputs:
1
0
0

def pytestcapi ( ) :
    import sys
    import doctest
    T = sys . version_info [ : 2 ]
    while T :
        n = len ( sys . modules )
        c = getattr ( sys . modules [ __name__ ] , '__doc__' , None )
        del sys . modules [ __name__ ]
        for m in sys . modules . values ( ) :
            if m . __doc__ is None or m . __doc__ . startswith ( '>>> ' ) :
                print ( m )
                break


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1016
---> probID: codeforces_579_A
---> inputs:
5
---> outputs:
2

def codforce ( ) :
    """
 Return the number of occurrences of the character in the string.
 """
    str = input ( )
    n = len ( str )
    s = ""
    while n > 0 :
        x = n % 2
        n /= 2
        s += x + ""
    ans = 0
    for c in s :
        if c == '1' :
            ans += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1017
---> probID: codeforces_148_B
---> inputs:
1
2
1
1
10
---> outputs:
2

def test_b148 ( ) :
    x = symbols ( 'x' )
    VP = symbols ( 'VP' , real = True )
    VD = symbols ( 'VD' , real = True )
    T = symbols ( 'T' , real = True )
    F = symbols ( 'F' , real = True )
    C = symbols ( 'C' , real = True )
    if VD <= VP :
        assert '0' in str ( x )
        return
    answer = 0
    start = T
    while True :
        x = start * VP / ( VD - VP )
        if ( start + x ) * VP >= C :
            break
        start += 2 * x + F
        answer += 1
    assert answer == 0


---> console_out:
 
DIDN'T MATCH!! :(
 58%|█████▊    | 1017/1746 [00:24<00:17, 41.21it/s]

-------------------------------------


---> lineNum: 1018
---> probID: codeforces_387_A
---> inputs:
05:50
05:44
---> outputs:
00:06

def main ( ) :
    import sys
    s = sys . stdin . readline ( ) . rstrip ( )
    t = sys . stdin . readline ( ) . rstrip ( )
    x = LocalTime ( int ( s ) , int ( s ) )
    y = LocalTime ( int ( t ) , int ( t ) )
    print ( x - y . hour , y - y . minute )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1019
---> probID: geeksforgeeks_316_A
---> inputs:

---> outputs:
3


def GFG ( a , n ) :
    longest = 1
    cnt = 1
    for i in range ( 1 , n ) :
        if a [ i ] * a [ i - 1 ] < 0 :
            cnt += 1
            longest = max ( longest , cnt )
        else :
            cnt = 1
    return longest


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1020
---> probID: geeksforgeeks_443_A
---> inputs:

---> outputs:
Acute-angled Triangle


def test_GFG ( ) :
    sqa = int ( math . pow ( a , 2 ) )
    sqb = int ( math . pow ( b , 2 ) )
    sqc = int ( math . pow ( c , 2 ) )
    if sqa == sqa + sqb or sqb == sqa + sqc or sqc == sqa + sqb :
        print ( "Right-angled Triangle" )
    elif sqa > sqc + sqb or sqb > sqa + sqc or sqc > sqa + sqb :
        print ( "Obtuse-angled Triangle" )
    else :
        print ( "Acute-angled Triangle" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1021
---> probID: geeksforgeeks_1569_A
---> inputs:

---> outputs:
4


def GFG ( s , n ) :
    global max
    global count_subsequence
    count_subsequence = 0 , 0 , 0
    for i in range ( n ) :
        try :
            count_subsequence += 1
            result += C
        except :
            continue
    print ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1022
---> probID: atcoder_ABC112_C
---> inputs:
2
0 0 180291302
20 20 180291262
---> outputs:
0 0 180291302

def _main ( ) :
    import sys
    import getopt
    MAX = 100
    def check ( n , x , y , h ) :
        try :
            n , x , y , h = getopt . getopt ( sys . argv [ 1 : ] , "x:y:h" , [ "help" , "count" , "max" ] )
        except getopt . GetoptError :
            return
        for i in range ( 0 , n ) :
            for j in range ( 0 , MAX ) :
                ch = check ( n , x , y , h , i , j )
                if ch :
                    print ( i , j , ch )
    def count ( n , x , y , h , cx , cy ) :
        ch = - 1
        for i in range ( n ) :
            if h :
                ch = abs ( x [ i ] - cx ) + abs ( y [ i ] - cy ) + h [ i ]
                break
        for i in range ( n ) :
            if h [ i ] != max ( ch - abs ( x [ i ] - cx ) - abs ( y [ i ] - cy ) , 0 ) :
                return - 1
        return ch
    

---> console_out:
 
DIDN'T MATCH!! :(
 59%|█████▊    | 1022/1746 [00:24<00:17, 41.24it/s]

-------------------------------------


---> lineNum: 1023
---> probID: geeksforgeeks_1262_A
---> inputs:

---> outputs:
5


def GFG ( n ) :
    steps = 0
    while n :
        largest = int ( math . cbrt ( n ) )
        n -= ( largest * largest * largest )
        steps += 1
    return steps


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1024
---> probID: aizu_p00138_A
---> inputs:
18 25.46
16 26.23
3 23.00
10 24.79
5 22.88
11 23.87
19 23.90
1 25.11
23 23.88
4 23.46
7 24.12
12 22.91
13 21.99
14 22.86
21 23.12
9 24.09
17 22.51
22 23.49
6 23.02
20 22.23
24 21.89
15 24.14
8 23.77
2 23.42
---> outputs:
5 22.88
3 23.00
13 21.99
14 22.86
24 21.89
20 22.23
17 22.51
12 22.91

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'a' )
    except getopt . error as msg :
        print ( msg )
        return
    for o , a in opts :
        if o == '-a' :
            num = int ( a )
        elif o == '-a' :
            time = float ( a )
        elif o == '-a' :
            if num == 0 :
                num = 1
            elif num > 1 :
                num = 1
            elif num < 0 :
                num = - 1
            elif num > 1 :
                num = - num
        elif o == '-a' :
            if time == 0 :
                time = float ( a )
            elif time > 1 :
                time = - time
        elif o == '-a' :
            if num == 0 :
                num = 1
            elif num > 1 :
                num = - num
            elif num < 0 :
                num = - num
        elif o == '-a' :
            if time == 0 :
                time = float ( a )
            elif time > 1 :
                time = - time
        elif o == '-a' :
            if num == 0 :
                num = 1
            elif num > 1 :
                num = - num
            elif num < 0 :
                num = - num
        elif o == '-a' :
            if time == 0 :
                time = float ( a )
            elif time > 1 :
                time = - time
        elif o == '-a' :
            if num == 0 :
                num = 1
            elif num > 1 :
                num = - num
            elif num < 0 :
                num = - num
        elif o == '-a' :
            if time == 0 :
                time = float ( a )
            elif time > 1 :
                time = - time
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1025
---> probID: codeforces_459_B
---> inputs:
2
1 2
---> outputs:
1 1

def main ( ) :
    import sys
    n = len ( sys . argv )
    arr = [ ]
    mx , mn , mx_count , mn_count = sys . argv [ 1 : ]
    for i in range ( n ) :
        arr . append ( sys . argv [ i ] )
        mx , mn = max ( arr ) , min ( arr )
    for i in range ( n ) :
        if arr [ i ] == mx :
            mx_count += 1
        if arr [ i ] == mn :
            mn_count += 1
    if mx != mn :
        print ( mx - mn , mx_count * mn_count )
    else :
        print ( mx - mn , mx_count * ( mx_count - 1 ) / 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1026
---> probID: geeksforgeeks_855_A
---> inputs:

---> outputs:
4


def GFG ( arr ) :
    ans = 0
    for i in arr :
        x = int ( i )
        if i % x == 0 :
            ans += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1027
---> probID: atcoder_AGC010_B
---> inputs:
1
1
---> outputs:
YES

def main ( ) :
    import sys
    N = len ( sys . argv )
    A = [ ]
    for i in range ( N ) :
        A . append ( sys . argv [ i ] )
    print ( check ( A ) or "YES" )
    sys . exit ( )


---> console_out:
 
DIDN'T MATCH!! :(
 59%|█████▉    | 1027/1746 [00:24<00:17, 41.16it/s]

-------------------------------------


---> lineNum: 1028
---> probID: geeksforgeeks_2304_A
---> inputs:

---> outputs:
216


def test_GFG ( ) :
    if not N :
        return 1
    if N < 10 :
        return N
    return max ( [ max_prod ( N / 10 ) ** ( N % 10 ) , max_prod ( N / 10 - 1 ) ** 9 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1029
---> probID: aizu_p00565_A
---> inputs:
5
0 1 0 0 0
---> outputs:
2

def main ( ) :
    import sys
    import getopt
    global n
    global sugoroku
    input_sugoroku ( )
    solve_sugoroku ( )
    def solve_sugoroku ( ) :
        dice = 0
        safes = sugoroku . split ( '0' )
        for i in safes :
            dice = max ( dice , i )
        print ( dice + 1 )
    def input_sugoroku ( ) :
        s = [ ]
        for i in range ( n ) :
            s . append ( sys . stdin . read ( ) )
        sugoroku = '' . join ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1030
---> probID: codeforces_1495_A
---> inputs:
3
2
0 1
1 0
0 -1
-2 0
4
1 0
3 0
-5 0
6 0
0 3
0 1
0 2
0 4
5
3 0
0 4
0 -3
4 0
2 0
1 0
-3 0
0 -10
0 -2
0 -10
---> outputs:
3.650281539872885
18.061819283610362
32.052255376143336

def test_practice2 ( ) :
    x = np . array ( [ 1 , 2 , 3 ] )
    y = np . array ( [ 1 , 2 , 3 ] )
    t = np . arange ( len ( x ) )
    while t :
        n = len ( x )
        x = np . array ( [ x [ i ] for i in range ( n ) ] )
        y = np . array ( [ y [ i ] for i in range ( n ) ] )
        t1 , t2 = 0 , 0
        for i in range ( 2 * n ) :
            x1 , y1 = x [ t1 ] , y [ t2 ]
            if x1 == 0 :
                y [ t2 ] = y1 ** 2
            else :
                x [ t1 ] = x1 ** 2
        np . sort ( x )
        np . sort ( y )
        sum = 0
        for i in range ( n - 1 , - 1 , - 1 ) :
            sum += np . sqrt ( x [ i ] + y [ i ] )
        assert_almost_equal ( sum , np . sqrt ( x [ i ] ** 2 + y [ i ] ** 2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1031
---> probID: geeksforgeeks_1711_A
---> inputs:

---> outputs:
220


def GFG ( n ) :
    N = 10
    count = 1
    for i in range ( 1 , n + 1 ) :
        count *= ( N + i - 1 )
        count /= i
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1032
---> probID: geeksforgeeks_4675_A
---> inputs:

---> outputs:
2


def reduce_string ( s , l ) :
    count , steps = 1 , 0
    for i in range ( 1 , l ) :
        if s [ i ] == s [ i - 1 ] :
            count += 1
        else :
            steps += ( count // 2 )
            count = 1
    steps += count // 2
    return steps


---> console_out:
 
DIDN'T MATCH!! :(
 59%|█████▉    | 1032/1746 [00:25<00:17, 41.36it/s]

-------------------------------------


---> lineNum: 1033
---> probID: atcoder_ARC070_D
---> inputs:
3 6
1 4 3
---> outputs:
Impossible


def main ( ) :
    import sys
    read = sys . stdin . readline ( )
    a , b , n = read . split ( ' ' )
    if b >= a :
        print ( 'Impossible' )
    else :
        ans = ''
        honest = get_honest ( )
        for i in range ( n ) :
            ans += q ( honest , i ) if q ( honest , i ) else '1'
        print ( '! ' + ans )
    def get_honest ( ) :
        dis = b + 1
        list = [ ]
        for i in range ( n ) :
            if not list :
                list . append ( i )
            else :
                if q ( list [ - 1 ] , i ) :
                    list . append ( i )
                else :
                    list . pop ( )
                    dis -= 1
            if len ( list ) >= dis :
                return list . pop ( )
        return - 1
    q ( a , b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1034
---> probID: codeforces_242_A
---> inputs:
3 2 1 1
---> outputs:
3
2 1
3 1
3 2

def main ( ) :
    import sys
    f = sys . stdout
    x , y , a , b = sys . argv [ 1 : ]
    res = [ ]
    for i in range ( a , x + 1 ) :
        for j in range ( b , y + 1 ) :
            if i <= j :
                continue
            res . append ( i + 1 , j )
    f . write ( '\n' . join ( res ) )
    for str in res :
        f . write ( str )
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576725745_5576/main.py", line 2
    mod = 1000000007L
                    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1035
---> probID: geeksforgeeks_215_A
---> inputs:

---> outputs:
8


def GFG ( n ) :
    mod = 1000000007L
    mult = ( ( a % mod ) ** 2 ) % mod
    ans , cnt = 0 , 1
    while n % 2 == 0 :
        cnt += 1
        n , mod = n // 2 , mod
    if cnt % 2 == 1 :
        ans = mult ( ans , ( cnt + 1 ) )
    for i in range ( 3 , math . sqrt ( n ) , 2 ) :
        cnt = 0
        while n % i == 0 :
            cnt += 1
            n , mod = n // i , mod
        if cnt % 2 == 1 :
            ans = mult ( ans , ( cnt + 1 ) )
    if n > 2 :
        ans = mult ( ans , ( 2 , ) )
    return ans % mod


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1036
---> probID: codeforces_32_B
---> inputs:
.-.--
---> outputs:
012

def test_cf32a ( ) :
    input = BytesIO ( )
    s = input . getvalue ( )
    str = ""
    for c in s :
        if c == '.' :
            str += 0
        else :
            if c == '-' and s [ - 1 ] == '.' :
                str += 1
            else :
                str += 2
            i = 1
    assert str == "\xEF\xBB\xBF"


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1037
---> probID: geeksforgeeks_756_A
---> inputs:

---> outputs:
4


def GFG ( arr , n ) :
    min_ele = arr [ 0 ]
    max_ele = arr [ 0 ]
    for i in range ( 1 , n ) :
        min_ele = min ( min_ele , arr [ i ] )
        max_ele = max ( max_ele , arr [ i ] )
    return ( max_ele - min_ele )


---> console_out:
 
DIDN'T MATCH!! :(
 59%|█████▉    | 1037/1746 [00:25<00:17, 41.31it/s]

-------------------------------------


---> lineNum: 1038
---> probID: aizu_p00437_A
---> inputs:
2 2 2
4
2 4 5 0
2 3 6 0
1 4 5 0
2 3 5 1
0 0 0
---> outputs:
2
1
1
0
1
0

def main ( ) :
    a , b , c , N = input ( )
    while True :
        a , b , c = next ( input ( ) )
        if a == 0 and b == 0 and c == 0 :
            sys . exit ( 0 )
        N = int ( N )
        checking = [ 0 ] * ( a + b + c )
        temp = [ ]
        del checking [ : ]
        for j in range ( 2 ) :
            for i in range ( N ) :
                if j == 0 :
                    a1 , b1 , c1 , check = next ( input ( ) )
                    if check == 1 :
                        checking [ a1 - 1 ] = 1
                        checking [ b1 - 1 ] = 1
                        checking [ c1 - 1 ] = 1
                    else :
                        temp . append ( a1 )
                        temp . append ( b1 )
                        temp . append ( c1 )
                else :
                    if not temp :
                        break
                    a2 , b2 , c2 = temp . pop ( )
                    if checking [ a2 - 1 ] + checking [ b2 - 1 ] + checking [ c2 - 1 ] == 2 :
                        if checking [ a2 - 1 ] != 1 :
                            checking [ a2 - 1 ] = 3
                        elif checking [ b2 - 1 ] != 1 :
                            checking [ b2 - 1 ] = 3
                        else :
                            checking [ c2 - 1 ] = 3
        for contents in checking :
            result = None
            if contents == 3 :
                result = 0
            elif contents == 0 :
                result = 2
            else :
                result = 1
            print ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1039
---> probID: geeksforgeeks_1903_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    """Test the MGFG algorithm."""
    count_a = { }
    count_b = { }
    for i in range ( n ) :
        if count_a . has_key ( i ) :
            count_a [ i ] = count_a [ i ] + 1
        else :
            count_a [ i ] = 1
    for i in range ( m ) :
        if count_b . has_key ( i ) :
            count_b [ i ] = count_b [ i ] + 1
        else :
            count_b [ i ] = 1
    res = 0
    s = count_a . keys ( )
    for x in s :
        if count_b . has_key ( x ) :
            res += min ( count_b [ x ] , count_a [ x ] )
    return res


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576725867_2183/main.py", line 23
    return dp [ pos ] [ first_d ] [ last_d ] [ tight ] = ans
                                                       ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1040
---> probID: geeksforgeeks_798_A
---> inputs:

---> outputs:
13
108


def get_GFG ( pos , first_d , last_d , tight , num ) :
    M = 20
    dp = { }
    def count ( pos , first_d , last_d , tight , num ) :
        if pos == len ( num ) :
            if first_d == last_d :
                return 1
            return 0
        if dp [ pos ] [ first_d ] [ last_d ] [ tight ] != - 1 :
            return dp [ pos ] [ first_d ] [ last_d ] [ tight ]
        ans = 0
        limit = ( tight == 1 and 9 or num [ pos ] )
        for dig in range ( 0 , limit ) :
            curr_first = first_d
            if pos == 0 :
                curr_first = dig
            if curr_first == 0 and dig != 0 :
                curr_first = dig
            curr_till = tight
            if dig < num [ pos ] :
                curr_till = 1
            ans += count ( pos + 1 , curr_first , dig , curr_till , num )
        return dp [ pos ] [ first_d ] [ last_d ] [ tight ] = ans
    def solve ( x ) :
        num = [ ]
        while x > 0 :
            num . append ( x % 10 )
            x //= 10
        del num
        for i in range ( M ) :
            for j in range ( M ) :
                for k in range ( M ) :
                    for l in range ( 2 ) :
                        dp [ i ] [ j ] [ k ] [ l ] = - 1
            return count ( 0 , 0 , 0 , 0 , num )
    def main ( ) :
        L , R = 2 , 60
        print ( solve ( R ) - solve ( L - 1 ) )
        L , R = 1 , 1000
        print ( solve ( R ) - solve ( L - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1041
---> probID: codeforces_617_B
---> inputs:
3
0 1 0
---> outputs:
1

def python_application_125 ( ) :
    data = input ( 'Enter your number: ' )
    num = int ( data )
    old = - 1
    ans = 0
    for i in range ( num ) :
        s = input ( 'Enter a number: ' )
        if s == 1 :
            if old >= 0 :
                ans *= ( i - old )
            else :
                ans = 1
            old = i
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576725917_2161/main.py", line 20
    return l + 1
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 1042
---> probID: geeksforgeeks_1347_A
---> inputs:

---> outputs:
4


def genbit ( x ) :
    ans = 0
    while x > 0 :
        x /= 2
        ans += 1
    return ans
def check ( d , x ) :
    if bit ( x / d ) <= bit ( d ) :
        return True
    return False
bs = int ( math . sqrt ( n ) )
l , r = 1 , int ( math . sqrt ( n ) )
while l < r :
    m = ( l + r ) // 2
    if check ( m , n ) :
        r = m
    else :
        l = m + 1
if not check ( l , n ) :
    return l + 1
else :
    return l
count_divisor = n - bs + 1
def main ( ) :
    n = 5
    print ( count_divisor ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 60%|█████▉    | 1042/1746 [00:25<00:17, 40.93it/s]

-------------------------------------


---> lineNum: 1043
---> probID: geeksforgeeks_4102_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    """Test the minimalSteps of the GFG."""
    dp = [ ]
    for i in range ( n ) :
        dp . append ( int ( i ) )
    s1 , s2 = "" , ""
    dp [ 0 ] = 1
    s1 += s [ 0 ]
    for i in range ( 1 , n ) :
        s1 += s [ i ]
        s2 = s [ i + 1 : i + 1 ]
        dp [ i ] = min ( dp [ i ] , dp [ i - 1 ] + 1 )
        if s1 == s2 :
            dp [ i * 2 + 1 ] = min ( dp [ i ] + 1 , dp [ i * 2 + 1 ] )
    return dp [ - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1044
---> probID: geeksforgeeks_2399_A
---> inputs:

---> outputs:
No


def GFG ( num , dig , base ) :
    if dig == 1 and num < base :
        return True
    if dig > 1 and num >= base :
        return check_util ( num // base , -- dig , base )
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1045
---> probID: geeksforgeeks_3847_A
---> inputs:

---> outputs:
5 3 3 2 1 

def GFG ( arr , n ) :
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )
    getMin = arr [ i ]
    while i <= j :
        minVal = min ( minVal , arr [ i ] )
        i += 1
    return minVal
    getMax = arr [ i ]
    while i <= j :
        maxVal = max ( maxVal , arr [ i ] )
        i += 1
    return maxVal


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1046
---> probID: codeforces_632_B
---> inputs:
5
1 2 3 4 5
ABABA
---> outputs:
11

def main ( ) :
    import sys
    import getopt
    n = len ( sys . argv )
    a = [ ]
    for i in range ( n ) :
        a . append ( sys . argv [ i ] )
    s = sys . stdin . readline ( )
    sum = 0
    for ch in s :
        if ch == 'B' :
            sum += a [ i ]
    ans = sum
    sum1 = sum
    for i in range ( len ( s ) ) :
        if s [ i ] == 'A' :
            sum1 += a [ i ]
        else :
            sum1 -= a [ i ]
        ans = max ( ans , sum1 )
    sum1 = sum
    for i in range ( len ( s ) - 1 , - 1 , - 1 ) :
        if s [ i ] == 'A' :
            sum1 += a [ i ]
        else :
            sum1 -= a [ i ]
        ans = max ( ans , sum1 )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576726038_1736/main.py", line 4
    while n -- :
               ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1047
---> probID: aizu_p00021_A
---> inputs:
2
0.0 0.0 1.0 1.0 1.0 0.0 2.0 1.0
3.0 2.0 9.0 6.0 13.0 5.0 7.0 9.0
---> outputs:
YES
NO

def main ( ) :
    import sys
    n = len ( sys . argv )
    while n -- :
        xa , ya , xb , yb , xc , yc , xd , yd = sys . argv [ n ]
        katamukiab = ( yb - ya ) / ( xb - xa )
        katamukicd = ( yd - yc ) / ( xd - xc )
        if katamukiab == katamukicd :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(
 60%|█████▉    | 1047/1746 [00:25<00:17, 41.09it/s]

-------------------------------------


---> lineNum: 1048
---> probID: geeksforgeeks_643_A
---> inputs:

---> outputs:
2


def GFG ( n , a , b ) :
    if n == 0 :
        return a
    if n == 1 :
        return b
    if n == 2 :
        return ( a ^ b )
    return nth_xor_fib ( n % 3 , a , b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1049
---> probID: aizu_p02421_A
---> inputs:
3
cat dog
fish fish
lion tiger
---> outputs:
1 7

def main ( ) :
    import sys
    n = len ( sys . argv )
    card1 , card2 = sys . argv [ 1 : ]
    player1 , player2 = sys . argv [ 2 : ]
    for i in range ( n ) :
        card1 = card1 . split ( )
        card2 = card2 . split ( )
        if card1 [ 0 ] >= card2 [ 0 ] :
            player1 += 3
        elif card1 [ 0 ] <= card2 [ 0 ] :
            player2 += 3
        elif card1 [ 0 ] == card2 [ 0 ] :
            player1 += 1
            player2 += 1
    print ( player1 , player2 )
    sys . exit ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1050
---> probID: geeksforgeeks_2313_A
---> inputs:

---> outputs:
28.328653012


def test_GFG ( ) :
    if a < 0 :
        return - 1
    h = float ( 1.268 * a )
    A = float ( 0.70477 * pow ( h , 2 ) )
    assert A == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1051
---> probID: projecteuler_p073_A
---> inputs:

---> outputs:
7295372

def p073 ( ) :
    print ( [ 'p073' ] )
    return str ( stern_brocot_count ( 1 , 3 , 1 , 2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1052
---> probID: codeforces_1182_A
---> inputs:
4
---> outputs:
4

def pyfill ( n ) :
    import sys
    import numpy
    import numpy . random
    import numpy . ma
    import numpy . ma
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    import numpy . ma . marray
    

---> console_out:
 
DIDN'T MATCH!! :(
 60%|██████    | 1052/1746 [00:25<00:16, 41.13it/s]

-------------------------------------


---> lineNum: 1053
---> probID: geeksforgeeks_1373_A
---> inputs:

---> outputs:
76127


def GFG ( prime , n ) :
    prime = [ False for i in range ( 2 , n + 1 ) ]
    prime = [ False for i in range ( 2 , n + 1 ) ]
    for p in range ( 2 , n + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * p , n + 1 , p ) :
                prime [ i ] = False
    sum_prime = int ( pow ( 10 , d ) ) - 1
    prime = [ True for i in range ( 2 , n + 1 ) ]
    for i in range ( 2 , n + 1 ) :
        prime [ i ] = True
    sieve ( prime , max_prime = max_prime )
    sum = 0
    for i in range ( 2 , max_prime + 1 ) :
        if prime [ i ] :
            sum += i
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1054
---> probID: geeksforgeeks_515_A
---> inputs:

---> outputs:
6081


def test_GFG ( ) :
    prime = [ False , False ]
    for p in range ( 2 , n + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * p , n + 1 , p ) :
                prime [ i ] = False
    sum_prime = int ( pow ( 2 , d ) - 1 )
    prime = [ True for i in range ( 2 , maxVal + 1 ) ]
    sieve ( prime , max_primes = max_primes )
    sum = 0
    for i in range ( 2 , maxVal + 1 ) :
        if prime [ i ] :
            sum += i
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1055
---> probID: codeforces_1334_B
---> inputs:
4
4 3
5 1 2 1
4 10
11 9 11 9
2 5
4 3
3 7
9 4 9
---> outputs:
2
4
0
3

def test_CF ( ) :
    f = py . io . TextIO ( )
    f . reset ( )
    test = [ ]
    for t in range ( test ) :
        n , k = divmod ( t , 1000 )
        list = [ ]
        for i in range ( n ) :
            v = int ( i )
            list . append ( v )
        list . sort ( )
        div = 1
        count = 0
        sum = 0
        for i in range ( n - 1 , - 1 , - 1 ) :
            sum += list [ i ]
            if sum / ( div * 1.0 ) >= k :
                count += 1
                div += 1
            else :
                break
        f . write ( "%d\n" % count )
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1056
---> probID: aizu_p00365_A
---> inputs:
1999 9 9
2001 11 3
---> outputs:
3

def main ( ) :
    import time
    import datetime
    import calendar
    import sys
    import doctest
    import pytz
    import pytz
    import pytz . timezone
    import pytz . utc
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone
    import pytz . timezone


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1057
---> probID: geeksforgeeks_3326_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    """Test the number of partitions of a group."""
    ans , max_so_far = [ 0 , 0 , 2 , 3 , 4 ]
    for i in range ( n ) :
        max_so_far = max ( max_so_far , arr [ i ] )
        if max_so_far == i :
            ans += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 61%|██████    | 1057/1746 [00:25<00:16, 41.22it/s]

-------------------------------------


---> lineNum: 1058
---> probID: geeksforgeeks_3583_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    """Test the number of contiguous groups."""
    current_max , max_so_far = 0 , 0
    for i in range ( n ) :
        if i % 2 != 0 :
            current_max = 0
        else :
            current_max += 1
            max_so_far = max ( current_max , max_so_far )
    return max_so_far


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1059
---> probID: geeksforgeeks_1420_A
---> inputs:

---> outputs:
3.1461269285965052 



def test_GFG ( ) :
    if h < 0 and r < 0 :
        return - 1
    a = ( h * r * float ( sqrt ( 2 ) ) ) / ( h + float ( sqrt ( 2 ) * r ) )
    assert a == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1060
---> probID: geeksforgeeks_4310_A
---> inputs:

---> outputs:
1 2 3 4 5 6 7 
 2 3 4 5 6 7 
  3 4 5 6 7 
   4 5 6 7 
    5 6 7 
     6 7 
      7 
     6 7 
    5 6 7 
   4 5 6 7 
  3 4 5 6 7 
 2 3 4 5 6 7 
1 2 3 4 5 6 7 


def test_GFG ( ) :
    import numpy as np
    import random
    import scipy as sp
    import numpy as np
    import scipy . stats as sp
    import scipy . stats as sp
    import numpy as np
    import scipy . optimize as sp
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import norm
    from scipy . stats import stats
    from scipy . stats import stats


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1061
---> probID: atcoder_AGC025_A
---> inputs:
7392
---> outputs:
21

def main ( ) :
    import sys
    n = input ( )
    for i in range ( 1 , len ( n ) ) :
        if n [ i ] != '0' :
            sum = 0
            for j in range ( len ( n ) ) :
                sum += n [ j ] - '0'
            print ( sum )
            return
    if n [ 0 ] == '1' :
        print ( 10 )
        return
    print ( n [ 0 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1062
---> probID: geeksforgeeks_2232_A
---> inputs:

---> outputs:
3111


def geeks ( n ) :
    while n :
        if ( n % 10 ) % 2 == 0 :
            return 0
        n /= 10
    return 1


---> console_out:
 
DIDN'T MATCH!! :(
 61%|██████    | 1062/1746 [00:25<00:16, 41.42it/s]

-------------------------------------


---> lineNum: 1063
---> probID: geeksforgeeks_2030_A
---> inputs:

---> outputs:
2400


def GFG ( n ) :
    while n != 0 :
        if ( n % 10 ) % 2 != 0 :
            return 0
        n /= 10
    return 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1064
---> probID: geeksforgeeks_5127_A
---> inputs:

---> outputs:
1 3 6 10 15 

def test_GFG ( ) :
    i , j , k = symbols ( 'i j k' , integer = True , positive = True )
    for i in range ( 1 , n ) :
        assert gf_lcm ( i , j ) == i * j + j * i + i * i + i * j + j * j + i * i + j * i + i * j + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j * i + j

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576726471_1853/main.py", line 16
    sum_natual = ( ( n * ( n + 1l ) ) / 2 )
                                ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1065
---> probID: codeforces_609_B
---> inputs:
4 3
2 1 3 1
---> outputs:
5

def the_best_gift ( arr , n ) :
    f = open ( 'data/data/the_best_gift.txt' , 'r' )
    lines = f . readlines ( )
    n = int ( n )
    m = int ( m )
    arr = np . zeros ( m )
    lines = f . readlines ( )
    for i in range ( n ) :
        arr [ int ( str ( i ) ) - 1 ] += 1
    print ( get_number_of_ways2 ( arr , n ) )
    def get_number_of_ways1 ( arr , n ) :
        count = 0
        for i in range ( len ( arr ) ) :
            count = count + ( arr [ i ] * ( n - arr [ i ] ) )
        return count / 2
    sum_natual = ( ( n * ( n + 1l ) ) / 2 )
    def get_number_of_ways2 ( arr , n ) :
        t = sum_natual ( n )
        for x in arr :
            t -= sum_natual ( x )
        return t
    return get_number_of_ways1 ( arr , n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1066
---> probID: geeksforgeeks_4474_A
---> inputs:

---> outputs:
Position of n'th multiple of k in Fibonacci Series is 30


def GFG ( k , n ) :
    f1 , f2 , f3 = 0 , 1 , 0
    i = 2
    while i != 0 :
        f3 = f1 + f2
        f1 , f2 , f3 = f2 , f3
        if f2 % k == 0 :
            return n * i
        i += 1
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1067
---> probID: atcoder_ABC048_D
---> inputs:
aba
---> outputs:
Second

def main ( ) :
    import sys
    s = sys . stdin . readline ( )
    n = 0
    c = ''
    ans = [ ]
    e = [ False for i in range ( 26 ) ]
    for i in range ( len ( s ) ) :
        if e [ int ( s [ i ] ) - 97 ] == False :
            n += 1
        e [ int ( s [ i ] ) - 97 ] = True
    if n == 2 :
        c = 0
    else :
        c = len ( s ) - 2
        if s [ 0 ] == s [ len ( s ) - 1 ] :
            c -= 1
    if c % 2 == 0 :
        ans = 'Second'
    else :
        ans = 'First'
    print ( ans )
    sys . exit ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(
 61%|██████    | 1067/1746 [00:25<00:16, 41.52it/s]

-------------------------------------


---> lineNum: 1068
---> probID: geeksforgeeks_5091_A
---> inputs:

---> outputs:
3


def get_graphs_number_of_moves ( arr , n , k ) :
    i = 0
    for i in range ( k - 1 , n ) :
        if arr [ i ] != arr [ k - 1 ] :
            return - 1
    for i in range ( k - 1 , - 1 , - 1 ) :
        if arr [ i ] != arr [ k - 1 ] :
            return i + 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576726568_5861/main.py", line 1
    def import ( x , y , p ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1069
---> probID: geeksforgeeks_919_A
---> inputs:

---> outputs:
1


def import ( x , y , p ) :
    """
 Import a Python 2 or 3 compatible version of a Python 2 or 3 compatible version.
 """
    res = 1
    x = x % p
    while y :
        if ( y & 1 ) :
            res = ( res * x ) % p
        y = y >> 1
        x = ( x * x ) % p
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1070
---> probID: codeforces_569_A
---> inputs:
5 2 2
---> outputs:
2

def main ( ) :
    fileobj = sys . stdin
    fileobj . close ( )
    f = open ( fileobj , 'r' )
    out = sys . stdout
    solver = TaskA ( )
    solver . solve ( 1 , f , out )
    out . close ( )
class TaskA :
    def solve ( self , test_number , f , out ) :
        t = f . readline ( )
        s = f . readline ( )
        q = f . readline ( )
        sum = 0
        while s < t :
            s = s * q
            sum += 1
        out . write ( sum )
class InputReader :
    def readline ( self ) :
        return f . readline ( )
    def readline ( self ) :
        return f . readline ( )
    def readline ( self ) :
        return f . readline ( )
    def readline ( self ) :
        return f . readline ( )
    def readline ( self ) :
        return f . readline ( )
    def readline ( self ) :
        return f . readline ( )
class InputWriter :
    def readline ( self ) :
        return f . readline ( )
    def readline ( self ) :
        return f . readline ( )
    def readline ( self ) :
        return f . readline ( )
    def readline ( self ) :
        return f . readline ( )
class InputReader ( InputWriter ) :
    def readline ( self ) :
        return f . readline ( )
    def readline ( self ) :
        return f . readline ( )
    def readline ( self ) :
        return f . readline ( )
    def readline ( self ) :
        return f . readline ( )
    def readline ( self ) :
        return f . readline ( )
    def readline ( self ) :
        return f . readline ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1071
---> probID: codeforces_592_B
---> inputs:
5
---> outputs:
9

def main ( ) :
    import sys
    n = len ( sys . argv )
    s = n - 2
    print ( s * s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1072
---> probID: geeksforgeeks_451_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    """Test the number of identicalrows in a GFG."""
    count = 0
    for mat in np . array ( [ [ 1 , 1 , 1 ] , [ 1 , 2 , 3 ] , [ 5 , 5 , 5 ] ] ) :
        hs = set ( [ mat ] )
        if len ( hs ) == 1 :
            count += 1


---> console_out:
 
DIDN'T MATCH!! :(
 61%|██████▏   | 1072/1746 [00:25<00:16, 41.41it/s]

-------------------------------------


---> lineNum: 1073
---> probID: geeksforgeeks_1533_A
---> inputs:

---> outputs:
2 4 5 8 9 

def test_GFG ( ) :
    b = [ ]
    for j in range ( n ) :
        if not b :
            b . append ( a [ j ] )
        else :
            start , end = 0 , len ( b ) - 1
            pos = 0
            while start <= end :
                mid = start + ( end - start ) // 2
                if b [ mid ] == a [ j ] :
                    b . append ( ( max ( 0 , mid + 1 ) , a [ j ] ) )
                    break
                elif b [ mid ] > a [ j ] :
                    pos = end = mid - 1
                else :
                    pos = start = mid + 1
                if start > end :
                    pos = start
                    b . append ( ( max ( 0 , pos ) , a [ j ] ) )
                    break
    for i in range ( n ) :
        print ( b [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1074
---> probID: geeksforgeeks_2734_A
---> inputs:

---> outputs:
18


def count_total_distinct ( str ) :
    """
 Return the number of distinct items in the given string.
 """
    cnt = 0
    items = set ( )
    for i in range ( len ( str ) ) :
        temp = ""
        ans = set ( )
        for j in range ( i , len ( str ) ) :
            temp = temp + str [ j ]
            ans . add ( str [ j ] )
            if not items . intersection ( temp ) :
                items . add ( temp )
                cnt += len ( ans )
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1075
---> probID: geeksforgeeks_3049_A
---> inputs:

---> outputs:
9 2


def test_GFG ( ) :
    digits = int ( math . log10 ( n ) )
    n = int ( n / int ( math . pow ( 10 , digits ) ) )
    assert n == 98562


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576726737_6300/main.py", line 1
    def import ( a , n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1076
---> probID: geeksforgeeks_5147_A
---> inputs:

---> outputs:
1 2 0 3 

def import ( a , n ) :
    import numpy
    class solution :
        def remove_zeros ( self , a , n ) :
            ind = - 1
            for i in range ( n ) :
                if a [ i ] != 0 :
                    ind = i
                    break
            if ind == - 1 :
                print ( "Array has leading zeros only" )
                return
            b = [ a [ ind + i ] for i in range ( n - ind ) ]
            for i in range ( n - ind ) :
                print ( b [ i ] , end = ' ' )
        def print_zeros ( self , a ) :
            a = [ 0 , 0 , 0 , 1 , 2 , 0 , 3 ]
            n = len ( a )
            remove_zeros ( a , n )
    return solution


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1077
---> probID: geeksforgeeks_2409_A
---> inputs:

---> outputs:
3


def find_maxm ( arr , n ) :
    mp = { }
    for i in range ( n ) :
        if mp . has_key ( arr [ i ] ) :
            mp [ arr [ i ] ] = mp [ arr [ i ] ] + 1
        else :
            mp [ arr [ i ] ] = 1
    ans = 0
    for x , freq in mp . items ( ) :
        value = x [ 0 ]
        freq = x [ 1 ]
        if value == freq :
            ans = max ( ans , value )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 62%|██████▏   | 1077/1746 [00:26<00:16, 41.38it/s]

-------------------------------------


---> lineNum: 1078
---> probID: atcoder_ABC107_D
---> inputs:
3
10 30 20
---> outputs:
30

def main ( ) :
    import sys
    import getopt
    try :
        N = len ( sys . argv )
    except :
        N = 1
    arr = [ ]
    for i in range ( N ) :
        arr . append ( sys . argv [ i ] )
    tsk = Task ( )
    sys . stdout . write ( tsk . solve ( arr ) )
    def solve ( arr ) :
        n = len ( arr )
        sorted = sorted ( arr )
        total = long ( n * ( n + 1 ) ) / 2
        l , r = 0 , n - 1
        while l < r :
            mid = l + ( r - l ) // 2
            target = sorted [ mid ]
            cur = 0
            cnt = 0
            bit = [ 0 ] * 2 + [ 0 ] * 2
            for x in range ( n + 1 , len ( bit ) , 2 ) :
                bit [ x ] += 1
            for i in range ( n ) :
                cur += arr [ i ] <= target
                for x in range ( cur + n + 1 , len ( bit ) , 2 ) :
                    bit [ x ] += 1
                for x in range ( cur + n , 0 , - 1 ) :
                    cnt += bit [ x ]
            if cnt >= total // 2 + 1 :
                r = mid
            else :
                l = mid + 1
        return sorted [ l ]
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1079
---> probID: geeksforgeeks_1800_A
---> inputs:

---> outputs:
17


def gf_gf_sum ( f , p , K ) :
    """
 Compute sum of square-free numbers in ``GF(p)[x]``.

 Examples
 =====

 >>> from sympy.polys.domains import ZZ
 >>> from sympy.polys.galoistools import gf_gf_sum

 >>> gf_gf_sum([3, 2, 4], 5, ZZ)
 [3, 2, 4]

 """
    ans = [ ]
    while f [ - 1 ] != 0 :
        ans . append ( f [ - 1 ] % 10 )
        f = f [ : - 1 ]
    return gf_sum ( f , p , K )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1080
---> probID: aizu_p00123_A
---> inputs:
40.0 70.0
72.5 140.51
---> outputs:
B
NA

def main ( ) :
    std_in = np . array ( [ 35.5 , 37.5 , 40 , 43 , 50 , 55 , 70 ] )
    ca = np . array ( [ 71 , 77 , 83 , 89 , 105 , 116 , 148 ] )
    c = [ 'AAA' , 'AA' , 'A' , 'B' , 'C' , 'D' , 'E' , 'NA' ]
    for i in std_in :
        a = np . array ( [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 ] )
        b = np . array ( [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 ] )
        ar = 100
        br = 100
        for i in ca :
            if i > a :
                ar = i
                break
        for i in cb :
            if i > b :
                br = i
                break
        ans = max ( ar , br )
        if ans == 100 :
            ans = len ( c ) - 1
        print ( c [ ans ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1081
---> probID: codeforces_1415_A
---> inputs:
3
10 10 1 1
3 5 2 4
10 2 5 1
---> outputs:
18
4
6

def test_q1 ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' , integer = True , positive = True )
    while t :
        a , b , c , d = symbols ( 'a b c d' , integer = True , positive = True )
        res = max ( c - 1 , a - c ) + max ( d - 1 , b - d )
        assert res == max ( a - c , b - d )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1082
---> probID: codeforces_1399_A
---> inputs:
5
3
1 2 2
4
5 5 5 5
3
1 2 4
4
1 3 4 4
1
100
---> outputs:
YES
YES
NO
NO
YES

def A_Remove_Smallest ( ) :
    sn = input ( )
    t = len ( sn )
    while t :
        n = sn . pop ( )
        arr = [ ]
        for i in range ( n ) :
            arr . append ( sn . pop ( ) )
        arr . sort ( )
        i = 0
        for i in range ( n - 1 ) :
            if ( arr [ i + 1 ] - arr [ i ] ) <= 1 :
                continue
            else :
                break
        if i == n - 1 :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(
 62%|██████▏   | 1082/1746 [00:26<00:16, 41.11it/s]  File "./junk/1692576726909_3098/main.py", line 8
    do :
       ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1083
---> probID: geeksforgeeks_342_A
---> inputs:

---> outputs:
1


def test_GFG ( ) :
    accuracy , denominator , sinx , sinval = ( 0.0001 , 0.0001 , 0.0001 )
    n = n * float ( 3.142 / 180.0 )
    x1 = n
    sinx = n
    sinval = float ( math . sin ( n ) )
    i = 1
    do :
        denominator = 2 ** i * ( 2 * i + 1 )
        x1 = - x1 * n * n / denominator
        sinx = sinx + x1
        i = i + 1
    while accuracy <= sinval - sinx :
        pass
    assert sinx == n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1084
---> probID: geeksforgeeks_4319_A
---> inputs:

---> outputs:
720


def GFG ( ) :
    arr = [ 1 , 2 , 3 , 4 , 5 , 6 ]
    pro = 1
    for i in arr :
        pro = pro * i
    return pro


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1085
---> probID: aizu_p02425_A
---> inputs:
14
1 0
1 1
1 2
2 1
0 0
0 1
0 2
0 3
3 3
4
5
6
7
8
---> outputs:
1
0
1
0
0
1
0
3
13

def main ( ) :
    import sys
    import getopt
    global flag , n , counter
    flag = [ ]
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , "qv" )
    except getopt . error as msg :
        sys . stdout . write ( msg )
        sys . exit ( 2 )
    for o , a in opts :
        if o == '-v' :
            flag . append ( '1' )
        elif o == '-q' :
            flag . append ( '0' )
        elif o == '-v' :
            flag . append ( '0' )
        elif o == '--verbose' :
            counter = 1
            for i in range ( 64 ) :
                if flag [ i ] != True :
                    counter = 0
                    break
            sys . stdout . write ( "%d\n" % counter )
        elif o == '--verbose' :
            counter = 0
            for i in range ( 64 ) :
                if flag [ i ] != False :
                    counter = 1
                    break
            sys . stdout . write ( "%d\n" % counter )
        elif o == '--verbose' :
            counter = 1
            for i in range ( 64 ) :
                if flag [ i ] == True :
                    counter = 0
                    break
            sys . stdout . write ( "%d\n" % counter )
        elif o == '--verbose' :
            sum = [ '0' ] * 64
            big = [ '2' ] * 64
            for i in range ( 64 ) :
                if flag [ i ] :
                    sum [ i ] = sum [ i ] + big [ i ]
            sys . stdout . write ( "%d\n" % sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1086
---> probID: geeksforgeeks_653_A
---> inputs:

---> outputs:
9


def gf_gf_int ( f , p , K ) :
    """
 Compute the nth order polynomial of ``GF(p)[x]``.

 Examples
 =====

 >>> from sympy.polys.domains import ZZ
 >>> from sympy.polys.galoistools import gf_gf_int

 >>> gf_gf_int([3, 2, 4], 5, ZZ)
 [1, 2, 4, 5]

 """
    count = 0
    while f :
        count += 1
        f = gf_strip ( f )
    incl = f [ 0 ]
    excl = 0
    excl_new = [ ]
    for i in range ( 1 , p ) :
        excl_new . append ( ( incl , excl ) )
        incl = excl + f [ 1 ]
        excl = excl_new [ 0 ]
    return ( ( incl , excl ) , ( incl , excl_new ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1087
---> probID: codeforces_629_A
---> inputs:
3
.CC
C..
C.C
---> outputs:
4

def test_python_application_70 ( ) :
    import sys
    import doctest
    num = 0
    counter = 0
    fine = 0
    arr = [ ]
    for i in range ( num ) :
        s = sys . stdin . readline ( )
        arr . append ( s )
    for i in range ( num ) :
        for k in range ( num ) :
            if arr [ k ] [ i ] == 'C' :
                counter += 1
        fine += ( counter * ( counter - 1 ) ) / 2
        counter = 0
    for i in range ( num ) :
        for k in range ( num ) :
            if arr [ i ] [ k ] == 'C' :
                counter += 1
        fine += ( counter * ( counter - 1 ) ) / 2
        counter = 0
    assert fine == 0


---> console_out:
 
DIDN'T MATCH!! :(
 62%|██████▏   | 1087/1746 [00:26<00:16, 40.80it/s]  File "./junk/1692576727034_5952/main.py", line 21
    return h
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 1088
---> probID: geeksforgeeks_1539_A
---> inputs:

---> outputs:
Count = 6


def GFG ( arr , low , high ) :
    if high < low :
        return 0
    if high == low :
        return low
    mid = ( low + high ) // 2
    if mid < high and arr [ mid + 1 ] < arr [ mid ] :
        return ( mid + 1 )
    if mid > low and arr [ mid ] < arr [ mid - 1 ] :
        return mid
    if arr [ high ] > arr [ mid ] :
        return find_min_index ( arr , low , mid - 1 )
    return find_min_index ( arr , mid + 1 , high )
binary_search ( arr , l , h , x )
while l <= h :
    mid = ( l + h ) // 2
    if arr [ mid ] <= x :
        l = mid + 1
    else :
        h = mid - 1
return h


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1089
---> probID: geeksforgeeks_2312_A
---> inputs:

---> outputs:
The final value of y at x = 1 is : 2.1839


def test_GFG ( ) :
    f = lambda x , y : y - 2 * x ** 2 + 1
    v = y - 2 * x ** 2 + 1
    predict ( x , y , h )
    y1p = y + h * f ( x , y )
    return y1p
    def correct ( x , y , x1 , y1 , h ) :
        e = 0.00001
        y1c = y1
        while abs ( y1c - y1 ) > e :
            y1 = y1c
            y1c = y + 0.5 * h * ( f ( x , y ) + f ( x1 , y1 ) )
        return y1c
    def print_final_values ( x , xn , y , h ) :
        while x < xn :
            x1 = x + h
            y1p = predict ( x , y , h )
            y1c = correct ( x , y , x1 , y1p , h )
            x = x1
            y = y1c
        print ( "The final value of y at x = %d is : %s" % ( int ( x ) , str ( y ) ) )
    def test_polynomial_1 ( ) :
        x , y = 0 , 0.5
        xn = 1
        h = 0.2
        print_final_values ( x , xn , y , h )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1090
---> probID: geeksforgeeks_4300_A
---> inputs:

---> outputs:
 ******  
 *     * 
 *     * 
 *     * 
 *     * 
 *     * 
 *     * 
 *     * 
 ******  



def test_GFG ( ) :
    for i in range ( n ) :
        for j in range ( 0 , n ) :
            if j == 1 or ( ( i == 0 or i == n - 1 ) and ( j > 1 and j < n - 2 ) ) or ( j == n - 2 and i != 0 and i != n - 1 ) :
                print ( "*" , end = ' ' )
            else :
                print ( " " , end = ' ' )
        print ( )


---> console_out:
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1091
---> probID: geeksforgeeks_3859_A
---> inputs:

---> outputs:
xyxxy

def GFG ( n , k ) :
    total = 0
    i = 1
    while total < k :
        total = total + n - i
        i += 1
    first_y_position = i - 1
    second_y_position = k - ( total - n + first_y_position )
    for j in range ( 1 , first_y_position ) :
        print ( 'x' , end = ' ' )
    print ( 'y' , end = ' ' )
    j = first_y_position + 1
    while second_y_position > 1 :
        print ( 'x' , end = ' ' )
        second_y_position -= 1
        j += 1
    print ( 'y' , end = ' ' )
    while j < n :
        print ( 'x' , end = ' ' )
        j += 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1092
---> probID: geeksforgeeks_136_A
---> inputs:

---> outputs:
10


def GFG ( n , k ) :
    C = [ 1 ] * ( k + 1 )
    for i in range ( 1 , n + 1 ) :
        for j in range ( min ( i , k ) , 0 , - 1 ) :
            C [ j ] = C [ j ] + C [ j - 1 ]
    return C [ k ]


---> console_out:
 
DIDN'T MATCH!! :(
 63%|██████▎   | 1092/1746 [00:26<00:16, 40.83it/s]

-------------------------------------


---> lineNum: 1093
---> probID: leetcode_238_A
---> inputs:

---> outputs:
[24,12,8,6]

def test_product_except_self ( ) :
    """
 Test product except self for all numbers in the list.
 """
    n = len ( nums )
    res = [ 1 ] * n
    for i in range ( 1 , n ) :
        res [ i ] = res [ i - 1 ] * nums [ i - 1 ]
    right = 1
    for i in range ( n - 1 , - 1 , - 1 ) :
        res [ i ] *= right
        right *= nums [ i ]
    return res , right


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1094
---> probID: geeksforgeeks_5261_A
---> inputs:

---> outputs:
For
sFo


def GFG ( s , k ) :
    curr_str = s [ : k ]
    lex_min = curr_str
    lex_max = curr_str
    for i in range ( k , len ( s ) ) :
        curr_str = curr_str [ 1 : k ] + s [ i ]
        if lex_max < curr_str :
            lex_max = curr_str
        if lex_min > curr_str :
            lex_min = curr_str
    print ( lex_min )
    print ( lex_max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1095
---> probID: codeforces_840_A
---> inputs:
5
7 3 5 3 4
2 1 3 2 3
---> outputs:
['4 7 3 5 3', '5 7 3 4 3 ']

def test_cf840_basic ( ) :
    import sympy
    from sympy . abc import n
    a = sympy . polys . densebasic . CF840A ( n )
    b = sympy . polys . densebasic . CF840B ( n )
    for i in range ( n ) :
        a [ i ] = sympy . polys . densebasic . CF840C ( i )
    for i in range ( n ) :
        b [ i ] = sympy . polys . densebasic . CF840D ( i )
        b [ i ] = i
    a . sort ( key = lambda x : x [ 1 ] )
    b . sort ( key = lambda x : x [ 0 ] )
    cmp = sympy . polys . densebasic . CF840C ( n )
    if cmp == 0 :
        return sympy . polys . densebasic . CF840D ( n )
    else :
        return cmp
    res = [ ]
    for i in range ( n ) :
        e = b [ i ]
        res . append ( a [ i ] )
    for i in range ( n ) :
        print ( res [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1096
---> probID: geeksforgeeks_3525_A
---> inputs:

---> outputs:
Max subset XOR is 13


def genmodular ( arg ) :
    """Generate a modular sequence of integers."""
    INT_BITS = 32
    for i in range ( INT_BITS - 1 , - 1 , - 1 ) :
        max_ind = index = 0
        max_ele = sys . maxint
        for j in range ( index , n ) :
            if ( arg [ j ] & ( 1 << i ) ) != 0 and arg [ j ] > max_ele :
                max_ele = arg [ j ]
                max_ind = j
        if max_ele == - 2147483648 :
            continue
        temp = arg [ index ]
        arg [ index ] = arg [ max_ind ]
        arg [ max_ind ] = temp
        max_ind = index
        for j in range ( n ) :
            if j != max_ind and ( arg [ j ] & ( 1 << i ) ) != 0 :
                arg [ j ] = arg [ j ] ^ arg [ max_ind ]
        index += 1
    res = 0
    for i in range ( n ) :
        res ^= arg [ i ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1097
---> probID: codeforces_37_A
---> inputs:
3
1 2 3
---> outputs:
1 3

def main ( ) :
    import sys
    import getopt
    global number
    global wooden
    number = 0
    wooden = [ ]
    for i in range ( 0 , len ( sys . argv ) ) :
        each = sys . argv [ i ]
        wooden . append ( each )
    height = [ ]
    count = 0
    for i in range ( 0 , len ( sys . argv ) ) :
        if i == 0 :
            continue
        else :
            count = 1
            for j in range ( i + 1 , len ( sys . argv ) ) :
                if sys . argv [ i ] == sys . argv [ j ] :
                    sys . argv [ i ] = sys . argv [ j ]
                    count += 1
            height . append ( count )
    index = 0
    max = height [ 0 ]
    for i in range ( 0 , len ( sys . argv ) ) :
        if i != 0 :
            index += 1
        if max < height [ i ] :
            max = height [ i ]
    sys . stdout . write ( "%d %d\n" % ( max , index ) )


---> console_out:
 
DIDN'T MATCH!! :(
 63%|██████▎   | 1097/1746 [00:26<00:15, 40.92it/s]  File "./junk/1692576727278_6856/main.py", line 1
    def import ( arr , n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1098
---> probID: geeksforgeeks_5192_A
---> inputs:

---> outputs:
The two elements whose sum is minimum are -80 and 85


def import ( arr , n ) :
    import sys
    import numpy as np
    class Main ( object ) :
        def __init__ ( self , n ) :
            self . n = n
        def __int__ ( self ) :
            return self . n
        def __float__ ( self ) :
            return self . n
        def __bool__ ( self ) :
            return self . n
        def __le__ ( self , other ) :
            return self . n <= other . n
        def __ge__ ( self , other ) :
            return self . n >= other . n
        def __ne__ ( self , other ) :
            return self . n != other . n
        def __lt__ ( self , other ) :
            return self . n < other . n
        def __gt__ ( self , other ) :
            return self . n > other . n
        def __le__ ( self , other ) :
            return self . n <= other . n
        def __ge__ ( self , other ) :
            return self . n >= other . n
    arr = [ 1 , 60 , - 10 , 70 , - 80 , 85 ]
    n = len ( arr )
    return [ Main ( arr , n ) for arr in arr ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1099
---> probID: leetcode_387_A
---> inputs:

---> outputs:
0

def first_uniq_char ( s ) :
    freq = [ 0 ] * 26
    for i in range ( len ( s ) ) :
        freq [ s [ i ] - 'a' ] += 1
    for i in range ( len ( s ) ) :
        if freq [ s [ i ] - 'a' ] == 1 :
            return i


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1100
---> probID: geeksforgeeks_3128_A
---> inputs:

---> outputs:
Yes


def check_stack_permutation ( ip , op , n ) :
    input = Queue ( )
    for i in range ( n ) :
        input . put ( ip [ i ] )
    output = Queue ( )
    for i in range ( n ) :
        output . put ( op [ i ] )
    temp_stack = Stack ( )
    while not input . empty ( ) :
        ele = input . get ( )
        if ele == output . get ( ) :
            output . put ( ele )
            while not temp_stack . empty ( ) :
                if temp_stack . peek ( ) == output . get ( ) :
                    temp_stack . pop ( )
                    output . put ( ele )
                else :
                    break
        else :
            temp_stack . push ( ele )
    return ( input . empty ( ) and temp_stack . empty ( ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1101
---> probID: atcoder_ABC110_C
---> inputs:
x
z
---> outputs:
Yes

def main ( ) :
    import sys
    s = sys . stdin . readline ( )
    t = sys . stdin . readline ( )
    l = len ( s )
    ans = True
    for i in range ( l ) :
        if s . find ( s [ i ] , i + 1 ) != t . find ( t [ i ] , i + 1 ) :
            ans = False
            break
    sys . stdout . write ( ans and "Yes" or "No" )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576727374_5311/main.py", line 1
    def import ( n , d ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1102
---> probID: geeksforgeeks_790_A
---> inputs:

---> outputs:
39


def import ( n , d ) :
    import sys
    class solution :
        def getSum ( self ) :
            sum = 0
            for i in range ( 1 , n + 1 ) :
                if i % 10 == d :
                    sum += i
            return sum
        def main ( self ) :
            n , d = 30 , 3
            print ( getSum ( n ) )
    return solution


---> console_out:
 
DIDN'T MATCH!! :(
 63%|██████▎   | 1102/1746 [00:26<00:15, 41.11it/s]

-------------------------------------


---> lineNum: 1103
---> probID: codeforces_1282_A
---> inputs:
9
1 10 7 1
3 3 3 0
8 2 10 4
8 2 10 100
-10 20 -17 2
-3 2 2 0
-3 1 2 0
2 3 2 3
-1 3 -2 2
---> outputs:
7
0
4
0
30
5
4
0
3

def main ( ) :
    import sys
    t = sys . argv [ 1 ]
    while t :
        st = sys . stdin . readline ( )
        end = sys . stdin . readline ( )
        n = sys . stdin . readline ( )
        m = sys . stdin . readline ( )
        sum = 0
        if st > end :
            temp = end
            end = st
            st = temp
        if n + m <= st :
            sum = end - st
        elif n + m >= st and n - m < st :
            sum = end - n - m
        elif n - m >= st and n <= end - m :
            sum = end - st - 2 * m
        elif n - m < end and n + m >= end :
            sum = n - m - st
        else :
            sum = end - st
        if sum < 0 :
            sum = 0
        print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576727425_2655/main.py", line 30
    
                                           ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1104
---> probID: codeforces_1187_A
---> inputs:
3
10 5 7
10 10 10
2 1 1
---> outputs:
6
1
2

def test_codechef ( ) :
    import sympy
    from sympy . abc import n
    assert codechef ( n ) == ( n , 0 )
    assert codechef ( n + 1 ) == ( n , 0 )
    assert codechef ( n + 2 ) == ( n , 0 )
    assert codechef ( n + 3 ) == ( n , 0 )
    assert codechef ( n + 4 ) == ( n , 0 )
    assert codechef ( n + 5 ) == ( n , 0 )
    assert codechef ( n + 6 ) == ( n , 0 )
    assert codechef ( n + 7 ) == ( n , 0 )
    assert codechef ( n + 8 ) == ( n , 0 )
    assert codechef ( n + 9 ) == ( n , 0 )
    assert codechef ( n + 10 ) == ( n , 0 )
    assert codechef ( n + 11 ) == ( n , 0 )
    assert codechef ( n + 12 ) == ( n , 0 )
    assert codechef ( n + 13 ) == ( n , 0 )
    assert codechef ( n + 14 ) == ( n , 0 )
    assert codechef ( n + 15 ) == ( n , 0 )
    assert codechef ( n + 16 ) == ( n , 0 )
    assert codechef ( n + 17 ) == ( n , 0 )
    assert codechef ( n + 18 ) == ( n , 0 )
    assert codechef ( n + 19 ) == ( n , 0 )
    assert codechef ( n + 20 ) == ( n , 0 )
    assert codechef ( n + 21 ) == ( n , 0 )
    assert codechef ( n + 22 ) == ( n , 0 )
    assert codechef ( n + 23 ) == ( n , 0 )
    assert codechef ( n + 24 ) == ( n , 0 )
    assert codechef ( n + 25 ) == ( n ,

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1105
---> probID: geeksforgeeks_1588_A
---> inputs:

---> outputs:
5


def get_GFG ( N , K ) :
    ans = 0
    for i in range ( 1 , N + 1 ) :
        ans += ( i % K )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1106
---> probID: codeforces_194_B
---> inputs:
3
4 8 100
---> outputs:
17
33
401

def ishu ( a , b ) :
    if b == 0 :
        return a
    else :
        return gcd ( b , a % b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1107
---> probID: geeksforgeeks_1219_A
---> inputs:

---> outputs:
55.24


def GFG ( r , d ) :
    PI = 3.14
    R = d / PI
    R += math . pow ( r , 2 )
    R = math . sqrt ( R )
    area = PI * math . pow ( R , 2 )
    return area


---> console_out:
 
DIDN'T MATCH!! :(
 63%|██████▎   | 1107/1746 [00:26<00:15, 41.10it/s]

-------------------------------------


---> lineNum: 1108
---> probID: geeksforgeeks_3565_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    n = 5
    s = 11
    assert minimum_numbers ( n , s ) == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1109
---> probID: geeksforgeeks_4238_A
---> inputs:

---> outputs:
6


def count_triplets ( arr , n , m ) :
    count = 0
    arr . sort ( )
    end , start , mid = n - 1 , n - 1 , n - 1 , n - 1
    for end in range ( n - 1 , 2 , - 1 ) :
        start = 0
        mid = end - 1
        while start < mid :
            prod = arr [ end ] * arr [ start ] * arr [ mid ]
            if prod > m :
                mid -= 1
            elif prod < m :
                start += 1
            elif prod == m :
                count += 1
                mid -= 1
                start += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1110
---> probID: geeksforgeeks_600_A
---> inputs:

---> outputs:
8


def test_GFG ( ) :
    if n <= 1 :
        return n
    a , b , c = 0 , 1 , 1
    res = 1
    while c < n :
        c = a + b
        res += 1
        a , b , c = b , c
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1111
---> probID: geeksforgeeks_723_A
---> inputs:

---> outputs:
No


def GFG ( ch ) :
    try :
        if ch in [ 'a' , 'e' , 'i' , 'o' , 'u' ] :
            return True
    except :
        return False
    isSatisfied = False
    for i in range ( 1 , n ) :
        if not isVowel ( str ( i ) ) and not isVowel ( str ( i - 1 ) ) :
            return False
    for i in range ( 1 , n - 1 ) :
        if isVowel ( str ( i ) ) and not isVowel ( str ( i - 1 ) ) and not isVowel ( str ( i + 1 ) ) :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1112
---> probID: geeksforgeeks_848_A
---> inputs:

---> outputs:
9


def GFG ( n ) :
    dp = [ 0 ] * ( n + 1 )
    dp [ 0 ] = 1
    dp [ 1 ] = 1
    dp [ 2 ] = 1
    for i in range ( 3 , n + 1 ) :
        dp [ i ] = dp [ i - 1 ] + dp [ i - 3 ] + 1
    return dp [ n ]


---> console_out:
 
DIDN'T MATCH!! :(
 64%|██████▎   | 1112/1746 [00:26<00:15, 41.38it/s]

-------------------------------------


---> lineNum: 1113
---> probID: geeksforgeeks_378_A
---> inputs:

---> outputs:
4.958333333333334


def GFG ( m , n ) :
    ans , i = 0.0 , 0
    for i in range ( m , 0 , - 1 ) :
        ans += ( pow ( i / m , n ) - pow ( ( i - 1 ) / m , n ) ) ** i
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1114
---> probID: geeksforgeeks_925_A
---> inputs:

---> outputs:
210


def test_GFG ( ) :
    prime = [ True for i in range ( n + 1 ) ]
    for p in range ( 2 , n + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , n + 1 , p ) :
                prime [ i ] = False
    prod = 1
    for i in range ( 2 , n + 1 ) :
        if prime [ i ] :
            prod *= i
    return prod


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1115
---> probID: projecteuler_p019_A
---> inputs:

---> outputs:
171

def p019 ( ) :
    print ( [ 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , 'p019' , ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1116
---> probID: geeksforgeeks_4465_A
---> inputs:

---> outputs:
Difference between two dates is 1461


def GFG ( d ) :
    class Date ( object ) :
        d , m , y = d
    month_days = [ 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 ]
    count_leap = 1
    if d . m <= 2 :
        years = d . y
    else :
        years = d . m - 1
    return years / 4 - years / 100 + years / 400


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1117
---> probID: geeksforgeeks_663_A
---> inputs:

---> outputs:
The numbers are: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]


def genNumbers ( n ) :
    st = set ( )
    def generateNumbers ( n , num , a , b ) :
        if num > 0 and num < n :
            st . add ( num )
        if num >= n :
            return
        if num * 10 + a > num :
            generateNumbers ( n , num * 10 + a , a , b )
        generateNumbers ( n , num * 10 + b , a , b )
    def printNumbers ( n ) :
        for i in range ( 0 , 9 ) :
            for j in range ( i + 1 , 9 ) :
                generateNumbers ( n , 0 , i , j )
        print ( "The numbers are: " )
        print ( st )
        st = set ( )
    def main ( ) :
        n = 12
        printNumbers ( n )


---> console_out:
 
DIDN'T MATCH!! :(
 64%|██████▍   | 1117/1746 [00:27<00:15, 41.53it/s]

-------------------------------------


---> lineNum: 1118
---> probID: codeforces_71_B
---> inputs:
10 10 54
---> outputs:
10 10 10 10 10 4 0 0 0 0

def progress_bar ( ) :
    import sys
    n = sys . argv [ 1 ]
    k = sys . argv [ 2 ]
    t = sys . argv [ 3 ]
    temp = ( t * k * n ) / 100.0
    x = 0
    while temp - k >= 0 :
        temp -= k
        x += 1
    for i in range ( x ) :
        sys . stdout . write ( k + " " )
    if temp != 0 :
        sys . stdout . write ( int ( temp ) + " " )
        x += 1
    for i in range ( x , n ) :
        sys . stdout . write ( 0 )
    sys . stdout . write ( "\n" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1119
---> probID: aizu_p00705_A
---> inputs:
3 2
2 1 4
0
3 3 4 8
3 2
4 1 5 8 9
3 2 5 9
5 2 4 5 7 9
3 3
2 1 4
3 2 5 9
2 2 4
3 3
2 1 2
3 1 2 9
2 2 4
0 0
---> outputs:
4
5
0
2

def main ( ) :
    import sys
    for line in sys . stdin :
        N , Q = ni . read ( ) . split ( ' ' )
        if ( N | Q ) == 0 :
            break
        seq = [ ]
        d = { }
        for i in range ( 1 , 100 ) :
            d [ i ] = 0
        for i in range ( N ) :
            M , seq = ni . read ( ) . split ( ' ' )
            d [ i ] = d [ i ] + 1
        max = 0
        idx = 0
        for key in d :
            n = d [ key ]
            if n >= Q :
                if max < n :
                    idx = key
                    max = n
        print ( idx )
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1120
---> probID: geeksforgeeks_3728_A
---> inputs:

---> outputs:
5


def test_oddoccurance ( ) :
    i = 0
    res = 0
    for i in range ( ar_size ) :
        res = res ^ ar [ i ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1121
---> probID: geeksforgeeks_1823_A
---> inputs:

---> outputs:
1
1


def GFG ( x , k ) :
    rslt = ( ( x & ( 1 << ( k - 1 ) ) ) != 0 )
    return rslt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1122
---> probID: geeksforgeeks_862_A
---> inputs:

---> outputs:
3 13


def GFG ( n ) :
    isPrime = [ False ]
    for i in range ( 2 , n + 1 ) :
        isPrime [ i ] = True
    for p in range ( 2 , n * p + 1 ) :
        if isPrime [ p ] == True :
            for i in range ( p * 2 , n + p ) :
                isPrime [ i ] = False
    def findPrimePair ( n ) :
        flag = 0
        isPrime = [ False ] * ( n + 1 )
        SieveOfEratosthenes ( n )
        for i in range ( 2 , n + 1 ) :
            x = n // i
            if isPrime [ i ] and isPrime [ x ] and x != i and x * i == n :
                print ( i , x )
                flag = 1
                return flag
        if flag == 0 :
            print ( "No such pair found" )
    def main ( ) :
        n = 39
        findPrimePair ( n )
    return main


---> console_out:
 
DIDN'T MATCH!! :(
 64%|██████▍   | 1122/1746 [00:27<00:14, 41.77it/s]

-------------------------------------


---> lineNum: 1123
---> probID: geeksforgeeks_2065_A
---> inputs:

---> outputs:
GCD( 10 , 15 ) = 5
GCD( 35 , 10 ) = 5
GCD( 31 , 2 ) = 1


def test_GFG ( ) :
    a , b = symbols ( 'a b' , integer = True , positive = True )
    g = ( 2 * a + b ) / ( a + b )
    assert gcd ( g , a ) == g
    a , b = symbols ( 'a b' , integer = True , positive = True )
    g = ( 2 * a + b ) / ( a + b )
    assert gcd ( g , a ) == g
    a , b = symbols ( 'a b' , integer = True , positive = True )
    g = ( 2 * a + b ) / ( a + b )
    assert gcd ( g , a ) == g
    a , b = symbols ( 'a b' , integer = True , positive = True )
    g = ( 2 * a + b ) / ( a + b )
    assert gcd ( g , a ) == g


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1124
---> probID: geeksforgeeks_785_A
---> inputs:

---> outputs:
GCD( 10 , 15 ) = 5
GCD( 35 , 10 ) = 5
GCD( 31 , 2 ) = 1


def test_GFG ( ) :
    a , b = symbols ( 'a b' , integer = True , positive = True )
    g = ( 2 * a + b ) / ( a + b )
    assert gcd ( g , a ) == g
    a , b = symbols ( 'a b' , integer = True , positive = True )
    g = ( 2 * a + b ) / ( a + b )
    assert gcd ( g , a ) == g
    a , b = symbols ( 'a b' , integer = True , positive = True )
    g = ( 2 * a + b ) / ( a + b )
    assert gcd ( g , a ) == g
    a , b = symbols ( 'a b' , integer = True , positive = True )
    g = ( 2 * a + b ) / ( a + b )
    assert gcd ( g , a ) == g


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1125
---> probID: projecteuler_p174_A
---> inputs:

---> outputs:
209566

def p174 ( ) :
    print ( [ 'p174.py' , 'p174.c' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , 'p174.h' , ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1126
---> probID: codeforces_1499_B
---> inputs:
5
10101011011
0000
11111
110
1100
---> outputs:
YES
YES
YES
YES
NO

def binary_removal ( s ) :
    one = 0
    zero = 0
    for i in range ( 1 , len ( s ) ) :
        if s [ i ] == '1' :
            if s [ i - 1 ] == '1' :
                one += 1
        else :
            if s [ i - 1 ] == '0' and one > 0 :
                print ( 'No' )
                return
    print ( 'YES' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1127
---> probID: geeksforgeeks_1914_A
---> inputs:

---> outputs:
1


def GFG ( N ) :
    maxm = - 1
    cnt = 0
    while N != 0 :
        if ( N & 1 ) == 0 :
            cnt += 1
            N >>= 1
            maxm = max ( maxm , cnt )
        else :
            maxm = max ( maxm , cnt )
            cnt = 0
            N >>= 1
    return maxm


---> console_out:
 
DIDN'T MATCH!! :(
 65%|██████▍   | 1127/1746 [00:27<00:14, 41.77it/s]

-------------------------------------


---> lineNum: 1128
---> probID: geeksforgeeks_1463_A
---> inputs:

---> outputs:
Index : 7  ,Length : 5


def get_longest_seq ( a , n ) :
    max_idx , max_len , curr_len , curr_idx = 0 , 0 , 0 , 0
    for k in range ( n ) :
        if a [ k ] > 0 :
            curr_len += 1
            if curr_len == 1 :
                curr_idx = k
        else :
            if curr_len > max_len :
                max_len = curr_len
                max_idx = curr_idx
            curr_len = 0
    if max_len :
        print ( "Index : " + str ( max_idx ) )
        print ( " ,Length : " + str ( max_len ) )
    else :
        print ( "No positive sequence detected." )
    return max_idx , max_len , curr_len , curr_idx


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1129
---> probID: geeksforgeeks_1617_A
---> inputs:

---> outputs:
1 2 3 
4 5 6 
7 8 9 


def Linked_list_2D_Matrix ( ) :
    class Node ( object ) :
        data = 0
        right = 0
        down = 0
    def construct ( arr , i , j , m , n ) :
        if i > n - 1 or j > m - 1 :
            return None
        temp = Node ( )
        temp . data = arr [ i ] [ j ]
        temp . right = construct ( arr , i , j + 1 , m , n )
        temp . down = construct ( arr , i + 1 , j , m , n )
        return temp
    def display ( head ) :
        Rp = None
        Dp = head
        while Dp :
            Rp = Dp
            while Rp :
                print ( Rp . data , end = ' ' )
                Rp = Rp . right
            print ( )
            Dp = Dp . down
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1130
---> probID: aizu_p02257_A
---> inputs:
5
2
3
4
5
6
---> outputs:
3

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        print ( msg )
        return
    for o , a in opts :
        if o in ( '-d' , '--debug' ) :
            if a == '-d' :
                debug ( )
    print ( '%d of %d is a permutation of %d elements' % ( len ( args ) , len ( args ) , len ( args ) ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1131
---> probID: geeksforgeeks_2623_A
---> inputs:

---> outputs:
14


def GFG ( N ) :
    ans = 0
    if N % 2 == 0 :
        ans = ( N / 2 ) * 6 + ( N / 2 ) * 2
    else :
        ans = ( N / 2 + 1 ) * 6 + ( N / 2 ) * 2
    print ( ans , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1132
---> probID: geeksforgeeks_4028_A
---> inputs:

---> outputs:
No


def GFG ( a , b , c , d ) :
    if a == b and a == c and a == d and c == d and b == c and b == d :
        return True
    elif a == b and c == d :
        return True
    elif a == d and c == b :
        return True
    elif a == c and d == b :
        return True
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(
 65%|██████▍   | 1132/1746 [00:27<00:14, 41.21it/s]

-------------------------------------


---> lineNum: 1133
---> probID: geeksforgeeks_4597_A
---> inputs:

---> outputs:
3
-1


def GFG ( a , b , m ) :
    n = int ( math . sqrt ( m ) + 1 )
    an = 1
    for i in range ( n ) :
        an = ( an * a ) % m
    value = [ ]
    for i , cur in enumerate ( an ) :
        if value [ cur ] == 0 :
            value . append ( i )
        cur = ( cur * an ) % m
    for i , cur in enumerate ( b ) :
        if value [ cur ] > 0 :
            ans = value [ cur ] * n - i
        else :
            ans = - 1
        if ans < m :
            return ans
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576728145_5098/main.py", line 13
    return dp [ ind ] = ans
                      ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1134
---> probID: geeksforgeeks_3584_A
---> inputs:

---> outputs:
30


def find_minimum_cost ( ind , a , n , k , dp ) :
    if ind == ( n - 1 ) :
        return 0
    elif dp [ ind ] != - 1 :
        return dp [ ind ]
    else :
        ans = int ( 0 )
        for i in range ( 1 , k + 1 ) :
            if ind + i < n :
                ans = min ( ans , abs ( a [ ind + i ] - a [ ind ] ) + find_minimum_cost ( ind + i , a , n , k , dp ) )
            else :
                break
        return dp [ ind ] = ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1135
---> probID: geeksforgeeks_3453_A
---> inputs:

---> outputs:
1 / 279936


def __gcd ( a , b ) :
    if a == 0 :
        return b
    if b == 0 :
        return a
    if a == b :
        return a
    if a > b :
        return __gcd ( a - b , b )
    return __gcd ( a , b - a )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576728191_7120/main.py", line 5
    nchoosek . append ( nchoosek [ i ] [ i ] = 1 )
                        ^
SyntaxError: expression cannot contain assignment, perhaps you meant "=="?


-------------------------------------


---> lineNum: 1136
---> probID: atcoder_ARC102_C
---> inputs:
200 1
---> outputs:
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200


def main ( ) :
    mod = 998244353
    nchoosek = [ ]
    for i in range ( 4001 ) :
        nchoosek . append ( nchoosek [ i ] [ i ] = 1 )
    for i in range ( 2 , len ( nchoosek ) ) :
        for j in range ( 1 , i ) :
            nchoosek [ i ] [ j ] = ( nchoosek [ i - 1 ] [ j ] + nchoosek [ i - 1 ] [ j - 1 ] ) % mod
    data = input ( )
    k = int ( data )
    n = int ( data )
    for i in range ( 2 , 2 * k ) :
        pairs = 0
        if i > k :
            pairs = k - i // 2
        else :
            pairs = ( i - 1 ) // 2
        active = k - 2 * pairs
        if i % 2 == 0 :
            active -= 1
        times2 = 1
        total = 0
        for j in range ( 0 , pairs ) :
            choice = times2 * nchoosek [ pairs ] [ j ] % mod
            times2 = times2 * 2 % mod
            if active + j - 1 < 0 :
                continue
            total += choice * nchoosek [ n + active - 1 ] [ active + j - 1 ]
            if i % 2 == 0 :
                total += choice * nchoosek [ n + active - 2 ] [ active + j - 1 ]
            total %= mod
        print ( total )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1137
---> probID: atcoder_ABC119_B
---> inputs:
2
10000 JPY
0.10000000 BTC
---> outputs:
48000.0

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , '' )
    except getopt . error as msg :
        sys . stdout . write ( msg + "\n" )
        sys . exit ( 1 )
    N = len ( args )
    total = 0
    for i in range ( N ) :
        money = float ( args [ i ] )
        A = args [ i ]
        B = 'JPY'
        if A == B :
            total += money
        else :
            total += money * 380000
    sys . stdout . write ( total + "\n" )


---> console_out:
 
DIDN'T MATCH!! :(
 65%|██████▌   | 1137/1746 [00:27<00:14, 41.22it/s]

-------------------------------------


---> lineNum: 1138
---> probID: geeksforgeeks_1012_A
---> inputs:

---> outputs:
5


def get_count ( arr , n , num1 , num2 ) :
    i = 0
    for i in range ( n ) :
        if arr [ i ] == num1 :
            break
    if i >= n - 1 :
        return 0
    j = 0
    for j in range ( n - 1 , i + 1 , - 1 ) :
        if arr [ j ] == num2 :
            break
    if j == i :
        return 0
    return ( j - i - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1139
---> probID: aizu_p01093_A
---> inputs:
5
10 10 10 10 10
5
1 5 8 9 11
7
11 34 83 47 59 29 70
0
---> outputs:
0
1
5

def main ( ) :
    parser = argparse . ArgumentParser ( description = 'Generate a simple histogram from a comma-separated list of numbers' )
    parser . add_argument ( '-n' , '--n' , type = int , help = 'number of points to generate' )
    parser . add_argument ( '-a' , '--a' , type = int , help = 'number of points to generate' )
    parser . add_argument ( '-b' , '--b' , type = int , help = 'number of points to generate' )
    parser . add_argument ( '-c' , '--c' , type = int , help = 'number of points to generate' )
    parser . add_argument ( '-d' , '--d' , type = int , help = 'number of points to generate' )
    parser . add_argument ( '-h' , '--h' , type = int , help = 'generate a histogram' )
    parser . add_argument ( '-i' , '--i' , type = int , help = 'generate a histogram' )
    parser . add_argument ( '-v' , '--v' , type = int , help = 'generate a histogram' )
    args = parser . parse_args ( )
    if args . n is None :
        parser . print_help ( )
        sys . exit ( 1 )
    arr = [ ]
    for i in range ( args . n ) :
        arr . append ( i )
    arr . sort ( )
    min = int ( arr [ 0 ] )
    for i in range ( 1 , args . n ) :
        min = min ( min , arr [ i ] - arr [ i - 1 ] )
    args . h = min
    args . v = arr
    args . b = arr
    args . c = arr
    args . d = arr
    args . h = args . h
    args . v = args . v
    args . c = args . c
    args . d = args . d


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1140
---> probID: geeksforgeeks_4829_A
---> inputs:

---> outputs:
9


def count_set_bits ( n ) :
    cnt = 0
    set_bits = [ 0 ] * ( n + 1 )
    for i in range ( 2 , n + 1 ) :
        if i % 2 == 0 :
            set_bits [ i ] = set_bits [ i / 2 ]
        else :
            set_bits [ i ] = set_bits [ i - 1 ] + 1
    for i in range ( 0 , n + 1 ) :
        cnt = cnt + set_bits [ i ]
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1141
---> probID: geeksforgeeks_1388_A
---> inputs:

---> outputs:
4


def GFG ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1142
---> probID: projecteuler_p179_A
---> inputs:

---> outputs:
986262

def p_p179 ( p ) :
    '''p179 : INTEGER '(' INTEGER ')' '''
    p [ 0 ] = int ( p [ 1 ] )
    LIMIT = library . pow ( 10 , 7 )
    num_divisors = [ ]
    p [ 0 ] = int ( p [ 1 ] )
    for i in range ( 2 , len ( p ) ) :
        for j in range ( i * 2 , len ( p ) , i ) :
            num_divisors . append ( j )
    count = 0
    for i in range ( 2 , len ( p ) - 1 ) :
        if p [ i ] == p [ i + 1 ] :
            count += 1
    return str ( count )


---> console_out:
 
DIDN'T MATCH!! :(
 65%|██████▌   | 1142/1746 [00:27<00:14, 41.49it/s]

-------------------------------------


---> lineNum: 1143
---> probID: geeksforgeeks_3873_A
---> inputs:

---> outputs:
-1 5 1 3 2 

def GFG ( arr , n ) :
    for i in range ( n - 1 , 0 , - 1 ) :
        arr [ i ] = arr [ i - 1 ]
    arr [ 0 ] = - 1
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1144
---> probID: geeksforgeeks_3878_A
---> inputs:

---> outputs:
10 14 12 13 11 

def GFG ( arr , n ) :
    sum = 0
    for i in range ( n ) :
        sum += arr [ i ]
    for i in range ( n ) :
        print ( sum - arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1145
---> probID: geeksforgeeks_3874_A
---> inputs:

---> outputs:
1 3 2 4 -1 

def GFG ( arr , n ) :
    for i in range ( 0 , n - 2 ) :
        arr [ i ] = arr [ i + 1 ]
    arr [ n - 1 ] = - 1
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1146
---> probID: geeksforgeeks_649_A
---> inputs:

---> outputs:
2


def GFG ( arr , n ) :
    min , second_min , max , second_max = ( arr [ 0 ] , arr [ 1 ] )
    min , second_max = ( arr [ 0 ] , arr [ 1 ] )
    for i in range ( 2 , n ) :
        if arr [ i ] > max :
            second_max = max
            max = arr [ i ]
        elif arr [ i ] > second_max :
            second_max = arr [ i ]
        elif arr [ i ] < min :
            second_min = min
            min = arr [ i ]
        elif arr [ i ] < second_min :
            second_min = arr [ i ]
    diff = min ( max - second_min , second_max - min )
    return diff


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1147
---> probID: codeforces_1025_B
---> inputs:
3
17 18
15 24
12 15
---> outputs:
['6', '2\n']

def helloworld ( ) :
    import sys
    import random
    num = random . randint ( 1 , 10 )
    pairs = [ [ random . randint ( 1 , 10 ) , random . randint ( 1 , 10 ) ] , [ random . randint ( 1 , 10 ) , random . randint ( 1 , 10 ) ] ]
    common_factors = set ( )
    for i in range ( num ) :
        X = pairs [ 0 ] [ i ]
        for k in range ( 2 , int ( math . ceil ( math . sqrt ( X ) ) ) + 1 ) :
            if X % k == 0 :
                while X % k == 0 :
                    X /= k
                common_factors . add ( k )
        if X != 1 :
            common_factors . add ( X )
    for val in common_factors :
        works = True
        for i in range ( len ( pairs ) ) :
            if pairs [ i ] [ 0 ] % val > 0 and pairs [ i ] [ 1 ] % val > 0 :
                works = False
                break
        if works :
            print ( val )
            return
    print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 66%|██████▌   | 1147/1746 [00:27<00:14, 41.67it/s]

-------------------------------------


---> lineNum: 1148
---> probID: aizu_p00594_A
---> inputs:
8
3 1 2 3 3 1 5 3
7
5 2 5 3 4 5 5
0
---> outputs:
NO COLOR
5

def main ( ) :
    f = open ( '/proc/cpuinfo' , 'r' )
    buf = f . read ( )
    f . close ( )
    while not buf . startswith ( '0' ) :
        n = int ( buf )
        parts = buf . split ( ':' )
        a = [ int ( p ) for p in parts ]
        a . sort ( )
        end = False
        for i in range ( n ) :
            count = 1
            j = a [ i ]
            i += 1
            while i < len ( a ) and j == a [ i ] :
                count += 1
                i += 1
            if count > n // 2 :
                print ( a [ i - 1 ] )
                end = True
            if end :
                break
        if not end :
            print ( 'NO COLOR' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1149
---> probID: geeksforgeeks_3996_A
---> inputs:

---> outputs:
Factorial of 5 is 120


def factorial ( n ) :
    return ( n if n == 1 or n == 0 else 1 ) * factorial ( n - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576728527_7475/main.py", line 2
    f = open

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1150
---> probID: aizu_p01719_A
---> inputs:
2 2 5
3 2
5 4
---> outputs:
9

def main ( ) :
    f = open

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1151
---> probID: codeforces_433_B
---> inputs:
6
6 4 2 7 2 7
3
2 3 6
1 3 4
1 1 6
---> outputs:
24
9
28

def test_er ( ) :
    f = open ( 'data/er.txt' , 'r' )
    out = open ( 'data/er.txt' , 'w' )
    solver = TaskB ( )
    solver . solve ( f , out )
    out . close ( )
class TaskB ( object ) :
    def __init__ ( self , f , out ) :
        self . f = f
        self . out = out
    def solve ( self , f , out ) :
        f . readline ( )
        n = int ( f . readline ( ) )
        a = [ ]
        sumA = [ ]
        sumB = [ ]
        a . append ( sumA )
        a . append ( sumB )
        a . append ( [ 0 ] * n )
        f . readline ( )
        for i in range ( 1 , n + 1 ) :
            a . append ( [ int ( f . readline ( ) ) , i ] )
            sumA . append ( sumA [ i - 1 ] + a [ i ] )
        a . sort ( )
        for i in range ( 1 , n + 1 ) :
            sumB . append ( [ int ( f . readline ( ) ) , i ] )
        f . readline ( )
        m = int ( f . readline ( ) )
        for i in range ( m ) :
            f . readline ( )
            type , l , r = int ( f . readline ( ) )
            if type == 1 :
                out . append ( sumA [ r ] - sumA [ l - 1 ] )
            else :
                out . append ( sumB [ r ] - sumB [ l - 1 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1152
---> probID: geeksforgeeks_2513_A
---> inputs:

---> outputs:
3


def find_minimum_x ( a , n ) :
    st = set ( )
    for i in range ( n ) :
        st . add ( a [ i ] )
    if len ( st ) == 1 :
        return 0
    if len ( st ) == 2 :
        it = st . pop ( )
        el1 = it . pop ( )
        el2 = it . pop ( )
        if ( el2 - el1 ) % 2 == 0 :
            return ( el2 - el1 ) // 2
        else :
            return ( el2 - el1 )
    if len ( st ) == 3 :
        it = st . pop ( )
        el1 = it . pop ( )
        el2 = it . pop ( )
        el3 = it . pop ( )
        if ( el2 - el1 ) == ( el3 - el2 ) :
            return el2 - el1
        else :
            return - 1


---> console_out:
 
DIDN'T MATCH!! :(
 66%|██████▌   | 1152/1746 [00:27<00:14, 41.26it/s]

-------------------------------------


---> lineNum: 1153
---> probID: geeksforgeeks_2612_A
---> inputs:

---> outputs:
3


def test_gfg ( ) :
    r = n , v , u
    m = int ( sqrt ( k ) + 1 )
    for i in range ( 2 , m and k > 1 ) :
        if i == m : i = k
        for u , v in itertools . combinations ( k , i ) :
            k //= i
        if v :
            t = n
            while t :
                t //= i
                u += t
            r = min ( r , u / v )
    return r


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1154
---> probID: geeksforgeeks_3673_A
---> inputs:

---> outputs:
Given point lies inside the rectangle


def GFG ( a , b , x , y ) :
    if x - y - b <= 0 and x - y + b >= 0 and x + y - 2 * a + b <= 0 and x + y - b >= 0 :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1155
---> probID: geeksforgeeks_1008_A
---> inputs:

---> outputs:
7


def GFG ( arr , n ) :
    N = 1000
    count = ( 2 * N ) + 1
    freq = [ 0 ] * ( size )
    for i in range ( n ) :
        x = arr [ i ]
        freq [ x + N ] += 1
    ans = 0
    for i in range ( size ) :
        if freq [ i ] > 0 :
            ans += ( ( freq [ i ] ) * ( freq [ i ] - 1 ) ) / 2
            for j in range ( i + 2 , 2001 , 2 ) :
                if freq [ j ] > 0 and ( freq [ ( i + j ) / 2 ] > 0 ) :
                    ans += ( freq [ i ] * freq [ j ] )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1156
---> probID: geeksforgeeks_1753_A
---> inputs:

---> outputs:
Average of 1 numbers is 10.0
Average of 2 numbers is 15.0
Average of 3 numbers is 20.0
Average of 4 numbers is 25.0
Average of 5 numbers is 30.0
Average of 6 numbers is 35.0


def GFG ( arr , n ) :
    sum , n = 0 , n
    getAvg = sum
    for i in range ( n ) :
        avg = getAvg ( int ( arr [ i ] ) )
        print ( "Average of %d numbers is %f" % ( i + 1 , avg ) )
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1157
---> probID: geeksforgeeks_1327_A
---> inputs:

---> outputs:
YES
NO


def test_GFG ( ) :
    MAX = 10000
    s = set ( )
    SieveOfEratosthenes ( )
    prime = [ True for i in range ( MAX ) ]
    for p in range ( 2 , MAX * 2 ) :
        if prime [ p ] is True :
            for i in range ( p * 2 , MAX , p ) :
                prime [ i ] = False
    product = 1
    for p in range ( 2 , MAX ) :
        if prime [ p ] :
            product = product * p
            s . add ( product + 1 )
    is_euclid = set ( ) . intersection ( s )
    n = 31
    if is_euclid :
        assert 'YES' == product
    else :
        assert 'NO' == product
    n = 42
    if is_euclid :
        assert 'YES' == product
    else :
        assert 'NO' == product


---> console_out:
 
DIDN'T MATCH!! :(
 66%|██████▋   | 1157/1746 [00:28<00:14, 41.17it/s]

-------------------------------------


---> lineNum: 1158
---> probID: codeforces_998_B
---> inputs:
6 4
1 2 5 10 15 20
---> outputs:
1

def test_SS ( ) :
    x = symbols ( 'x' )
    n = symbols ( 'n' , integer = True )
    b = symbols ( 'b' , integer = True )
    arr = [ ]
    v = [ ]
    odd , even , count = divmod ( n , 2 )
    for i in arr :
        v . append ( abs ( arr [ i ] - arr [ i - 1 ] ) )
    for i in arr :
        if i != 0 and odd == even :
            v . append ( abs ( arr [ i ] - arr [ i - 1 ] ) )
        if arr [ i ] % 2 == 0 :
            even += 1
        else :
            odd += 1
    v . sort ( )
    for i in v :
        if b >= v [ i ] :
            count += 1
            b -= v [ i ]
    assert count == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1159
---> probID: geeksforgeeks_1892_A
---> inputs:

---> outputs:
1


def GFG ( str ) :
    i , g , gk , gks = 0 , 0 , 0 , 0
    for c in str :
        if c == 'g' : g += 1
        elif c == 'k' :
            if g > 0 :
                g -= 1
                gk += 1
        elif c == 's' :
            if gk > 0 :
                gk -= 1
                gks += 1
    return gks


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1160
---> probID: codeforces_1041_A
---> inputs:
4
10 13 12 8
---> outputs:
2

def main ( ) :
    import sys
    n = len ( sys . argv )
    a = [ ]
    for i in range ( n ) :
        a . append ( sys . argv [ i ] )
    a . sort ( )
    min , max = a [ 0 ] , a [ n - 1 ]
    res = max - min + 1 - n
    print ( res )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1161
---> probID: codeforces_216_B
---> inputs:
5 4
1 2
2 4
5 3
1 4
---> outputs:
1

def get_form ( ) :
    import sys
    import random
    import collections
    import pickle
    from collections import deque
    from collections import defaultdict
    from collections import namedtuple
    from collections import defaultdict
    from collections import namedtuple
    from collections import deque
    from collections import defaultdict
    from collections import namedtuple
    from collections import deque
    from collections import namedtuple
    from collections import namedtuple
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    from collections import deque
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1162
---> probID: geeksforgeeks_3971_A
---> inputs:

---> outputs:
K'th smallest element is 5


def test_GFG ( ) :
    arr = np . array ( [ 12 , 3 , 5 , 7 , 19 ] )
    k = 2
    assert np . all ( np . isclose ( arr [ k - 1 ] , arr [ k ] ) )


---> console_out:
 
DIDN'T MATCH!! :(
 67%|██████▋   | 1162/1746 [00:28<00:14, 41.26it/s]

-------------------------------------


---> lineNum: 1163
---> probID: codeforces_1689_B
---> inputs:
4
3
1 2 3
5
2 3 4 5 1
4
2 3 1 4
1
1
---> outputs:
2 3 1
1 2 3 4 5
1 2 4 3
-1

def test_ques ( ) :
    import numpy as np
    import random
    t = np . linspace ( 0 , 1 , 100 )
    for i in range ( t ) :
        n = random . randint ( 1 , 10 )
        arr = np . zeros ( ( n , ) )
        arr2 = np . zeros ( ( n , ) )
        try :
            for j in range ( n ) :
                arr [ j ] = random . randint ( 1 , 10 )
                arr2 [ j ] = j + 1
            for j in range ( n - 1 ) :
                if arr2 [ j ] == arr [ j ] :
                    temp = arr2 [ j ]
                    arr2 [ j ] = arr2 [ j + 1 ]
                    arr2 [ j + 1 ] = temp
            if arr2 [ n - 1 ] == arr [ n - 1 ] :
                temp = arr2 [ n - 1 ]
                arr2 [ n - 1 ] = arr2 [ n - 2 ]
                arr2 [ n - 2 ] = temp
            for j in range ( n ) :
                print ( arr2 [ j ] , end = ' ' )
            print ( )
        except :
            print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576728870_9076/main.py", line 4
    
    ^
SyntaxError: EOF while scanning triple-quoted string literal


-------------------------------------


---> lineNum: 1164
---> probID: projecteuler_p329_A
---> inputs:

---> outputs:
199740353/29386561536000

def p_p329 ( p ) :
    ''' p
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1165
---> probID: geeksforgeeks_3653_A
---> inputs:

---> outputs:
2.0043678382716137 K.M


def test_GFG ( ) :
    lon1 = np . array ( [ - 1 , 1 , 1 , 1 ] )
    lon2 = np . array ( [ - 1 , 1 , 1 , 1 ] )
    lat1 = np . array ( [ - 1 , 1 , 1 , 1 ] )
    lat2 = np . array ( [ - 1 , 1 , 1 , 1 ] )
    dlon = lon2 - lon1
    dlat = lat2 - lat1
    a = np . power ( np . sin ( dlat / 2 ) , 2 ) + np . cos ( lat1 ) * np . cos ( lat2 ) * np . power ( np . sin ( dlon / 2 ) , 2 )
    c = 2 * np . asin ( np . sqrt ( a ) )
    r = 6371
    assert ( c * r ) . all ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1166
---> probID: geeksforgeeks_1730_A
---> inputs:

---> outputs:
63
1159


def test_GFG ( ) :
    assert ( 2 * n + 1 ) ** ( 2 * n ** 2 + 2 * n + 3 ) / 3 == 2 * n ** 2 + 3 * n ** 3 + 4 * n ** 4 + 5 * n ** 5 + 6 * n ** 6 + 7 * n ** 7 + 8 * n ** 8 + 9 * n ** 9 + 10 * n ** 10 + 11 * n ** 11 + 12 * n ** 12 + 13 * n ** 13 + 14 * n ** 14 + 15 * n ** 15 + 16 * n ** 16 + 17 * n ** 17 + 18 * n ** 18 + 19 * n ** 19 + 20 * n ** 20 + 21 * n ** 21 + 22 * n ** 22 + 23 * n ** 23 + 24 * n ** 24 + 25 * n ** 25 + 26 * n ** 26 + 27 * n ** 27 + 28 * n ** 28 + 29 * n ** 28 + 30 * n ** 30 + 31 * n ** 31 + 32 * n ** 31 + 33 * n ** 33 + 34 * n ** 33 + 35 * n ** 36 + 36 * n ** 36 + 37 * n ** 37 + 38 * n ** 38 + 39 * n ** 38 + 40 * n ** 40 + 41 * n ** 41 + 42 * n ** 42 + 42 * n ** 42 + 43 * n ** 43 + 44 * n ** 44 + 45 * n ** 45 + 46 * n ** 46 + 47 * n ** 47 + 48 * n ** 47 + 49 * n ** 47 + 60 * n ** 47 + 61 * n ** 47 + 62 * n ** 47 + 63 * n ** 47 + 64 * n ** 47 + 65

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1167
---> probID: aizu_p00294_A
---> inputs:
5 4 0
1
2
3
4
---> outputs:
400

def main ( ) :
    import sys
    import getopt
    import os
    import string
    import struct
    import time
    import math
    import random
    import math
    import sys
    import string
    import struct
    import time
    import math
    import math
    import random
    import string
    import struct
    import math
    import math
    import random
    import string
    import struct
    import math
    import math
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string

---> console_out:
 
DIDN'T MATCH!! :(
 67%|██████▋   | 1167/1746 [00:28<00:14, 41.12it/s]

-------------------------------------


---> lineNum: 1168
---> probID: geeksforgeeks_90_A
---> inputs:

---> outputs:
YES


def Solution ( A ) :
    max = int ( '-1' )
    for i in range ( len ( A ) ) :
        if max < A [ i ] :
            max = A [ i ]
    return max


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1169
---> probID: geeksforgeeks_4231_A
---> inputs:

---> outputs:
5 7 9 1 3 
7 9 1 3 5 
9 1 3 5 7 


def test_GFG ( ) :
    arr = [ 1 , 3 , 5 , 7 , 9 ]
    n = len ( arr )
    k = 2
    left_rotate ( arr , n , k )
    print ( )
    k = 3
    left_rotate ( arr , n , k )
    print ( )
    k = 4
    left_rotate ( arr , n , k )
    print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1170
---> probID: geeksforgeeks_4568_A
---> inputs:

---> outputs:
56295


def pythree_prime ( n , x ) :
    if x > n :
        return x
    n = n + x // 2
    n = n - ( n % x )
    return n


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576729039_5182/main.py", line 3
    f = open ( ' / home / jeko

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1171
---> probID: codeforces_1266_A
---> inputs:
6
603
006
205
228
1053
0000000000000000000000000000000000000000000000
---> outputs:
red
red
cyan
cyan
cyan
red

def compititive_programmer ( ) :
    t = 0
    f = open ( ' / home / jeko

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576729067_5663/main.py", line 14
    return dp [ a ] [ b ] = ans
                          ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1172
---> probID: geeksforgeeks_2258_A
---> inputs:

---> outputs:
99

def get_GFG ( a , b ) :
    dp = [ [ 901 , 8101 ] , [ 901 , 8201 ] ]
    if a > b or a < 0 or b < 0 or a > 900 or b > 8100 :
        return - 1
    if a == 0 and b == 0 :
        return 0
    if dp [ a ] [ b ] != - 1 :
        return dp [ a ] [ b ]
    ans = 101
    for i in range ( 9 , - 1 , - 1 ) :
        k = minimum_number_of_digits ( a - i , b - ( i * i ) )
        if k != - 1 :
            ans = min ( ans , k + 1 )
    return dp [ a ] [ b ] = ans


---> console_out:
 
DIDN'T MATCH!! :(
 67%|██████▋   | 1172/1746 [00:28<00:14, 40.92it/s]

-------------------------------------


---> lineNum: 1173
---> probID: geeksforgeeks_4844_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    N = 5005
    n , k = 500 , 2
    gr = Vector ( N )
    d = [ 0 ] * 505
    ans = 0
    def Add_edge ( x , y ) :
        gr [ x ] . append ( y )
        gr [ y ] . append ( x )
    def dfs ( v , par ) :
        d [ v ] [ 0 ] = 1
        for i in gr [ v ] :
            if i != par :
                dfs ( i , v )
                for j in range ( 1 , k + 1 ) :
                    ans += d [ i ] [ j - 1 ] * d [ v ] [ k - j ]
                for j in range ( 1 , k + 1 ) :
                    d [ v ] [ j ] += d [ i ] [ j - 1 ]
    for i in range ( N ) :
        gr [ i ] = [ ]
    Add_edge ( 1 , 2 )
    Add_edge ( 2 , 3 )
    Add_edge ( 3 , 4 )
    Add_edge ( 2 , 5 )
    dfs ( 1 , 0 )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1174
---> probID: geeksforgeeks_2115_A
---> inputs:

---> outputs:
5


def find_subsequence ( arr , n ) :
    len = 1
    tmp = None
    i , j , d = 0 , 0 , 0
    dp = [ 0 ] * 10
    cnt = [ 0 ] * 10
    loc_max = 0
    tmp = arr [ 0 ]
    while tmp > 0 :
        dp [ tmp % 10 ] = 1
        tmp /= 10
    for i in range ( 1 , n ) :
        tmp = arr [ i ]
        loc_max = 1
        del cnt [ tmp % 10 ]
        while tmp > 0 :
            cnt [ tmp % 10 ] = 1
            tmp /= 10
        for d in range ( 0 , 9 ) :
            if cnt [ d ] == 1 :
                dp [ d ] += 1
                loc_max = max ( loc_max , dp [ d ] )
        for d in range ( 0 , 9 ) :
            if cnt [ d ] == 1 :
                dp [ d ] = loc_max
        len = max ( len , loc_max )
    return len


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1175
---> probID: codeforces_1453_A
---> inputs:
3
1 2
1
3 4
3 2
1 3 4
2 4
9 14
2 7 16 28 33 57 59 86 99
3 9 14 19 25 26 28 35 41 59 85 87 99 100
---> outputs:
0
1
3

def main ( ) :
    import sys
    t = sys . argv [ 1 ]
    for i in range ( t ) :
        n , m = i
        set = set ( [ n , m ] )
        count = 0
        for j in range ( n ) :
            if set . count ( j ) == 0 :
                count += 1
        print ( count )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576729164_7942/main.py", line 1
    def class GCD ( n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1176
---> probID: geeksforgeeks_1336_A
---> inputs:

---> outputs:
Total possible pair with GCD 2 & LCM 12 = 4


def class GCD ( n ) :
    count = 0
    if ( n % 2 == 0 ) :
        count += 1
        while ( n % 2 == 0 ) :
            n /= 2
    for i in range ( 3 , i * i <= n , 2 ) :
        if ( n % i == 0 ) :
            count += 1
        while ( n % i == 0 ) :
            n /= 2
    if n > 2 :
        count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1177
---> probID: geeksforgeeks_2376_A
---> inputs:

---> outputs:
Sum of multiples of  7  up to  49  =  196.0


def GFG ( a , N ) :
    m = N // a
    sum = m * ( m + 1 ) // 2
    ans = a * sum
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 67%|██████▋   | 1177/1746 [00:28<00:13, 41.24it/s]

-------------------------------------


---> lineNum: 1178
---> probID: codeforces_105_A
---> inputs:
5 4 0.75
axe 350
impaler 300
ionize 80
megafire 120
magicboost 220
heal
megafire
shield
magicboost
---> outputs:
6
axe 262
heal 0
impaler 225
magicboost 165
megafire 0
shield 0

def test_transmigration ( ) :
    f = open ( 'transmigration.txt' , 'r' )
    f . close ( )
    n = int ( f . readline ( ) )
    m = int ( f . readline ( ) )
    k = int ( f . readline ( ) [ 2 : ] )
    skills = defaultdict ( int )
    for i in range ( n ) :
        f = open ( 'transmigration.txt' , 'w' )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )
        f . write ( '%d %d\n' % ( i , i ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1179
---> probID: geeksforgeeks_3737_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    a = 3
    assert count_solutions ( a ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1180
---> probID: geeksforgeeks_3581_A
---> inputs:

---> outputs:
5


def _GFG ( arr , target ) :
    start , end = 0 , len ( arr ) - 1
    ans = - 1
    while start <= end :
        mid = ( start + end ) // 2
        if arr [ mid ] <= target :
            start = mid + 1
        else :
            ans = mid
            end = mid - 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576729282_5931/main.py", line 5
    do :
       ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1181
---> probID: geeksforgeeks_5090_A
---> inputs:

---> outputs:
three five zero 

def GFG ( n ) :
    word = [ 'zero' , 'one' , 'two' , 'three' , 'four' , 'five' , 'six' , 'seven' , 'eight' , 'nine' ]
    digits = [ ]
    dc = 0
    do :
        digits . append ( n % 10 )
        n = n / 10
        dc += 1
    while n != 0 :
        for i in range ( dc - 1 , - 1 , - 1 ) :
            print ( word [ digits [ i ] ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1182
---> probID: codeforces_1111_B
---> inputs:
2 4 6
4 7
---> outputs:
11.00000000000000000000

def main ( ) :
    f = open ( './junk/1692576729306_4473/input.txt' , 'r' )
    out = open ( './junk/1692576729306_4473/output.txt' , 'w' )
    st = f . readline ( ) . split ( )
    n = int ( st [ 0 ] )
    k = int ( st [ 1 ] )
    m = int ( st [ 2 ] )
    a = [ ]
    st = f . readline ( ) . split ( )
    sum = 0
    for i in range ( n ) :
        a . append ( int ( st [ i ] ) )
        sum += a [ i ]
    a . sort ( )
    max = ( sum + min ( m , n * k ) ) / float ( n )
    for i in range ( min ( n , m + 1 ) ) :
        sum -= a [ i - 1 ]
        max = max ( max , ( sum + min ( m - i , ( n - i ) * k ) ) / float ( ( n - i ) ) )
    out . write ( '%.20f\n' % max )
    f . close ( )
    out . close ( )


---> console_out:
 
DIDN'T MATCH!! :(
 68%|██████▊   | 1182/1746 [00:28<00:13, 41.50it/s]

-------------------------------------


---> lineNum: 1183
---> probID: geeksforgeeks_4704_A
---> inputs:

---> outputs:
4


def GFG ( a , b ) :
    l = len ( a )
    min , max = 0 , 0
    for i in range ( l ) :
        if a [ i ] == '+' or b [ i ] == '+' or a [ i ] != b [ i ] :
            max += 1
        if a [ i ] != '+' and b [ i ] != '+' and a [ i ] != b [ i ] :
            min += 1
    print ( min , max , '\n' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1184
---> probID: geeksforgeeks_464_A
---> inputs:

---> outputs:
Total Ways =  3


def GFG ( n , s , k ) :
    dp = [ 1 ] * n
    for i in range ( s , n ) :
        idx = max ( s - 1 , i - k )
        for j in range ( idx , i ) :
            dp [ i ] += dp [ j ]
    return dp [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1185
---> probID: geeksforgeeks_5132_A
---> inputs:

---> outputs:
Even count :  2

Odd count :  5
YES


def test_GFG ( ) :
    even_count = 0
    odd_count = 0
    while n > 0 :
        rem = n % 10
        if rem % 2 == 0 :
            even_count += 1
        else :
            odd_count += 1
        n = n / 10
    assert even_count == 0
    assert odd_count == 0
    if even_count % 2 == 0 and odd_count % 2 != 0 :
        return 1
    else :
        return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1186
---> probID: aizu_p00484_A
---> inputs:
7 4
14 1
13 2
12 3
14 2
8 2
16 3
11 2
---> outputs:
60

def main ( ) :
    import sys
    import getopt
    global n , k , lists
    n = int ( sys . argv [ 1 ] )
    k = int ( sys . argv [ 2 ] )
    lists = [ [ ] for i in range ( 10 ) ]
    for i in range ( n ) :
        lists [ i ] = [ ]
    for i in range ( n ) :
        c = sys . argv [ 1 ]
        g = sys . argv [ 3 ] - 1
        lists [ g ] . append ( c )
    dp = [ - 1 ] * k + [ 0 ] * k
    dp [ 0 ] = 0
    for i in range ( 10 ) :
        del lists [ i ] ;
        for j in range ( k - 1 , - 1 , - 1 ) :
            if dp [ j ] == - 1 :
                continue
            sum = 0
            for l in lists [ i ] :
                sum += lists [ i ] [ l ]
                dp [ j + l + 1 ] = max ( dp [ j + l + 1 ] , dp [ j ] + sum + ( l + 1 ) * l )
    print ( dp [ k ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1187
---> probID: geeksforgeeks_3634_A
---> inputs:

---> outputs:
1


def test_GFG ( ) :
    class Point ( object ) :
        x , y = symbols ( 'x,y' )
    a , b , c , d = symbols ( 'a,b,c,d' )
    for p in [ Point ( 1 , 1 ) , Point ( 2 , 2 ) , Point ( - 1 , - 1 ) , Point ( - 2 , 2 ) ] :
        if p [ 0 ] <= 0 :
            a += 1
        elif p [ 0 ] >= 0 :
            b += 1
        if p [ 1 ] >= 0 :
            c += 1
        elif p [ 1 ] <= 0 :
            d += 1
    assert findmin ( [ a , b , c , d ] ) == ( a , b )


---> console_out:
 
DIDN'T MATCH!! :(
 68%|██████▊   | 1187/1746 [00:28<00:13, 41.56it/s]  File "./junk/1692576729450_2584/main.py", line 1
    def import ( N , P ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1188
---> probID: geeksforgeeks_5072_A
---> inputs:

---> outputs:
2


def import ( N , P ) :
    ans = 1
    prime_factors = { }
    for i in range ( 2 , P * P + 1 ) :
        while P % i == 0 :
            if prime_factors [ i ] is None :
                prime_factors [ i ] = 1
            else :
                prime_factors [ i ] = ( prime_factors [ i ] + 1 )
            P /= i
    if P != 1 :
        if prime_factors [ P ] is None :
            prime_factors [ P ] = 1
        else :
            prime_factors [ P ] = ( prime_factors [ P ] + 1 )
    st = prime_factors . items ( )
    for me in st :
        ans *= math . pow ( me [ 0 ] , me [ 1 ] / N )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1189
---> probID: aizu_p02429_A
---> inputs:
4
2 0 2
---> outputs:
0:
1: 0
4: 2
5: 0 2

def main ( ) :
    import sys
    n = len ( sys . argv )
    k = len ( sys . argv )
    mask = [ 0 ] * k
    for i in range ( k ) :
        mask [ i ] = sys . argv [ i ]
    for i in range ( math . pow ( 2 , k ) ) :
        bitArray = [ 0 ] * n
        temp = i
        index = 0
        for j in range ( 0 , temp > 0 ) :
            if temp % 2 == 1 :
                bitArray [ mask [ j ] ] = 1
                index += math . pow ( 2 , mask [ j ] )
            temp /= 2
        sys . stdout . write ( "%d:" % index )
        for j in range ( k ) :
            if bitArray [ mask [ j ] ] == 1 :
                sys . stdout . write ( " " + str ( mask [ j ] ) )
        sys . stdout . write ( "\n" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1190
---> probID: geeksforgeeks_9_A
---> inputs:

---> outputs:
1 3 2 6 

def test_GFG ( ) :
    class PrimeFactorization ( object ) :
        count_of_pf , primefactor = 1 , 2
        def __init__ ( self , count_of_pf , primefactor ) :
            self . count_of_pf = count_of_pf
            self . primefactor = primefactor
        def generate_divisors ( self , cur_index , cur_divisor , arr ) :
            if cur_index == len ( arr ) :
                print ( cur_divisor , end = ' ' )
                return
            for i in range ( 0 , arr [ cur_index ] . count_of_pf ) :
                generate_divisors ( cur_index + 1 , cur_divisor , arr )
                cur_divisor *= arr [ cur_index ] . primefactor
        def find_divisors ( n ) :
            arr = [ ]
            for i in range ( 2 , n * i <= n ) :
                if n % i == 0 :
                    count = 0
                else :
                    n //= i
                    count += 1
                arr . append ( ( count , i ) )
        if n > 1 :
            arr = [ 1 , n ]
        cur_index , cur_divisor = 0 , 1
        generate_divisors ( cur_index , cur_divisor , arr )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1191
---> probID: codeforces_607_A
---> inputs:
4
1 9
3 1
6 1
7 4
---> outputs:
1

def chain ( ) :
    import sys
    import numpy
    import numpy
    import numpy . linalg
    import numpy . ma
    import numpy . ma
    import numpy . ma . core as ma
    import numpy . ma . core as ma
    import numpy . ma . core as ma
    import numpy . ma . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma
    import numpy . core . core as ma


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1192
---> probID: geeksforgeeks_2850_A
---> inputs:

---> outputs:
ss


def GFG ( s ) :
    res = ""
    mx = s [ 0 ]
    for i in range ( 1 , len ( s ) ) :
        mx = chr ( max ( int ( mx ) , int ( s [ i ] ) ) )
    for i in range ( len ( s ) ) :
        if s [ i ] == mx :
            res += s [ i ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(
 68%|██████▊   | 1192/1746 [00:28<00:13, 41.48it/s]

-------------------------------------


---> lineNum: 1193
---> probID: aizu_p00429_A
---> inputs:
5
11
5
11
0
---> outputs:
13112221
13112221

def main ( ) :
    import sys
    while 1 :
        n = input ( ) . split ( )
        if n == '' :
            break
        s = '' . join ( [ x for x in n . split ( ) if x ] )
        count = 0
        t = 0
        u = ''
        for k in range ( n ) :
            for i in range ( len ( s ) ) :
                count = 1
                t = s [ i ]
                while i < len ( s ) - 1 and s [ i + 1 ] == t :
                    i += 1
                    count += 1
                u += count
                u += chr ( t )
            s = u + s [ : i ]
            u = u + u [ i + 1 : ]
        sys . stdout . write ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1194
---> probID: codeforces_264_B
---> inputs:
5
2 3 4 6 9
---> outputs:
4

def get_good_seq ( n ) :
    import sys
    import getopt
    dp = [ 100001 ]
    def factoriseopt ( n ) :
        ans = [ ]
        if n == 1 :
            ans . append ( 1 )
            return ans
        for i in range ( 2 , n * i <= n ) :
            if n % i == 0 :
                cnt = 0
                while n % i == 0 :
                    cnt += 1
                    n = n // i
                ans . append ( i )
        if n != 1 :
            ans . append ( n )
        return ans
    getopt . getopt ( sys . argv [ 1 ] , '' , [ '--list' , '--max' , '--min' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , '--max' , ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1195
---> probID: geeksforgeeks_3577_A
---> inputs:

---> outputs:
20 15 20 40 
20 35 70 60 


def GFG ( A , D ) :
    n = len ( A )
    D [ 0 ] = A [ 0 ]
    D [ n ] = 0
    for i in range ( 1 , n ) :
        D [ i ] = A [ i ] - A [ i - 1 ]
    update ( D , l , r , x )
    D [ l ] += x
    D [ r + 1 ] -= x
    printArray ( A , D )
    printArray ( D , 1 , 3 , 20 )
    printArray ( D , 2 , 2 , 30 )
    printArray ( A , D )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1196
---> probID: geeksforgeeks_1559_A
---> inputs:

---> outputs:
Maximum Number of Guests = 3 at time 5


def get_max_guests ( arrl , exit , n ) :
    arrl = sorted ( arrl )
    exit = sorted ( exit )
    guests_in , max_guests , time = 1 , 1 , arrl [ 0 ]
    i , j = 1 , 0
    while i < n and j < n :
        if arrl [ i ] <= exit [ j ] :
            guests_in += 1
            if guests_in > max_guests :
                max_guests = guests_in
                time = arrl [ i ]
            i += 1
        else :
            guests_in -= 1
            j += 1
    print ( "Maximum Number of Guests = " + str ( max_guests ) + " at time " + str ( time ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1197
---> probID: aizu_p01213_A
---> inputs:
ABCABCABAB
ZZZZZZZZZZZZ
#END
---> outputs:
ABAB
ZZZZZZ

def main ( ) :
    import sys
    import getopt
    for f in sys . argv [ 1 : ] :
        if f == '#END' :
            return
        ans = ''
        for i in f . split ( '\n' ) :
            lcs = lcs ( i . lstrip ( ) , i . lstrip ( ) )
            if len ( lcs ) > len ( ans ) :
                ans = lcs
        print ( ans )
    lcs ( s , t )
    n = len ( s )
    m = len ( t )
    dp = [ ]
    for i in range ( n + 1 ) :
        for j in range ( m ) :
            if s [ i ] == t [ j ] :
                dp . append ( dp [ i ] + 1 )
            else :
                dp . append ( max ( dp [ i + 1 ] [ j ] , dp [ i ] [ j + 1 ] ) )
    res = [ ]
    while n > 0 and m > 0 :
        if dp [ n ] [ m ] == dp [ n - 1 ] [ m ] :
            n -= 1
        elif dp [ n ] [ m ] == dp [ n ] [ m - 1 ] :
            m -= 1
        else :
            res . append ( s [ n - 1 ] )
            n -= 1
            m -= 1
    return str ( res )


---> console_out:
 
DIDN'T MATCH!! :(
 69%|██████▊   | 1197/1746 [00:29<00:13, 41.50it/s]

-------------------------------------


---> lineNum: 1198
---> probID: geeksforgeeks_5193_A
---> inputs:

---> outputs:
1/36450000


def GFG ( n , r ) :
    final_denominator = 1
    mx = max ( r , n - r )
    for i in range ( mx + 1 , n + 1 ) :
        denominator = int ( math . pow ( i , i ) )
        numerator = int ( math . pow ( i - mx , i - mx ) )
        final_denominator = ( final_denominator * denominator ) / numerator
    return final_denominator


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1199
---> probID: geeksforgeeks_3412_A
---> inputs:

---> outputs:
Yes


def test_GFG ( ) :
    """Test the GFG algorithm."""
    sr = int ( sqrt ( x ) )
    if sr ** 2 == x :
        assert "Yes" == str ( sr )
    else :
        assert "No" == str ( sr )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1200
---> probID: atcoder_AGC003_C
---> inputs:
1
114
---> outputs:
0

def main ( ) :
    import sys
    N = int ( 1e5 + 2 )
    d = { }
    nums = PriorityQueue ( )
    for i in range ( N ) :
        tmp = sys . stdin . readline ( )
        nums . append ( tmp )
        d [ tmp ] = i
    bin = 0
    diff = 0
    while not nums . empty ( ) :
        num = nums . pop ( )
        idx = d [ num ]
        if ( bin % 2 ) != ( idx % 2 ) :
            diff += 1
        bin += 1
        bin %= 2
    ans = ( diff // 2 )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1201
---> probID: codeforces_653_A
---> inputs:
4
18 55 16 17
---> outputs:
YES

def test_A ( ) :
    with open ( 'a.txt' , 'w' ) as f :
        n = len ( a )
        a = [ ]
        for i in range ( n ) :
            value = a [ i ]
            a . append ( value )
        a = a . copy ( )
        found = False
        for i in range ( len ( a ) ) :
            if i + 1 < len ( a ) and i + 2 < len ( a ) :
                if a [ i ] + 1 == a [ i + 1 ] and a [ i + 1 ] + 1 == a [ i + 2 ] :
                    found = True
        f . write ( found and 'YES' or 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1202
---> probID: aizu_p00262_A
---> inputs:
6
1 4 1 3 2 4
5
1 2 3 4 5
10
1 1 1 1 1 1 1 1 1 1
9
1 1 1 1 1 1 1 1 1
12
1 4 1 3 2 4 3 3 2 1 2 2
1
5050
3
10000 10000 100
0
---> outputs:
24
0
10
-1
48
5049
-1

def main ( ) :
    import sys
    import getopt
    try :
        check ( )
    except getopt . GetoptError :
        usage ( )
    for i in range ( 1 , len ( sys . argv ) ) :
        if sys . argv [ i - 1 ] != '-' :
            usage ( )
    gap ( )
    def removeGap ( b ) :
        for i in range ( len ( b ) ) :
            if b [ i ] <= 0 :
                return False
        return True
    def removeGap ( b ) :
        for i in range ( len ( b ) ) :
            if b [ i ] <= 0 :
                b . pop ( i )
                i -= 1
                continue
        b . trimToSize ( )
    def main ( ) :
        stdIn = sys . stdin
        stdOut = sys . stdout
        while True :
            N = stdIn . readline ( )
            if N == '' :
                break
            for i in range ( N ) :
                stdOut . write ( sys . stdin . read ( ) )
            c = 0
            while not check ( ) and c < 10000 :
                c += 1
                if gap ( stdOut ) :
                    size = len ( stdOut )
                    for i in range ( len ( stdOut ) ) :
                        stdOut [ i ] = stdOut [ i ] - 1
                    stdOut . append ( size )
                removeGap ( stdOut )
            print ( ( check ( ) ) and c or - 1 )
            stdOut . clear ( )
            stdOut . trimToSize ( )
            del stdIn
            stdOut . clear ( )
            stdOut . trimToSize ( )
            sys . stdout . flush ( )
    

---> console_out:
 
DIDN'T MATCH!! :(
 69%|██████▉   | 1202/1746 [00:29<00:13, 41.51it/s]

-------------------------------------


---> lineNum: 1203
---> probID: geeksforgeeks_2677_A
---> inputs:

---> outputs:
No
Yes


def test_GFG ( ) :
    S = '156457463274623847239840239'
    if S [ - 1 ] != '5' and S [ - 1 ] != '0' :
        return False
    sum = 0
    for i in range ( len ( S ) ) :
        sum += int ( S [ i ] )
    if sum % 3 == 0 :
        return True
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1204
---> probID: projecteuler_p142_A
---> inputs:

---> outputs:
1006193

def p142 ( ) :
    print ( [ 'p142.py' , 'p142.pl' ] )
    global isSquare
    sumLimit = 10
    while True :
        isSquare = [ ]
        for i in range ( 0 , sumLimit ) :
            isSquare . append ( True )
        sum = findSum ( sumLimit )
        if sum != - 1 :
            sum = sumLimit
            break
        sumLimit *= 10
    while True :
        sum = findSum ( sumLimit )
        if sum == - 1 :
            return str ( sumLimit )
        sumLimit = sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1205
---> probID: geeksforgeeks_2775_A
---> inputs:

---> outputs:
1101


def GFG ( s , n , k ) :
    count_vowels = 0
    count_concluants = 0
    ans = ""
    for l in range ( 0 , n - k ) :
        count_vowels = 0
        count_concluants = 0
        for r in range ( l , l + k - 1 ) :
            if is_vowel ( s [ r ] ) is True :
                count_vowels += 1
            else :
                count_concluants += 1
        ans += str ( count_vowels * count_concluants )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576729884_4126/main.py", line 2
    f = open ( ' / home / kryan

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1206
---> probID: atcoder_AGC028_A
---> inputs:
3 2
acp
ae
---> outputs:
6

def main ( ) :
    f = open ( ' / home / kryan

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1207
---> probID: codeforces_203_B
---> inputs:
4 11
1 1
1 2
1 3
2 2
2 3
1 4
2 4
3 4
3 2
3 3
4 1
---> outputs:
10

def test_b203 ( ) :
    x = symbols ( 'x' , real = True )
    N = symbols ( 'N' , integer = True , positive = True )
    M = symbols ( 'M' , integer = True , positive = True )
    black = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]
    

---> console_out:
 
DIDN'T MATCH!! :(
 69%|██████▉   | 1207/1746 [00:29<00:13, 41.34it/s]

-------------------------------------


---> lineNum: 1208
---> probID: aizu_p00151_A
---> inputs:
5
00011
00101
01000
10101
00010
8
11000001
10110111
01100111
01111010
11111111
01011010
10100010
10000001
2
01
00
3
000
000
000
0
---> outputs:
4
8
1
0

def main ( ) :
    dx = [ 1 , 1 , 0 , - 1 , ]
    dy = [ 0 , 1 , 1 , 1 ]
    f = open ( './junk/1692576729934_2316/input.txt' , 'r' )
    for line in f :
        n = len ( line )
        if n == 0 :
            return
        a = [ ]
        ans = 0
        for i in range ( n ) :
            s = line . split ( )
            for j in range ( n ) :
                a . append ( int ( s [ j ] - '0' ) )
        for i in range ( n ) :
            for j in range ( n ) :
                for k in range ( 4 ) :
                    cnt = 0
                    sy = i
                    sx = j
                    while 0 <= sx < n and sy < n and a [ sy ] [ sx ] == 1 :
                        cnt += 1
                        sx += dx [ k ]
                        sy += dy [ k ]
                    ans = max ( ans , cnt )
            print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1209
---> probID: geeksforgeeks_3044_A
---> inputs:

---> outputs:
2275.0


def test_GFG ( ) :
    n = Symbol ( 'n' , integer = True , positive = True )
    assert ( ( 6 * n ** 2 * n ** 3 * n ** 4 ) + ( 15 * n ** 2 * n ** 3 * n ** 4 ) + ( 10 * n ** 2 * n ** 3 ) - n ) / 30


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1210
---> probID: geeksforgeeks_2831_A
---> inputs:

---> outputs:
Maximum length subsequence = 5


def get_max_length_sub ( arr ) :
    max_val = 0
    start = 0
    d = { }
    for i in range ( len ( arr ) ) :
        temp = 0
        if d . has_key ( arr [ i ] - 1 ) :
            temp = d [ arr [ i ] - 1 ]
        if d . has_key ( arr [ i ] ) :
            temp = max ( temp , d [ arr [ i ] ] )
        if d . has_key ( arr [ i ] + 1 ) :
            temp = max ( temp , d [ arr [ i ] + 1 ] )
        temp += 1
        if temp > max_val :
            max_val = temp
        d [ arr [ i ] ] = temp
    return max_val


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1211
---> probID: geeksforgeeks_1474_A
---> inputs:

---> outputs:
1 2 3 4 5 6 

def pyGFG ( arr ) :
    if not arr or len ( arr ) % 2 == 1 :
        return
    curr_idx = ( len ( arr ) - 1 ) // 2
    while curr_idx > 0 :
        count , swap_idx = curr_idx , curr_idx
        while count :
            temp = arr [ swap_idx + 1 ]
            arr [ swap_idx + 1 ] = arr [ swap_idx ]
            arr [ swap_idx ] = temp
            swap_idx += 1
        curr_idx -= 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1212
---> probID: aizu_p00449_A
---> inputs:
3 8
1 3 1 10
0 2 3
1 2 3 20
1 1 2 5
0 3 2
1 1 3 7
1 2 1 9
0 2 3
5 16
1 1 2 343750
1 1 3 3343
1 1 4 347392
1 1 5 5497
1 2 3 123394
1 2 4 545492
1 2 5 458
1 3 4 343983
1 3 5 843468
1 4 5 15934
0 2 1
0 4 1
0 3 2
0 4 2
0 4 3
0 5 3
0 0
---> outputs:
-1
15
12
5955
21431
9298
16392
24774
8840

def main ( ) :
    import sys
    INF = 1 << 58
    while True :
        n , k = sys . stdin . readline ( ) . split ( )
        if ( n | k ) == 0 :
            break
        fare = [ INF ] * n
        for i in range ( n ) :
            sys . stdout . write ( '%d\n' % i )
            fare [ i ] = 0
        for i in range ( k ) :
            init = sys . stdin . readline ( ) . split ( )
            if init == 1 :
                c , d = sys . stdin . readline ( ) . split ( )
                e = sys . stdin . readline ( ) . split ( ) [ 0 ]
                if e in fare :
                    fare [ c ] = fare [ d ] = e
                    for p in range ( n ) :
                        for q in range ( n ) :
                            fare [ p ] [ q ] = min ( fare [ p ] [ q ] , fare [ p ] [ c ] + fare [ c ] [ d ] + fare [ d ] [ q ] )
                            fare [ p ] [ q ] = min ( fare [ p ] [ q ] , fare [ p ] [ d ] + fare [ c ] [ d ] + fare [ c ] [ q ] )
            else :
                a , b = sys . stdin . readline ( ) . split ( )
                print ( fare [ a ] [ b ] != INF )


---> console_out:
 
DIDN'T MATCH!! :(
 69%|██████▉   | 1212/1746 [00:29<00:12, 41.32it/s]

-------------------------------------


---> lineNum: 1213
---> probID: geeksforgeeks_1157_A
---> inputs:

---> outputs:
Vowels: 5
Consonant: 8
Digit: 3
Special Character: 2


def test_GFG ( ) :
    vowels , consonant , special_char , digit = 0 , 0 , 0 , 0
    for ch in str ( 'geeks for geeks121' ) :
        if ( ch >= 'a' and ch <= 'z' ) :
            ch = ord ( ch ) ;
            if ch in [ 'a' , 'e' , 'i' , 'o' , 'u' ] :
                vowels += 1
            else :
                consonant += 1
        elif ch >= '0' and ch <= '9' :
            digit += 1
        else :
            special_char += 1
    print ( 'Vowels: %d' % vowels )
    print ( 'Consonant: %d' % consonant )
    print ( 'Digit: %d' % digit )
    print ( 'Special Character: %d' % special_char )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1214
---> probID: geeksforgeeks_3734_A
---> inputs:

---> outputs:
98.0 %


def GFG ( l , b , h ) :
    percent_inc = ( 1 + ( l / 100 ) ) * ( 1 + ( b / 100 ) ) * ( 1 + ( h / 100 ) )
    percent_inc -= 1
    percent_inc *= 100
    return percent_inc


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1215
---> probID: geeksforgeeks_4679_A
---> inputs:

---> outputs:
282


def GFG ( a , n ) :
    a = np . array ( a )
    sum = 0
    flag = False
    len = 0
    for i in range ( n ) :
        if ( a [ i ] == a [ i + 1 ] or a [ i ] - a [ i + 1 ] == 1 ) :
            flag = True
            len = a [ i + 1 ]
            i += 1
        elif ( a [ i ] == a [ i + 1 ] or a [ i ] - a [ i + 1 ] == 1 ) :
            sum = sum + a [ i + 1 ] * len
            flag = False
            i += 1
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1216
---> probID: geeksforgeeks_2484_A
---> inputs:

---> outputs:
Current list:
Forward direction: 1 2 3 4 5
Backward direction: 5 4 3 2 1

Reversed list:
Forward direction: 5 4 3 2 1
Backward direction: 1 2 3 4 5


def GFG ( data ) :
    def getNode ( data ) :
        new_node = Node ( )
        new_node . data = data
        return new_node
    def insertEnd ( head , new_node ) :
        if head == None :
            new_node . next = new_node . prev = new_node
            head = new_node
            return head
        last = ( head , ) + ( None , )
        new_node . next = head
        ( head , ) = ( None , ) + ( None , )
        new_node . prev = last
        last . next = new_node
        return head
    def reverse ( head ) :
        if head == None : return None
        new_head = None
        last = head . prev
        curr = last , prev = None
        while curr . prev != last :
            prev = curr . prev
            new_head = insertEnd ( new_head , curr )
            curr = prev
        new_head = insertEnd ( new_head , curr )
        return new_head
    def display ( head ) :
        if head == None : return
        temp = head
        print ( "Forward direction: " )
        while temp . next != head :
            print ( temp . data , end = ' ' )
            temp = temp . next
        print ( temp . data , end = ' ' )
        last = head . prev
        temp = last
        print ( "\nBackward direction: " )
        while temp . prev != last :
            print ( temp . data , end = ' ' )
            temp = temp . prev
        print ( temp . data , end = ' ' )
    def main ( ) :
        head = None
        head = insertEnd ( head , getNode ( 1 ) )
        head = insertEnd ( head , getNode ( 2 ) )
        head = insertEnd ( head , getNode ( 3 ) )
        head = insertEnd ( head , getNode ( 4 ) )
        head = insertEnd ( head , getNode ( 5 ) )
        print ( "Current list:\n" )
        display ( head )
        head = reverse ( head )
        print ( "\n\nReversed list:\n" )
        display ( head )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1217
---> probID: geeksforgeeks_915_A
---> inputs:

---> outputs:
71232


def GFG ( n ) :
    n = ( n / 10000 ) * 10000 + ( ( n / 100 ) % 10 ) * 1000 + ( n % 10 ) * 100 + ( ( n / 10 ) % 10 ) * 10 + ( n / 1000 ) % 10
    ans = 1
    for i in range ( 5 ) :
        ans *= n
        ans %= 100000
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 70%|██████▉   | 1217/1746 [00:29<00:12, 41.18it/s]

-------------------------------------


---> lineNum: 1218
---> probID: projecteuler_p080_A
---> inputs:

---> outputs:
40886

def p_p080 ( p ) :
    """p080 : p080 PLUS p080 MINUS p080 """
    print ( eval ( p [ 1 ] ) )
    sum = 0
    for i in range ( 1 , 100 ) :
        x = p [ 2 ]
        x = x * ( 100 ** 2 )
        y = sqrt ( x )
        if not y * y == x :
            s = y . __str__ ( ) [ : 100 ]
            for j in range ( len ( s ) ) :
                sum += s [ j ] - '0'
    return int ( sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1219
---> probID: geeksforgeeks_2887_A
---> inputs:

---> outputs:
Pythagoras Triplets exist i.e. 22   120   122


def test_GFG ( ) :
    if n == 1 or n == 2 :
        assert False
    elif n % 2 == 0 :
        var = 1 * n ** 2 / 4
        assert False
    elif n % 2 != 0 :
        var = 1 * n ** 2 + 1
        assert False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1220
---> probID: atcoder_ABC048_B
---> inputs:
4 8 2
---> outputs:
3

def main ( ) :
    parser = argparse . ArgumentParser ( description = 'Generate a random number from a sequence of numbers' )
    parser . add_argument ( '-a' , '--a' , type = int , help = 'The number to generate a random number from' )
    parser . add_argument ( '-b' , '--b' , type = int , help = 'The number to generate a random number from' )
    parser . add_argument ( '-x' , '--x' , type = int , help = 'The number to generate a random number from' )
    args = parser . parse_args ( )
    a = args . a
    b = args . b
    x = args . x
    count = 0
    count += b / x + 1
    if a != 0 :
        count -= ( a - 1 ) / x + 1
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1221
---> probID: geeksforgeeks_602_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1222
---> probID: geeksforgeeks_427_A
---> inputs:

---> outputs:
5


def GFG ( A , n , K ) :
    freq = [ 0 ] * K
    ans = 0
    for i in range ( n ) :
        rem = A [ i ] % K
        if rem != 0 :
            ans += freq [ K - rem ]
        else :
            ans += freq [ 0 ]
        freq [ rem ] += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 70%|██████▉   | 1222/1746 [00:29<00:12, 41.02it/s]  File "./junk/1692576730300_8030/main.py", line 23
    
                                                 ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1223
---> probID: atcoder_ABC051_A
---> inputs:
happy,newyear,enjoy
---> outputs:
happy newyear enjoy

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """usage:SPACETOKEN%sSPACETOKEN[-d|-e|-u|-t]SPACETOKEN[-d|-e|-u|-t]""" % sys . argv [ 0 ] )
        print ( """SPACETOKEN-d,SPACETOKEN-e:SPACETOKENdecodeSPACETOKENtheSPACETOKENfirstSPACETOKENlineSPACETOKENofSPACETOKENinputSPACETOKENfile
SPACETOKENSPACETOKEN-u:SPACETOKENencodeSPACETOKENtheSPACETOKENsecondSPACETOKENlineSPACETOKENofSPACETOKENinputSPACETOKENfile
SPACETOKENSPACETOKEN-t:SPACETOKENencodeSPACETOKENandSPACETOKENdecodeSPACETOKENtheSPACETOKENoutputSPACETOKENfile
SPACETOKENSPACETOKEN-t:SPACETOKENdecodeSPACETOKENandSPACETOKENencodeSPACETOKENtheSPACETOKENoutputSPACETOKENfile
SPACETOKENSPACETOKEN""" % sys . argv [ 0 ] )
        return 1
    if args == [ ] :
        usage ( )
        sys . exit ( 1 )
    if args == [ '-e' , '-u' , '-t' , '-d' , '-u' , '-t' , '-t' ] :
        for arg in args :
            if arg == '-e' :
                encode ( sys . stdout , sys .

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1224
---> probID: codeforces_1119_A
---> inputs:
5
1 2 3 2 3
---> outputs:
4

def main ( ) :
    import sys
    n = len ( sys . argv )
    nums = sys . argv [ 1 : ]
    l , r = None , None
    for i in range ( n ) :
        if l is None and nums [ - i - 1 ] != nums [ 0 ] :
            l = n - i - 1
        if r is None and nums [ i ] != nums [ n - 1 ] :
            r = n - i - 1
    print ( max ( l , r ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1225
---> probID: geeksforgeeks_670_A
---> inputs:

---> outputs:
Total Number of Even-Odd subarrays are 7


def GFG ( arr , n ) :
    difference = 0
    ans = 0
    hash_positive = [ 0 ] * ( n + 1 )
    hash_negative = [ 0 ] * ( n + 1 )
    hash_positive [ 0 ] = 1
    for i in range ( n ) :
        if ( arr [ i ] & 1 ) == 1 :
            difference += 1
        else :
            difference -= 1
        if difference < 0 :
            ans += hash_negative [ - difference ]
            hash_negative [ - difference ] += 1
        else :
            ans += hash_positive [ difference ]
            hash_positive [ difference ] += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1226
---> probID: geeksforgeeks_4910_A
---> inputs:

---> outputs:
geeksgeeks

def pyGFG ( ) :
    SIZE = 26
    def printChar ( str , n ) :
        freq = [ 0 ] * SIZE
        for i in range ( n ) :
            freq [ str [ i ] - 'a' ] += 1
        for i in range ( n ) :
            if freq [ str [ i ] - 'a' ] % 2 == 0 :
                print ( str [ i ] )
    def printStr ( str , n ) :
        str = 'geeksforgeeks'
        n = len ( str )
        printChar ( str , n )
    return sys . stdout


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1227
---> probID: geeksforgeeks_3597_A
---> inputs:

---> outputs:
for

def GFG ( str , n ) :
    freq = [ 0 ] * 26
    for i in range ( n ) :
        freq [ str [ i ] - 'a' ] += 1
    for i in range ( n ) :
        if freq [ str [ i ] - 'a' ] % 2 == 1 :
            print ( str [ i ] )


---> console_out:
 
DIDN'T MATCH!! :(
 70%|███████   | 1227/1746 [00:29<00:12, 41.47it/s]

-------------------------------------


---> lineNum: 1228
---> probID: geeksforgeeks_1056_A
---> inputs:

---> outputs:
3


def GFG ( arr , n , k ) :
    l = 0
    r = n - 1
    left_greater = n
    while l <= r :
        m = l + ( r - l ) // 2
        if arr [ m ] > k :
            left_greater = m
            r = m - 1
        else :
            l = m + 1
    return ( n - left_greater )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576730442_2247/main.py", line 15
    cnt = [ [ 1 ] * len ( h ) , [ 0 ] * len ( h ) , [ 0 ] * len ( h ) , [ 0 ] * len ( h ) , [ 0 ] * len ( h ) ] ]
                                                                                                                ^
SyntaxError: unmatched ']'


-------------------------------------


---> lineNum: 1229
---> probID: aizu_p01619_A
---> inputs:
1 1
---> outputs:
2

def main ( * args ) :
    INF = 1 << 28
    EPS = 1e-10
    MOD = 1000000
    es = [ [ 0 , 1 , 2 , 3 ] , [ 0 , 1 , 2 ] , [ 0 , 1 , 2 , 4 ] , [ 2 , 3 ] , [ 0 , 4 ] ]
    len = 5
    def run ( ) :
        h , w = divmod ( h , INF )
        if w == 1 :
            ret = 1
            for i in range ( h ) :
                ret = ret * 2 % MOD
            print ( ret )
            return ret
        cnt = [ [ 1 ] * len ( h ) , [ 0 ] * len ( h ) , [ 0 ] * len ( h ) , [ 0 ] * len ( h ) , [ 0 ] * len ( h ) ] ]
        p = 1
        for i in range ( 0 , h ) :
            fill ( cnt [ p ] , 0 )
            for j in range ( len ( es [ j ] ) ) :
                for k in range ( len ( es [ j ] ) ) :
                    cnt [ p ] [ es [ j ] [ k ] ] = ( cnt [ p ] [ es [ j ] [ k ] ] + cnt [ 1 - p ] [ j ] ) % MOD
                p = 1 - p
            print ( cnt [ 1 - p ] [ 2 ] )
    def debug ( * os ) :
        sys . stderr . write ( '%s\n' % 'SPACETOKEN' . join ( map ( str , os ) ) )
    def main ( ) :
        run ( )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1230
---> probID: geeksforgeeks_2542_A
---> inputs:

---> outputs:
a = 67.9851
b = 1.01493


def GFG ( N ) :
    val = N ** 2 - 4.0 * N
    if val < 0 :
        print ( 'NO' )
        return
    a = ( N + sqrt ( val ) ) / 2.0
    b = ( N - sqrt ( val ) ) / 2.0
    print ( 'a = %f' % a )
    print ( 'b = %f' % b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1231
---> probID: codeforces_1227_A
---> inputs:
4
3
4 5
5 9
7 7
5
11 19
4 17
16 16
3 12
14 17
1
1 10
1
1 1
---> outputs:
2
4
0
0

def test_submitfinal ( ) :
    import sys
    t = sys . stdin
    while t is not None :
        n = t . readline ( ) . strip ( )
        x , y = sys . stdin . readline ( ) . split ( )
        temp1 , temp2 = sys . stdin . readline ( ) . split ( )
        for i in range ( n ) :
            x , y = sys . stdin . readline ( ) . split ( )
            temp1 = max ( temp1 , x )
            temp2 = min ( temp2 , y )
        assert max ( 0 , ( temp1 - temp2 ) ) == 0
        t . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1232
---> probID: codeforces_745_B
---> inputs:
2 3
XXX
XXX
---> outputs:
YES

def main ( ) :
    import sys
    import getopt
    global n , m
    n = int ( sys . argv [ 1 ] )
    m = int ( sys . argv [ 2 ] )
    for i in range ( n ) :
        str = sys . stdin . readline ( )
        if str . find ( 'X' ) != - 1 :
            m = int ( str )
    if m == 1 :
        print ( 'YES' )
    else :
        print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(
 71%|███████   | 1232/1746 [00:29<00:12, 41.56it/s]

-------------------------------------


---> lineNum: 1233
---> probID: aizu_p01678_A
---> inputs:
3?4
12?
5?6
?2?4
5?7?
?9?2
?????
?????
?????
0
---> outputs:
2
40
200039979

def main ( ) :
    import sys
    import getopt
    MOD = 1000000007
    parser = argparse . ArgumentParser ( description = 'Generate a random number of integers from a string of digits.' )
    parser . add_argument ( '-a' , '--aa' , required = True , help = 'The first character of the first number to generate.' )
    parser . add_argument ( '-bb' , '--bb' , required = True , help = 'The second character of the second number to generate.' )
    parser . add_argument ( '-cc' , '--cc' , required = True , help = 'The third character of the third number to generate.' )
    parser . add_argument ( '-n' , '--n' , required = True , help = 'The number of digits to generate.' )
    parser . add_argument ( '-d' , '--d' , required = True , help = 'The number of digits to generate.' )
    parser . add_argument ( '-c' , '--c' , required = True , help = 'The number of digits to generate.' )
    parser . add_argument ( '-i' , '--i' , required = True , help = 'The number of digits to generate.' )
    parser . add_argument ( '-j' , '--j' , required = True , help = 'The number of digits to generate.' )
    parser . add_argument ( '--p' , '--p' , required = True , help = 'The number of digits to generate.' )
    parser . add_argument ( '--q' , '--q' , required = True , help = 'The number of digits to generate.' )
    parser . add_argument ( '--h' , '--h' , required = True , help = 'The help message.' )
    parser . add_argument ( '--g' , '--g' , required = True , help = 'The generator function.' )
    return parser . parse_args

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1234
---> probID: codeforces_1374_B
---> inputs:
7
1
2
3
12
12345
15116544
387420489
---> outputs:
0
-1
2
-1
-1
12
36

def test_multiply ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' , integer = True , positive = True )
    while t . is_integer :
        a = symbols ( 'a' , integer = True )
        two = 0
        three = 0
        while a % 2 == 0 :
            a = a // 2
            two += 1
        while a % 3 == 0 :
            a = a // 3
            three += 1
        if a == 1 :
            if three >= two :
                temp = two
                three -= two
                temp += three * 2
                assert temp == 3
            else :
                assert '-1' in temp
        else :
            assert '-1' in temp


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1235
---> probID: geeksforgeeks_290_A
---> inputs:

---> outputs:
6


def test_GFG ( ) :
    """Test the minIncrementForUnique function."""
    mpp = { }
    for i in A :
        if mpp . has_key ( i ) :
            mpp [ i ] = mpp [ i ] + 1
        else :
            mpp [ i ] = 1
    taken = [ ]
    ans = 0
    for x in range ( 100000 ) :
        if mpp . has_key ( x ) and mpp [ x ] >= 2 :
            taken . append ( x * ( mpp [ x ] - 1 ) )
        elif taken and ( ( mpp . has_key ( x ) and mpp [ x ] == 0 ) or not mpp . has_key ( x ) ) :
            ans += x - taken [ - 1 ]
            taken . pop ( - 1 )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1236
---> probID: codeforces_70_A
---> inputs:
3
---> outputs:
9

def test_pow ( ) :
    import sys
    import math
    MOD = 1000003
    n = int ( math . floor ( math . log ( 3 , MOD ) ) )
    ans = n if n == 0 else pow ( 3 , n - 1 , MOD )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )
    assert ans == math . floor ( math . log ( 3 , MOD ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1237
---> probID: geeksforgeeks_1203_A
---> inputs:

---> outputs:
1


def GFG ( s , n ) :
    MOD = int ( 1e9 + 7 )
    dp = [ [ 1 ] * ( n + 1 ) for i in range ( n + 1 ) ]
    for i in range ( n ) :
        for j in range ( 10 ) :
            nxt = s [ i ] - '0'
            if s [ i ] == '?' :
                nxt = j
            for k in range ( 13 ) :
                rem = ( 10 ** k + nxt ) % 13
                dp [ i + 1 ] [ rem ] += dp [ i ] [ k ]
                dp [ i + 1 ] [ rem ] %= MOD
            if s [ i ] != '?' :
                break
    return int ( dp [ n ] [ 5 ] )


---> console_out:
 
DIDN'T MATCH!! :(
 71%|███████   | 1237/1746 [00:29<00:12, 40.82it/s]

-------------------------------------


---> lineNum: 1238
---> probID: geeksforgeeks_3271_A
---> inputs:

---> outputs:
28


def GFG ( a , b , c , d ) :
    x = b / c - ( a - 1 ) / c
    y = b / d - ( a - 1 ) / d
    k = ( c * d ) / __gcd ( c , d )
    z = b / k - ( a - 1 ) / k
    return b - a + 1 - x - y + z


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1239
---> probID: geeksforgeeks_1817_A
---> inputs:

---> outputs:
1
12
123
2
23
3


def test_GFG ( ) :
    s = int ( math . log10 ( n ) )
    d = int ( math . pow ( 10 , s ) + 0.5 )
    k = d
    while n > 0 :
        while d > 0 :
            assert n // d == d
            d = d // 10
        n = n % k
        k = k // 10
        d = k


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1240
---> probID: geeksforgeeks_4144_A
---> inputs:

---> outputs:
0


def GFG ( n ) :
    s = ""
    c = 1
    for i in range ( 1 , 10 ) :
        if c < 10 :
            s += str ( c )
        else :
            s1 = ""
            dup = c
            while dup :
                s1 += str ( dup % 10 )
                dup //= 10
            temp = [ s1 ]
            temp = temp [ : : - 1 ]
            s += temp
        c += 1
        if len ( s ) >= n :
            return s [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1241
---> probID: aizu_p00760_A
---> inputs:
8
1 1 1
344 3 1
696 5 1
182 9 5
998 8 7
344 2 19
696 4 19
999 10 20
---> outputs:
196470
128976
59710
160715
252
128977
59712
1

def main ( ) :
    import sys
    n = len ( sys . argv )
    tosi = [ ]
    M = [ ]
    D = [ ]
    i = 0
    k = 0
    c = 0
    for k in range ( n ) :
        total = 0
        day = 0
        tosi . append ( sys . argv [ k ] )
        M . append ( sys . argv [ k ] )
        D . append ( sys . argv [ k ] )
        for i in tosi [ k ] + 1 , 1000 :
            if i % 3 == 0 :
                total += 200
            else :
                total += 195
        if tosi [ k ] % 3 == 0 :
            tuki = ( M [ k ] - 1 ) * 20
            day = tuki + D [ k ] - 6
        else :
            if ( M [ k ] - 1 ) % 2 == 0 :
                day = ( ( M [ k ] - 1 ) / 2 ) * 20 + ( ( M [ k ] - 1 ) / 2 ) * 19 + D [ k ] - 1
            else :
                day = ( ( M [ k ] ) / 2 ) * 20 + ( ( M [ k ] - 1 ) / 2 ) * 19 + D [ k ] - 1
        total = total - day
        sys . stdout . write ( total )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1242
---> probID: geeksforgeeks_1071_A
---> inputs:

---> outputs:
3


def get_gfg ( n ) :
    if n <= 1 :
        return False
    if n <= 3 :
        return True
    if n % 2 == 0 or n % 3 == 0 :
        return False
    for i in range ( 5 , n * i <= n , i + 6 ) :
        if n % i == 0 or n % ( i + 2 ) == 0 :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(
 71%|███████   | 1242/1746 [00:30<00:12, 41.15it/s]

-------------------------------------


---> lineNum: 1243
---> probID: codeforces_387_B
---> inputs:
3 5
1 2 3
1 2 2 3 3
---> outputs:
0

def main ( ) :
    input = sys . stdin
    n = input . readline ( ) . strip ( )
    m = input . readline ( ) . strip ( )
    req = [ ]
    pre = [ ]
    for i in range ( n ) :
        req . append ( input . readline ( ) )
    for i in range ( m ) :
        pre . append ( input . readline ( ) )
    i , j = n - 1 , m - 1
    ans = 0
    while i >= 0 and j >= 0 :
        if req [ i ] > pre [ j ] :
            ans += 1
        else :
            j -= 1
        i -= 1
    print ( ans + i + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1244
---> probID: geeksforgeeks_3998_A
---> inputs:

---> outputs:
1 1 2 5 14 42 132 429 1430 4862 

def GFG ( n ) :
    catalan = [ 1 ] * ( n + 2 )
    for i in range ( 2 , n + 1 ) :
        catalan [ i ] = 0
        for j in range ( i ) :
            catalan [ i ] += catalan [ j ] * catalan [ i - j - 1 ]
    return catalan [ n ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1245
---> probID: projecteuler_p243_A
---> inputs:

---> outputs:
892371480

def p_p243 ( p ) :
    print ( [ p [ 0 ] , p [ 1 ] ] )
    TARGET = Fraction ( [ 15499 , 94744 ] )
    for p in p [ 2 : ] :
        totient = p [ 1 ]
        denominator = p [ 2 ]
        do = p [ 1 ]
        while not library . is_prime ( p ) :
            break
        if Fraction ( totient , denominator ) < TARGET :
            for i in range ( 1 , p ) :
                numer = p [ i ] * totient
                denom = p [ i ] * denominator
                if Fraction ( numer , denom - 1 ) < TARGET :
                    return denom


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1246
---> probID: codeforces_8_B
---> inputs:
LLUUUR
---> outputs:
OK

def ishu ( ) :
    import sys
    i , j , x , y , k , dx , dy = 0 , 0 , 0 , 0 , 0
    flag = True
    s = sys . stdin . readline ( )
    ch = [ ]
    co = [ 0 ] * 101
    s = s . split ( )
    ch = s [ 0 ]
    co [ 0 ] [ k ] = x
    co [ 1 ] [ k ] = y
    yield k
    for i in range ( len ( s ) ) :
        try :
            del ch [ i ]
        except IndexError :
            pass
        else :
            co [ 0 ] [ k ] = x
            co [ 1 ] [ k ] = y
            yield k
    for i in range ( k - 3 ) :
        for j in range ( i + 3 , k ) :
            dx = co [ 0 ] [ i ] - co [ 0 ] [ j ]
            dy = co [ 1 ] [ i ] - co [ 1 ] [ j ]
            if dx < 0 :
                dx *= ( - 1 )
            if dy < 0 :
                dy *= ( - 1 )
            if ( dx <= 1 and dy == 0 ) :
                flag = False
                break
        if not flag :
            break
    if flag :
        print ( 'OK' )
    else :
        print ( 'BUG' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1247
---> probID: geeksforgeeks_10_A
---> inputs:

---> outputs:
Yes


def GFG ( n ) :
    if n <= 1 :
        return False
    for i in range ( 2 , math . sqrt ( n ) ) :
        if n % i == 0 :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(
 71%|███████▏  | 1247/1746 [00:30<00:12, 41.35it/s]

-------------------------------------


---> lineNum: 1248
---> probID: geeksforgeeks_1371_A
---> inputs:

---> outputs:
Number of Dyck Paths is  14


def GFG ( n ) :
    res = 1
    for i in range ( n ) :
        res *= ( 2 ** n - i )
        res /= ( i + 1 )
    return res / ( n + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1249
---> probID: codeforces_1388_A
---> inputs:
7
7
23
31
36
44
100
258
---> outputs:
['NO\nNO\nYES\n14 10 6 1\nYES\n5 6 10 15\nYES\n6 7 10 21\nYES\n2 10 33 55\nYES\n10 21 221 6', 'NO\nNO\nYES\n6 10 14 1\nYES\n6 10 15  5\nYES\n6 10 15  13\nYES\n6 10 14 70\nYES\n6 10 14 228\n']

def main ( ) :
    import sys
    t = sys . argv [ 1 ]
    for tc in range ( t ) :
        n = int ( tc )
        print ( solve ( n ) )
    sys . exit ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1250
---> probID: atcoder_ABC118_C
---> inputs:
2
956199757 202955748
---> outputs:
1

def main ( ) :
    import sys
    n = len ( sys . argv )
    a = [ ]
    for i in range ( n ) :
        a . append ( sys . argv [ i ] )
    ans = a [ 0 ]
    for i in range ( 1 , n ) :
        ans = gcd ( ans , a [ i ] )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576730976_8893/main.py", line 13
    count = a [ ( from + i ) % 14 ] + ( stones + 14 - i ) / 14
                  ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1251
---> probID: codeforces_975_B
---> inputs:
0 1 1 0 0 0 0 0 0 7 0 0 0 0
---> outputs:
4

def test_b975 ( ) :
    """
 Test the B975 algorithm.
 """
    a = np . array ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] , [ 10 , 11 , 12 ] ] )
    max = 0
    for i in range ( 14 ) :
        a [ i ] = np . array ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] , [ 10 , 11 , 12 ] ] )
    stones = a [ : : - 1 ]
    remainder = stones / 14
    score = ( remainder % 2 == 0 )
    for i in range ( 1 , 14 ) :
        count = a [ ( from + i ) % 14 ] + ( stones + 14 - i ) / 14
        if count % 2 == 0 :
            score += count
    max = max ( score )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1252
---> probID: geeksforgeeks_4585_A
---> inputs:

---> outputs:
7.32


def GFG ( a ) :
    if a < 0 :
        return - 1
    d = 1.22 * a
    return d


---> console_out:
 
DIDN'T MATCH!! :(
 72%|███████▏  | 1252/1746 [00:30<00:11, 41.34it/s]

-------------------------------------


---> lineNum: 1253
---> probID: geeksforgeeks_4586_A
---> inputs:

---> outputs:
15.57


def GFG ( a ) :
    if a < 0 :
        return - 1
    d = float ( 1.73 * a )
    return d


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1254
---> probID: geeksforgeeks_200_A
---> inputs:

---> outputs:
The modified string is :
helloCworldCGfG  


def test_GFG ( ) :
    """Test the GF algorithm."""
    data = 'helloABworldABGfG'
    if len ( data ) < 2 :
        return
    i = 0
    j = 0
    while j < len ( data ) - 1 :
        if data [ j ] == 'A' and data [ j + 1 ] == 'B' :
            j = j + 2
            data [ i ] = 'C'
            continue
        data [ i ] = data [ j ]
    if j == len ( data ) - 1 :
        data [ i ] = data [ j ]
    data [ i ] = ' '
    data [ len ( data ) - 1 ] = ' '


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1255
---> probID: geeksforgeeks_199_A
---> inputs:

---> outputs:
The modified string is :
helloCworldCGfG  


def test_GFG ( ) :
    for i in range ( 1 , len ( str ( 'A' ) ) ) :
        if str [ i - 1 ] == 'A' and str [ i ] == 'B' :
            str [ i - 1 ] = 'C'
            j = 0
            for j in range ( i , len ( str ) - 1 ) :
                str [ j ] = str [ j + 1 ]
            str [ j ] = ' '
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1256
---> probID: projecteuler_p128_A
---> inputs:

---> outputs:
14516824220

def p128 ( cls ) :
    print ( cls . run ( ) )
    TARGET = 2000
    def run ( ) :
        count = 2
        for ring in range ( 2 , 10 ) :
            if ( long ( ring * 12 + 5 ) > sys . maxsize ) :
                raise OverflowError
            if library . is_prime ( ring * 6 - 1 ) and library . is_prime ( ring * 6 + 1 ) and library . is_prime ( ring * 12 + 5 ) :
                count += 1
                if count == TARGET :
                    return long ( ring * ( ring - 1 ) * 3 + 2 )
            if library . is_prime ( ring * 6 - 1 ) and library . is_prime ( ring * 6 + 5 ) and library . is_prime ( ring * 12 - 7 ) :
                count += 1
                if count == TARGET :
                    return long ( ring * ( ring + 1 ) * 3 + 1 )
    return run


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1257
---> probID: codeforces_214_A
---> inputs:
9 3
---> outputs:
1

def main ( ) :
    import sys
    n , m = sys . argv [ 1 : ]
    c = 0
    for i in range ( 0 , max ( n , m ) ) :
        for j in range ( 0 , max ( n , m ) ) :
            if ( i * i ) + j == n and i + ( j * j ) == m :
                c += 1
    sys . exit ( c )


---> console_out:
 
DIDN'T MATCH!! :(
 72%|███████▏  | 1257/1746 [00:30<00:11, 41.03it/s]  File "./junk/1692576731149_7053/main.py", line 43
    assert
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1258
---> probID: geeksforgeeks_2193_A
---> inputs:

---> outputs:
6 2


def test_GFG ( ) :
    n = 2346
    assert digits ( n ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert digits ( n / 10 ) == n
    assert

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576731176_5360/main.py", line 3
    maxx = max ( [ d1 , max ( d2 , d3 ) for d1 , d2 , d3 in zip ( [ 1 , 2 , 3 ] , [ 4 , 5 ] ) ] )
                                        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1259
---> probID: geeksforgeeks_3696_A
---> inputs:

---> outputs:
( 0 , 0 ), ( 3 , 0 ) and ( 1 , 3 )


def test_GFG ( ) :
    """Test the symbolic representation of the GFG."""
    maxx = max ( [ d1 , max ( d2 , d3 ) for d1 , d2 , d3 in zip ( [ 1 , 2 , 3 ] , [ 4 , 5 ] ) ] )
    sum = ( d1 + d2 + d3 )
    if 2 * maxx > sum or sum % 2 == 1 :
        print ( '-1' )
        return
    x1 , y1 = symbols ( 'x1,y1' )
    x2 , y2 = symbols ( 'x2,y2' )
    x3 , y3 = symbols ( 'x3,y3' )
    print ( '(%s, %s), (%s, %s) and (%s, %s)' % ( x1 , y1 , x2 , y2 , x3 , y3 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1260
---> probID: geeksforgeeks_5246_A
---> inputs:

---> outputs:
NO


def test_GFG ( ) :
    MAX_CHAR = 26
    distributed_balls = [ ]
    for i in range ( n ) :
        a = [ str ( i ) - 'a' for i in range ( MAX_CHAR ) ]
        for i in range ( MAX_CHAR ) :
            if a [ i ] > k :
                return False
        return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1261
---> probID: codeforces_1509_B
---> inputs:
5
3
TMT
3
MTT
6
TMTMTT
6
TMTTTT
6
TTMMTT
---> outputs:
YES
NO
YES
NO
YES

def lesson ( * args ) :
    import sys
    import time
    import string
    import datetime
    import time
    import doctest
    import os
    import re
    import re
    import sys
    import string
    import time
    import doctest
    import string
    import re
    import re
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1262
---> probID: aizu_p00341_A
---> inputs:
1 1 3 4 8 9 7 3 4 5 5 5
---> outputs:
no

def main ( ) :
    import sys
    import getopt
    e = [ ]
    i = 0
    p = 0
    k = 0
    for i in range ( 12 ) :
        e . append ( getopt . getopt ( sys . argv [ 1 : ] , "e:" ) [ 0 ] )
    for i in range ( 12 ) :
        for j in range ( 12 - i ) :
            if e [ j ] < e [ j + 1 ] :
                y = e [ j ]
                e [ j ] = e [ j + 1 ]
                e [ j + 1 ] = y
    for u in range ( 3 ) :
        for k in range ( 4 ) :
            i = u * 4
            if e [ i ] == e [ i + 1 ] and e [ i + 2 ] == e [ i + 3 ] and e [ i ] == e [ i + 2 ] and e [ i + 1 ] == e [ i + 3 ] and e [ i ] == e [ i + 3 ] and e [ i + 1 ] == e [ i + 2 ] :
                p += 1
            else :
                p += 0
    if p == 12 :
        sys . stdout . write ( "yes\n" )
    else :
        sys . stdout . write ( "no\n" )


---> console_out:
 
DIDN'T MATCH!! :(
 72%|███████▏  | 1262/1746 [00:30<00:11, 40.70it/s]

-------------------------------------


---> lineNum: 1263
---> probID: geeksforgeeks_4580_A
---> inputs:

---> outputs:
Row with min 0s: 3
Row with max 0s: 4


def pyGFG ( arr , low , high ) :
    R = 4
    C = 4
    first = 0
    if high >= low :
        mid = low + ( high - low ) // 2
        if ( mid == 0 or arr [ mid - 1 ] == 0 ) :
            return mid
        elif arr [ mid ] == 0 :
            return first ( arr , ( mid + 1 , high ) )
        else :
            return first ( arr , low , ( mid - 1 , low ) )
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1264
---> probID: geeksforgeeks_4527_A
---> inputs:

---> outputs:
Set


def test_GFG ( ) :
    n , k = 10 , 2
    if bitAtGivenPosSetOrUnset ( n , k ) == 1 :
        assert 'Set' in str ( n )
    else :
        assert 'Unset' in str ( n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1265
---> probID: codeforces_747_B
---> inputs:
8
AG?C??CT
---> outputs:
AGACGTCT

def test_MammothsGenomeDecoding ( ) :
    f = open ( 'data/MammothsGenomeDecoding.txt' , 'r' )
    n = int ( f . read ( ) )
    if n % 4 != 0 :
        print ( '===' )
        return
    themost = n / 4
    numA = 0
    numG = 0
    numC = 0
    numT = 0
    numQM = 0
    lines = f . readlines ( )
    s = '' . join ( lines )
    for line in s :
        if line . startswith ( 'A' ) :
            numA += 1
        elif line . startswith ( 'G' ) :
            numG += 1
        elif line . startswith ( 'C' ) :
            numC += 1
        elif line . startswith ( 'T' ) :
            numT += 1
        else :
            numQM += 1
    if numA > themost or numC > themost or numG > themost or numT > themost :
        print ( '===' )
        return
    for j in range ( numQM ) :
        for i in range ( len ( lines ) ) :
            if lines [ i ] . startswith ( '?' ) :
                if numA < themost :
                    lines [ i ] = lines [ i + 1 ] + 'A'
                    numA += 1
                elif numC < themost :
                    lines [ i ] = lines [ i + 1 ] + 'C' ;
                    numC += 1
                elif numG < themost :
                    lines [ i ] = lines [ i + 1 ] + 'G' ;
                    numG += 1
                elif numT < themost :
                    lines [ i ] = lines [ i + 1 ] + 'T' ;
                    numT += 1
    print ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1266
---> probID: aizu_p00606_A
---> inputs:
1
E A C
1
E B C
2
E A B
0
---> outputs:
0.00000000
0.25000000
0.06250000

def main ( ) :
    import sys
    while 1 :
        from sympy . core . compatibility import iterable
        if not iterable :
            break
        pos = [ 0 ] * 9
    start = len ( sys . argv ) - 1
    end = len ( sys . argv ) - 1
    not start < end
    pos [ start ] = 1
    next = [ ]
    for i in range ( 9 ) :
        for i in range ( 9 ) :
            next . append ( 0 )
        for i in range ( 9 ) :
            if i % 3 != 0 and not not i - 1 :
                next [ - 1 ] += pos [ i ] / 4
            else :
                next [ - 1 ] += pos [ i ] / 4
            if i % 3 != 2 and not not i + 1 :
                next [ - 1 ] += pos [ i ] / 4
            else :
                next [ i ] += pos [ i ] / 4
            if i / 3 != 0 and not not i - 3 :
                next [ - 3 ] += pos [ i ] / 4
            else :
                next [ i ] += pos [ i ] / 4
            if i / 3 != 2 and not not i + 3 :
                next [ - 3 ] += pos [ i ] / 4
            else :
                next [ i ] += pos [ i ] / 4
            if i / 3 != 2 and not not i + 3 :
                next [ - 3 ] += pos [ i ] / 4
            else :
                next [ i ] += pos [ i ] / 4
            if i % 3 != 0 and not not i - 3 :
                next [ - 3 ] += pos [ i ] / 4
            else :
                next [ i ] += pos [ i ] / 4
            if i % 3 != 2 and not not i + 3 :
                next [ - 3 ] += pos [ i ] / 4
            else :
                next [ i ] += pos [ i ] / 4
        tmp = next
        next = pos
        pos = tmp
    print ( "%.8f" % pos [ end ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1267
---> probID: codeforces_926_A
---> inputs:
1 10
---> outputs:
7

def sol ( argc ) :
    parser = argparse . ArgumentParser ( description = 'Sol program' )
    parser . add_argument ( '-l' , '--long' , type = int , default = 1 , help = 'Number of long to run' )
    parser . add_argument ( '-r' , '--radius' , type = int , default = 1 , help = 'Number of radius to run' )
    args = parser . parse_args ( argc )
    l = int ( args . long )
    r = int ( args . radius )
    ans = 0
    for i in range ( 1 , r ) :
        for j in range ( 1 , j * i <= r , 3 ) :
            if i * j >= l :
                ans += 1
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 73%|███████▎  | 1267/1746 [00:30<00:11, 40.87it/s]  File "./junk/1692576731395_1032/main.py", line 6
    
                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1268
---> probID: atcoder_ABC076_B
---> inputs:
4
3
---> outputs:
10

def main ( ) :
    import sys
    N = len ( sys . argv )
    K = len ( sys . argv )
    sys . argv = sys . argv + [ '-N' , '-K' , '-K' , '-N' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K' , '-K'

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1269
---> probID: geeksforgeeks_4806_A
---> inputs:

---> outputs:
Yes


def test_GFG ( ) :
    """Test if the generators are the same."""
    sum1 , sum2 , mul1 , mul2 = 0 , 0 , 1 , 1
    for i in range ( n ) :
        sum1 += a [ i ]
        mul1 *= a [ i ]
    for i in range ( m ) :
        sum2 += b [ i ]
        mul2 *= b [ i ]
    return ( ( sum1 == sum2 ) , ( mul1 == mul2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1270
---> probID: geeksforgeeks_3105_A
---> inputs:

---> outputs:
b c l p r 

def GFG ( str1 , str2 ) :
    MAX_CHAR = 26
    present = [ 0 ] * MAX_CHAR
    l1 = len ( str1 )
    l2 = len ( str2 )
    for i in range ( l1 ) :
        present [ str1 [ i ] - 'a' ] = 1
    for i in range ( l2 ) :
        if present [ str2 [ i ] - 'a' ] == 1 or present [ str2 [ i ] - 'a' ] == - 1 :
            present [ str2 [ i ] - 'a' ] = - 1
        else :
            present [ str2 [ i ] - 'a' ] = 2
    for i in range ( MAX_CHAR ) :
        if present [ i ] == 1 or present [ i ] == 2 :
            print ( chr ( i + 'a' ) + " " )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1271
---> probID: geeksforgeeks_3679_A
---> inputs:

---> outputs:
Inside


def GFG ( circle_x , circle_y , rad , x , y ) :
    if ( x - circle_x ) ** 2 + ( y - circle_y ) ** 2 <= rad ** 2 :
        return True
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1272
---> probID: geeksforgeeks_3247_A
---> inputs:

---> outputs:
26


def GFG ( arr , n , x ) :
    sum = 0
    largestDivisible , minimum = - 1 , arr [ 0 ]
    for i in range ( n ) :
        sum += arr [ i ]
        if arr [ i ] % x == 0 and largestDivisible < arr [ i ] :
            largestDivisible , arr [ i ] = arr [ i ] , arr [ i ]
        if arr [ i ] < minimum :
            minimum = arr [ i ]
    if largestDivisible == - 1 :
        return sum
    sumAfterOperation = sum - minimum - largestDivisible + ( x * minimum ) + ( largestDivisible / x )
    return min ( sum , sumAfterOperation )


---> console_out:
 
DIDN'T MATCH!! :(
 73%|███████▎  | 1272/1746 [00:30<00:11, 40.85it/s]

-------------------------------------


---> lineNum: 1273
---> probID: geeksforgeeks_1828_A
---> inputs:

---> outputs:
45
1225
1249999950000000
125000006750000091


def GFG ( n ) :
    nth = 0
    if n % 2 == 0 :
        nth = 2 ** ( ( n * n ) - n )
    else :
        nth = ( 2 ** n * n ) - n
    return nth


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1274
---> probID: aizu_p02433_A
---> inputs:
5
0 1
0 2
0 3
1 1
2
---> outputs:
3
1

def main ( ) :
    data = [ ]
    iterator = iter ( data )
    scan = Scanner ( )
    n = scan . next ( )
    for i in range ( n ) :
        cmd = scan . next ( )
        try :
            iterator . append ( scan . next ( ) )
            iterator . previous ( )
        except StopIteration :
            d = scan . next ( )
            if d :
                for j in range ( d ) :
                    iterator . next ( )
            else :
                for j in range ( d ) :
                    iterator . previous ( )
        except StopIteration :
            iterator . next ( )
            iterator . previous ( )
            break
    for i in data :
        print ( i )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1275
---> probID: codeforces_1029_A
---> inputs:
3 4
aba
---> outputs:
ababababa

def test_c1029_a ( ) :
    x = symbols ( 'x' )
    n = symbols ( 'n' , integer = True , positive = True )
    k = symbols ( 'k' , integer = True , positive = True )
    s = symbols ( 's' , integer = True , positive = True )
    ans = 0
    for i in range ( 1 , len ( s ) ) :
        if s [ 0 ] == s [ - i ] :
            ans = i
    s = [ s [ - i ] for i in range ( k ) ]
    for i in range ( k ) :
        s [ i ] = s [ ans ]
    assert s == ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1276
---> probID: geeksforgeeks_3091_A
---> inputs:

---> outputs:
4 2 5 1 6 3 7 

def GFG ( ) :
    class Node :
        data = 0
        left , right = None , None
    class INT :
        a = 0
        def __init__ ( self , data ) :
            self . data = data
        def __repr__ ( self ) :
            return "%s " % self . data
        def __str__ ( self ) :
            return "%s " % self . data
        def __len__ ( self ) :
            return len ( self . left )
        def __le__ ( self , other ) :
            return len ( other . left ) <= len ( other . right )
        def __ge__ ( self , other ) :
            return len ( other . left ) >= len ( other . right )
        def __eq__ ( self , other ) :
            return len ( self . left ) == len ( other . left )
        def __ne__ ( self , other ) :
            return len ( self . right ) != len ( other . right )
        def __hash__ ( self ) :
            return hash ( self . data )
        def __le__ ( self , other ) :
            return len ( other . left ) <= len ( other . right )
        def __gt__ ( self , other ) :
            return len ( other . left ) > len ( other . right )
        def __ge__ ( self , other ) :
            return len ( self . left ) >= len ( other . right )
        def __len__ ( self ) :
            return len ( self . left )
        def __le__ ( self , other ) :
            return len ( other . left ) <= len ( other . right )
        def __ge__ ( self , other ) :
            return len ( other . left ) >= len ( other . right )
    def con_binary_tree ( pre , pre_m , pre_index , l , h , size ) :
        pre_index = [ 0 ] * size
        pre_m = [ 0 ] * size
        pre_index = [ 0 ] * size
        pre_m = [ 0 ] * size
        pre_index = [ 0 ] * size
        pre_index = [ 0 ] * size
        pre_m = [ 0 ] * size
        pre_index = [ 0 ] * size
        pre_index = [ 0 ] * size
        return Node ( )
    def test_con_binary_tree ( ) :
        pass
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1277
---> probID: geeksforgeeks_1450_A
---> inputs:

---> outputs:
Smallest window is : 
t stri


def GFG ( str , pat ) :
    len1 = len ( str )
    len2 = len ( pat )
    if len1 < len2 :
        print ( "No such window exists" )
        return ""
    hash_pat = [ 0 ] * ( no_of_chars )
    hash_str = [ 0 ] * no_of_chars
    for i in range ( len2 ) :
        hash_pat [ pat [ i ] ] += 1
    start , start_index , min_len = 0 , int ( 0 )
    count = 0
    for j in range ( len1 ) :
        hash_str [ str [ j ] ] += 1
        if hash_pat [ str [ j ] ] != 0 and hash_str [ str [ j ] ] <= hash_pat [ str [ j ] ] :
            count += 1
        if count == len2 :
            while hash_str [ str [ start ] ] > hash_pat [ str [ start ] ] or hash_pat [ str [ start ] ] == 0 :
                if hash_str [ str [ start ] ] > hash_pat [ str [ start ] ] :
                    hash_str [ str [ start ] ] -= 1
                start += 1
            len_window = j - start + 1
            if min_len > len_window :
                min_len = len_window
                start_index = start
    if start_index == - 1 :
        print ( "No such window exists" )
        return ""
    return str [ start_index : start_index + min_len ]


---> console_out:
 
DIDN'T MATCH!! :(
 73%|███████▎  | 1277/1746 [00:30<00:11, 40.84it/s]

-------------------------------------


---> lineNum: 1278
---> probID: aizu_p00012_A
---> inputs:
0.0 0.0 2.0 0.0 2.0 2.0 1.5 0.5
0.0 0.0 1.0 4.0 5.0 3.0 -1.0 3.0
---> outputs:
YES
NO

def main ( ) :
    import sys
    for line in sys . stdin :
        p = Point2 ( line [ 0 ] , line [ 1 ] )
        judge = False
        if ( ccw ( p [ 0 ] , p [ 3 ] , p [ 1 ] ) > 0 and ccw ( p [ 1 ] , p [ 3 ] , p [ 2 ] ) > 0 and ccw ( p [ 2 ] , p [ 3 ] , p [ 0 ] ) > 0 ) :
            judge = True
        print ( judge and "YES" or "NO" )
    class Point2 :
        x = 0
        y = 0
    def ccw ( p1 , p2 , p3 ) :
        return ( p2 [ 1 ] - p1 [ 1 ] ) * ( p3 [ 0 ] - p1 [ 0 ] ) - ( p3 [ 1 ] - p1 [ 1 ] ) * ( p2 [ 0 ] - p1 [ 0 ] )
    class Point2 ( Point2 ) :
        x = 0
        y = 0
    def ccw ( p1 , p2 , p3 ) :
        return ( p2 [ 1 ] - p1 [ 1 ] ) * ( p3 [ 0 ] - p1 [ 0 ] ) - ( p3 [ 1 ] - p1 [ 1 ] ) * ( p2 [ 0 ] - p1 [ 0 ] )
    def ccw ( p1 , p2 , p3 ) :
        return ( p3 [ 0 ] - p1 [ 0 ] ) * ( p2 [ 1 ] - p1 [ 1 ] )
    def ccw ( p1 , p2 , p3 ) :
        return ( p3 [ 0 ] - p1 [ 0 ] ) * ( p2 [ 1 ] - p1 [ 1 ] )
    def ccw ( p1 , p2 , p3 ) :
        return ( p3 [ 0 ] - p1 [ 0 ] ) * ( p2 [ 1 ] - p1 [ 1 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1279
---> probID: codeforces_755_B
---> inputs:
5 1
polandball
is
a
cool
character
nope
---> outputs:
YES

def PolandBoardAndGame ( ) :
    import sys
    n , m = sys . argv [ 1 : ]
    if n > m :
        print ( 'YES' )
    elif m > n :
        print ( 'NO' )
    else :
        d = { }
        for i in range ( n ) :
            d [ i ] = 1
        dem = 0
        for i in range ( m ) :
            if d . has_key ( i ) :
                dem += 1
        if dem % 2 == 0 :
            print ( 'NO' )
        else :
            print ( 'YES' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1280
---> probID: geeksforgeeks_2071_A
---> inputs:

---> outputs:
252


def test_GFG ( ) :
    MAX = 100005
    v = add_primes ( )
    prime = [ True for p in range ( 2 , n + 1 ) ]
    for p in range ( 2 , n + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * p , n + 1 , p ) :
                prime [ i ] = False
    ans = [ ]
    for p in range ( 2 , n + 1 ) :
        if prime [ p ] :
            ans . append ( p )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1281
---> probID: aizu_p00542_A
---> inputs:
100
34
76
42
10
0
---> outputs:
228

def py_small_science ( ) :
    import numpy as np
    science = [ ]
    minsc = 100
    sumsc = 0
    for i in range ( 4 ) :
        science . append ( np . random . randint ( minsc , size = science [ i ] ) )
        minsc = min ( minsc , science [ i ] )
        sumsc += science [ i ]
    sumsc -= minsc
    sumso = np . zeros ( science [ 0 ] )
    x = np . arange ( science [ 0 ] )
    if sumso < x :
        sumso = x
    return sumsc , sumso


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1282
---> probID: codeforces_673_A
---> inputs:
3
7 20 88
---> outputs:
35

def test_bear_and_game1 ( ) :
    sc = InputReader ( sys . stdin )
    n = sc . read ( )
    array = [ sc . read ( ) for i in range ( 100 ) ]
    flag = 15
    for i in range ( n ) :
        if array [ i ] <= flag :
            flag = array [ i ] + 15
        else :
            break
    result = min ( flag , 90 )
    fileobj = sys . stdout
    out = sys . stdout
    out . write ( result )
    out . close ( )


---> console_out:
 
DIDN'T MATCH!! :(
 73%|███████▎  | 1282/1746 [00:31<00:11, 41.04it/s]

-------------------------------------


---> lineNum: 1283
---> probID: geeksforgeeks_665_A
---> inputs:

---> outputs:
4


def genGFG ( index , evenSum , oddSum , tight ) :
    v = [ ]
    dp = [ 18 , 180 , 180 , 2 ]
    memo = [ 0 , 0 , 0 , 1 ]
    if index in v :
        if evenSum > oddSum :
            return 1
        else :
            return 0
    if dp [ index ] [ evenSum ] [ oddSum ] [ tight ] != - 1 :
        return dp [ index ] [ evenSum ] [ oddSum ] [ tight ]
    limit = ( tight or 0 )
    ans = 0
    for d in range ( 0 , limit ) :
        currTight = 0
        if d == v [ index ] :
            currTight = tight
        if d % 2 != 0 :
            ans += memo [ index + 1 , evenSum , oddSum + d , currTight ]
        else :
            ans += memo [ index + 1 , evenSum + d , oddSum , currTight ]
    dp [ index ] [ evenSum ] [ oddSum ] [ tight ] = ans
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576731785_1538/main.py", line 9
    loop :
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1284
---> probID: atcoder_ABC088_C
---> inputs:
1 0 1
2 1 2
1 0 1
---> outputs:
Yes

def main ( ) :
    import sys
    s = sys . stdin . read ( )
    c = [ ]
    b = True
    for i in range ( 3 ) :
        for j in range ( 3 ) :
            c . append ( i )
    loop :
        for i in range ( 2 ) :
            for j in range ( i + 1 , 3 ) :
                if c [ i ] [ 0 ] - c [ j ] [ 0 ] == c [ i ] [ 1 ] - c [ j ] [ 1 ] and c [ i ] [ 1 ] - c [ j ] [ 1 ] == c [ i ] [ 2 ] - c [ j ] [ 2 ] :
                    pass
                else :
                    b = False
                    break loop
        loop :
            for i in range ( 2 ) :
                for j in range ( i + 1 , 3 ) :
                    if c [ 0 ] [ i ] - c [ 0 ] [ j ] == c [ 1 ] [ i ] - c [ 1 ] [ j ] and c [ 1 ] [ i ] - c [ 1 ] [ j ] == c [ 2 ] [ i ] - c [ 2 ] [ j ] :
                        pass
                    else :
                        b = False
                        break loop
            if b :
                print ( "Yes" )
            else :
                print ( "No" )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1285
---> probID: codeforces_1739_B
---> inputs:
3
4
1 0 2 5
3
2 6 3
5
0 0 0 0 0
---> outputs:
1 1 3 8
-1
0 0 0 0 0

def main ( ) :
    import sys
    import getopt
    t = sys . argv [ 1 ]
    while t :
        n = t . pop ( )
        a = [ ]
        b = [ ]
        for i in range ( n ) :
            a . append ( i )
        flag = True
        b . append ( a )
        for i in range ( 1 , n ) :
            if a [ i ] != 0 and b [ i - 1 ] - a [ i ] >= 0 :
                flag = False
                break
            else :
                b [ i ] = b [ i - 1 ] + a [ i ]
        if not flag :
            sys . stdout . write ( - 1 )
        else :
            for i in range ( n ) :
                sys . stdout . write ( b [ i ] + " " )
            sys . stdout . write ( "\n" )
    sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1286
---> probID: projecteuler_p218_A
---> inputs:

---> outputs:
0

def p218 ( cls ) :
    return cls ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1287
---> probID: geeksforgeeks_1547_A
---> inputs:

---> outputs:
Element is present at index 3


def GFG ( arr , x ) :
    n = len ( arr )
    for i in range ( n ) :
        if arr [ i ] == x :
            return i
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(
 74%|███████▎  | 1287/1746 [00:31<00:11, 41.29it/s]

-------------------------------------


---> lineNum: 1288
---> probID: atcoder_ABC095_D
---> inputs:
3 20
2 80
9 120
16 1
---> outputs:
191

def main ( ) :
    import sys
    import getopt
    input = sys . argv [ 1 : ]
    n = int ( input [ 0 ] )
    c = long ( input [ 1 ] )
    forward_max = [ ]
    backwards_max = [ ]
    positions = [ ]
    values = [ ]
    positions . append ( 0 )
    values . append ( 0 )
    for i in range ( 1 , n + 1 ) :
        input = sys . stdin . readline ( )
        positions . append ( int ( input [ 0 ] ) )
        values . append ( int ( input [ 1 ] ) )
    max = 0
    sum = 0
    for i in range ( 0 , n + 1 ) :
        sum += values [ i ]
        max = max + sum - positions [ i ]
        forward_max . append ( max )
    max = 0
    sum = 0
    for i in range ( n , - 1 , - 1 ) :
        sum += values [ i ]
        max = max + sum - ( c - positions [ i ] )
        backwards_max . append ( max )
    res = 0
    for i in range ( 0 , n + 1 ) :
        res = max ( res , forward_max [ i ] )
        if i != n :
            res = max ( res , forward_max [ i ] - ( positions [ i ] ) + backwards_max [ i + 1 ] )
        res = max ( res , backwards_max [ i ] )
        if i != 0 :
            res = max ( res , backwards_max [ i ] - ( c - positions [ i ] ) + forwards_max [ i - 1 ] )
    sys . stdout . write ( res )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1289
---> probID: geeksforgeeks_1848_A
---> inputs:

---> outputs:
32


def test_GFG ( ) :
    n = 42
    l , r = 2 , 5
    assert ( n ^ num ) == ( n ^ num )
    assert ( n & num ) == ( n & num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )
    assert ( n ^ num ) == ( n ^ num )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1290
---> probID: geeksforgeeks_3387_A
---> inputs:

---> outputs:
7


def GFG ( a , n ) :
    positive , negative , zero = 0 , 0 , 0
    step = 0
    for i in range ( n ) :
        if a [ i ] == 0 :
            zero += 1
        elif a [ i ] < 0 :
            negative += 1
            step = step + ( - 1 - a [ i ] )
        else :
            positive += 1
            step = step + ( a [ i ] - 1 )
    if negative % 2 == 0 :
        step = step + zero
    else :
        if zero > 0 :
            step = step + zero
        else :
            step = step + 2
    return step


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1291
---> probID: codeforces_743_A
---> inputs:
4 1 4
1010
---> outputs:
1

def main ( ) :
    import sys
    number , start , end = sys . argv [ 1 : ]
    arr = [ ]
    str = sys . stdin . readline ( )
    for i in range ( len ( str ) ) :
        arr . append ( str [ i ] - '0' )
    if arr [ start ] == arr [ end ] :
        print ( 0 )
    else :
        print ( abs ( arr [ start ] - arr [ end ] ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1292
---> probID: codeforces_1654_A
---> inputs:
5
6
5 2 1 4 7 3
3
32 78 78
3
69 54 91
8
999021 999021 999021 999021 999652 999021 999021 999021
2
1000000000 1000000000
---> outputs:
12
156
160
1998673
2000000000

def main ( ) :
    import sys
    t = sys . argv [ 1 ]
    while t :
        n = len ( sys . argv )
        num = [ ]
        for i in range ( n ) :
            num . append ( sys . argv [ i ] )
        num . sort ( )
        print ( num [ - 1 ] + num [ - 2 ] )


---> console_out:
 
DIDN'T MATCH!! :(
 74%|███████▍  | 1292/1746 [00:31<00:11, 41.18it/s]

-------------------------------------


---> lineNum: 1293
---> probID: geeksforgeeks_3154_A
---> inputs:

---> outputs:
4


def GFG ( a , b ) :
    if b == 0 :
        return a
    return __gcd ( b , a % b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1294
---> probID: geeksforgeeks_2238_A
---> inputs:

---> outputs:
1557


def GFG ( s , a ) :
    n = len ( s )
    for i in range ( n ) :
        if s [ i ] - '0' < a [ s [ i ] - '0' ] :
            j = i
            while j < n and ( s [ j ] - '0' <= a [ s [ j ] - '0' ] ) :
                s [ j ] = chr ( ord ( '0' ) + a [ s [ j ] - '0' ] )
                j += 1
            return str ( s )
    return str ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1295
---> probID: geeksforgeeks_1820_A
---> inputs:

---> outputs:
Yes


def get_GFG ( n ) :
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    n = int ( n )
    return n
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1296
---> probID: codeforces_146_A
---> inputs:
2
47
---> outputs:
NO

def main ( ) :
    import sys
    x , y = 0 , 0
    t = 0
    n = len ( sys . argv )
    str = sys . argv [ 1 ]
    l = [ ]
    l . append ( str )
    for i in range ( n ) :
        if l [ i ] != '4' and l [ i ] != '7' : t = 1
    if t == 1 :
        print ( 'NO' )
    else :
        for i in range ( n // 2 ) : x = x + ord ( l [ i ] )
        for i in range ( n - 1 , ( n // 2 ) - 1 ) : y = y + ord ( l [ i ] )
        if x == y :
            print ( 'YES' )
        else :
            print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1297
---> probID: geeksforgeeks_4040_A
---> inputs:

---> outputs:
Fixed Point is 2
Fixed Point is 3


def GFG ( arr , low , high ) :
    if high < low :
        return - 1
    mid = ( low + high ) // 2
    mid_value = arr [ mid ]
    if mid == arr [ mid ] :
        return mid
    leftindex = min ( mid - 1 , mid_value )
    left = binarySearch ( arr , low , leftindex )
    if left >= 0 :
        return left
    rightindex = max ( mid + 1 , mid_value )
    right = binarySearch ( arr , rightindex , high )
    return right


---> console_out:
 
DIDN'T MATCH!! :(
 74%|███████▍  | 1297/1746 [00:31<00:10, 41.08it/s]

-------------------------------------


---> lineNum: 1298
---> probID: geeksforgeeks_4563_A
---> inputs:

---> outputs:
23 

def get_GFG ( n ) :
    MAX = 10000
    prodDig = [ 0 ] * MAX
    def get_digit_product ( x ) :
        if x < 10 :
            return x
        if prodDig [ x ] != 0 :
            return prodDig [ x ]
        prod = ( x % 10 ) * get_digit_product ( x / 10 )
        return ( prodDig [ x ] , prod )
    def find_seed ( n ) :
        res = [ ]
        for i in range ( 1 , n // 2 ) :
            if i * get_digit_product ( i ) == n :
                res . append ( i )
        if len ( res ) == 0 :
            print ( "NO seed exists" )
            return
        for i in res :
            print ( i , end = ' ' )
    def find_seed ( n ) :
        n = 138
        find_seed ( n )
    return ( find_seed ( n ) , find_seed ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576732150_3838/main.py", line 2
    f = open

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1299
---> probID: atcoder_ABC107_C
---> inputs:
5 3
-30 -10 10 20 50
---> outputs:
40

def main ( ) :
    f = open

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1300
---> probID: geeksforgeeks_4414_A
---> inputs:

---> outputs:
Cubic root of 3 is 1.44225


def pythagen_poly ( n , mid ) :
    if n > ( mid ** 2 ) :
        return ( n - ( mid ** 2 ) )
    else :
        return ( ( mid ** 2 ) - n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1301
---> probID: codeforces_1042_A
---> inputs:
4
6
1
1
1
1
---> outputs:
3 7

def main ( ) :
    import sys
    n , m = sys . argv [ 1 ] , sys . argv [ 2 ]
    a = range ( 105 )
    max = 0
    for i in range ( 0 , n - 1 ) :
        a [ i ] = a [ i ]
        if i > 0 and a [ i ] > a [ max ] : max = i
    ansmax = a [ max ] + m
    for i in range ( 0 , m - 1 ) :
        min = 0
        for j in range ( 0 , n - 1 ) :
            if j > 0 and a [ j ] < a [ min ] : min = j
        a [ min ] += 1
    max = 0
    for i in range ( 1 , n - 1 ) :
        if a [ i ] > a [ max ] : max = i
    ansmin = a [ max ]
    print ( ansmin , ansmax )
    sys . exit ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1302
---> probID: geeksforgeeks_4197_A
---> inputs:

---> outputs:
x is  11


def test_GFG ( ) :
    m0 , t , q = symbols ( 'm0,t,q' , integer = True )
    x0 , x1 = 0 , 1
    if m == 1 :
        return x0 , x1
    while a > 1 :
        q , t , m = a // m , a % m , a % m
        a , t , x0 = t , x0 - q * x0 , t
        x1 , x0 = x0 , x1 - q * x0
    if x1 < 0 :
        x1 += m0
    return x1 , x0


---> console_out:
 
DIDN'T MATCH!! :(
 75%|███████▍  | 1302/1746 [00:31<00:10, 41.00it/s]  File "./junk/1692576732247_1396/main.py", line 1
    def import ( arrgs ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1303
---> probID: geeksforgeeks_721_A
---> inputs:

---> outputs:
2


def import ( arrgs ) :
    import sys
    import re
    class solution :
        compare = lambda a , b : a > b
        def find_max_OR ( arr , n ) :
            temp = 0
            for i in range ( n ) :
                for j in range ( i + 1 , n ) :
                    if arr [ i ] < arr [ j ] :
                        temp = arr [ i ]
                        arr [ i ] , arr [ j ] = arr [ j ] , temp
            max_OR = arr [ 0 ]
            count = 1
            for i in range ( 1 , n ) :
                if ( max_OR | arr [ i ] ) > max_OR :
                    max_OR = max_OR | arr [ i ]
                    count += 1
            return count
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1304
---> probID: geeksforgeeks_3181_A
---> inputs:

---> outputs:
20.0


def test_GFG ( ) :
    n = 4
    assert gf_degree ( [ 1 , 2 , 3 ] , n , ZZ ) == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1305
---> probID: geeksforgeeks_2275_A
---> inputs:

---> outputs:
16


def test_GFG ( ) :
    n = 12
    assert aliquot_sum ( n ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1306
---> probID: geeksforgeeks_1714_A
---> inputs:

---> outputs:
40


def test_GFG ( ) :
    """Test the pentagon pyramidal algorithm."""
    n = 4
    assert len ( pentagon_pyramidal ( n ) ) == n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1307
---> probID: geeksforgeeks_1672_A
---> inputs:

---> outputs:
12201


def test_GFG ( ) :
    n = 6
    assert fifth_power_sum ( n ) == 1


---> console_out:
 
DIDN'T MATCH!! :(
 75%|███████▍  | 1307/1746 [00:31<00:10, 41.54it/s]

-------------------------------------


---> lineNum: 1308
---> probID: geeksforgeeks_4067_A
---> inputs:

---> outputs:
30


def test_GFG ( ) :
    n = 4
    assert squaresum ( n ) == n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1309
---> probID: geeksforgeeks_3046_A
---> inputs:

---> outputs:
20.0


def test_GFG ( ) :
    n = 4
    assert gf_degree ( [ 1 , 2 , 3 ] , n , ZZ ) == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1310
---> probID: geeksforgeeks_4057_A
---> inputs:

---> outputs:
1330


def test_GFG ( ) :
    n = 10
    assert sum_of_series ( n ) == n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1311
---> probID: geeksforgeeks_4824_A
---> inputs:

---> outputs:
20


def GFG ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += ( ( i * ( i + 1 ) * ( 2 * i + 1 ) ) / 6 )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576732457_1232/main.py", line 15
    
                                    ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1312
---> probID: geeksforgeeks_3043_A
---> inputs:

---> outputs:
2275


def test_gf_gf_sum ( ) :
    assert gf_gf_sum ( [ ] , 11 , ZZ ) == [ ]
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == [ 1 ]
    assert gf_gf_sum ( [ 1 , 2 , 3 ] , 11 , ZZ ) == [ 1 , 2 , 3 ]
    assert gf_gf_sum ( [ 1 , 2 , 3 ] , 11 , ZZ ) == [ 1 , 2 , 3 ]
    assert gf_gf_sum ( [ 1 , 2 , 3 ] , 11 , ZZ ) == [ 1 , 2 , 3 ]
    assert gf_gf_sum ( [ 1 , 2 , 3 ] , 11 , ZZ ) == [ 1 , 2 , 3 ]
    assert gf_gf_sum ( [ 1 , 2 , 3 ] , 11 , ZZ ) == [ 1 , 2 , 3 ]
    assert gf_gf_sum ( [ 1 , 2 , 3 ] , 11 , ZZ ) == [ 1 , 2 , 3 ]
    assert gf_gf_sum ( [ 1 , 2 , 3 ] , 11 , ZZ ) == [ 1 , 2 , 3 ]
    assert gf_gf_sum ( [ 1 , 2 , 3 ] , 11 , ZZ ) == [ 1 , 2 , 3 ]
    assert gf_gf_sum ( [ 1 , 2 , 3 ] , 11 , ZZ ) == [ 1 , 2 , 3 ]
    assert gf_gf_sum ( [ 1 , 2 , 3 ] , 11 , ZZ ) == [ 1 , 2 , 3 ]
    assert gf_gf_sum ( [ 1 , 2 ,

---> console_out:
 
DIDN'T MATCH!! :(
 75%|███████▌  | 1312/1746 [00:31<00:10, 41.82it/s]

-------------------------------------


---> lineNum: 1313
---> probID: geeksforgeeks_2336_A
---> inputs:

---> outputs:
816


def test_GFG ( ) :
    assert squaresum ( 8 ) == 8


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1314
---> probID: geeksforgeeks_4689_A
---> inputs:

---> outputs:
2.5


def test_GFG ( ) :
    n = 2
    assert AvgofSquareN ( n ) == n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1315
---> probID: geeksforgeeks_1613_A
---> inputs:

---> outputs:
8


def test_GFG ( ) :
    n = 3
    assert find_sum ( n ) == 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1316
---> probID: geeksforgeeks_4020_A
---> inputs:

---> outputs:
7


def test_GFG ( ) :
    """Test the number of leading zeros in a GFG."""
    n = 8
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n ) == [ 1 ]
    assert solve ( n )

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1317
---> probID: aizu_p00053_A
---> inputs:
2
9
0
---> outputs:
5
100

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        print ( msg )
        return
    for o , a in opts :
        if o == '-d' :
            for i in range ( 2 , N ) :
                f = True
                for j in range ( len ( p ) ) :
                    f &= i % p [ j ] != 0
                    if not f :
                        break
                if f :
                    p . append ( i )
        while True :
            n = input ( ) . split ( )
            if not n :
                break
            sum = 0
            for i in range ( n ) :
                sum += p [ i ]
            print ( sum )
        sys . exit ( 0 )
    def debug ( * os ) :
        sys . stderr . write ( '%s\n' % ' ' . join ( map ( str , os ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 75%|███████▌  | 1317/1746 [00:31<00:10, 41.67it/s]

-------------------------------------


---> lineNum: 1318
---> probID: geeksforgeeks_1878_A
---> inputs:

---> outputs:
1
4


def test_GFG ( ) :
    assert int ( f_g ( 4 ) ) == 4
    assert int ( f_g ( 15 ) ) == 15


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1319
---> probID: geeksforgeeks_4891_A
---> inputs:

---> outputs:
Cost of Optimal BST is 142


def Optimal_BST2 ( keys , freq , n ) :
    cost = [ 0 ] * n + [ 0 ] * n + [ 0 ] * n
    for i in range ( n ) :
        cost [ i ] [ i ] = freq [ i ]
    for L in range ( 2 , n + 1 ) :
        for i in range ( 0 , n - L + 1 ) :
            j = i + L - 1
            cost [ i ] [ j ] = sys . maxsize
            for r in range ( i , j + 1 ) :
                c = ( ( r > i ) and cost [ i ] [ r - 1 ] or 0 ) + ( ( r < j ) and cost [ r + 1 ] [ j ] or 0 ) + sum ( freq , i , j )
                if c < cost [ i ] [ j ] :
                    cost [ i ] [ j ] = c
    return cost [ 0 ] [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1320
---> probID: geeksforgeeks_1139_A
---> inputs:

---> outputs:
6


def GFG ( x , y , z ) :
    if x > z :
        return - 1
    val = z - x
    div = ( z - x ) / y
    ans = div * y + x
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576732673_2216/main.py", line 21
    in . init ( sys . stdin )
    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1321
---> probID: codeforces_612_B
---> inputs:
3
3 1 2
---> outputs:
3

def code_forces ( ) :
    import sys
    import os
    import pickle
    import pickle
    import pickle . dump
    BUFFERSIZE = 512000
    def solve ( ) :
        n = len ( sys . argv )
        d = { }
        for i in range ( n ) :
            d [ sys . argv [ i ] ] = i
        last_loc = d [ 1 ]
        ans = 0
        for i in range ( 1 , n + 1 ) :
            new_loc = d [ i ]
            ans += abs ( last_loc - new_loc )
            last_loc = new_loc
        sys . stdout . write ( ans )
    def solve ( ) :
        in . init ( sys . stdin )
        solve ( )
        out . close ( )
    class in :
        def __init__ ( self , input ) :
            self . input = input
        def readline ( self ) :
            return self . input . readline ( )
        def readline ( self ) :
            return self . input . readline ( )
        def readline ( self ) :
            return self . input . readline ( )
        def readline ( self ) :
            return self . input . readline ( )
    def next ( self ) :
        while not self . input . done ( ) :
            self . input . readline ( )
        return self . input . readline ( )
    def next ( self ) :
        return sys . stdin . readline ( )
    def next ( self ) :
        return sys . stdin . readline ( )
    def next ( self ) :
        return sys . stdin . readline ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1322
---> probID: geeksforgeeks_2993_A
---> inputs:

---> outputs:
6


def genomial_coeff ( n , k ) :
    C = [ 0 ] * ( n + 1 ) + [ 0 ] * ( k + 1 )
    for i in range ( 0 , n + 1 ) :
        for j in range ( 0 , min ( i , k ) + 1 ) :
            if j == 0 or j == i :
                C [ i ] [ j ] = 1
            else :
                C [ i ] [ j ] = C [ i - 1 ] [ j - 1 ] + C [ i - 1 ] [ j ]
    return C [ n ] [ k ]


---> console_out:
 
DIDN'T MATCH!! :(
 76%|███████▌  | 1322/1746 [00:32<00:10, 41.87it/s]

-------------------------------------


---> lineNum: 1323
---> probID: geeksforgeeks_1163_A
---> inputs:

---> outputs:
2


def GFG ( ch ) :
    try :
        ch = ch . lower ( )
    except AttributeError :
        return None
    vowelPairs = [ ]
    for i in range ( len ( ch ) - 1 ) :
        if isVowel ( ch [ i ] ) and isVowel ( ch [ i + 1 ] ) :
            cnt += 1
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1324
---> probID: aizu_p00706_A
---> inputs:
16
10 8
2 2
2 5
2 7
3 3
3 8
4 2
4 5
4 8
6 4
6 7
7 5
7 8
8 1
8 4
9 6
10 3
4 3
8
6 4
1 2
2 1
2 4
3 4
4 2
5 3
6 1
6 2
3 2
0
---> outputs:
4
3

def main ( ) :
    import sys
    import getopt
    try :
        scn = getopt . getopt ( sys . argv [ 1 : ] , 'w' )
    except getopt . error as msg :
        sys . stdout . write ( msg + '\n' )
        sys . exit ( 1 )
    if scn == 'w' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == 'h' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == '?' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == '-' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == '--' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == '--' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == '--' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == '--' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == '--' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == '--' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == '--' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == '--' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == '--' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == '--' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    if scn == '--' :
        sys . stdout . write ( '' )
        sys . exit ( 1 )
    sys . exit ( 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1325
---> probID: geeksforgeeks_2780_A
---> inputs:

---> outputs:
Present at index 5


def GFG ( s1 , s2 ) :
    M = len ( s1 )
    N = len ( s2 )
    for i in range ( 0 , N - M + 1 ) :
        j = 0
        for j in range ( M ) :
            if s2 [ i + j ] != s1 [ j ] :
                break
        if j == M :
            return i
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1326
---> probID: geeksforgeeks_836_A
---> inputs:

---> outputs:
The angle is 32.5 degrees


def test_GFG ( ) :
    angle = 65
    z = angle_oncircumference ( angle )
    assert z == angle


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1327
---> probID: geeksforgeeks_416_A
---> inputs:

---> outputs:
Count of subarrays of 0 only: 5
Count of subarrays of 1 only: 15


def test_GFG ( ) :
    """Test the number of subarrays of 0 only."""
    count1 , count0 = 0 , 0
    number1 , number0 = 0 , 0
    for i in range ( n ) :
        if i == 1 :
            count1 += 1
        else :
            number1 += ( count1 ) * ( count1 + 1 ) / 2
            count1 = 0
    for i in range ( n ) :
        if i == 0 :
            count0 += 1
        else :
            number0 += ( count0 ) * ( count0 + 1 ) / 2
            count0 = 0
    if count1 :
        number1 += ( count1 ) * ( count1 + 1 ) / 2
    if count0 :
        number0 += ( count0 ) * ( count0 + 1 ) / 2
    print ( "Count of subarrays of 0 only: " , number0 )
    print ( "\nCount of subarrays of 1 only: " , number1 )


---> console_out:
 
DIDN'T MATCH!! :(
 76%|███████▌  | 1327/1746 [00:32<00:10, 41.79it/s]

-------------------------------------


---> lineNum: 1328
---> probID: geeksforgeeks_5089_A
---> inputs:

---> outputs:
13 11 3 1 

def GFG ( N ) :
    flag = 1
    x = N
    if N > 0 :
        while x > 0 and flag == 1 :
            digit = x % 10
            if digit != 1 and digit != 3 :
                flag = 0
            x = x / 10
        if flag == 1 :
            print ( N , end = ' ' )
        return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1329
---> probID: geeksforgeeks_4831_A
---> inputs:

---> outputs:
5 4 3 1 2 

def test_GFG ( ) :
    i , mx = symbols ( 'i mx' , integer = True , cls = Dummy )
    for i in range ( 1 , k ) :
        assert mx == i
        mx -= 1
    for i in range ( 1 , mx ) :
        assert i == mx


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1330
---> probID: codeforces_1017_A
---> inputs:
5
100 98 100 100
100 100 100 100
100 100 99 99
90 99 90 100
100 98 60 99
---> outputs:
2

def the_rank ( ) :
    """
 Return the rank of the rank of the matrix.
 """
    n = len ( np . arange ( 0 , n + 1 ) )
    ans = 0
    rank = 1
    arr = [ ]
    for i in range ( n ) :
        a = np . arange ( 0 , n + 1 )
        b = np . arange ( 0 , n + 1 )
        c = np . arange ( 0 , n + 1 )
        d = np . arange ( 0 , n + 1 )
        sum = a + b + c + d
        arr . append ( sum )
    for j in arr :
        if arr [ 0 ] < j :
            rank += 1
    print ( rank )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1331
---> probID: geeksforgeeks_2666_A
---> inputs:

---> outputs:
Yes


def get_GFG ( s1 , s2 ) :
    mp = { }
    for c in s1 :
        mp [ c ] = mp [ c ] if c in mp else 1
    for c in s2 :
        if mp [ c ] > 0 :
            return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1332
---> probID: codeforces_1341_A
---> inputs:
5
7 20 3 101 18
11 11 10 234 2
8 9 7 250 122
19 41 21 321 10
3 10 8 6 1
---> outputs:
Yes
No
Yes
No
Yes

def test_practice ( ) :
    x = Symbol ( 'x' )
    t = Symbol ( 't' , integer = True )
    while t . is_integer is True :
        n = Symbol ( 'n' , integer = True )
        a = Symbol ( 'a' , integer = True )
        b = Symbol ( 'b' , integer = True )
        c = Symbol ( 'c' , integer = True )
        d = Symbol ( 'd' , integer = True )
        flag = False
        k = n * ( a - b )
        m = n * ( a + b )
        if k > ( c + d ) or m < ( c - d ) :
            assert False
        else :
            assert True


---> console_out:
 
DIDN'T MATCH!! :(
 76%|███████▋  | 1332/1746 [00:32<00:09, 42.08it/s]

-------------------------------------


---> lineNum: 1333
---> probID: geeksforgeeks_1483_A
---> inputs:

---> outputs:
2 -6 1 

def test_GFG ( ) :
    arr = [ 2 , - 6 , 3 , 5 , 1 ]
    n = len ( arr )
    assert len ( arr ) == n
    for i in range ( n ) :
        count = 0
        for j in range ( n ) :
            if arr [ j ] > arr [ i ] :
                count += 1
        if count >= 2 :
            assert arr [ i ] == arr [ i ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1334
---> probID: geeksforgeeks_3478_A
---> inputs:

---> outputs:
14


def test_GFG ( ) :
    N = 3
    max_path_sum = [ 0 , 0 , 0 ]
    for i in range ( m - 1 , - 1 , - 1 ) :
        for j in range ( 0 , i + 1 ) :
            if tri [ i + 1 ] [ j ] > tri [ i + 1 ] [ j + 1 ] :
                tri [ i ] [ j ] += tri [ i + 1 ] [ j ]
            else :
                tri [ i ] [ j ] += tri [ i + 1 ] [ j + 1 ]
    return tri


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1335
---> probID: geeksforgeeks_3197_A
---> inputs:

---> outputs:
Yes


def GFG ( arr , n ) :
    for i in range ( 0 , ( n - 2 ) // 2 ) :
        if arr [ 2 * i + 1 ] > arr [ i ] :
            return False
        if 2 * i + 2 < n and arr [ 2 * i + 2 ] > arr [ i ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1336
---> probID: geeksforgeeks_3196_A
---> inputs:

---> outputs:
Yes


def GFG ( arr , i , n ) :
    if i > ( n - 2 ) / 2 :
        return True
    if arr [ i ] >= arr [ 2 * i + 1 ] and arr [ i ] >= arr [ 2 * i + 2 ] and is_heap ( arr , 2 * i + 1 , n ) and is_heap ( arr , 2 * i + 2 , n ) :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576733050_2297/main.py", line 32
    print ( ( ( bx - ax ) * ( cy - ay ) == ( cx - ax ) * ( by - ay ) ) or ( ( ax - bx ) * ( ax - bx ) + ( ay - by ) * ( ay - by ) != ( cx - bx ) * ( cx - bx ) + ( cy - by ) * ( cy - by ) ) ) and ( ( ax - bx ) * ( ax - bx ) + ( ay - by ) * ( ay - by ) ) ) and ( ( cx - bx ) * ( cx - bx ) + ( cy - by ) * ( cy - by ) ) ) and ( ( bx - by ) * ( bx - by ) + ( cx - bx ) ) and ( ( cy - by ) * ( cy - by ) + ( bx - by ) ) ) :
                                                                                                                                                                                                                                                             ^
SyntaxError: unmatched ')'


-------------------------------------


---> lineNum: 1337
---> probID: codeforces_851_B
---> inputs:
0 1 1 1 1 0
---> outputs:
Yes

def main ( ) :
    import sys
    import getopt
    global ax , ay , bx , by , cx , cy
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , "ax:ay:bx:by:cx:cy" )
    except getopt . error as msg :
        print ( msg )
        return
    for o , a in opts :
        if o == '-a' :
            ax = a
        if o == '-x' :
            bx = a
        if o == '-y' :
            by = a
        if o == '-c' :
            cx = a
        if o == '-r' :
            cy = a
    if args and not args [ 0 ] :
        print ( "Usage:" , sys . argv [ 0 ] , "-aSPACETOKEN[ax]SPACETOKEN[ay]SPACETOKEN[bx|by|cx]" )
        sys . exit ( 1 )
    if not args :
        ax = bx
        ay = by
    if not args :
        cx = cy
        bx = by
        by = cx
        cx = cy
    print ( ( ( bx - ax ) * ( cy - ay ) == ( cx - ax ) * ( by - ay ) ) or ( ( ax - bx ) * ( ax - bx ) + ( ay - by ) * ( ay - by ) != ( cx - bx ) * ( cx - bx ) + ( cy - by ) * ( cy - by ) ) ) and ( ( ax - bx ) * ( ax - bx ) + ( ay - by ) * ( ay - by ) ) ) and ( ( cx - bx ) * ( cx - bx ) + ( cy - by ) * ( cy - by ) ) ) and ( ( bx - by ) * ( bx - by ) + ( cx - bx ) ) and ( ( cy - by ) * ( cy - by ) + ( bx - by ) ) ) :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(
 77%|███████▋  | 1337/1746 [00:32<00:09, 42.15it/s]

-------------------------------------


---> lineNum: 1338
---> probID: geeksforgeeks_1515_A
---> inputs:

---> outputs:
2


def GFG ( arr , n ) :
    min_num = int ( arr [ 0 ] )
    for i in range ( n ) :
        min_num = min ( arr [ i ] , min_num )
    cnt = 0
    for i in range ( n ) :
        if arr [ i ] == min_num :
            cnt += 1
    return n - cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1339
---> probID: geeksforgeeks_563_A
---> inputs:

---> outputs:
1
INF
1


def py2k ( x , y ) :
    ans = 0
    m = { }
    while x % y != 0 :
        x , y = divmod ( x , y )
        ans += 1
        if m . has_key ( x ) :
            return - 1
        m [ x ] = 1
        x = x * 10
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1340
---> probID: geeksforgeeks_2307_A
---> inputs:

---> outputs:
Yes


def GFG ( arr , n ) :
    remainder = 0
    for i in range ( n ) :
        remainder = ( remainder + arr [ i ] ) % 3
    return ( remainder , arr [ n ] )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576733149_1140/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1341
---> probID: atcoder_AGC004_D
---> inputs:
3 1
2 3 1
---> outputs:
2

def import ( ) :
    import sys
    import getopt
    try :
        N , K = sys . argv [ 1 : ]
    except :
        sys . exit ( "Usage: import <N> <K>" )
    ans = 0
    vec = [ ]
    for i in range ( N ) :
        vec . append ( [ 0 ] * N )
    for i in range ( N ) :
        a = sys . argv [ 2 ] - 1
        if i != 0 :
            vec [ a ] . append ( i )
        else :
            if a != 0 :
                ans += 1
    dfs ( 0 , 0 )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576733173_3746/main.py", line 1
    def class Test ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1342
---> probID: geeksforgeeks_269_A
---> inputs:

---> outputs:
Perfect cubes in given range: 
1 8 27 64 

def class Test ( ) :
    for a , b in itertools . combinations ( range ( a , b + 1 ) , 2 ) :
        for j in range ( 1 , j ** 2 ) :
            if j ** 2 * j == i :
                print ( j ** 2 * j + 1 , end = '  ' )
                break


---> console_out:
 
DIDN'T MATCH!! :(
 77%|███████▋  | 1342/1746 [00:32<00:09, 41.96it/s]

-------------------------------------


---> lineNum: 1343
---> probID: geeksforgeeks_2053_A
---> inputs:

---> outputs:
6 moduo 4 is 2


def test_GFG ( ) :
    n = 6
    d = 4
    assert n == 1
    assert d == 1


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1692576733219_4664/main.py", line 62, in <module>
    assert FastReader ( ) . f == FastReader ( ) . f
NameError: name 'FastReader' is not defined


-------------------------------------


---> lineNum: 1344
---> probID: codeforces_940_A
---> inputs:
3 1
2 1 4
---> outputs:
1

def test_pre598 ( ) :
    class FastReader ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastReader ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastReader ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastReader ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastReader ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastReader ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastReader ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastReader ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastReader ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastReader ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastReader ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastReader ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
    class FastReader ( object ) :
        f = StringIO ( )
    class FastWriter ( object ) :
        f = StringIO ( )
assert FastReader ( ) . f == FastReader ( ) . f


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1345
---> probID: codeforces_725_B
---> inputs:
1f
---> outputs:
1

def test_code_force ( ) :
    f = BytesIO ( )
    s = f . getvalue ( )
    sr = re . compile ( r'(([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)\.([a-z]+)' )
    assert s == sr


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1346
---> probID: geeksforgeeks_1256_A
---> inputs:

---> outputs:
Yes
Yes
No


def GFG ( x ) :
    cr = int ( math . cbrt ( x ) )
    return ( cr * cr * cr == x )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1347
---> probID: atcoder_AGC006_A
---> inputs:
3
abc
cde
---> outputs:
5

def main ( ) :
    import sys
    n = int ( sys . argv [ 1 ] )
    s = sys . stdin . readline ( )
    t = sys . stdin . readline ( )
    sys . stdin . close ( )
    result = 2 ** n
    for i in range ( n ) :
        foot = t [ : n - i ]
        if s . endswith ( foot ) :
            result -= len ( foot )
            break
    print ( result )


---> console_out:
 
DIDN'T MATCH!! :(
 77%|███████▋  | 1347/1746 [00:32<00:09, 41.96it/s]

-------------------------------------


---> lineNum: 1348
---> probID: geeksforgeeks_3900_A
---> inputs:

---> outputs:
Following is Depth First Traversal (starting from vertex 2)
2 0 1 3 

def graph ( v ) :
    import sys
    import networkx
    class Graph ( networkx . Graph ) :
        V = None
        adj = [ ]
        def __init__ ( self , v ) :
            self . V = v
            self . adj = [ ]
        def addEdge ( self , v , w ) :
            self . adj . append ( w )
        def DFSUtil ( self , v , visited = False ) :
            visited [ v ] = True
            print ( v , end = ' ' )
            i = self . adj [ v ]
            for n in i :
                if not visited [ n ] :
                    DFSUtil ( n , visited )
        def DFS ( self ) :
            visited = [ False ] * V
            DFSUtil ( self )
        def main ( ) :
            g = Graph ( 4 )
            g . addEdge ( 0 , 1 )
            g . addEdge ( 0 , 2 )
            g . addEdge ( 1 , 2 )
            g . addEdge ( 2 , 0 )
            g . addEdge ( 2 , 3 )
            g . addEdge ( 3 , 3 )
            print ( 'Following is Depth First Traversal (starting from vertex 2)' )
            g . DFS ( 2 )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1349
---> probID: geeksforgeeks_2332_A
---> inputs:

---> outputs:
0 1 2 2 0 3 0 1 0 0 

def test_GFG ( ) :
    import numpy as np
    import random
    import math
    from genmsg . msg_loader import MsgNotFound
    from genmsg . msg_parser import MsgContext
    msg_context = MsgContext . create_default ( )
    x = np . random . random ( ( 10 , 10 ) )
    arr = np . random . random ( ( 10 , 10 ) )
    for i in range ( 1 , 10 ) :
        val = math . pow ( float ( x ) , float ( i ) )
        msg_context . set_float ( 'val' , val )
    for i in range ( 0 , 9 ) :
        print ( '%d ' % i )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576733364_3035/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1350
---> probID: codeforces_108_B
---> inputs:
3
64 16 32
---> outputs:
NO

def import ( ) :
    import sys
    import os
    import pickle
    import math
    import os . path
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1351
---> probID: codeforces_23_B
---> inputs:
1
3
---> outputs:
1

def main ( ) :
    import sys
    t = sys . argv [ 1 ]
    for i in range ( t ) :
        n = int ( sys . argv [ i ] )
        print ( max_left ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1352
---> probID: codeforces_469_A
---> inputs:
4
3 1 2 3
2 2 4
---> outputs:
I become the guy.

def main ( ) :
    import sys
    n = len ( sys . argv )
    hs = set ( )
    a = sys . argv [ 1 ]
    for i in a :
        hs . add ( i )
    b = sys . argv [ 2 ]
    for i in b :
        hs . add ( i )
    if len ( hs ) == n :
        print ( "I become the guy." )
    else :
        print ( "Oh, my keyboard!" )


---> console_out:
 
DIDN'T MATCH!! :(
 77%|███████▋  | 1352/1746 [00:32<00:09, 41.66it/s]

-------------------------------------


---> lineNum: 1353
---> probID: geeksforgeeks_4977_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    m , n = 6 , 4
    linear_check ( ar , m )
    for i in range ( m ) :
        matched = True
        for j in range ( n ) :
            if ar [ i ] [ j ] != arr [ j ] :
                matched = False
                break
        if matched :
            return i + 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1354
---> probID: codeforces_1538_B
---> inputs:
5
4
4 5 2 5
2
0 4
5
10 8 5 1 4
1
10000
7
1 1 1 1 1 1 1
---> outputs:
2
1
-1
0
0

def test_candy_and_friend ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' )
    while t :
        n = symbols ( 'n' )
        a = [ ]
        sum , count = 0 , 0
        for i in range ( n ) :
            a . append ( i )
            sum += a [ i ]
        if sum % n == 0 :
            div = sum / n
            for i in range ( n ) :
                if a [ i ] > div :
                    count += 1
            assert count == 1
        else :
            assert - 1 == count
        t = t . subs ( n , 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1355
---> probID: atcoder_ABC076_D
---> inputs:
1
100
30
---> outputs:
2100.000000000000000

def test_main ( ) :
    """Test the main function."""
    main = partial ( solve , N = N )
    def solve_d ( ) :
        t = np . linspace ( 0 , 1 , N )
        sum_t = 0
        for i in range ( N ) :
            t [ i ] = np . random . randint ( 0 , 1 , N ) * 2
            sum_t += t [ i ]
        v = np . random . randint ( 0 , 1 , N ) * 2
        tmp_v = np . random . randint ( 0 , 1 , N ) * 2
        tmp_t = 0
        max_v = np . zeros ( sum_t + 1 )
        for i in range ( N ) :
            max_v [ tmp_t ] = v [ i ] < tmp_v [ i ]
            tmp_v = max_v [ tmp_t ]
            for t_ind in range ( t [ i ] ) :
                max_v [ ++ tmp_t ] = v [ i ] < tmp_v [ i + 1 ]
                tmp_v = max_v [ tmp_t ]
        tmp_v = 0
        for i in range ( N - 1 , - 1 , - 1 ) :
            max_v [ tmp_t ] = v [ i ] < tmp_v [ i ]
            tmp_v = max_v [ tmp_t ]
            for t_ind in range ( t [ i ] ) :
                back_v = v [ i ] < tmp_v [ i + 1 ]
                del tmp_t
                max_v [ tmp_t ] = max_v [ tmp_t ] < back_v [ tmp_t ]
                tmp_v = max_v [ tmp_t ]
        answer = 0
        for i in range ( sum_t ) :
            answer += ( max_v [ i ] + max_v [ i + 1 ] )
        assert_almost_equal ( answer * 0.125 , 1.25 )
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576733510_2843/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1356
---> probID: geeksforgeeks_5016_A
---> inputs:

---> outputs:
46


def import ( n ) :
    import numpy as np
    class solution :
        def nth_term ( n ) :
            return 2 ** int ( np . power ( n , 2 ) ) + 4 * n - 2
        def main ( arr ) :
            N = 4
            return np . array ( [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 ] )
    return solution


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576733533_9861/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1357
---> probID: geeksforgeeks_5023_A
---> inputs:

---> outputs:
91


def import ( n ) :
    import numpy as np
    class solution :
        def nth_term ( n ) :
            return 7 * int ( np . power ( n , 2 ) ) - 7 * n + 7
        def main ( arr ) :
            N = 4
            return np . array ( [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 ] )
    return solution


---> console_out:
 
DIDN'T MATCH!! :(
 78%|███████▊  | 1357/1746 [00:32<00:09, 41.74it/s]  File "./junk/1692576733557_3602/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1358
---> probID: geeksforgeeks_3741_A
---> inputs:

---> outputs:
60


def import ( n ) :
    import numpy as np
    class solution :
        def nth_term ( n ) :
            return 5 * int ( np . power ( n , 2 ) ) - 5 * n
        def main ( arr ) :
            N = 4
            print ( nth_term ( N ) )
    return solution


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576733580_1328/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1359
---> probID: geeksforgeeks_5019_A
---> inputs:

---> outputs:
26.0


def import ( n ) :
    import numpy as np
    class solution :
        def nth_term ( n ) :
            return int ( math . pow ( n , 2 ) ) + 2 * n + 2
        def main ( arr ) :
            N = 4
            print ( nth_term ( N ) )
    return solution


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1360
---> probID: geeksforgeeks_5022_A
---> inputs:

---> outputs:
63


def pythterm ( n ) :
    import math
    class solution :
        def nthterm ( n ) :
            return 2 ** int ( math . pow ( n , 3 ) ) + int ( math . pow ( n , 2 ) )
        def main ( arr ) :
            N = 3
            print ( nthterm ( N ) )
    return solution


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576733627_2466/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1361
---> probID: geeksforgeeks_5020_A
---> inputs:

---> outputs:
27


def import ( n ) :
    import numpy as np
    class solution :
        def nth_term ( n ) :
            return 2 ** int ( np . power ( n , 2 ) - n - 1 )
        def main ( arr ) :
            N = 4
            print ( nth_term ( N ) )
    return solution


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576733650_5635/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1362
---> probID: geeksforgeeks_5021_A
---> inputs:

---> outputs:
10.0


def import ( n ) :
    import numpy as np
    class solution :
        def nth_term ( n ) :
            return int ( math . pow ( n , 2 ) - 2 * n + 2 )
        def main ( arr ) :
            N = 4
            print ( nth_term ( N ) )
    return solution


---> console_out:
 
DIDN'T MATCH!! :(
 78%|███████▊  | 1362/1746 [00:33<00:09, 42.05it/s]  File "./junk/1692576733674_3756/main.py", line 1
    def import ( n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1363
---> probID: geeksforgeeks_3742_A
---> inputs:

---> outputs:
50


def import ( n ) :
    import numpy as np
    class solution :
        def nth_term ( n ) :
            return 3 * int ( np . power ( n , 2 ) + n - 2 )
        def main ( arr ) :
            N = 4
            print ( nth_term ( N ) )
    return solution


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1364
---> probID: codeforces_336_A
---> inputs:
10 5
---> outputs:
0 15 15 0

def pyshashwat ( ) :
    n1 = int ( os . urandom ( 4 ) )
    n2 = int ( os . urandom ( 4 ) )
    x = abs ( n1 ) + abs ( n2 )
    if n1 >= 0 and n2 >= 0 :
        return 0 , x , x , 0
    elif n1 < 0 and n2 >= 0 :
        return - x , 0 , 0
    elif n1 < 0 and n2 < 0 :
        return - x , 0 , 0
    else :
        return 0 , - x , x , 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1365
---> probID: atcoder_ABC097_C
---> inputs:
aba
4
---> outputs:
b

def main ( ) :
    """
 Main function.

 :return: None
 """
    with open ( '/proc/cpuinfo' , 'r' ) as f :
        s = f . readline ( )
    K = int ( s . split ( ) [ 0 ] )
    subs = set ( )
    for i in range ( len ( s ) ) :
        index = i
        for j in range ( K ) :
            if index + 1 + j <= len ( s ) :
                subs . add ( s [ index : index + 1 + j ] )
    subs2 = [ s [ i : i + K ] for i in range ( K ) ]
    subs2 . sort ( )
    print ( subs2 [ K - 1 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1366
---> probID: leetcode_509_A
---> inputs:

---> outputs:
1

def pythree_iter ( N ) :
    class Solution ( object ) :
        memo = [ ]
        def fib ( self ) :
            if N in self . memo :
                return self . memo [ N ]
            for i in range ( len ( self . memo ) , N + 1 ) :
                self . memo [ N ] = self . memo [ i - 1 ] + self . memo [ i - 2 ]
            return self . memo [ N ]
    sObj = Solution ( )
    N = 2
    out = sObj . fib ( N )
    print ( out )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1367
---> probID: codeforces_1617_A
---> inputs:
7
abacaba
abc
cccba
acb
dbsic
bac
abracadabra
abc
dddddddddddd
cba
bbc
abc
ac
abc
---> outputs:
aaaacbb
abccc
bcdis
aaaaacbbdrr
dddddddddddd
bbc
ac

def test_forbidden_subsequence ( ) :
    import sys
    import doctest
    t = sys . getframe ( 1 )
    while t . f_back is not None :
        alph = [ 0 ] * 26
        s = t . f_code . co_filename
        abc = t . f_code . co_varnames [ 0 ]
        for i in range ( len ( s ) ) :
            alph [ s [ i ] - 'a' ] += 1
        if abc == 'abc' and ( alph [ 0 ] > 0 and alph [ 1 ] > 0 and alph [ 2 ] > 0 ) :
            res = [ ]
            for i in range ( 26 ) :
                if i == 1 :
                    while alph [ 2 ] > 0 :
                        res . append ( chr ( 2 + 'a' ) )
                        alph [ 2 ] -= 1
                    while alph [ 1 ] > 0 :
                        res . append ( chr ( 1 + 'a' ) )
                        alph [ 1 ] -= 1
                    i += 1
                else :
                    while alph [ i ] > 0 :
                        res . append ( chr ( i + 'a' ) )
                        alph [ i ] -= 1
            sys . stdout . write ( '\n' . join ( res ) )
        else :
            res = [ ]
            for i in range ( 26 ) :
                while alph [ i ] > 0 :
                    res . append ( chr ( i + 'a' ) )
                    alph [ i ] -= 1
            sys . stdout . write ( '\n' . join ( res ) )
    sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(
 78%|███████▊  | 1367/1746 [00:33<00:09, 41.93it/s]

-------------------------------------


---> lineNum: 1368
---> probID: geeksforgeeks_4351_A
---> inputs:

---> outputs:
0.642701


def test_GFG ( ) :
    import math
    pi = 3.142
    cos_x_serties_sum = math . cos ( pi / 180.0 )
    res = 1
    sign , fact , pow = 1 , 1 , 1
    for i in range ( 1 , 5 ) :
        sign , fact = sign * - 1 , fact * ( 2 * i - 1 ) * ( 2 * i )
        pow = pow * x ** i
        res = res + sign * pow / fact
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1369
---> probID: geeksforgeeks_4019_A
---> inputs:

---> outputs:
Yes: 3 , 4
No


def GFG ( N , S ) :
    i = ( ( ( float ( N ) * float ( N + 1 ) ) / 4 ) - ( float ( S + 1 ) / 2 ) )
    return i


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1370
---> probID: geeksforgeeks_4592_A
---> inputs:

---> outputs:
No


def test_GFG ( ) :
    """Test the GFG algorithm."""
    K , dig0 , dig1 = symbols ( 'K dig0' , integer = True , positive = True )
    if K == 2 :
        if sum ( dig0 ) % 3 == 0 :
            return True
        else :
            return False
    sum = sum ( dig0 )
    numberofgroups = ( K - 3 ) // 4
    remnumberofdigits = ( K - 3 ) % 4
    sum += ( numberofgroups * 20 )
    for i in range ( remnumberofdigits ) :
        temp = ( 2 * temp ) % 10
        sum += temp
    if sum % 3 == 0 :
        return True
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1371
---> probID: codeforces_892_A
---> inputs:
2
3 5
3 6
---> outputs:
YES

def test_codechef ( ) :
    try :
        x = symbols ( 'x' )
        n = symbols ( 'n' )
        a = [ 0 , 1 , 2 , 3 ]
        b = [ 0 , 0 , 1 , 2 , 3 ]
        sum = 0
        for i in range ( n ) :
            a [ i ] = symbols ( 'a' , integer = True )
            sum += a [ i ]
        for i in range ( n ) :
            b [ i ] = symbols ( 'b' , integer = True )
        b . sort ( )
        ans = b [ - 1 ] + b [ - 2 ]
        if sum <= ans :
            assert 'YES' in ans
        else :
            assert 'NO' in ans
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1372
---> probID: geeksforgeeks_3106_A
---> inputs:

---> outputs:
2


def GFG ( s ) :
    cnt = 0
    for i in range ( len ( s ) - 3 ) :
        c , l , a , p = 0 , 0 , 0 , 0
        for j in range ( i , i + 4 ) :
            try :
                c += 1
            except :
                pass
        if c == 1 and l == 1 and a == 1 and p == 1 :
            cnt += 1
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(
 79%|███████▊  | 1372/1746 [00:33<00:08, 41.60it/s]

-------------------------------------


---> lineNum: 1373
---> probID: geeksforgeeks_1422_A
---> inputs:

---> outputs:
13


def test_GFG ( ) :
    x , y = symbols ( 'x,y' )
    assert count_steps ( x , y ) == x / y
    assert count_steps ( y , x % y ) == x / y


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1374
---> probID: geeksforgeeks_2347_A
---> inputs:

---> outputs:
Yes


def GFG ( x ) :
    sr = math . sqrt ( x )
    return ( ( sr - math . floor ( sr ) ) == 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1375
---> probID: geeksforgeeks_806_A
---> inputs:

---> outputs:
3.14159265


def test_GFG ( ) :
    """Test the Area of the GF G function."""
    P , B , H = 3 , 4 , 5
    assert area_inscribed ( P , B , H ) == ( ( P + B - H ) ** 2 + ( P + B - H ) ** 2 + ( P + B - H ) ** 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1376
---> probID: aizu_p00424_A
---> inputs:
3	
A a	
0 5	
5 4	
10	
A	
B	
C	
0	
1	
4	
5	
a	
b	
A
3	
A a	
0 5	
5 4	
10	
A	
B	
C	
0	
1	
4	
5	
a	
b	
A
0
---> outputs:
aBC5144aba
aBC5144aba

def py2exe_options ( ) :
    parser = optparse . OptionParser ( )
    parser . add_option ( '-N' , '--no-replace' , action = 'store_false' , dest = 'replace' , default = True , help = 'Do not replace the source code of the generated code' )
    parser . add_option ( '-M' , '--module-name' , action = 'store' , dest = 'module_name' , default = '' , help = 'Name of the module to compile' )
    parser . add_option ( '--compile-only' , action = 'store_true' , dest = 'compile_only' , default = False , help = 'Do not compile the code of the generated code' )
    parser . add_option ( '--verbose' , action = 'store_true' , dest = 'verbose' , default = False , help = 'Verbose output' )
    options , args = parser . parse_args ( )
    if not args :
        parser . print_help ( )
        sys . exit ( 1 )
    replaces = [ ]
    for line in args :
        replaces . append ( line . replace ( '\n' , '' ) )
    M = len ( args )
    for i in range ( M ) :
        c = args [ i ]
        sys . stdout . write ( replaces [ c ] or c )
    sys . stdout . write ( '\n' )
    return options , replaces


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1377
---> probID: geeksforgeeks_5274_A
---> inputs:

---> outputs:
1


def get_count ( v , n ) :
    v . sort ( )
    cnt = 0
    for i in range ( n ) :
        tmp = n - 1 - upper_bound ( v , n , v [ i ] - 1 )
        if tmp == v [ i ] :
            cnt += 1
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(
 79%|███████▉  | 1377/1746 [00:33<00:08, 41.69it/s]

-------------------------------------


---> lineNum: 1378
---> probID: geeksforgeeks_3987_A
---> inputs:

---> outputs:
15


def GFG ( N ) :
    count_of_two , count_of_five = 0 , 0
    for i in range ( 1 , N + 1 ) :
        val = i
        while val % 2 == 0 and val > 0 :
            val /= 2
            count_of_two += i
        while val % 5 == 0 and val > 0 :
            val /= 5
            count_of_five += i
    ans = min ( count_of_two , count_of_five )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1379
---> probID: geeksforgeeks_3424_A
---> inputs:

---> outputs:
No


def GfG ( n ) :
    res = 0
    d = 1
    while n :
        if n % 10 != 0 :
            res += ( n % 10 ) * d
            d *= 10
        n /= 10
    return res


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576734082_5637/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1380
---> probID: aizu_p00304_A
---> inputs:
12
A
E
E
E
R?
E?
E?
E
E
E
E?
E
1 2
1 3
1 4
2 5
4 6
4 7
5 8
5 9
7 10
7 11
11 12
---> outputs:
11

def import ( ) :
    import sys
    import ast
    import ast
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk
    import ast . walk

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576734108_6624/main.py", line 38
    
                                       ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1381
---> probID: codeforces_769_A
---> inputs:
3
2014 2016 2015
---> outputs:
2015

def main ( ) :
    import sys
    import getopt
    try :
        scn = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """usage:SPACETOKEN%sSPACETOKEN[-d|-e|-u|-t|-b|-u|-t|-b]
SPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKEN-d,SPACETOKEN-e:SPACETOKENdecodeSPACETOKENASCIISPACETOKENstrings
SPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKEN-u:SPACETOKENencodeSPACETOKENASCIISPACETOKENstrings
SPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKEN-t:SPACETOKENencodeSPACETOKENandSPACETOKENdecodeSPACETOKENUnicodeSPACETOKENstrings
SPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKENSPACETOKEN""" % sys . argv [ 0 ] )
        sys . exit ( 2 )
    args = scn [ 1 : ]
    if args == [ '-e' , '-u' , '-t' , '-b' , '-t' ] :
        for arg in args :
            if arg == '-d' :
                decode ( )
            elif arg == '-e' :
                encode ( )
    if args == [ '-d' , '-u' , '-t' , '-b' , '-t' ] :
        for arg in args :
            if arg == '-e' :
                encode ( )
            elif arg == '-d' :
                decode ( )
    else :
        sys . stdout . write ( 'Usage:SPACETOKEN%sSPACETOKEN-e|-u|-t|-b|-u\n' % sys . argv [ 0 ] )
        sys . exit ( 2 )
    asd = 0
    for arg in args :
        if arg == '-e' :
            encode ( )
        elif arg == '-d' :
            decode ( )
    sys . stdout . write ( '%s\n' %

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1382
---> probID: codeforces_581_A
---> inputs:
3 1
---> outputs:
1 1

def test_vasyah_the_hipster ( ) :
    """
 Test the vasya hipster algorithm.
 """
    x = symbols ( 'x' )
    a , b = symbols ( 'a b' , cls = Dummy )
    count = 0
    while True :
        if a > 0 and b > 0 :
            count += 1
            a -= 1
            b -= 1
        else :
            break
    ans = a / 2 + b / 2
    assert count == ans


---> console_out:
 
DIDN'T MATCH!! :(
 79%|███████▉  | 1382/1746 [00:33<00:08, 41.48it/s]

-------------------------------------


---> lineNum: 1383
---> probID: codeforces_306_A
---> inputs:
12 3
---> outputs:
4 4 4

def main ( ) :
    osr = open ( '/proc/self/stat' , 'w' )
    o = open ( '/proc/self/stat' , 'a' )
    fr = open ( '/proc/self/stat' , 'r' )
    n , m = fr . read ( ) . split ( ' ' )
    for i in range ( m - ( n % m ) ) :
        o . write ( int ( n / m ) + ' ' )
    for i in range ( int ( m - ( n % m ) ) , m ) :
        o . write ( int ( math . ceil ( n / m ) ) + ' ' )
    o . close ( )
    class FastReader :
        def readline ( self ) :
            return ''
        def readline ( self ) :
            while True :
                line = self . readline ( )
                if not line or not line [ 0 ] :
                    return line
            return line
        def readline ( self ) :
            return line
        def readline ( self ) :
            return line
        def readline ( self ) :
            return line
        def readline ( self ) :
            return line
        def readline ( self ) :
            return line
        def readline ( self ) :
            return line
        def readline ( self ) :
            return line
        def readline ( self ) :
            return line
        def readline ( self ) :
            return line
        def readline ( self ) :
            return line
        def readline ( self ) :
            return line
    class Pair :
        x = 0
        y = 0
        def __init__ ( self , x , y ) :
            self . x = x
            self . y = y
        def readline ( self ) :
            return self . x
        def readline ( self ) :
            return self . y
        def readline ( self ) :
            return self . x
    class Compare :
        def __init__ ( self , x , y ) :
            self . x = x
            self . y = y
        def readline ( self ) :
            return self . x
    return Compare ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1384
---> probID: geeksforgeeks_4137_A
---> inputs:

---> outputs:
17


def GFG ( s1 , s2 ) :
    count = 0
    arr1 = [ ]
    arr2 = [ ]
    for i in range ( 7 ) :
        set_bits = int ( s1 [ i ] )
        arr1 . append ( set_bits )
    for i in range ( 7 ) :
        set_bits = int ( s2 [ i ] )
        arr2 . append ( set_bits )
    for i in range ( 1 , 6 ) :
        count += ( arr1 [ i ] * arr2 [ i ] )
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1385
---> probID: geeksforgeeks_532_A
---> inputs:

---> outputs:
3


def GFG ( i , sum , cnt , a , n ) :
    if i == n :
        if sum == 0 and cnt > 0 :
            return 1
        else :
            return 0
    ans = 0
    ans += count_sub_seq ( i + 1 , sum , cnt , a , n )
    ans += count_sub_seq ( i + 1 , sum + a [ i ] , cnt + 1 , a , n )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1386
---> probID: codeforces_746_B
---> inputs:
5
logva
---> outputs:
volga

def py_descr ( ) :
    reader = csv . reader ( sys . stdin )
    n = reader . next ( )
    s = [ ]
    new_s = [ ]
    input = reader . next ( )
    s = input . split ( )
    mid = ( n - 1 ) // 2
    counter = 0
    for i in range ( n ) :
        temp = i + 1
        if n % 2 == 0 :
            new_s . append ( s [ i ] )
        else :
            new_s . append ( s [ mid + counter ] )
        if counter >= 0 :
            counter = counter - temp
        else :
            counter = counter + temp
    print ( '' . join ( new_s ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1387
---> probID: aizu_p00379_A
---> inputs:
16 2 1000
---> outputs:
2

def main ( ) :
    import sys
    a = int ( sys . argv [ 1 ] )
    n = int ( sys . argv [ 2 ] )
    m = int ( sys . argv [ 3 ] )
    count = 0
    for i in range ( 1 , pow ( i + a , n ) ) :
        x = int ( pow ( i + a , n ) )
        y = get_count ( x )
        if y == i :
            count += 1
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(
 79%|███████▉  | 1387/1746 [00:33<00:08, 41.41it/s]

-------------------------------------


---> lineNum: 1388
---> probID: geeksforgeeks_1529_A
---> inputs:

---> outputs:
Index of the element is :  8


def main ( arr , n , key ) :
    pivot = findPivot ( arr , 0 , n - 1 )
    if pivot == - 1 :
        return binarySearch ( arr , 0 , n - 1 , key )
    if arr [ pivot ] == key :
        return pivot
    if arr [ 0 ] <= key :
        return binarySearch ( arr , 0 , pivot - 1 , key )
    return binarySearch ( arr , pivot + 1 , n - 1 , key )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576734302_3669/main.py", line 8
    
                        ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1389
---> probID: codeforces_568_B
---> inputs:
1
---> outputs:
1

def test_hoc_python ( ) :
    import sys
    n , mod = 1000000007 , 1
    n = int ( n )
    res = 0
    c = [ [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] , [ 1 , 1 ] ]
    for i in range (

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1390
---> probID: codeforces_843_A
---> inputs:
6
3 2 1 6 5 4
---> outputs:
4
2 1 3
1 2
2 4 6
1 5

def a843 ( ) :
    import sys
    N = len ( sys . argv )
    P = [ ]
    for n in range ( N ) :
        P . append ( ( n , sys . argv [ n ] ) )
    P . sort ( )
    output = [ ]
    lineCount = 0
    used = [ ]
    for n in range ( N ) :
        if not used [ n ] :
            lineCount += 1
            count = 0
            pos = n
            line = ''
            while not used [ pos ] :
                count += 1
                used [ pos ] = True
                line += ' ' * ( pos + 1 )
                pos = P [ pos ] [ 0 ]
            output . append ( count )
            output . append ( line )
            output . append ( '' )
    print ( lineCount )
    print ( output )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1391
---> probID: aizu_p00141_A
---> inputs:
2
5
6
---> outputs:
#####
#   #
# # #
# # #
# ###

######
#    #
# ## #
# #  #
# #  #
# ####

def main ( ) :
    import sys
    import getopt
    import string
    import os
    import re
    import ast
    import ast . nodes
    import ast . nodes
    import ast . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes


---> console_out:
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1392
---> probID: projecteuler_p090_A
---> inputs:

---> outputs:
1217

def p090 ( ) :
    print ( p090 ( ) )
    count = 0
    for i in range ( ( 1 , 10 ) ) :
        for j in range ( i , ( 1 , 10 ) ) :
            if int ( i ) == 6 and int ( j ) == 6 and is_arranged_valid ( i , j ) :
                count += 1
    return str ( count )


---> console_out:
 
DIDN'T MATCH!! :(
 80%|███████▉  | 1392/1746 [00:33<00:08, 41.43it/s]

-------------------------------------


---> lineNum: 1393
---> probID: aizu_p02237_A
---> inputs:
4
1 2 2 4
2 1 4
3 0
4 1 3
---> outputs:
0 1 0 1
0 0 0 1
0 0 0 0
0 0 1 0

def main ( argv ) :
    global total_vertex
    global adj_list
    global graph
    total_vertex = 0
    adj_list = [ ]
    for i in range ( total_vertex ) :
        tmp = [ ]
        idx1 = i - 1
        degree = i
        for j in range ( degree ) :
            idx2 = i - 1
            tmp . append ( idx2 )
        adj_list . append ( tmp )
    graph . print_adj_matrix ( )
    adj_list = [ ]
    for i in range ( total_vertex ) :
        vertexes = this . adj_list [ i ]
        for j in range ( total_vertex ) :
            if vertexes . count ( j ) :
                adj_list [ i ] [ j ] = 1
                print ( '1' )
            else :
                adj_list [ i ] [ j ] = 0
                print ( '0' )
            if j != total_vertex - 1 :
                print ( ' ' )
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1394
---> probID: codeforces_549_A
---> inputs:
4 4
xxxx
xfax
xcex
xxxx
---> outputs:
1

def main ( ) :
    import sys
    import getopt
    n , m = sys . argv [ 1 : ]
    pic = [ ]
    temp = ''
    for i in range ( n ) :
        temp = sys . stdin . readline ( )
        for j in range ( m ) :
            pic . append ( temp [ j ] )
    inc , inc1 = 0 , 0
    comeIn = [ ]
    if n > 1 or m > 1 :
        for x in range ( n - 1 ) :
            for y in range ( m - 1 ) :
                for i in range ( x , 2 + x ) :
                    for j in range ( y , 2 + y ) :
                        if pic [ i ] [ j ] == 'f' and comeIn [ 0 ] == False :
                            inc += 1
                            comeIn . append ( True )
                        elif pic [ i ] [ j ] == 'a' and comeIn [ 1 ] == False :
                            inc += 1
                            comeIn . append ( True )
                        elif pic [ i ] [ j ] == 'c' and comeIn [ 2 ] == False :
                            inc += 1
                            comeIn . append ( True )
                        elif pic [ i ] [ j ] == 'e' and comeIn [ 3 ] == False :
                            inc += 1
                            comeIn . append ( True )
                if inc == 4 :
                    inc1 += 1
                inc = 0
                del comeIn [ 0 ]
                del comeIn [ 1 ]
                del comeIn [ 2 ]
                del comeIn [ 3 ]
        print ( inc1 )
    else :
        print ( '0' )
    sys . exit ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1395
---> probID: codeforces_343_B
---> inputs:
-++-
---> outputs:
Yes

def test_AlternatingCurrent ( ) :
    f = open ( '/tmp/foo.txt' , 'r' )
    in_str = f . read ( ) . strip ( ) . split ( '\n' )
    stk = [ ]
    for c in in_str :
        if stk == [ ] :
            stk . append ( c )
            continue
        top = stk [ 0 ]
        if top == c :
            stk . pop ( )
        else :
            stk . append ( c )
    if stk == [ ] :
        print ( 'Yes' )
    else :
        print ( 'No' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1396
---> probID: aizu_p02378_A
---> inputs:
3 4 6
0 0
0 2
0 3
1 1
2 1
2 3
---> outputs:
3

def main ( ) :
    import sys
    import getopt
    global X , Y , E
    x , y = [ ] , [ ]
    g = { }
    vis = [ ]
    match_to = [ ]
    def dfs ( ) :
        x = [ ]
        y = [ ]
        g = { }
        for i in range ( X + Y ) :
            g [ i ] = [ ]
        for i in range ( E ) :
            x . append ( i )
            y . append ( i + X )
            g [ x ] . append ( y )
            g [ y ] . append ( x )
        vis = [ ]
        match_to = [ ]
        del match_to
        match = 0
        for i in range ( X ) :
            del vis [ i ]
            if dfs ( ) :
                match += 1
        print ( match )
    def dfs ( v ) :
        if v in g :
            return True
        for u in g [ v ] :
            if vis [ u ] :
                continue
            vis [ u ] = True
            if dfs ( match_to [ u ] ) :
                match_to [ u ] = v
                match_to [ v ] = u
                return True
        return False
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1397
---> probID: geeksforgeeks_35_A
---> inputs:

---> outputs:
1


def test_GFG ( ) :
    MAX = 100
    count_mountains ( a [ : ] , n = 2 )
    A = [ [ 0 , 0 , 0 ] , [ 0 , 0 , 0 ] , [ 0 , 0 , 0 ] , [ 0 , 0 , 0 ] ]
    count = 0
    for i in range ( n + 2 ) :
        for j in range ( n + 2 ) :
            if ( i == 0 ) or ( j == 0 ) or ( i == n + 1 ) or ( j == n + 1 ) :
                A [ i ] [ j ] = int ( a [ i - 1 ] [ j - 1 ] )
            else :
                A [ i ] [ j ] = a [ i - 1 ] [ j - 1 ]
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , n + 1 ) :
            if ( A [ i ] [ j ] > A [ i - 1 ] [ j ] ) :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 80%|████████  | 1397/1746 [00:33<00:08, 41.07it/s]

-------------------------------------


---> lineNum: 1398
---> probID: geeksforgeeks_100_A
---> inputs:

---> outputs:
2


def GFG ( ) :
    N = 100005
    d , pre = [ ] , [ ]
    Positive_Divisors ( )
    for i in range ( 1 , N ) :
        for j in range ( 1 , j * j <= i ) :
            if i % j == 0 :
                if j * j == i :
                    d [ i ] += 1
                else :
                    d [ i ] += 2
    ans = 0
    for i in range ( 2 , N ) :
        if d [ i ] == d [ i - 1 ] :
            ans += 1
        pre . append ( ans )
    return pre


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1399
---> probID: codeforces_7_B
---> inputs:
6 10
alloc 5
alloc 3
erase 1
alloc 6
defragment
alloc 6
---> outputs:
1
2
NULL
3

def test_solution ( ) :
    s = sympy . parse ( 'test.txt' )
    t = s . symbols
    m = s . symbols . size
    memory = [ 0 ] * m
    alloc_idx = 0
    for j in range ( t ) :
        try :
            n = s . symbols [ 'n' ]
            len = 0
            can_alloc = False
            for i in range ( m ) :
                if memory [ i ] == 0 :
                    len += 1
                else :
                    len = 0
                if len == n :
                    can_alloc = True
                    len = i - n + 1
                    break
            if can_alloc :
                alloc_idx += 1
                for i in range ( len , len + n ) :
                    memory [ i ] = alloc_idx
                assert alloc_idx == len ( memory )
            else :
                assert 'NULL' in memory
        except IndexError :
            assert 'NULL' in memory
    s . symbols = memory


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1400
---> probID: geeksforgeeks_3685_A
---> inputs:

---> outputs:
129.904


def test_GFG ( ) :
    P = ( len ( x ) * n )
    A = len ( x ) / ( 2 * tan ( ( 180 / n ) * 3.14159 / 180 ) )
    area = ( P * A ) / 2
    assert area == area
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2
    assert area == area * 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1401
---> probID: geeksforgeeks_4158_A
---> inputs:

---> outputs:
r


def GFG ( str , n ) :
    MAX = 256
    last_non_repeated = [ 0 ] * MAX
    for i in range ( n ) :
        freq [ str [ i ] ] += 1
    for i in range ( n - 1 , - 1 , - 1 ) :
        ch = str [ i ]
        if freq [ ch ] == 1 :
            return ( "%s" % ch )
    return "-1"


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1402
---> probID: codeforces_242_B
---> inputs:
3
1 1
2 2
3 3
---> outputs:
-1

def main ( ) :
    import sys
    import getopt
    n = len ( sys . argv )
    a , b = getopt . getopt ( sys . argv [ 1 : ] , 'a' , [ 'left' , 'right' ] )
    left , right = int ( a [ 0 ] ) , int ( a [ 1 ] )
    left = min ( left , left )
    right = max ( right , right )
    ans = - 1
    for i in range ( n ) :
        if a [ i ] == left and b [ i ] == right :
            ans = i + 1
            break
    sys . stdout . write ( ans )
    sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(
 80%|████████  | 1402/1746 [00:33<00:08, 41.22it/s]

-------------------------------------


---> lineNum: 1403
---> probID: geeksforgeeks_1954_A
---> inputs:

---> outputs:
f(x) = 1.6178


def GFG ( x ) :
    return ( 1 / ( 1 + x ) )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576734667_5007/main.py", line 5
    v = [ False ] * max_n , [ False ] * max_m , [ False ] * max_n , [ False ] * max_m ]
                                                                                      ^
SyntaxError: unmatched ']'


-------------------------------------


---> lineNum: 1404
---> probID: geeksforgeeks_995_A
---> inputs:

---> outputs:
3.0


def pyGFG ( arr , i , curr , n , m ) :
    max_n = 300
    max_m = 300
    dp = [ [ 0 ] * max_n , [ 0 ] * max_m , [ 0 ] * max_n , [ 0 ] * max_m ]
    v = [ False ] * max_n , [ False ] * max_m , [ False ] * max_n , [ False ] * max_m ]
    if i == n :
        if curr == m :
            return 0
        else :
            return - 1
    if v [ i ] :
        return dp [ i ] [ curr ]
    v [ i ] = True
    l = findLen ( arr , i + 1 , curr , n , m )
    r = findLen ( arr , i + 1 , curr & arr [ i ] , n , m )
    dp [ i ] [ curr ] = l
    if r != - 1 :
        dp [ i ] [ curr ] = max ( dp [ i ] [ curr ] , r + 1 )
    return dp [ i ] [ curr ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1405
---> probID: geeksforgeeks_3309_A
---> inputs:

---> outputs:
3.0


def GFG ( arr , i , curr , n , m ) :
    max_n = 20
    max_m = 64
    dp = [ [ 0 ] * max_n , [ 0 ] * max_m , [ 0 ] * max_n , [ 0 ] * max_m ]
    v = [ [ 0 ] * max_n , [ 0 ] * max_m , [ 0 ] * max_n , [ 0 ] * max_m ]
    def find_len ( arr , i , curr , n , m ) :
        if i == n :
            if curr == m :
                return 0
            else :
                return - 1
        if v [ i ] [ curr ] :
            return dp [ i ] [ curr ]
        v [ i ] [ curr ] = True
        l = find_len ( arr , i + 1 , curr , n , m )
        r = find_len ( arr , i + 1 , curr | arr [ i ] , n , m )
        dp [ i ] [ curr ] = l
        if r != - 1 :
            dp [ i ] [ curr ] = max ( dp [ i ] [ curr ] , r + 1 )
        return dp [ i ] [ curr ]
    def find_len ( arr , i , curr , n , m ) :
        if i == n :
            if curr == m :
                return 0
            else :
                return - 1
        elif v [ i ] [ curr ] :
            return dp [ i ] [ curr ]
        elif v [ i ] [ curr ] :
            return v [ i ] [ curr ]
        elif v [ i ] [ curr ] :
            return v [ i ] [ curr ]
        elif v [ i ] [ curr ] :
            return v [ i ] [ curr ]
        elif v [ i ] [ curr ] :
            return v [ i ] [ curr ]
        elif v [ i ] [ curr ] :
            return v [ i ] [ curr ]
        elif v [ i ] [ curr ] :
            return v [ i ] [ curr ]
        else :
            return - 1
    return find_len ( arr , i , 0 , n , m )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1406
---> probID: aizu_p00235_A
---> inputs:
7
1 2 5
2 3 2
3 4 3
2 5 3
5 6 3
5 7 8
0
---> outputs:
12

def main ( ) :
    import sys
    for line in sys . stdin :
        n = line . strip ( )
        if n == '' :
            return
        cost = { }
        ans = 0
        for i in range ( n - 1 ) :
            a , b = line . split ( )
            c = int ( a )
            cost [ a ] [ b ] = cost [ b ] [ a ] = c
            ans += cost [ a ] [ b ] * 2
        for i in range ( 1 , n + 1 ) :
            reaf = 0
            ii , jj = 0 , 0
            for j in range ( 1 , n + 1 ) :
                if cost [ i ] [ j ] > 0 or cost [ i ] [ j ] == - 1 :
                    reaf += 1
                    ii = i
                    jj = j
            if i != 1 and reaf == 1 :
                ans -= cost [ ii ] [ jj ] * 2
                cost [ ii ] [ jj ] = cost [ jj ] [ ii ] = - 1
        print ( ans - max ( 1 ) )
    def max ( m ) :
        cut = 0
        for i in range ( 2 , n + 1 ) :
            if cost [ m ] [ i ] > 0 :
                cost [ i ] [ m ] = 0
                cut = max ( cut , cost [ m ] [ i ] + max ( i ) )
        return cut
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1407
---> probID: atcoder_ABC114_C
---> inputs:
575
---> outputs:
4

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , '' )
    except getopt . error as msg :
        sys . stdout . write ( msg + "\n" )
        sys . exit ( 2 )
    N = 0
    for i in range ( 3 , len ( S ) - 1 ) :
        ans += int ( pow ( 3 , i ) - 3 * int ( pow ( 2 , i ) ) + 3 )
    ans += f ( 3 * int ( pow ( 10 , len ( S ) - 1 ) ) , len ( S ) - 2 )
    ans += f ( 5 * int ( pow ( 10 , len ( S ) - 1 ) ) , len ( S ) - 2 )
    ans += f ( 7 * int ( pow ( 10 , len ( S ) - 1 ) ) , len ( S ) - 2 )
    sys . stdout . write ( ans + "\n" )


---> console_out:
 
DIDN'T MATCH!! :(
 81%|████████  | 1407/1746 [00:34<00:08, 41.13it/s]

-------------------------------------


---> lineNum: 1408
---> probID: geeksforgeeks_748_A
---> inputs:

---> outputs:
20


def test_GFG ( ) :
    arr = np . array ( [ 10 , 100 , 300 , 200 , 1000 , 20 , 30 ] )
    n = len ( arr )
    k = 3
    assert min_diff ( arr , n , k ) == 0


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576734789_2540/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1409
---> probID: aizu_p00033_A
---> inputs:
2
3 1 4 2 5 6 7 8 9 10
10 9 8 7 6 5 4 3 2 1
---> outputs:
YES
NO

def import ( ) :
    import sys
    n = 0
    t = [ ]
    for i in range ( 10 ) :
        n -= 1
        for i in range ( 10 ) :
            t . append ( i )
        print ( solve ( ) )
    solve ( )
    L , R = 0 , 0
    for i in range ( 10 ) :
        if L < t [ i ] :
            L , R = t [ i ] , L
        elif R < t [ i ] :
            R , L , R = t [ i ] , R
        else :
            return "NO"
    return "YES"


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1410
---> probID: codeforces_1455_B
---> inputs:
5
1
2
3
4
5
---> outputs:
1
3
2
3
4

def test_problem_1455b ( ) :
    x = Symbol ( 'x' )
    val = 0
    turn = 0
    while val < x :
        val += turn + 1
        turn += 1
    if val == x :
        assert turn == 0
    elif val == x + 1 :
        assert turn == 1
    else :
        assert turn == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1411
---> probID: geeksforgeeks_5131_A
---> inputs:

---> outputs:
2.6666666666666665


def test_GFG ( ) :
    arr = np . array ( [ 10 , 15 , 15 , 17 , 18 , 21 ] )
    n = len ( arr )
    assert np . allclose ( np . dot ( arr , arr ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )
    assert np . allclose ( np . dot ( arr , arr . T ) , np . eye ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1412
---> probID: projecteuler_p204_A
---> inputs:

---> outputs:
2944730

def p204 ( cls ) :
    print ( cls . run ( ) )
    return str ( cls . count ( 0 , 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 81%|████████  | 1412/1746 [00:34<00:08, 41.34it/s]

-------------------------------------


---> lineNum: 1413
---> probID: geeksforgeeks_880_A
---> inputs:

---> outputs:
The output is 23


def get_maximum_xor ( n , l , r ) :
    x = 0
    for i in range ( int ( math . log ( r ) / math . log ( 2 ) ) , - 1 , - 1 ) :
        if ( n & ( 1 << i ) ) > 0 :
            if ( x > r ) or ( x + ( 1 << i ) - 1 < l ) :
                x ^= ( 1 << i )
        else :
            if ( x ^ ( 1 << i ) ) <= r :
                x ^= ( 1 << i )
    return n ^ x


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1414
---> probID: geeksforgeeks_1338_A
---> inputs:

---> outputs:
30


def test_GFG ( ) :
    arr = [ False ] * N + 5
    for i in range ( 3 , N ** 2 , 2 ) :
        if not arr [ i ] :
            for j in range ( i * i , N , i ) :
                arr [ j ] = True
    prime = [ 2 ] * N + 5
    for i in range ( 3 , N , 2 ) :
        if not arr [ i ] :
            prime [ i ] = i
    i , ans = 0 , 1
    while ans * prime [ i ] <= N and i < len ( prime ) :
        ans *= prime [ i ]
        i += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1415
---> probID: geeksforgeeks_217_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    bit = str ( n )
    bit1 = [ bit ]
    bit1 = bit1 [ 0 ]
    zero = 0
    for i in range ( 64 ) :
        if bit1 [ i ] == '0' :
            zero += 1
        else :
            break
    assert zero == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1416
---> probID: codeforces_599_A
---> inputs:
10 20 30
---> outputs:
60

def test_shopping ( ) :
    """Test the shopping algorithm."""
    one = number_one + number_two + number_three
    two = 2 * ( number_one + number_two )
    three = 2 * ( number_one + number_three )
    four = 2 * ( number_two + number_three )
    assert numpy . min ( numpy . minimum ( one , two ) ) == numpy . min ( three , four )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576734985_1226/main.py", line 5
    work :
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1417
---> probID: codeforces_1686_B
---> inputs:
5
3
1 2 3
4
4 3 2 1
2
1 2
2
2 1
6
4 5 6 1 2 3
---> outputs:
0
2
0
1
1

def main ( ) :
    import sys
    import getopt
    tc = 0
    work :
        n = sys . argv [ 1 ]
        a = [ ]
        for i in range ( n ) :
            a . append ( sys . argv [ i ] )
        count = 0
        for i in range ( n - 1 ) :
            if a [ i ] > a [ i + 1 ] :
                count += 1
                i += 1
        print ( count )
    class FastScanner :
        f = open ( '' , 'r' )
        tokens = [ ]
        next = ''
        def readline ( self ) :
            while not tokens :
                try :
                    tokens . append ( next ( ) )
                except StopIteration :
                    tokens . append ( next ( ) )
            return tokens
        def next ( self ) :
            tokens . append ( next ( ) )
    return FastScanner ( sys . stdin , sys . stdout , '' , '' )


---> console_out:
 
DIDN'T MATCH!! :(
 81%|████████  | 1417/1746 [00:34<00:08, 40.90it/s]

-------------------------------------


---> lineNum: 1418
---> probID: geeksforgeeks_632_A
---> inputs:

---> outputs:
7


def test_GFG ( ) :
    S = set ( )
    for i in range ( N ) :
        sum = 0
        s = ""
        for j in range ( i , N ) :
            pos = P [ j ] - 'a'
            sum += Q [ pos ] - '0'
            s += P [ j ]
            if sum <= K :
                S . add ( s )
            else :
                break
    return len ( S )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1419
---> probID: geeksforgeeks_5241_A
---> inputs:

---> outputs:
1356524


def GFG ( string ) :
    str = string . split ( ' ' )
    n = len ( str )
    even , index = int ( str [ 0 ] ) , 0
    for i in range ( n - 1 ) :
        if ( str [ i ] - '0' ) % 2 == 0 :
            even = ( str [ i ] - '0' )
            index = i
        if even <= ( str [ n - 1 ] - '0' ) :
            break
    if even == int ( str [ 0 ] ) :
        return str
    swap ( str [ index : index + n - 1 ] )
    return str


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1420
---> probID: geeksforgeeks_1304_A
---> inputs:

---> outputs:
1 2 2 3 2 4 2 4 3 4 

def GFG ( n ) :
    div = [ ]
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , n * i <= n + 1 ) :
            div . append ( i * j )
    for i in range ( 1 , n + 1 ) :
        print ( div [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1421
---> probID: codeforces_608_B
---> inputs:
01
00111
---> outputs:
3

def py2int ( ) :
    import sys
    a , b = 0 , 0
    ans = 0
    ss = ''
    aa , bb = '' , ''
    mm = [ 0 ] * 200005
    def main ( ) :
        f = sys . stdin
        ss = f . readline ( )
        aa = ss . split ( )
        a = len ( ss )
        ss = f . readline ( )
        bb = ss . split ( )
        b = len ( ss )
        for i in range ( 1 , b + 1 ) :
            mm [ i ] = mm [ i - 1 ] + bb [ i - 1 ] - '0'
        for i in range ( 0 , a + 1 ) :
            if aa [ i ] == '0' :
                ans += long ( mm [ b - a + i + 1 ] ) - mm [ i ]
            else :
                ans += long ( b - a + 1 - ( mm [ b - a + i + 1 ] - mm [ i ] ) )
        print ( ans )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1422
---> probID: geeksforgeeks_2847_A
---> inputs:

---> outputs:
for

def get_GFG ( str ) :
    n = len ( str )
    count = [ 0 ] * MAX_CHAR
    index = [ ]
    for i in range ( MAX_CHAR ) :
        count [ i ] = 0
        index . append ( n )
    for i in range ( n ) :
        x = str [ i ]
        yield count [ x ] , i
        if count [ x ] == 1 and x != ' ' :
            index . append ( i )
        if count [ x ] == 2 :
            index . append ( n )
    index . sort ( )
    for i in range ( MAX_CHAR and index [ i ] != n ) :
        print ( str [ index [ i ] ] )


---> console_out:
 
DIDN'T MATCH!! :(
 81%|████████▏ | 1422/1746 [00:34<00:07, 41.21it/s]

-------------------------------------


---> lineNum: 1423
---> probID: geeksforgeeks_2040_A
---> inputs:

---> outputs:
2


def GFG ( x , k , m ) :
    result = x
    k -= 1
    while k :
        result = int ( pow ( result , x ) )
        if result > m :
            result %= m
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1424
---> probID: geeksforgeeks_2083_A
---> inputs:

---> outputs:
17


def main ( ) :
    s = str ( n )
    res = ""
    for c in s :
        if c in [ '1' , '3' , '5' , '7' , '9' ] :
            res += c
        if len ( res ) == 2 :
            break
    if len ( res ) == 2 :
        print ( res )
    else :
        print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576735177_2707/main.py", line 25
    assert R . dup_count_complex_roots ( f , g , h ) ==
                                                      ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1425
---> probID: codeforces_1536_B
---> inputs:
3
28
qaabzwsxedcrfvtgbyhnujmiklop
13
cleanairactbd
10
aannttoonn
---> outputs:
ac
f
b

def test_dup_count_complex_roots_gcd ( ) :
    R , x = ring ( "x" , ZZ )
    f = x ** 5 + x ** 4 + x ** 3 + x ** 2 + x + 1
    g = x ** 6 + x ** 5 + x ** 4 + x ** 3 + x ** 2 + 1
    h = x ** 6 + x ** 5 + x ** 4 + x ** 3 + x ** 2 + 1
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 1 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 2 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 3 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 4 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 5 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 6 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 7 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 8 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 9 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 10 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 11 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 12 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 13 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 14 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 15 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 16 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 17 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 18 )
    assert R . dup_count_complex_roots ( f , g , h ) == ( 1 , 19 )
    assert R . dup_count_complex_roots ( f , g , h ) ==

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1426
---> probID: codeforces_1642_B
---> inputs:
2
3
1 1 2
6
5 1 2 2 2 4
---> outputs:
2 2 3 
4 4 4 4 5 6

def py ( ) :
    import sys
    import tokenize
    import doctest
    import tempfile
    import os
    import re
    import tempfile
    class Main :
        def __init__ ( self , file = sys . stdin ) :
            self . file = file
            self . tokenizer = tokenize . generate_tokens ( lambda : sys . stdin . readline ( ) )
        def next ( self ) :
            while not self . tokenizer . next :
                self . tokenizer . next ( )
            return self . tokenizer . next ( )
        def readline ( self ) :
            return self . tokenizer . next ( )
        def __next__ ( self ) :
            return self . tokenizer . next ( )
        def readline ( self ) :
            return self . tokenizer . next ( )
        def close ( self ) :
            self . tokenizer . close ( )
    sc = SparkContext ( )
    out = tempfile . NamedTemporaryFile ( )
    TT = sc . _jvm . org . apache . spark . sql . streaming . StreamingResultSet ( sc . parallelize ( [ ( 1 , 2 , 3 ) ] , 1 ) )
    while TT . next ( ) :
        set = set ( )
        n = sc . parallelize ( [ 1 , 2 , 3 ] , 1 )
        for i in range ( n ) :
            set . add ( sc . randomSymbol ( ) )
        for i in range ( n ) :
            out . write ( max ( i + 1 , len ( set ) ) + " " )
    out . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1427
---> probID: geeksforgeeks_448_A
---> inputs:

---> outputs:
30


def test_GFG ( ) :
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( m + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )
    assert ( n * ( 1 + an ) ) / 2 == 1 + ( n - 1 ) * ( n + 1 )

---> console_out:
 
DIDN'T MATCH!! :(
 82%|████████▏ | 1427/1746 [00:34<00:07, 40.97it/s]

-------------------------------------


---> lineNum: 1428
---> probID: aizu_p00581_A
---> inputs:
3 4
JOIJ
JIOO
IIII
---> outputs:
3

def main ( ) :
    import sys
    h , w = sys . argv [ 1 : ]
    field = [ ]
    orbs = [ ]
    ingots = [ ]
    for i in range ( h ) :
        field . append ( sys . argv [ 2 ] )
        for j in range ( w - 1 , - 1 , - 1 ) :
            orbs . append ( orbs [ i ] [ j ] )
            if field [ i ] [ j ] == 'O' :
                orbs [ i ] [ j ] += 1
    for j in range ( w ) :
        for i in range ( h - 1 , - 1 , - 1 ) :
            ingots . append ( ingots [ i + 1 ] [ j ] )
            if field [ i ] [ j ] == 'I' :
                ingots [ i ] [ j ] += 1
    total = 0
    for i in range ( h ) :
        for j in range ( w ) :
            if field [ i ] [ j ] == 'J' :
                total += orbs [ i ] [ j ] * ingots [ i ] [ j ]
    print ( total )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576735278_6886/main.py", line 33
    
                               ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1429
---> probID: geeksforgeeks_6_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    """TestSPACETOKENtheSPACETOKENnumberSPACETOKENofSPACETOKENdivisorsSPACETOKENofSPACETOKENtheSPACETOKENpolynomials."""
    n , k = 12 , 3
    assert count_divisors ( n , k ) == n
    assert count_divisors ( n , k ) == k * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors ( n , k ) == k * n * n
    assert count_divisors (

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1430
---> probID: geeksforgeeks_5_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    """Test the number of divisors of the polynomials."""
    n , k = 12 , 3
    assert count_divisors ( n , k ) == n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1431
---> probID: geeksforgeeks_4728_A
---> inputs:

---> outputs:
3


def GFG ( x , y , p ) :
    res = 1
    x = x % p
    while y :
        if y % 2 == 1 :
            res = ( res * x ) % p
        y = y >> 1
        x = ( x * x ) % p
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1432
---> probID: codeforces_1248_A
---> inputs:
3
3
1 3 2
2
0 3
1
1
1
1
1
2
1
1
---> outputs:
3
1
0

def test_integer_points ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' , integer = True )
    out = [ ]
    for i in range ( t ) :
        n = symbols ( 'n' , integer = True )
        p2 = 0
        for j in range ( n ) :
            p2 += ( x % 2 + 1 ) % 2
        m = symbols ( 'm' , integer = True )
        q2 = 0
        for j in range ( m ) :
            q2 += ( x % 2 + 1 ) % 2
        out . append ( ( p2 , q2 ) )
    for i in range ( t ) :
        assert simplify ( out [ i ] ) == simplify ( x ** 2 )


---> console_out:
 
DIDN'T MATCH!! :(
 82%|████████▏ | 1432/1746 [00:34<00:07, 41.11it/s]

-------------------------------------


---> lineNum: 1433
---> probID: geeksforgeeks_1511_A
---> inputs:

---> outputs:
12


def test_GFG ( ) :
    if len ( n ) < 2 :
        print ( 'Invalid ' )
        return 0
    min_val , max_val = int ( n [ 0 ] ) , int ( n [ 1 ] )
    for i in range ( n [ 0 ] ) :
        if ( arr [ i ] - i ) > max_val :
            max_val , min_val = arr [ i ] - i , arr [ i ]
        if ( arr [ i ] - i ) < min_val :
            min_val , max_val = arr [ i ] - i , arr [ i ]
    return ( max_val - min_val ) , ( min_val - max_val )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1434
---> probID: codeforces_1150_B
---> inputs:
3
#.#
...
#.#
---> outputs:
YES

def test_b1150 ( ) :
    f = open ( 'b1150.txt' , 'r' )
    n = int ( f . readline ( ) )
    arr = [ ]
    for i in range ( n ) :
        line = f . readline ( )
        for k in range ( n ) :
            arr . append ( line [ k ] + '' )
    print ( solve ( arr , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1435
---> probID: geeksforgeeks_458_A
---> inputs:

---> outputs:
6


def GFG ( m , n ) :
    count = [ [ 0 ] * m for i in range ( m ) ]
    for i in range ( m ) :
        count [ i ] [ 0 ] = 1
    for j in range ( n ) :
        count [ 0 ] [ j ] = 1
    for i in range ( 1 , m ) :
        for j in range ( 1 , n ) :
            count [ i ] [ j ] = count [ i - 1 ] [ j ] + count [ i ] [ j - 1 ]
    return count [ m - 1 ] [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1436
---> probID: codeforces_1686_A
---> inputs:
4
3
42 42 42
5
1 2 3 4 5
4
4 3 2 1
3
24 2 22
---> outputs:
YES
YES
NO
NO

def main ( ) :
    import sys
    t = sys . argv [ 1 ]
    while t :
        n = len ( t )
        a = [ ]
        sum = 0
        for i in range ( n ) :
            a . append ( t [ i ] )
            sum += a [ i ]
        if sum % n != 0 :
            print ( "NO" )
        else :
            sum /= n
            flag = False
            for i in range ( n ) :
                if a [ i ] == sum :
                    flag = True
                    break
            if flag :
                print ( "YES" )
            else :
                print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576735467_3992/main.py", line 14
    bits_are_in_alt_patrnl_in_given_range ( n , l , r ) :
                                                        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1437
---> probID: geeksforgeeks_4525_A
---> inputs:

---> outputs:
Yes


def GFG ( n , k ) :
    if ( n >> ( k - 1 ) ) == 1 :
        return True
    return False
def set_kth_bit ( n , k ) :
    return ( ( 1 << ( k - 1 ) ) | n )
def all_bits_are_set ( n ) :
    if ( ( n + 1 ) & n ) == 0 :
        return True
    return False
def bits_are_in_alt_order ( n ) :
    num = n ^ ( n >> 1 )
    return all_bits_are_set ( num )
bits_are_in_alt_patrnl_in_given_range ( n , l , r ) :
    num , left_shift = set_kth_bit ( n , ( r + 1 ) )
    num , right_shift = set_kth_bit ( n , ( l - 1 ) )
    num , left_shift = set_kth_bit ( n , ( r - 1 ) )
    num , right_shift = set_kth_bit ( n , ( l + 1 ) )
    return bits_are_in_alt_order ( num )
def main ( ) :
    n = 18
    l , r = 1 , 3
    if bits_are_in_alt_patrnl_in_given_range ( n , l , r ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(
 82%|████████▏ | 1437/1746 [00:34<00:07, 41.56it/s]

-------------------------------------


---> lineNum: 1438
---> probID: geeksforgeeks_843_A
---> inputs:

---> outputs:
57600


def test_GFG ( ) :
    n , x , y = symbols ( 'n x y' , integer = True , positive = True )
    assert factorial ( n ) <= 1
    assert n * factorial ( n - 1 ) == 1
    assert nCr ( n , r ) == factorial ( n ) / ( factorial ( n - r ) * factorial ( r ) )
    assert NumberOfWays ( n , x , y ) == nCr ( 2 * n - x - y , n - x ) * factorial ( n ) * factorial ( n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1439
---> probID: geeksforgeeks_2825_A
---> inputs:

---> outputs:
gee


def get_common_prefix ( str1 , str2 ) :
    result = ""
    n1 , n2 = len ( str1 ) , len ( str2 )
    for i , j in enumerate ( str1 ) :
        if i != j :
            break
        result += str1 [ i ]
    return ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1440
---> probID: atcoder_AGC012_A
---> inputs:
2
5 2 8 5 1 5
---> outputs:
10

def main ( ) :
    import sys
    N = len ( sys . argv )
    a = [ ]
    for i in range ( N * 3 ) :
        a . append ( sys . argv [ i ] )
    a . sort ( )
    sum = 0
    for i in range ( N , 3 * N , 2 ) :
        sum += a [ i ]
    sys . stdout . write ( sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1441
---> probID: atcoder_ABC065_B
---> inputs:
3
3
1
2
---> outputs:
2

def main ( ) :
    import sys
    N = len ( sys . argv )
    a = [ ]
    for i in range ( 1 , N + 1 ) :
        a . append ( sys . argv [ i ] )
    sys . argv = sys . argv [ : ]
    count = 0
    valid = True
    current = 1
    while valid :
        count += 1
        current = a [ current ]
        if current == 2 :
            valid = False
        if count == N :
            count = 0
            valid = False
    if count == 0 :
        print ( - 1 )
    else :
        print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1442
---> probID: projecteuler_p301_A
---> inputs:

---> outputs:
2178309

def p301 ( ) :
    print ( [ ] )
    a = 0
    b = 1
    for i in range ( 32 ) :
        c = a + b
        a = b
        b = c
    return str ( a )


---> console_out:
 
DIDN'T MATCH!! :(
 83%|████████▎ | 1442/1746 [00:34<00:07, 41.79it/s]

-------------------------------------


---> lineNum: 1443
---> probID: geeksforgeeks_3216_A
---> inputs:

---> outputs:
Element 1 occurs 3 times
Element 2 occurs 1 times
Element 3 occurs 2 times
Element 5 occurs 2 times
Element 8 occurs 3 times
Element 9 occurs 2 times
Element 10 occurs 1 times


def test_GFG ( arr , low , high , freq ) :
    if arr [ low ] == arr [ high ] :
        freq [ arr [ low ] ] += high - low + 1
    else :
        mid = ( low + high ) // 2
        find_frequency_util ( arr , low , mid , freq )
        find_frequency_util ( arr , mid + 1 , high , freq )
    find_frequency ( arr , 0 , n = len ( arr ) - 1 )
    for i in range ( 0 , arr [ - 1 ] + 1 ) :
        if freq [ i ] != 0 :
            print ( "Element %d occurs %d times" % ( i , freq [ i ] ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1444
---> probID: projecteuler_p070_A
---> inputs:

---> outputs:
8319823

def p_p070 ( p ) :
    print ( ast . p070 ( ) )
    def f ( ) :
        LIMIT = library . pow ( 10 , 7 )
    def g ( ) :
        min_numer = 1
        min_denom = 0
        totients = library . list_totients ( LIMIT - 1 )
        for n in totients :
            tot = totients [ n ]
            if ( long ( n ) * min_denom < long ( min_numer * tot ) and has_same_digits ( n , tot ) ) :
                min_numer = n
                min_denom = tot
        if min_denom == 0 :
            raise Exception ( "Not found" )
        return str ( min_numer )
    def has_same_digits ( x , y ) :
        xdigits = str ( x ) . split ( "." )
        ydigits = str ( y ) . split ( "." )
        xdigits . sort ( )
        ydigits . sort ( )
        return all ( xdigits == ydigits )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1445
---> probID: geeksforgeeks_1762_A
---> inputs:

---> outputs:
3 3 5 

def test_GFG ( ) :
    a = [ 1 , 2 , 3 , 3 , 4 , 5 , 5 , 6 ]
    b = [ 3 , 3 , 5 ]
    n = len ( a )
    m = len ( b )
    assert intersection ( a , b , n , m ) == [ 1 , 2 , 3 , 4 , 5 , 6 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1446
---> probID: geeksforgeeks_2929_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    a = [ 3 , 2 , 1 , 4 ]
    n = len ( a )
    assert find_min ( a , n ) == 0


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576735704_7213/main.py", line 1
    def import ( arr , n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1447
---> probID: geeksforgeeks_1092_A
---> inputs:

---> outputs:
44100


def import ( arr , n ) :
    class solution :
        def gcd ( self , a , b ) :
            if b == 0 :
                return a
            else :
                return gcd ( b , a % b )
        def lcmOfArray ( arr , n ) :
            if n < 1 :
                return 0
            lcm = arr [ 0 ]
            for i in range ( 1 , n ) :
                lcm = ( lcm * arr [ i ] ) / gcd ( lcm , arr [ i ] )
            return lcm
        def minPerfectSquare ( arr , n ) :
            minPerfectSq = 0
            lcm = lcmOfArray ( arr , n )
            minPerfectSq = int ( lcm )
            cnt = 0
            while lcm > 1 and lcm % 2 == 0 :
                cnt += 1
                lcm //= 2
            if cnt % 2 != 0 :
                minPerfectSq *= 2
            i = 3
            while lcm > 1 :
                cnt = 0
                while lcm % i == 0 :
                    cnt += 1
                    lcm //= i
                if cnt % 2 != 0 :
                    minPerfectSq *= i
                i += 2
            return minPerfectSq
        def main ( ) :
            arr = [ 2 , 3 , 4 , 5 , 7 ]
            n = len ( arr )
            print ( minPerfectSquare ( arr , n ) )
    return solution


---> console_out:
 
DIDN'T MATCH!! :(
 83%|████████▎ | 1447/1746 [00:35<00:07, 41.74it/s]

-------------------------------------


---> lineNum: 1448
---> probID: geeksforgeeks_950_A
---> inputs:

---> outputs:
6


def cfg ( arr , n ) :
    result = 0
    fast , slow = 0 , 0
    for i in range ( 1 , n ) :
        if arr [ i ] - arr [ i - 1 ] == 1 :
            fast += 1
        else :
            len = fast - slow + 1
            result += len * ( len - 1 ) / 2
            fast , slow = i , i
    if fast != slow :
        len = fast - slow + 1
        result += len * ( len - 1 ) / 2
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1449
---> probID: codeforces_1425_A
---> inputs:
2
5
6
---> outputs:
2
4

def class1 ( arg ) :
    input = sys . stdin
    t = input ( )
    while t :
        n = input ( )
        ans = 0
        flag = 0
        while n :
            x = 0
            if n % 2 == 0 :
                temp = n / 2
                if n % 4 == 0 and n > 8 :
                    temp = n - 1
                    x += 1
                n = temp
                if flag == 0 :
                    flag = 1
                    if x > 0 :
                        ans += 1
                    else :
                        ans += temp
                else :
                    flag = 0
            else :
                if flag == 0 :
                    n = n - 1
                    ans += 1
                    flag = 1
                else :
                    n = n - 1
                    flag = 0
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1450
---> probID: aizu_p02402_A
---> inputs:
5
10 1 5 4 17
---> outputs:
1 17 37

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """usage: %s [-d|-e|-u|-t] [-d|-e|-u|-t]""" % sys . argv [ 0 ] )
        print ( """usage: %s [-d|-e|-u|-t|-t] [-d|-e|-u|-t]""" % sys . argv [ 0 ] )
        print ( """usage: %s [-d|-e|-u|-t|-t] [-d|-e|-u|-t]""" % sys . argv [ 0 ] )
        print ( """usage: %s [-d|-e|-u|-t] [-d|-e|-u]""" % sys . argv [ 0 ] )
        print ( """usage: %s [-d|-e|-u|-t] [-d|-e|-u]""" % sys . argv [ 0 ] )
        print ( """usage: %s [-d|-e|-u|-t] [-d|-e|-u]""" % sys . argv [ 0 ] )
        print ( """""" )
        sys . exit ( 1 )
    d = None
    e = None
    u = None
    for o , a in opts :
        if o == '-d' : d = a
        elif o == '-e' : e = a
    if not d :
        sys . stdout = sys . stderr
        print ( """No data found for %s.""" % o )
        sys . exit ( 1 )
    if not u :
        sys . stdout = sys . stderr
        print ( """No data found for %s.""" % o )
        sys . exit ( 1 )
    for arg in args :
        if arg not in d :
            sys . stdout = sys . stderr
            print ( arg )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1451
---> probID: geeksforgeeks_1447_A
---> inputs:

---> outputs:
Smallest window containing all distinct characters is: dbca


def find_substring ( str ) :
    """Find the substring of a string."""
    n = len ( str )
    dist_count = 0
    visited = [ False ] * n
    for i in range ( n ) :
        if visited [ str [ i ] ] == False :
            visited [ str [ i ] ] = True
            dist_count += 1
    start , start_index = 0 , - 1
    min_len = sys . maxint
    count = 0
    curr_count = [ 0 ] * n
    for j in range ( n ) :
        curr_count [ str [ j ] ] += 1
        if curr_count [ str [ j ] ] == 1 :
            count += 1
        if count == dist_count :
            while curr_count [ str [ start ] ] > 1 :
                if curr_count [ str [ start ] ] > 1 :
                    curr_count [ str [ start ] ] -= 1
                start += 1
            len_window = j - start + 1
            if min_len > len_window :
                min_len = len_window
                start_index = start
    return str [ start_index : start_index + min_len ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1452
---> probID: atcoder_ABC074_C
---> inputs:
1 2 10 20 15 200
---> outputs:
110 10

def main ( ) :
    import sys
    A = sys . argv [ 1 ]
    B = sys . argv [ 2 ]
    C = sys . argv [ 3 ]
    D = sys . argv [ 4 ]
    E = sys . argv [ 5 ]
    F = sys . argv [ 6 ]
    water = 0
    suger = 0
    watmax = 0
    sugmax = 0
    maxnodo = 100 * E / ( 100 + E )
    nodo = 0
    nodomax = 0
    for a in range ( 0 , F // 100 , A ) :
        for b in range ( 0 , F // 100 , B ) :
            for c in range ( 0 , F // 100 , C ) :
                for d in range ( 0 , F // 100 , D ) :
                    water = 100 * a + 100 * b
                    suger = c + d
                    if water == 0 or water + suger > F :
                        break
                    nodo = 100 * suger / ( water + suger )
                    if nodo >= nodomax and nodo <= maxnodo :
                        watmax = water
                        sugmax = suger
                        nodomax = nodo
    print ( ( watmax , sugmax ) )


---> console_out:
 
DIDN'T MATCH!! :(
 83%|████████▎ | 1452/1746 [00:35<00:07, 41.48it/s]

-------------------------------------


---> lineNum: 1453
---> probID: aizu_p00089_A
---> inputs:
7
3,8
8,1,0
2,7,4,4
4,5,2,6,5
2,7,4,4
8,1,0
3,8
7
---> outputs:
55

def main ( ) :
    import sys
    before = None
    while True :
        if not sys . stdin . isatty ( ) :
            break
        lines = sys . stdin . readlines ( )
        inner = [ int ( line ) for line in lines ]
        if before is None :
            before = inner
        else :
            tmp = [ ]
            for i in range ( len ( before ) ) :
                if i < len ( tmp ) :
                    if tmp [ i ] < before [ i ] + inner [ i ] :
                        tmp . append ( before [ i ] + inner [ i ] )
                if before [ i ] > tmp [ - 1 ] :
                    if ( i - 1 ) < len ( tmp ) and ( i - 1 ) >= 0 :
                        if tmp [ i - 1 ] < before [ i ] + inner [ i - 1 ] :
                            tmp . append ( before [ i ] + inner [ i - 1 ] )
                else :
                    if ( i + 1 ) < len ( tmp ) :
                        if tmp [ i + 1 ] < before [ i ] + inner [ i + 1 ] :
                            tmp . append ( before [ i ] + inner [ i + 1 ] )
            before = tmp
    print ( before )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1454
---> probID: geeksforgeeks_431_A
---> inputs:

---> outputs:
6
6


def GFG ( arr , n ) :
    even , odd = 0 , 0
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            even += 1
        else :
            odd += 1
    print ( ( even ) * ( n - 1 ) )
    print ( ( odd ) * ( n - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1455
---> probID: codeforces_1613_A
---> inputs:
5
2 1
19 0
10 2
100 1
1999 0
2 3
1 0
1 0
99 0
1 2
---> outputs:
>
=
<
=
<

def test_a1613 ( ) :
    """
 Test the calculation of the power function of the two numbers.
 """
    power = [ 1 , 10 , 100 , 1000 , 10000 , 100000 ]
    s = numpy . random . RandomState ( 0 )
    noOfComparison = len ( s )
    for i in range ( noOfComparison ) :
        x1 , p1 , x2 , p2 = s [ i ]
        compare ( x1 , p1 , x2 , p2 )
    def compare ( x1 , p1 , x2 , p2 ) :
        if p1 == p2 :
            return 1
        else :
            xx1 = x1
            xx2 = x2
            while xx1 % 10 == 0 :
                xx1 /= 10
                p1 += 1
            while xx2 % 10 == 0 :
                xx2 /= 10
                p2 += 1
            if p1 > p2 :
                xx1 *= cached_power ( p1 - p2 )
            elif p2 > p1 :
                xx2 *= cached_power ( p2 - p1 )
            return xx1 , xx2
    def cached_power ( p ) :
        if p < 6 :
            return power [ p ]
        else :
            return pow ( 10 , int ( p ) )
    def direct_compare ( x1 , x2 ) :
        if x1 > x2 :
            return '>'
        elif x2 > x1 :
            return '<'
        else :
            return '='
    def direct_compare ( x1 , x2 ) :
        if x1 > x2 :
            return '>'
        elif x2 > x1 :
            return '<'
        else :
            return '='


---> console_out:
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1456
---> probID: codeforces_400_B
---> inputs:
3 4
*G*S
G**S
*G*S
---> outputs:
2

def main ( ) :
    import sys
    n , m = sys . argv [ 1 ] , sys . argv [ 2 ]
    arrs = [ ]
    for i in range ( n ) :
        arrs . append ( sys . argv [ i ] )
    length = [ ]
    index = 0
    return_dex = None
    for tmp in arrs :
        dexG , dexS = tmp . split ( "G" )
        if dexG > dexS :
            return_dex = - 1
        length . append ( dexS - dexG )
    set = set ( )
    for len in length :
        set . add ( len )
    if return_dex is None :
        print ( return_dex )
    else :
        print ( len ( set ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1457
---> probID: geeksforgeeks_3974_A
---> inputs:

---> outputs:
Yes


def GFG ( arr , n , x ) :
    front , back = 0 , n - 1
    while front <= back :
        if arr [ front ] == x or arr [ back ] == x :
            return True
        front += 1
        back -= 1
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 83%|████████▎ | 1457/1746 [00:35<00:06, 41.45it/s]

-------------------------------------


---> lineNum: 1458
---> probID: geeksforgeeks_494_A
---> inputs:

---> outputs:
10 3
20 4
5 1


def test_GFG ( ) :
    mp = { }
    for i in range ( n ) :
        mp [ i ] = mp [ i ] if i in mp else 1
    for i in range ( n ) :
        if mp [ i ] != - 1 :
            assert i in mp
            mp [ i ] = - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1459
---> probID: geeksforgeeks_3096_A
---> inputs:

---> outputs:
21


def gen_free_tree ( arr , n ) :
    ans = 0
    st = [ int ( i ) for i in range ( n ) ]
    for i in range ( n ) :
        while st [ - 1 ] <= arr [ i ] :
            x = st [ - 1 ]
            st . pop ( - 1 )
            ans += x * min ( st [ - 1 ] , arr [ i ] )
        st . append ( arr [ i ] )
    for i in range ( 2 , len ( st ) ) :
        ans += st [ i ] * st [ i - 1 ]
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1460
---> probID: codeforces_1015_B
---> inputs:
6
abcdef
abdfec
---> outputs:
4
3 5 4 5

def main ( ) :
    import sys
    n = len ( sys . argv )
    s = sys . argv [ 1 ]
    t = sys . argv [ 2 ]
    cache1 = [ 0 ] * 26
    cache2 = [ 0 ] * 26
    for i in range ( n ) :
        cache1 [ s [ i ] - 'a' ] += 1
        cache2 [ t [ i ] - 'a' ] += 1
    flag = 0
    for i in range ( 26 ) :
        if cache1 [ i ] != cache2 [ i ] :
            flag = 1
            break
    if flag == 1 :
        print ( '-1' )
        sys . exit ( 0 )
    s1 = s . split ( )
    s2 = t . split ( )
    l = [ ]
    for i in range ( n ) :
        if s1 [ i ] == s2 [ i ] :
            continue
        pos = - 1
        for j in range ( i + 1 , n ) :
            if s1 [ j ] == s2 [ i ] :
                pos = j
                break
        for j in range ( pos - 1 , i , - 1 ) :
            l . append ( j )
            temp = s1 [ j + 1 ]
            s1 [ j + 1 ] = s1 [ j ]
            s1 [ j ] = temp
        s1 [ i ] = s2 [ i ]
    print ( len ( l ) )
    for x in l :
        print ( ( x + 1 ) , end = ' ' )
    print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1461
---> probID: geeksforgeeks_4615_A
---> inputs:

---> outputs:
x^2 - ( 5 x) + ( 6 ) = 0


def test_GFG ( ) :
    sum = ( a + b )
    product = ( a * b )
    assert simplify ( ( sum + product ) / ( sum + product ) ) == 0


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576736068_7894/main.py", line 1
    def pythontools . solution ( x1 , y1 , r ) :
                    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1462
---> probID: geeksforgeeks_2160_A
---> inputs:

---> outputs:
x^2 + ( -4 x) + y^2 + ( 6 y) = 51 .


def pythontools . solution ( x1 , y1 , r ) :
    a = - 2 * x1
    b = - 2 * y1
    c = ( r ** 2 ) - ( x1 ** 2 ) - ( y1 ** 2 )
    print ( 'x^2 + (%f x) + ' % a )
    print ( 'y^2 + (%f y) = ' % b )
    print ( c , '.' )


---> console_out:
 
DIDN'T MATCH!! :(
 84%|████████▎ | 1462/1746 [00:35<00:06, 41.52it/s]

-------------------------------------


---> lineNum: 1463
---> probID: geeksforgeeks_5130_A
---> inputs:

---> outputs:
{1,  1,  6}
{1,  2,  5}
{1,  7}
{2,  6}


def test_GFG ( l , sum , K , local , A ) :
    if sum == K :
        print ( '{' )
        for i in local :
            if i != 0 :
                print ( ' ' )
            print ( i )
            if i != len ( local ) - 1 :
                print ( ', ' )
        print ( '}' )
        return
    for i in range ( l , len ( A ) ) :
        if sum + A [ i ] > K :
            continue
        if i == 1 and A [ i ] == A [ i - 1 ] and i > l :
            continue
        local . append ( A [ i ] )
        unique_combination ( i + 1 , sum + A [ i ] , K , local , A )
        local . pop ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1464
---> probID: codeforces_706_B
---> inputs:
5
3 10 8 6 11
4
1
10
3
11
---> outputs:
0
4
1
5

def demo1 ( ) :
    import sys
    n = len ( sys . argv )
    arr = [ ]
    for i in range ( n ) :
        arr . append ( sys . argv [ i ] )
    arr . sort ( )
    q = sys . argv [ 1 ]
    for j in range ( q ) :
        x = sys . argv [ 2 ]
        l = 0
        r = n - 1
        m = 0
        while l <= r :
            m = ( l + r ) // 2
            if x >= arr [ m ] :
                l = m + 1
            else :
                r = m - 1
        print ( l )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1465
---> probID: aizu_p00040_A
---> inputs:
1
y eazqyp pnop pngtg ye obmpngt xmybp mr lygw
---> outputs:
i submit that there is another point of view

def main ( ) :
    import sys , re
    import string
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    import re
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1466
---> probID: geeksforgeeks_506_A
---> inputs:

---> outputs:
Even 

def GFG ( a , b , n ) :
    if n == 0 :
        return ( a & 1 ) == 1 and True or False
    if n == 1 :
        return ( b & 1 ) == 1 and True or False
    if ( a & 1 ) == 0 :
        if ( b & 1 ) == 0 :
            return False
        else :
            return ( n % 3 != 0 )
    else :
        if ( b & 1 ) == 0 :
            return ( ( n - 1 ) % 3 != 0 )
        else :
            return ( ( n + 1 ) % 3 != 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1467
---> probID: aizu_p01802_A
---> inputs:
2 1
7 5
7 6
7 7
76 5
8 41
0 0
---> outputs:
0.4142135624
0
0.0827625303
0
48.7401153702
33

def test_numpy_array_inequality_1 ( ) :
    import numpy as np
    for dtype in [ np . float32 , np . float64 ] :
        a = np . arange ( 10 )
        b = np . arange ( 10 )
        if a == 0 :
            break
        assert_equal ( intbv ( 0 , size = a // 2 + 1 ) [ 0 ] , b )


---> console_out:
 
DIDN'T MATCH!! :(
 84%|████████▍ | 1467/1746 [00:35<00:06, 41.36it/s]

-------------------------------------


---> lineNum: 1468
---> probID: geeksforgeeks_4768_A
---> inputs:

---> outputs:
5


def GFG ( a , n ) :
    dp = [ ]
    if n == 1 :
        dp . append ( max ( 0 , a [ 0 ] ) )
    elif n == 2 :
        dp . append ( max ( 0 , a [ 0 ] ) )
        dp . append ( max ( a [ 1 ] , dp [ 0 ] ) )
    elif n >= 3 :
        dp . append ( max ( 0 , a [ 0 ] ) )
        dp . append ( max ( a [ 1 ] , max ( 0 , a [ 0 ] ) ) )
        dp . append ( max ( a [ 2 ] , max ( a [ 1 ] , max ( 0 , a [ 0 ] ) ) ) )
        i = 3
        while i < n :
            dp . append ( max ( dp [ i - 1 ] , a [ i ] + dp [ i - 3 ] ) )
            i += 1
    return dp [ - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1469
---> probID: codeforces_49_A
---> inputs:
Is it a melon?
---> outputs:
NO

def sleuth ( ) :
    import sys
    question = sys . stdin . readline ( ) . strip ( )
    original_q = question [ : - 1 ] . strip ( )
    ch = original_q [ - 1 ]
    vowels = [ 'A' , 'E' , 'I' , 'O' , 'U' , 'Y' ]
    b = any ( e . lower ( ) in ch for e in vowels )
    print ( b )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576736262_3467/main.py", line 1
    def import ( n , k ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1470
---> probID: geeksforgeeks_3835_A
---> inputs:

---> outputs:
10
26


def import ( n , k ) :
    """
 Import a solution to the given number of k and k from the given number of n.
 """
    mini = sys . maxint
    for i in range ( 1 , n * i + 1 ) :
        if n % i == 0 :
            fir = i
            sec = n // i
            num1 = fir * k + sec
            res = ( num1 // k ) * ( num1 % k )
            if res == n :
                mini = min ( num1 , mini )
            num2 = sec * k + fir
            res = ( num2 // k ) * ( num2 % k )
            if res == n :
                mini = min ( num2 , mini )
    return mini


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1471
---> probID: codejam_16_13
---> inputs:
4
4
2 3 4 1
4
3 3 4 1
4
3 3 4 3
10
7 8 10 10 9 2 9 6 3 3

---> outputs:
Case #1: 4
Case #2: 3
Case #3: 3
Case #4: 6


def C ( ) :
    C = sys . maxsize
    for this_case in range ( 1 , C + 1 ) :
        print ( "Case #%d: %d%n" % ( this_case , largestCircle ( ) ) )
    def largestCircle ( ) :
        N = len ( C )
        bff = [ C [ i ] for i in range ( N ) ]
        status = [ - 2 ] * N
        chain_length = [ 0 ] * N
        for i in range ( N ) :
            status [ i ] = - 1
            chain_length [ i ] = 0
        for i in range ( N ) :
            if bff [ bff [ i ] ] == i :
                status [ i ] = - 1
        max_loop_size = 0
        for i in range ( N ) :
            if status [ i ] != - 1 :
                current = bff [ i ]
                status [ i ] = i
                steps = 1
                done = False
                while not done :
                    if current == i :
                        if steps > max_loop_size :
                            max_loop_size = steps
                        done = True
                    elif status [ current ] == i :
                        done = True
                    elif status [ current ] == - 1 :
                        if steps > chain_length [ current ] :
                            chain_length [ current ] = steps
                        done = True
                    else :
                        steps += 1
                        status [ current ] = i
                        current = bff [ current ]
        franken_circle = 0
        for i in range ( N ) :
            if status [ i ] == - 1 :
                franken_circle += ( chain_length [ i ] + 1 )
        return max ( franken_circle , max_loop_size )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1472
---> probID: geeksforgeeks_371_A
---> inputs:

---> outputs:
813.5999999999999


def py2exe_version ( ) :
    class solution ( object ) :
        def __init__ ( self , CP , PP ) :
            P_decimal = 1 + ( PP / 100 )
            res = P_decimal * CP
        def __mod__ ( self , C ) :
            return C % P
        def __floordiv__ ( self , C ) :
            return C / P
        def __truediv__ ( self , C ) :
            return C / P
        def __mod__ ( self , C ) :
            return C % P
    return solution


---> console_out:
 
DIDN'T MATCH!! :(
 84%|████████▍ | 1472/1746 [00:35<00:06, 41.42it/s]

-------------------------------------


---> lineNum: 1473
---> probID: codeforces_1265_B
---> inputs:
3
6
4 5 1 3 2 6
5
5 3 1 2 4
4
1 4 3 2
---> outputs:
101011
11111
1001

def pyc_test ( ) :
    import sys
    t , j , i , n , p1 , p2 , c , p [ 0 ] = sys . argv [ 1 ] , sys . argv [ 2 ] , sys . argv [ 3 ] , sys . argv [ 4 ]
    t = t [ 0 ]
    for j in range ( 1 , t + 1 ) :
        n = n [ 0 ]
        p = [ i for i in range ( n + 5 ) ]
        p1 = p2 = p [ 1 ]
        print ( 1 )
        for i in range ( 2 , n + 1 ) :
            c = p [ i ]
            if c > p2 :
                p2 = c
            elif c < p1 :
                p1 = c
            if ( p2 - p1 ) == i - 1 :
                print ( 1 )
            else :
                print ( 0 )
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1474
---> probID: atcoder_ABC044_D
---> inputs:
87654
30
---> outputs:
10

def main ( ) :
    import math
    n = math . floor ( math . log ( n ) )
    s = math . ceil ( math . log ( n ) )
    if n < s :
        print ( - 1 )
        return
    for d in range ( 39 , 1 , - 1 ) :
        b = lower_bound ( d , n )
        while d * math . log ( b ) <= math . log ( n ) :
            if test ( b , n , s ) :
                print ( b )
                return
            b += 1
    for a1 in range ( int ( math . sqrt ( n - s ) ) , 1 , - 1 ) :
        if ( n - s ) % a1 == 0 :
            b = ( n - s ) // a1 + 1
            a0 = n - a1 * b
            if a0 >= 0 and a0 < b and a0 + a1 == s :
                print ( b )
                return
    if n == s :
        print ( n + 1 )
    else :
        print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1475
---> probID: codeforces_821_B
---> inputs:
1 5
---> outputs:
30

def test_B ( ) :
    x = symbols ( 'x' , real = True )
    m = symbols ( 'm' , integer = True , positive = True )
    b = symbols ( 'b' , integer = True , positive = True )
    result = 0
    for x in range ( 1 , m * b + 1 ) :
        y = symbols ( 'y' , integer = True , positive = True )
        result = max ( result , 1 * ( x + 1 ) * ( y ) ** ( y + 1 ) / 2 + 1 * ( y + 1 ) * ( x ) ** ( x + 1 ) / 2 )
    assert result == 0
    class MyScanner ( Scanner ) :
        def scan ( self , x ) :
            return x
    class MyIterator ( Iterator ) :
        def __next__ ( self ) :
            return x
    class MyIterator ( Iterator ) :
        def scan ( self , x ) :
            return x
    next = MyIterator ( )
    while not next ( ) or not next ( ) :
        try :
            next ( )
        except StopIteration :
            pass
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x
    assert next ( ) == x


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1476
---> probID: geeksforgeeks_442_A
---> inputs:

---> outputs:
YES


def GFG ( n , m ) :
    if m % n == 0 :
        print ( 'YES' )
    else :
        print ( 'NO' )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1477
---> probID: codeforces_1324_B
---> inputs:
5
3
1 2 1
5
1 2 2 3 2
3
1 1 2
4
1 2 2 1
10
1 1 2 2 3 3 4 4 5 5
---> outputs:
YES
YES
NO
YES
NO

def main ( argv ) :
    f = open ( '/etc/elementos/' , 'r' )
    cantidad = f . readline ( )
    solucion = [ ]
    for i in range ( int ( cantidad ) ) :
        cantidadfor = f . readline ( )
        cantidadelementos = int ( cantidadfor )
        elementos_s = f . readline ( ) . split ( )
        elementos = [ int ( element ) for element in elementos_s ]
        for j in range ( cantidadelementos ) :
            centinela = False
            for k in range ( cantidadelementos - 1 , - 1 , - 1 ) :
                if elementos [ j ] == elementos [ k ] and k - j >= 2 :
                    solucion . append ( 'YES' )
                    break
            if centinela :
                break
    for i in range ( len ( solucion ) ) :
        if solucion [ i ] == None :
            solucion [ i ] = 'NO'
    for i in range ( len ( solucion ) ) :
        print ( solucion [ i ] )


---> console_out:
 
DIDN'T MATCH!! :(
 85%|████████▍ | 1477/1746 [00:35<00:06, 41.40it/s]

-------------------------------------


---> lineNum: 1478
---> probID: aizu_p00376_A
---> inputs:
20 30
---> outputs:
10

def pytime_object_to_timeval ( * args , ** kw ) :
    pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1479
---> probID: codeforces_591_B
---> inputs:
6 1
police
p m
---> outputs:
molice

def main ( ) :
    import sys
    a = sys . argv [ 1 ]
    b = sys . argv [ 2 ]
    c = [ ]
    s = sys . stdin . read ( a )
    c = s . split ( '\n' )
    ch = [ chr ( ord ( 'a' ) + i ) for i in range ( 26 ) ]
    for i in range ( b ) :
        m = sys . stdin . readline ( )
        n = sys . stdin . readline ( )
        mm = m [ 0 ]
        nn = n [ 0 ]
        flag = 1
        for j in range ( 26 ) :
            if ch [ j ] == mm and flag == 1 :
                ch [ j ] = nn
                flag = 0
            if ch [ j ] == nn and flag == 1 :
                ch [ j ] = mm
                flag = 0
            flag = 1
    for i in range ( a ) :
        c . append ( ch [ c [ i ] - 97 ] )
    print ( c )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1480
---> probID: geeksforgeeks_4156_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    """Test the findnth function."""
    occur = 0
    for c in str ( G ) :
        if c == ch : occur += 1
        if occur == N : return c


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1481
---> probID: codeforces_471_A
---> inputs:
4 2 5 4 4 4
---> outputs:
Bear

def mu_hand_sticks ( ) :
    s = input ( )
    sticks = [ ]
    for i in range ( 6 ) :
        sticks . append ( s [ - 1 ] )
    legs , headbody = False , False
    for i in range ( 9 ) :
        if sticks [ i ] >= 4 :
            legs = True
        if sticks [ i ] >= 6 :
            headbody = True
        if sticks [ i ] == 2 :
            headbody = True
    if legs and headbody :
        return "Elephant"
    elif legs :
        return "Bear"
    else :
        return "Alien"


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576736550_8141/main.py", line 23
    return str ( sum )
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 1482
---> probID: projecteuler_p401_A
---> inputs:

---> outputs:
281632621

def p_p401 ( p ) :
    """p401 : INTEGER"""
    p [ 0 ] = int ( p [ 1 ] )
def test_sum ( limit ) :
    assert p [ 0 ] == limit
LIMIT = 1000000000000000.0
MODULUS = library . pow ( 10 , 9 )
split_count = int ( library . sqrt ( LIMIT ) )
split_count = max ( split_count // 3 , 1 )
split_at = int ( LIMIT / ( split_count + 1 ) )
sum = 0
for i in range ( 1 , split_at + 1 ) :
    count = LIMIT / i % MODULUS
    term = int ( i ) * i % MODULUS
    term = term * count % MODULUS
    sum = ( sum + term ) % MODULUS
for i in range ( split_count , - 1 , - 1 ) :
    start = LIMIT / ( i + 1 )
    end = LIMIT / i
    sum_squares = sum_squares_mod ( end ) - sum_squares_mod ( start )
    sum_squares = ( sum_squares + MODULUS ) % MODULUS
    sum = ( sum + i * sum_squares % MODULUS ) % MODULUS
return str ( sum )


---> console_out:
 
DIDN'T MATCH!! :(
 85%|████████▍ | 1482/1746 [00:35<00:06, 41.56it/s]  File "./junk/1692576736575_1590/main.py", line 3
    

SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1483
---> probID: codeforces_1389_B
---> inputs:
4
5 4 0
1 5 4 3 2
5 4 1
1 5 4 3 2
5 4 4
10 20 30 40 50
10 7 3
4 6 8 2 9 9 7 4 10 9
---> outputs:
15
19
150
56

def test_code_forces1389B ( ) :
    input = np . array ( [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 38 , 39 , 40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 54 , 55 , 56 , 57 , 58 , 59 , 60 , 61 , 62 , 63 , 64 , 65 , 66 , 67 , 68 , 69 , 70 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 99 , 100 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 111 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 ]

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1484
---> probID: codeforces_56_B
---> inputs:
8
1 6 5 4 3 2 7 8
---> outputs:
2 6

def main ( ) :
    import sys
    import getopt
    global a
    global r
    flag = False
    isTrue = False
    for o , a in getopt . getopt ( sys . argv [ 1 : ] , "a" ) :
        if o == '-a' :
            a = a . split ( )
        elif o == '-r' :
            r = a . split ( )
        elif o == '--a' :
            a = a . split ( )
        elif o == '--r' :
            r = a . split ( )
        elif o == '--flag' :
            flag = True
        elif o == '--isTrue' :
            isTrue = True
    print ( ( not isTrue ) and l or r )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576736627_3747/main.py", line 15
    if b [ p ] [ 0 ] <= b [ i ] [ 0 ] <= b [ i ] [ 0 ] and b [ i ] [ 0 ] <= b [ p ] [ 0 ] and b [ p ] [ 1 ] <= b [ j ] [ 1 ] and b [ j ] [ 1 ] <= b [ p ] [ 1 ] and b [ p ] [ 2 ] <= b [ k ] [ 2 ] and b [ k ] [ 2 ] <= b [ p ] [ 2 ] ) :
                                                                                                                                                                                                                                      ^
SyntaxError: unmatched ')'


-------------------------------------


---> lineNum: 1485
---> probID: aizu_p00367_A
---> inputs:
5
1 0 2 0 3 30 4 30 6 0 7 0
2 30 3 0 4 0 5 0 5 30 6 30
1 30 2 30 4 30 5 0 6 30 7 0
2 30 3 0 5 0 6 0 6 30 7 0
1 0 2 0 3 0 3 30 4 0 5 0
---> outputs:
3

def main ( ) :
    import sys
    n = len ( sys . argv )
    b = [ ] ;
    for i in range ( n ) :
        for j in range ( 3 ) :
            for k , h , m in divmod ( i , 2 ) :
                b . append ( h * 60 + m )
    ans = 0 ;
    for i in range ( n ) :
        for j in range ( n ) :
            for k in range ( n ) :
                res = 0 ;
                for p in range ( n ) :
                    if b [ p ] [ 0 ] <= b [ i ] [ 0 ] <= b [ i ] [ 0 ] and b [ i ] [ 0 ] <= b [ p ] [ 0 ] and b [ p ] [ 1 ] <= b [ j ] [ 1 ] and b [ j ] [ 1 ] <= b [ p ] [ 1 ] and b [ p ] [ 2 ] <= b [ k ] [ 2 ] and b [ k ] [ 2 ] <= b [ p ] [ 2 ] ) :
                        res += 1 ;
            ans = max ( ans , res ) ;
        print ( ans ) ;
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1486
---> probID: aizu_p00740_A
---> inputs:
3 2
3 3
3 50
10 29
31 32
50 2
50 50
0 0
---> outputs:
1
0
1
5
30
1
13

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'a' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """usage: aoj1159 [--a] [--a] [--a] [--a] [--a]""" )
        return
    for o , a in opts :
        if o == '-a' :
            a = a
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a - 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        elif o == '--a' :
            a = a + 1
        else :
            print ( "Unknown option: '%s'" % o )
            sys . exit ( 1 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576736680_5838/main.py", line 23
    def __init__ ( self , f , 1 << 15 ) :
                              ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1487
---> probID: aizu_p02356_A
---> inputs:
6 5
1 2 3 4 5 6
6 9 12 21 15
---> outputs:
9
12
15
21
18

def main ( ) :
    my_func = my_enumerate
    n = len ( my_func )
    q = len ( my_func )
    a = [ my_func [ i ] for i in range ( n ) ]
    f = open ( '/proc/meminfo' , 'w' )
    for i in range ( q ) :
        x = my_func [ i ]
        cnt = 0
        right = 0
        sum = 0
        for left in range ( n ) :
            while right < n and sum + a [ right ] <= x :
                sum += a [ right ]
            cnt += right - left
            if right == left :
                right += 1
            else :
                sum -= a [ left ]
        f . write ( cnt )
    f . close ( )
    class MyScanner :
        def __init__ ( self , f , 1 << 15 ) :
            self . f = f
        def next ( self ) :
            try :
                while not self . f or not self . f . next ( ) :
                    self . f . next ( )
            except StopIteration :
                pass
            return self . f . next ( )
        def __iter__ ( self ) :
            return iter ( self . f )
        def __next__ ( self ) :
            try :
                while self . f . next ( ) or not self . f . next ( ) :
                    self . f . next ( )
            except StopIteration :
                pass
            return self . f . next ( )
        def __nonzero__ ( self ) :
            return self . f . next ( )
        def __bool__ ( self ) :
            return self . f . next ( )
    my_func = my_enumerate
    my_func = my_enumerate ( )
    f = MyScanner ( f , 1 << 15 )
    f . next ( )
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(
 85%|████████▌ | 1487/1746 [00:36<00:06, 40.58it/s]

-------------------------------------


---> lineNum: 1488
---> probID: codeforces_1409_A
---> inputs:
6
5 5
13 42
18 4
1337 420
123456789 1000000000
100500 9000
---> outputs:
0
3
2
92
87654322
9150

def test_code_force_1409_a ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' , integer = True , positive = True )
    a , b = symbols ( 'a b' , integer = True , positive = True )
    for i in range ( t . size ) :
        a , b = symbols ( 'a b' , integer = True , positive = True )
        counter = 0
        if a < b :
            counter = ( b - a ) / 10
        elif a > b :
            counter = ( a - b ) / 10
        if a % 10 != b % 10 :
            counter += 1
        assert counter == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1489
---> probID: geeksforgeeks_743_A
---> inputs:

---> outputs:
3
2
5


def test_GFG ( ) :
    max_size = int ( 1e5 + 5 )
    is_fib = [ False ] * max_size
    prefix = [ 0 ] * max_size
    def digitsum ( num ) :
        s = 0
        while num != 0 :
            s = s + num % 10
            num = num / 10
        return s
    def generate_fibonacci ( ) :
        del is_fib [ 0 ]
        prev , curr = 0 , 1
        is_fib [ prev ] = is_fib [ curr ] = True
        while curr < max_size :
            temp = curr + prev
            if temp < max_size :
                is_fib [ temp ] = True
            prev , curr = temp
    def precompute ( k ) :
        generate_fibonacci ( )
        for i in range ( 1 , max_size ) :
            sum = digitsum ( i )
            if is_fib [ sum ] == True and sum % k == 0 :
                prefix [ i ] += 1
        for i in range ( 1 , max_size ) :
            prefix [ i ] = prefix [ i ] + prefix [ i - 1 ]
    def perform_queries ( k , q , * query ) :
        precompute ( k )
        for i in range ( q ) :
            l , r = query [ i ]
            cnt = prefix [ r ] - prefix [ l - 1 ]
            print ( cnt , end = '' )
    def test_gf_gf_list ( ) :
        for i in range ( 2 , len ( query ) ) :
            for j in range ( i + 1 , len ( query ) ) :
                for k in range ( 2 , len ( query ) ) :
                    for l in range ( j + 1 , len ( query ) ) :
                        for r in range ( j + 1 , len ( query ) ) :
                            for i in range ( j + 1 , len ( query ) ) :
                                if i == j :
                                    break
    test_gf_gf_list ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1490
---> probID: codeforces_1642_A
---> inputs:
5
8 10
10 4
6 2
4 6
0 1
4 2
14 1
11 2
13 2
0 0
4 0
2 4
0 1
1 1
0 0
---> outputs:
0.0000000
0
2.0000
0.00
1

def test_a1642 ( ) :
    X = np . array ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] )
    T = np . array ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] )
    for t in T :
        X = np . array ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] )
        Y = np . array ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] )
        answer = 0
        for i in range ( 3 ) :
            if Y [ i ] == Y [ ( i + 1 ) % 3 ] and Y [ i ] > Y [ ( i + 2 ) % 3 ] :
                answer += abs ( X [ ( i + 1 ) % 3 ] - X [ i ] )
        assert_array_equal ( answer , [ 1 , 2 , 3 , 4 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1491
---> probID: geeksforgeeks_2417_A
---> inputs:

---> outputs:
Yes


def GFG ( str ) :
    len = len ( str )
    for i in range ( len ( str ) / 2 ) :
        if str [ i ] != str [ len - 1 - i ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1492
---> probID: aizu_p02408_A
---> inputs:
47
S 10
S 11
S 12
S 13
H 1
H 2
S 6
S 7
S 8
S 9
H 6
H 8
H 9
H 10
H 11
H 4
H 5
S 2
S 3
S 4
S 5
H 12
H 13
C 1
C 2
D 1
D 2
D 3
D 4
D 5
D 6
D 7
C 3
C 4
C 5
C 6
C 7
C 8
C 9
C 10
C 11
C 13
D 9
D 10
D 11
D 12
D 13
---> outputs:
S 1
H 3
H 7
C 12
D 8

def main ( ) :
    import sys
    import getopt
    global n
    global array
    for i in range ( 1 , n + 1 ) :
        s = getopt . getopt ( sys . argv [ 1 : ] , "s:h:" )
        a = 0
        if s == 'S' :
            array = [ ]
            for i in range ( 1 , n + 1 ) :
                if s == 'H' :
                    array . append ( 1 )
                elif s == 'C' :
                    array . append ( 2 )
                elif s == 'D' :
                    array . append ( 3 )
            for i in range ( 1 , n + 1 ) :
                if array [ i ] [ 0 ] == 0 and i == 0 :
                    print ( "S " + str ( i + 1 ) )
                elif array [ i ] [ 0 ] == 0 and i == 1 :
                    print ( "H " + str ( i + 1 ) )
                elif array [ i ] [ 0 ] == 0 and i == 2 :
                    print ( "C " + str ( i + 1 ) )
                elif array [ i ] [ 0 ] == 0 and i == 3 :
                    print ( "D " + str ( i + 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 85%|████████▌ | 1492/1746 [00:36<00:06, 40.77it/s]

-------------------------------------


---> lineNum: 1493
---> probID: geeksforgeeks_3434_A
---> inputs:

---> outputs:
Sum of even numbers at  even indices is  30


def test_GFG ( ) :
    """Test the Sum of even numbers."""
    i , sum = 0 , 0
    for i in range ( 0 , n , 2 ) :
        if i % 2 == 0 :
            sum += i
    assert sum == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1494
---> probID: codeforces_1671_A
---> inputs:
8
aaaabbb
bbaaaaabbb
aaaaaa
abab
a
b
aaaab
bbaaa
---> outputs:
YES
YES
YES
NO
NO
NO
NO
YES

def test_codechef ( ) :
    import sympy
    from sympy . core . function import Function
    T = symbols ( 'T' , integer = True , positive = True )
    for i in range ( T ) :
        s = sympy . sin ( i )
        f = Function ( 'f' )
        if f . is_Piecewise :
            assert f ( i ) . is_Piecewise
            continue
        count = 1
        a = True
        for j in range ( len ( s ) - 1 ) :
            if s [ j ] == s [ j + 1 ] :
                count += 1
            else :
                if count == 1 :
                    a = False
                    break
                elif j == len ( s ) - 2 :
                    a = False
                else :
                    count = 1
        if a is True :
            assert f ( i ) . is_Piecewise
        else :
            assert f ( i ) . is_Piecewise


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1495
---> probID: geeksforgeeks_1479_A
---> inputs:

---> outputs:
1 3 6 

def pyGFG ( arr , n ) :
    i = 0
    fl = 0
    for i in range ( n ) :
        if arr [ arr [ i ] % n ] >= n :
            if arr [ arr [ i ] % n ] < 2 * n :
                print ( arr [ i ] % n , end = ' ' )
                fl = 1
        arr [ arr [ i ] % n ] += n
    if not ( fl > 0 ) :
        print ( '-1' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1496
---> probID: codeforces_1293_B
---> inputs:
1
---> outputs:
1.000000000000

def test_cf1293b ( ) :
    X = np . array ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] )
    Y = np . array ( [ 1 , 2 , 3 , 4 ] )
    N = 1000
    for method in [ 'cd' , 'mu' , 'ncg' , 'mu_ncg' ] :
        for data in ( X , Y , N ) :
            res = getattr ( manifold . cf1293b , method ) ( data )
            if res . shape [ 1 ] == 2 :
                assert res . shape [ 0 ] == 2
            assert res . shape [ 1 ] == 3


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1497
---> probID: geeksforgeeks_2020_A
---> inputs:

---> outputs:
8


def GFG ( n ) :
    return n * ( n + 1 ) * ( n + 2 ) / 3


---> console_out:
 
DIDN'T MATCH!! :(
 86%|████████▌ | 1497/1746 [00:36<00:06, 41.38it/s]

-------------------------------------


---> lineNum: 1498
---> probID: geeksforgeeks_2615_A
---> inputs:

---> outputs:
45


def GFG ( n ) :
    return ( n * ( n - 1 ) ) / 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1499
---> probID: geeksforgeeks_4781_A
---> inputs:

---> outputs:
15


def GFG ( n ) :
    return n ^ ( n >> 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1500
---> probID: geeksforgeeks_3803_A
---> inputs:

---> outputs:
28


def GFG ( n ) :
    return ( n * ( n - 1 ) ) / 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1501
---> probID: geeksforgeeks_2214_A
---> inputs:

---> outputs:
4


def GFG ( n ) :
    if n % 2 == 1 :
        return 0
    elif n % 4 == 0 :
        return n // 4 - 1
    else :
        return n // 4


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1502
---> probID: geeksforgeeks_4734_A
---> inputs:

---> outputs:
3


def GFG ( n ) :
    if n == 0 :
        return 0
    if ( n & 1 ) == 1 :
        return 1 + CountSetBits ( n >> 1 )
    else :
        return CountSetBits ( n >> 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 86%|████████▌ | 1502/1746 [00:36<00:05, 41.85it/s]

-------------------------------------


---> lineNum: 1503
---> probID: geeksforgeeks_5233_A
---> inputs:

---> outputs:
22


def GFG ( m , n ) :
    return 8 * m ** n - 6 * m - 6 * n + 4


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1504
---> probID: geeksforgeeks_1793_A
---> inputs:

---> outputs:
SUM( 5 ,  3 ): 7260


def GFG ( n , m ) :
    if m == 1 :
        return ( n * ( n + 1 ) / 2 )
    sum = SUM ( n , m - 1 )
    return ( sum * ( sum + 1 ) / 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1505
---> probID: geeksforgeeks_4715_A
---> inputs:

---> outputs:
6


def test_GFG ( ) :
    n = symbols ( 'n' , integer = True , positive = True )
    assert max_lcm_poly ( n ) == ( n ** 2 - 1 ) / 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1506
---> probID: geeksforgeeks_4825_A
---> inputs:

---> outputs:
20


def GFG ( n ) :
    return ( n * ( n + 1 ) ** 2 ) / 12


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1507
---> probID: geeksforgeeks_2240_A
---> inputs:

---> outputs:
4


def GFG ( n ) :
    if n % 2 == 1 :
        return 0
    else :
        return ( n - 2 ) // 4


---> console_out:
 
DIDN'T MATCH!! :(
 86%|████████▋ | 1507/1746 [00:36<00:05, 42.14it/s]

-------------------------------------


---> lineNum: 1508
---> probID: geeksforgeeks_3669_A
---> inputs:

---> outputs:
36 32


def GFG ( n ) :
    print ( 9 * n , 8 * n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1509
---> probID: geeksforgeeks_3562_A
---> inputs:

---> outputs:
1


def GFG ( n ) :
    if n < 3 :
        return 0
    return ( n & 1 ) > 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1510
---> probID: geeksforgeeks_3637_A
---> inputs:

---> outputs:
28


def GFG ( n ) :
    return ( n ) * ( n - 1 ) / 2


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576737246_8183/main.py", line 1
    def class Solution ( n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1511
---> probID: geeksforgeeks_2019_A
---> inputs:

---> outputs:
8


def class Solution ( n ) :
    if n == 1 :
        return 2
    else :
        return ( n * ( n + 1 ) + sum ( n - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1512
---> probID: geeksforgeeks_2936_A
---> inputs:

---> outputs:
16


def GFG ( n ) :
    n = 48
    assert n == highestPowerOf2 ( n )


---> console_out:
 
DIDN'T MATCH!! :(
 87%|████████▋ | 1512/1746 [00:36<00:05, 42.40it/s]

-------------------------------------


---> lineNum: 1513
---> probID: geeksforgeeks_3117_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    n = 3
    assert count_intersections ( n ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1514
---> probID: atcoder_ABC071_B
---> inputs:
atcoderregularcontest
---> outputs:
b

def main ( ) :
    import sys
    s = sys . stdin . read ( )
    sys . stdin . close ( )
    c = "None"
    for i in [ 'a' , 'z' ] :
        if not s . find ( "%c" % chr ( i ) ) :
            c = "%c" % chr ( i )
            break
    sys . stdout . write ( c )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1515
---> probID: codeforces_299_A
---> inputs:
3
2 2 4
---> outputs:
2

def test_a1581 ( ) :
    f = py . io . TextIO ( )
    f . write ( "hello\n" )
    n = len ( f . getvalue ( ) )
    arr = [ i for i in f . getvalue ( ) . split ( "\n" ) if i ]
    arr . sort ( )
    if arr [ 0 ] == 1 :
        f . write ( 1 )
        f . close ( )
        return
    else :
        if n == 1 :
            f . write ( arr [ 0 ] )
            f . close ( )
            return
    yes = True
    for i in range ( 1 , n ) :
        if arr [ i ] % arr [ 0 ] != 0 :
            yes = False
            break
    if yes :
        f . write ( arr [ 0 ] )
    else :
        f . write ( - 1 )
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1516
---> probID: atcoder_ABC053_A
---> inputs:
1000
---> outputs:
ABC

def main ( ) :
    import sys
    print ( 1200 > sys . argv [ 1 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1517
---> probID: codeforces_803_B
---> inputs:
9
2 1 0 3 0 0 3 2 4
---> outputs:
2 1 0 1 0 0 1 2 3

def main ( ) :
    import sys
    import getopt
    global max_element_value
    global elements
    elements = list ( sys . stdin . readline ( ) . split ( ) )
    right_distance = [ max_element_value ] * len ( elements ) + 1
    left_distance = [ max_element_value ] * len ( elements ) + 1
    for i in range ( len ( right_distance ) - 2 , - 1 , - 1 ) :
        if elements [ i ] == 0 :
            right_distance [ i ] = 0
        else :
            right_distance [ i ] = right_distance [ i + 1 ] + 1
    for j in range ( 1 , len ( left_distance ) ) :
        if elements [ j - 1 ] == 0 :
            left_distance [ j ] = 0
        else :
            left_distance [ j ] = left_distance [ j - 1 ] + 1
    for i in range ( len ( elements ) ) :
        print ( min ( right_distance [ i ] , left_distance [ i + 1 ] ) )
        if i + 1 < len ( elements ) :
            print ( " " . join ( [ str ( x ) for x in elements [ i + 1 ] ] ) )


---> console_out:
 
DIDN'T MATCH!! :(
 87%|████████▋ | 1517/1746 [00:36<00:05, 42.43it/s]

-------------------------------------


---> lineNum: 1518
---> probID: geeksforgeeks_4744_A
---> inputs:

---> outputs:
Minimum of 3 numbers is 5


def GFG ( x , y , z ) :
    c = 0
    while x != 0 and y != 0 and z != 0 :
        x -= 1
        y -= 1
        z -= 1
        c += 1
    return c


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1519
---> probID: aizu_p00291_A
---> inputs:
3 1 4 0 4 1
---> outputs:
0

def pyc_main ( ) :
    import sys
    c1 = sys . argv [ 1 ]
    c5 = sys . argv [ 2 ]
    c10 = sys . argv [ 3 ]
    c50 = sys . argv [ 4 ]
    c100 = sys . argv [ 5 ]
    c500 = sys . argv [ 6 ]
    if c1 + c5 * 5 + c10 * 10 + c50 * 50 + c100 * 100 + c500 * 500 < 1000 :
        print ( '0' )
    else :
        print ( '1' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1520
---> probID: codeforces_336_B
---> inputs:
1 1
---> outputs:
2.0000000000

def another ( ) :
    f = FastReader ( )
    f . write ( '%.12f\n' % ( 2 + 2. * ( m - 1 ) * m ** 2 / 3 / m / m - 2 * ( 2 - sqrt ( 2 ) ) + ( 2 - sqrt ( 2 ) ) * ( 2 * m + 2 * ( m - 1 ) ) / m / m ) * R )
    f . flush ( )
    f . close ( )
    class Another ( object ) :
        def __init__ ( self , f ) :
            self . f = f
        def readline ( self ) :
            if self . f . readline ( ) == '' or not self . f . readline ( ) :
                self . f . readline ( )
            return self . f . readline ( )
        def readline ( self ) :
            if self . f . readline ( ) == '' or not self . f . readline ( ) :
                self . f . readline ( )
            return self . f . readline ( )
        def readline ( self ) :
            if self . f . readline ( ) == '' or not self . f . readline ( ) :
                self . f . readline ( )
            return self . f . readline ( )
    return Another


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1521
---> probID: geeksforgeeks_5068_A
---> inputs:

---> outputs:
Count of cubes is 2


def test_GFG ( ) :
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    assert count_cubes ( [ 1 , 2 , 3 ] ) == ( 1 , 2 )
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576737504_9339/main.py", line 34
    dp [ max ( 0 , i - a [ k ] ) ] [ min ( 100 , j + e [ k ] ) ] = min ( dp [ max ( 0 , i - a [ k ] ) ] [ min ( 100 , j + e [ k ] ) ] , dp [ i ] [ j ] + 1 ) ]
                                                                                                                                                             ^
SyntaxError: unmatched ']'


-------------------------------------


---> lineNum: 1522
---> probID: aizu_p00283_A
---> inputs:
15 4
1 1 0
1 2 2
5 10 5
8 1 15
60 4
5 2 0
8 8 2
3 5 0
49 0 18
100 1
1 1 1
0 0
---> outputs:
6
4
NA

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        sys . stdout . write ( msg + '\n' )
        sys . exit ( 1 )
    D = int ( opts [ 0 ] )
    N = int ( opts [ 1 ] )
    if ( D | N ) == 0 :
        break
    a = [ ]
    e = [ ]
    r = [ ]
    for i in range ( N ) :
        aa = int ( opts [ 0 ] )
        ee = int ( opts [ 1 ] )
        rr = int ( opts [ 2 ] )
        a . append ( aa )
        e . append ( ee )
        r . append ( rr )
    dp = [ INF ] * 101
    for d in dp :
        del dp [ d ]
    dp [ D ] = 0
    for i in range ( D , 0 , - 1 ) :
        for j in range ( 0 , 100 ) :
            if dp [ i ] [ j ] == INF :
                continue
            for k in range ( 0 , N ) :
                if j < r [ k ] :
                    continue
                dp [ max ( 0 , i - a [ k ] ) ] [ min ( 100 , j + e [ k ] ) ] = min ( dp [ max ( 0 , i - a [ k ] ) ] [ min ( 100 , j + e [ k ] ) ] , dp [ i ] [ j ] + 1 ) ]
    ret = INF
    for i in range ( 101 ) :
        ret = min ( ret , dp [ 0 ] [ i ] )
    print ( ret if ret else 'NA' )


---> console_out:
 
DIDN'T MATCH!! :(
 87%|████████▋ | 1522/1746 [00:36<00:05, 42.30it/s]

-------------------------------------


---> lineNum: 1523
---> probID: projecteuler_p012_A
---> inputs:

---> outputs:
76576500

def p012 ( cls ) :
    return cls ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1524
---> probID: geeksforgeeks_1739_A
---> inputs:

---> outputs:
ΔX = 6


def test_GFG ( ) :
    a , b , c , d = symbols ( 'a b c d' , cls = Dummy )
    assert ( b * c - a * d ) / ( d - c ) == a * b * c - a * c * d


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1525
---> probID: geeksforgeeks_2005_A
---> inputs:

---> outputs:
3 71


def GFG ( n ) :
    isPrime = [ False ] * n
    for i in range ( 2 , n + 1 ) :
        isPrime [ i ] = True
    for p in range ( 2 , n * p + 1 ) :
        if isPrime [ p ] == True :
            for i in range ( p * p , n + p ) :
                isPrime [ i ] = False
    return isPrime


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1526
---> probID: geeksforgeeks_194_A
---> inputs:

---> outputs:
545


def GFG ( x , d1 , d2 ) :
    result , multiply = 0 , 1
    while x % 10 :
        remainder = x % 10
        if remainder == d1 :
            result = result + d2 * multiply
        else :
            result = result + remainder * multiply
        multiply *= 10
        x = x / 10
    return result , multiply


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1527
---> probID: geeksforgeeks_1140_A
---> inputs:

---> outputs:
\*******/
*\*****/*
**\***/**
***\*/***
****/****
***/*\***
**/***\**
*/*****\*
/*******\


def GFG ( i , j , n ) :
    if j >= n :
        return 0
    if i >= n :
        return 1
    if j == i or j == n - 1 - i :
        if i == n - 1 - j :
            print ( "/" )
        else :
            print ( "\\" )
    else :
        print ( "*" )
    if printPattern ( i , j + 1 , n ) == 1 :
        return 1
    print ( )
    return printPattern ( i + 1 , 0 , n )


---> console_out:
 
MATCHED!! :D
 87%|████████▋ | 1527/1746 [00:36<00:05, 42.70it/s]

-------------------------------------


---> lineNum: 1528
---> probID: geeksforgeeks_4201_A
---> inputs:

---> outputs:
Count of pairs is 3


def pythontag_in_list ( n , sum ) :
    """
 Return the number of pairs in the list of integers n and sum.
 """
    arr = [ 1 , 5 , 7 , - 1 , 5 ]
    hm = { }
    for i in range ( n ) :
        if not hm . has_key ( arr [ i ] ) :
            hm [ arr [ i ] ] = 0
        hm [ arr [ i ] ] = hm [ arr [ i ] ] + 1
    twice_count = 0
    for i in range ( n ) :
        if hm . has_key ( sum - arr [ i ] ) :
            twice_count += hm [ sum - arr [ i ] ]
        if sum - arr [ i ] == arr [ i ] :
            twice_count -= 1
    return twice_count / 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1529
---> probID: geeksforgeeks_2910_A
---> inputs:

---> outputs:
5


def count_subarray ( arr , n ) :
    subarray_sum , remaining_sum , count = 0 , 0 , 0
    for i in range ( n ) :
        for j in range ( i , n ) :
            subarray_sum = 0
            remaining_sum = 0
            for k in range ( i , j ) :
                subarray_sum += arr [ k ]
            for l in range ( i ) :
                remaining_sum += arr [ l ]
            for l in range ( j + 1 , n ) :
                remaining_sum += arr [ l ]
            if subarray_sum > remaining_sum :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1530
---> probID: codeforces_1257_A
---> inputs:
3
5 1 3 2
100 33 100 1
6 0 2 3
---> outputs:
2
99
1

def main ( ) :
    import sys
    t = sys . argv [ 1 ]
    for i in range ( t ) :
        n , x = divmod ( t [ i ] , 2 )
        a , b = divmod ( t [ i + 1 ] , 2 )
        times = min ( a , b ) - 1 + n - max ( a , b )
        if times > x :
            print ( n - 1 - ( times - x ) )
        else :
            print ( n - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1531
---> probID: atcoder_ARC075_A
---> inputs:
6
1
2
3
4
5
6
---> outputs:
21


def main ( ) :
    import sys
    N = len ( sys . argv )
    sum = 0
    a = [ ]
    for i in range ( N ) :
        tmp = sys . argv [ i ]
        sum += tmp
        if tmp % 10 != 0 :
            a . append ( tmp )
    a . sort ( )
    i = 0
    while sum % 10 == 0 and i < len ( a ) :
        sum -= a [ i ]
        i += 1
    if sum % 10 == 0 :
        sum = 0
    print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576737738_2887/main.py", line 6
    G . add_nodes_from ( [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 38 , 39 , 40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 54 , 55 , 56 , 57 , 58 , 59 , 60 , 61 , 62 , 63 , 64 , 66 , 67 , 68 , 69 , 70 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 81 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 , 98 , 99 , 100 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 111 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 111 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , )

SyntaxError: closing parenthesis ')' does not match opening parenthesis '['


-------------------------------------


---> lineNum: 1532
---> probID: codeforces_1415_B
---> inputs:
3
10 2
1 1 2 2 1 1 2 2 2 1
7 1
1 2 3 4 5 6 7
10 3
1 3 3 3 3 1 2 1 3 3
---> outputs:
3
6
2

def test_repainting_street ( ) :
    """
SPACETOKENTestSPACETOKENtheSPACETOKENrepaintSPACETOKENofSPACETOKENaSPACETOKENstreet.
SPACETOKEN"""
    G = nx . DiGraph ( )
    G . add_nodes_from ( [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 38 , 39 , 40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 54 , 55 , 56 , 57 , 58 , 59 , 60 , 61 , 62 , 63 , 64 , 66 , 67 , 68 , 69 , 70 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 81 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 , 98 , 99 , 100 , 101 , 102 , 103 , 104 , 105 , 106 , 107 , 108 , 109 , 110 , 111 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 111 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , 112 , 115 , 101 , 102 , 103 , 104 , 105 , 106 , 108 , 109 , 110 , )

---> console_out:
 
DIDN'T MATCH!! :(
 88%|████████▊ | 1532/1746 [00:37<00:05, 42.39it/s]

-------------------------------------


---> lineNum: 1533
---> probID: geeksforgeeks_1980_A
---> inputs:

---> outputs:
One of the numbers repeated in the array is: 1


def find_repeating_number ( arr , n ) :
    sq = int ( math . sqrt ( n ) )
    range = ( n // sq ) + 1
    count = [ 0 ] * range
    for i in range :
        count [ ( arr [ i ] - 1 ) // sq ] += 1
    selected_block = range - 1
    for i in range - 1 :
        if count [ i ] > sq :
            selected_block = i
            break
    m = { }
    for i in range ( 0 , n ) :
        if ( ( selected_block * sq ) < arr [ i ] ) :
            m [ arr [ i ] ] = 1
            if m [ arr [ i ] ] == 1 :
                return arr [ i ]
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1534
---> probID: geeksforgeeks_520_A
---> inputs:

---> outputs:
5
328513


def test_GFG ( ) :
    n = 15.
    assert max_prime ( n ) == 15.
    assert max_prime ( n ) == 25698751364526.
    assert max_prime ( n ) == 25698751364526.
    assert max_prime ( n ) == 25698751364526.
    assert max_prime ( n ) == 25698751364526.
    assert max_prime ( n ) == 25698751364526.
    assert max_prime ( n ) == 25698751364526.
    assert max_prime ( n ) == 25698751364526.
    assert max_prime ( n ) == 25698751364526.


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1535
---> probID: codeforces_1691_A
---> inputs:
2
5
2 4 3 6 8
6
3 5 9 7 1 3
---> outputs:
1
0

def pythons ( a ) :
    """
 Return a list of the beats of the given number.
 """
    return [ a [ i ] for i in range ( 0 , len ( a ) , 2 ) ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1536
---> probID: atcoder_ABC120_C
---> inputs:
0
---> outputs:
0

def main ( ) :
    import sys
    s1 = sys . stdin . read ( ) . split ( '\n' )
    ans = 0
    c1 = 0
    c0 = 0
    for line in s1 :
        if line == '1' :
            if c0 > 0 :
                c0 -= 1
                ans += 1
            else :
                c1 += 1
        else :
            if c1 > 0 :
                c1 -= 1
                ans += 1
            else :
                c0 += 1
    print ( ans * 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1537
---> probID: geeksforgeeks_5215_A
---> inputs:

---> outputs:
3, 4, 5


def GFG ( arg ) :
    for i in range ( 1 , n // 3 ) :
        for j in range ( i + 1 , n // 2 ) :
            k = n - i - j
            if i * i + j * j == k * k :
                print ( i , j , k )
                return
    print ( 'No Triplet' )


---> console_out:
 
DIDN'T MATCH!! :(
 88%|████████▊ | 1537/1746 [00:37<00:04, 42.47it/s]

-------------------------------------


---> lineNum: 1538
---> probID: geeksforgeeks_2224_A
---> inputs:

---> outputs:
3


def GFG ( a , b ) :
    if a == 0 or b == 0 :
        return 1
    return int ( math . floor ( math . log10 ( abs ( a ) ) + math . log10 ( abs ( b ) ) ) + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1539
---> probID: geeksforgeeks_5039_A
---> inputs:

---> outputs:
Index =  2


def get_freq_of_first_one ( arr ) :
    """
 Find the frequency of the first one.

 Parameters
 -----
 arr : array_like
 The array of frequencies.
 low : int
 The lowest index of the first one.
 high : int
 The highest index of the first one.

 Returns
 -----
 freq : int
 The frequency of the first one.

 Notes
 -----
 For more details on the formula in ``F(arr)``.

 """
    l , h = 0 , 1
    while arr [ h ] == 0 :
        l , h = h , 2 * h
    return l , h


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1540
---> probID: codeforces_669_A
---> inputs:
1
---> outputs:
1

def main ( ) :
    import sys
    import getopt
    global n
    global sum , total , i
    if n == 2 :
        print ( 1 )
        return
    while n > 0 :
        n -= 1
        if n > 0 :
            if n >= 2 :
                total += 1
            n -= 2
        total += 1
    print ( total )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1541
---> probID: aizu_p00220_A
---> inputs:
23.5
158.1
-1.0
---> outputs:
00010111.1000
NA

def main ( ) :
    num = 0
    f = sys . stdin
    d = None
    while True :
        num = f . readline ( )
        if num < 0 :
            break
        d = Doctor ( num )
        if d . judge ( ) :
            print ( d . getBD ( ) )
        else :
            print ( 'NA' )
    class Doctor :
        num = 0
        bd = ''
        integers = 0
        decimals = 0
        def judge ( self ) :
            if self . integers > 255 or self . decimals > 0.9375 :
                return False
            return True
        def to_binary_digits ( self ) :
            tmp = ''
            count = 1
            for i in self . integers :
                tmp += i % 2
            s = ''
            for i in range ( 8 - len ( tmp ) ) :
                bd += '0'
            bd += s . reverse ( ) . rstrip ( '.' ) + '.'
            while True :
                if self . decimals == 0 :
                    bd += '00'
                    break
                if count > 4 :
                    return False
                self . decimals *= 2
                if self . decimals >= 1 :
                    self . decimals -= 1
                    bd += '1'
                    if self . decimals == 0 :
                        for i in range ( 4 - self . count ) :
                            bd += '0'
                        break
                else :
                    self . bd += '0'
                count += 1
            return True
        def getBD ( self ) :
            if to_binary_digits ( self . bd ) :
                return self . bd
            return 'NA'
    return Doctor ( num )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1542
---> probID: geeksforgeeks_233_A
---> inputs:

---> outputs:
x =  35


def GFG ( n ) :
    sum , rem = 0 , 0
    while n :
        rem = n % 10
        sum += rem
        n /= 10
    return sum , rem


---> console_out:
 
DIDN'T MATCH!! :(
 88%|████████▊ | 1542/1746 [00:37<00:04, 41.48it/s]

-------------------------------------


---> lineNum: 1543
---> probID: atcoder_AGC024_B
---> inputs:
1
1
---> outputs:
0

def py ( ) :
    import sys
    import doctest
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np
    import numpy as np


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1544
---> probID: aizu_p00271_A
---> inputs:
30 19
39 20
19 18
25 20
22 21
23 10
10 -10
---> outputs:
11
19
1
5
1
13
20

def _main ( ) :
    import sys
    import getopt
    for args , opts , args in getopt . getopt ( sys . argv [ 1 : ] , 'hL:' ) :
        for o , a in opts :
            if o == '-h' :
                _help ( )
            elif o == '-l' :
                _lower ( )
            elif o == '-l' :
                _upper ( )
            elif o == '-l' :
                _lower ( )
    return _help ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1545
---> probID: geeksforgeeks_3731_A
---> inputs:

---> outputs:
No
Yes
Yes


def pyGFG ( arg ) :
    class GFG ( object ) :
        def __init__ ( self , A , q ) :
            self . A = A
            self . q = q
        def performQueries ( self , A , q ) :
            n = len ( A )
            pref_xor = [ 0 ] * ( n + 1 )
            for i in range ( 1 , n + 1 ) :
                pref_xor [ i ] = pref_xor [ i - 1 ] ^ A [ i - 1 ]
            for i in q :
                L , R = i
                if L > R :
                    temp = L
                    L , R = R , temp
                if L != R and pref_xor [ R ] == pref_xor [ L - 1 ] :
                    print ( "Yes" )
                else :
                    print ( "No" )
    def main ( arg ) :
        Arr = [ 1 , 1 , 2 , 2 , 1 ]
        q = [ [ 1 , 5 ] , [ 1 , 4 ] , [ 3 , 4 ] ]
        performQueries ( Arr , q )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1546
---> probID: codeforces_682_B
---> inputs:
5
1 3 3 3 6
---> outputs:
5

def main ( ) :
    import sys
    f = sys . stdin
    n = len ( sys . argv )
    list = [ ]
    for i in range ( n ) :
        list . append ( sys . argv [ i ] )
    list . sort ( )
    c = 1
    for i in range ( n ) :
        if list [ i ] >= c :
            c += 1
    f . write ( '%d\n' % c )
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1547
---> probID: codeforces_215_B
---> inputs:
3 1 2 3
1 2
3 3 2 1
1 2
---> outputs:
2.683281573000

def test_b215 ( ) :
    mp . dps = 15
    N = Symbol ( 'N' )
    R1 = Matrix ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] ] )
    M = Matrix ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] ] )
    P1 = Matrix ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] ] )
    P2 = Matrix ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] ] )
    A = Matrix ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] ] )
    B = Matrix ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] ] )
    max_R1 = 0
    for r1 in R1 :
        max_R1 = max ( max_R1 , r1 )
    max_P1 = 0
    for p1 in P1 :
        max_P1 = max ( max_P1 , p1 )
    min_P2 = Integer ( 1 )
    for p2 in P2 :
        min_P2 = min ( min_P2 , p2 )
    r2 = sqrt ( max_R1 ** 2 + max_P1 ** 2 / ( A * min_P2 + B * max_P1 ) )
    assert r2 == sqrt ( A * min_P2 + B * max_P1 )


---> console_out:
 
DIDN'T MATCH!! :(
 89%|████████▊ | 1547/1746 [00:37<00:04, 41.29it/s]

-------------------------------------


---> lineNum: 1548
---> probID: geeksforgeeks_4317_A
---> inputs:

---> outputs:
 1*2*3*10*11*12
  4*5*8*9
   6*7
    


def helloWorld ( num ) :
    firsthalf = 1
    secondhalf = ( num * num ) + 1
    numOfSpaces = 0
    for numOfLines in range ( num , 1 , - 1 ) :
        for numOfSpacesCounter in range ( numOfSpaces , 1 , - 1 ) :
            print ( " " )
        for firstHalfCounter in range ( 1 , numOfLines ) :
            if firstHalfCounter == numOfLines :
                print ( ( firsthalf ) , end = ' ' )
            else :
                print ( ( firsthalf ) , end = '*' )
        for secondHalfCounter in range ( 1 , numOfLines ) :
            print ( "*" , end = ' ' )
        print ( )
        numOfSpaces += 2
        secondhalf = ( secondhalf - 1 ) - ( ( numOfLines - 1 ) * 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1549
---> probID: geeksforgeeks_4964_A
---> inputs:

---> outputs:
2 4 1 3 


def test_GFG ( n , differences ) :
    ans = [ 0 ]
    ans . append ( 0 )
    x = 0
    for i in range ( 0 , n - 2 ) :
        diff = differences [ i ]
        x = x + diff
        ans . append ( x )
    anss = [ ]
    for obj in ans :
        anss . append ( obj )
    ans . sort ( )
    flag = - 1
    for i in range ( 1 , n - 1 ) :
        res = ans [ i ] - ans [ i - 1 ]
        if res != 1 :
            flag = 0
    if flag == 0 :
        print ( - 1 )
        return ans
    else :
        mpp = { }
        j = 1
        value_at_index = [ ]
        for x1 in ans :
            mpp [ x1 ] = j
            j += 1
        for x2 in anss :
            value_at_index . append ( mpp [ x2 ] )
        for x3 in value_at_index :
            print ( x3 , end = ' ' )
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1550
---> probID: geeksforgeeks_2161_A
---> inputs:

---> outputs:
First 10 2-almost prime numbers:
4 6 9 10 14 15 21 22 25 26 

def get_GFG ( n ) :
    count = 0
    while n % 2 == 0 :
        n = n // 2
        count += 1
    for i in range ( 3 , math . sqrt ( n ) , 2 ) :
        while n % i == 0 :
            n = n // i
            count += 1
    if n > 2 :
        count += 1
    return ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1551
---> probID: geeksforgeeks_589_A
---> inputs:

---> outputs:
603


def GFG ( N , K ) :
    combo = [ ]
    combo . append ( 1 )
    for i in range ( 1 , K ) :
        for j in range ( 0 , N ) :
            if j >= i :
                combo [ j ] += combo [ j - i ]
    return combo [ N ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1552
---> probID: aizu_p00233_A
---> inputs:
9
10
-10
-1944
-305432133
0
---> outputs:
9
190
10
2156
1715573947

def py ( ) :
    return py . path . local ( __file__ )


---> console_out:
 
DIDN'T MATCH!! :(
 89%|████████▉ | 1552/1746 [00:37<00:04, 41.61it/s]

-------------------------------------


---> lineNum: 1553
---> probID: geeksforgeeks_3656_A
---> inputs:

---> outputs:
2.5724787771376323


def GFG ( m , n ) :
    N = float ( ( abs ( m ) * abs ( n ) ) / math . sqrt ( ( abs ( m ) * abs ( m ) ) + ( abs ( n ) * abs ( n ) ) ) )
    return N


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1554
---> probID: codeforces_794_B
---> inputs:
3 2
---> outputs:
1.154700538379 1.632993161855

def test_assignment4 ( ) :
    f = open ( '/tmp/assignment.txt' , 'r' )
    lines = f . readlines ( )
    num = [ line . split ( ) for line in lines ]
    n = float ( num [ 0 ] )
    h = float ( num [ 1 ] )
    for i in range ( 1.0 , n ) :
        ans = h * math . sqrt ( i / n )
        print ( ans , end = '' )
        if i == n - 1 :
            print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1555
---> probID: geeksforgeeks_4736_A
---> inputs:

---> outputs:
7


def GFG ( n ) :
    count = 0
    while n != 0 :
        count += 1
        n >>= 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1556
---> probID: aizu_p02037_A
---> inputs:
5 8
2 2
---> outputs:
8

def main ( ) :
    import sys
    h , w = sys . argv [ 1 : ]
    a , b = sys . argv [ 2 : ]
    print ( h * w - ( h / a * a ) * ( w / b * b ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1557
---> probID: aizu_p00366_A
---> inputs:
3
3
6
8
---> outputs:
3

def main ( ) :
    import sys
    n , max , ans = sys . argv [ 1 : ]
    l = [ ]
    t = [ ]
    for i in range ( n ) :
        t . append ( i )
        max = max ( max , t )
    for i in range ( 1 , max + 1 ) :
        if max % i == 0 :
            l . append ( i )
    for i in range ( n ) :
        for j in range ( len ( l ) ) :
            if l [ j ] >= t :
                ans += l [ j ] - t [ i ]
                break
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 89%|████████▉ | 1557/1746 [00:37<00:04, 41.95it/s]

-------------------------------------


---> lineNum: 1558
---> probID: geeksforgeeks_2117_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    arr2 = [ ]
    for i in range ( n ) :
        arr2 . append ( i % k )
    current_length , max_length = 0 , 0
    j = 0
    for i in range ( n ) :
        current_length = 1
        for j in range ( i + 1 , n ) :
            if arr2 [ j ] == arr2 [ i ] :
                current_length += 1
            else :
                break
        max_length = max ( max_length , current_length )
        i = j
    return max_length


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576738388_9258/main.py", line 4
    n , m , l , ans = 0l , 0l , 0l , 0l , 0l , 0l
                       ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1559
---> probID: codeforces_570_B
---> inputs:
3 1
---> outputs:
2

def main ( ) :
    fs = FastScanner ( )
    T = 1 , 2 , 3
    n , m , l , ans = 0l , 0l , 0l , 0l , 0l , 0l
    for tt in range ( T ) :
        n , m = fs . next ( )
        if n == 1 :
            print ( 1 )
            return
        if n - m > m - 1 :
            print ( m + 1 )
        else :
            print ( m - 1 )
    def random ( ) :
        n , m = len ( a )
        for i in range ( n ) :
            oi , temp = a [ oi ] , a [ i ]
            a [ oi ] , a [ i ] = temp
        a . sort ( )
    class FastScanner :
        f = open ( '/proc/self/fd' , 'r' )
        tokens = [ ]
        next = ''
        def readline ( self ) :
            while not tokens :
                try :
                    tokens . append ( next )
                except StopIteration :
                    tokens . append ( next )
                return tokens
            next = ''
        def read ( self ) :
            a = [ ]
            for token in tokens :
                a . append ( int ( token ) )
            return a
        def rufflesort ( self , n ) :
            a = [ ]
            for token in tokens :
                a . append ( int ( token ) )
            return a
        def nextLong ( self ) :
            return long ( next ( ) )
    return FastScanner ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1560
---> probID: geeksforgeeks_5149_A
---> inputs:

---> outputs:
YES


def GFG ( s , n ) :
    hash = [ 0 ] * 26
    for i in range ( n ) :
        if s [ i ] != ' ' :
            if hash [ s [ i ] - 'a' ] == 0 :
                hash [ s [ i ] - 'a' ] = 1
            else :
                return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1561
---> probID: projecteuler_p024_A
---> inputs:

---> outputs:
2783915460

def p024 ( ) :
    print ( [ ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1562
---> probID: geeksforgeeks_3674_A
---> inputs:

---> outputs:
Yes


def GFG ( x1 , y1 , x2 , y2 , x , y ) :
    if x > x1 and x < x2 and y > y1 and y < y2 :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 89%|████████▉ | 1562/1746 [00:37<00:04, 42.13it/s]

-------------------------------------


---> lineNum: 1563
---> probID: geeksforgeeks_3676_A
---> inputs:

---> outputs:
1


def test_GFG ( ) :
    MX = 2001
    OFF = 1000
    class point ( object ) :
        x , y = symbols ( 'x,y' )
    def count_points ( n , points ) :
        minx = [ int ( x ) for x in points ]
        miny = [ int ( y ) for y in points ]
        maxx = [ int ( x ) for x in points ]
        maxy = [ int ( y ) for y in points ]
        x , y = symbols ( 'x,y' )
        minx [ y ] += OFF
        maxx [ y ] = OFF
        miny [ x ] = min ( minx [ y ] , x )
        maxy [ x ] = max ( maxx [ y ] , x )
    count = 0
    for i in range ( n ) :
        x , y = points [ i ]
        if x > minx [ y ] and x < maxx [ y ] :
            if y > miny [ x ] and y < maxy [ x ] :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1564
---> probID: atcoder_ABC083_C
---> inputs:
3 20
---> outputs:
3

def main ( ) :
    import sys
    main = sys . argv [ 1 : ]
    X = sys . stdin . readline ( ) . rstrip ( )
    Y = sys . stdin . readline ( ) . rstrip ( )
    Z = Y / X
    answer = f ( Z ) + 1
    print ( answer )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1565
---> probID: geeksforgeeks_1298_A
---> inputs:

---> outputs:
11


def test_GFG ( ) :
    sticks = [ 6 , 2 , 5 , 5 , 4 , 5 , 6 , 3 , 7 , 6 ]
    cnt = 0
    for i in range ( n ) :
        cnt += ( sticks [ str ( i ) - '0' ] )
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1566
---> probID: codeforces_1635_B
---> inputs:
5
3
2 1 2
4
1 2 3 1
5
1 2 1 2 1
9
1 2 1 3 2 3 1 2 1
9
2 1 3 1 3 1 3 1 3
---> outputs:
['0\n2 1 2\n1\n1 3 3 1\n1\n1 2 2 2 1\n2\n1 2 3 3 2 3 3 2 1\n2\n2 1 3 3 3 1 1 1 3', '0\n2 1 2 \n1\n1 2 3 3 \n1\n1 2 2 2 1 \n2\n1 2 3 3 2 3 3 2 1 \n2\n2 1 3 3 3 1 3 3 3 \n']

def main ( ) :
    f = open ( '/proc/cpuinfo' , 'r' )
    out = open ( '/proc/cpuinfo' , 'w' )
    t = int ( f . readline ( ) )
    while t :
        n = int ( f . readline ( ) )
        a = [ ]
        st = f . readline ( ) . split ( )
        for i in st :
            a . append ( int ( i ) )
        replace_next = False
        ans = 0
        for i in range ( 1 , n - 1 ) :
            if replace_next :
                a [ i ] = max ( a [ i - 1 ] , a [ i + 1 ] )
                ans += 1
                replace_next = False
            if a [ i ] > a [ i - 1 ] and a [ i ] > a [ i + 1 ] :
                replace_next = True
        if replace_next :
            a [ n - 1 ] = a [ n - 2 ]
            ans += 1
            replace_next = False
        out . write ( ans )
        for i in range ( n ) :
            out . write ( a [ i ] + ' ' )
        out . write ( '\n' )
    f . close ( )
    out . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1567
---> probID: geeksforgeeks_4993_A
---> inputs:

---> outputs:
1 0 1 1 1 

def GFG ( arr , a , b ) :
    arr [ a ] ^= True
    arr [ b + 1 ] ^= True
    process ( arr , n )
    for k in range ( 1 , n + 1 ) :
        arr [ k ] ^= arr [ k - 1 ]
    result ( arr , n )
    for k in range ( 1 , n + 1 ) :
        if arr [ k ] == True :
            print ( '1' , end = '' )
        else :
            print ( '0' , end = '' )


---> console_out:
 
DIDN'T MATCH!! :(
 90%|████████▉ | 1567/1746 [00:37<00:04, 42.02it/s]

-------------------------------------


---> lineNum: 1568
---> probID: geeksforgeeks_2979_A
---> inputs:

---> outputs:
1


def most_frequent ( arr , n ) :
    arr = np . array ( arr )
    max_count , res = 1 , arr [ 0 ]
    curr_count = 1
    for i in range ( 1 , n ) :
        if arr [ i ] == arr [ i - 1 ] :
            curr_count += 1
        else :
            if curr_count > max_count :
                max_count = curr_count
                res = arr [ i - 1 ]
            curr_count = 1
    if curr_count > max_count :
        max_count = curr_count
        res = arr [ n - 1 ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1569
---> probID: geeksforgeeks_69_A
---> inputs:

---> outputs:
12


def GFG ( ) :
    MAX = 26
    res = 0
    last_pos = [ - 1 ]
    for i in range ( MAX ) :
        last_pos [ i ] = - 1
    for i in range ( len ( str ( 'geeksforgeeks' ) ) ) :
        C = str ( i ) - 'a'
        if last_pos [ C ] != - 1 :
            res = max ( len ( str ( i ) ) - ( i - last_pos [ C ] - 1 ) - 1 , res )
        last_pos [ C ] = i
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1570
---> probID: geeksforgeeks_5070_A
---> inputs:

---> outputs:
2


def GFG ( arr , n , k ) :
    MAX = 1000000
    ksmallest = [ 1 ] * MAX
    for i in range ( n ) :
        b = [ 1 ] * MAX
        for j in range ( 1 , MAX ) :
            if b [ j ] != 1 :
                k -= 1
            if k != 1 :
                return j , k
    return int ( '-1' ) , None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1571
---> probID: geeksforgeeks_13_A
---> inputs:

---> outputs:
Yes


def GFG ( n ) :
    d = 0
    while ( n / 100 ) > 0 :
        d = n % 10
        n /= 10
        n = abs ( n + ( d * 13 ) )
    return ( n % 43 == 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1572
---> probID: geeksforgeeks_15_A
---> inputs:

---> outputs:
Yes


def test_GFG ( ) :
    d = 0
    while ( n / 100 ) > 0 :
        d = n % 10
        n /= 10
        n = abs ( n - ( d * 14 ) )
    return ( n % 47 == 0 )


---> console_out:
 
DIDN'T MATCH!! :(
 90%|█████████ | 1572/1746 [00:38<00:04, 42.26it/s]

-------------------------------------


---> lineNum: 1573
---> probID: geeksforgeeks_16_A
---> inputs:

---> outputs:
Yes


def test_GFG ( ) :
    d = 0
    while ( n / 100 ) > 0 :
        d = n % 10
        n //= 10
        n = abs ( n - ( d * 3 ) )
    assert ( n % 31 == 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1574
---> probID: geeksforgeeks_18_A
---> inputs:

---> outputs:
Yes


def test_GFG ( ) :
    d = 0
    while ( n / 100 ) <= 0 :
        d = n % 10
        n //= 10
        n = abs ( n - ( d * 7 ) )
    assert ( n % 71 == 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1575
---> probID: geeksforgeeks_1127_A
---> inputs:

---> outputs:
-3


def test_GFG ( ) :
    from sympy . polys . distributedmodules import gf_degree
    from sympy . polys . domains import ZZ
    from sympy . polys . orderings import lex
    from sympy . polys . domains import QQ
    from sympy . polys . distributedmodules import DMP
    Odd_sum , Even_Sum = gf_degree ( [ 1 , 2 , 3 ] , ZZ ) , ZZ
    Odd_sum , Even_Sum = ZZ . map ( [ 1 , 2 , 3 ] ) , ZZ . map ( [ 1 , 2 , 3 ] )
    for i in range ( 5 ) :
        L , R = 1 , 5
        assert gf_degree ( [ L , R ] ) == L
        assert gf_degree ( [ L , R ] ) == R


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576738790_1139/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1576
---> probID: geeksforgeeks_4618_A
---> inputs:

---> outputs:
No


def import ( ) :
    import sys
    class Ratio ( object ) :
        def __init__ ( self , low_cost , up_cost , low_quant , up_quant , r ) :
            for i in range ( low_quant , up_quant + 1 ) :
                ans = i * r
                if low_cost <= ans <= up_cost :
                    return True
            return False
    low_cost , up_cost , low_quant , up_quant , r = 14 , 30 , 5 , 12 , 9
    if is_ratio_possible ( low_cost , up_cost , low_quant , up_quant , r ) :
        sys . stdout . write ( "Yes\n" )
    else :
        sys . stdout . write ( "No\n" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1577
---> probID: geeksforgeeks_1328_A
---> inputs:

---> outputs:
No
Yes


def GFG ( n ) :
    if n == 0 : return False
    return int ( math . ceil ( ( math . log ( n , 2 ) / math . log ( 2 ) ) ) ) == int ( math . floor ( ( ( math . log ( n , 2 ) / math . log ( 2 ) ) ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 90%|█████████ | 1577/1746 [00:38<00:03, 42.27it/s]

-------------------------------------


---> lineNum: 1578
---> probID: projecteuler_p087_A
---> inputs:

---> outputs:
1097343

def p087 ( ) :
    print ( [ 'p087.py' , 'p087_test.py' , 'p087_test.c' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , 'p087_test.h' , ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1579
---> probID: geeksforgeeks_1554_A
---> inputs:

---> outputs:
Longest length subsequence = 6


def get_long_len_sub ( arr , n ) :
    um = { }
    long_len = 0
    for i in range ( n ) :
        len = 0
        if um . has_key ( arr [ i ] - 1 ) and len < um [ arr [ i ] - 1 ] :
            len = um [ arr [ i ] - 1 ]
        if um . has_key ( arr [ i ] + 1 ) and len < um [ arr [ i ] + 1 ] :
            len = um [ arr [ i ] + 1 ]
        um [ arr [ i ] ] = len + 1
        if long_len < um [ arr [ i ] ] :
            long_len = um [ arr [ i ] ]
    return long_len


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1580
---> probID: codeforces_1351_A
---> inputs:
4
1 5
314 15
-99 99
123 987
---> outputs:
6
329
0
1110

def test_problem_1 ( ) :
    s = symbols ( 's' , integer = True , positive = True )
    t = symbols ( 't' , integer = True , positive = True )
    while t . is_positive :
        a , b = symbols ( 'a b' , integer = True , positive = True )
        assert a + b == s ( a , b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1581
---> probID: geeksforgeeks_3002_A
---> inputs:

---> outputs:
Sum of all elements: 1023


def test_GFG ( ) :
    n = Symbol ( 'n' , integer = True )
    assert ( 1 << n ) . nseries ( n , 0 , 5 ) == 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576738931_3491/main.py", line 20
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) ==
                                            ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1582
---> probID: geeksforgeeks_3001_A
---> inputs:

---> outputs:
Sum of all elements: 1023


def test_GFG ( ) :
    n = 10
    assert gf_degree ( [ ] , n ) == 0
    assert gf_degree ( [ 1 ] , n ) == 1
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 3
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) == 4
    assert gf_degree ( [ 1 , 2 , 3 , 4 ] ) ==

---> console_out:
 
DIDN'T MATCH!! :(
 91%|█████████ | 1582/1746 [00:38<00:03, 42.14it/s]

-------------------------------------


---> lineNum: 1583
---> probID: geeksforgeeks_4905_A
---> inputs:

---> outputs:
Maximum difference is 98


def GFG ( arr , n ) :
    diff = arr [ 1 ] - arr [ 0 ]
    curr_sum = diff
    max_sum = curr_sum
    for i in range ( 1 , n - 1 ) :
        diff = arr [ i + 1 ] - arr [ i ]
        if curr_sum > 0 :
            curr_sum += diff
        else :
            curr_sum = diff
        if curr_sum > max_sum :
            max_sum = curr_sum
    return max_sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1584
---> probID: aizu_p00667_A
---> inputs:
1
11
111111
111111111111
12345
11111111119999999999
11111111113333333333
11111111118888888888
11111111112222222222111111111
11111111110000000000444444444
11224111122411
888888888888999999999999888888888888999999999999999999
666666666666666777333333333338888888888
1111114444441111111444499999931111111222222222222888111111115555
#
---> outputs:
1
2
32
1856
1
230400
230400
156480
56217600
38181120
128
26681431
61684293
40046720

def main ( ) :
    import sys
    import string
    import struct
    import time
    import random
    import math
    import hashlib
    import random
    import time
    import random
    import string
    import struct
    import time
    import random
    import hashlib
    from random import random
    import time
    from time import time
    from random import random
    from hashlib import md5
    from hashlib import sha256
    from struct import pack
    from struct import calcsize
    from hashlib import sha1
    from hashlib import sha256
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from random import random
    from time import time
    from random import random
    from hashlib import md5
    from hashlib import sha256
    from hashlib import sha256
    from struct import calcsize
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from hashlib import md5 , sha256 , sha1 , sha256 , sha1
    from hashlib import md5 , sha256 , sha1 , sha1
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import unpack
    from hashlib import md5 , sha256 , sha1 , sha1 , sha1
    from hashlib import md5 , sha256 , sha1 , sha1
    from struct import calcsize
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import unpack
    from hashlib import sha256 , md5 , sha256 , sha1 , sha1 , sha1
    from hashlib import sha256 , sha256 , sha1 , sha1 , sha1
    from hashlib import md5 , sha256 , sha1 , sha1 , sha1
    from struct import calcsize
    from struct import calcsize
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import unpack
    from struct import unpack
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import unpack
    from struct import unpack
    from struct import calcsize
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import unpack
    from struct import unpack
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import unpack
    from struct import calcsize
    from struct import calcsize


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1585
---> probID: geeksforgeeks_3592_A
---> inputs:

---> outputs:
3


def GFG ( n ) :
    num = ( ( n / 2 ) + 1 )
    max = n % num
    count = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , n + 1 ) :
            val = ( ( n % i ) % j ) % n
            if val == max :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1586
---> probID: codeforces_313_B
---> inputs:
......
4
3 4
2 3
1 6
2 6
---> outputs:
1
1
5
4

def test_er ( ) :
    f = py . io . TextIO ( encoding = 'utf-8' )
    s = f . getvalue ( )
    cum = [ ]
    cum . append ( 0 )
    for i in range ( len ( s ) ) :
        if s [ i ] == s [ i - 1 ] :
            cum . append ( cum [ - 1 ] + 1 )
        else :
            cum . append ( cum [ - 1 ] )
    s = f . getvalue ( )
    q = int ( s )
    while q != 0 :
        s = f . readline ( )
        l , r = int ( s ) , int ( s [ : - 1 ] ) - 1
        yield ( lambda : cum [ r ] - cum [ l - 1 ] ) , q , l , r


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1587
---> probID: aizu_p00426_A
---> inputs:
3 10
0
1 1
2 2 3
4 20
2 1 2
1 3
1 4
2 5
2 1 2
0
0
3 3
0
1 1
2 2 3
0 0
---> outputs:
9
3
0
-1

def _main ( ) :
    import sys
    import getopt
    while 1 :
        n , m = getopt . getopt ( sys . argv [ 1 : ] , 'n:m' )
        if ( n | m ) == 0 :
            break
        pow3 = [ 1 ] * ( n + 1 )
        for i in range ( 1 , n + 1 ) :
            pow3 [ i ] = pow3 [ i - 1 ] * 3
        c = [ ]
        for i in range ( 3 ) :
            a , b = getopt . getopt ( sys . argv [ 2 : ] , 'a:b:c' )
            for j in range ( a , b + 1 ) :
                k , c = getopt . getopt ( sys . argv [ 3 : ] , 'k:c' )
                c . append ( k )
        p = 0
        x = 0
        for i in range ( n - 1 , - 1 , - 1 ) :
            d = abs ( p - c [ i ] )
            x += pow3 [ i ] * d
            if d == 1 :
                p = 2 - p
        y = pow3 [ n ] - 1 - x
        if x > y :
            x = y
        sys . exit ( x > m )


---> console_out:
 
DIDN'T MATCH!! :(
 91%|█████████ | 1587/1746 [00:38<00:03, 41.54it/s]

-------------------------------------


---> lineNum: 1588
---> probID: geeksforgeeks_1352_A
---> inputs:

---> outputs:
1 2 9 and 3 4 5 
1 2 4 5 and 3 9 
3 9 and 1 2 4 5 
3 4 5 and 1 2 9 


def test_GFG ( ) :
    MAX = 100000
    print ( "%d " % MAX )
    print ( "and " )
    for i in range ( a ) :
        print ( i , end = ' ' )
    print ( "and " )
    for i in range ( b ) :
        print ( i , end = ' ' )
    print ( )
    checksum ( g1 , a , g2 , b )
    i , x = 0 , 0
    for i , x in enumerate ( g1 ) :
        x += g1 [ i ]
    for i in range ( b ) :
        x -= g2 [ i ]
    return ( x , checksum ( g1 , a , g2 , b ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1589
---> probID: codeforces_189_A
---> inputs:
5 5 3 2
---> outputs:
2

def test_a ( ) :
    x = symbols ( 'x' )
    n = symbols ( 'n' , integer = True , positive = True )
    a = [ x , x ** 2 , x ** 3 ]
    a . sort ( )
    max = 0
    d = [ - 500 ] * n + [ 0 ] * n
    d [ 0 ] = 0
    for i in range ( 0 , n + 1 ) :
        for j in range ( 0 , 3 ) :
            if i - a [ j ] >= 0 and d [ i - a [ j ] ] != - 1 :
                d [ i ] = max ( d [ i ] , d [ i - a [ j ] ] + 1 )
        assert d [ n ] == max ( d [ i ] , d [ i - a [ j ] ] + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1590
---> probID: geeksforgeeks_993_A
---> inputs:

---> outputs:
4


def get_GFG ( vec , n ) :
    suffix = 0
    for i in range ( n - 1 , - 1 , - 1 ) :
        if vec [ i ] == 1 :
            suffix += 1
            vec [ i ] = suffix
    res = 0
    zero = 0
    for i in range ( n ) :
        if vec [ i ] == 0 :
            zero += 1
        if vec [ i ] > 0 :
            res = max ( res , zero + vec [ i ] )
    return max ( res , zero )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1591
---> probID: geeksforgeeks_587_A
---> inputs:

---> outputs:
4


def gen2poly ( maze ) :
    R = 4
    C = 4
    countPaths = [ ]
    for i in range ( R ) :
        if maze [ i ] [ 0 ] == - 1 :
            maze [ i ] [ 0 ] = 1
        else :
            break
    for i in range ( 1 , C ) :
        if maze [ 0 ] [ i ] == 0 :
            maze [ 0 ] [ i ] = 1
        else :
            break
    for i in range ( 1 , R ) :
        for j in range ( 1 , C ) :
            if maze [ i ] [ j ] == - 1 :
                continue
            if maze [ i - 1 ] [ j ] > 0 :
                maze [ i ] [ j ] = ( maze [ i ] [ j ] + maze [ i - 1 ] [ j ] )
            if maze [ i ] [ j - 1 ] > 0 :
                maze [ i ] [ j ] = ( maze [ i ] [ j ] + maze [ i ] [ j - 1 ] )
    return ( maze [ R - 1 ] [ C - 1 ] > 0 ) , maze [ R - 1 ] [ C - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1592
---> probID: geeksforgeeks_2139_A
---> inputs:

---> outputs:
Not a Prime Number


def test_GFG ( ) :
    is_prime = True
    arr = [ 7 , 11 , 13 , 17 , 19 , 23 , 29 , 31 ]
    if N < 2 :
        is_prime = False
    if N % 2 == 0 or N % 3 == 0 or N % 5 == 0 :
        is_prime = False
    for i in range ( 0 , math . sqrt ( N ) , 30 ) :
        for c in arr :
            if c > math . sqrt ( N ) :
                break
            else :
                if N % ( c + i ) == 0 :
                    is_prime = False
                    break
            if not is_prime :
                break
    if is_prime :
        assert 'Prime Number' in str ( is_prime )
    else :
        assert 'Not a Prime Number' in str ( is_prime )


---> console_out:
 
DIDN'T MATCH!! :(
 91%|█████████ | 1592/1746 [00:38<00:03, 41.10it/s]

-------------------------------------


---> lineNum: 1593
---> probID: atcoder_ABC108_B
---> inputs:
0 1 1 0
---> outputs:
2 1 1 2

def main ( ) :
    import sys
    x1 = sys . argv [ 1 ]
    y1 = sys . argv [ 2 ]
    x2 = sys . argv [ 3 ]
    y2 = sys . argv [ 4 ]
    x3 = x2 + ( y1 - y2 )
    y3 = y2 - ( x1 - x2 )
    x4 = x1 - ( y2 - y1 )
    y4 = y1 + ( x2 - x1 )
    sys . stdout . write ( x3 + " " + y3 + " " + x4 + " " + y4 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1594
---> probID: geeksforgeeks_3934_A
---> inputs:

---> outputs:
The length of the LPS is 5


def GFG ( seq , i , j ) :
    return ( x > y ) + ( x < y )
    lps = [ x for x in seq if x > y ]
    if i == j :
        return 1
    if seq [ i ] == seq [ j ] and i + 1 == j :
        return 2
    if seq [ i ] == seq [ j ] :
        return lps ( seq , i + 1 , j - 1 ) + 2
    return max ( lps ( seq , i , j - 1 ) , lps ( seq , i + 1 , j ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1595
---> probID: geeksforgeeks_3911_A
---> inputs:

---> outputs:
Length of the substring is 6


def GFG ( str , n ) :
    ans = 0
    for i in range ( 0 , n - 2 ) :
        l , r = i + 1 , i + 1
        lsum , rsum = 0 , 0
        while r < n and l >= 0 :
            lsum += str [ l ] - '0'
            rsum += str [ r ] - '0'
            if lsum == rsum :
                ans = max ( ans , r - l + 1 )
            l -= 1
            r += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1596
---> probID: geeksforgeeks_3192_A
---> inputs:

---> outputs:
D E F A B C 

def pygfG ( a , n , ind ) :
    for i in range ( ind , n + ind ) :
        print ( a [ ( i % n ) ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576739300_2622/main.py", line 4
    b . append ( b [ n + i ] = a [ i ] )
                 ^
SyntaxError: expression cannot contain assignment, perhaps you meant "=="?


-------------------------------------


---> lineNum: 1597
---> probID: geeksforgeeks_3191_A
---> inputs:

---> outputs:
D E F A B C 

def pygfG ( a , n , ind ) :
    b = [ ]
    for i in range ( n ) :
        b . append ( b [ n + i ] = a [ i ] )
    for i in range ( ind , n + ind ) :
        print ( b [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
 91%|█████████▏| 1597/1746 [00:38<00:03, 41.19it/s]

-------------------------------------


---> lineNum: 1598
---> probID: codeforces_962_B
---> inputs:
5 1 1
*...*
---> outputs:
2

def test_er42b ( ) :
    f = Function ( 'f' )
    n , a , b = symbols ( 'n a b' , integer = True , positive = True )
    s = f ( n )
    ans = a + b
    flip = a > b
    for i in range ( n ) :
        if a == 0 and b == 0 :
            break
        if s [ i ] == '*' :
            flip = a > b
        else :
            if flip == 1 :
                a = ( a , 0 )
            else :
                b = ( b , 0 )
            flip *= - 1
    assert ans - a - b == ans


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576739350_8079/main.py", line 5
    root = Node ( yield id , 0 , sys . argv [ 2 ] )
                  ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1599
---> probID: aizu_p01731_A
---> inputs:
1
0
icpc
---> outputs:
icpc

def main ( ) :
    import sys
    n = len ( sys . argv )
    id = sys . argv [ 1 ]
    root = Node ( yield id , 0 , sys . argv [ 2 ] )
    for i in range ( 1 , n ) :
        target_id = sys . argv [ 2 ]
        parent = root . find_node ( target_id )
        parent . children . append ( Node ( yield id , parent . depth + 1 , sys . argv [ 3 ] ) )
    root . print_contents ( )
    sys . exit ( )
class Node :
    id , depth
    contents = None
    children = [ ]
    def find_node ( self , i , d , c ) :
        if i == self . id :
            return self
        for child in self . children :
            target = child . find_node ( id )
            if target is not None :
                return target
        return None
    def print_contents ( self ) :
        for i in range ( depth ) :
            sys . stdout . write ( '.' )
        sys . stdout . write ( contents )
        for child in self . children :
            child . print_contents ( )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576739374_2348/main.py", line 32
    return dp [ currentTime ] [ currentSpeed ] = bestAns
                                               ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1600
---> probID: codeforces_534_B
---> inputs:
5 6
4 2
---> outputs:
26

def main2 ( ) :
    global v1 , v2 , t , d
    dp = [ ]
    for x in range ( 1200 ) :
        np . random . seed ( 0 )
        v1 = x
        v2 = x
        t = t
        d = d
        dp = np . zeros ( ( t , 1200 ) )
        for x in dp :
            np . random . seed ( 0 )
        ans = - 1
        if t == 2 :
            print ( v1 + v2 )
        else :
            print ( v1 + v2 + calculate ( 1 , v1 , v1 ) )
    def calculate ( currentTime , currentSpeed , prev ) :
        if currentSpeed < 0 :
            return - int ( 1e8 )
        if currentTime == t - 1 :
            if abs ( currentSpeed - v2 ) <= d :
                return 0
            return - int ( 1e8 )
        if dp [ currentTime ] [ currentSpeed ] != - 1 :
            return dp [ currentTime ] [ currentSpeed ]
        bestAns = - int ( 1e8 )
        for i in range ( 0 , d ) :
            ans = currentSpeed + i + calculate ( currentTime + 1 , currentSpeed + i , currentSpeed )
            ans2 = currentSpeed - i + calculate ( currentTime + 1 , currentSpeed - i , currentSpeed )
            bestAns = max ( bestAns , max ( ans , ans2 ) )
        return dp [ currentTime ] [ currentSpeed ] = bestAns
    return main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1601
---> probID: codeforces_777_B
---> inputs:
3
123
321
---> outputs:
0
2

def main ( ) :
    import sys
    n = len ( sys . argv )
    a , b = sys . argv [ 1 : ]
    a . sort ( )
    b . sort ( )
    j = n - 1
    for i in range ( n - 1 , - 1 , - 1 ) :
        if b [ j ] >= a [ i ] :
            j -= 1
    print ( j + 1 )
    j = 0
    for i in range ( n ) :
        if b [ i ] > a [ j ] :
            j += 1
    print ( j )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1602
---> probID: atcoder_ARC094_A
---> inputs:
10 34 21
---> outputs:
20


def main ( ) :
    import sys
    import getopt
    global num
    global dis1
    global dis2
    num = [ ]
    for i in range ( 3 ) :
        if i == 0 :
            num . append ( i )
        elif i == 1 :
            num . append ( i )
        elif i == 2 :
            num . append ( i )
        elif i == 3 :
            num . append ( i )
    num . sort ( )
    dis1 = num [ 2 ] - num [ 0 ]
    dis2 = num [ 2 ] - num [ 1 ]
    ans = 0
    if dis1 % 2 == 0 and dis2 % 2 == 0 :
        ans = dis1 / 2 + dis2 / 2
    elif dis1 % 2 != 0 and dis2 % 2 != 0 :
        ans = dis1 / 2 + dis2 / 2 + 1
    else :
        ans = dis1 / 2 + dis2 / 2 + 2
    sys . stdout . write ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 92%|█████████▏| 1602/1746 [00:38<00:03, 41.48it/s]

-------------------------------------


---> lineNum: 1603
---> probID: codeforces_1734_B
---> inputs:
3
1
2
3
---> outputs:
1 
1 
1 1 
1 
1 1 
1 0 1

def main ( ) :
    import sys
    T = sys . argv [ 1 ]
    while T :
        n = sys . argv [ 2 ]
        for i in range ( 1 , n + 1 ) :
            for j in range ( 1 , i + 1 ) :
                if j == 1 or i == j :
                    sys . stdout . write ( 1 + " " )
                else :
                    sys . stdout . write ( 0 + " " )
            sys . stdout . write ( "\n" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1604
---> probID: geeksforgeeks_2442_A
---> inputs:

---> outputs:
10000011
11

def GFG ( n ) :
    if n > 1 :
        bin ( n >> 1 )
    print ( n & 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1605
---> probID: projecteuler_p001_A
---> inputs:

---> outputs:
233168

def p001 ( ) :
    print ( [ ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1606
---> probID: codeforces_1220_A
---> inputs:
4
ezor
---> outputs:
0

def main ( ) :
    import sys
    import getopt
    global n
    global str
    global s
    global s1
    n = len ( sys . argv )
    str = sys . argv [ 1 ]
    s = ""
    s1 = ""
    for c in str :
        if c == 'n' : s += "1 "
        if c == 'z' : s1 += "0 "
    sys . stdout . write ( s + s1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1607
---> probID: atcoder_ABC076_A
---> inputs:
2002
2017
---> outputs:
2032

def main ( ) :
    import sys
    R , G = map ( int , sys . argv [ 1 : ] )
    print ( ( 2 * G ) - R )
    sys . exit ( )


---> console_out:
 
DIDN'T MATCH!! :(
 92%|█████████▏| 1607/1746 [00:38<00:03, 41.86it/s]

-------------------------------------


---> lineNum: 1608
---> probID: geeksforgeeks_193_A
---> inputs:

---> outputs:
6


def test_GFG ( ) :
    R = QQ . old_poly_ring ( x , y )
    Result = 1
    while n > 0 :
        Result = Result * n
        n -= 1
    assert Result == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1609
---> probID: geeksforgeeks_4321_A
---> inputs:

---> outputs:
9408
512


def test_GFG ( ) :
    """Test the product of the Diagonals of the polynomials."""
    product = 1
    for i in range ( n ) :
        product = product * arr [ i ] [ i ]
        product = product * arr [ i ] [ n - i - 1 ]
    if n % 2 == 1 :
        product = product / arr [ n / 2 ] [ n / 2 ]
    return product


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1610
---> probID: aizu_p00219_A
---> inputs:
15
2
6
7
0
1
9
8
7
3
8
9
4
8
2
2
3
9
1
5
0
---> outputs:
*
*
***
*
*
-
*
**
***
**
-
*
-
-
-
*
-
-
-
*

def main ( ) :
    import sys
    import getopt
    for line in sys . stdin :
        n = line . strip ( ) . split ( ' ' )
        if n == '' :
            break
        map = { }
        for i in range ( n ) :
            map [ line [ 0 ] ] += 1
        for i in range ( 10 ) :
            ans = '-'
            if map [ i ] != '' :
                ch = map [ i ] . split ( '*' )
                ans = '' . join ( ch )
            print ( ans )


---> console_out:
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1611
---> probID: geeksforgeeks_4166_A
---> inputs:

---> outputs:
Second most frequent char is g


def GFG ( ) :
    NO_OF_CHARS = 256
    count = [ ]
    i = 0
    for c in range ( len ( str ( ) ) ) :
        ( count [ c ] , count [ c ] ) = i , count [ c ] + 1
    first , second = 0 , 0
    for c in range ( NO_OF_CHARS ) :
        if count [ c ] > count [ first ] :
            second , first = first , c
        elif count [ c ] > count [ second ] and count [ c ] != count [ first ] :
            second , first = c , first
    return chr ( second ) , chr ( first ) , chr ( second )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1612
---> probID: aizu_p00096_A
---> inputs:
2
3
35
---> outputs:
10
20
8436

def main ( ) :
    import sys
    import numpy
    dp = [ 1 ] * 4001
    dp [ 0 ] [ 0 ] = 1
    for i in range ( 1 , 5 ) :
        for ii in range ( 0 , 1000 * i ) :
            for iii in range ( max ( 0 , ii - 1000 ) , ii + 1 ) :
                dp [ i ] [ ii ] += dp [ i - 1 ] [ iii ]
    while sys . stdin . read ( ) != '' :
        print ( dp [ 4 ] [ sys . stdin . read ( ) ] )


---> console_out:
 
DIDN'T MATCH!! :(
 92%|█████████▏| 1612/1746 [00:39<00:03, 40.96it/s]

-------------------------------------


---> lineNum: 1613
---> probID: geeksforgeeks_1627_A
---> inputs:

---> outputs:
Modified Array : 
[2, 4, 5, 6, 9, 8, 7, 3, 1]


def test_sort_example ( ) :
    """
 Test sorting of the elements of a list.
 """
    n = len ( arr )
    arr = np . array ( arr , dtype = 'int32' )
    arr = arr . reshape ( n // 2 , n , order = 'F' )
    arr = arr . sort ( )
    print ( 'Modified Array : %s' % str ( arr ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1614
---> probID: geeksforgeeks_2360_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    """Test the minflip algorithm."""
    arr1 = [ 1 , 0 , 1 , 1 , 1 , 1 , 1 ]
    arr2 = [ 0 , 1 , 1 , 1 , 1 , 0 , 0 ]
    arr3 = [ 1 , 1 , 1 , 1 , 0 , 0 , 1 ]
    n = len ( arr1 )
    p , q = 2 , 4
    assert minflip ( arr1 , arr2 , arr3 , p , q , n ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1615
---> probID: geeksforgeeks_5010_A
---> inputs:

---> outputs:
Sum is 2.283333


def test_GFG ( ) :
    i , s = symbols ( 'i s' , integer = True , positive = True )
    for i in range ( 1 , n + 1 ) :
        s = s + 1 / i
    assert simplify ( s ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1616
---> probID: geeksforgeeks_4866_A
---> inputs:

---> outputs:
1 2 3 6 8 9 7 5 4 0 

def test_GFG ( ) :
    """Test the bitonic generator."""
    evenArr = [ ]
    oddArr = [ ]
    for i in range ( n ) :
        if i % 2 != 1 :
            evenArr . append ( i )
        else :
            oddArr . append ( i )
    evenArr . sort ( )
    oddArr . sort ( )
    i = 0
    for j in evenArr :
        arr = [ i , j ]
    for j in oddArr :
        arr = [ i , j ]
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1617
---> probID: geeksforgeeks_542_A
---> inputs:

---> outputs:
8


def GFG ( arr , n ) :
    count = 0
    right , left = 0 , 0
    visited = [ False ] * n
    for i in range ( n ) :
        visited [ i ] = False
    while right < n :
        while right < n and not visited [ arr [ right ] ] :
            count += ( right - left )
            visited [ arr [ right ] ] = True
            right += 1
        while left < right and ( right != n and visited [ arr [ right ] ] ) :
            visited [ arr [ left ] ] = False
            left += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 93%|█████████▎| 1617/1746 [00:39<00:03, 41.51it/s]  File "./junk/1692576739807_5587/main.py", line 1
    def import ( root_data ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1618
---> probID: leetcode_572_A
---> inputs:

---> outputs:
true

def import ( root_data ) :
    class TreeNode ( object ) :
        def __init__ ( self , val , left , right ) :
            self . val = val
            self . left = None
            self . right = None
        def __repr__ ( self ) :
            return "%s %s %s" % ( self . val , self . left , self . right )
    class Solution ( object ) :
        trees = set ( )
        def is_subtree ( self , s , t ) :
            tree1 = preorder ( s , True )
            tree2 = preorder ( t , True )
            return tree1 . index ( tree2 ) >= 0
        def preorder ( self , t , left ) :
            if t is None :
                if left :
                    return "lnull"
                else :
                    return "rnull"
            return "#%d %s %s" % ( self . val , preorder ( t . left , True ) , preorder ( t . right , False ) )
        def main ( self ) :
            sObj = Solution ( )
            root = TreeNode ( 3 )
            root . left = TreeNode ( 4 )
            root . right = TreeNode ( 5 )
            root . left . left = TreeNode ( 1 )
            root . left . right = TreeNode ( 2 )
            subRoot = TreeNode ( 4 )
            subRoot . left = TreeNode ( 1 )
            subRoot . right = TreeNode ( 2 )
            out = sObj . is_subtree ( root , subRoot )
            print ( out )
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576739832_5088/main.py", line 12
    return dp [ idx ] [ diff ] = ans % MOD
                               ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1619
---> probID: geeksforgeeks_3925_A
---> inputs:

---> outputs:
3


def GFG ( idx , diff , N , M , K ) :
    M , N , M = 1001 , N , M , M
    dp = { }
    if idx > N :
        if diff == K :
            return 1
        return 0
    if dp [ idx ] [ diff ] != - 1 :
        return dp [ idx ] [ diff ]
    ans = solve ( idx + 1 , diff , N , M , K )
    ans += ( M - 1 ) * solve ( idx + 1 , diff + 1 , N , M , K )
    return dp [ idx ] [ diff ] = ans % MOD


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1620
---> probID: projecteuler_p222_A
---> inputs:

---> outputs:
1590933

def p222 ( ) :
    print ( p222 ( ) . run ( ) )
    sphereRadii = np . zeros ( 21 )
    for i in range ( sphereRadii . shape [ 0 ] ) :
        sphereRadii [ i ] = ( i + 30 ) * 1000
    minLength = np . zeros ( sphereRadii . shape [ 0 ] , dtype = np . int32 )
    min = np . inf
    for i in range ( sphereRadii . shape [ 0 ] ) :
        min = min ( find_minimum_length ( i , ( 1 << sphereRadii . shape [ 0 ] ) - 1 ) + sphereRadii [ i ] , min )
    return np . round ( min )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1621
---> probID: aizu_p00003_A
---> inputs:
3
4 3 5
4 3 6
8 8 8
---> outputs:
YES
NO
NO

def main ( ) :
    n = 0
    sides = [ ]
    judge = False
    line = ''
    tmp = ''
    with open ( './junk/1692576739879_3255/input.txt' , 'r' ) as f :
        line = f . readline ( )
        n = int ( line . split ( ) [ 0 ] )
        for i in range ( n ) :
            line = line . split ( )
            tmp = line . split ( )
            for j in range ( len ( sides ) ) :
                sides [ j ] = int ( tmp [ j ] )
                sides [ j ] *= sides [ j ]
            for j in range ( len ( sides ) ) :
                if sides [ j % 3 ] == sides [ ( j + 1 ) % 3 ] + sides [ ( j + 2 ) % 3 ] :
                    judge = True
                    break
                else :
                    judge = False
            Answer ( judge )
    Answer ( judge )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576739904_2643/main.py", line 27
    
                                          ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1622
---> probID: geeksforgeeks_1436_A
---> inputs:

---> outputs:
7


def test_gf_gf_sum ( ) :
    assert gf_gf_sum ( [ ] , 11 , ZZ ) == 0
    assert gf_gf_sum ( [ ] , 11 , ZZ ) == 0
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ ) == 1
    assert gf_gf_sum ( [ 1 ] , 11 , ZZ

---> console_out:
 
DIDN'T MATCH!! :(
 93%|█████████▎| 1622/1746 [00:39<00:02, 41.39it/s]

-------------------------------------


---> lineNum: 1623
---> probID: geeksforgeeks_4575_A
---> inputs:

---> outputs:
7


def get_total_xor_of_subarray_xors ( arr , N ) :
    res = 0
    for i in range ( N ) :
        freq = ( i + 1 ) * ( N - i )
        if freq % 2 == 1 :
            res = res ^ arr [ i ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1624
---> probID: codeforces_591_A
---> inputs:
100
50
50
---> outputs:
50

def main ( ) :
    import sys
    l , p , q = sys . argv [ 1 : ]
    print ( ( p * l ) / ( p + q ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1625
---> probID: codeforces_1300_B
---> inputs:
3
1
1 1
3
6 5 4 1 2 3
5
13 4 20 13 2 5 8 3 17 16
---> outputs:
0
1
5

def main ( ) :
    import sys
    t = sys . argv [ 1 ]
    while t :
        n = t . pop ( )
        arr = [ ]
        for i in range ( 2 * n ) :
            arr . append ( t [ i ] )
        arr . sort ( )
        print ( abs ( arr [ n ] - arr [ n - 1 ] ) )
        t = t . pop ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1626
---> probID: codeforces_131_B
---> inputs:
5
-3 3 0 0 3
---> outputs:
3

def test_S ( ) :
    x = symbols ( 'x' )
    n = symbols ( 'n' , integer = True , positive = True )
    cntp = [ ]
    cntn = [ ]
    cnt = 0
    for i in range ( n ) :
        a = symbols ( 'a' , integer = True , positive = True )
        if a == 0 :
            cnt += 1
        elif a > 0 :
            cntp . append ( a )
        elif a < 0 :
            cntn . append ( abs ( a ) )
    res = 0
    for i in range ( 1 , 11 ) :
        res = res + ( cntp [ i ] * cntn [ i ] )
    res = res + ( ( cnt * ( cnt - 1 ) ) / 2 )
    assert res == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1627
---> probID: codeforces_95_A
---> inputs:
3
bers
ucky
elu
PetrLoveLuckyNumbers
t
---> outputs:
PetrLovtTttttNumtttt

def pyf95a ( ) :
    import sys
    import getopt
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'cf95a' )
    except getopt . error as msg :
        print ( msg )
        return
    if len ( args ) != 2 :
        print ( "Usage: pyf95a <filename>" )
        return
    if args [ 0 ] == '-' :
        o = '-'
    else :
        o = '-'
    compare ( args [ 1 ] , args [ 0 ] )
    if o == '-' :
        o = '-'
    else :
        o = '-'
    n = len ( args )
    ss = [ ]
    for i in range ( n ) :
        ss . append ( args [ i ] )
    cc = ''
    m = len ( cc )
    c = args [ 0 ]
    c_ = ord ( c )
    a = c if c == 'a' else 'b'
    a_ = ord ( a )
    lucky = [ ]
    for j in range ( m ) :
        for i in range ( n ) :
            l = len ( ss [ i ] )
            if m - j >= l and compare ( cc , j , ss [ i ] , 0 , l ) == 0 :
                for h in range ( l ) :
                    lucky . append ( True )
        for j in range ( m ) :
            if lucky :
                if ord ( cc [ j ] ) == c :
                    cc [ j ] = ord ( cc [ j ] ) if c == 'a' else a_
                else :
                    cc [ j ] = ord ( cc [ j ] ) if c == 'c' else c_
        print ( cc )


---> console_out:
 
DIDN'T MATCH!! :(
 93%|█████████▎| 1627/1746 [00:39<00:02, 41.56it/s]

-------------------------------------


---> lineNum: 1628
---> probID: atcoder_ABC098_C
---> inputs:
5
WEEWW
---> outputs:
1

def main ( ) :
    import sys
    a = sys . argv [ 1 ]
    c = sys . argv [ 2 ]
    w = [ ]
    e = [ ]
    min = a
    for i in range ( 1 , a + 1 ) :
        if c [ i - 1 ] == 'W' :
            w . append ( i )
        else :
            e . append ( i )
        w . append ( w [ - 1 ] )
        e . append ( e [ - 1 ] )
    for i in range ( 1 , a + 1 ) :
        min = min ( min , w [ i - 1 ] + e [ a ] - e [ i ] )
    print ( min )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1629
---> probID: codeforces_1213_A
---> inputs:
3
1 2 3
---> outputs:
1

def test_cf1213_a ( ) :
    x = symbols ( 'x' )
    n = symbols ( 'n' , integer = True , positive = True )
    even = 0
    odd = 0
    for i in range ( n ) :
        num1 = x ** i
        if num1 % 2 == 0 :
            even += 1
        else :
            odd += 1
    if even > odd :
        assert odd == 0
    else :
        assert even == 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1630
---> probID: aizu_p00222_A
---> inputs:
13
14
15
16
17
18
19
20
10000
0
---> outputs:
13
13
13
13
13
13
19
19
9439

def main ( ) :
    import sys
    import getopt
    MAX = 10000000
    prime = [ True ] * ( MAX + 1 )
    for i in range ( 3 , MAX + 1 , 2 ) :
        prime [ i ] = True
    for i in range ( 3 , i * i <= MAX , 2 ) :
        if prime [ i ] :
            for j in range ( i * 3 , MAX , i * 2 ) :
                prime [ j ] = False
    n = sys . stdin . readline ( )
    while n != '' :
        if n % 2 == 0 :
            n -= 1
        for i in range ( n , 13 , 2 ) :
            if prime [ i ] and prime [ i - 2 ] and prime [ i - 6 ] and prime [ i - 8 ] :
                sys . stdout . write ( i )
                break
        n = sys . stdin . readline ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1631
---> probID: codeforces_705_B
---> inputs:
3
1 2 3
---> outputs:
2
1
1

def b_Spider_Man ( ) :
    class FastReader ( BufferedReader ) :
        def __init__ ( self , f ) :
            BufferedReader . __init__ ( self , f )
        def readline ( self ) :
            while not self . f or not self . f . endswith ( '\n' ) :
                try :
                    self . f . readline ( )
                except EOFError :
                    pass
            return self . f . readline ( )
        def nextInt ( self ) :
            return int ( next ( self . f ) )
        def nextLong ( self ) :
            return long ( next ( self . f ) )
        def nextDouble ( self ) :
            return float ( next ( self . f ) )
        def nextLine ( self ) :
            str = ""
            try :
                str = self . f . readline ( )
            except EOFError :
                pass
            return str
        def scan ( self ) :
            t = 1
            while t :
                self . solve ( )
        def solve ( self ) :
            t = self . nextInt ( )
            arr = [ ]
            for i in range ( len ( arr ) ) :
                arr . append ( self . nextInt ( ) )
            prev_winner = None
            for i in range ( len ( arr ) ) :
                if arr [ i ] == 1 :
                    if prev_winner == None :
                        prev_winner = 2
                if prev_winner == 2 or prev_winner == 0 :
                    if ( arr [ i ] - 1 ) % 2 == 0 :
                        print ( 2 )
                        prev_winner = 2
                    else :
                        print ( 1 )
                        prev_winner = 1
                else :
                    if ( arr [ i ] - 1 ) % 2 == 0 :
                        print ( 1 )
                        prev_winner = 1
                    else :
                        print ( 2 )
                        prev_winner = 2
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1632
---> probID: geeksforgeeks_4496_A
---> inputs:

---> outputs:
Yes


def test_GFG ( ) :
    assert ( ( n & n - 1 ) == 0 )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n - 1 )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_set ( n )
    assert only_first_and_last_are_

---> console_out:
 
DIDN'T MATCH!! :(
 93%|█████████▎| 1632/1746 [00:39<00:02, 41.17it/s]

-------------------------------------


---> lineNum: 1633
---> probID: geeksforgeeks_961_A
---> inputs:

---> outputs:
42


def get_minimum_cost_of_breaking ( X , Y , m , n ) :
    res = 0
    X = sorted ( X , key = lambda x : x [ 1 ] )
    Y = sorted ( Y , key = lambda x : x [ 1 ] )
    hzntl , vert = 1 , 1
    i , j = 0 , 0
    while i < m and j < n :
        if X [ i ] > Y [ j ] :
            res += X [ i ] * vert
            hzntl += 1
            i += 1
        else :
            res += Y [ j ] * hzntl
            vert += 1
            j += 1
    total = 0
    while i < m :
        total += X [ i ]
    res += total * vert
    total = 0
    while j < n :
        total += Y [ j ]
    res += total * hzntl
    return res


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576740196_8433/main.py", line 1
    def class GCD ( a , b ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1634
---> probID: geeksforgeeks_1335_A
---> inputs:

---> outputs:
Total possible pair with GCD  2 & LCM  12 =  4


def class GCD ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1635
---> probID: geeksforgeeks_2113_A
---> inputs:

---> outputs:
F(5) is 7


def gf_mul ( a , b , p , K ) :
    mul = [ ]
    for i in range ( 3 ) :
        for j in range ( 3 ) :
            mul . append ( 0 )
            for k in range ( 3 ) :
                mul [ i ] += a [ i ] [ k ] * b [ k ] [ j ]
    for i in range ( 3 ) :
        for j in range ( 3 ) :
            a [ i ] [ j ] = mul [ i ] [ j ]
    def power ( F , n ) :
        M = [ 1 , 1 , 1 ]
        if n == 1 :
            return F [ 0 ] [ 0 ] + F [ 0 ] [ 1 ]
        return power ( F , n // 2 )
    gf_mul ( a , b , p , K )
    if n % 2 != 0 :
        gf_mul ( a , M , p , K )
    return gf_mul ( a , M , p , K )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1636
---> probID: geeksforgeeks_5007_A
---> inputs:

---> outputs:
1 12 111


def test_GFG ( ) :
    if x > y :
        temp = x
        x , y = y , temp
    a = 1
    b = x - 1
    c = y - b
    assert a == b == c


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1637
---> probID: leetcode_665_A
---> inputs:

---> outputs:
true

def check_possibility ( nums ) :
    broken_point = 0
    for i in range ( len ( nums ) - 1 ) :
        if nums [ i ] > nums [ i + 1 ] :
            broken_point += 1
            if broken_point >= 2 :
                return False
            if i - 1 < 0 or nums [ i - 1 ] <= nums [ i + 1 ] :
                nums [ i ] , nums [ i + 1 ] = nums [ i + 1 ] , nums [ i ]
            else :
                nums [ i + 1 ] , nums [ i ] = nums [ i ] , nums [ i ]
    return True


---> console_out:
 
DIDN'T MATCH!! :(
 94%|█████████▍| 1637/1746 [00:39<00:02, 41.38it/s]

-------------------------------------


---> lineNum: 1638
---> probID: geeksforgeeks_3476_A
---> inputs:

---> outputs:
4


def GFG ( mid , array , n , K ) :
    count = 0
    sum = 0
    for i in range ( n ) :
        if array [ i ] > mid :
            return False
        sum += array [ i ]
        if sum > mid :
            count += 1
            sum = array [ i ]
    count += 1
    if count <= K :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1639
---> probID: aizu_p00881_A
---> inputs:
8 1
11010101
11 4
00111001100
01001101011
01010000011
01100110001
11 16
01000101111
01011000000
01011111001
01101101001
01110010111
01110100111
10000001010
10010001000
10010110100
10100010100
10101010110
10110100010
11001010011
11011001001
11111000111
11111011101
11 12
10000000000
01000000000
00100000000
00010000000
00001000000
00000100000
00000010000
00000001000
00000000100
00000000010
00000000001
00000000000
9 32
001000000
000100000
000010000
000001000
000000100
000000010
000000001
000000000
011000000
010100000
010010000
010001000
010000100
010000010
010000001
010000000
101000000
100100000
100010000
100001000
100000100
100000010
100000001
100000000
111000000
110100000
110010000
110001000
110000100
110000010
110000001
110000000
0 0
---> outputs:
0
2
4
11
9

def main ( ) :
    import sys
    global M
    global memo
    while True :
        M = input ( )
        N = input ( )
        if M == 0 :
            break
        data = [ int ( x , 2 ) for x in input ( ) . split ( ) ]
        memo . append ( - 1 )
        print ( rec ( 0 , data ) )
    def rec ( used , data ) :
        if len ( data ) <= 1 :
            return 0
        if memo [ used ] >= 0 :
            return memo [ used ]
        ret = 99
        for i in range ( M ) :
            if ( used & ( 3 << ( 2 * i ) ) ) :
                continue
            on = [ ]
            off = [ ]
            for v in data :
                if ( v & ( 1 << i ) ) :
                    on . append ( v )
                else :
                    off . append ( v )
            if not on or not off :
                continue
            ret = min ( ret , max ( rec ( used | ( 1 << ( 2 * i ) ) , on ) , rec ( used | ( 2 << ( 2 * i ) ) , off ) ) )
        memo [ used ] = ret + 1
        return ret + 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1640
---> probID: codeforces_1360_A
---> inputs:
8
3 2
4 2
1 1
3 1
4 7
1 3
7 4
100 100
---> outputs:
16
16
4
9
64
9
64
40000

def main ( ) :
    import sys
    t = sys . argv [ 1 ]
    for tc in range ( t ) :
        a , b = tc
        print ( solve ( a , b ) )
    sys . exit ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1641
---> probID: codeforces_1690_B
---> inputs:
6
4
3 5 4 1
1 3 2 0
3
1 2 1
0 1 0
4
5 3 7 2
1 1 1 1
5
1 2 3 4 5
1 2 3 4 6
1
8
0
1
4
6
---> outputs:
YES
YES
NO
NO
YES
NO

def solve ( a , b , n ) :
    ans = [ ]
    max = int ( '-1' )
    for i in range ( n ) :
        max = max ( max , ( a [ i ] - b [ i ] ) )
    if max < 0 :
        return False
    for i in range ( n ) :
        temp = a [ i ] - max
        if temp <= 0 :
            ans . append ( 0 )
        else :
            ans . append ( temp )
    for i in range ( n ) :
        if ans [ i ] != b [ i ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1642
---> probID: geeksforgeeks_1819_A
---> inputs:

---> outputs:
Odd


def GFG ( N ) :
    N = N . lower ( )
    if N [ - 1 ] in [ '0' , '2' , '4' , '6' ] :
        return ( 'Even' , 'Odd' )
    else :
        return ( 'Even' , 'Odd' )


---> console_out:
 
DIDN'T MATCH!! :(
 94%|█████████▍| 1642/1746 [00:39<00:02, 41.72it/s]

-------------------------------------


---> lineNum: 1643
---> probID: aizu_p02434_A
---> inputs:
3 13
0 0 1
0 0 2
0 0 3
0 1 -1
0 2 4
0 2 5
1 0
1 1
1 2
2 1
1 0
1 1
1 2
---> outputs:
1 2 3
-1
4 5
1 2 3

4 5

def pyvectorize ( ) :
    import numpy as np
    import sys
    class Vector ( object ) :
        A = np . zeros ( 20 )
    def add ( x ) :
        if len ( A ) == len ( A ) :
            A = np . zeros ( len ( A ) * 2 )
        A [ : ] = x
        return A
    def delete_back ( ) :
        length -= 1
    def __repr__ ( ) :
        s = ""
        if length > 0 :
            s += A [ 0 ]
        for i in range ( 1 , length ) :
            s += " " + A [ i ]
        return s
    class Main ( object ) :
        def __init__ ( self , * args ) :
            self . n , self . q = args
            self . v = [ ]
            self . active = [ ]
        def __repr__ ( self ) :
            for i in range ( 0 , q ) :
                req , t = self . get ( i )
                try :
                    if not self . active [ t ] :
                        v [ t ] = np . zeros ( len ( v ) )
                        self . active [ t ] = True
                    v [ t ] . append ( self . get ( t ) )
                except IndexError :
                    if self . active [ t ] :
                        print ( v [ t ] )
                    else :
                        print ( )
    return Main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1644
---> probID: codeforces_25_A
---> inputs:
5
2 4 7 8 10
---> outputs:
3

def test_pr6 ( ) :
    x , y = symbols ( 'x,y' , real = True )
    n , k1 , k2 , w1 , w2 , a = symbols ( 'n k1 k2 a' , integer = True , positive = True )
    for i in range ( n ) :
        a [ i ] = Wild ( 'a' , exclude = [ x ] )
        if a [ i ] % 2 == 0 :
            w1 += 1
            k1 = i + 1
        else :
            w2 += 1
            k2 = i + 1
    assert ( w1 == 1 ) . subs ( a , k2 ) == ( k1 , k2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1645
---> probID: geeksforgeeks_4124_A
---> inputs:

---> outputs:
3


def GFG ( X , Y , N , K ) :
    count = [ 0 ] * ( N + 1 )
    sol = 0
    count [ 0 ] = 0
    for i in range ( 1 , N + 1 ) :
        count [ i ] = count [ i - 1 ] + abs ( X [ i - 1 ] - Y [ i - 1 ] )
    j = 0
    for i in range ( 1 , N + 1 ) :
        while ( count [ i ] - count [ j ] ) > K :
            j += 1
        sol = max ( sol , i - j )
    return sol


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1646
---> probID: aizu_p01574_A
---> inputs:
6 2
2
5
---> outputs:
Yes

def main ( ) :
    import sys
    import getopt
    global INF , EPS
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'hi:' , [ 'help' , 'debug' , 'debug' ] )
    except getopt . error as msg :
        print ( msg )
        return
    for o , a in opts :
        if o == '-h' :
            usage ( )
            return
        if o == '-i' :
            INF = int ( a )
        elif o == '-h' :
            print ( __doc__ )
            return
        elif o == '-i' :
            DEBUG = int ( a )
        elif o == '-d' :
            DEBUG = DEBUG
        elif o == '-d' :
            DEBUG = DEBUG
        elif o == '-i' :
            DEBUG = DEBUG
        elif o == '-i' :
            DEBUG = DEBUG
        elif o == '-i' :
            DEBUG = DEBUG
    if args :
        for arg in args :
            if arg not in ( '-' , '--help' ) :
                usage ( )
                return
    if args :
        for arg in args :
            if arg not in ( '-' , '--help' ) :
                usage ( )
                return
    if args :
        for arg in args :
            if arg not in ( '-' , '--help' ) :
                usage ( )
                return
    if args :
        for arg in args :
            if arg not in ( '-' , '--help' ) :
                usage ( )
                return
    if sys . version_info >= ( 3 , ) :
        print ( deeprepr ( sys . argv [ 0 ] ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1647
---> probID: geeksforgeeks_597_A
---> inputs:

---> outputs:
No


def test_GFG ( ) :
    n = 15
    if n <= 2 :
        return ( n , 2 )
    if n % i == 0 :
        return False
    if i * i > n :
        return True
    return is_prime ( n , i + 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 94%|█████████▍| 1647/1746 [00:39<00:02, 41.43it/s]

-------------------------------------


---> lineNum: 1648
---> probID: geeksforgeeks_2219_A
---> inputs:

---> outputs:
3


def test_GFG ( ) :
    i = 2
    while i * i <= n :
        if n % i == 0 :
            return False
        i += 1
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1649
---> probID: geeksforgeeks_4767_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    for x in [ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 ] :
        if x % i == 0 :
            return False
    minimumCost = 1
    if minimumCost == 1 :
        return 1
    if minimumCost == 2 and minimumCost == 3 :
        return 2
    if minimumCost == 4 :
        return 3


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1650
---> probID: geeksforgeeks_4507_A
---> inputs:

---> outputs:
Next higher number with same number of set bits is 163


def GFG ( x ) :
    right_one , next_higher_one_bit , right_ones_pattern , next = x
    if next_higher_one_bit :
        right_one = x & - x
        next_higher_one_bit = x + right_one
        right_ones_pattern = x ^ next_higher_one_bit
        right_ones_pattern = ( right_ones_pattern ) // right_one
        right_ones_pattern >>= 2
        next = next_higher_one_bit | right_ones_pattern
    return next


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1651
---> probID: geeksforgeeks_1666_A
---> inputs:

---> outputs:
5
6


def GFG ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , j * j <= i ) :
            if i % j == 0 :
                if i / j == j :
                    sum += j
                else :
                    sum += j + i / j
        sum = sum - i
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1652
---> probID: geeksforgeeks_2359_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    """Test the GFG algorithm."""
    count = 0
    result = np . inf
    for i in range ( n ) :
        if i == 1 :
            count += 1
        else :
            if count != 0 :
                result = np . minimum ( result , count )
            count = 0
    return result


---> console_out:
 
DIDN'T MATCH!! :(
 95%|█████████▍| 1652/1746 [00:39<00:02, 41.70it/s]

-------------------------------------


---> lineNum: 1653
---> probID: geeksforgeeks_2858_A
---> inputs:

---> outputs:
12


def get_levenstein ( input ) :
    rev_input = [ input ]
    rev_input = rev_input . reverse ( )
    n = len ( input )
    dp = [ [ ] for i in range ( 0 , n + 1 ) ]
    for i in range ( 0 , n + 1 ) :
        dp [ 0 ] . append ( i )
        dp [ i ] . append ( i )
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , n + 1 ) :
            if input [ i - 1 ] == rev_input [ j - 1 ] :
                dp [ i ] [ j ] = dp [ i - 1 ] [ j - 1 ]
            else :
                dp [ i ] [ j ] = 1 + min ( dp [ i - 1 ] [ j ] , dp [ i ] [ j - 1 ] )
    res = int ( '' )
    for i , j in enumerate ( dp ) :
        res = min ( res , dp [ i ] [ j ] )
        if i < n :
            res = min ( res , dp [ i + 1 ] [ j ] )
        if i > 0 :
            res = min ( res , dp [ i - 1 ] [ j ] )
    return res


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576740674_6773/main.py", line 4
    
    ^
SyntaxError: EOF while scanning triple-quoted string literal


-------------------------------------


---> lineNum: 1654
---> probID: projecteuler_p088_A
---> inputs:

---> outputs:
7587457

def p_p088 ( p ) :
    ''' p}
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1655
---> probID: atcoder_AGC028_B
---> inputs:
2
1 2
---> outputs:
9

def main ( ) :
    import sys
    import getopt
    n = int ( sys . argv [ 1 ] )
    sa = sys . argv [ 2 : ]
    a = [ int ( x ) for x in sa ]
    a = [ int ( x ) for x in a ]
    a = [ int ( x ) for x in a ]
    mod = 1000000007
    p = 1
    for i in range ( 2 , n + 1 ) : p = p * i % mod
    q = [ 1 ] * n
    for i in range ( 1 , n + 1 ) : q [ i ] = ( q [ i - 1 ] + modinv ( i + 1 , mod ) ) % mod
    ans = 0
    for i in range ( n ) :
        val = q [ i ] + q [ n - i - 1 ] - 1
        val *= a [ i ]
        val %= mod
        val *= p
        val %= mod
        ans += val
        ans %= mod
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1656
---> probID: geeksforgeeks_3888_A
---> inputs:

---> outputs:
100 90 80 58 92 85 45 30 27 56 


def queue_reverse ( q ) :
    queue = [ ]
    print ( queue )
    while not queue :
        print ( queue . pop ( ) , end = ' ' )
        queue . append ( queue . pop ( ) )
    q = reverse_queue ( q )
    q . append ( q )
    return q


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1657
---> probID: geeksforgeeks_3576_A
---> inputs:

---> outputs:
Difference is  3


def test_GFG ( ) :
    MAX = 1000000
    prime = [ False ] * ( MAX + 1 )
    SieveOfEratosthenes ( )
    for i in range ( MAX + 1 ) :
        prime [ i ] = True
    prime [ 1 ] = False
    for p in range ( 2 , MAX * 2 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , MAX , p ) :
                prime [ i ] = False
    def find_diff ( arr , n ) :
        min , max = MAX + 2 , - 1
        for i in range ( n ) :
            if prime [ arr [ i ] ] == True :
                if arr [ i ] > max :
                    max = arr [ i ]
                if arr [ i ] < min :
                    min = arr [ i ]
        return ( max , min )
    def test_diff ( arr , n ) :
        SieveOfEratosthenes ( )
        n = 4
        arr = [ 1 , 2 , 3 , 5 ]
        res = find_diff ( arr , n )
        if res == - 1 :
            print ( "No prime numbers" )
        else :
            print ( "Difference is %d" % res )


---> console_out:
 
DIDN'T MATCH!! :(
 95%|█████████▍| 1657/1746 [00:40<00:02, 41.68it/s]

-------------------------------------


---> lineNum: 1658
---> probID: aizu_p00072_A
---> inputs:
4
4
0,1,1500
0,2,2000
1,2,600
1,3,500
0
---> outputs:
23

def main ( ) :
    import sys
    import getopt
    import os
    import string
    import aj_grl_2
    cost = [ ]
    d = [ ]
    used = [ ]
    V = 0
    INF = 0
    cnt = 0
    def Prim ( s ) :
        d = [ ]
        used = [ ]
        INF = int ( s )
        del used
        del d
        d . append ( INF )
        cnt = 0
        while True :
            v = - 1
            for u in range ( V ) :
                if not used [ u ] and ( v == - 1 or d [ u ] < d [ v ] ) :
                    v = u
            if v == - 1 :
                break
            used [ v ] = True
            a = d [ v ] / 100
            if a > 0 :
                a -= 1
            cnt += a
            for k in range ( V ) :
                if not used [ k ] and cost [ v ] != 0 :
                    d . append ( min ( cost [ v ] , d [ k ] ) )
    def AOJ_GRL_2 ( ) :
        while True :
            V = input ( ) . split ( )
            cost = [ ]
            if V == 0 :
                break
            n = input ( ) . split ( )
            for i in range ( n ) :
                input = input . split ( )
                a = int ( input [ 0 ] )
                b = int ( input [ 1 ] )
                c = int ( input [ 2 ] )
                cost . append ( a )
                cost . append ( b )
                cost . append ( c )
            Prim ( 0 )
            print ( cnt )
    AOJ_GRL_2 ( )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576740795_3761/main.py", line 152
    import
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1659
---> probID: codeforces_672_A
---> inputs:
3
---> outputs:
3

def test_A_Summer_Camp ( ) :
    import random
    import math
    import string
    import math
    import random
    import math
    import random
    import math
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1660
---> probID: geeksforgeeks_3355_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    S = set ( )
    for i in range ( N ) :
        freq = [ False ] * 26
        s = ""
        for j in range ( i , N ) :
            pos = P [ j ] - 'a'
            if freq [ pos ] == True :
                break
            freq [ pos ] = True
            s += P [ j ]
            S . add ( s )
    return len ( S )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1661
---> probID: atcoder_ARC099_A
---> inputs:
7 3
1 2 3 4 5 6 7
---> outputs:
3


def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """usage: %s [-d|-e|-u|-t] [-d|-e|-u|-t]""" % sys . argv [ 0 ] )
        print ( """ -d : decode ASCII data (default)
  -e : encode ASCII data (default)
  -u : encode and decode Unicode data (default)
  -t : encode and decode string (default)
  -h : print this help""" )
        return
    for o , a in opts :
        if o == '-d' :
            decode ( a )
        elif o == '-u' :
            encode ( a )
        elif o == '-t' :
            encode ( a )
        elif o == '-t' :
            encode ( a )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1662
---> probID: geeksforgeeks_60_A
---> inputs:

---> outputs:
2


def test_GFG ( ) :
    min_diff = S . Infinity
    for i in ( 1 , 2 , 3 ) :
        cnt = S . Pi / 2
        if cnt == n - k :
            temp = [ ]
            for j in range ( n ) :
                if ( i & ( 1 << j ) ) :
                    temp . append ( a [ j ] )
            max_diff = S . Infinity
            for j in range ( len ( temp ) - 1 ) :
                max_diff = max ( max_diff , temp [ j + 1 ] - temp [ j ] )
            min_diff = min ( min_diff , max_diff )
    assert min_diff == min_diff


---> console_out:
 
DIDN'T MATCH!! :(
 95%|█████████▌| 1662/1746 [00:40<00:02, 41.54it/s]

-------------------------------------


---> lineNum: 1663
---> probID: geeksforgeeks_3875_A
---> inputs:

---> outputs:
0 5 1 7 8 

def test_GFG ( ) :
    """Test the difference of the elements of the GFG."""
    largest = arr [ 0 ]
    i = None
    for i in range ( n ) :
        if largest < arr [ i ] :
            largest = arr [ i ]
    for i in range ( n ) :
        arr [ i ] = largest - arr [ i ]
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1664
---> probID: geeksforgeeks_432_A
---> inputs:

---> outputs:
5


def countKdivPairs ( A , n , K ) :
    """
 Return the number of Kdiv pairs in the given number of Kdiv pairs.

 Parameters
 -----
 A : array_like
 Input array.
 n : int
 Number of Kdiv pairs.
 K : int
 Number of Kdiv pairs in the given number of Kdiv pairs.

 Returns
 -----
 count : int
 Number of Kdiv pairs in the given number of Kdiv pairs.

 """
    A = np . array ( [ 2 , 2 , 1 , 7 , 5 , 3 ] )
    n = 6
    K = 4
    return sum ( [ count * ( count - 1 ) / 2 for count in A ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1665
---> probID: aizu_p00183_A
---> inputs:
bbw
wbw
+b+
bwb
wbw
wbw
0
---> outputs:
b
NA

def main ( ) :
    import sys
    while True :
        S = sys . stdin . readline ( ) . split ( )
        if S [ 0 ] == '0' :
            break
        S = sys . stdin . readline ( ) . split ( )
        if S [ 0 ] == '+' :
            print ( S [ 0 ] )
            f = True
            break
        if S [ 0 ] == '-' :
            S = sys . stdin . readline ( ) . split ( )
            if S [ 0 ] == '+' :
                print ( S [ 0 ] )
                f = False
                break
        if f and S [ 0 ] == '-' :
            S = sys . stdin . readline ( ) . split ( )
            if S [ 0 ] == '+' :
                S = sys . stdin . readline ( ) . split ( )
                if S [ 0 ] == '-' :
                    S = sys . stdin . readline ( ) . split ( )
        if f and S [ 0 ] == '+' :
            S = sys . stdin . readline ( ) . split ( )
            if S [ 0 ] == '-' :
                S = sys . stdin . readline ( ) . split ( )
        if f and S [ 0 ] == '-' :
            S = sys . stdin . readline ( ) . split ( )
            if S [ 0 ] == '+' :
                S = sys . stdin . readline ( ) . split ( )
        if f :
            print ( 'NA' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576740961_4454/main.py", line 1
    def import ( arr , n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1666
---> probID: geeksforgeeks_2349_A
---> inputs:

---> outputs:
Index of 0 to be replaced is  9


def import ( arr , n ) :
    """
 Import a binary array into a binary array.
 """
    max_count = 0
    max_index = 0
    prev_zero = - 1
    prev_prev_zero = - 1
    for curr in range ( n ) :
        if arr [ curr ] == 0 :
            if curr - prev_prev_zero > max_count :
                max_count = curr - prev_prev_zero
                max_index = prev_zero
            prev_prev_zero = prev_zero
            prev_zero = curr
    if n - prev_prev_zero > max_count :
        max_index = prev_zero
    return max_index


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1667
---> probID: geeksforgeeks_3836_A
---> inputs:

---> outputs:
10.0
26.0


def test_solution ( ) :
    ans = Integer ( 0 )
    for rem in range ( k - 1 , 0 , - 1 ) :
        if n % rem == 0 :
            ans = min ( ans , rem + ( n // rem ) * k )


---> console_out:
 
DIDN'T MATCH!! :(
 95%|█████████▌| 1667/1746 [00:40<00:01, 41.80it/s]

-------------------------------------


---> lineNum: 1668
---> probID: geeksforgeeks_2793_A
---> inputs:

---> outputs:
4652135769797794


def GFG ( a , b , mod ) :
    res = 0
    a %= mod
    while b :
        if ( b & 1 ) :
            res = ( res + a ) % mod
        a = ( 2 * a ) % mod
        b >>= 1
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1669
---> probID: aizu_p00225_A
---> inputs:
5
apple
yellow
georgia
king
email
7
apple
yellow
georgia
king
email
wink
lucky
0
---> outputs:
NG
OK

def main ( ) :
    import sys
    import getopt
    import string
    MAX = 'Z' - 'A' + 1
    n = 0
    inDeg , outDeg , vis = getopt . getopt ( sys . argv [ 1 : ] , 'a' )
    nei = [ ]
    check ( )
    for i in range ( MAX ) :
        if vis [ i ] != 1 :
            return False
    cnt = 0
    for i in range ( MAX ) :
        if inDeg [ i ] != outDeg [ i ] :
            return False
    return True
    def dfs ( k ) :
        if vis [ k ] == 1 :
            return
        vis [ k ] = 1
        for i in range ( MAX ) :
            if 0 < nei [ k ] [ i ] :
                dfs ( i )
    def run ( ) :
        n = 0
        inDeg = [ ]
        outDeg = [ ]
        vis = [ ]
        nei = [ ]
        print ( '' )
        for i in range ( MAX ) :
            c = string . split ( sys . stdin . readline ( ) )
            u = c [ 0 ] - 'a'
            v = c [ - 1 ] - 'a'
            outDeg [ u ] += 1
            inDeg [ v ] += 1
            nei [ u ] [ v ] = 1
            vis [ u ] = vis [ v ] = - 1
            s = u
        dfs ( s )
        if check ( ) :
            print ( 'OK' )
        else :
            print ( 'NG' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1670
---> probID: atcoder_ARC086_B
---> inputs:
10
421554480 455557976 91974192 793727424 721379432 356319592 904205072 341283792 430860808 474298152
---> outputs:
19
7 1
7 2
7 3
7 4
7 5
7 6
7 7
7 8
7 9
7 10
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10


def main ( ) :
    import sys
    N = len ( sys . argv )
    a = np . arange ( N )
    index = 0
    for i in range ( N ) :
        if abs ( a [ index ] ) < abs ( a [ i ] ) :
            index = i
    print ( 2 * N - 1 )
    for i in range ( N ) :
        print ( ( index + 1 ) , ( i + 1 ) )
    if a [ index ] > 0 :
        for i in range ( 2 , N + 1 ) :
            print ( ( i - 1 ) , i )
    else :
        for i in range ( N - 1 , - 1 , - 1 ) :
            print ( ( i + 1 ) , i )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1671
---> probID: geeksforgeeks_4957_A
---> inputs:

---> outputs:
g e e k s 
g ee k s 


def get_GFG ( str ) :
    """
 Given a string and a string of letters, return a list of strings.
 """
    len = len ( str )
    len -= 1
    for i in range ( len ( str ) ) :
        if str [ i ] != str [ len ] :
            return [ ]
        len -= 1
    return [ str ]
def print_solution ( partitions ) :
    for i in partitions :
        for j in i :
            print ( j , end = ' ' )
        print ( )
def add_strings ( v , s , temp , index = None ) :
    s = '' . join ( s )
    current = [ temp ]
    if index is None :
        temp = [ ]
    for i in range ( index , len ( s ) ) :
        str = str + s [ i ]
        if check_palindrome ( str ) :
            temp . append ( str )
            if i + 1 < len ( s ) :
                v = add_strings ( v , s , temp , i + 1 )
            else :
                v . append ( temp )
            temp = [ current ]
    return v
def partition ( s , v ) :
    temp = [ ]
    v = add_strings ( v , s , temp , 0 )
    print_solution ( v )
def main ( ) :
    s = 'geeks'
    partitions = [ ]
    partition ( s , partitions )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1672
---> probID: aizu_p00991_A
---> inputs:
4 4 0 0 3 3
---> outputs:
2

def pympmath_comb ( Z ) :
    import mpmath
    import mpmath . mp as mpmath
    M = 100000007
    comb = mpmath . mp . mpf ( str ( n - i ) ) / mpmath . mp . mpf ( str ( i + 1 ) )
    return comb . mod ( mpmath . mp . mpf ( str ( M ) ) ) . mod ( mpmath . mp . mpf ( str ( M ) ) ) . mod ( mpmath . mp . mpf ( str ( M ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 96%|█████████▌| 1672/1746 [00:40<00:01, 41.44it/s]

-------------------------------------


---> lineNum: 1673
---> probID: geeksforgeeks_1550_A
---> inputs:

---> outputs:
LCM = 12, Length = 3
Indexes = 0 1 2 

def test_GFG ( ) :
    M = { }
    for i in range ( n ) :
        if M . has_key ( i ) :
            M [ i ] = M [ i ] + 1
        else :
            M [ i ] = 1
    num_count = [ 0 ] * ( k + 1 )
    for i in range ( 0 , k + 1 ) :
        num_count [ i ] = 0
    itr = M . keys ( )
    for i in itr :
        if i <= k :
            for i in range ( 1 , k + 1 ) :
                if i * i > k :
                    break
                num_count [ i * i ] += i
        else :
            break
    lcm , length = 0 , 0
    for i in range ( 1 , k + 1 ) :
        if num_count [ i ] > length :
            length = num_count [ i ]
            lcm = i
    if lcm == 0 :
        print ( - 1 )
    else :
        print ( "LCM = %d, Length = %d" % ( lcm , length ) )
        print ( "Indexes = " )
        for i in range ( n ) :
            if lcm % arr [ i ] == 0 :
                print ( i , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1674
---> probID: geeksforgeeks_4207_A
---> inputs:

---> outputs:
4


def test_GFG ( ) :
    """Test the number of pairs of leading zeros."""
    odd1 , even1 = [ ] , [ ]
    odd2 , even2 = [ ] , [ ]
    for i in range ( n ) :
        if i % 2 == 1 :
            odd1 . append ( 0 )
        else :
            even1 . append ( 0 )
    for i in range ( m ) :
        if i % 2 == 1 :
            odd2 . append ( 0 )
        else :
            even2 . append ( 0 )
    pairs = [ min ( odd1 , odd2 ) , min ( even1 , even2 ) ]
    assert pairs == [ 9 , 14 , 6 , 2 , 11 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1675
---> probID: geeksforgeeks_1994_A
---> inputs:

---> outputs:
3


def GFG ( a , b , n , m ) :
    odd1 , even1 = 0 , 0
    odd2 , even2 = 0 , 0
    for i in range ( n ) :
        if a [ i ] % 2 == 1 :
            odd1 += 1
        else :
            even1 += 1
    for i in range ( m ) :
        if b [ i ] % 2 == 1 :
            odd2 += 1
        else :
            even2 += 1
    pairs = min ( odd1 , even2 ) + min ( odd2 , even1 )
    return pairs


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1676
---> probID: geeksforgeeks_4902_A
---> inputs:

---> outputs:
Maximum difference is 99


def maximum_diffrence ( arr , arr_size ) :
    max_diff = arr [ 1 ] - arr [ 0 ]
    min_element = arr [ 0 ]
    i = 0
    for i in range ( arr_size ) :
        if arr [ i ] - min_element > max_diff :
            max_diff = arr [ i ] - min_element
        if arr [ i ] < min_element :
            min_element = arr [ i ]
    return max_diff , min_element


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576741226_1475/main.py", line 3
    return C
    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1677
---> probID: geeksforgeeks_3004_A
---> inputs:

---> outputs:
10


def GFG ( n , k ) :
    C = [ [ 0 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n + [ k + 1 ] * n
    return C

---> console_out:
 
DIDN'T MATCH!! :(
 96%|█████████▌| 1677/1746 [00:40<00:01, 41.40it/s]

-------------------------------------


---> lineNum: 1678
---> probID: geeksforgeeks_3324_A
---> inputs:

---> outputs:
15


def GFG ( ) :
    MAX = 26
    max_element = len ( freq )
    max_ele = freq [ 0 ]
    for i in range ( MAX ) :
        if max_ele < freq [ i ] :
            max_ele = freq [ i ]
    return max_ele


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576741277_4426/main.py", line 49
    b = f .
          ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1679
---> probID: codeforces_540_A
---> inputs:
5
82195
64723
---> outputs:
13

def test_195 ( ) :
    f = np . array ( [ [ 1 , 2 ] , [ 3 , 4 ] ] )
    n = len ( f )
    a = f . T
    b = f . T
    sum = 0
    for i in range ( n ) :
        if abs ( a [ i ] - b [ i ] ) > 5 :
            sum += 10 - abs ( a [ i ] - b [ i ] )
        else :
            sum += abs ( a [ i ] - b [ i ] )
    assert sum == 10
    f = np . array ( [ [ 1 , 2 ] , [ 3 , 4 ] ] )
    n = len ( f )
    a = f . T
    b = f . T
    sum = 0
    for i in range ( n ) :
        if abs ( a [ i ] - b [ i ] ) > 5 :
            sum += 10 - abs ( a [ i ] - b [ i ] )
        else :
            sum += abs ( a [ i ] - b [ i ] )
    assert sum == 10
    f = np . array ( [ [ 1 , 2 ] , [ 3 , 4 ] ] )
    n = len ( f )
    a = f . T
    b = f . T
    sum = 0
    for i in range ( n ) :
        if abs ( a [ i ] - b [ i ] ) > 5 :
            sum += 10 - abs ( a [ i ] - b [ i ] )
        else :
            sum += abs ( a [ i ] - b [ i ] )
    assert sum == 10
    f = np . array ( [ [ 1 , 2 ] , [ 3 , 4 ] ] )
    n = len ( f )
    a = f . T
    b = f . T
    sum = 0
    for i in range ( n ) :
        if abs ( a [ i ] - b [ i ] ) > 5 :
            sum += 10 - abs ( a [ i ] - b [ i ] )
        else :
            sum += abs ( a [ i ] - b [ i ] )
    assert sum == 10
    f = np . array ( [ [ 1 , 2 ] , [ 3 , 4 ] ] )
    n = len ( f )
    a = f . T
    b = f .

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1680
---> probID: geeksforgeeks_1956_A
---> inputs:

---> outputs:
5 0 1 

def pyGFG ( ) :
    MAX = 32
    pow2 = [ ]
    visited = [ ]
    ans = Vector ( )
    def power_2 ( ) :
        ans = 1
        for i in range ( MAX ) :
            pow2 . append ( ans )
            ans *= 2
    def count_set_bits ( x ) :
        set_bits = 0
        while x != 0 :
            x = x & ( x - 1 )
            set_bits += 1
        return set_bits
    def add ( num ) :
        point = 0
        value = 0
        for i in range ( MAX ) :
            if visited [ i ] :
                continue
            else :
                if num % 2 == 1 :
                    value += ( 1 << i )
                num /= 2
        ans . append ( value )
    solve ( n = 3 , k = 5 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1681
---> probID: projecteuler_p027_A
---> inputs:

---> outputs:
-59231

def p027 ( ) :
    print ( [ 'p027.py' , 'p027.c' , 'p027.h' , 'p027.i' , 'p027.j' , 'p027.k' , 'p027.l' , 'p027.m' , 'p027.n' , 'p027.o' , 'p027.p' , 'p027.q' , 'p027.r' , 'p027.s' , 'p027.t' , 'p027.u' , 'p027.v' , 'p027.w' , 'p027.x' , 'p027.y' , 'p027.z' , 'p027.w' , 'p027.x' , 'p027.y' , 'p027.z' , 'p027.w' , 'p027.x' , 'p027.y' , 'p027.z' , 'p027.w' , 'p027.x' , 'p027.y' , 'p027.z' , 'p027.w' , 'p027.x' , 'p027.y' , 'p027.z' , 'p027.w' , 'p027.x' , 'p027.y' , 'p027.z' , 'p027.w' , 'p027.x' , 'p027.y' , 'p027.z' , 'p027.w' , 'p027.x' , 'p027.y' , 'p027.z' , 'p027.w' , 'p027.x' , 'p027.y' , 'p027.z' , 'p027.w' , 'p027.x' , 'p027.y' , 'p027.z' , 'p027.w' , 'p027.x' , 'p027.y' , 'p027.z' , ] )
    best_num = 0
    best_a

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1682
---> probID: codeforces_1371_B
---> inputs:
5
3 4
3 2
3 1
13 7
1010000 9999999
---> outputs:
4
3
1
28
510049495001

def test_pre149 ( ) :
    import sys
    import random
    import string
    import doctest
    import tempfile
    import os
    import tempfile
    import random
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    import tempfile
    

---> console_out:
 
DIDN'T MATCH!! :(
 96%|█████████▋| 1682/1746 [00:40<00:01, 40.76it/s]

-------------------------------------


---> lineNum: 1683
---> probID: geeksforgeeks_4968_A
---> inputs:

---> outputs:
3
1 1 2


def test_GFG ( ) :
    MAX = 100001
    isPrime = [ 0 ] * MAX
    def sieve ( ) :
        for p in range ( 2 , MAX ) :
            if isPrime [ p ] == 0 :
                for i in range ( p * 2 , MAX , p ) :
                    isPrime [ i ] = 1
        return - 1
    def find_subset ( a , n ) :
        cnt1 = 0
        for i in range ( n ) :
            if a [ i ] == 1 :
                cnt1 += 1
        if cnt1 > 0 :
            for i in range ( n ) :
                if ( a [ i ] != 1 ) :
                    print ( cnt1 + 1 )
                    for j in range ( cnt1 ) :
                        print ( 1 , a [ i ] , a [ j ] )
                    return 0
        if cnt1 >= 2 :
            print ( cnt1 )
            for i in range ( cnt1 ) :
                print ( 1 , a [ i ] , a [ j ] )
            return 0
        for i in range ( n ) :
            for j in range ( i + 1 , n ) :
                if isPrime [ a [ i ] + a [ j ] ] == 0 :
                    print ( 2 , a [ i ] , a [ j ] )
                    return 0
        print ( - 1 )
        return - 1
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1684
---> probID: aizu_p00302_A
---> inputs:
1 10 20
1
---> outputs:
11

def pythontools ( ) :
    import sys
    n , r , t , sum , pos = 0 , 0 , 0 , 0
    n , r , t , sum , pos = int ( n ) , int ( r ) , int ( t ) , int ( sum )
    p = [ ]
    water = [ ]
    empty = [ ]
    for i in range ( n ) :
        p . append ( i )
    for i in range ( 1 , t ) :
        for j in range ( n ) :
            pos = ( p [ j ] * i % r )
            if i > 1 :
                empty . append ( pos )
            if water [ pos ] :
                water . pop ( pos )
            else :
                sum += 1
        for j in range ( r ) :
            if empty :
                water . append ( empty )
                empty . append ( 0 )
    print ( sum )
    sys . exit ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576741428_3905/main.py", line 2
    s = subprocess . Popen ( [ sys . executable , '-c' , ' import   sys ,   getopt ,   getopt ,   getopt _ long ,   getopt _ short ,   getopt _ long ,   getopt _ getopt ,   getopt _ getopt ] , stdout = subprocess . PIPE , stderr = subprocess . PIPE )
                                                                                                                                                                                                                                                         ^
SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1685
---> probID: aizu_p00101_A
---> inputs:
3
Hoshino
Hashino
Masayuki Hoshino was the grandson of Ieyasu Tokugawa.
---> outputs:
Hoshina
Hashino
Masayuki Hoshina was the grandson of Ieyasu Tokugawa.

def py2exe_options ( ) :
    s = subprocess . Popen ( [ sys . executable , '-c' , ' import   sys ,   getopt ,   getopt ,   getopt _ long ,   getopt _ short ,   getopt _ long ,   getopt _ getopt ,   getopt _ getopt ] , stdout = subprocess . PIPE , stderr = subprocess . PIPE )
    n = s . stdout . read ( ) . rstrip ( )
    s . stdin . close ( )
    for line in s . stdout :
        c = line . split ( ' ' )
        for i in range ( len ( c ) - 6 ) :
            if c [ i ] == 'H' and c [ i + 1 ] == 'o' and c [ i + 2 ] == 's' and c [ i + 3 ] == 'h' and c [ i + 4 ] == 'i' and c [ i + 5 ] == 'n' and c [ i + 6 ] == 'o' :
                c [ i + 6 ] = 'a'
                i += 6
        print ( [ c [ i : i + 6 ] for i in range ( len ( c ) - 6 ) ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1686
---> probID: geeksforgeeks_1541_A
---> inputs:

---> outputs:
2


def binary_search ( arr , low , high ) :
    """
 Return the number of rotations of arr between low and high.
 """
    if high < low :
        return 0
    if high == low :
        return low
    mid = low + ( high - low ) // 2
    if mid < high and arr [ mid + 1 ] < arr [ mid ] :
        return ( mid + 1 )
    if mid > low and arr [ mid ] < arr [ mid - 1 ] :
        return mid
    if arr [ high ] > arr [ mid ] :
        return count_rotations ( arr , low , mid - 1 )
    return count_rotations ( arr , mid + 1 , high )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1687
---> probID: codeforces_92_A
---> inputs:
4 11
---> outputs:
0

def test_issue_7171 ( ) :
    scn = S ( 1 ) / 2
    n = scn ( 0 )
    k = scn ( 1 )
    i , req = 1 , 1
    while k - req >= 0 :
        if k - req >= 0 :
            k , i = k - req , i % n
        else :
            break
        i += 1
        if i % n != 0 :
            req = i % n
        else :
            req = n
    assert k == req


---> console_out:
 
DIDN'T MATCH!! :(
 97%|█████████▋| 1687/1746 [00:40<00:01, 40.94it/s]

-------------------------------------


---> lineNum: 1688
---> probID: geeksforgeeks_3522_A
---> inputs:

---> outputs:
NO


def get_GFG ( arr , n , m ) :
    if n > m :
        return True
    DP = [ False ] * m
    for i in range ( n ) :
        if DP [ 0 ] :
            return True
        temp = [ False ] * m
        for j in range ( m ) :
            if DP [ j ] == True :
                if DP [ ( j + arr [ i ] ) % m ] == False :
                    temp [ ( j + arr [ i ] ) % m ] = True
        for j in range ( m ) :
            if temp [ j ] :
                DP [ j ] = True
            DP [ arr [ i ] % m ] = True
    return DP [ 0 ]


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576741525_2582/main.py", line 11
    print ( """ SPACETOKEN - d , SPACETOKEN - e : SPACETOKEN decode SPACETOKEN ASCII SPACETOKEN strings SPACETOKEN ( default ) STRNEWLINE SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN SPACETOKEN

SyntaxError: EOF while scanning triple-quoted string literal


-------------------------------------


---> lineNum: 1689
---> probID: aizu_p02441_A
---> inputs:
9
1 4 1 4 2 1 3 5 6
3
0 9 1
1 6 1
3 7 5
---> outputs:
3
2
0

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , 'deut' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """usage:SPACETOKEN%sSPACETOKEN[-d|-e|-u|-t]SPACETOKEN[-d|-e|-u|-t]""" % sys . argv [ 0 ] )
        print ( """ SPACETOKEN - d , SPACETOKEN - e : SPACETOKEN decode SPACETOKEN ASCII SPACETOKEN strings SPACETOKEN ( default

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1690
---> probID: atcoder_AGC004_B
---> inputs:
2 10
1 100
---> outputs:
12

def main ( ) :
    import sys
    n = len ( sys . argv )
    x = sys . argv [ 1 ]
    arr = [ ]
    totals = [ ]
    for i in range ( n ) :
        arr . append ( sys . argv [ i ] )
        totals . append ( arr [ 0 ] [ i ] )
    for i in range ( 1 , n ) :
        for j in range ( n ) :
            arr [ i ] [ j ] = min ( arr [ i - 1 ] [ j ] , arr [ i - 1 ] [ ( j - 1 + n ) % n ] )
            totals . append ( arr [ i ] [ j ] )
        totals . append ( x * i )
    totals . sort ( )
    print ( totals )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1691
---> probID: aizu_p01103_A
---> inputs:
3 3
2 3 2
2 1 2
2 3 1
3 5
3 3 4 3 3
3 1 0 2 3
3 3 4 3 2
7 7
1 1 1 1 1 0 0
1 0 0 0 1 0 0
1 0 1 1 1 1 1
1 0 1 0 1 0 1
1 1 1 1 1 0 1
0 0 1 0 0 0 1
0 0 1 1 1 1 1
6 6
1 1 1 1 2 2
1 0 0 2 0 2
1 0 0 2 0 2
3 3 3 9 9 9
3 0 0 9 0 9
3 3 3 9 9 9
0 0
---> outputs:
0
3
1
9

def main ( ) :
    import sys
    while 1 :
        d , w = sys . stdin . readline ( ) . split ( )
        if d == '' : break
        G = [ [ int ( x ) for x in line . split ( ) ] for line in open ( '/proc/cpuinfo' , 'r' ) . readlines ( ) ]
        max = 0
        for i in range ( d ) :
            for j in range ( w ) :
                G [ i ] [ j ] = int ( line . split ( ) [ 0 ] )
        for i in range ( 0 , d - 3 ) :
            for j in range ( 0 , w - 3 ) :
                solve ( G , i , j , 3 , 3 )
        sys . stdout . write ( max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1692
---> probID: codeforces_274_A
---> inputs:
6 2
2 3 6 5 4 10
---> outputs:
3

def test_codechef ( ) :
    import sympy
    n = Symbol ( 'n' )
    k = Symbol ( 'k' )
    arr = [ sympy . Wild ( 'arr' ) for i in range ( int ( n ) ) ]
    if k == 1 :
        print ( n )
        sys . exit ( 0 )
    ans = [ ]
    for i in range ( int ( n ) ) :
        if ans [ i ] == 0 :
            ktimes = k * arr [ i ]
            index = bisect . bisect_left ( arr , ktimes )
            if index >= 0 :
                ans . append ( - 1 )
    ans1 = 0
    for i in range ( n ) :
        if ans [ i ] == 0 :
            ans1 += 1
    assert ans1 == 0


---> console_out:
 
DIDN'T MATCH!! :(
 97%|█████████▋| 1692/1746 [00:40<00:01, 41.05it/s]

-------------------------------------


---> lineNum: 1693
---> probID: geeksforgeeks_4060_A
---> inputs:

---> outputs:
65


def GFG ( k , n ) :
    sum = int ( pow ( k , n + 1 ) - pow ( k - 1 , n + 1 ) )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1694
---> probID: geeksforgeeks_2096_A
---> inputs:

---> outputs:
5


def GFG ( i , tight , sum_so_far , Sum , number , len ) :
    if i == len ( number ) :
        if sum_so_far == Sum :
            return 1
        else :
            return 0
    ans = dp [ i ] [ 1 ] [ sum_so_far ]
    if ans != - 1 :
        return ans
    ans = 0
    ntight = 0
    nsum_so_far = 0
    for currdigit in range ( '0' , '9' ) :
        if not tight and currdigit > number [ i ] :
            break
        ntight = tight or currdigit < number [ i ]
        nsum_so_far = sum_so_far + ( currdigit - '0' )
        ans += solve ( i + 1 , ntight , nsum_so_far , Sum , number , len )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1695
---> probID: codeforces_231_A
---> inputs:
3
1 1 0
1 1 1
1 0 0
---> outputs:
2

def test_friend_decision ( ) :
    """Test the decision function."""
    count = 0
    def f ( entery ) :
        n = len ( entery )
        entery = entery . split ( ' ' )
        arr = [ ]
        for i in range ( n ) :
            arr . append ( entery [ i ] )
            decision ( arr )
        return count
    def decision ( entery ) :
        localct = 0
        inputs = entery . split ( ' ' )
        for i in inputs :
            if i == '1' :
                localct += 1
        if localct > 1 :
            count += 1
        return count
    return f


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1696
---> probID: geeksforgeeks_3504_A
---> inputs:

---> outputs:
Difference between sums is -9


def pythree_level_difference ( root ) :
    import sys
    import struct
    class Node :
        data = 0
        left , right = struct . unpack ( '>H' , root . data )
    class GFG :
        def __init__ ( self , key ) :
            self . key = key
            self . left = self . right = None
        def data ( self , key ) :
            if self . key == self . key :
                return self . left
            q = Queue ( )
            q . put ( self . key )
            level = 0
            evenSum , oddSum = 0 , 0
            while len ( q ) != 0 :
                size = len ( q )
                level += 1
                while size > 0 :
                    temp = q . pop ( )
                    if level % 2 == 0 :
                        evenSum += temp . data
                    else :
                        oddSum += temp . data
                    if temp . left :
                        q . put ( temp . left )
                    if temp . right :
                        q . put ( temp . right )
                    size -= 1
            return ( oddSum - evenSum )
    return GFG


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1697
---> probID: geeksforgeeks_949_A
---> inputs:

---> outputs:
6


def test_GFG ( ) :
    a = [ 3 , 4 , 5 , 6 , 7 , 2 , 10 , 11 ]
    count = 0
    number = 0
    for i in range ( n ) :
        if a [ i ] > x :
            count += 1
        else :
            number += ( count ) * ( count + 1 ) / 2
            count = 0
    if count != 0 :
        number += ( count ) * ( count + 1 ) / 2
    return number


---> console_out:
 
DIDN'T MATCH!! :(
 97%|█████████▋| 1697/1746 [00:41<00:01, 41.19it/s]

-------------------------------------


---> lineNum: 1698
---> probID: geeksforgeeks_1025_A
---> inputs:

---> outputs:
2


def GFG ( arr , n ) :
    count_even = 0
    count_odd = 0
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            count_even += 1
        else :
            count_odd += 1
    return min ( count_even , count_odd )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1699
---> probID: geeksforgeeks_5271_A
---> inputs:

---> outputs:
5 6 1 

def test_GFG ( ) :
    a = [ 1 , 5 , 5 , 1 , 6 , 1 ]
    n = len ( a )
    assert a == n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1700
---> probID: aizu_p00274_A
---> inputs:
2
3 2
3
0 1 1
1
1000
0
---> outputs:
3
NA
2

def main ( ) :
    import sys
    while True :
        n = input ( ) . split ( )
        if n == '' :
            return
        up1 , up2 = 0 , 0
        k = [ int ( x ) for x in n . split ( ) ]
        if k [ 0 ] > 0 :
            up1 += 1
            if k [ 1 ] >= 2 :
                up2 += 1
        if up2 == 0 :
            print ( 'NA' )
        else :
            print ( up1 + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1701
---> probID: geeksforgeeks_455_A
---> inputs:

---> outputs:
70


def get_graph_path ( m , n ) :
    if m == 1 or n == 1 :
        return 1
    return get_graph_path ( m - 1 , n ) + get_graph_path ( m , n - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1702
---> probID: geeksforgeeks_4086_A
---> inputs:

---> outputs:
335.0


def GFG ( a , d , n ) :
    sum = ( n / 2 ) * ( 2 * a + ( n - 1 ) * d )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
 97%|█████████▋| 1702/1746 [00:41<00:01, 41.55it/s]  File "./junk/1692576741860_5831/main.py", line 1
    def import ( arr , n ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1703
---> probID: geeksforgeeks_903_A
---> inputs:

---> outputs:
3


def import ( arr , n ) :
    import numpy as np
    class solution ( object ) :
        def __init__ ( self ) :
            self . n = n
        def countPairs ( self ) :
            return len ( self . n )
        def countPairs ( self ) :
            return len ( self . n )
        def countPairs ( self ) :
            return len ( self . n )
        def countPairs ( self ) :
            return len ( self . n )
    arr = [ 5 , 0 , 3 , 1 , 2 ]
    n = len ( arr )
    print ( countPairs ( arr , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1704
---> probID: geeksforgeeks_1000_A
---> inputs:

---> outputs:
4


def test_GFG ( arr , n ) :
    s = set ( arr )
    index = 0
    mp = { }
    for itr in s :
        index += 1
        mp [ itr ] = index
    for i in range ( n ) :
        arr [ i ] = mp [ arr [ i ] ]
    def query ( BIT ) :
        ans = 0
        while index > 0 :
            ans = max ( ans , BIT [ index ] )
            index -= index & ( - index )
        return ans
    def update ( BIT , index , n ) :
        x = query ( BIT , index - 1 , n )
        value = x + 1
        while index <= n :
            BIT [ index ] = max ( BIT [ index ] , value )
            index += index & ( - index )
    def find_LISLength ( arr ) :
        return len ( arr )
    for i in range ( 0 , n + 1 ) :
        BIT [ i ] = 0
    for i in range ( 0 , n + 1 ) :
        update ( BIT , arr [ i ] , n )
    ans = query ( BIT , n , n )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576741907_4839/main.py", line 15
    outer :
          ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1705
---> probID: codeforces_1598_B
---> inputs:
2
4
1 0 0 1 0
0 1 0 0 1
0 0 0 1 0
0 1 0 1 0
2
0 0 0 1 0
0 0 0 1 0
---> outputs:
YES
NO

def groups ( ) :
    f = open ( 'groups.txt' )
    Q = int ( f . readline ( ) )
    for i in range ( Q ) :
        N = int ( f . readline ( ) )
        schedule = [ [ ] for _ in range ( N ) ]
        x = 0
        for j in range ( N ) :
            line = f . readline ( )
            sr = re . split ( '\s+' , line )
            for k in range ( 5 ) :
                schedule [ x ] . append ( int ( sr [ k ] ) )
            x += 1
        check = False
        outer :
            for j in range ( 4 ) :
                for k in range ( j + 1 , 5 ) :
                    day1count = 0
                    day2count = 0
                    bothcount = 0
                    neither = 0
                    for l in schedule :
                        if schedule [ l ] [ j ] == 0 and schedule [ l ] [ k ] == 0 :
                            neither += 1
                        if schedule [ l ] [ j ] == 1 and schedule [ l ] [ k ] == 0 :
                            day1count += 1
                        elif schedule [ l ] [ j ] == 0 and schedule [ l ] [ k ] == 1 :
                            day2count += 1
                        elif schedule [ l ] [ j ] == 1 and schedule [ l ] [ k ] == 1 :
                            bothcount += 1
                    if neither > 0 :
                        continue
                    elif day1count > len ( schedule ) / 2 or day2count > len ( schedule ) / 2 :
                        continue
                    else :
                        check = True
                        break outer
            print ( check and "YES" )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576741933_2031/main.py", line 11
    INDENT
    ^
IndentationError: expected an indented block


-------------------------------------


---> lineNum: 1706
---> probID: projecteuler_p164_A
---> inputs:

---> outputs:
378158756814587

def test_p164 ( ) :
    assert [ 1 , 2 , 3 , 4 ] == [ 1 , 2 , 3 , 4 ]
    BASE = 10
    DIGITS = 20
    CONSECUTIVE = 3
    MAX_SUM = 9
    def run ( ) :
        ways = [ [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] , [ 1 , 2 , 3 , 4 ] ]
        return ways
    for prefix in [ 1 , 2 , 3 , 4 ] :
    INDENT

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1707
---> probID: codeforces_287_A
---> inputs:
####
.#..
####
....
---> outputs:
YES

def py ( ) :
    import sys
    import getopt
    import string
    import os
    import re
    import ast
    import ast . nodes
    import ast . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes
    import ast . nodes . nodes


---> console_out:
 
DIDN'T MATCH!! :(
 98%|█████████▊| 1707/1746 [00:41<00:00, 41.20it/s]  File "./junk/1692576741984_6651/main.py", line 1
    def class Solution ( matrix ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1708
---> probID: leetcode_766_A
---> inputs:

---> outputs:
true

def class Solution ( matrix ) :
    for r in range ( 1 , len ( matrix ) ) :
        for c in range ( 1 , len ( matrix [ 0 ] ) ) :
            if matrix [ r - 1 ] [ c - 1 ] != matrix [ r ] [ c ] :
                return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1709
---> probID: projecteuler_p094_A
---> inputs:

---> outputs:
518408346

def p094 ( ) :
    print ( [ 'p094' ] )
    LIMIT = library . pow ( 10 , 9 )
    sum = 0
    for s in range ( 1 , ( LIMIT + 1 ) // 3 + 1 ) :
        for t in range ( s - 2 , 0 , - 1 ) :
            if library . gcd ( s , t ) == 1 :
                a = s * t
                b = ( s ** 2 - t ** 2 ) // 2
                c = ( s ** 2 + t ** 2 ) // 2
                if a * 2 == c - 1 :
                    p = c * 3 - 1
                else :
                    p = c * 3 + 1
                if p <= LIMIT :
                    sum += p
            if a * 2 == c + 1 :
                p = c * 3 + 1
            else :
                p = c * 3 + 1
            if p <= LIMIT :
                sum += p
            if b * 2 == c - 1 :
                p = c * 3 - 1
            else :
                p = c * 3 + 1
            if p <= LIMIT :
                sum += p
    return str ( sum )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576742035_4255/main.py", line 1
    def import ( ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1710
---> probID: aizu_p00856_A
---> inputs:
6 1 0 0
7 1 0 0
7 2 0 0
6 6 1 1
2
5
7 10 0 6
1
2
3
4
5
6
0 0 0 0
---> outputs:
0.166667
0.000000
0.166667
0.619642
0.000000

def import ( ) :
    import sys
    while True :
        N , T , L , B = sys . argv [ 1 : ]
        if N == 0 and T == 0 and L == 0 and B == 0 :
            break
        square = [ ]
        for i in range ( L + 1 ) :
            square . append ( 1 )
        for i in range ( B + 1 ) :
            square . append ( 2 )
        dp = [ 0 ] * ( N + 1 )
        dp [ 0 ] [ 0 ] = 1
        for j in range ( T ) :
            for i in range ( N ) :
                for s in range ( 1 , 6 ) :
                    idx = 1
                    num = i + s
                    if square [ i ] == 1 :
                        idx = 2
                    if i + s > N :
                        num = 2 * N - ( i + s )
                    if square [ num ] == 2 and j + idx <= T :
                        dp [ 0 ] [ j + idx ] += dp [ i ] [ j ] * 1.0 / 6
                    elif j + idx <= T :
                        dp [ num ] [ j + idx ] += dp [ i ] [ j ] * 1.0 / 6
        goal = 0.0
        for i in range ( 0 , T ) :
            goal += dp [ N ] [ i ]
        sys . stdout . write ( "%.6f\n" % goal )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1711
---> probID: codeforces_1296_A
---> inputs:
5
2
2 3
4
2 2 8 8
3
3 3 3
4
5 5 5 5
4
1 1 1 1
---> outputs:
YES
NO
YES
NO
NO

def test_oddsum ( ) :
    x = symbols ( 'x' )
    t = symbols ( 't' , integer = True , positive = True )
    while t . is_odd :
        s = 0
        o = 0
        e = 0
        a = symbols ( 'a' , integer = True , positive = True )
        x = symbols ( 'x' , integer = True , positive = True )
        for i in a :
            x = x ** i
            s += x
            if x % 2 != 0 :
                o += 1
            else :
                e += 1
        if s % 2 != 0 :
            assert s == 0
        else :
            if o >= 1 and e >= 1 :
                assert s == 0
            else :
                assert not s == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1712
---> probID: geeksforgeeks_3343_A
---> inputs:

---> outputs:
3


def GFG ( H , n , K ) :
    inser = 0
    for i in range ( 1 , n ) :
        diff = abs ( H [ i ] - H [ i - 1 ] )
        if diff <= K :
            continue
        else :
            inser += math . ceil ( diff / K ) - 1
    return inser


---> console_out:
 
DIDN'T MATCH!! :(
 98%|█████████▊| 1712/1746 [00:41<00:00, 40.83it/s]

-------------------------------------


---> lineNum: 1713
---> probID: geeksforgeeks_4932_A
---> inputs:

---> outputs:
12


def GFG ( str , len ) :
    count = 1
    if len == 1 :
        return count
    if str [ 0 ] == str [ 1 ] :
        count *= 1
    else :
        count *= 2
    for j in range ( 1 , len - 1 ) :
        if str [ j ] == str [ j - 1 ] and str [ j ] == str [ j + 1 ] :
            count *= 1
        elif str [ j ] == str [ j - 1 ] or str [ j ] == str [ j + 1 ] or str [ j - 1 ] == str [ j + 1 ] :
            count *= 2
        else :
            count *= 3
    if str [ len - 1 ] == str [ len - 2 ] :
        count *= 1
    else :
        count *= 2
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1714
---> probID: codeforces_621_A
---> inputs:
3
1 2 3
---> outputs:
6

def test_evensum ( ) :
    import sys
    import doctest
    import os
    import random
    import time
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    import random
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576742158_1857/main.py", line 6
    current = int ( math . pow ( yield i , 2 ) )
                                 ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1715
---> probID: geeksforgeeks_3437_A
---> inputs:

---> outputs:
2


def get_perfect_squares ( n ) :
    perfect_squares = [ ]
    current , i = 1 , 1
    while current <= n :
        perfect_squares . append ( current )
        current = int ( math . pow ( yield i , 2 ) )
    return perfect_squares


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1716
---> probID: geeksforgeeks_1221_A
---> inputs:

---> outputs:
5.0


def GFG ( side1 , side2 ) :
    h = np . sqrt ( ( side1 ** 2 ) + ( side2 ** 2 ) )
    return h


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1717
---> probID: geeksforgeeks_3973_A
---> inputs:

---> outputs:
The two ODD elements are 5 & 1


def pythree_odd ( arr , size ) :
    xor2 = arr [ 0 ]
    set_bit_no = 0
    i = 0
    n = size - 2
    x , y = 0 , 0
    for i in range ( 1 , size ) :
        xor2 = xor2 ^ arr [ i ]
    set_bit_no = xor2 & ~ ( xor2 - 1 )
    for i in range ( size ) :
        if ( arr [ i ] & set_bit_no ) > 0 :
            x = x ^ arr [ i ]
        else :
            y = y ^ arr [ i ]
    print ( "The two ODD elements are %d & %d" % ( x , y ) )


---> console_out:
 
DIDN'T MATCH!! :(
 98%|█████████▊| 1717/1746 [00:41<00:00, 41.09it/s]  File "./junk/1692576742229_6143/main.py", line 20
    pos1 , pos2 += n - x
    ^
SyntaxError: illegal expression for augmented assignment


-------------------------------------


---> lineNum: 1718
---> probID: codeforces_1538_A
---> inputs:
5
5
1 5 4 3 2
8
2 1 3 4 5 6 8 7
8
4 2 3 1 8 6 7 5
4
3 4 2 1
4
2 3 1 4
---> outputs:
2
4
5
3
2

def test_strone_game ( ) :
    import sys
    t = sys . argv [ 1 ]
    while t :
        n = len ( t )
        ar = [ 0 ] * n
        max = 0
        min = 100000
        x = 0
        y = 0
        for i in range ( n ) :
            ar [ i ] = t [ i ]
            if ar [ i ] < min :
                min = ar [ i ]
                x = i + 1
            if ar [ i ] > max :
                max = ar [ i ]
                y = i + 1
        pos1 , pos2 = 1 , 1 , 1 , 1 , 0 , 0
        pos1 , pos2 += n - x
        if pos1 < pos2 :
            a , b = pos1 , pos2
        else :
            a , b = pos2 , pos1
        pos3 , pos4 += n - y
        if pos3 < pos4 :
            b , c = pos3 , pos4
        else :
            b , c = pos4 , pos3
        div = abs ( y - x )
        if div < a or div < b :
            mm , total = min ( a , b ) , total ( a , b )
            print ( total )
            t -= 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1719
---> probID: codeforces_724_A
---> inputs:
monday
tuesday
---> outputs:
NO

def main ( ) :
    import sys
    out = sys . stdout
    first = sys . argv [ 1 ]
    second = sys . argv [ 2 ]
    d = { 'monday' : 1 , 'tuesday' : 2 , 'wednesday' : 3 , 'thursday' : 4 , 'friday' : 5 , 'saturday' : 6 , 'sunday' : 7 }
    diff = 0
    if d [ second ] >= d [ first ] :
        diff = d [ second ] - d [ first ]
    else :
        diff = 7 - d [ first ] + d [ second ]
    ok = diff == 0 or diff == 2 or diff == 3
    out . write ( ok and 'YES' or 'NO' )
    out . flush ( )
    out . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1720
---> probID: codeforces_711_A
---> inputs:
6
OO|OX
XO|XX
OX|OO
XX|OX
OO|OO
OO|XX
---> outputs:
YES
++|OX
XO|XX
OX|OO
XX|OX
OO|OO
OO|XX

def main ( ) :
    import sys
    n = len ( sys . argv )
    f = False
    s = False
    ind = 0
    x = [ ]
    for i in range ( n ) :
        x . append ( sys . argv [ i ] )
        if f == False :
            if x [ i ] in [ 'OO' , 'OO' , 'OO' ] :
                f = True
                ind = i
    if f == True :
        print ( 'YES' )
        for i in range ( n ) :
            if i != ind :
                print ( x [ i ] )
            else :
                if x [ i ] [ : 2 ] == 'OO' :
                    print ( '++' , x [ i ] [ 2 : 5 ] + '\n' )
                elif x [ i ] [ 3 : 5 ] == 'OO' :
                    print ( x [ i ] [ : 3 ] + '++' , '\n' )
    else :
        print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576742301_6437/main.py", line 15
    do :
       ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1721
---> probID: geeksforgeeks_2481_A
---> inputs:

---> outputs:
1->2->3->4->5->6->7->8->9->1
1->2->3->4->6->7->8->9->1
1->2->3->4->6->7->8->1
1->2->3->6->7->8->1
2->3->6->7->8->2
2->3->6->8->2
2->3->8->2
2->3->2
2->2


def GFG ( head ) :
    class Node :
        data = 0
        next = None
        def __init__ ( self , x ) :
            self . data = x
            self . next = None
        def __next__ ( self , x ) :
            self . data = x
            self . next = None
    def print_list ( head ) :
        if head is None :
            return
        temp = head
        do :
            print ( temp . data , end = '' )
            temp = temp . next
        while temp is not head :
            print ( head . data )
    def delete_k ( head_ref , k ) :
        head = head_ref
        if head is None :
            return
        curr , prev = head , None
        while True :
            if curr . next is head and curr == head :
                break
            print_list ( head )
            for i in range ( k ) :
                prev = curr
                curr = curr . next
            if curr is head :
                prev = head
                while prev . next is head :
                    prev = prev . next
                head = curr . next
                prev . next = head
                head_ref = head
            elif curr . next is head :
                prev . next = head
            else :
                prev . next = curr . next
        return head
    def insert_k ( head_ref , x ) :
        head = head_ref
        temp = Node ( x )
        if head is None :
            temp . next = temp
            head_ref = temp
            return head_ref
        else :
            temp1 = head
            while temp1 . next is head :
                temp1 = temp1 . next
            temp1 . next = temp
            temp . next = head
        return head
    def main ( ) :
        head = None
        head = insert_k ( head , 1 )
        head = insert_k ( head , 2 )
        head = insert_k ( head , 3 )
        head = insert_k ( head , 4 )
        head = insert_k ( head , 5 )
        head = insert_k ( head , 6 )
        head = insert_k ( head , 7 )
        head = insert_k ( head , 8 )
        head = insert_k ( head , 9 )
        k = 4
        head = delete_k ( head , k )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1722
---> probID: geeksforgeeks_3246_A
---> inputs:

---> outputs:
4


def GFG ( cur , x , n ) :
    if x == 0 :
        return int ( '-inf' )
    if x > 0 :
        return abs ( ( n - cur ) / x )
    else :
        return abs ( ( cur - 1 ) / x )


---> console_out:
 
DIDN'T MATCH!! :(
 99%|█████████▊| 1722/1746 [00:41<00:00, 41.26it/s]

-------------------------------------


---> lineNum: 1723
---> probID: codeforces_723_A
---> inputs:
7 1 4
---> outputs:
6

def main ( ) :
    import sys
    import numpy
    import numpy . linalg
    import numpy . random
    import numpy . ma
    import numpy . ma
    import numpy . ma . extras
    import numpy . ma . extras
    import numpy . stats
    import numpy . stats
    import numpy . ndimage
    import numpy . ndimage
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements
    import numpy . ndimage . measurements


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1724
---> probID: geeksforgeeks_768_A
---> inputs:

---> outputs:
6


def GFG ( arr , n ) :
    ans = 0
    for i in range ( n ) :
        curr_gcd = 0
        for j in range ( i , n ) :
            curr_gcd = __gcd ( curr_gcd , arr [ j ] )
            ans += ( curr_gcd == 1 )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1725
---> probID: geeksforgeeks_4452_A
---> inputs:

---> outputs:
No


def get_GFG ( char ) :
    if char in [ 'a' , 'e' , 'i' , 'o' , 'u' ] :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576742423_7201/main.py", line 4
    

SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1726
---> probID: geeksforgeeks_2869_A
---> inputs:

---> outputs:
2


def GFG ( str ) :
    N = len ( str )
    dp

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1727
---> probID: geeksforgeeks_38_A
---> inputs:

---> outputs:
5


def GFG ( ) :
    limit = 10000000
    position = [ 0 ] * ( limit + 1 )
    sieve ( )
    position [ 0 ] = - 1
    position [ 1 ] = - 1
    pos = 0
    for i in range ( 2 , limit + 1 ) :
        if position [ i ] == 0 :
            position [ i ] = yield pos
            for j in range ( i * 2 , limit + 1 , i ) :
                position [ j ] = - 1


---> console_out:
 
DIDN'T MATCH!! :(
 99%|█████████▉| 1727/1746 [00:41<00:00, 41.07it/s]

-------------------------------------


---> lineNum: 1728
---> probID: geeksforgeeks_2602_A
---> inputs:

---> outputs:
43758


def GFG ( len ) :
    DP_s = 9
    num_monotone = [ 0 ] * DP_s
    DP = [ [ 0 ] * DP_s , [ 0 ] * DP_s ]
    for i in range ( DP_s ) :
        DP [ 0 ] [ i ] = i + 1
    for i in range ( len ) :
        DP [ i ] [ 0 ] = 1
    for i in range ( 1 , len ) :
        for j in range ( 1 , DP_s ) :
            DP [ i ] [ j ] = DP [ i - 1 ] [ j ] + DP [ i ] [ j - 1 ]
    return DP [ len - 1 ] [ DP_s - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1729
---> probID: geeksforgeeks_2609_A
---> inputs:

---> outputs:
43758


def GFG ( len ) :
    DP_s = 9
    num_monotone = [ 0 ] * DP_s
    DP = [ [ 0 ] * DP_s , [ 0 ] * DP_s ]
    for i in range ( DP_s ) :
        DP [ 0 ] [ i ] = i + 1
    for i in range ( len ) :
        DP [ i ] [ 0 ] = 1
    for i in range ( 1 , len ) :
        for j in range ( 1 , DP_s ) :
            DP [ i ] [ j ] = DP [ i - 1 ] [ j ] + DP [ i ] [ j - 1 ]
    return DP [ len - 1 ] [ DP_s - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1730
---> probID: geeksforgeeks_1604_A
---> inputs:

---> outputs:
8


def GFG ( a , n , l , r ) :
    mx , k = 0 , 0
    for i in range ( n ) :
        mx = max ( mx , a [ i ] )
    count = [ 0 ] * mx + 1
    for i in range ( len ( count ) ) :
        count [ i ] = 0
    for i in range ( n ) :
        count [ a [ i ] ] += 1
    res = [ 0 ] * mx + 1
    l , r = min ( l , r ) , min ( r , l )
    for num in range ( 1 , mx + 1 ) :
        k = max ( num - l - 1 , 0 )
        res [ num ] = max ( res [ num - 1 ] , num * count [ num ] + res [ k ] )
    return res [ mx ]


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576742544_3047/main.py", line 18
    break outer
          ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1731
---> probID: codeforces_1680_B
---> inputs:
6
1 3
ERR
2 2
ER
RE
2 2
ER
ER
1 1
R
4 3
EEE
EEE
ERR
EER
3 3
EEE
EER
REE
---> outputs:
YES
NO
YES
YES
YES
NO

def test_b1680 ( ) :
    """
 Test the b1680 algorithm.
 """
    data = np . array ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] )
    T = data . shape [ 0 ]
    for t in range ( T ) :
        R , C = t
        A = [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ]
        r = - 1
        c = - 1
        outer = [ ]
        for rr in range ( R ) :
            for cc in range ( C ) :
                if A [ rr , cc ] == 'R' :
                    r = rr
                    c = cc
                    break outer
        ok = True
        for rr in range ( r + 1 , R ) :
            for cc in range ( c ) :
                if A [ rr , cc ] == 'R' :
                    ok = False
        assert ok


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1732
---> probID: geeksforgeeks_3665_A
---> inputs:

---> outputs:
Area is 78.550000


def test ( ) :
    import math
    def find_area ( r ) :
        return math . pow ( r , 2 )
    assert find_area ( 5 ) == 5


---> console_out:
 
DIDN'T MATCH!! :(
 99%|█████████▉| 1732/1746 [00:41<00:00, 41.29it/s]

-------------------------------------


---> lineNum: 1733
---> probID: codeforces_700_B
---> inputs:
7 2
1 5 6 2
1 3
3 2
4 5
3 7
4 3
4 6
---> outputs:
6

def pydm_s ( ) :
    global below
    vis = [ ]
    result = 0
    K = len ( sys . argv )
    adj = [ ]
    unis = [ ]
    for i in range ( N ) :
        adj . append ( [ ] )
    for i in range ( 2 * K ) :
        town = sys . argv [ i ] - 1
        unis . append ( town )
    for i in range ( N - 1 ) :
        x = sys . argv [ i ] - 1
        y = sys . argv [ i + 1 ] - 1
        adj [ x ] . append ( y )
        adj [ y ] . append ( x )
    below = [ ]
    vis = [ ]
    dfs ( 0 )
    print ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1734
---> probID: geeksforgeeks_2922_A
---> inputs:

---> outputs:
90


def test_GFG ( ) :
    N = 6
    assert nth_term ( N ) == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1735
---> probID: geeksforgeeks_807_A
---> inputs:

---> outputs:
70


def get_height ( X ) :
    import numpy as np
    import scipy . misc
    import scipy . optimize
    from scipy . optimize import leastsq
    X = np . arange ( 35 )
    return ( 2 * X )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1736
---> probID: geeksforgeeks_3897_A
---> inputs:

---> outputs:
2


def pythree_graph ( graph , u , v , k ) :
    """Return a graph with the given k-th edge and a graph of the given v-th edges."""
    if k == 0 and u == v :
        return 1
    if k == 1 and graph [ u , v ] == 1 :
        return 1
    if k <= 0 :
        return 0
    count = 0
    for i in range ( V ) :
        if graph [ u , i ] == 1 :
            count += countwalks ( graph , i , v , k - 1 )
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1737
---> probID: geeksforgeeks_2556_A
---> inputs:

---> outputs:
2
3
8
16


def GFG ( n , b ) :
    if n < 0 :
        return 0
    if n <= 1 :
        return 1
    M_PI = 3.141592
    M_E = 2.7182
    x = ( ( n * math . log10 ( n / M_E ) + math . log10 ( 2 * math . pi * n ) / 2.0 ) ) / ( math . log10 ( b ) )
    return int ( math . floor ( x ) + 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 99%|█████████▉| 1737/1746 [00:42<00:00, 41.69it/s]

-------------------------------------


---> lineNum: 1738
---> probID: aizu_p02346_A
---> inputs:
3 5
0 1 1
0 2 2
0 3 3
1 1 2
1 2 2
---> outputs:
3
2

def main ( ) :
    import sys
    import getopt
    global n , q , init
    init = 1
    for o , a in getopt . getopt ( sys . argv [ 1 : ] , "qv" ) :
        if o == '-v' :
            add ( n )
        else :
            print ( sum ( a for a in a if a ) )
    global nodes
    global size
    def init ( n ) :
        size = 1
        while size < n :
            size *= 2
        nodes = [ ]
    def add ( target , value ) :
        while target in nodes :
            nodes . append ( target )
            target += target & ( - target )
    def sum ( s , t ) :
        return sum ( t ) - sum ( s - 1 )
    def sum ( t ) :
        res = 0
        while t :
            res += nodes [ t ]
            t -= t & ( - t )
        return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1739
---> probID: atcoder_ARC066_B
---> inputs:
3
2 1 4
2
1 1
2 3
---> outputs:
5


def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , '' )
    except getopt . error as msg :
        sys . stdout = sys . stderr
        print ( msg )
        print ( """usage: %s [-n] [-o <output>]""" % sys . argv [ 0 ] )
        sys . exit ( 2 )
    if args == [ ] :
        usage ( )
        sys . exit ( 1 )
    if len ( args ) == 0 :
        usage ( )
        sys . exit ( 1 )
    if len ( args ) > 1 :
        usage ( )
        sys . exit ( 1 )
    if len ( args ) == 1 :
        usage ( )
        sys . exit ( 1 )
    if len ( args ) == 2 :
        a , b = args
    else :
        a , b = solve ( args [ 0 ] )
    if len ( args ) == 2 :
        return ( 2 * a + b ) % 1000000007
    else :
        return ( 2 * b + a ) % 1000000007


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1740
---> probID: aizu_p00712_A
---> inputs:
2 3 120 3
2 3 300 3
2 3 299 3
2 3 12 3
2 3 12000 7
54 795 12000 7
2 3 300 1
2 1 200 5
2 4 54 2
0 0 0 0
---> outputs:
4
7
6
2
42
1
0
9
3

def main ( ) :
    import sys
    while True :
        numerator = sys . stdin . readline ( ) . rstrip ( )
        denominator = sys . stdin . readline ( ) . rstrip ( )
        maxproduct = sys . stdin . readline ( ) . rstrip ( )
        parts = sys . stdin . readline ( ) . rstrip ( )
        if parts == '' :
            break
        count = 0
        count += Judge ( numerator , denominator , parts , 1 , 0 )
        print ( count )
    def Judge ( p , q , separate , now_pro , prev_deno ) :
        count = 0
        if p == 0 :
            count += 1
        if separate <= 0 :
            return count
        deno = maxproduct / now_pro + 1
        while separate * q < p * deno :
            deno -= 1
        while p * deno >= q and prev_deno <= deno :
            subtraction_deno = q * deno
            subtraction_nume = p * deno - q
            if now_pro * deno <= maxproduct :
                count += Judge ( subtraction_nume , subtraction_deno , separate - 1 , now_pro * deno , deno )
            deno -= 1
        return count
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1741
---> probID: geeksforgeeks_1936_A
---> inputs:

---> outputs:
1


def get_GFG ( s ) :
    """
 Return a string of the form GFG.
 """
    s = ''
    ReverseString = s . split ( )
    for i in range ( len ( s ) / 2 ) :
        temp = s [ i ]
        s [ i ] = s [ - i - 1 ]
        s [ - i - 1 ] = temp
    return '' . join ( reversed ( s ) )
    def binary_conversion ( m ) :
        while m != 0 :
            tmp = m % 2
            s += str ( tmp )
            m = int ( m / 2 )
        s = ReverseString ( s )
    def find_character ( n , m , i ) :
        binary_conversion ( m )
        s1 = ''
        for x in range ( n ) :
            for y in range ( len ( s ) ) :
                if s [ y ] == '1' :
                    s1 += '10'
                else :
                    s1 += '01'
            s = s1
            s1 = ''
        return s [ i ] - '0'
    def main ( ) :
        m , n , i = 5 , 8
        print ( find_character ( n , m , i ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1742
---> probID: geeksforgeeks_329_A
---> inputs:

---> outputs:
Number of subsets = 7


def test_GFG ( ) :
    """Test the number of subsets of the generators."""
    us = set ( )
    even_count = 0
    for i in range ( n ) :
        if i % 2 == 0 :
            us . add ( i )
    even_count = len ( us )
    assert int ( pow ( 2 , even_count ) - 1 ) == 0


---> console_out:
 
DIDN'T MATCH!! :(
100%|█████████▉| 1742/1746 [00:42<00:00, 41.59it/s]

-------------------------------------


---> lineNum: 1743
---> probID: geeksforgeeks_1575_A
---> inputs:

---> outputs:
144


def test_GFG ( ) :
    """Test the LM (LM) algorithm."""
    MAX = 1000
    f = [ 0 ] * MAX
    fib = [ 0 ] * MAX
    if n == 0 :
        return
    if n == 1 or n == 2 :
        return ( f [ n ] , 1 )
    if f [ n ] != 0 :
        return f [ n ]
    k = 0
    if ( n & 1 ) :
        k = ( n + 1 ) // 2
    else :
        k = n // 2
    if ( n & 1 ) :
        f [ n ] = ( fib [ k ] * fib [ k ] + fib [ k - 1 ] * fib [ k - 1 ] )
    else :
        f [ n ] = ( 2 * fib [ k - 1 ] + fib [ k ] ) * fib [ k ]
    return f


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1744
---> probID: geeksforgeeks_190_A
---> inputs:

---> outputs:
50


def GFG ( n , w ) :
    x , sum = 0 , 0
    if w >= 0 and w <= 8 :
        x , sum = 9 - w , 9 + w
    elif w >= - 9 and w <= - 1 :
        x , sum = 10 + w , 10 + w
    sum = int ( pow ( 10 , n - 2 ) )
    sum = ( x * sum )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692576742878_2160/main.py", line 22
    else :
    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1745
---> probID: geeksforgeeks_4161_A
---> inputs:

---> outputs:
c


def find_kth_char ( s , k ) :
    s = s . lower ( )
    i = 0
    total_len = 0
    while i < len ( s ) :
        if ord ( s [ i ] ) == ord ( 'a' ) :
            total_len += 1
            if total_len == k :
                return s [ i ]
            i += 1
        else :
            n = 0
            while i < len ( s ) and not ord ( s [ i ] ) == ord ( '0' ) :
                n = n * 10 + ( s [ i ] - ord ( '0' ) )
                i += 1
            next_total_len = total_len * n
            if k <= next_total_len :
                pos = k % total_len
            else :
                pos = total_len
            return find_kth_char ( s , pos )
        else :
            total_len = next_total_len
    return ' '


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1746
---> probID: geeksforgeeks_3285_A
---> inputs:

---> outputs:
15


def test_gf_count_nonempty_substr ( ) :
    assert gf_count_nonempty_substr ( [ ] , ZZ ) == 0
    assert gf_count_nonempty_substr ( [ 1 ] , ZZ ) == 1
    assert gf_count_nonempty_substr ( [ 1 , 2 ] , ZZ ) == 2
    assert gf_count_nonempty_substr ( [ 1 , 2 , 3 ] , ZZ ) == 3
    assert gf_count_nonempty_substr ( [ 1 , 2 , 3 ] , ZZ ) == 3
    assert gf_count_nonempty_substr ( [ 1 , 2 , 3 ] , ZZ ) == 3
    assert gf_count_nonempty_substr ( [ 1 , 2 , 3 ] , ZZ ) == 3
    assert gf_count_nonempty_substr ( [ 1 , 2 , 3 ] , ZZ ) == 3
    assert gf_count_nonempty_substr ( [ 1 , 2 , 3 ] , ZZ ) == 3
    assert gf_count_nonempty_substr ( [ 1 , 2 , 3 ] , ZZ ) == 3
    assert gf_count_nonempty_substr ( [ 1 , 2 , 3 ] , ZZ ) == 3
    assert gf_count_nonempty_substr ( [ 1 , 2 , 3 ] , ZZ ) == 3
    assert gf_count_

---> console_out:
 
DIDN'T MATCH!! :(
100%|██████████| 1746/1746 [00:42<00:00, 41.32it/s]
Success-RuntimeEq - 8, TotalChecked-RuntimeEq - 1746, Total-RuntimeEq - 1746
RunEqAcc: 8/1746 = 0.4581901489117984 %
matches_bySource {'aizu': 2, 'atcoder': 1, 'codeforces': 1, 'codejam': 0, 'geeksforgeeks': 4, 'leetcode': 0, 'projecteuler': 0}
totalChecked_bySource {'aizu': 190, 'atcoder': 97, 'codeforces': 401, 'codejam': 4, 'geeksforgeeks': 995, 'leetcode': 18, 'projecteuler': 41}
