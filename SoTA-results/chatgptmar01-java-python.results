  0%|          | 0/1746 [00:00<?, ?it/s]  0%|          | 1/1746 [00:00<04:57,  5.86it/s]  0%|          | 2/1746 [00:00<04:31,  6.42it/s]  0%|          | 3/1746 [00:00<03:57,  7.34it/s]  0%|          | 4/1746 [00:00<04:04,  7.11it/s]  0%|          | 5/1746 [00:00<04:17,  6.75it/s]  0%|          | 6/1746 [00:00<04:09,  6.98it/s]  0%|          | 7/1746 [00:01<04:15,  6.80it/s]  0%|          | 8/1746 [00:01<04:16,  6.79it/s]  1%|          | 9/1746 [00:01<04:12,  6.87it/s]  1%|          | 10/1746 [00:01<04:09,  6.97it/s]  1%|          | 11/1746 [00:01<04:07,  7.02it/s]  1%|          | 12/1746 [00:01<04:11,  6.89it/s]  1%|          | 13/1746 [00:01<04:10,  6.92it/s]  1%|          | 14/1746 [00:02<04:10,  6.91it/s]  1%|          | 15/1746 [00:02<04:20,  6.63it/s]  1%|          | 16/1746 [00:02<05:08,  5.60it/s]  1%|          | 17/1746 [00:02<04:38,  6.21it/s]  1%|          | 18/1746 [00:04<18:16,  1.58it/s]  1%|          | 19/1746 [00:04<14:18,  2.01it/s]  1%|          | 20/1746 [00:04<11:27,  2.51it/s]  1%|          | 21/1746 [00:04<09:24,  3.06it/s]  1%|▏         | 22/1746 [00:04<07:51,  3.66it/s]  1%|▏         | 23/1746 [00:05<06:44,  4.26it/s]  1%|▏         | 24/1746 [00:05<05:59,  4.79it/s]  1%|▏         | 25/1746 [00:05<05:52,  4.89it/s]  1%|▏         | 26/1746 [00:05<05:26,  5.26it/s]  2%|▏         | 27/1746 [00:05<05:11,  5.52it/s]  2%|▏         | 28/1746 [00:05<04:59,  5.74it/s]  2%|▏         | 29/1746 [00:06<04:54,  5.84it/s]  2%|▏         | 30/1746 [00:06<04:46,  6.00it/s]  2%|▏         | 31/1746 [00:06<04:33,  6.28it/s]  2%|▏         | 32/1746 [00:06<04:24,  6.47it/s]  2%|▏         | 33/1746 [00:06<04:46,  5.98it/s]  2%|▏         | 34/1746 [00:06<04:36,  6.19it/s]  2%|▏         | 35/1746 [00:07<04:30,  6.33it/s]  2%|▏         | 36/1746 [00:07<04:25,  6.45it/s]  2%|▏         | 37/1746 [00:07<04:24,  6.45it/s]  2%|▏         | 38/1746 [00:07<04:22,  6.52it/s]  2%|▏         | 39/1746 [00:07<04:20,  6.55it/s]  2%|▏         | 40/1746 [00:07<04:24,  6.44it/s]  2%|▏         | 41/1746 [00:07<04:18,  6.60it/s]  2%|▏         | 42/1746 [00:08<04:10,  6.81it/s]  2%|▏         | 43/1746 [00:08<04:13,  6.71it/s]  3%|▎         | 44/1746 [00:08<04:13,  6.73it/s]  3%|▎         | 45/1746 [00:08<04:10,  6.80it/s]  3%|▎         | 46/1746 [00:08<04:11,  6.76it/s]  3%|▎         | 47/1746 [00:08<04:10,  6.79it/s]  3%|▎         | 48/1746 [00:08<04:07,  6.85it/s]  3%|▎         | 49/1746 [00:09<03:44,  7.56it/s]  3%|▎         | 50/1746 [00:09<03:57,  7.14it/s]  3%|▎         | 51/1746 [00:09<04:09,  6.78it/s]  3%|▎         | 52/1746 [00:09<03:45,  7.50it/s]  3%|▎         | 53/1746 [00:09<03:56,  7.16it/s]  3%|▎         | 54/1746 [00:09<04:07,  6.83it/s]  3%|▎         | 55/1746 [00:09<04:21,  6.47it/s]  3%|▎         | 56/1746 [00:10<04:24,  6.39it/s]  3%|▎         | 57/1746 [00:10<04:21,  6.45it/s]  3%|▎         | 58/1746 [00:10<04:44,  5.94it/s]  3%|▎         | 59/1746 [00:10<04:34,  6.14it/s]  3%|▎         | 60/1746 [00:10<04:35,  6.12it/s]  3%|▎         | 61/1746 [00:10<04:28,  6.28it/s]  4%|▎         | 62/1746 [00:11<04:19,  6.49it/s]  4%|▎         | 63/1746 [00:11<04:17,  6.54it/s]  4%|▎         | 64/1746 [00:11<04:19,  6.49it/s]  4%|▎         | 65/1746 [00:11<04:20,  6.44it/s]  4%|▍         | 66/1746 [00:11<04:25,  6.32it/s]  4%|▍         | 67/1746 [00:11<04:20,  6.43it/s]  4%|▍         | 68/1746 [00:12<04:35,  6.09it/s]  4%|▍         | 69/1746 [00:12<04:38,  6.03it/s]  4%|▍         | 70/1746 [00:12<04:41,  5.96it/s]  4%|▍         | 71/1746 [00:12<04:32,  6.14it/s]  4%|▍         | 72/1746 [00:12<04:24,  6.34it/s]  4%|▍         | 73/1746 [00:12<04:17,  6.50it/s]  4%|▍         | 74/1746 [00:12<04:12,  6.62it/s]  4%|▍         | 75/1746 [00:13<04:09,  6.69it/s]  4%|▍         | 76/1746 [00:13<04:09,  6.70it/s]  4%|▍         | 77/1746 [00:13<04:06,  6.78it/s]  4%|▍         | 78/1746 [00:13<04:11,  6.63it/s]  5%|▍         | 79/1746 [00:13<04:13,  6.58it/s]  5%|▍         | 80/1746 [00:13<04:19,  6.43it/s]  5%|▍         | 81/1746 [00:14<04:14,  6.54it/s]  5%|▍         | 82/1746 [00:14<04:15,  6.51it/s]  5%|▍         | 83/1746 [00:14<04:11,  6.62it/s]  5%|▍         | 84/1746 [00:14<04:07,  6.71it/s]  5%|▍         | 85/1746 [00:14<04:10,  6.63it/s]  5%|▍         | 86/1746 [00:14<04:09,  6.66it/s]  5%|▍         | 87/1746 [00:14<04:08,  6.67it/s]  5%|▌         | 88/1746 [00:15<03:44,  7.38it/s]  5%|▌         | 89/1746 [00:15<03:53,  7.11it/s]  5%|▌         | 90/1746 [00:15<03:56,  7.00it/s]  5%|▌         | 91/1746 [00:15<04:11,  6.59it/s]  5%|▌         | 92/1746 [00:15<04:23,  6.27it/s]  5%|▌         | 93/1746 [00:15<04:21,  6.33it/s]  5%|▌         | 94/1746 [00:15<04:19,  6.36it/s]  5%|▌         | 95/1746 [00:16<04:08,  6.64it/s]  5%|▌         | 96/1746 [00:16<04:17,  6.41it/s]  6%|▌         | 97/1746 [00:16<04:13,  6.49it/s]  6%|▌         | 98/1746 [00:16<04:14,  6.48it/s]  6%|▌         | 99/1746 [00:16<04:30,  6.08it/s]  6%|▌         | 100/1746 [00:16<04:01,  6.81it/s]  6%|▌         | 101/1746 [00:17<04:05,  6.70it/s]  6%|▌         | 102/1746 [00:17<04:07,  6.65it/s]  6%|▌         | 103/1746 [00:17<04:07,  6.63it/s]  6%|▌         | 104/1746 [00:17<04:06,  6.65it/s]  6%|▌         | 105/1746 [00:17<04:02,  6.77it/s]  6%|▌         | 106/1746 [00:17<04:07,  6.63it/s]  6%|▌         | 107/1746 [00:17<04:21,  6.28it/s]  6%|▌         | 108/1746 [00:18<04:15,  6.41it/s]  6%|▌         | 109/1746 [00:18<04:16,  6.38it/s]  6%|▋         | 110/1746 [00:18<04:15,  6.41it/s]  6%|▋         | 111/1746 [00:18<04:08,  6.57it/s]  6%|▋         | 112/1746 [00:18<04:09,  6.55it/s]  6%|▋         | 113/1746 [00:18<04:19,  6.30it/s]  7%|▋         | 114/1746 [00:19<04:15,  6.39it/s]  7%|▋         | 115/1746 [00:19<04:15,  6.39it/s]  7%|▋         | 116/1746 [00:19<04:21,  6.24it/s]  7%|▋         | 117/1746 [00:19<04:13,  6.42it/s]  7%|▋         | 118/1746 [00:19<03:49,  7.10it/s]  7%|▋         | 119/1746 [00:19<03:56,  6.89it/s]  7%|▋         | 120/1746 [00:19<04:19,  6.26it/s]  7%|▋         | 121/1746 [00:20<04:15,  6.35it/s]  7%|▋         | 122/1746 [00:20<04:17,  6.31it/s]  7%|▋         | 123/1746 [00:20<04:26,  6.08it/s]  7%|▋         | 124/1746 [00:20<04:22,  6.18it/s]  7%|▋         | 125/1746 [00:20<04:26,  6.08it/s]  7%|▋         | 126/1746 [00:20<03:58,  6.79it/s]  7%|▋         | 127/1746 [00:21<04:05,  6.59it/s]  7%|▋         | 128/1746 [00:21<03:59,  6.77it/s]  7%|▋         | 129/1746 [00:21<04:08,  6.51it/s]  7%|▋         | 130/1746 [00:21<04:10,  6.46it/s]  8%|▊         | 131/1746 [00:21<04:14,  6.35it/s]  8%|▊         | 132/1746 [00:21<04:28,  6.02it/s]  8%|▊         | 133/1746 [00:22<04:32,  5.91it/s]  8%|▊         | 134/1746 [00:22<04:22,  6.13it/s]  8%|▊         | 135/1746 [00:22<04:38,  5.79it/s]  8%|▊         | 136/1746 [00:22<04:34,  5.87it/s]  8%|▊         | 137/1746 [00:22<04:20,  6.17it/s]  8%|▊         | 138/1746 [00:22<04:16,  6.27it/s]  8%|▊         | 139/1746 [00:23<04:17,  6.25it/s]  8%|▊         | 140/1746 [00:23<04:08,  6.46it/s]  8%|▊         | 141/1746 [00:23<04:18,  6.21it/s]  8%|▊         | 142/1746 [00:23<04:27,  6.00it/s]  8%|▊         | 143/1746 [00:23<04:18,  6.20it/s]  8%|▊         | 144/1746 [00:23<04:26,  6.02it/s]  8%|▊         | 145/1746 [00:23<04:15,  6.26it/s]  8%|▊         | 146/1746 [00:24<04:10,  6.38it/s]  8%|▊         | 147/1746 [00:24<04:04,  6.53it/s]  8%|▊         | 148/1746 [00:24<04:09,  6.41it/s]  9%|▊         | 149/1746 [00:24<04:25,  6.01it/s]  9%|▊         | 150/1746 [00:24<04:29,  5.91it/s]  9%|▊         | 151/1746 [00:24<04:19,  6.14it/s]  9%|▊         | 152/1746 [00:25<04:05,  6.48it/s]  9%|▉         | 153/1746 [00:25<03:41,  7.18it/s]  9%|▉         | 154/1746 [00:25<03:42,  7.17it/s]  9%|▉         | 155/1746 [00:25<03:49,  6.94it/s]  9%|▉         | 156/1746 [00:25<03:51,  6.87it/s]  9%|▉         | 157/1746 [00:25<03:45,  7.03it/s]  9%|▉         | 158/1746 [00:25<03:47,  6.97it/s]  9%|▉         | 159/1746 [00:26<03:52,  6.81it/s]  9%|▉         | 160/1746 [00:26<03:52,  6.81it/s]  9%|▉         | 161/1746 [00:26<03:47,  6.98it/s]  9%|▉         | 162/1746 [00:26<03:43,  7.10it/s]  9%|▉         | 163/1746 [00:26<03:50,  6.88it/s]  9%|▉         | 164/1746 [00:26<03:57,  6.67it/s]  9%|▉         | 165/1746 [00:26<04:05,  6.43it/s] 10%|▉         | 166/1746 [00:27<04:02,  6.51it/s] 10%|▉         | 167/1746 [00:27<03:58,  6.61it/s] 10%|▉         | 168/1746 [00:27<04:00,  6.56it/s] 10%|▉         | 169/1746 [00:27<03:49,  6.88it/s] 10%|▉         | 170/1746 [00:27<03:42,  7.08it/s] 10%|▉         | 171/1746 [00:27<03:44,  7.02it/s] 10%|▉         | 172/1746 [00:27<03:46,  6.95it/s] 10%|▉         | 173/1746 [00:28<03:44,  7.02it/s] 10%|▉         | 174/1746 [00:28<04:01,  6.51it/s] 10%|█         | 175/1746 [00:28<03:51,  6.79it/s] 10%|█         | 176/1746 [00:28<04:04,  6.42it/s] 10%|█         | 177/1746 [00:28<04:08,  6.31it/s] 10%|█         | 178/1746 [00:28<04:11,  6.23it/s] 10%|█         | 179/1746 [00:29<04:14,  6.15it/s] 10%|█         | 180/1746 [00:29<04:09,  6.28it/s] 10%|█         | 181/1746 [00:29<04:05,  6.36it/s] 10%|█         | 182/1746 [00:29<04:00,  6.49it/s] 10%|█         | 183/1746 [00:29<03:58,  6.56it/s] 11%|█         | 184/1746 [00:29<04:14,  6.13it/s] 11%|█         | 185/1746 [00:30<04:13,  6.17it/s] 11%|█         | 186/1746 [00:30<04:04,  6.39it/s] 11%|█         | 187/1746 [00:30<04:07,  6.29it/s] 11%|█         | 188/1746 [00:30<04:02,  6.42it/s] 11%|█         | 189/1746 [00:30<04:04,  6.38it/s] 11%|█         | 190/1746 [00:30<04:01,  6.43it/s] 11%|█         | 191/1746 [00:30<04:04,  6.37it/s] 11%|█         | 192/1746 [00:31<03:59,  6.49it/s] 11%|█         | 193/1746 [00:31<04:02,  6.40it/s] 11%|█         | 194/1746 [00:31<04:11,  6.17it/s] 11%|█         | 195/1746 [00:31<04:02,  6.39it/s] 11%|█         | 196/1746 [00:31<03:56,  6.56it/s] 11%|█▏        | 197/1746 [00:31<03:58,  6.49it/s] 11%|█▏        | 198/1746 [00:32<03:58,  6.48it/s] 11%|█▏        | 199/1746 [00:32<04:04,  6.33it/s] 11%|█▏        | 200/1746 [00:32<04:04,  6.31it/s] 12%|█▏        | 201/1746 [00:32<03:57,  6.50it/s] 12%|█▏        | 202/1746 [00:32<04:04,  6.31it/s] 12%|█▏        | 203/1746 [00:32<04:01,  6.39it/s] 12%|█▏        | 204/1746 [00:33<03:53,  6.61it/s] 12%|█▏        | 205/1746 [00:33<03:55,  6.54it/s] 12%|█▏        | 206/1746 [00:33<03:54,  6.56it/s] 12%|█▏        | 207/1746 [00:33<04:03,  6.31it/s] 12%|█▏        | 208/1746 [00:33<03:58,  6.45it/s] 12%|█▏        | 209/1746 [00:33<03:53,  6.58it/s] 12%|█▏        | 210/1746 [00:33<04:01,  6.35it/s] 12%|█▏        | 211/1746 [00:34<03:49,  6.67it/s] 12%|█▏        | 212/1746 [00:34<03:48,  6.71it/s] 12%|█▏        | 213/1746 [00:34<03:45,  6.79it/s] 12%|█▏        | 214/1746 [00:34<03:55,  6.49it/s] 12%|█▏        | 215/1746 [00:34<03:51,  6.63it/s] 12%|█▏        | 216/1746 [00:34<04:02,  6.30it/s] 12%|█▏        | 217/1746 [00:35<03:58,  6.42it/s] 12%|█▏        | 218/1746 [00:35<03:53,  6.53it/s] 13%|█▎        | 219/1746 [00:35<03:54,  6.52it/s] 13%|█▎        | 220/1746 [00:35<03:51,  6.59it/s] 13%|█▎        | 221/1746 [00:35<04:00,  6.35it/s] 13%|█▎        | 222/1746 [00:35<04:02,  6.29it/s] 13%|█▎        | 223/1746 [00:35<04:00,  6.34it/s] 13%|█▎        | 224/1746 [00:36<03:58,  6.38it/s] 13%|█▎        | 225/1746 [00:36<04:00,  6.32it/s] 13%|█▎        | 226/1746 [00:36<03:49,  6.61it/s] 13%|█▎        | 227/1746 [00:36<03:49,  6.62it/s] 13%|█▎        | 228/1746 [00:36<03:47,  6.67it/s] 13%|█▎        | 229/1746 [00:36<03:50,  6.59it/s] 13%|█▎        | 230/1746 [00:36<03:46,  6.70it/s] 13%|█▎        | 231/1746 [00:37<03:44,  6.75it/s] 13%|█▎        | 232/1746 [00:37<03:50,  6.56it/s] 13%|█▎        | 233/1746 [00:37<03:53,  6.48it/s] 13%|█▎        | 234/1746 [00:37<04:04,  6.19it/s] 13%|█▎        | 235/1746 [00:37<03:53,  6.48it/s] 14%|█▎        | 236/1746 [00:37<03:55,  6.41it/s] 14%|█▎        | 237/1746 [00:38<03:54,  6.44it/s] 14%|█▎        | 238/1746 [00:38<03:50,  6.56it/s] 14%|█▎        | 239/1746 [00:38<03:36,  6.96it/s] 14%|█▎        | 240/1746 [00:38<03:46,  6.66it/s] 14%|█▍        | 241/1746 [00:38<03:56,  6.35it/s] 14%|█▍        | 242/1746 [00:38<03:59,  6.28it/s] 14%|█▍        | 243/1746 [00:38<03:47,  6.60it/s] 14%|█▍        | 244/1746 [00:39<03:56,  6.35it/s] 14%|█▍        | 245/1746 [00:39<03:34,  7.01it/s] 14%|█▍        | 246/1746 [00:39<03:34,  7.00it/s] 14%|█▍        | 247/1746 [00:39<03:39,  6.84it/s] 14%|█▍        | 248/1746 [00:39<03:41,  6.75it/s] 14%|█▍        | 249/1746 [00:39<03:39,  6.83it/s] 14%|█▍        | 250/1746 [00:40<03:54,  6.38it/s] 14%|█▍        | 251/1746 [00:40<03:46,  6.59it/s] 14%|█▍        | 252/1746 [00:40<03:50,  6.47it/s] 14%|█▍        | 253/1746 [00:40<04:06,  6.05it/s] 15%|█▍        | 254/1746 [00:40<04:00,  6.21it/s] 15%|█▍        | 255/1746 [00:40<03:34,  6.94it/s] 15%|█▍        | 256/1746 [00:40<03:44,  6.64it/s] 15%|█▍        | 257/1746 [00:41<03:42,  6.70it/s] 15%|█▍        | 258/1746 [00:41<03:52,  6.40it/s] 15%|█▍        | 259/1746 [00:41<03:46,  6.57it/s] 15%|█▍        | 260/1746 [00:41<03:41,  6.70it/s] 15%|█▍        | 261/1746 [00:41<03:36,  6.84it/s] 15%|█▌        | 262/1746 [00:41<03:37,  6.82it/s] 15%|█▌        | 263/1746 [00:42<03:39,  6.76it/s] 15%|█▌        | 264/1746 [00:42<03:36,  6.84it/s] 15%|█▌        | 265/1746 [00:42<03:44,  6.59it/s] 15%|█▌        | 266/1746 [00:42<04:20,  5.68it/s] 15%|█▌        | 267/1746 [00:42<04:10,  5.90it/s] 15%|█▌        | 268/1746 [00:42<04:19,  5.70it/s] 15%|█▌        | 269/1746 [00:43<04:04,  6.04it/s] 15%|█▌        | 270/1746 [00:43<03:56,  6.24it/s] 16%|█▌        | 271/1746 [00:43<03:47,  6.48it/s] 16%|█▌        | 272/1746 [00:43<03:48,  6.44it/s] 16%|█▌        | 273/1746 [00:43<03:27,  7.11it/s] 16%|█▌        | 274/1746 [00:43<03:26,  7.11it/s] 16%|█▌        | 275/1746 [00:43<03:27,  7.07it/s] 16%|█▌        | 276/1746 [00:44<03:36,  6.80it/s] 16%|█▌        | 277/1746 [00:44<03:30,  6.98it/s] 16%|█▌        | 278/1746 [00:44<03:38,  6.71it/s] 16%|█▌        | 279/1746 [00:44<03:39,  6.67it/s] 16%|█▌        | 280/1746 [00:44<03:44,  6.54it/s] 16%|█▌        | 281/1746 [00:44<03:46,  6.48it/s] 16%|█▌        | 282/1746 [00:44<03:33,  6.85it/s] 16%|█▌        | 283/1746 [00:45<03:37,  6.74it/s] 16%|█▋        | 284/1746 [00:45<03:34,  6.82it/s] 16%|█▋        | 285/1746 [00:45<03:32,  6.88it/s] 16%|█▋        | 286/1746 [00:45<03:33,  6.84it/s] 16%|█▋        | 287/1746 [00:45<03:33,  6.82it/s] 16%|█▋        | 288/1746 [00:45<03:32,  6.87it/s] 17%|█▋        | 289/1746 [00:45<03:37,  6.70it/s] 17%|█▋        | 290/1746 [00:46<03:39,  6.63it/s] 17%|█▋        | 291/1746 [00:46<03:39,  6.64it/s] 17%|█▋        | 292/1746 [00:46<03:29,  6.94it/s] 17%|█▋        | 293/1746 [00:46<03:31,  6.88it/s] 17%|█▋        | 294/1746 [00:46<03:28,  6.95it/s] 17%|█▋        | 295/1746 [00:46<03:26,  7.03it/s] 17%|█▋        | 296/1746 [00:46<03:39,  6.61it/s] 17%|█▋        | 297/1746 [00:47<03:32,  6.83it/s] 17%|█▋        | 298/1746 [00:47<03:30,  6.87it/s] 17%|█▋        | 299/1746 [00:47<03:26,  7.02it/s] 17%|█▋        | 300/1746 [00:47<03:20,  7.20it/s] 17%|█▋        | 301/1746 [00:47<03:24,  7.05it/s] 17%|█▋        | 302/1746 [00:47<03:23,  7.11it/s] 17%|█▋        | 303/1746 [00:47<03:21,  7.14it/s] 17%|█▋        | 305/1746 [00:48<03:07,  7.67it/s] 18%|█▊        | 306/1746 [00:48<03:07,  7.67it/s] 18%|█▊        | 307/1746 [00:48<03:08,  7.63it/s] 18%|█▊        | 308/1746 [00:48<03:15,  7.36it/s] 18%|█▊        | 309/1746 [00:48<03:18,  7.23it/s] 18%|█▊        | 310/1746 [00:48<03:24,  7.03it/s] 18%|█▊        | 311/1746 [00:49<03:23,  7.05it/s] 18%|█▊        | 312/1746 [00:49<03:23,  7.06it/s] 18%|█▊        | 313/1746 [00:49<03:31,  6.77it/s] 18%|█▊        | 314/1746 [00:49<03:41,  6.45it/s] 18%|█▊        | 315/1746 [00:49<03:31,  6.76it/s] 18%|█▊        | 316/1746 [00:49<03:27,  6.88it/s] 18%|█▊        | 317/1746 [00:49<03:26,  6.92it/s] 18%|█▊        | 318/1746 [00:50<03:26,  6.91it/s] 18%|█▊        | 319/1746 [00:50<03:24,  6.99it/s] 18%|█▊        | 320/1746 [00:50<03:39,  6.49it/s] 18%|█▊        | 321/1746 [00:50<03:30,  6.77it/s] 18%|█▊        | 322/1746 [00:50<03:26,  6.90it/s] 18%|█▊        | 323/1746 [00:50<03:24,  6.97it/s] 19%|█▊        | 324/1746 [00:50<03:29,  6.79it/s] 19%|█▊        | 325/1746 [00:51<03:26,  6.87it/s] 19%|█▊        | 326/1746 [00:51<03:23,  6.98it/s] 19%|█▊        | 327/1746 [00:51<03:19,  7.12it/s] 19%|█▉        | 328/1746 [00:51<03:19,  7.12it/s] 19%|█▉        | 329/1746 [00:51<03:26,  6.88it/s] 19%|█▉        | 330/1746 [00:51<03:22,  7.00it/s] 19%|█▉        | 331/1746 [00:51<03:24,  6.93it/s] 19%|█▉        | 332/1746 [00:52<03:17,  7.15it/s] 19%|█▉        | 333/1746 [00:52<03:18,  7.13it/s] 19%|█▉        | 334/1746 [00:52<03:17,  7.16it/s] 19%|█▉        | 335/1746 [00:52<03:20,  7.03it/s] 19%|█▉        | 336/1746 [00:52<03:17,  7.15it/s] 19%|█▉        | 337/1746 [00:52<03:13,  7.27it/s] 19%|█▉        | 338/1746 [00:52<03:18,  7.09it/s] 19%|█▉        | 339/1746 [00:53<03:04,  7.61it/s] 19%|█▉        | 340/1746 [00:53<03:06,  7.55it/s] 20%|█▉        | 341/1746 [00:53<03:07,  7.49it/s] 20%|█▉        | 342/1746 [00:53<03:04,  7.61it/s] 20%|█▉        | 343/1746 [00:53<03:11,  7.31it/s] 20%|█▉        | 344/1746 [00:53<03:12,  7.26it/s] 20%|█▉        | 345/1746 [00:53<02:58,  7.83it/s] 20%|█▉        | 346/1746 [00:53<03:00,  7.75it/s] 20%|█▉        | 347/1746 [00:54<03:07,  7.44it/s] 20%|█▉        | 348/1746 [00:54<03:09,  7.37it/s] 20%|█▉        | 349/1746 [00:54<03:12,  7.26it/s] 20%|██        | 350/1746 [00:54<03:09,  7.36it/s] 20%|██        | 351/1746 [00:54<03:05,  7.51it/s] 20%|██        | 352/1746 [00:54<03:08,  7.39it/s] 20%|██        | 353/1746 [00:54<03:09,  7.33it/s] 20%|██        | 354/1746 [00:55<03:12,  7.22it/s] 20%|██        | 355/1746 [00:55<03:12,  7.24it/s] 20%|██        | 356/1746 [00:55<03:13,  7.18it/s] 20%|██        | 357/1746 [00:55<03:14,  7.16it/s] 21%|██        | 358/1746 [00:55<03:10,  7.28it/s] 21%|██        | 359/1746 [00:55<03:15,  7.10it/s] 21%|██        | 360/1746 [00:55<03:18,  6.99it/s] 21%|██        | 361/1746 [00:56<03:15,  7.07it/s] 21%|██        | 362/1746 [00:56<03:14,  7.10it/s] 21%|██        | 363/1746 [00:56<03:18,  6.96it/s] 21%|██        | 364/1746 [00:56<03:16,  7.02it/s] 21%|██        | 365/1746 [00:56<03:14,  7.09it/s] 21%|██        | 366/1746 [00:56<03:23,  6.77it/s] 21%|██        | 367/1746 [00:56<03:14,  7.09it/s] 21%|██        | 368/1746 [00:57<03:13,  7.12it/s] 21%|██        | 369/1746 [00:57<03:11,  7.18it/s] 21%|██        | 370/1746 [00:57<03:09,  7.26it/s] 21%|██        | 371/1746 [00:57<03:09,  7.25it/s] 21%|██▏       | 372/1746 [00:57<03:14,  7.06it/s] 21%|██▏       | 373/1746 [00:57<03:13,  7.09it/s] 21%|██▏       | 374/1746 [00:57<03:10,  7.22it/s] 21%|██▏       | 375/1746 [00:58<03:10,  7.19it/s] 22%|██▏       | 376/1746 [00:58<03:14,  7.04it/s] 22%|██▏       | 377/1746 [00:58<03:13,  7.07it/s] 22%|██▏       | 378/1746 [00:58<03:12,  7.10it/s] 22%|██▏       | 379/1746 [00:58<03:10,  7.17it/s] 22%|██▏       | 380/1746 [00:58<03:11,  7.15it/s] 22%|██▏       | 381/1746 [00:58<03:08,  7.23it/s] 22%|██▏       | 382/1746 [00:59<03:07,  7.26it/s] 22%|██▏       | 383/1746 [00:59<03:05,  7.34it/s] 22%|██▏       | 384/1746 [00:59<03:12,  7.08it/s] 22%|██▏       | 385/1746 [00:59<03:13,  7.04it/s] 22%|██▏       | 386/1746 [00:59<03:10,  7.14it/s] 22%|██▏       | 387/1746 [00:59<03:07,  7.26it/s] 22%|██▏       | 388/1746 [00:59<03:03,  7.39it/s] 22%|██▏       | 389/1746 [00:59<03:08,  7.20it/s] 22%|██▏       | 390/1746 [01:00<03:07,  7.25it/s] 22%|██▏       | 391/1746 [01:00<03:07,  7.24it/s] 22%|██▏       | 392/1746 [01:00<03:07,  7.21it/s] 23%|██▎       | 393/1746 [01:00<03:06,  7.27it/s] 23%|██▎       | 394/1746 [01:00<03:07,  7.22it/s] 23%|██▎       | 395/1746 [01:00<03:03,  7.36it/s] 23%|██▎       | 396/1746 [01:00<03:03,  7.37it/s] 23%|██▎       | 397/1746 [01:01<03:02,  7.38it/s] 23%|██▎       | 398/1746 [01:01<03:04,  7.29it/s] 23%|██▎       | 399/1746 [01:01<03:06,  7.21it/s] 23%|██▎       | 401/1746 [01:01<02:48,  7.99it/s] 23%|██▎       | 402/1746 [01:01<02:40,  8.37it/s] 23%|██▎       | 403/1746 [01:01<02:45,  8.13it/s] 23%|██▎       | 404/1746 [01:01<02:51,  7.83it/s] 23%|██▎       | 405/1746 [01:02<02:51,  7.81it/s] 23%|██▎       | 406/1746 [01:02<02:58,  7.51it/s] 23%|██▎       | 407/1746 [01:02<02:57,  7.53it/s] 23%|██▎       | 408/1746 [01:02<03:02,  7.33it/s] 23%|██▎       | 409/1746 [01:02<03:03,  7.30it/s] 23%|██▎       | 410/1746 [01:02<03:12,  6.94it/s] 24%|██▎       | 411/1746 [01:02<03:08,  7.09it/s] 24%|██▎       | 412/1746 [01:03<03:10,  7.01it/s] 24%|██▎       | 413/1746 [01:03<03:08,  7.06it/s] 24%|██▎       | 414/1746 [01:03<03:08,  7.06it/s] 24%|██▍       | 415/1746 [01:03<03:08,  7.06it/s] 24%|██▍       | 416/1746 [01:03<03:09,  7.02it/s] 24%|██▍       | 417/1746 [01:03<03:07,  7.11it/s] 24%|██▍       | 418/1746 [01:03<03:07,  7.09it/s] 24%|██▍       | 419/1746 [01:04<03:10,  6.97it/s] 24%|██▍       | 420/1746 [01:04<03:08,  7.05it/s] 24%|██▍       | 421/1746 [01:04<03:07,  7.08it/s] 24%|██▍       | 422/1746 [01:04<03:05,  7.13it/s] 24%|██▍       | 423/1746 [01:04<03:07,  7.06it/s] 24%|██▍       | 424/1746 [01:04<03:04,  7.17it/s] 24%|██▍       | 425/1746 [01:04<03:06,  7.10it/s] 24%|██▍       | 426/1746 [01:05<03:08,  7.01it/s] 24%|██▍       | 427/1746 [01:05<03:07,  7.05it/s] 25%|██▍       | 428/1746 [01:05<03:06,  7.07it/s] 25%|██▍       | 429/1746 [01:05<03:06,  7.05it/s] 25%|██▍       | 430/1746 [01:05<03:02,  7.20it/s] 25%|██▍       | 431/1746 [01:05<02:59,  7.31it/s] 25%|██▍       | 432/1746 [01:05<03:05,  7.08it/s] 25%|██▍       | 434/1746 [01:06<02:49,  7.75it/s] 25%|██▍       | 435/1746 [01:06<02:56,  7.45it/s] 25%|██▍       | 436/1746 [01:06<02:59,  7.29it/s] 25%|██▌       | 437/1746 [01:06<02:55,  7.47it/s] 25%|██▌       | 438/1746 [01:06<02:54,  7.48it/s] 25%|██▌       | 439/1746 [01:06<02:57,  7.37it/s] 25%|██▌       | 440/1746 [01:06<02:56,  7.40it/s] 25%|██▌       | 441/1746 [01:07<02:54,  7.48it/s] 25%|██▌       | 442/1746 [01:07<02:57,  7.36it/s] 25%|██▌       | 443/1746 [01:07<02:58,  7.30it/s] 25%|██▌       | 444/1746 [01:07<03:01,  7.16it/s] 25%|██▌       | 445/1746 [01:07<02:59,  7.24it/s] 26%|██▌       | 446/1746 [01:07<03:01,  7.17it/s] 26%|██▌       | 447/1746 [01:07<02:57,  7.33it/s] 26%|██▌       | 448/1746 [01:08<02:56,  7.34it/s] 26%|██▌       | 449/1746 [01:08<02:57,  7.31it/s] 26%|██▌       | 450/1746 [01:08<02:56,  7.33it/s] 26%|██▌       | 451/1746 [01:08<02:55,  7.37it/s] 26%|██▌       | 452/1746 [01:08<02:56,  7.34it/s] 26%|██▌       | 453/1746 [01:08<02:59,  7.18it/s] 26%|██▌       | 454/1746 [01:08<03:03,  7.04it/s] 26%|██▌       | 455/1746 [01:09<03:03,  7.03it/s] 26%|██▌       | 456/1746 [01:09<03:01,  7.10it/s] 26%|██▌       | 457/1746 [01:09<03:00,  7.12it/s] 26%|██▌       | 458/1746 [01:09<02:56,  7.28it/s] 26%|██▋       | 459/1746 [01:09<03:07,  6.87it/s] 26%|██▋       | 460/1746 [01:09<02:59,  7.17it/s] 26%|██▋       | 461/1746 [01:09<02:59,  7.16it/s] 26%|██▋       | 462/1746 [01:10<02:58,  7.19it/s] 27%|██▋       | 463/1746 [01:10<03:00,  7.11it/s] 27%|██▋       | 464/1746 [01:10<03:00,  7.09it/s] 27%|██▋       | 465/1746 [01:10<02:57,  7.23it/s] 27%|██▋       | 466/1746 [01:10<02:55,  7.31it/s] 27%|██▋       | 467/1746 [01:10<02:52,  7.41it/s] 27%|██▋       | 468/1746 [01:10<02:49,  7.53it/s] 27%|██▋       | 469/1746 [01:10<02:50,  7.49it/s] 27%|██▋       | 470/1746 [01:11<02:49,  7.52it/s] 27%|██▋       | 471/1746 [01:11<02:56,  7.21it/s] 27%|██▋       | 472/1746 [01:11<02:55,  7.26it/s] 27%|██▋       | 473/1746 [01:11<02:51,  7.43it/s] 27%|██▋       | 474/1746 [01:11<02:54,  7.31it/s] 27%|██▋       | 475/1746 [01:11<02:52,  7.39it/s] 27%|██▋       | 477/1746 [01:12<02:38,  7.99it/s] 27%|██▋       | 478/1746 [01:12<02:38,  7.99it/s] 27%|██▋       | 479/1746 [01:12<02:43,  7.75it/s] 27%|██▋       | 480/1746 [01:12<02:53,  7.29it/s] 28%|██▊       | 481/1746 [01:12<02:58,  7.10it/s] 28%|██▊       | 482/1746 [01:12<02:54,  7.23it/s] 28%|██▊       | 483/1746 [01:12<02:54,  7.25it/s] 28%|██▊       | 484/1746 [01:12<02:54,  7.25it/s] 28%|██▊       | 485/1746 [01:13<02:52,  7.31it/s] 28%|██▊       | 486/1746 [01:13<02:54,  7.21it/s] 28%|██▊       | 488/1746 [01:13<02:39,  7.91it/s] 28%|██▊       | 489/1746 [01:13<02:47,  7.48it/s] 28%|██▊       | 490/1746 [01:13<02:52,  7.28it/s] 28%|██▊       | 491/1746 [01:13<02:52,  7.30it/s] 28%|██▊       | 492/1746 [01:14<02:48,  7.43it/s] 28%|██▊       | 493/1746 [01:14<02:51,  7.32it/s] 28%|██▊       | 495/1746 [01:14<02:39,  7.86it/s] 28%|██▊       | 496/1746 [01:14<02:45,  7.57it/s] 28%|██▊       | 497/1746 [01:14<02:48,  7.43it/s] 29%|██▊       | 498/1746 [01:14<02:44,  7.59it/s] 29%|██▊       | 499/1746 [01:14<02:44,  7.58it/s] 29%|██▊       | 500/1746 [01:15<02:47,  7.43it/s] 29%|██▊       | 501/1746 [01:15<02:49,  7.36it/s] 29%|██▉       | 502/1746 [01:15<02:51,  7.26it/s] 29%|██▉       | 503/1746 [01:15<03:00,  6.88it/s] 29%|██▉       | 504/1746 [01:15<03:01,  6.85it/s] 29%|██▉       | 505/1746 [01:15<02:57,  7.00it/s] 29%|██▉       | 506/1746 [01:16<03:04,  6.73it/s] 29%|██▉       | 507/1746 [01:16<03:00,  6.85it/s] 29%|██▉       | 508/1746 [01:16<03:03,  6.74it/s] 29%|██▉       | 509/1746 [01:16<03:01,  6.83it/s] 29%|██▉       | 510/1746 [01:16<02:58,  6.94it/s] 29%|██▉       | 511/1746 [01:16<02:43,  7.57it/s] 29%|██▉       | 512/1746 [01:16<02:53,  7.12it/s] 29%|██▉       | 513/1746 [01:16<02:53,  7.09it/s] 29%|██▉       | 514/1746 [01:17<02:57,  6.94it/s] 29%|██▉       | 515/1746 [01:17<02:58,  6.88it/s] 30%|██▉       | 516/1746 [01:17<03:05,  6.63it/s] 30%|██▉       | 517/1746 [01:17<03:02,  6.72it/s] 30%|██▉       | 518/1746 [01:17<02:53,  7.09it/s] 30%|██▉       | 519/1746 [01:17<02:48,  7.30it/s] 30%|██▉       | 520/1746 [01:17<02:48,  7.28it/s] 30%|██▉       | 521/1746 [01:18<02:43,  7.48it/s] 30%|██▉       | 522/1746 [01:18<02:45,  7.39it/s] 30%|██▉       | 523/1746 [01:18<02:42,  7.53it/s] 30%|███       | 524/1746 [01:18<02:42,  7.53it/s] 30%|███       | 525/1746 [01:18<02:40,  7.62it/s] 30%|███       | 526/1746 [01:18<02:37,  7.74it/s] 30%|███       | 527/1746 [01:18<02:45,  7.39it/s] 30%|███       | 528/1746 [01:19<02:43,  7.46it/s] 30%|███       | 529/1746 [01:19<02:49,  7.20it/s] 30%|███       | 530/1746 [01:19<02:46,  7.29it/s] 30%|███       | 531/1746 [01:19<02:48,  7.22it/s] 30%|███       | 532/1746 [01:19<02:44,  7.40it/s] 31%|███       | 533/1746 [01:19<02:44,  7.39it/s] 31%|███       | 534/1746 [01:19<02:38,  7.67it/s] 31%|███       | 535/1746 [01:19<02:45,  7.30it/s] 31%|███       | 536/1746 [01:20<02:42,  7.46it/s] 31%|███       | 537/1746 [01:20<02:37,  7.69it/s] 31%|███       | 538/1746 [01:20<02:44,  7.34it/s] 31%|███       | 539/1746 [01:20<02:40,  7.54it/s] 31%|███       | 540/1746 [01:20<02:39,  7.55it/s] 31%|███       | 541/1746 [01:20<02:37,  7.67it/s] 31%|███       | 542/1746 [01:20<02:36,  7.68it/s] 31%|███       | 543/1746 [01:21<02:38,  7.60it/s] 31%|███       | 544/1746 [01:21<02:36,  7.68it/s] 31%|███       | 545/1746 [01:21<02:36,  7.66it/s] 31%|███▏      | 547/1746 [01:21<02:26,  8.19it/s] 31%|███▏      | 548/1746 [01:21<02:28,  8.09it/s] 31%|███▏      | 549/1746 [01:21<02:26,  8.15it/s] 32%|███▏      | 550/1746 [01:21<02:28,  8.06it/s] 32%|███▏      | 551/1746 [01:22<02:31,  7.87it/s] 32%|███▏      | 552/1746 [01:22<02:32,  7.84it/s] 32%|███▏      | 553/1746 [01:22<02:30,  7.93it/s] 32%|███▏      | 554/1746 [01:22<02:32,  7.82it/s] 32%|███▏      | 555/1746 [01:22<02:33,  7.74it/s] 32%|███▏      | 556/1746 [01:22<02:32,  7.82it/s] 32%|███▏      | 558/1746 [01:22<02:23,  8.27it/s] 32%|███▏      | 559/1746 [01:23<02:25,  8.15it/s] 32%|███▏      | 560/1746 [01:23<02:25,  8.18it/s] 32%|███▏      | 561/1746 [01:23<02:28,  7.97it/s] 32%|███▏      | 562/1746 [01:23<02:31,  7.82it/s] 32%|███▏      | 563/1746 [01:23<02:28,  7.94it/s] 32%|███▏      | 564/1746 [01:23<02:31,  7.81it/s] 32%|███▏      | 565/1746 [01:23<02:31,  7.78it/s] 32%|███▏      | 566/1746 [01:23<02:31,  7.80it/s] 32%|███▏      | 567/1746 [01:24<02:31,  7.78it/s] 33%|███▎      | 569/1746 [01:24<02:22,  8.24it/s] 33%|███▎      | 570/1746 [01:24<02:29,  7.85it/s] 33%|███▎      | 571/1746 [01:24<02:31,  7.76it/s] 33%|███▎      | 572/1746 [01:24<02:40,  7.29it/s] 33%|███▎      | 573/1746 [01:24<02:48,  6.97it/s] 33%|███▎      | 574/1746 [01:25<02:39,  7.33it/s] 33%|███▎      | 575/1746 [01:25<02:37,  7.44it/s] 33%|███▎      | 576/1746 [01:25<02:34,  7.58it/s] 33%|███▎      | 577/1746 [01:25<02:42,  7.22it/s] 33%|███▎      | 578/1746 [01:25<02:38,  7.35it/s] 33%|███▎      | 579/1746 [01:25<02:34,  7.53it/s] 33%|███▎      | 580/1746 [01:25<02:35,  7.50it/s] 33%|███▎      | 581/1746 [01:25<02:35,  7.48it/s] 33%|███▎      | 582/1746 [01:26<02:43,  7.10it/s] 33%|███▎      | 583/1746 [01:26<02:42,  7.16it/s] 33%|███▎      | 584/1746 [01:26<02:39,  7.30it/s] 34%|███▎      | 585/1746 [01:26<02:41,  7.20it/s] 34%|███▎      | 586/1746 [01:26<02:36,  7.42it/s] 34%|███▎      | 587/1746 [01:26<02:34,  7.51it/s] 34%|███▎      | 589/1746 [01:26<02:21,  8.20it/s] 34%|███▍      | 590/1746 [01:27<02:21,  8.15it/s] 34%|███▍      | 591/1746 [01:27<02:33,  7.53it/s] 34%|███▍      | 592/1746 [01:27<02:31,  7.62it/s] 34%|███▍      | 593/1746 [01:27<02:31,  7.59it/s] 34%|███▍      | 594/1746 [01:27<02:34,  7.44it/s] 34%|███▍      | 595/1746 [01:27<02:36,  7.34it/s] 34%|███▍      | 596/1746 [01:27<02:34,  7.44it/s] 34%|███▍      | 597/1746 [01:28<02:35,  7.40it/s] 34%|███▍      | 598/1746 [01:28<02:30,  7.63it/s] 34%|███▍      | 599/1746 [01:28<02:27,  7.78it/s] 34%|███▍      | 600/1746 [01:28<02:22,  8.02it/s] 34%|███▍      | 601/1746 [01:28<02:29,  7.64it/s] 34%|███▍      | 602/1746 [01:28<02:27,  7.74it/s] 35%|███▍      | 603/1746 [01:28<02:25,  7.87it/s] 35%|███▍      | 604/1746 [01:28<02:17,  8.33it/s] 35%|███▍      | 605/1746 [01:29<02:18,  8.21it/s] 35%|███▍      | 606/1746 [01:29<02:20,  8.10it/s] 35%|███▍      | 607/1746 [01:29<02:20,  8.11it/s] 35%|███▍      | 608/1746 [01:29<02:21,  8.04it/s] 35%|███▍      | 609/1746 [01:29<02:26,  7.74it/s] 35%|███▍      | 610/1746 [01:29<02:26,  7.75it/s] 35%|███▍      | 611/1746 [01:29<02:23,  7.92it/s] 35%|███▌      | 612/1746 [01:29<02:21,  8.04it/s] 35%|███▌      | 613/1746 [01:30<02:33,  7.38it/s] 35%|███▌      | 614/1746 [01:30<02:30,  7.54it/s] 35%|███▌      | 615/1746 [01:30<02:49,  6.65it/s] 35%|███▌      | 616/1746 [01:30<02:38,  7.14it/s] 35%|███▌      | 617/1746 [01:30<02:32,  7.42it/s] 35%|███▌      | 618/1746 [01:30<02:29,  7.55it/s] 35%|███▌      | 619/1746 [01:30<02:22,  7.94it/s] 36%|███▌      | 620/1746 [01:31<02:22,  7.90it/s] 36%|███▌      | 621/1746 [01:31<02:22,  7.88it/s] 36%|███▌      | 622/1746 [01:31<02:26,  7.69it/s] 36%|███▌      | 623/1746 [01:31<02:32,  7.37it/s] 36%|███▌      | 624/1746 [01:31<02:33,  7.32it/s] 36%|███▌      | 625/1746 [01:31<02:33,  7.31it/s] 36%|███▌      | 626/1746 [01:31<02:41,  6.94it/s] 36%|███▌      | 627/1746 [01:32<02:35,  7.19it/s] 36%|███▌      | 628/1746 [01:32<02:32,  7.35it/s] 36%|███▌      | 629/1746 [01:32<02:28,  7.51it/s] 36%|███▌      | 630/1746 [01:32<02:31,  7.36it/s] 36%|███▌      | 631/1746 [01:32<02:27,  7.58it/s] 36%|███▌      | 632/1746 [01:32<02:24,  7.70it/s] 36%|███▋      | 633/1746 [01:32<02:19,  8.00it/s] 36%|███▋      | 634/1746 [01:32<02:15,  8.21it/s] 36%|███▋      | 635/1746 [01:32<02:13,  8.30it/s] 36%|███▋      | 636/1746 [01:33<02:14,  8.22it/s] 36%|███▋      | 637/1746 [01:33<02:16,  8.10it/s] 37%|███▋      | 638/1746 [01:33<02:16,  8.14it/s] 37%|███▋      | 639/1746 [01:33<02:14,  8.25it/s] 37%|███▋      | 640/1746 [01:33<02:13,  8.31it/s] 37%|███▋      | 641/1746 [01:33<02:16,  8.09it/s] 37%|███▋      | 642/1746 [01:33<02:17,  8.01it/s] 37%|███▋      | 643/1746 [01:33<02:16,  8.07it/s] 37%|███▋      | 644/1746 [01:34<02:18,  7.93it/s] 37%|███▋      | 645/1746 [01:34<02:22,  7.72it/s] 37%|███▋      | 646/1746 [01:34<02:23,  7.65it/s] 37%|███▋      | 647/1746 [01:34<02:20,  7.80it/s] 37%|███▋      | 648/1746 [01:34<02:22,  7.71it/s] 37%|███▋      | 649/1746 [01:34<02:19,  7.86it/s] 37%|███▋      | 650/1746 [01:34<02:18,  7.89it/s] 37%|███▋      | 651/1746 [01:35<03:14,  5.64it/s] 37%|███▋      | 652/1746 [01:35<02:55,  6.25it/s] 37%|███▋      | 653/1746 [01:35<02:37,  6.93it/s] 37%|███▋      | 654/1746 [01:35<02:30,  7.27it/s] 38%|███▊      | 655/1746 [01:35<02:25,  7.50it/s] 38%|███▊      | 656/1746 [01:35<02:20,  7.78it/s] 38%|███▊      | 657/1746 [01:35<02:19,  7.79it/s] 38%|███▊      | 658/1746 [01:36<02:17,  7.91it/s] 38%|███▊      | 659/1746 [01:36<02:23,  7.56it/s] 38%|███▊      | 660/1746 [01:36<02:29,  7.27it/s] 38%|███▊      | 661/1746 [01:36<02:25,  7.47it/s] 38%|███▊      | 662/1746 [01:36<02:29,  7.24it/s] 38%|███▊      | 663/1746 [01:36<02:26,  7.39it/s] 38%|███▊      | 664/1746 [01:36<02:20,  7.71it/s] 38%|███▊      | 665/1746 [01:36<02:16,  7.91it/s] 38%|███▊      | 666/1746 [01:37<02:12,  8.12it/s] 38%|███▊      | 667/1746 [01:37<02:12,  8.15it/s] 38%|███▊      | 668/1746 [01:37<02:09,  8.32it/s] 38%|███▊      | 669/1746 [01:37<02:09,  8.31it/s] 38%|███▊      | 670/1746 [01:37<02:13,  8.03it/s] 38%|███▊      | 671/1746 [01:37<02:12,  8.13it/s] 38%|███▊      | 672/1746 [01:37<02:12,  8.11it/s] 39%|███▊      | 673/1746 [01:37<02:07,  8.39it/s] 39%|███▊      | 674/1746 [01:38<02:08,  8.35it/s] 39%|███▊      | 675/1746 [01:38<02:08,  8.32it/s] 39%|███▊      | 676/1746 [01:38<02:08,  8.32it/s] 39%|███▉      | 677/1746 [01:38<02:06,  8.48it/s] 39%|███▉      | 678/1746 [01:38<02:03,  8.64it/s] 39%|███▉      | 679/1746 [01:38<02:01,  8.78it/s] 39%|███▉      | 680/1746 [01:38<02:02,  8.72it/s] 39%|███▉      | 681/1746 [01:38<02:03,  8.59it/s] 39%|███▉      | 682/1746 [01:38<02:10,  8.15it/s] 39%|███▉      | 683/1746 [01:39<02:08,  8.29it/s] 39%|███▉      | 684/1746 [01:39<02:05,  8.43it/s] 39%|███▉      | 685/1746 [01:39<02:07,  8.30it/s] 39%|███▉      | 686/1746 [01:39<02:09,  8.20it/s] 39%|███▉      | 687/1746 [01:39<02:09,  8.18it/s] 39%|███▉      | 688/1746 [01:39<02:09,  8.15it/s] 39%|███▉      | 689/1746 [01:39<02:09,  8.13it/s] 40%|███▉      | 690/1746 [01:39<02:13,  7.94it/s] 40%|███▉      | 691/1746 [01:40<02:12,  7.96it/s] 40%|███▉      | 692/1746 [01:40<02:17,  7.64it/s] 40%|███▉      | 693/1746 [01:40<02:21,  7.42it/s] 40%|███▉      | 694/1746 [01:40<02:17,  7.67it/s] 40%|███▉      | 695/1746 [01:40<02:15,  7.76it/s] 40%|███▉      | 696/1746 [01:40<02:14,  7.83it/s] 40%|███▉      | 697/1746 [01:40<02:14,  7.77it/s] 40%|████      | 699/1746 [01:41<02:10,  8.05it/s] 40%|████      | 700/1746 [01:41<02:10,  8.03it/s] 40%|████      | 701/1746 [01:41<02:10,  8.02it/s] 40%|████      | 702/1746 [01:41<02:11,  7.93it/s] 40%|████      | 703/1746 [01:41<02:10,  7.97it/s] 40%|████      | 704/1746 [01:41<02:07,  8.17it/s] 40%|████      | 705/1746 [01:41<02:20,  7.39it/s] 40%|████      | 706/1746 [01:42<02:18,  7.52it/s] 40%|████      | 707/1746 [01:42<02:12,  7.81it/s] 41%|████      | 708/1746 [01:42<02:11,  7.88it/s] 41%|████      | 709/1746 [01:42<02:12,  7.81it/s] 41%|████      | 710/1746 [01:42<02:11,  7.90it/s] 41%|████      | 711/1746 [01:42<02:10,  7.96it/s] 41%|████      | 712/1746 [01:42<02:09,  7.96it/s] 41%|████      | 713/1746 [01:42<02:06,  8.19it/s] 41%|████      | 714/1746 [01:43<02:04,  8.30it/s] 41%|████      | 715/1746 [01:43<02:08,  8.05it/s] 41%|████      | 717/1746 [01:43<02:00,  8.51it/s] 41%|████      | 718/1746 [01:43<02:02,  8.36it/s] 41%|████      | 719/1746 [01:43<02:07,  8.04it/s] 41%|████      | 720/1746 [01:43<02:04,  8.22it/s] 41%|████▏     | 721/1746 [01:43<02:01,  8.45it/s] 41%|████▏     | 722/1746 [01:43<01:59,  8.60it/s] 41%|████▏     | 724/1746 [01:44<01:55,  8.87it/s] 42%|████▏     | 725/1746 [01:44<01:57,  8.69it/s] 42%|████▏     | 726/1746 [01:44<01:56,  8.79it/s] 42%|████▏     | 727/1746 [01:44<02:06,  8.07it/s] 42%|████▏     | 728/1746 [01:44<02:16,  7.46it/s] 42%|████▏     | 729/1746 [01:44<02:11,  7.72it/s] 42%|████▏     | 730/1746 [01:44<02:11,  7.75it/s] 42%|████▏     | 731/1746 [01:45<02:08,  7.91it/s] 42%|████▏     | 733/1746 [01:45<01:59,  8.51it/s] 42%|████▏     | 734/1746 [01:45<02:11,  7.70it/s] 42%|████▏     | 735/1746 [01:45<02:07,  7.92it/s] 42%|████▏     | 736/1746 [01:45<02:03,  8.18it/s] 42%|████▏     | 737/1746 [01:45<02:01,  8.33it/s] 42%|████▏     | 738/1746 [01:45<02:03,  8.14it/s] 42%|████▏     | 739/1746 [01:46<02:16,  7.38it/s] 42%|████▏     | 740/1746 [01:46<02:11,  7.66it/s] 42%|████▏     | 741/1746 [01:46<02:05,  7.99it/s] 42%|████▏     | 742/1746 [01:46<02:08,  7.82it/s] 43%|████▎     | 743/1746 [01:46<02:09,  7.76it/s] 43%|████▎     | 745/1746 [01:46<01:51,  9.00it/s] 43%|████▎     | 746/1746 [01:46<01:55,  8.68it/s] 43%|████▎     | 747/1746 [01:47<02:06,  7.89it/s] 43%|████▎     | 748/1746 [01:47<02:06,  7.87it/s] 43%|████▎     | 749/1746 [01:47<02:07,  7.83it/s] 43%|████▎     | 750/1746 [01:47<02:04,  8.00it/s] 43%|████▎     | 751/1746 [01:47<02:05,  7.96it/s] 43%|████▎     | 752/1746 [01:47<02:05,  7.93it/s] 43%|████▎     | 753/1746 [01:47<02:09,  7.70it/s] 43%|████▎     | 755/1746 [01:48<01:55,  8.59it/s] 43%|████▎     | 756/1746 [01:48<01:58,  8.32it/s] 43%|████▎     | 757/1746 [01:48<02:02,  8.09it/s] 43%|████▎     | 758/1746 [01:48<02:02,  8.03it/s] 43%|████▎     | 759/1746 [01:48<02:01,  8.11it/s] 44%|████▎     | 760/1746 [01:48<02:01,  8.13it/s] 44%|████▎     | 761/1746 [01:48<02:04,  7.92it/s] 44%|████▎     | 762/1746 [01:48<01:59,  8.26it/s] 44%|████▍     | 764/1746 [01:49<01:49,  8.97it/s] 44%|████▍     | 765/1746 [01:49<01:47,  9.10it/s] 44%|████▍     | 766/1746 [01:49<01:50,  8.91it/s] 44%|████▍     | 767/1746 [01:49<01:52,  8.67it/s] 44%|████▍     | 769/1746 [01:49<01:40,  9.68it/s] 44%|████▍     | 770/1746 [01:49<01:44,  9.34it/s] 44%|████▍     | 771/1746 [01:49<01:45,  9.24it/s] 44%|████▍     | 772/1746 [01:49<01:45,  9.21it/s] 44%|████▍     | 774/1746 [01:50<01:45,  9.23it/s] 44%|████▍     | 775/1746 [01:50<02:29,  6.51it/s] 45%|████▍     | 777/1746 [01:50<02:12,  7.29it/s] 45%|████▍     | 778/1746 [01:50<02:11,  7.37it/s] 45%|████▍     | 779/1746 [01:50<02:13,  7.25it/s] 45%|████▍     | 780/1746 [01:51<02:13,  7.24it/s] 45%|████▍     | 781/1746 [01:51<02:12,  7.29it/s] 45%|████▍     | 782/1746 [01:51<02:08,  7.50it/s] 45%|████▍     | 783/1746 [01:51<02:08,  7.52it/s] 45%|████▍     | 784/1746 [01:51<02:07,  7.56it/s] 45%|████▍     | 785/1746 [01:51<02:00,  7.95it/s] 45%|████▌     | 786/1746 [01:51<02:21,  6.76it/s] 45%|████▌     | 787/1746 [01:52<02:13,  7.17it/s] 45%|████▌     | 788/1746 [01:52<02:12,  7.25it/s] 45%|████▌     | 789/1746 [01:52<02:06,  7.57it/s] 45%|████▌     | 790/1746 [01:52<02:03,  7.75it/s] 45%|████▌     | 791/1746 [01:52<02:01,  7.83it/s] 45%|████▌     | 792/1746 [01:52<01:59,  7.99it/s] 45%|████▌     | 793/1746 [01:52<01:59,  7.98it/s] 45%|████▌     | 794/1746 [01:52<01:59,  7.94it/s] 46%|████▌     | 795/1746 [01:53<01:59,  7.98it/s] 46%|████▌     | 796/1746 [01:53<01:57,  8.07it/s] 46%|████▌     | 797/1746 [01:53<01:50,  8.55it/s] 46%|████▌     | 798/1746 [01:53<01:57,  8.09it/s] 46%|████▌     | 799/1746 [01:53<01:54,  8.26it/s] 46%|████▌     | 800/1746 [01:53<01:57,  8.06it/s] 46%|████▌     | 801/1746 [01:53<01:55,  8.21it/s] 46%|████▌     | 802/1746 [01:53<01:54,  8.27it/s] 46%|████▌     | 803/1746 [01:54<01:56,  8.11it/s] 46%|████▌     | 804/1746 [01:54<01:56,  8.11it/s] 46%|████▌     | 805/1746 [01:54<01:57,  7.98it/s] 46%|████▌     | 807/1746 [01:54<01:48,  8.69it/s] 46%|████▋     | 808/1746 [01:54<01:48,  8.61it/s] 46%|████▋     | 809/1746 [01:54<01:51,  8.43it/s] 46%|████▋     | 810/1746 [01:54<01:49,  8.52it/s] 46%|████▋     | 811/1746 [01:55<01:56,  8.04it/s] 47%|████▋     | 812/1746 [01:55<01:52,  8.27it/s] 47%|████▋     | 813/1746 [01:55<01:52,  8.26it/s] 47%|████▋     | 814/1746 [01:55<01:50,  8.42it/s] 47%|████▋     | 815/1746 [01:55<02:03,  7.55it/s] 47%|████▋     | 816/1746 [01:55<02:05,  7.41it/s] 47%|████▋     | 817/1746 [01:55<02:03,  7.51it/s] 47%|████▋     | 818/1746 [01:55<01:59,  7.74it/s] 47%|████▋     | 819/1746 [01:56<01:54,  8.12it/s] 47%|████▋     | 820/1746 [01:56<01:52,  8.20it/s] 47%|████▋     | 821/1746 [01:56<01:50,  8.34it/s] 47%|████▋     | 822/1746 [01:56<01:52,  8.23it/s] 47%|████▋     | 823/1746 [01:56<01:57,  7.84it/s] 47%|████▋     | 824/1746 [01:56<02:01,  7.60it/s] 47%|████▋     | 825/1746 [01:56<01:59,  7.72it/s] 47%|████▋     | 826/1746 [01:56<01:57,  7.80it/s] 47%|████▋     | 827/1746 [01:57<02:03,  7.44it/s] 47%|████▋     | 828/1746 [01:57<02:02,  7.49it/s] 47%|████▋     | 829/1746 [01:57<02:00,  7.59it/s] 48%|████▊     | 830/1746 [01:57<02:04,  7.35it/s] 48%|████▊     | 831/1746 [01:57<01:56,  7.84it/s] 48%|████▊     | 832/1746 [01:57<01:53,  8.05it/s] 48%|████▊     | 833/1746 [01:57<01:50,  8.26it/s] 48%|████▊     | 834/1746 [01:57<01:49,  8.33it/s] 48%|████▊     | 835/1746 [01:58<01:49,  8.30it/s] 48%|████▊     | 836/1746 [01:58<01:51,  8.13it/s] 48%|████▊     | 837/1746 [01:58<01:54,  7.96it/s] 48%|████▊     | 838/1746 [01:58<01:56,  7.77it/s] 48%|████▊     | 839/1746 [01:58<01:56,  7.76it/s] 48%|████▊     | 840/1746 [01:58<01:56,  7.78it/s] 48%|████▊     | 841/1746 [01:58<02:07,  7.08it/s] 48%|████▊     | 842/1746 [01:58<02:03,  7.35it/s] 48%|████▊     | 843/1746 [01:59<01:59,  7.54it/s] 48%|████▊     | 844/1746 [01:59<01:58,  7.60it/s] 48%|████▊     | 845/1746 [01:59<01:55,  7.77it/s] 48%|████▊     | 846/1746 [01:59<01:58,  7.61it/s] 49%|████▊     | 847/1746 [01:59<01:56,  7.74it/s] 49%|████▊     | 848/1746 [01:59<01:53,  7.92it/s] 49%|████▊     | 849/1746 [01:59<01:50,  8.10it/s] 49%|████▊     | 850/1746 [02:00<01:52,  7.97it/s] 49%|████▊     | 851/1746 [02:00<01:52,  7.97it/s] 49%|████▉     | 852/1746 [02:00<01:50,  8.05it/s] 49%|████▉     | 853/1746 [02:00<01:49,  8.13it/s] 49%|████▉     | 854/1746 [02:00<01:54,  7.80it/s] 49%|████▉     | 855/1746 [02:00<01:54,  7.75it/s] 49%|████▉     | 856/1746 [02:00<01:50,  8.08it/s] 49%|████▉     | 857/1746 [02:00<01:53,  7.81it/s] 49%|████▉     | 858/1746 [02:01<01:53,  7.83it/s] 49%|████▉     | 859/1746 [02:01<01:49,  8.08it/s] 49%|████▉     | 860/1746 [02:01<01:46,  8.33it/s] 49%|████▉     | 861/1746 [02:01<01:54,  7.75it/s] 49%|████▉     | 862/1746 [02:01<01:52,  7.87it/s] 49%|████▉     | 863/1746 [02:01<01:48,  8.15it/s] 49%|████▉     | 864/1746 [02:01<01:44,  8.41it/s] 50%|████▉     | 865/1746 [02:01<01:43,  8.50it/s] 50%|████▉     | 866/1746 [02:01<01:42,  8.60it/s] 50%|████▉     | 867/1746 [02:02<01:45,  8.32it/s] 50%|████▉     | 868/1746 [02:02<01:49,  8.02it/s] 50%|████▉     | 869/1746 [02:02<01:50,  7.95it/s] 50%|████▉     | 870/1746 [02:02<01:48,  8.04it/s] 50%|████▉     | 871/1746 [02:02<01:48,  8.08it/s] 50%|████▉     | 872/1746 [02:02<01:44,  8.36it/s] 50%|█████     | 873/1746 [02:02<01:45,  8.24it/s] 50%|█████     | 874/1746 [02:02<01:49,  7.97it/s] 50%|█████     | 875/1746 [02:03<01:46,  8.20it/s] 50%|█████     | 876/1746 [02:03<01:46,  8.13it/s] 50%|█████     | 877/1746 [02:03<01:46,  8.18it/s] 50%|█████     | 878/1746 [02:03<01:48,  7.97it/s] 50%|█████     | 879/1746 [02:03<01:50,  7.83it/s] 50%|█████     | 880/1746 [02:03<01:50,  7.86it/s] 50%|█████     | 881/1746 [02:03<01:50,  7.83it/s] 51%|█████     | 882/1746 [02:03<01:48,  7.94it/s] 51%|█████     | 883/1746 [02:04<01:49,  7.88it/s] 51%|█████     | 884/1746 [02:04<01:48,  7.94it/s] 51%|█████     | 885/1746 [02:04<01:45,  8.15it/s] 51%|█████     | 886/1746 [02:04<01:47,  8.00it/s] 51%|█████     | 887/1746 [02:04<01:49,  7.87it/s] 51%|█████     | 888/1746 [02:04<01:50,  7.74it/s] 51%|█████     | 889/1746 [02:04<01:53,  7.55it/s] 51%|█████     | 890/1746 [02:05<01:52,  7.64it/s] 51%|█████     | 891/1746 [02:05<01:52,  7.57it/s] 51%|█████     | 892/1746 [02:05<01:52,  7.58it/s] 51%|█████     | 893/1746 [02:05<01:52,  7.56it/s] 51%|█████     | 894/1746 [02:05<01:53,  7.48it/s] 51%|█████▏    | 895/1746 [02:05<01:52,  7.53it/s] 51%|█████▏    | 896/1746 [02:05<01:50,  7.72it/s] 51%|█████▏    | 897/1746 [02:05<01:50,  7.66it/s] 51%|█████▏    | 899/1746 [02:06<01:40,  8.42it/s] 52%|█████▏    | 900/1746 [02:06<01:41,  8.31it/s] 52%|█████▏    | 901/1746 [02:06<01:47,  7.83it/s] 52%|█████▏    | 902/1746 [02:06<01:55,  7.34it/s] 52%|█████▏    | 903/1746 [02:06<01:49,  7.73it/s] 52%|█████▏    | 904/1746 [02:06<01:51,  7.56it/s] 52%|█████▏    | 905/1746 [02:06<01:49,  7.67it/s] 52%|█████▏    | 907/1746 [02:07<02:25,  5.78it/s] 52%|█████▏    | 908/1746 [02:07<02:12,  6.30it/s] 52%|█████▏    | 909/1746 [02:07<02:07,  6.56it/s] 52%|█████▏    | 910/1746 [02:07<01:59,  7.01it/s] 52%|█████▏    | 911/1746 [02:07<01:53,  7.36it/s] 52%|█████▏    | 912/1746 [02:08<01:56,  7.13it/s] 52%|█████▏    | 913/1746 [02:08<01:51,  7.47it/s] 52%|█████▏    | 914/1746 [02:08<01:46,  7.83it/s] 52%|█████▏    | 915/1746 [02:08<01:45,  7.85it/s] 52%|█████▏    | 916/1746 [02:08<01:45,  7.89it/s] 53%|█████▎    | 917/1746 [02:08<01:42,  8.08it/s] 53%|█████▎    | 918/1746 [02:08<01:42,  8.11it/s] 53%|█████▎    | 919/1746 [02:08<01:41,  8.19it/s] 53%|█████▎    | 920/1746 [02:08<01:39,  8.34it/s] 53%|█████▎    | 921/1746 [02:09<01:38,  8.35it/s] 53%|█████▎    | 922/1746 [02:09<01:40,  8.21it/s] 53%|█████▎    | 923/1746 [02:09<01:38,  8.39it/s] 53%|█████▎    | 924/1746 [02:09<01:37,  8.46it/s] 53%|█████▎    | 925/1746 [02:09<01:36,  8.50it/s] 53%|█████▎    | 926/1746 [02:09<01:35,  8.61it/s] 53%|█████▎    | 927/1746 [02:09<01:36,  8.49it/s] 53%|█████▎    | 928/1746 [02:09<01:37,  8.40it/s] 53%|█████▎    | 929/1746 [02:10<02:04,  6.57it/s] 53%|█████▎    | 930/1746 [02:10<01:57,  6.97it/s] 53%|█████▎    | 931/1746 [02:10<01:48,  7.53it/s] 53%|█████▎    | 932/1746 [02:10<01:44,  7.81it/s] 53%|█████▎    | 933/1746 [02:10<01:39,  8.20it/s] 53%|█████▎    | 934/1746 [02:10<01:38,  8.22it/s] 54%|█████▎    | 935/1746 [02:10<01:38,  8.25it/s] 54%|█████▎    | 936/1746 [02:10<01:34,  8.57it/s] 54%|█████▎    | 937/1746 [02:11<01:42,  7.88it/s] 54%|█████▍    | 939/1746 [02:11<01:27,  9.26it/s] 54%|█████▍    | 940/1746 [02:11<01:28,  9.09it/s] 54%|█████▍    | 942/1746 [02:11<01:27,  9.19it/s] 54%|█████▍    | 943/1746 [02:11<01:28,  9.04it/s] 54%|█████▍    | 944/1746 [02:11<01:29,  8.94it/s] 54%|█████▍    | 945/1746 [02:11<01:30,  8.87it/s] 54%|█████▍    | 946/1746 [02:12<01:32,  8.68it/s] 54%|█████▍    | 947/1746 [02:12<01:32,  8.68it/s] 54%|█████▍    | 948/1746 [02:12<01:34,  8.40it/s] 54%|█████▍    | 949/1746 [02:12<01:40,  7.95it/s] 54%|█████▍    | 950/1746 [02:12<01:42,  7.75it/s] 54%|█████▍    | 951/1746 [02:12<01:40,  7.88it/s] 55%|█████▍    | 952/1746 [02:12<01:39,  7.99it/s] 55%|█████▍    | 953/1746 [02:12<01:38,  8.01it/s] 55%|█████▍    | 954/1746 [02:13<01:36,  8.22it/s] 55%|█████▍    | 955/1746 [02:13<01:33,  8.45it/s] 55%|█████▍    | 956/1746 [02:13<01:42,  7.73it/s] 55%|█████▍    | 957/1746 [02:13<01:41,  7.80it/s] 55%|█████▍    | 958/1746 [02:13<01:41,  7.73it/s] 55%|█████▍    | 959/1746 [02:13<01:42,  7.70it/s] 55%|█████▍    | 960/1746 [02:13<01:41,  7.77it/s] 55%|█████▌    | 961/1746 [02:13<01:37,  8.09it/s] 55%|█████▌    | 962/1746 [02:14<01:36,  8.11it/s] 55%|█████▌    | 963/1746 [02:14<01:47,  7.28it/s] 55%|█████▌    | 964/1746 [02:14<01:44,  7.50it/s] 55%|█████▌    | 965/1746 [02:14<01:40,  7.78it/s] 55%|█████▌    | 966/1746 [02:14<01:39,  7.80it/s] 55%|█████▌    | 967/1746 [02:14<01:37,  7.99it/s] 55%|█████▌    | 968/1746 [02:14<01:36,  8.08it/s] 55%|█████▌    | 969/1746 [02:15<01:34,  8.22it/s] 56%|█████▌    | 970/1746 [02:15<01:36,  8.04it/s] 56%|█████▌    | 971/1746 [02:15<01:34,  8.17it/s] 56%|█████▌    | 972/1746 [02:15<01:31,  8.46it/s] 56%|█████▌    | 973/1746 [02:15<01:32,  8.33it/s] 56%|█████▌    | 974/1746 [02:15<01:32,  8.34it/s] 56%|█████▌    | 975/1746 [02:15<01:33,  8.27it/s] 56%|█████▌    | 976/1746 [02:15<01:32,  8.29it/s] 56%|█████▌    | 977/1746 [02:15<01:30,  8.51it/s] 56%|█████▌    | 979/1746 [02:16<01:24,  9.06it/s] 56%|█████▌    | 980/1746 [02:16<01:25,  9.00it/s] 56%|█████▌    | 982/1746 [02:16<01:21,  9.36it/s] 56%|█████▋    | 983/1746 [02:16<01:21,  9.32it/s] 56%|█████▋    | 984/1746 [02:16<01:23,  9.14it/s] 56%|█████▋    | 985/1746 [02:16<01:23,  9.11it/s] 56%|█████▋    | 986/1746 [02:16<01:27,  8.66it/s] 57%|█████▋    | 987/1746 [02:17<01:28,  8.58it/s] 57%|█████▋    | 988/1746 [02:17<01:28,  8.54it/s] 57%|█████▋    | 989/1746 [02:17<01:26,  8.74it/s] 57%|█████▋    | 990/1746 [02:17<01:25,  8.88it/s] 57%|█████▋    | 991/1746 [02:17<01:27,  8.64it/s] 57%|█████▋    | 992/1746 [02:17<01:27,  8.63it/s] 57%|█████▋    | 993/1746 [02:17<01:30,  8.34it/s] 57%|█████▋    | 994/1746 [02:17<01:29,  8.38it/s] 57%|█████▋    | 995/1746 [02:17<01:27,  8.54it/s] 57%|█████▋    | 996/1746 [02:18<01:27,  8.54it/s] 57%|█████▋    | 997/1746 [02:18<01:28,  8.51it/s] 57%|█████▋    | 998/1746 [02:18<01:28,  8.47it/s] 57%|█████▋    | 999/1746 [02:18<01:28,  8.46it/s] 57%|█████▋    | 1000/1746 [02:18<01:27,  8.54it/s] 57%|█████▋    | 1001/1746 [02:18<01:27,  8.55it/s] 57%|█████▋    | 1002/1746 [02:18<01:26,  8.65it/s] 57%|█████▋    | 1003/1746 [02:18<01:26,  8.64it/s] 58%|█████▊    | 1004/1746 [02:19<01:27,  8.44it/s] 58%|█████▊    | 1005/1746 [02:19<01:25,  8.67it/s] 58%|█████▊    | 1007/1746 [02:19<01:19,  9.35it/s] 58%|█████▊    | 1008/1746 [02:19<01:21,  9.05it/s] 58%|█████▊    | 1009/1746 [02:19<01:23,  8.84it/s] 58%|█████▊    | 1010/1746 [02:19<01:24,  8.75it/s] 58%|█████▊    | 1011/1746 [02:19<01:24,  8.69it/s] 58%|█████▊    | 1012/1746 [02:19<01:22,  8.86it/s] 58%|█████▊    | 1013/1746 [02:20<01:22,  8.94it/s] 58%|█████▊    | 1014/1746 [02:20<01:23,  8.80it/s] 58%|█████▊    | 1016/1746 [02:20<01:19,  9.13it/s] 58%|█████▊    | 1017/1746 [02:20<01:19,  9.12it/s] 58%|█████▊    | 1018/1746 [02:20<01:19,  9.17it/s] 58%|█████▊    | 1019/1746 [02:20<01:20,  9.07it/s] 58%|█████▊    | 1020/1746 [02:20<01:19,  9.13it/s] 58%|█████▊    | 1021/1746 [02:20<01:21,  8.87it/s] 59%|█████▊    | 1022/1746 [02:21<01:22,  8.81it/s] 59%|█████▊    | 1023/1746 [02:21<01:22,  8.74it/s] 59%|█████▊    | 1025/1746 [02:21<01:15,  9.51it/s] 59%|█████▉    | 1026/1746 [02:21<01:19,  9.01it/s] 59%|█████▉    | 1027/1746 [02:21<01:20,  8.88it/s] 59%|█████▉    | 1028/1746 [02:21<01:19,  8.98it/s] 59%|█████▉    | 1029/1746 [02:21<01:21,  8.79it/s] 59%|█████▉    | 1030/1746 [02:21<01:25,  8.41it/s] 59%|█████▉    | 1031/1746 [02:22<01:24,  8.48it/s] 59%|█████▉    | 1033/1746 [02:22<01:18,  9.08it/s] 59%|█████▉    | 1034/1746 [02:22<01:18,  9.05it/s] 59%|█████▉    | 1035/1746 [02:22<01:18,  9.04it/s] 59%|█████▉    | 1036/1746 [02:22<01:19,  8.89it/s] 59%|█████▉    | 1037/1746 [02:22<01:18,  8.98it/s] 59%|█████▉    | 1038/1746 [02:22<01:19,  8.86it/s] 60%|█████▉    | 1039/1746 [02:22<01:20,  8.80it/s] 60%|█████▉    | 1040/1746 [02:23<01:21,  8.70it/s] 60%|█████▉    | 1041/1746 [02:23<01:20,  8.79it/s] 60%|█████▉    | 1042/1746 [02:23<01:20,  8.71it/s] 60%|█████▉    | 1043/1746 [02:23<01:22,  8.50it/s] 60%|█████▉    | 1044/1746 [02:23<01:27,  7.99it/s] 60%|█████▉    | 1045/1746 [02:23<01:31,  7.62it/s] 60%|█████▉    | 1046/1746 [02:23<01:29,  7.84it/s] 60%|█████▉    | 1047/1746 [02:23<01:29,  7.77it/s] 60%|██████    | 1048/1746 [02:24<01:24,  8.27it/s] 60%|██████    | 1049/1746 [02:24<01:20,  8.62it/s] 60%|██████    | 1050/1746 [02:24<01:18,  8.81it/s] 60%|██████    | 1051/1746 [02:24<01:17,  9.00it/s] 60%|██████    | 1052/1746 [02:24<01:18,  8.89it/s] 60%|██████    | 1053/1746 [02:24<01:17,  8.98it/s] 60%|██████    | 1054/1746 [02:24<01:17,  8.98it/s] 60%|██████    | 1055/1746 [02:24<01:17,  8.89it/s] 60%|██████    | 1056/1746 [02:24<01:17,  8.85it/s] 61%|██████    | 1057/1746 [02:25<01:17,  8.88it/s] 61%|██████    | 1058/1746 [02:25<01:18,  8.81it/s] 61%|██████    | 1059/1746 [02:25<01:22,  8.36it/s] 61%|██████    | 1060/1746 [02:25<01:20,  8.49it/s] 61%|██████    | 1061/1746 [02:25<01:18,  8.70it/s] 61%|██████    | 1062/1746 [02:25<01:16,  8.92it/s] 61%|██████    | 1063/1746 [02:25<01:15,  9.06it/s] 61%|██████    | 1065/1746 [02:25<01:13,  9.30it/s] 61%|██████    | 1066/1746 [02:26<01:13,  9.20it/s] 61%|██████    | 1067/1746 [02:26<01:14,  9.15it/s] 61%|██████    | 1068/1746 [02:26<01:13,  9.24it/s] 61%|██████    | 1069/1746 [02:26<01:12,  9.28it/s] 61%|██████▏   | 1070/1746 [02:26<01:14,  9.04it/s] 61%|██████▏   | 1071/1746 [02:26<01:14,  9.06it/s] 61%|██████▏   | 1072/1746 [02:26<01:14,  9.08it/s] 61%|██████▏   | 1073/1746 [02:26<01:15,  8.90it/s] 62%|██████▏   | 1074/1746 [02:26<01:14,  8.98it/s] 62%|██████▏   | 1075/1746 [02:27<01:15,  8.91it/s] 62%|██████▏   | 1076/1746 [02:27<01:15,  8.92it/s] 62%|██████▏   | 1077/1746 [02:27<01:16,  8.70it/s] 62%|██████▏   | 1078/1746 [02:27<01:16,  8.72it/s] 62%|██████▏   | 1079/1746 [02:27<01:16,  8.73it/s] 62%|██████▏   | 1080/1746 [02:27<01:14,  8.96it/s] 62%|██████▏   | 1081/1746 [02:27<01:13,  8.99it/s] 62%|██████▏   | 1082/1746 [02:27<01:16,  8.71it/s] 62%|██████▏   | 1083/1746 [02:27<01:14,  8.85it/s] 62%|██████▏   | 1084/1746 [02:28<01:14,  8.87it/s] 62%|██████▏   | 1085/1746 [02:28<01:15,  8.80it/s] 62%|██████▏   | 1086/1746 [02:28<01:12,  9.10it/s] 62%|██████▏   | 1088/1746 [02:28<01:08,  9.58it/s] 62%|██████▏   | 1089/1746 [02:28<01:09,  9.41it/s] 62%|██████▏   | 1090/1746 [02:28<01:12,  9.08it/s] 62%|██████▏   | 1091/1746 [02:28<01:13,  8.85it/s] 63%|██████▎   | 1092/1746 [02:28<01:12,  9.06it/s] 63%|██████▎   | 1093/1746 [02:29<01:11,  9.15it/s] 63%|██████▎   | 1094/1746 [02:29<01:11,  9.17it/s] 63%|██████▎   | 1095/1746 [02:29<01:09,  9.33it/s] 63%|██████▎   | 1096/1746 [02:29<01:09,  9.33it/s] 63%|██████▎   | 1097/1746 [02:29<01:10,  9.22it/s] 63%|██████▎   | 1098/1746 [02:29<01:12,  8.96it/s] 63%|██████▎   | 1099/1746 [02:29<01:11,  9.03it/s] 63%|██████▎   | 1100/1746 [02:29<01:11,  9.06it/s] 63%|██████▎   | 1101/1746 [02:29<01:12,  8.86it/s] 63%|██████▎   | 1102/1746 [02:30<01:12,  8.84it/s] 63%|██████▎   | 1103/1746 [02:30<01:12,  8.82it/s] 63%|██████▎   | 1105/1746 [02:30<01:10,  9.15it/s] 63%|██████▎   | 1106/1746 [02:30<01:10,  9.06it/s] 63%|██████▎   | 1107/1746 [02:30<01:09,  9.13it/s] 64%|██████▎   | 1109/1746 [02:30<01:08,  9.25it/s] 64%|██████▎   | 1110/1746 [02:30<01:08,  9.35it/s] 64%|██████▎   | 1111/1746 [02:31<01:10,  9.07it/s] 64%|██████▎   | 1112/1746 [02:31<01:16,  8.34it/s] 64%|██████▎   | 1113/1746 [02:31<01:14,  8.45it/s] 64%|██████▍   | 1114/1746 [02:31<01:12,  8.69it/s] 64%|██████▍   | 1115/1746 [02:31<01:12,  8.71it/s] 64%|██████▍   | 1116/1746 [02:31<01:12,  8.68it/s] 64%|██████▍   | 1117/1746 [02:31<01:09,  8.99it/s] 64%|██████▍   | 1118/1746 [02:31<01:10,  8.89it/s] 64%|██████▍   | 1120/1746 [02:32<01:04,  9.69it/s] 64%|██████▍   | 1121/1746 [02:32<01:04,  9.72it/s] 64%|██████▍   | 1122/1746 [02:32<01:05,  9.50it/s] 64%|██████▍   | 1123/1746 [02:34<07:25,  1.40it/s] 64%|██████▍   | 1124/1746 [02:34<05:39,  1.83it/s] 64%|██████▍   | 1125/1746 [02:34<04:20,  2.39it/s] 64%|██████▍   | 1126/1746 [02:35<03:46,  2.74it/s] 65%|██████▍   | 1127/1746 [02:35<03:01,  3.40it/s] 65%|██████▍   | 1129/1746 [02:35<02:06,  4.88it/s] 65%|██████▍   | 1130/1746 [02:35<01:52,  5.50it/s] 65%|██████▍   | 1131/1746 [02:35<01:39,  6.20it/s] 65%|██████▍   | 1132/1746 [02:35<01:29,  6.84it/s] 65%|██████▍   | 1133/1746 [02:35<01:22,  7.39it/s] 65%|██████▍   | 1134/1746 [02:35<01:20,  7.63it/s] 65%|██████▌   | 1135/1746 [02:36<01:17,  7.93it/s] 65%|██████▌   | 1136/1746 [02:36<01:13,  8.31it/s] 65%|██████▌   | 1137/1746 [02:36<01:09,  8.74it/s] 65%|██████▌   | 1138/1746 [02:36<01:09,  8.73it/s] 65%|██████▌   | 1139/1746 [02:36<01:08,  8.91it/s] 65%|██████▌   | 1140/1746 [02:36<01:10,  8.65it/s] 65%|██████▌   | 1141/1746 [02:36<01:08,  8.89it/s] 65%|██████▌   | 1142/1746 [02:36<01:09,  8.63it/s] 65%|██████▌   | 1143/1746 [02:36<01:17,  7.75it/s] 66%|██████▌   | 1144/1746 [02:37<01:15,  8.00it/s] 66%|██████▌   | 1145/1746 [02:37<01:11,  8.37it/s] 66%|██████▌   | 1146/1746 [02:37<01:09,  8.66it/s] 66%|██████▌   | 1147/1746 [02:37<01:11,  8.42it/s] 66%|██████▌   | 1148/1746 [02:37<01:08,  8.79it/s] 66%|██████▌   | 1149/1746 [02:37<01:06,  8.98it/s] 66%|██████▌   | 1151/1746 [02:37<01:02,  9.54it/s] 66%|██████▌   | 1152/1746 [02:37<01:03,  9.40it/s] 66%|██████▌   | 1153/1746 [02:38<01:02,  9.51it/s] 66%|██████▌   | 1154/1746 [02:38<01:02,  9.44it/s] 66%|██████▌   | 1155/1746 [02:38<01:06,  8.94it/s] 66%|██████▌   | 1156/1746 [02:38<01:04,  9.19it/s] 66%|██████▋   | 1157/1746 [02:38<01:03,  9.22it/s] 66%|██████▋   | 1158/1746 [02:38<01:03,  9.22it/s] 66%|██████▋   | 1159/1746 [02:38<01:02,  9.36it/s] 66%|██████▋   | 1161/1746 [02:38<01:00,  9.74it/s] 67%|██████▋   | 1162/1746 [02:39<00:59,  9.80it/s] 67%|██████▋   | 1163/1746 [02:39<01:02,  9.33it/s] 67%|██████▋   | 1164/1746 [02:39<01:01,  9.48it/s] 67%|██████▋   | 1166/1746 [02:39<00:58,  9.84it/s] 67%|██████▋   | 1167/1746 [02:39<00:58,  9.84it/s] 67%|██████▋   | 1169/1746 [02:39<00:58,  9.90it/s] 67%|██████▋   | 1170/1746 [02:39<00:58,  9.86it/s] 67%|██████▋   | 1171/1746 [02:39<00:58,  9.80it/s] 67%|██████▋   | 1172/1746 [02:40<01:00,  9.42it/s] 67%|██████▋   | 1174/1746 [02:40<00:59,  9.57it/s] 67%|██████▋   | 1175/1746 [02:40<00:59,  9.65it/s] 67%|██████▋   | 1176/1746 [02:40<00:59,  9.61it/s] 67%|██████▋   | 1177/1746 [02:40<00:59,  9.62it/s] 67%|██████▋   | 1178/1746 [02:40<01:03,  8.97it/s] 68%|██████▊   | 1180/1746 [02:40<00:59,  9.53it/s] 68%|██████▊   | 1182/1746 [02:41<00:57,  9.79it/s] 68%|██████▊   | 1184/1746 [02:41<00:56,  9.90it/s] 68%|██████▊   | 1186/1746 [02:41<00:56,  9.89it/s] 68%|██████▊   | 1187/1746 [02:41<00:57,  9.78it/s] 68%|██████▊   | 1188/1746 [02:41<00:57,  9.67it/s] 68%|██████▊   | 1189/1746 [02:41<00:57,  9.67it/s] 68%|██████▊   | 1190/1746 [02:41<00:58,  9.45it/s] 68%|██████▊   | 1191/1746 [02:42<00:59,  9.29it/s] 68%|██████▊   | 1192/1746 [02:42<01:01,  9.06it/s] 68%|██████▊   | 1193/1746 [02:42<01:01,  8.98it/s] 68%|██████▊   | 1194/1746 [02:42<01:00,  9.19it/s] 68%|██████▊   | 1195/1746 [02:42<01:00,  9.18it/s] 68%|██████▊   | 1196/1746 [02:42<00:59,  9.25it/s] 69%|██████▊   | 1197/1746 [02:42<00:58,  9.34it/s] 69%|██████▊   | 1198/1746 [02:42<01:04,  8.52it/s] 69%|██████▊   | 1199/1746 [02:42<01:01,  8.82it/s] 69%|██████▉   | 1201/1746 [02:43<00:58,  9.28it/s] 69%|██████▉   | 1202/1746 [02:43<00:59,  9.20it/s] 69%|██████▉   | 1203/1746 [02:43<01:00,  8.91it/s] 69%|██████▉   | 1204/1746 [02:43<01:00,  9.00it/s] 69%|██████▉   | 1205/1746 [02:43<00:58,  9.25it/s] 69%|██████▉   | 1206/1746 [02:43<00:59,  9.13it/s] 69%|██████▉   | 1207/1746 [02:43<01:02,  8.68it/s] 69%|██████▉   | 1208/1746 [02:43<01:01,  8.77it/s] 69%|██████▉   | 1209/1746 [02:44<01:03,  8.51it/s] 69%|██████▉   | 1210/1746 [02:44<01:01,  8.69it/s] 69%|██████▉   | 1211/1746 [02:44<00:59,  8.94it/s] 69%|██████▉   | 1212/1746 [02:44<00:59,  9.01it/s] 70%|██████▉   | 1214/1746 [02:44<00:55,  9.52it/s] 70%|██████▉   | 1216/1746 [02:44<00:53,  9.83it/s] 70%|██████▉   | 1218/1746 [02:44<00:53,  9.90it/s] 70%|██████▉   | 1219/1746 [02:45<00:53,  9.82it/s] 70%|██████▉   | 1221/1746 [02:45<00:53,  9.79it/s] 70%|██████▉   | 1222/1746 [02:45<00:53,  9.73it/s] 70%|███████   | 1223/1746 [02:45<00:53,  9.72it/s] 70%|███████   | 1224/1746 [02:45<00:53,  9.70it/s] 70%|███████   | 1225/1746 [02:45<00:54,  9.60it/s] 70%|███████   | 1226/1746 [02:45<00:56,  9.26it/s] 70%|███████   | 1227/1746 [02:45<00:55,  9.42it/s] 70%|███████   | 1228/1746 [02:46<00:55,  9.41it/s] 70%|███████   | 1229/1746 [02:46<00:55,  9.33it/s] 70%|███████   | 1230/1746 [02:46<00:54,  9.43it/s] 71%|███████   | 1231/1746 [02:46<00:56,  9.12it/s] 71%|███████   | 1233/1746 [02:46<00:55,  9.26it/s] 71%|███████   | 1235/1746 [02:46<00:52,  9.72it/s] 71%|███████   | 1236/1746 [02:46<00:52,  9.70it/s] 71%|███████   | 1237/1746 [02:46<00:53,  9.52it/s] 71%|███████   | 1238/1746 [02:47<00:53,  9.48it/s] 71%|███████   | 1240/1746 [02:47<00:52,  9.62it/s] 71%|███████   | 1242/1746 [02:47<00:51,  9.80it/s] 71%|███████   | 1243/1746 [02:47<00:51,  9.76it/s] 71%|███████   | 1244/1746 [02:47<00:54,  9.19it/s] 71%|███████▏  | 1246/1746 [02:47<00:52,  9.58it/s] 71%|███████▏  | 1248/1746 [02:48<00:50,  9.83it/s] 72%|███████▏  | 1249/1746 [02:48<00:50,  9.86it/s] 72%|███████▏  | 1250/1746 [02:48<00:52,  9.38it/s] 72%|███████▏  | 1252/1746 [02:48<00:51,  9.65it/s] 72%|███████▏  | 1253/1746 [02:48<00:50,  9.67it/s] 72%|███████▏  | 1254/1746 [02:48<00:53,  9.18it/s] 72%|███████▏  | 1255/1746 [02:48<00:53,  9.22it/s] 72%|███████▏  | 1256/1746 [02:48<00:52,  9.37it/s] 72%|███████▏  | 1257/1746 [02:49<00:52,  9.40it/s] 72%|███████▏  | 1258/1746 [02:49<00:52,  9.32it/s] 72%|███████▏  | 1259/1746 [02:49<01:01,  7.94it/s] 72%|███████▏  | 1260/1746 [02:49<00:58,  8.35it/s] 72%|███████▏  | 1261/1746 [02:49<00:56,  8.56it/s] 72%|███████▏  | 1262/1746 [02:49<00:57,  8.47it/s] 72%|███████▏  | 1263/1746 [02:49<00:54,  8.87it/s] 72%|███████▏  | 1265/1746 [02:49<00:50,  9.50it/s] 73%|███████▎  | 1266/1746 [02:50<00:50,  9.42it/s] 73%|███████▎  | 1267/1746 [02:50<00:50,  9.43it/s] 73%|███████▎  | 1268/1746 [02:50<00:50,  9.51it/s] 73%|███████▎  | 1269/1746 [02:50<00:49,  9.58it/s] 73%|███████▎  | 1271/1746 [02:50<00:48,  9.82it/s] 73%|███████▎  | 1272/1746 [02:50<00:48,  9.73it/s] 73%|███████▎  | 1274/1746 [02:50<00:48,  9.82it/s] 73%|███████▎  | 1276/1746 [02:51<00:47,  9.84it/s] 73%|███████▎  | 1277/1746 [02:51<00:48,  9.72it/s] 73%|███████▎  | 1278/1746 [02:51<00:48,  9.72it/s] 73%|███████▎  | 1280/1746 [02:51<00:47,  9.80it/s] 73%|███████▎  | 1282/1746 [02:51<00:46,  9.94it/s] 73%|███████▎  | 1283/1746 [02:51<00:47,  9.81it/s] 74%|███████▎  | 1284/1746 [02:51<00:48,  9.52it/s] 74%|███████▎  | 1286/1746 [02:52<00:47,  9.72it/s] 74%|███████▎  | 1287/1746 [02:52<00:50,  9.02it/s] 74%|███████▍  | 1288/1746 [02:52<00:50,  9.13it/s] 74%|███████▍  | 1289/1746 [02:52<00:49,  9.15it/s] 74%|███████▍  | 1290/1746 [02:52<00:50,  8.95it/s] 74%|███████▍  | 1292/1746 [02:52<00:48,  9.43it/s] 74%|███████▍  | 1293/1746 [02:52<00:47,  9.52it/s] 74%|███████▍  | 1295/1746 [02:53<00:46,  9.74it/s] 74%|███████▍  | 1296/1746 [02:53<00:45,  9.79it/s] 74%|███████▍  | 1298/1746 [02:53<00:45,  9.95it/s] 74%|███████▍  | 1299/1746 [02:53<00:45,  9.82it/s] 74%|███████▍  | 1300/1746 [02:53<00:46,  9.68it/s] 75%|███████▍  | 1301/1746 [02:53<00:45,  9.70it/s] 75%|███████▍  | 1302/1746 [02:53<00:46,  9.62it/s] 75%|███████▍  | 1303/1746 [02:53<00:46,  9.53it/s] 75%|███████▍  | 1304/1746 [02:54<00:46,  9.48it/s] 75%|███████▍  | 1306/1746 [02:54<00:46,  9.50it/s] 75%|███████▍  | 1307/1746 [02:54<00:46,  9.49it/s] 75%|███████▍  | 1308/1746 [02:54<00:45,  9.59it/s] 75%|███████▍  | 1309/1746 [02:54<00:45,  9.69it/s] 75%|███████▌  | 1310/1746 [02:54<00:47,  9.17it/s] 75%|███████▌  | 1311/1746 [02:54<00:46,  9.33it/s] 75%|███████▌  | 1313/1746 [02:54<00:44,  9.73it/s] 75%|███████▌  | 1314/1746 [02:55<00:44,  9.72it/s] 75%|███████▌  | 1315/1746 [02:55<00:45,  9.55it/s] 75%|███████▌  | 1317/1746 [02:55<00:41, 10.39it/s] 76%|███████▌  | 1319/1746 [02:55<00:40, 10.46it/s] 76%|███████▌  | 1321/1746 [02:55<00:44,  9.48it/s] 76%|███████▌  | 1322/1746 [02:55<00:46,  9.07it/s] 76%|███████▌  | 1324/1746 [02:56<00:45,  9.34it/s] 76%|███████▌  | 1325/1746 [02:56<00:44,  9.41it/s] 76%|███████▌  | 1326/1746 [02:56<00:44,  9.52it/s] 76%|███████▌  | 1327/1746 [02:56<00:44,  9.43it/s] 76%|███████▌  | 1328/1746 [02:56<00:43,  9.53it/s] 76%|███████▌  | 1329/1746 [02:56<00:46,  9.04it/s] 76%|███████▌  | 1330/1746 [02:56<00:47,  8.77it/s] 76%|███████▌  | 1331/1746 [02:56<00:47,  8.66it/s] 76%|███████▋  | 1332/1746 [02:57<00:46,  8.83it/s] 76%|███████▋  | 1334/1746 [02:57<00:42,  9.73it/s] 76%|███████▋  | 1335/1746 [02:57<00:42,  9.67it/s] 77%|███████▋  | 1336/1746 [02:57<00:42,  9.54it/s] 77%|███████▋  | 1338/1746 [02:57<00:40, 10.02it/s] 77%|███████▋  | 1340/1746 [02:57<00:39, 10.31it/s] 77%|███████▋  | 1342/1746 [02:57<00:40,  9.91it/s] 77%|███████▋  | 1343/1746 [02:58<00:42,  9.59it/s] 77%|███████▋  | 1345/1746 [02:58<00:41,  9.76it/s] 77%|███████▋  | 1347/1746 [02:58<00:39, 10.07it/s] 77%|███████▋  | 1348/1746 [02:58<00:41,  9.66it/s] 77%|███████▋  | 1350/1746 [02:58<00:40,  9.78it/s] 77%|███████▋  | 1351/1746 [02:58<00:40,  9.70it/s] 77%|███████▋  | 1352/1746 [02:59<00:40,  9.76it/s] 77%|███████▋  | 1353/1746 [02:59<00:40,  9.60it/s] 78%|███████▊  | 1355/1746 [02:59<00:39,  9.92it/s] 78%|███████▊  | 1357/1746 [02:59<00:38, 10.22it/s] 78%|███████▊  | 1359/1746 [02:59<00:40,  9.51it/s] 78%|███████▊  | 1360/1746 [02:59<00:40,  9.55it/s] 78%|███████▊  | 1362/1746 [03:00<00:39,  9.81it/s] 78%|███████▊  | 1363/1746 [03:00<00:40,  9.43it/s] 78%|███████▊  | 1365/1746 [03:00<00:39,  9.62it/s] 78%|███████▊  | 1366/1746 [03:00<00:40,  9.38it/s] 78%|███████▊  | 1367/1746 [03:00<00:39,  9.51it/s] 78%|███████▊  | 1368/1746 [03:00<00:39,  9.55it/s] 78%|███████▊  | 1369/1746 [03:00<00:39,  9.54it/s] 78%|███████▊  | 1370/1746 [03:00<00:39,  9.52it/s] 79%|███████▊  | 1372/1746 [03:01<00:37, 10.04it/s] 79%|███████▊  | 1373/1746 [03:01<00:37,  9.99it/s] 79%|███████▉  | 1375/1746 [03:01<00:36, 10.28it/s] 79%|███████▉  | 1377/1746 [03:01<00:36, 10.09it/s] 79%|███████▉  | 1379/1746 [03:01<00:37,  9.72it/s] 79%|███████▉  | 1380/1746 [03:01<00:38,  9.55it/s] 79%|███████▉  | 1382/1746 [03:02<00:35, 10.18it/s] 79%|███████▉  | 1384/1746 [03:02<00:35, 10.13it/s] 79%|███████▉  | 1386/1746 [03:02<00:35, 10.03it/s] 79%|███████▉  | 1388/1746 [03:02<00:36,  9.93it/s] 80%|███████▉  | 1389/1746 [03:02<00:36,  9.89it/s] 80%|███████▉  | 1390/1746 [03:02<00:36,  9.86it/s] 80%|███████▉  | 1391/1746 [03:03<00:38,  9.10it/s] 80%|███████▉  | 1392/1746 [03:03<00:39,  8.99it/s] 80%|███████▉  | 1393/1746 [03:03<00:41,  8.58it/s] 80%|███████▉  | 1395/1746 [03:03<00:36,  9.66it/s] 80%|████████  | 1397/1746 [03:03<00:36,  9.59it/s] 80%|████████  | 1398/1746 [03:03<00:36,  9.54it/s] 80%|████████  | 1399/1746 [03:03<00:36,  9.54it/s] 80%|████████  | 1400/1746 [03:03<00:36,  9.55it/s] 80%|████████  | 1401/1746 [03:04<00:36,  9.40it/s] 80%|████████  | 1402/1746 [03:04<00:37,  9.11it/s] 80%|████████  | 1403/1746 [03:04<00:38,  8.94it/s] 80%|████████  | 1405/1746 [03:04<00:34,  9.88it/s] 81%|████████  | 1406/1746 [03:04<00:34,  9.74it/s] 81%|████████  | 1407/1746 [03:04<00:34,  9.78it/s] 81%|████████  | 1408/1746 [03:04<00:34,  9.70it/s] 81%|████████  | 1409/1746 [03:04<00:34,  9.73it/s] 81%|████████  | 1410/1746 [03:05<00:36,  9.23it/s] 81%|████████  | 1411/1746 [03:05<00:35,  9.39it/s] 81%|████████  | 1412/1746 [03:05<00:35,  9.51it/s] 81%|████████  | 1413/1746 [03:05<00:34,  9.56it/s] 81%|████████  | 1415/1746 [03:05<00:33,  9.93it/s] 81%|████████  | 1417/1746 [03:05<00:33,  9.87it/s] 81%|████████  | 1418/1746 [03:05<00:33,  9.84it/s] 81%|████████▏ | 1419/1746 [03:05<00:34,  9.54it/s] 81%|████████▏ | 1421/1746 [03:06<00:33,  9.72it/s] 82%|████████▏ | 1423/1746 [03:06<00:35,  9.22it/s] 82%|████████▏ | 1425/1746 [03:06<00:31, 10.05it/s] 82%|████████▏ | 1427/1746 [03:06<00:32,  9.83it/s] 82%|████████▏ | 1428/1746 [03:06<00:32,  9.76it/s] 82%|████████▏ | 1429/1746 [03:06<00:32,  9.76it/s] 82%|████████▏ | 1431/1746 [03:07<00:32,  9.76it/s] 82%|████████▏ | 1432/1746 [03:07<00:33,  9.43it/s] 82%|████████▏ | 1433/1746 [03:07<00:32,  9.50it/s] 82%|████████▏ | 1434/1746 [03:07<00:32,  9.49it/s] 82%|████████▏ | 1435/1746 [03:07<00:32,  9.46it/s] 82%|████████▏ | 1436/1746 [03:07<00:32,  9.57it/s] 82%|████████▏ | 1438/1746 [03:07<00:31,  9.74it/s] 82%|████████▏ | 1439/1746 [03:08<00:31,  9.70it/s] 83%|████████▎ | 1441/1746 [03:08<00:30, 10.03it/s] 83%|████████▎ | 1442/1746 [03:08<00:30,  9.88it/s] 83%|████████▎ | 1443/1746 [03:08<00:30,  9.80it/s] 83%|████████▎ | 1444/1746 [03:08<00:31,  9.59it/s] 83%|████████▎ | 1445/1746 [03:08<00:31,  9.62it/s] 83%|████████▎ | 1446/1746 [03:08<00:31,  9.46it/s] 83%|████████▎ | 1447/1746 [03:08<00:31,  9.52it/s] 83%|████████▎ | 1448/1746 [03:08<00:31,  9.39it/s] 83%|████████▎ | 1450/1746 [03:09<00:30,  9.86it/s] 83%|████████▎ | 1451/1746 [03:09<00:30,  9.76it/s] 83%|████████▎ | 1452/1746 [03:09<00:30,  9.66it/s] 83%|████████▎ | 1454/1746 [03:09<00:29,  9.81it/s] 83%|████████▎ | 1455/1746 [03:09<00:31,  9.16it/s] 83%|████████▎ | 1456/1746 [03:09<00:31,  9.21it/s] 83%|████████▎ | 1457/1746 [03:09<00:30,  9.33it/s] 84%|████████▎ | 1458/1746 [03:10<00:30,  9.34it/s] 84%|████████▎ | 1459/1746 [03:10<00:30,  9.50it/s] 84%|████████▎ | 1460/1746 [03:10<00:29,  9.57it/s] 84%|████████▎ | 1462/1746 [03:10<00:29,  9.66it/s] 84%|████████▍ | 1463/1746 [03:10<00:31,  8.90it/s] 84%|████████▍ | 1464/1746 [03:10<00:30,  9.13it/s] 84%|████████▍ | 1465/1746 [03:10<00:30,  9.34it/s] 84%|████████▍ | 1466/1746 [03:10<00:29,  9.37it/s] 84%|████████▍ | 1467/1746 [03:10<00:29,  9.40it/s] 84%|████████▍ | 1468/1746 [03:11<00:30,  9.13it/s] 84%|████████▍ | 1470/1746 [03:11<00:29,  9.47it/s] 84%|████████▍ | 1471/1746 [03:11<00:31,  8.76it/s] 84%|████████▍ | 1472/1746 [03:11<00:30,  8.85it/s] 84%|████████▍ | 1473/1746 [03:11<00:30,  8.95it/s] 84%|████████▍ | 1474/1746 [03:11<00:32,  8.38it/s] 85%|████████▍ | 1476/1746 [03:12<00:32,  8.29it/s] 85%|████████▍ | 1477/1746 [03:12<00:31,  8.60it/s] 85%|████████▍ | 1478/1746 [03:12<00:30,  8.90it/s] 85%|████████▍ | 1480/1746 [03:12<00:28,  9.35it/s] 85%|████████▍ | 1481/1746 [03:12<00:29,  9.03it/s] 85%|████████▍ | 1482/1746 [03:12<00:29,  9.07it/s] 85%|████████▍ | 1483/1746 [03:12<00:28,  9.14it/s] 85%|████████▌ | 1485/1746 [03:12<00:27,  9.65it/s] 85%|████████▌ | 1486/1746 [03:13<00:27,  9.49it/s] 85%|████████▌ | 1487/1746 [03:13<00:27,  9.57it/s] 85%|████████▌ | 1488/1746 [03:13<00:26,  9.64it/s] 85%|████████▌ | 1490/1746 [03:13<00:25, 10.10it/s] 85%|████████▌ | 1491/1746 [03:13<00:25,  9.90it/s] 85%|████████▌ | 1492/1746 [03:13<00:25,  9.77it/s] 86%|████████▌ | 1494/1746 [03:13<00:23, 10.58it/s] 86%|████████▌ | 1496/1746 [03:14<00:24, 10.41it/s] 86%|████████▌ | 1498/1746 [03:14<00:24, 10.28it/s] 86%|████████▌ | 1500/1746 [03:14<00:23, 10.27it/s] 86%|████████▌ | 1502/1746 [03:14<00:24, 10.12it/s] 86%|████████▌ | 1504/1746 [03:14<00:25,  9.67it/s] 86%|████████▌ | 1505/1746 [03:14<00:24,  9.68it/s] 86%|████████▋ | 1507/1746 [03:15<00:24,  9.62it/s] 86%|████████▋ | 1508/1746 [03:15<00:25,  9.50it/s] 86%|████████▋ | 1510/1746 [03:15<00:24,  9.55it/s] 87%|████████▋ | 1511/1746 [03:15<00:24,  9.57it/s] 87%|████████▋ | 1512/1746 [03:15<00:24,  9.65it/s] 87%|████████▋ | 1513/1746 [03:15<00:23,  9.72it/s] 87%|████████▋ | 1514/1746 [03:15<00:27,  8.48it/s] 87%|████████▋ | 1515/1746 [03:16<00:26,  8.78it/s] 87%|████████▋ | 1516/1746 [03:16<00:25,  9.00it/s] 87%|████████▋ | 1517/1746 [03:16<00:25,  9.16it/s] 87%|████████▋ | 1519/1746 [03:16<00:23,  9.59it/s] 87%|████████▋ | 1520/1746 [03:16<00:23,  9.54it/s] 87%|████████▋ | 1521/1746 [03:16<00:23,  9.58it/s] 87%|████████▋ | 1522/1746 [03:16<00:29,  7.61it/s] 87%|████████▋ | 1523/1746 [03:17<00:28,  7.86it/s] 87%|████████▋ | 1525/1746 [03:17<00:25,  8.82it/s] 87%|████████▋ | 1527/1746 [03:17<00:23,  9.37it/s] 88%|████████▊ | 1528/1746 [03:17<00:24,  9.02it/s] 88%|████████▊ | 1530/1746 [03:17<00:25,  8.63it/s] 88%|████████▊ | 1532/1746 [03:17<00:22,  9.53it/s] 88%|████████▊ | 1533/1746 [03:18<00:22,  9.38it/s] 88%|████████▊ | 1534/1746 [03:18<00:22,  9.46it/s] 88%|████████▊ | 1536/1746 [03:18<00:21,  9.83it/s] 88%|████████▊ | 1537/1746 [03:18<00:21,  9.80it/s] 88%|████████▊ | 1538/1746 [03:18<00:21,  9.72it/s] 88%|████████▊ | 1539/1746 [03:18<00:21,  9.47it/s] 88%|████████▊ | 1540/1746 [03:18<00:21,  9.55it/s] 88%|████████▊ | 1541/1746 [03:18<00:21,  9.50it/s] 88%|████████▊ | 1542/1746 [03:18<00:21,  9.61it/s] 88%|████████▊ | 1543/1746 [03:19<00:21,  9.54it/s] 88%|████████▊ | 1545/1746 [03:19<00:20,  9.83it/s] 89%|████████▊ | 1546/1746 [03:19<00:20,  9.85it/s] 89%|████████▊ | 1548/1746 [03:19<00:19, 10.16it/s] 89%|████████▉ | 1550/1746 [03:19<00:19, 10.18it/s] 89%|████████▉ | 1552/1746 [03:19<00:19, 10.19it/s] 89%|████████▉ | 1554/1746 [03:20<00:19,  9.79it/s] 89%|████████▉ | 1555/1746 [03:20<00:20,  9.43it/s] 89%|████████▉ | 1556/1746 [03:20<00:20,  9.50it/s] 89%|████████▉ | 1558/1746 [03:20<00:19,  9.73it/s] 89%|████████▉ | 1559/1746 [03:20<00:19,  9.77it/s] 89%|████████▉ | 1560/1746 [03:20<00:18,  9.79it/s] 89%|████████▉ | 1562/1746 [03:21<00:18,  9.96it/s] 90%|████████▉ | 1564/1746 [03:21<00:18, 10.08it/s] 90%|████████▉ | 1566/1746 [03:21<00:17, 10.18it/s] 90%|████████▉ | 1568/1746 [03:21<00:17, 10.07it/s] 90%|████████▉ | 1570/1746 [03:21<00:17, 10.03it/s] 90%|█████████ | 1572/1746 [03:21<00:17,  9.95it/s] 90%|█████████ | 1573/1746 [03:22<00:17,  9.85it/s] 90%|█████████ | 1575/1746 [03:22<00:17, 10.00it/s] 90%|█████████ | 1577/1746 [03:22<00:16, 10.07it/s] 90%|█████████ | 1579/1746 [03:22<00:16, 10.01it/s] 91%|█████████ | 1581/1746 [03:22<00:16, 10.27it/s] 91%|█████████ | 1583/1746 [03:23<00:15, 10.42it/s] 91%|█████████ | 1585/1746 [03:23<00:15, 10.13it/s] 91%|█████████ | 1587/1746 [03:23<00:15, 10.46it/s] 91%|█████████ | 1589/1746 [03:23<00:14, 10.53it/s] 91%|█████████ | 1591/1746 [03:23<00:14, 10.33it/s] 91%|█████████ | 1593/1746 [03:24<00:15, 10.08it/s] 91%|█████████▏| 1595/1746 [03:24<00:14, 10.35it/s] 91%|█████████▏| 1597/1746 [03:24<00:14, 10.18it/s] 92%|█████████▏| 1599/1746 [03:24<00:14, 10.36it/s] 92%|█████████▏| 1601/1746 [03:24<00:13, 10.47it/s] 92%|█████████▏| 1603/1746 [03:24<00:13, 10.91it/s] 92%|█████████▏| 1605/1746 [03:25<00:13, 10.75it/s] 92%|█████████▏| 1607/1746 [03:25<00:13, 10.57it/s] 92%|█████████▏| 1609/1746 [03:25<00:12, 10.67it/s] 92%|█████████▏| 1611/1746 [03:25<00:13, 10.08it/s] 92%|█████████▏| 1613/1746 [03:25<00:12, 10.24it/s] 92%|█████████▏| 1615/1746 [03:26<00:12, 10.34it/s] 93%|█████████▎| 1617/1746 [03:26<00:12, 10.31it/s] 93%|█████████▎| 1619/1746 [03:26<00:12, 10.10it/s] 93%|█████████▎| 1621/1746 [03:26<00:12,  9.92it/s] 93%|█████████▎| 1622/1746 [03:26<00:12,  9.91it/s] 93%|█████████▎| 1624/1746 [03:27<00:12, 10.05it/s] 93%|█████████▎| 1626/1746 [03:27<00:11, 10.11it/s] 93%|█████████▎| 1628/1746 [03:27<00:11, 10.01it/s] 93%|█████████▎| 1630/1746 [03:27<00:11,  9.81it/s] 93%|█████████▎| 1631/1746 [03:27<00:11,  9.73it/s] 93%|█████████▎| 1632/1746 [03:27<00:11,  9.65it/s] 94%|█████████▎| 1633/1746 [03:27<00:11,  9.52it/s] 94%|█████████▎| 1635/1746 [03:28<00:11,  9.71it/s] 94%|█████████▎| 1636/1746 [03:28<00:11,  9.75it/s] 94%|█████████▍| 1637/1746 [03:28<00:11,  9.13it/s] 94%|█████████▍| 1638/1746 [03:28<00:11,  9.14it/s] 94%|█████████▍| 1639/1746 [03:28<00:11,  9.32it/s] 94%|█████████▍| 1640/1746 [03:28<00:11,  9.37it/s] 94%|█████████▍| 1641/1746 [03:28<00:11,  9.39it/s] 94%|█████████▍| 1642/1746 [03:28<00:10,  9.54it/s] 94%|█████████▍| 1643/1746 [03:29<00:10,  9.59it/s] 94%|█████████▍| 1645/1746 [03:29<00:10,  9.80it/s] 94%|█████████▍| 1646/1746 [03:29<00:10,  9.75it/s] 94%|█████████▍| 1647/1746 [03:29<00:10,  9.74it/s] 94%|█████████▍| 1648/1746 [03:29<00:10,  9.68it/s] 94%|█████████▍| 1649/1746 [03:29<00:10,  9.41it/s] 95%|█████████▍| 1651/1746 [03:29<00:09,  9.69it/s] 95%|█████████▍| 1653/1746 [03:30<00:09,  9.41it/s] 95%|█████████▍| 1654/1746 [03:30<00:09,  9.47it/s] 95%|█████████▍| 1656/1746 [03:30<00:09,  9.81it/s] 95%|█████████▍| 1658/1746 [03:30<00:08, 10.11it/s] 95%|█████████▌| 1660/1746 [03:30<00:08, 10.31it/s] 95%|█████████▌| 1662/1746 [03:30<00:08, 10.24it/s] 95%|█████████▌| 1664/1746 [03:31<00:08,  9.48it/s] 95%|█████████▌| 1666/1746 [03:31<00:08,  9.75it/s] 96%|█████████▌| 1668/1746 [03:31<00:07,  9.93it/s] 96%|█████████▌| 1670/1746 [03:31<00:07,  9.95it/s] 96%|█████████▌| 1671/1746 [03:31<00:07,  9.88it/s] 96%|█████████▌| 1673/1746 [03:32<00:07,  9.90it/s] 96%|█████████▌| 1674/1746 [03:32<00:07,  9.81it/s] 96%|█████████▌| 1675/1746 [03:32<00:07,  9.63it/s] 96%|█████████▌| 1676/1746 [03:32<00:07,  9.58it/s] 96%|█████████▌| 1677/1746 [03:32<00:07,  9.16it/s] 96%|█████████▌| 1679/1746 [03:32<00:07,  9.54it/s] 96%|█████████▌| 1680/1746 [03:32<00:06,  9.45it/s] 96%|█████████▋| 1682/1746 [03:33<00:06,  9.75it/s] 96%|█████████▋| 1684/1746 [03:33<00:06, 10.00it/s] 97%|█████████▋| 1686/1746 [03:33<00:05, 10.51it/s] 97%|█████████▋| 1688/1746 [03:33<00:05, 10.08it/s] 97%|█████████▋| 1690/1746 [03:33<00:05, 10.09it/s] 97%|█████████▋| 1692/1746 [03:33<00:05, 10.49it/s] 97%|█████████▋| 1694/1746 [03:34<00:05, 10.38it/s] 97%|█████████▋| 1696/1746 [03:34<00:04, 10.31it/s] 97%|█████████▋| 1698/1746 [03:34<00:04, 10.20it/s] 97%|█████████▋| 1700/1746 [03:34<00:04, 10.24it/s] 97%|█████████▋| 1702/1746 [03:35<00:04,  9.69it/s] 98%|█████████▊| 1703/1746 [03:35<00:04,  9.55it/s] 98%|█████████▊| 1704/1746 [03:35<00:04,  9.37it/s] 98%|█████████▊| 1705/1746 [03:35<00:04,  9.29it/s] 98%|█████████▊| 1706/1746 [03:35<00:04,  9.29it/s] 98%|█████████▊| 1707/1746 [03:35<00:04,  8.54it/s] 98%|█████████▊| 1708/1746 [03:35<00:04,  8.65it/s] 98%|█████████▊| 1709/1746 [03:35<00:04,  8.96it/s] 98%|█████████▊| 1710/1746 [03:35<00:03,  9.17it/s] 98%|█████████▊| 1712/1746 [03:36<00:03,  9.67it/s] 98%|█████████▊| 1713/1746 [03:36<00:03,  9.66it/s] 98%|█████████▊| 1714/1746 [03:36<00:03,  9.71it/s] 98%|█████████▊| 1715/1746 [03:36<00:03,  9.58it/s] 98%|█████████▊| 1716/1746 [03:36<00:03,  9.68it/s] 98%|█████████▊| 1718/1746 [03:36<00:02, 10.50it/s] 99%|█████████▊| 1720/1746 [03:36<00:02, 10.07it/s] 99%|█████████▊| 1722/1746 [03:37<00:02, 10.23it/s] 99%|█████████▊| 1724/1746 [03:37<00:02, 10.09it/s] 99%|█████████▉| 1726/1746 [03:37<00:02,  9.75it/s] 99%|█████████▉| 1728/1746 [03:37<00:01,  9.97it/s] 99%|█████████▉| 1729/1746 [03:37<00:01,  9.74it/s] 99%|█████████▉| 1730/1746 [03:37<00:01,  9.76it/s] 99%|█████████▉| 1732/1746 [03:38<00:01,  9.96it/s] 99%|█████████▉| 1734/1746 [03:38<00:01, 10.18it/s] 99%|█████████▉| 1736/1746 [03:38<00:00, 10.96it/s]100%|█████████▉| 1738/1746 [03:38<00:00, 10.34it/s]100%|█████████▉| 1740/1746 [03:38<00:00, 10.15it/s]100%|█████████▉| 1742/1746 [03:39<00:00, 10.17it/s]100%|█████████▉| 1744/1746 [03:39<00:00, 10.30it/s]100%|██████████| 1746/1746 [03:39<00:00, 10.40it/s]100%|██████████| 1746/1746 [03:39<00:00,  7.96it/s]
  File "./junk/1703783208398_2579/main.py", line 5
    in_ = Scanner ( System . in )
                             ^
SyntaxError: invalid syntax


  File "./junk/1703783217026_3628/main.py", line 6
    res = del + solve ( index + 1 , prev )
          ^
SyntaxError: invalid syntax


  File "./junk/1703783217449_9032/main.py", line 4
    inpt = Scanner ( System . in )
                              ^
SyntaxError: invalid syntax


  File "./junk/1703783223010_4803/GFG.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783224868_4161/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax


  File "./junk/1703783227615_8487/main.py", line 5
    in_ = util . Scanner ( System . in )
                                    ^
SyntaxError: invalid syntax


  File "./junk/1703783228887_6238/Garland.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783233187_7244/main.py", line 3
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783233735_1057/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783247251_4791/GFG.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax


  File "./junk/1703783248775_7274/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax


  File "./junk/1703783251558_6913/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783256040_9363/GFG.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax


  File "./junk/1703783261016_5139/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783261811_7145/main.py", line 3
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783269435_8203/main.py", line 1
    N / A ( This is a Java program and cannot be directly translated to Python without significant changes . )
                      ^
SyntaxError: invalid syntax


  File "./junk/1703783269654_5039/main.py", line 5
    input = Scanner ( System . in )
                               ^
SyntaxError: invalid syntax


  File "./junk/1703783273980_9509/main.py", line 1
    0ERROR
     ^
SyntaxError: invalid syntax


  File "./junk/1703783279861_2086/GFG.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783281346_5343/main.py", line 1
    N / A ( This code cannot be directly translated to Python as it uses Java - specific syntax and libraries . )
                 ^
SyntaxError: invalid syntax


  File "./junk/1703783282280_7794/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax


  File "./junk/1703783284662_2708/GFG.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783289384_6512/main.py", line 1
    def fromStart ( inp , del ) :
                          ^
SyntaxError: invalid syntax


  File "./junk/1703783290760_4119/Ideone.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783292144_7393/main.py", line 3
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783294843_3607/A.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783296909_1967/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783308966_1251/main.py", line 7
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783311225_9141/Main.py", line 8
    public class Main :
           ^
SyntaxError: invalid syntax


  File "./junk/1703783312043_5905/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783313170_3616/main.py", line 7
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783314686_4369/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783314778_2904/main.py", line 4
    sf = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783315923_3227/main.py", line 6
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783317000_8157/main.py", line 6
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783317548_4669/main.py", line 5
    need = set ( ) , have = set ( )
           ^
SyntaxError: cannot assign to function call


  File "./junk/1703783317638_5065/main.py", line 1
    0ERROR
     ^
SyntaxError: invalid syntax


  File "./junk/1703783318064_1802/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax


  File "./junk/1703783318580_4154/main.py", line 24
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783321286_7765/main.py", line 55
    if __name__ ==   ' __
                        ^
SyntaxError: EOL while scanning string literal


  File "./junk/1703783322390_7625/GFG.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax


  File "./junk/1703783334011_6290/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783339201_9299/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783339286_2713/main.py", line 5
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783339489_8071/main.py", line 7
    self . sc = Scanner ( System . in )
                                   ^
SyntaxError: invalid syntax


  File "./junk/1703783344040_2428/Codechef.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783344358_7220/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783347245_9652/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax


  File "./junk/1703783348250_2665/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783349250_6660/main.py", line 12
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783350159_7504/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax


  File "./junk/1703783356391_7669/main.py", line 6
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783358264_9444/Codechef.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783359945_8356/main.py", line 8
    self . sc = Scanner ( System . in )
                                   ^
SyntaxError: invalid syntax


  File "./junk/1703783383353_3952/main.py", line 9
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783385090_2145/GFG.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783385485_5843/main.py", line 1
    0ERROR
     ^
SyntaxError: invalid syntax


  File "./junk/1703783385767_9853/GFG.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax


  File "./junk/1703783389988_7357/main.py", line 7
    scn = Scanner ( System . in )
                             ^
SyntaxError: invalid syntax


  File "./junk/1703783390975_6652/main.py", line 4
    stdin = Scanner ( System . in )
                               ^
SyntaxError: invalid syntax


  File "./junk/1703783391454_1223/main.py", line 2
    in = sys . stdin . readline ( ) . strip ( )
    ^
SyntaxError: invalid syntax


  File "./junk/1703783392406_6052/main.py", line 1
    Unfortunately , I cannot translate Java to Python as the code uses bitwise operators and Python 's bitwise operators work differently than Java' s . It would require a significant amount of rewriting and understanding of the original code to properly translate it .
                      ^
SyntaxError: invalid syntax


  File "./junk/1703783394478_3943/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783394559_7368/Main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783396109_6854/main.py", line 5
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783398200_9703/Main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783399178_7667/main.py", line 7
    scanner = Scanner ( System . in )
                                 ^
SyntaxError: invalid syntax


  File "./junk/1703783401769_1728/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax


  File "./junk/1703783401851_9365/main.py", line 4
    scan = Scanner ( System . in )
                              ^
SyntaxError: invalid syntax


  File "./junk/1703783405946_2595/main.py", line 5
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783407168_4032/main.py", line 4
    scanner = Scanner ( System . in )
                                 ^
SyntaxError: invalid syntax


  File "./junk/1703783409279_4866/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783412890_6137/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783413551_7153/main.py", line 1
    N / A ( This is already in Java and not in need of translation to Python )
                                            ^
SyntaxError: invalid syntax


  File "./junk/1703783413949_5850/SortExample.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783417027_6577/main.py", line 23
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax


  File "./junk/1703783421409_8036/BinarySearch.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783421999_3198/Codechef.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783424607_4169/main.py", line 1
    There you go :
          ^
SyntaxError: invalid syntax


  File "./junk/1703783426389_7666/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


  File "./junk/1703783426467_9827/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax


Success - 1665, Errors - 81 [Syntax - 81, Indent - 0]
CompAcc: 1665/1746 = 95.36082474226804 %
compiles_bySource {'aizu': 177, 'atcoder': 90, 'codeforces': 374, 'codejam': 2, 'geeksforgeeks': 965, 'leetcode': 17, 'projecteuler': 40}
totalChecked_bySource {'aizu': 190, 'atcoder': 97, 'codeforces': 401, 'codejam': 4, 'geeksforgeeks': 995, 'leetcode': 18, 'projecteuler': 41}

BLEU:		53.19
Exact Match:		0.29

Ngram match:	54.04
Weighted ngram:	60.36
Syntax match:	47.64
Dataflow match:	46.38
CodeBLEU score: 52.11

  0%|          | 0/1746 [00:00<?, ?it/s]  0%|          | 1/1746 [00:01<43:08,  1.48s/it]  0%|          | 2/1746 [00:01<19:46,  1.47it/s]  0%|          | 4/1746 [00:01<09:10,  3.17it/s]  0%|          | 5/1746 [00:01<07:24,  3.92it/s]  0%|          | 7/1746 [00:02<06:00,  4.83it/s]  0%|          | 8/1746 [00:02<05:21,  5.41it/s]  1%|          | 9/1746 [00:02<04:48,  6.03it/s]  1%|          | 10/1746 [00:02<04:18,  6.73it/s]  1%|          | 12/1746 [00:02<03:41,  7.84it/s]  1%|          | 13/1746 [00:02<03:31,  8.19it/s]  1%|          | 14/1746 [00:02<03:28,  8.33it/s]  1%|          | 15/1746 [00:03<03:20,  8.65it/s]  1%|          | 17/1746 [00:03<03:12,  8.98it/s]  1%|          | 18/1746 [00:03<03:14,  8.90it/s]  1%|          | 20/1746 [00:03<03:04,  9.35it/s]  1%|          | 21/1746 [00:06<20:18,  1.42it/s]  1%|▏         | 23/1746 [00:06<13:29,  2.13it/s]  1%|▏         | 24/1746 [00:06<11:10,  2.57it/s]  1%|▏         | 25/1746 [00:06<09:16,  3.09it/s]  1%|▏         | 26/1746 [00:07<09:57,  2.88it/s]  2%|▏         | 27/1746 [00:07<10:45,  2.66it/s]  2%|▏         | 28/1746 [00:07<08:35,  3.34it/s]  2%|▏         | 29/1746 [00:07<06:58,  4.10it/s]  2%|▏         | 31/1746 [00:08<05:06,  5.60it/s]  2%|▏         | 32/1746 [00:08<04:41,  6.10it/s]  2%|▏         | 33/1746 [00:08<04:21,  6.54it/s]  2%|▏         | 35/1746 [00:08<04:06,  6.94it/s]  2%|▏         | 37/1746 [00:08<03:39,  7.80it/s]  2%|▏         | 38/1746 [00:08<03:35,  7.92it/s]  2%|▏         | 39/1746 [00:09<03:25,  8.32it/s]  2%|▏         | 41/1746 [00:09<03:08,  9.07it/s]  2%|▏         | 42/1746 [00:09<03:05,  9.18it/s]  2%|▏         | 43/1746 [00:09<03:02,  9.33it/s]  3%|▎         | 44/1746 [00:09<03:01,  9.39it/s]  3%|▎         | 45/1746 [00:09<03:01,  9.38it/s]  3%|▎         | 46/1746 [00:09<02:58,  9.50it/s]  3%|▎         | 48/1746 [00:09<02:57,  9.59it/s]  3%|▎         | 50/1746 [00:10<03:02,  9.30it/s]  3%|▎         | 52/1746 [00:10<02:57,  9.55it/s]  3%|▎         | 53/1746 [00:10<02:59,  9.43it/s]  3%|▎         | 54/1746 [00:10<03:00,  9.37it/s]  3%|▎         | 55/1746 [00:10<02:59,  9.42it/s]  3%|▎         | 56/1746 [00:10<03:00,  9.38it/s]  3%|▎         | 57/1746 [00:11<05:11,  5.42it/s]  3%|▎         | 58/1746 [00:11<04:39,  6.04it/s]  3%|▎         | 60/1746 [00:11<03:46,  7.46it/s]  3%|▎         | 61/1746 [00:11<03:43,  7.55it/s]  4%|▎         | 62/1746 [00:11<03:43,  7.55it/s]  4%|▎         | 63/1746 [00:11<03:37,  7.75it/s]  4%|▎         | 64/1746 [00:11<03:32,  7.92it/s]  4%|▍         | 66/1746 [00:12<03:11,  8.79it/s]  4%|▍         | 67/1746 [00:12<03:10,  8.82it/s]  4%|▍         | 69/1746 [00:12<04:01,  6.94it/s]  4%|▍         | 71/1746 [00:12<03:38,  7.67it/s]  4%|▍         | 73/1746 [00:13<03:23,  8.22it/s]  4%|▍         | 74/1746 [00:13<03:19,  8.37it/s]  4%|▍         | 76/1746 [00:13<03:06,  8.98it/s]  4%|▍         | 77/1746 [00:13<03:02,  9.14it/s]  5%|▍         | 79/1746 [00:13<02:55,  9.50it/s]  5%|▍         | 80/1746 [00:13<02:53,  9.59it/s]  5%|▍         | 81/1746 [00:13<03:02,  9.12it/s]  5%|▍         | 82/1746 [00:14<03:06,  8.92it/s]  5%|▍         | 83/1746 [00:14<03:02,  9.10it/s]  5%|▍         | 84/1746 [00:14<02:58,  9.32it/s]  5%|▍         | 85/1746 [00:14<03:01,  9.17it/s]  5%|▍         | 86/1746 [00:14<03:13,  8.56it/s]  5%|▌         | 88/1746 [00:14<02:57,  9.36it/s]  5%|▌         | 89/1746 [00:14<03:03,  9.03it/s]  5%|▌         | 90/1746 [00:14<03:12,  8.59it/s]  5%|▌         | 91/1746 [00:15<04:57,  5.57it/s]  5%|▌         | 92/1746 [00:15<04:27,  6.19it/s]  5%|▌         | 93/1746 [00:15<04:01,  6.83it/s]  5%|▌         | 94/1746 [00:15<03:41,  7.45it/s]  5%|▌         | 95/1746 [00:15<03:34,  7.69it/s]  5%|▌         | 96/1746 [00:15<03:29,  7.88it/s]  6%|▌         | 98/1746 [00:16<03:12,  8.55it/s]  6%|▌         | 99/1746 [00:16<03:07,  8.78it/s]  6%|▌         | 101/1746 [00:16<02:54,  9.41it/s]  6%|▌         | 102/1746 [00:16<03:01,  9.07it/s]  6%|▌         | 103/1746 [00:16<03:03,  8.98it/s]  6%|▌         | 105/1746 [00:16<02:54,  9.39it/s]  6%|▌         | 106/1746 [00:16<02:52,  9.52it/s]  6%|▌         | 107/1746 [00:17<03:10,  8.62it/s]  6%|▌         | 108/1746 [00:17<03:13,  8.48it/s]  6%|▌         | 109/1746 [00:17<03:11,  8.56it/s]  6%|▋         | 110/1746 [00:17<03:06,  8.77it/s]  6%|▋         | 111/1746 [00:17<03:01,  9.01it/s]  6%|▋         | 113/1746 [00:17<02:52,  9.45it/s]  7%|▋         | 114/1746 [00:17<02:52,  9.48it/s]  7%|▋         | 115/1746 [00:17<03:04,  8.82it/s]  7%|▋         | 117/1746 [00:18<03:01,  8.96it/s]  7%|▋         | 119/1746 [00:18<02:50,  9.56it/s]  7%|▋         | 121/1746 [00:18<02:57,  9.18it/s]  7%|▋         | 122/1746 [00:18<03:06,  8.70it/s]  7%|▋         | 123/1746 [00:18<03:13,  8.38it/s]  7%|▋         | 124/1746 [00:18<03:10,  8.49it/s]  7%|▋         | 126/1746 [00:19<02:59,  9.03it/s]  7%|▋         | 127/1746 [00:19<03:00,  8.95it/s]  7%|▋         | 128/1746 [00:19<02:56,  9.17it/s]  7%|▋         | 130/1746 [00:19<02:50,  9.46it/s]  8%|▊         | 131/1746 [00:19<02:54,  9.26it/s]  8%|▊         | 133/1746 [00:19<02:50,  9.49it/s]  8%|▊         | 134/1746 [00:20<03:31,  7.63it/s]  8%|▊         | 135/1746 [00:20<04:58,  5.40it/s]  8%|▊         | 137/1746 [00:20<04:10,  6.43it/s]  8%|▊         | 139/1746 [00:20<03:37,  7.40it/s]  8%|▊         | 141/1746 [00:21<03:30,  7.63it/s]  8%|▊         | 143/1746 [00:21<03:17,  8.13it/s]  8%|▊         | 144/1746 [00:21<03:10,  8.39it/s]  8%|▊         | 145/1746 [00:21<03:09,  8.47it/s]  8%|▊         | 146/1746 [00:21<03:06,  8.59it/s]  8%|▊         | 147/1746 [00:21<03:02,  8.79it/s]  9%|▊         | 149/1746 [00:21<02:52,  9.24it/s]  9%|▊         | 151/1746 [00:22<02:46,  9.60it/s]  9%|▊         | 152/1746 [00:22<03:14,  8.18it/s]  9%|▉         | 154/1746 [00:22<02:59,  8.86it/s]  9%|▉         | 155/1746 [00:22<02:59,  8.87it/s]  9%|▉         | 156/1746 [00:22<02:59,  8.84it/s]  9%|▉         | 157/1746 [00:22<02:59,  8.86it/s]  9%|▉         | 158/1746 [00:23<03:05,  8.54it/s]  9%|▉         | 159/1746 [00:23<03:01,  8.76it/s]  9%|▉         | 160/1746 [00:23<03:01,  8.75it/s]  9%|▉         | 162/1746 [00:23<02:48,  9.40it/s]  9%|▉         | 164/1746 [00:23<02:45,  9.56it/s]  9%|▉         | 165/1746 [00:23<02:44,  9.64it/s] 10%|▉         | 166/1746 [00:23<02:46,  9.49it/s] 10%|▉         | 167/1746 [00:23<02:53,  9.08it/s] 10%|▉         | 169/1746 [00:24<04:11,  6.27it/s] 10%|▉         | 170/1746 [00:24<03:52,  6.78it/s] 10%|▉         | 171/1746 [00:24<03:39,  7.18it/s] 10%|▉         | 172/1746 [00:24<03:23,  7.73it/s] 10%|▉         | 173/1746 [00:24<03:16,  8.01it/s] 10%|▉         | 174/1746 [00:24<03:08,  8.32it/s] 10%|█         | 175/1746 [00:25<03:03,  8.58it/s] 10%|█         | 177/1746 [00:25<02:47,  9.35it/s] 10%|█         | 179/1746 [00:25<02:40,  9.73it/s] 10%|█         | 180/1746 [00:25<04:37,  5.64it/s] 10%|█         | 181/1746 [00:26<04:09,  6.26it/s] 10%|█         | 182/1746 [00:26<03:52,  6.73it/s] 10%|█         | 183/1746 [00:26<03:33,  7.32it/s] 11%|█         | 184/1746 [00:26<03:21,  7.74it/s] 11%|█         | 185/1746 [00:26<03:13,  8.08it/s] 11%|█         | 187/1746 [00:26<02:58,  8.76it/s] 11%|█         | 188/1746 [00:26<02:52,  9.02it/s] 11%|█         | 190/1746 [00:26<02:48,  9.23it/s] 11%|█         | 191/1746 [00:27<02:46,  9.31it/s] 11%|█         | 192/1746 [00:27<02:51,  9.06it/s] 11%|█         | 194/1746 [00:27<02:49,  9.16it/s] 11%|█         | 196/1746 [00:27<02:57,  8.75it/s] 11%|█▏        | 197/1746 [00:27<03:01,  8.52it/s] 11%|█▏        | 198/1746 [00:27<02:58,  8.66it/s] 11%|█▏        | 199/1746 [00:28<03:00,  8.58it/s] 11%|█▏        | 200/1746 [00:28<02:57,  8.73it/s] 12%|█▏        | 202/1746 [00:28<02:52,  8.93it/s] 12%|█▏        | 204/1746 [00:28<02:42,  9.50it/s] 12%|█▏        | 206/1746 [00:28<02:39,  9.66it/s] 12%|█▏        | 208/1746 [00:28<02:34,  9.96it/s] 12%|█▏        | 209/1746 [00:29<02:40,  9.60it/s] 12%|█▏        | 210/1746 [00:29<03:07,  8.17it/s] 12%|█▏        | 212/1746 [00:29<02:55,  8.72it/s] 12%|█▏        | 213/1746 [00:29<02:51,  8.95it/s] 12%|█▏        | 214/1746 [00:29<02:48,  9.11it/s] 12%|█▏        | 215/1746 [00:29<02:51,  8.92it/s] 12%|█▏        | 216/1746 [00:29<03:04,  8.29it/s] 12%|█▏        | 217/1746 [00:30<03:02,  8.39it/s] 12%|█▏        | 218/1746 [00:30<02:59,  8.52it/s] 13%|█▎        | 219/1746 [00:30<02:52,  8.85it/s] 13%|█▎        | 220/1746 [00:30<02:49,  9.00it/s] 13%|█▎        | 221/1746 [00:30<02:57,  8.57it/s] 13%|█▎        | 222/1746 [00:30<02:53,  8.80it/s] 13%|█▎        | 223/1746 [00:30<02:50,  8.93it/s] 13%|█▎        | 224/1746 [00:30<03:06,  8.17it/s] 13%|█▎        | 226/1746 [00:31<02:47,  9.08it/s] 13%|█▎        | 227/1746 [00:31<03:18,  7.64it/s] 13%|█▎        | 229/1746 [00:31<03:04,  8.23it/s] 13%|█▎        | 230/1746 [00:31<02:59,  8.44it/s] 13%|█▎        | 231/1746 [00:31<03:00,  8.38it/s] 13%|█▎        | 232/1746 [00:31<03:01,  8.34it/s] 13%|█▎        | 233/1746 [00:31<03:11,  7.92it/s] 13%|█▎        | 234/1746 [00:32<03:07,  8.06it/s] 13%|█▎        | 235/1746 [00:32<02:58,  8.45it/s] 14%|█▎        | 236/1746 [00:32<02:57,  8.49it/s] 14%|█▎        | 237/1746 [00:32<02:59,  8.43it/s] 14%|█▎        | 238/1746 [00:32<02:59,  8.41it/s] 14%|█▎        | 239/1746 [00:32<02:53,  8.66it/s] 14%|█▍        | 241/1746 [00:32<02:45,  9.10it/s] 14%|█▍        | 242/1746 [00:32<02:45,  9.07it/s] 14%|█▍        | 243/1746 [00:33<02:44,  9.11it/s] 14%|█▍        | 244/1746 [00:33<02:42,  9.25it/s] 14%|█▍        | 246/1746 [00:33<04:37,  5.40it/s] 14%|█▍        | 247/1746 [00:33<04:13,  5.90it/s] 14%|█▍        | 249/1746 [00:34<03:39,  6.81it/s] 14%|█▍        | 251/1746 [00:34<03:14,  7.70it/s] 14%|█▍        | 252/1746 [00:34<03:05,  8.05it/s] 14%|█▍        | 253/1746 [00:34<02:58,  8.38it/s] 15%|█▍        | 254/1746 [00:34<02:54,  8.53it/s] 15%|█▍        | 256/1746 [00:34<02:51,  8.71it/s] 15%|█▍        | 257/1746 [00:34<02:48,  8.83it/s] 15%|█▍        | 258/1746 [00:35<02:50,  8.74it/s] 15%|█▍        | 259/1746 [00:35<02:55,  8.49it/s] 15%|█▍        | 261/1746 [00:35<02:49,  8.76it/s] 15%|█▌        | 262/1746 [00:35<02:50,  8.70it/s] 15%|█▌        | 263/1746 [00:35<02:47,  8.87it/s] 15%|█▌        | 264/1746 [00:35<03:45,  6.58it/s] 15%|█▌        | 265/1746 [00:35<03:27,  7.15it/s] 15%|█▌        | 266/1746 [00:36<03:23,  7.29it/s] 15%|█▌        | 268/1746 [00:36<02:57,  8.33it/s] 15%|█▌        | 269/1746 [00:36<03:10,  7.75it/s] 16%|█▌        | 271/1746 [00:36<02:55,  8.42it/s] 16%|█▌        | 273/1746 [00:36<02:41,  9.11it/s] 16%|█▌        | 274/1746 [00:36<02:41,  9.12it/s] 16%|█▌        | 275/1746 [00:37<03:24,  7.20it/s] 16%|█▌        | 276/1746 [00:37<03:14,  7.56it/s] 16%|█▌        | 277/1746 [00:37<03:06,  7.89it/s] 16%|█▌        | 278/1746 [00:37<03:02,  8.04it/s] 16%|█▌        | 280/1746 [00:37<02:43,  8.96it/s] 16%|█▌        | 281/1746 [00:37<02:40,  9.13it/s] 16%|█▌        | 283/1746 [00:38<02:31,  9.63it/s] 16%|█▋        | 284/1746 [00:38<02:47,  8.75it/s] 16%|█▋        | 285/1746 [00:38<02:43,  8.95it/s] 16%|█▋        | 287/1746 [00:38<02:39,  9.14it/s] 16%|█▋        | 288/1746 [00:38<02:37,  9.28it/s] 17%|█▋        | 289/1746 [00:38<02:46,  8.76it/s] 17%|█▋        | 290/1746 [00:38<02:48,  8.66it/s] 17%|█▋        | 291/1746 [00:38<02:43,  8.88it/s] 17%|█▋        | 292/1746 [00:39<02:40,  9.06it/s] 17%|█▋        | 293/1746 [00:39<02:36,  9.29it/s] 17%|█▋        | 294/1746 [00:39<02:36,  9.28it/s] 17%|█▋        | 295/1746 [00:39<03:50,  6.29it/s] 17%|█▋        | 297/1746 [00:39<03:14,  7.47it/s] 17%|█▋        | 298/1746 [00:39<03:16,  7.37it/s] 17%|█▋        | 299/1746 [00:40<03:05,  7.79it/s] 17%|█▋        | 301/1746 [00:40<02:55,  8.23it/s] 17%|█▋        | 302/1746 [00:40<02:53,  8.32it/s] 17%|█▋        | 303/1746 [00:40<02:51,  8.43it/s] 17%|█▋        | 305/1746 [00:40<02:46,  8.65it/s] 18%|█▊        | 306/1746 [00:40<02:53,  8.28it/s] 18%|█▊        | 307/1746 [00:40<02:47,  8.58it/s] 18%|█▊        | 308/1746 [00:41<02:48,  8.55it/s] 18%|█▊        | 309/1746 [00:41<02:42,  8.84it/s] 18%|█▊        | 310/1746 [00:41<02:56,  8.16it/s] 18%|█▊        | 311/1746 [00:41<02:48,  8.51it/s] 18%|█▊        | 313/1746 [00:41<02:39,  8.98it/s] 18%|█▊        | 314/1746 [00:41<02:37,  9.08it/s] 18%|█▊        | 315/1746 [00:42<05:31,  4.32it/s] 18%|█▊        | 316/1746 [00:42<04:41,  5.09it/s] 18%|█▊        | 318/1746 [00:42<03:42,  6.42it/s] 18%|█▊        | 319/1746 [00:42<03:30,  6.78it/s] 18%|█▊        | 320/1746 [00:42<03:16,  7.25it/s] 18%|█▊        | 321/1746 [00:42<03:09,  7.53it/s] 18%|█▊        | 322/1746 [00:43<03:00,  7.88it/s] 19%|█▊        | 324/1746 [00:43<02:42,  8.73it/s] 19%|█▊        | 325/1746 [00:43<02:40,  8.84it/s] 19%|█▊        | 326/1746 [00:43<02:38,  8.94it/s] 19%|█▊        | 327/1746 [00:43<02:37,  9.01it/s] 19%|█▉        | 328/1746 [00:43<02:38,  8.97it/s] 19%|█▉        | 330/1746 [00:43<02:26,  9.67it/s] 19%|█▉        | 331/1746 [00:44<02:45,  8.56it/s] 19%|█▉        | 333/1746 [00:44<02:36,  9.05it/s] 19%|█▉        | 335/1746 [00:44<02:31,  9.32it/s] 19%|█▉        | 337/1746 [00:44<02:26,  9.61it/s] 19%|█▉        | 338/1746 [00:44<02:27,  9.56it/s] 19%|█▉        | 339/1746 [00:44<02:32,  9.21it/s] 19%|█▉        | 340/1746 [00:44<02:32,  9.24it/s] 20%|█▉        | 342/1746 [00:45<02:22,  9.87it/s] 20%|█▉        | 343/1746 [00:45<02:26,  9.55it/s] 20%|█▉        | 344/1746 [00:45<02:35,  9.00it/s] 20%|█▉        | 346/1746 [00:45<02:38,  8.83it/s] 20%|█▉        | 348/1746 [00:45<02:39,  8.75it/s] 20%|█▉        | 349/1746 [00:45<02:36,  8.94it/s] 20%|██        | 350/1746 [00:46<02:32,  9.14it/s] 20%|██        | 352/1746 [00:46<02:25,  9.57it/s] 20%|██        | 353/1746 [00:46<02:28,  9.41it/s] 20%|██        | 354/1746 [00:46<02:35,  8.98it/s] 20%|██        | 355/1746 [00:46<02:34,  9.01it/s] 20%|██        | 356/1746 [00:46<02:51,  8.09it/s] 20%|██        | 357/1746 [00:46<02:56,  7.89it/s] 21%|██        | 358/1746 [00:47<02:46,  8.33it/s] 21%|██        | 359/1746 [00:47<03:07,  7.41it/s] 21%|██        | 360/1746 [00:47<02:54,  7.96it/s] 21%|██        | 361/1746 [00:47<03:19,  6.93it/s] 21%|██        | 362/1746 [00:47<03:13,  7.15it/s] 21%|██        | 363/1746 [00:47<03:09,  7.28it/s] 21%|██        | 364/1746 [00:47<02:57,  7.79it/s] 21%|██        | 366/1746 [00:48<02:40,  8.58it/s] 21%|██        | 367/1746 [00:48<02:35,  8.87it/s] 21%|██        | 369/1746 [00:48<02:24,  9.53it/s] 21%|██        | 370/1746 [00:48<02:25,  9.48it/s] 21%|██▏       | 372/1746 [00:48<02:22,  9.67it/s] 21%|██▏       | 373/1746 [00:48<02:26,  9.38it/s] 21%|██▏       | 374/1746 [00:48<02:26,  9.38it/s] 22%|██▏       | 376/1746 [00:49<02:51,  7.97it/s] 22%|██▏       | 377/1746 [00:49<02:46,  8.24it/s] 22%|██▏       | 378/1746 [00:49<02:41,  8.46it/s] 22%|██▏       | 379/1746 [00:49<02:43,  8.34it/s] 22%|██▏       | 380/1746 [00:49<02:40,  8.53it/s] 22%|██▏       | 381/1746 [00:49<02:37,  8.65it/s] 22%|██▏       | 382/1746 [00:50<03:35,  6.32it/s] 22%|██▏       | 383/1746 [00:50<03:27,  6.56it/s] 22%|██▏       | 384/1746 [00:50<03:31,  6.43it/s] 22%|██▏       | 385/1746 [00:50<03:10,  7.14it/s] 22%|██▏       | 386/1746 [00:50<03:01,  7.50it/s] 22%|██▏       | 387/1746 [00:50<02:48,  8.08it/s] 22%|██▏       | 388/1746 [00:50<02:46,  8.15it/s] 22%|██▏       | 389/1746 [00:50<02:45,  8.20it/s] 22%|██▏       | 390/1746 [00:50<02:43,  8.29it/s] 22%|██▏       | 391/1746 [00:51<02:37,  8.62it/s] 22%|██▏       | 392/1746 [00:51<02:45,  8.16it/s] 23%|██▎       | 394/1746 [00:51<02:27,  9.15it/s] 23%|██▎       | 395/1746 [00:51<02:27,  9.18it/s] 23%|██▎       | 396/1746 [00:51<02:38,  8.53it/s] 23%|██▎       | 397/1746 [00:51<02:46,  8.11it/s] 23%|██▎       | 398/1746 [00:51<02:54,  7.73it/s] 23%|██▎       | 399/1746 [00:52<02:44,  8.18it/s] 23%|██▎       | 401/1746 [00:52<02:37,  8.54it/s] 23%|██▎       | 403/1746 [00:52<02:29,  9.00it/s] 23%|██▎       | 405/1746 [00:52<02:20,  9.53it/s] 23%|██▎       | 406/1746 [00:52<02:21,  9.46it/s] 23%|██▎       | 407/1746 [00:52<02:24,  9.25it/s] 23%|██▎       | 408/1746 [00:52<02:22,  9.41it/s] 23%|██▎       | 409/1746 [00:53<02:24,  9.24it/s] 24%|██▎       | 411/1746 [00:53<02:32,  8.76it/s] 24%|██▎       | 412/1746 [00:53<02:28,  8.98it/s] 24%|██▎       | 413/1746 [00:53<02:24,  9.21it/s] 24%|██▎       | 414/1746 [00:53<02:25,  9.14it/s] 24%|██▍       | 415/1746 [00:53<02:23,  9.30it/s] 24%|██▍       | 417/1746 [00:53<02:24,  9.23it/s] 24%|██▍       | 419/1746 [00:54<02:27,  9.00it/s] 24%|██▍       | 420/1746 [00:54<02:24,  9.19it/s] 24%|██▍       | 421/1746 [00:54<05:18,  4.17it/s] 24%|██▍       | 423/1746 [00:55<04:00,  5.50it/s] 24%|██▍       | 425/1746 [00:55<03:20,  6.59it/s] 24%|██▍       | 427/1746 [00:55<03:00,  7.30it/s] 25%|██▍       | 429/1746 [00:55<02:42,  8.11it/s] 25%|██▍       | 431/1746 [00:55<02:32,  8.64it/s] 25%|██▍       | 432/1746 [00:56<02:39,  8.24it/s] 25%|██▍       | 434/1746 [00:56<02:27,  8.89it/s] 25%|██▍       | 435/1746 [00:56<02:25,  9.01it/s] 25%|██▍       | 436/1746 [00:56<02:27,  8.85it/s] 25%|██▌       | 437/1746 [00:56<02:27,  8.89it/s] 25%|██▌       | 438/1746 [00:56<02:23,  9.11it/s] 25%|██▌       | 440/1746 [00:56<02:19,  9.36it/s] 25%|██▌       | 441/1746 [00:57<02:20,  9.29it/s] 25%|██▌       | 442/1746 [00:57<02:18,  9.41it/s] 25%|██▌       | 444/1746 [00:57<02:10,  9.95it/s] 25%|██▌       | 445/1746 [00:57<02:11,  9.86it/s] 26%|██▌       | 446/1746 [00:57<02:12,  9.84it/s] 26%|██▌       | 447/1746 [00:57<02:13,  9.76it/s] 26%|██▌       | 448/1746 [00:57<02:14,  9.65it/s] 26%|██▌       | 450/1746 [00:57<02:13,  9.74it/s] 26%|██▌       | 451/1746 [00:58<02:13,  9.69it/s] 26%|██▌       | 452/1746 [00:58<02:12,  9.74it/s] 26%|██▌       | 453/1746 [00:58<02:18,  9.33it/s] 26%|██▌       | 455/1746 [00:58<02:15,  9.51it/s] 26%|██▌       | 456/1746 [00:58<02:16,  9.48it/s] 26%|██▌       | 457/1746 [00:58<02:16,  9.46it/s] 26%|██▌       | 458/1746 [00:58<02:15,  9.54it/s] 26%|██▋       | 460/1746 [00:59<02:09,  9.92it/s] 26%|██▋       | 462/1746 [00:59<02:06, 10.13it/s] 27%|██▋       | 464/1746 [00:59<02:15,  9.44it/s] 27%|██▋       | 466/1746 [00:59<02:16,  9.37it/s] 27%|██▋       | 467/1746 [00:59<02:17,  9.32it/s] 27%|██▋       | 468/1746 [00:59<02:17,  9.31it/s] 27%|██▋       | 469/1746 [01:00<02:24,  8.85it/s] 27%|██▋       | 470/1746 [01:00<02:24,  8.82it/s] 27%|██▋       | 471/1746 [01:00<02:21,  9.01it/s] 27%|██▋       | 473/1746 [01:00<02:15,  9.38it/s] 27%|██▋       | 474/1746 [01:00<02:14,  9.45it/s] 27%|██▋       | 475/1746 [01:00<02:16,  9.29it/s] 27%|██▋       | 476/1746 [01:00<02:22,  8.94it/s] 27%|██▋       | 477/1746 [01:00<02:18,  9.13it/s] 27%|██▋       | 478/1746 [01:00<02:15,  9.35it/s] 27%|██▋       | 479/1746 [01:01<02:18,  9.12it/s] 27%|██▋       | 480/1746 [01:01<02:19,  9.10it/s] 28%|██▊       | 481/1746 [01:01<02:23,  8.83it/s] 28%|██▊       | 482/1746 [01:01<02:19,  9.06it/s] 28%|██▊       | 483/1746 [01:01<02:17,  9.17it/s] 28%|██▊       | 485/1746 [01:01<02:10,  9.65it/s] 28%|██▊       | 487/1746 [01:01<02:06,  9.98it/s] 28%|██▊       | 488/1746 [01:02<02:06,  9.98it/s] 28%|██▊       | 489/1746 [01:02<02:07,  9.86it/s] 28%|██▊       | 490/1746 [01:02<02:08,  9.79it/s] 28%|██▊       | 491/1746 [01:02<02:14,  9.31it/s] 28%|██▊       | 493/1746 [01:02<02:09,  9.70it/s] 28%|██▊       | 495/1746 [01:02<02:10,  9.61it/s] 28%|██▊       | 496/1746 [01:02<02:09,  9.67it/s] 28%|██▊       | 497/1746 [01:02<02:15,  9.18it/s] 29%|██▊       | 499/1746 [01:03<02:16,  9.10it/s] 29%|██▊       | 500/1746 [01:03<02:19,  8.96it/s] 29%|██▊       | 501/1746 [01:03<02:20,  8.88it/s] 29%|██▉       | 502/1746 [01:03<02:18,  8.99it/s] 29%|██▉       | 503/1746 [01:03<02:23,  8.65it/s] 29%|██▉       | 505/1746 [01:03<02:21,  8.79it/s] 29%|██▉       | 506/1746 [01:04<02:17,  8.99it/s] 29%|██▉       | 508/1746 [01:04<02:15,  9.16it/s] 29%|██▉       | 509/1746 [01:04<02:23,  8.61it/s] 29%|██▉       | 510/1746 [01:04<02:26,  8.46it/s] 29%|██▉       | 512/1746 [01:04<02:14,  9.15it/s] 29%|██▉       | 513/1746 [01:04<02:18,  8.89it/s] 29%|██▉       | 514/1746 [01:04<02:16,  9.03it/s] 29%|██▉       | 515/1746 [01:05<02:21,  8.72it/s] 30%|██▉       | 516/1746 [01:05<02:24,  8.51it/s] 30%|██▉       | 517/1746 [01:05<02:25,  8.43it/s] 30%|██▉       | 519/1746 [01:05<02:10,  9.38it/s] 30%|██▉       | 520/1746 [01:05<02:21,  8.68it/s] 30%|██▉       | 521/1746 [01:05<02:48,  7.28it/s] 30%|██▉       | 522/1746 [01:06<03:21,  6.09it/s] 30%|██▉       | 523/1746 [01:06<03:01,  6.73it/s] 30%|███       | 524/1746 [01:06<02:49,  7.19it/s] 30%|███       | 525/1746 [01:06<02:36,  7.79it/s] 30%|███       | 526/1746 [01:06<02:26,  8.32it/s] 30%|███       | 527/1746 [01:06<02:28,  8.20it/s] 30%|███       | 528/1746 [01:06<02:25,  8.39it/s] 30%|███       | 529/1746 [01:06<02:18,  8.80it/s] 30%|███       | 530/1746 [01:06<02:14,  9.01it/s] 30%|███       | 531/1746 [01:07<02:12,  9.16it/s] 30%|███       | 532/1746 [01:07<02:13,  9.09it/s] 31%|███       | 533/1746 [01:07<02:15,  8.98it/s] 31%|███       | 535/1746 [01:07<02:18,  8.76it/s] 31%|███       | 536/1746 [01:07<02:20,  8.59it/s] 31%|███       | 538/1746 [01:07<02:11,  9.21it/s] 31%|███       | 539/1746 [01:07<02:10,  9.25it/s] 31%|███       | 540/1746 [01:08<02:18,  8.69it/s] 31%|███       | 542/1746 [01:08<02:10,  9.23it/s] 31%|███       | 543/1746 [01:08<02:09,  9.27it/s] 31%|███       | 544/1746 [01:08<02:17,  8.76it/s] 31%|███       | 545/1746 [01:08<02:16,  8.81it/s] 31%|███▏      | 547/1746 [01:08<02:06,  9.46it/s] 31%|███▏      | 548/1746 [01:08<02:08,  9.34it/s] 31%|███▏      | 549/1746 [01:08<02:07,  9.36it/s] 32%|███▏      | 550/1746 [01:09<02:06,  9.43it/s] 32%|███▏      | 551/1746 [01:09<02:07,  9.38it/s] 32%|███▏      | 552/1746 [01:09<02:08,  9.27it/s] 32%|███▏      | 553/1746 [01:10<06:28,  3.07it/s] 32%|███▏      | 555/1746 [01:10<04:26,  4.47it/s] 32%|███▏      | 556/1746 [01:10<03:56,  5.03it/s] 32%|███▏      | 558/1746 [01:10<03:05,  6.41it/s] 32%|███▏      | 560/1746 [01:10<02:43,  7.23it/s] 32%|███▏      | 561/1746 [01:11<02:38,  7.49it/s] 32%|███▏      | 562/1746 [01:11<02:34,  7.68it/s] 32%|███▏      | 563/1746 [01:11<02:26,  8.07it/s] 32%|███▏      | 564/1746 [01:11<02:26,  8.04it/s] 32%|███▏      | 565/1746 [01:11<02:34,  7.62it/s] 32%|███▏      | 567/1746 [01:11<02:20,  8.38it/s] 33%|███▎      | 569/1746 [01:11<02:08,  9.13it/s] 33%|███▎      | 570/1746 [01:12<02:10,  8.98it/s] 33%|███▎      | 572/1746 [01:12<02:04,  9.39it/s] 33%|███▎      | 574/1746 [01:12<02:18,  8.44it/s] 33%|███▎      | 576/1746 [01:12<02:11,  8.91it/s] 33%|███▎      | 577/1746 [01:12<02:08,  9.08it/s] 33%|███▎      | 578/1746 [01:12<02:07,  9.17it/s] 33%|███▎      | 579/1746 [01:13<02:07,  9.17it/s] 33%|███▎      | 580/1746 [01:13<02:07,  9.14it/s] 33%|███▎      | 581/1746 [01:13<02:07,  9.11it/s] 33%|███▎      | 583/1746 [01:13<02:04,  9.31it/s] 33%|███▎      | 584/1746 [01:13<02:05,  9.23it/s] 34%|███▎      | 586/1746 [01:13<01:59,  9.67it/s] 34%|███▎      | 587/1746 [01:13<02:00,  9.64it/s] 34%|███▎      | 589/1746 [01:14<02:05,  9.24it/s] 34%|███▍      | 590/1746 [01:14<02:11,  8.81it/s] 34%|███▍      | 591/1746 [01:14<02:10,  8.84it/s] 34%|███▍      | 592/1746 [01:14<02:16,  8.44it/s] 34%|███▍      | 593/1746 [01:14<02:27,  7.83it/s] 34%|███▍      | 594/1746 [01:14<02:21,  8.12it/s] 34%|███▍      | 595/1746 [01:14<02:30,  7.63it/s] 34%|███▍      | 596/1746 [01:15<02:23,  8.03it/s] 34%|███▍      | 597/1746 [01:15<02:27,  7.81it/s] 34%|███▍      | 599/1746 [01:15<02:09,  8.88it/s] 34%|███▍      | 600/1746 [01:15<02:06,  9.08it/s] 34%|███▍      | 601/1746 [01:15<02:05,  9.11it/s] 34%|███▍      | 602/1746 [01:15<02:02,  9.31it/s] 35%|███▍      | 603/1746 [01:15<02:07,  9.00it/s] 35%|███▍      | 605/1746 [01:15<01:57,  9.71it/s] 35%|███▍      | 606/1746 [01:16<01:58,  9.60it/s] 35%|███▍      | 607/1746 [01:16<02:02,  9.28it/s] 35%|███▍      | 608/1746 [01:16<02:31,  7.53it/s] 35%|███▍      | 609/1746 [01:16<02:24,  7.89it/s] 35%|███▍      | 610/1746 [01:16<02:20,  8.10it/s] 35%|███▍      | 611/1746 [01:16<02:40,  7.08it/s] 35%|███▌      | 612/1746 [01:16<02:27,  7.71it/s] 35%|███▌      | 614/1746 [01:17<02:09,  8.74it/s] 35%|███▌      | 615/1746 [01:17<02:09,  8.71it/s] 35%|███▌      | 617/1746 [01:17<02:03,  9.13it/s] 35%|███▌      | 618/1746 [01:17<02:03,  9.13it/s] 35%|███▌      | 619/1746 [01:17<02:01,  9.27it/s] 36%|███▌      | 621/1746 [01:17<01:55,  9.72it/s] 36%|███▌      | 623/1746 [01:18<01:58,  9.49it/s] 36%|███▌      | 624/1746 [01:18<01:58,  9.46it/s] 36%|███▌      | 626/1746 [01:18<01:54,  9.78it/s] 36%|███▌      | 627/1746 [01:18<01:55,  9.72it/s] 36%|███▌      | 629/1746 [01:18<01:51, 10.04it/s] 36%|███▌      | 631/1746 [01:18<01:52,  9.91it/s] 36%|███▌      | 632/1746 [01:18<01:54,  9.69it/s] 36%|███▋      | 633/1746 [01:19<01:55,  9.61it/s] 36%|███▋      | 634/1746 [01:19<01:56,  9.58it/s] 36%|███▋      | 636/1746 [01:19<01:53,  9.74it/s] 37%|███▋      | 638/1746 [01:19<01:52,  9.88it/s] 37%|███▋      | 639/1746 [01:19<02:14,  8.22it/s] 37%|███▋      | 640/1746 [01:19<02:09,  8.51it/s] 37%|███▋      | 641/1746 [01:19<02:07,  8.70it/s] 37%|███▋      | 642/1746 [01:20<02:07,  8.66it/s] 37%|███▋      | 644/1746 [01:20<02:00,  9.17it/s] 37%|███▋      | 645/1746 [01:20<01:58,  9.32it/s] 37%|███▋      | 647/1746 [01:20<01:54,  9.63it/s] 37%|███▋      | 648/1746 [01:20<01:53,  9.63it/s] 37%|███▋      | 649/1746 [01:20<01:54,  9.60it/s] 37%|███▋      | 650/1746 [01:20<01:54,  9.59it/s] 37%|███▋      | 652/1746 [01:21<01:49,  9.95it/s] 37%|███▋      | 654/1746 [01:21<01:46, 10.27it/s] 38%|███▊      | 656/1746 [01:21<01:47, 10.14it/s] 38%|███▊      | 658/1746 [01:21<01:49,  9.90it/s] 38%|███▊      | 659/1746 [01:21<01:50,  9.81it/s] 38%|███▊      | 660/1746 [01:21<01:52,  9.64it/s] 38%|███▊      | 661/1746 [01:21<01:52,  9.60it/s] 38%|███▊      | 662/1746 [01:22<01:53,  9.59it/s] 38%|███▊      | 663/1746 [01:22<01:53,  9.55it/s] 38%|███▊      | 664/1746 [01:22<02:01,  8.90it/s] 38%|███▊      | 665/1746 [01:22<02:07,  8.48it/s] 38%|███▊      | 667/1746 [01:22<02:00,  8.96it/s] 38%|███▊      | 669/1746 [01:22<01:54,  9.40it/s] 38%|███▊      | 671/1746 [01:23<01:51,  9.62it/s] 38%|███▊      | 672/1746 [01:23<01:52,  9.55it/s] 39%|███▊      | 673/1746 [01:23<01:57,  9.14it/s] 39%|███▊      | 674/1746 [01:23<01:58,  9.05it/s] 39%|███▊      | 676/1746 [01:23<01:51,  9.60it/s] 39%|███▉      | 677/1746 [01:23<01:53,  9.43it/s] 39%|███▉      | 679/1746 [01:23<01:51,  9.60it/s] 39%|███▉      | 680/1746 [01:24<01:54,  9.32it/s] 39%|███▉      | 681/1746 [01:24<01:56,  9.12it/s] 39%|███▉      | 682/1746 [01:24<02:00,  8.83it/s] 39%|███▉      | 684/1746 [01:24<01:57,  9.06it/s] 39%|███▉      | 685/1746 [01:24<01:55,  9.21it/s] 39%|███▉      | 686/1746 [01:24<01:55,  9.20it/s] 39%|███▉      | 688/1746 [01:24<01:58,  8.96it/s] 40%|███▉      | 690/1746 [01:25<01:50,  9.56it/s] 40%|███▉      | 692/1746 [01:25<01:47,  9.84it/s] 40%|███▉      | 693/1746 [01:25<01:54,  9.19it/s] 40%|███▉      | 694/1746 [01:25<01:53,  9.30it/s] 40%|███▉      | 696/1746 [01:25<01:50,  9.49it/s] 40%|███▉      | 697/1746 [01:25<01:57,  8.91it/s] 40%|████      | 699/1746 [01:26<01:49,  9.55it/s] 40%|████      | 700/1746 [01:26<01:57,  8.94it/s] 40%|████      | 701/1746 [01:26<01:58,  8.78it/s] 40%|████      | 702/1746 [01:26<02:05,  8.34it/s] 40%|████      | 703/1746 [01:26<02:02,  8.54it/s] 40%|████      | 704/1746 [01:26<02:02,  8.49it/s] 40%|████      | 706/1746 [01:26<01:57,  8.85it/s] 40%|████      | 707/1746 [01:27<01:55,  9.00it/s] 41%|████      | 709/1746 [01:27<01:48,  9.59it/s] 41%|████      | 710/1746 [01:28<05:10,  3.33it/s] 41%|████      | 711/1746 [01:28<04:22,  3.95it/s] 41%|████      | 712/1746 [01:28<03:42,  4.65it/s] 41%|████      | 714/1746 [01:28<02:52,  5.99it/s] 41%|████      | 715/1746 [01:28<02:36,  6.60it/s] 41%|████      | 717/1746 [01:28<02:16,  7.53it/s] 41%|████      | 718/1746 [01:29<02:10,  7.87it/s] 41%|████      | 719/1746 [01:29<02:03,  8.28it/s] 41%|████      | 720/1746 [01:29<02:02,  8.38it/s] 41%|████▏     | 721/1746 [01:29<02:00,  8.53it/s] 41%|████▏     | 722/1746 [01:29<01:59,  8.54it/s] 41%|████▏     | 724/1746 [01:29<01:50,  9.25it/s] 42%|████▏     | 726/1746 [01:29<01:47,  9.48it/s] 42%|████▏     | 727/1746 [01:29<01:48,  9.40it/s] 42%|████▏     | 729/1746 [01:30<01:47,  9.49it/s] 42%|████▏     | 730/1746 [01:30<01:46,  9.53it/s] 42%|████▏     | 731/1746 [01:30<01:46,  9.55it/s] 42%|████▏     | 733/1746 [01:30<01:54,  8.84it/s] 42%|████▏     | 734/1746 [01:30<02:01,  8.32it/s] 42%|████▏     | 736/1746 [01:31<01:57,  8.59it/s] 42%|████▏     | 737/1746 [01:31<01:54,  8.79it/s] 42%|████▏     | 738/1746 [01:31<01:54,  8.83it/s] 42%|████▏     | 739/1746 [01:31<01:54,  8.79it/s] 42%|████▏     | 740/1746 [01:31<02:31,  6.64it/s] 42%|████▏     | 741/1746 [01:31<02:18,  7.26it/s] 42%|████▏     | 742/1746 [01:31<02:09,  7.77it/s] 43%|████▎     | 743/1746 [01:31<02:02,  8.20it/s] 43%|████▎     | 745/1746 [01:32<02:19,  7.19it/s] 43%|████▎     | 746/1746 [01:32<02:10,  7.65it/s] 43%|████▎     | 747/1746 [01:32<02:03,  8.10it/s] 43%|████▎     | 749/1746 [01:32<01:54,  8.71it/s] 43%|████▎     | 751/1746 [01:32<01:47,  9.27it/s] 43%|████▎     | 752/1746 [01:32<01:51,  8.92it/s] 43%|████▎     | 753/1746 [01:33<01:59,  8.34it/s] 43%|████▎     | 755/1746 [01:33<02:00,  8.24it/s] 43%|████▎     | 757/1746 [01:33<01:51,  8.86it/s] 43%|████▎     | 758/1746 [01:33<01:48,  9.07it/s] 44%|████▎     | 760/1746 [01:33<01:46,  9.27it/s] 44%|████▎     | 761/1746 [01:33<01:45,  9.34it/s] 44%|████▎     | 762/1746 [01:34<01:45,  9.33it/s] 44%|████▍     | 764/1746 [01:34<01:42,  9.55it/s] 44%|████▍     | 765/1746 [01:34<01:43,  9.46it/s] 44%|████▍     | 766/1746 [01:34<01:45,  9.33it/s] 44%|████▍     | 767/1746 [01:34<01:45,  9.24it/s] 44%|████▍     | 769/1746 [01:34<01:37, 10.00it/s] 44%|████▍     | 771/1746 [01:34<01:37, 10.00it/s] 44%|████▍     | 773/1746 [01:35<01:33, 10.36it/s] 44%|████▍     | 775/1746 [01:35<01:41,  9.60it/s] 45%|████▍     | 777/1746 [01:35<01:38,  9.84it/s] 45%|████▍     | 778/1746 [01:35<01:38,  9.80it/s] 45%|████▍     | 779/1746 [01:35<01:39,  9.71it/s] 45%|████▍     | 780/1746 [01:35<01:38,  9.76it/s] 45%|████▍     | 781/1746 [01:36<01:39,  9.71it/s] 45%|████▍     | 783/1746 [01:36<01:44,  9.23it/s] 45%|████▍     | 784/1746 [01:37<04:31,  3.54it/s] 45%|████▍     | 785/1746 [01:37<03:53,  4.11it/s] 45%|████▌     | 787/1746 [01:37<02:56,  5.44it/s] 45%|████▌     | 788/1746 [01:37<02:39,  5.99it/s] 45%|████▌     | 789/1746 [01:37<02:25,  6.56it/s] 45%|████▌     | 790/1746 [01:37<02:13,  7.14it/s] 45%|████▌     | 791/1746 [01:37<02:20,  6.79it/s] 45%|████▌     | 793/1746 [01:38<02:00,  7.91it/s] 46%|████▌     | 795/1746 [01:38<01:48,  8.80it/s] 46%|████▌     | 796/1746 [01:38<01:47,  8.82it/s] 46%|████▌     | 798/1746 [01:38<01:42,  9.23it/s] 46%|████▌     | 800/1746 [01:38<01:38,  9.62it/s] 46%|████▌     | 801/1746 [01:38<01:37,  9.69it/s] 46%|████▌     | 802/1746 [01:39<01:43,  9.13it/s] 46%|████▌     | 803/1746 [01:39<01:42,  9.22it/s] 46%|████▌     | 804/1746 [01:39<01:43,  9.06it/s] 46%|████▌     | 805/1746 [01:39<01:43,  9.07it/s] 46%|████▌     | 807/1746 [01:39<01:37,  9.65it/s] 46%|████▋     | 809/1746 [01:39<01:42,  9.16it/s] 46%|████▋     | 810/1746 [01:39<01:41,  9.25it/s] 46%|████▋     | 811/1746 [01:40<01:43,  9.07it/s] 47%|████▋     | 812/1746 [01:40<01:44,  8.91it/s] 47%|████▋     | 814/1746 [01:40<01:39,  9.41it/s] 47%|████▋     | 815/1746 [01:40<01:38,  9.45it/s] 47%|████▋     | 817/1746 [01:40<01:39,  9.33it/s] 47%|████▋     | 818/1746 [01:40<01:38,  9.45it/s] 47%|████▋     | 820/1746 [01:40<01:36,  9.57it/s] 47%|████▋     | 822/1746 [01:41<01:41,  9.10it/s] 47%|████▋     | 824/1746 [01:41<01:39,  9.25it/s] 47%|████▋     | 825/1746 [01:41<01:45,  8.75it/s] 47%|████▋     | 827/1746 [01:42<03:00,  5.10it/s] 47%|████▋     | 828/1746 [01:42<02:44,  5.57it/s] 47%|████▋     | 829/1746 [01:42<02:28,  6.18it/s] 48%|████▊     | 830/1746 [01:42<02:16,  6.73it/s] 48%|████▊     | 831/1746 [01:42<02:15,  6.77it/s] 48%|████▊     | 833/1746 [01:42<01:57,  7.74it/s] 48%|████▊     | 834/1746 [01:43<01:53,  8.05it/s] 48%|████▊     | 835/1746 [01:43<01:49,  8.35it/s] 48%|████▊     | 836/1746 [01:43<01:45,  8.60it/s] 48%|████▊     | 838/1746 [01:43<01:41,  8.96it/s] 48%|████▊     | 839/1746 [01:43<01:39,  9.13it/s] 48%|████▊     | 840/1746 [01:43<01:41,  8.92it/s] 48%|████▊     | 842/1746 [01:43<01:39,  9.06it/s] 48%|████▊     | 843/1746 [01:44<01:45,  8.54it/s] 48%|████▊     | 845/1746 [01:45<04:42,  3.18it/s] 48%|████▊     | 846/1746 [01:45<04:01,  3.73it/s] 49%|████▊     | 847/1746 [01:45<03:25,  4.38it/s] 49%|████▊     | 848/1746 [01:45<02:57,  5.06it/s] 49%|████▊     | 849/1746 [01:45<02:37,  5.70it/s] 49%|████▊     | 850/1746 [01:45<02:18,  6.46it/s] 49%|████▉     | 852/1746 [01:45<01:56,  7.68it/s] 49%|████▉     | 854/1746 [01:46<01:43,  8.59it/s] 49%|████▉     | 855/1746 [01:46<01:44,  8.52it/s] 49%|████▉     | 857/1746 [01:46<01:40,  8.85it/s] 49%|████▉     | 859/1746 [01:46<01:35,  9.29it/s] 49%|████▉     | 861/1746 [01:46<01:32,  9.57it/s] 49%|████▉     | 862/1746 [01:47<01:32,  9.52it/s] 49%|████▉     | 863/1746 [01:47<01:33,  9.49it/s] 50%|████▉     | 865/1746 [01:47<01:29,  9.85it/s] 50%|████▉     | 866/1746 [01:47<01:30,  9.68it/s] 50%|████▉     | 867/1746 [01:47<01:36,  9.07it/s] 50%|████▉     | 868/1746 [01:47<01:34,  9.25it/s] 50%|████▉     | 869/1746 [01:47<01:40,  8.71it/s] 50%|████▉     | 871/1746 [01:47<01:32,  9.43it/s] 50%|████▉     | 872/1746 [01:48<01:31,  9.52it/s] 50%|█████     | 873/1746 [01:48<01:30,  9.63it/s] 50%|█████     | 874/1746 [01:48<01:32,  9.41it/s] 50%|█████     | 875/1746 [01:48<01:32,  9.46it/s] 50%|█████     | 876/1746 [01:48<01:49,  7.91it/s] 50%|█████     | 877/1746 [01:48<01:44,  8.29it/s] 50%|█████     | 878/1746 [01:48<01:41,  8.54it/s] 50%|█████     | 879/1746 [01:48<01:39,  8.75it/s] 50%|█████     | 880/1746 [01:48<01:36,  8.96it/s] 50%|█████     | 881/1746 [01:49<01:40,  8.62it/s] 51%|█████     | 882/1746 [01:49<01:36,  8.92it/s] 51%|█████     | 883/1746 [01:49<01:37,  8.83it/s] 51%|█████     | 884/1746 [01:49<01:38,  8.79it/s] 51%|█████     | 885/1746 [01:49<01:34,  9.09it/s] 51%|█████     | 887/1746 [01:49<01:31,  9.40it/s] 51%|█████     | 888/1746 [01:49<01:30,  9.52it/s] 51%|█████     | 889/1746 [01:49<01:28,  9.64it/s] 51%|█████     | 890/1746 [01:50<01:29,  9.60it/s] 51%|█████     | 892/1746 [01:50<01:26,  9.90it/s] 51%|█████     | 893/1746 [01:50<01:26,  9.86it/s] 51%|█████     | 894/1746 [01:50<01:26,  9.81it/s] 51%|█████▏    | 895/1746 [01:50<01:38,  8.65it/s] 51%|█████▏    | 896/1746 [01:50<01:41,  8.38it/s] 51%|█████▏    | 897/1746 [01:50<01:40,  8.49it/s] 51%|█████▏    | 899/1746 [01:51<01:32,  9.15it/s] 52%|█████▏    | 900/1746 [01:51<01:37,  8.64it/s] 52%|█████▏    | 902/1746 [01:51<01:29,  9.39it/s] 52%|█████▏    | 903/1746 [01:51<01:29,  9.40it/s] 52%|█████▏    | 905/1746 [01:51<01:28,  9.51it/s] 52%|█████▏    | 906/1746 [01:51<01:27,  9.56it/s] 52%|█████▏    | 908/1746 [01:51<01:25,  9.84it/s] 52%|█████▏    | 910/1746 [01:52<01:23, 10.02it/s] 52%|█████▏    | 912/1746 [01:52<01:24,  9.85it/s] 52%|█████▏    | 913/1746 [01:52<01:24,  9.84it/s] 52%|█████▏    | 915/1746 [01:52<01:24,  9.85it/s] 52%|█████▏    | 916/1746 [01:52<01:25,  9.74it/s] 53%|█████▎    | 918/1746 [01:53<01:25,  9.66it/s] 53%|█████▎    | 919/1746 [01:53<01:26,  9.57it/s] 53%|█████▎    | 921/1746 [01:53<01:25,  9.66it/s] 53%|█████▎    | 922/1746 [01:53<01:25,  9.69it/s] 53%|█████▎    | 923/1746 [01:53<01:27,  9.42it/s] 53%|█████▎    | 924/1746 [01:53<01:27,  9.44it/s] 53%|█████▎    | 925/1746 [01:53<01:26,  9.50it/s] 53%|█████▎    | 926/1746 [01:53<01:25,  9.63it/s] 53%|█████▎    | 927/1746 [01:53<01:26,  9.42it/s] 53%|█████▎    | 929/1746 [01:54<01:23,  9.82it/s] 53%|█████▎    | 930/1746 [01:54<01:22,  9.85it/s] 53%|█████▎    | 931/1746 [01:54<01:24,  9.61it/s] 53%|█████▎    | 933/1746 [01:54<01:22,  9.88it/s] 53%|█████▎    | 934/1746 [01:54<01:26,  9.41it/s] 54%|█████▎    | 936/1746 [01:54<01:24,  9.63it/s] 54%|█████▎    | 937/1746 [01:55<01:30,  8.90it/s] 54%|█████▍    | 939/1746 [01:55<01:23,  9.65it/s] 54%|█████▍    | 941/1746 [01:55<01:20,  9.99it/s] 54%|█████▍    | 943/1746 [01:55<01:19, 10.05it/s] 54%|█████▍    | 944/1746 [01:55<01:20, 10.01it/s] 54%|█████▍    | 946/1746 [01:55<01:23,  9.55it/s] 54%|█████▍    | 947/1746 [01:56<01:36,  8.29it/s] 54%|█████▍    | 948/1746 [01:56<01:49,  7.25it/s] 54%|█████▍    | 950/1746 [01:56<01:37,  8.19it/s] 54%|█████▍    | 951/1746 [01:56<01:35,  8.31it/s] 55%|█████▍    | 952/1746 [01:56<01:38,  8.06it/s] 55%|█████▍    | 954/1746 [01:56<01:31,  8.63it/s] 55%|█████▍    | 955/1746 [01:57<01:29,  8.84it/s] 55%|█████▍    | 956/1746 [01:57<01:27,  9.00it/s] 55%|█████▍    | 958/1746 [01:57<01:22,  9.55it/s] 55%|█████▍    | 959/1746 [01:57<01:24,  9.32it/s] 55%|█████▌    | 961/1746 [01:57<01:22,  9.54it/s] 55%|█████▌    | 963/1746 [01:57<01:18, 10.01it/s] 55%|█████▌    | 964/1746 [01:57<01:19,  9.86it/s] 55%|█████▌    | 965/1746 [01:58<01:20,  9.73it/s] 55%|█████▌    | 966/1746 [01:58<01:24,  9.21it/s] 55%|█████▌    | 967/1746 [01:58<01:29,  8.75it/s] 55%|█████▌    | 968/1746 [01:58<01:28,  8.81it/s] 55%|█████▌    | 969/1746 [01:58<01:28,  8.82it/s] 56%|█████▌    | 970/1746 [01:58<01:27,  8.85it/s] 56%|█████▌    | 972/1746 [01:58<01:20,  9.57it/s] 56%|█████▌    | 973/1746 [01:58<01:21,  9.54it/s] 56%|█████▌    | 974/1746 [01:59<01:21,  9.49it/s] 56%|█████▌    | 976/1746 [01:59<01:21,  9.43it/s] 56%|█████▌    | 977/1746 [01:59<01:22,  9.36it/s] 56%|█████▌    | 979/1746 [01:59<01:20,  9.50it/s] 56%|█████▌    | 980/1746 [01:59<01:23,  9.20it/s] 56%|█████▌    | 982/1746 [01:59<01:19,  9.60it/s] 56%|█████▋    | 984/1746 [02:00<01:21,  9.36it/s] 56%|█████▋    | 985/1746 [02:00<01:43,  7.39it/s] 57%|█████▋    | 987/1746 [02:00<01:31,  8.28it/s] 57%|█████▋    | 988/1746 [02:00<01:36,  7.83it/s] 57%|█████▋    | 989/1746 [02:00<01:41,  7.49it/s] 57%|█████▋    | 991/1746 [02:01<01:30,  8.38it/s] 57%|█████▋    | 992/1746 [02:01<01:27,  8.58it/s] 57%|█████▋    | 993/1746 [02:01<01:29,  8.43it/s] 57%|█████▋    | 995/1746 [02:01<01:22,  9.13it/s] 57%|█████▋    | 996/1746 [02:01<01:20,  9.30it/s] 57%|█████▋    | 997/1746 [02:01<01:23,  9.01it/s] 57%|█████▋    | 999/1746 [02:01<01:24,  8.79it/s] 57%|█████▋    | 1000/1746 [02:02<01:24,  8.82it/s] 57%|█████▋    | 1001/1746 [02:02<01:22,  9.01it/s] 57%|█████▋    | 1002/1746 [02:02<01:21,  9.17it/s] 57%|█████▋    | 1003/1746 [02:02<01:23,  8.86it/s] 58%|█████▊    | 1004/1746 [02:02<01:25,  8.70it/s] 58%|█████▊    | 1005/1746 [02:02<01:31,  8.11it/s] 58%|█████▊    | 1006/1746 [02:02<01:28,  8.36it/s] 58%|█████▊    | 1008/1746 [02:02<01:24,  8.76it/s] 58%|█████▊    | 1010/1746 [02:03<01:19,  9.25it/s] 58%|█████▊    | 1012/1746 [02:03<01:17,  9.51it/s] 58%|█████▊    | 1013/1746 [02:03<01:16,  9.54it/s] 58%|█████▊    | 1014/1746 [02:03<01:19,  9.24it/s] 58%|█████▊    | 1016/1746 [02:03<01:14,  9.83it/s] 58%|█████▊    | 1018/1746 [02:04<01:16,  9.56it/s] 58%|█████▊    | 1020/1746 [02:04<01:14,  9.73it/s] 59%|█████▊    | 1022/1746 [02:04<01:14,  9.67it/s] 59%|█████▊    | 1024/1746 [02:04<01:11, 10.07it/s] 59%|█████▉    | 1026/1746 [02:04<01:13,  9.81it/s] 59%|█████▉    | 1027/1746 [02:04<01:17,  9.27it/s] 59%|█████▉    | 1029/1746 [02:05<01:15,  9.53it/s] 59%|█████▉    | 1030/1746 [02:05<01:15,  9.43it/s] 59%|█████▉    | 1032/1746 [02:05<01:24,  8.43it/s] 59%|█████▉    | 1033/1746 [02:05<01:24,  8.44it/s] 59%|█████▉    | 1034/1746 [02:05<01:21,  8.72it/s] 59%|█████▉    | 1035/1746 [02:05<01:19,  9.00it/s] 59%|█████▉    | 1037/1746 [02:06<01:13,  9.59it/s] 59%|█████▉    | 1038/1746 [02:06<01:15,  9.43it/s] 60%|█████▉    | 1039/1746 [02:06<01:14,  9.53it/s] 60%|█████▉    | 1040/1746 [02:06<01:15,  9.30it/s] 60%|█████▉    | 1042/1746 [02:06<01:12,  9.66it/s] 60%|█████▉    | 1044/1746 [02:06<01:10,  9.89it/s] 60%|█████▉    | 1045/1746 [02:06<01:11,  9.74it/s] 60%|█████▉    | 1046/1746 [02:06<01:12,  9.69it/s] 60%|██████    | 1048/1746 [02:07<01:11,  9.71it/s] 60%|██████    | 1050/1746 [02:07<01:09,  9.98it/s] 60%|██████    | 1051/1746 [02:07<01:09,  9.93it/s] 60%|██████    | 1053/1746 [02:07<01:13,  9.47it/s] 60%|██████    | 1054/1746 [02:07<01:13,  9.44it/s] 60%|██████    | 1055/1746 [02:07<01:16,  8.99it/s] 60%|██████    | 1056/1746 [02:08<01:16,  9.07it/s] 61%|██████    | 1057/1746 [02:08<01:14,  9.29it/s] 61%|██████    | 1058/1746 [02:08<01:15,  9.10it/s] 61%|██████    | 1059/1746 [02:08<01:16,  9.02it/s] 61%|██████    | 1061/1746 [02:08<01:10,  9.76it/s] 61%|██████    | 1062/1746 [02:08<01:10,  9.71it/s] 61%|██████    | 1064/1746 [02:08<01:07, 10.08it/s] 61%|██████    | 1065/1746 [02:08<01:08,  9.98it/s] 61%|██████    | 1066/1746 [02:09<01:09,  9.84it/s] 61%|██████    | 1068/1746 [02:09<01:08,  9.96it/s] 61%|██████    | 1069/1746 [02:09<01:08,  9.92it/s] 61%|██████▏   | 1071/1746 [02:09<01:05, 10.33it/s] 61%|██████▏   | 1073/1746 [02:09<01:07,  9.97it/s] 62%|██████▏   | 1074/1746 [02:09<01:11,  9.38it/s] 62%|██████▏   | 1076/1746 [02:10<01:14,  9.00it/s] 62%|██████▏   | 1077/1746 [02:11<03:49,  2.92it/s] 62%|██████▏   | 1078/1746 [02:11<03:14,  3.44it/s] 62%|██████▏   | 1080/1746 [02:11<02:23,  4.63it/s] 62%|██████▏   | 1082/1746 [02:11<01:59,  5.54it/s] 62%|██████▏   | 1083/1746 [02:12<01:48,  6.10it/s] 62%|██████▏   | 1085/1746 [02:12<01:34,  7.03it/s] 62%|██████▏   | 1086/1746 [02:12<01:28,  7.43it/s] 62%|██████▏   | 1088/1746 [02:12<01:19,  8.24it/s] 62%|██████▏   | 1089/1746 [02:12<01:17,  8.46it/s] 62%|██████▏   | 1090/1746 [02:12<01:15,  8.67it/s] 63%|██████▎   | 1092/1746 [02:12<01:12,  9.08it/s] 63%|██████▎   | 1093/1746 [02:13<01:17,  8.42it/s] 63%|██████▎   | 1095/1746 [02:13<01:12,  8.99it/s] 63%|██████▎   | 1096/1746 [02:13<01:14,  8.71it/s] 63%|██████▎   | 1097/1746 [02:13<01:13,  8.88it/s] 63%|██████▎   | 1098/1746 [02:13<01:16,  8.50it/s] 63%|██████▎   | 1099/1746 [02:13<01:13,  8.85it/s] 63%|██████▎   | 1100/1746 [02:13<01:15,  8.59it/s] 63%|██████▎   | 1102/1746 [02:14<01:08,  9.35it/s] 63%|██████▎   | 1104/1746 [02:14<01:05,  9.83it/s] 63%|██████▎   | 1106/1746 [02:14<01:04,  9.98it/s] 63%|██████▎   | 1108/1746 [02:14<01:03, 10.09it/s] 64%|██████▎   | 1109/1746 [02:14<01:03, 10.06it/s] 64%|██████▎   | 1110/1746 [02:14<01:04,  9.84it/s] 64%|██████▎   | 1111/1746 [02:14<01:04,  9.81it/s] 64%|██████▎   | 1113/1746 [02:15<01:03,  9.95it/s] 64%|██████▍   | 1114/1746 [02:15<01:08,  9.19it/s] 64%|██████▍   | 1115/1746 [02:15<01:10,  8.89it/s] 64%|██████▍   | 1116/1746 [02:15<01:11,  8.84it/s] 64%|██████▍   | 1117/1746 [02:15<01:09,  9.07it/s] 64%|██████▍   | 1118/1746 [02:15<01:07,  9.31it/s] 64%|██████▍   | 1120/1746 [02:15<01:03,  9.85it/s] 64%|██████▍   | 1122/1746 [02:16<01:02,  9.96it/s] 64%|██████▍   | 1123/1746 [02:16<01:02,  9.93it/s] 64%|██████▍   | 1124/1746 [02:16<01:02,  9.91it/s] 64%|██████▍   | 1125/1746 [02:16<01:03,  9.79it/s] 64%|██████▍   | 1126/1746 [02:16<01:11,  8.64it/s] 65%|██████▍   | 1128/1746 [02:16<01:06,  9.33it/s] 65%|██████▍   | 1129/1746 [02:16<01:11,  8.65it/s] 65%|██████▍   | 1131/1746 [02:17<01:06,  9.28it/s] 65%|██████▍   | 1133/1746 [02:17<01:03,  9.61it/s] 65%|██████▍   | 1134/1746 [02:17<01:03,  9.64it/s] 65%|██████▌   | 1135/1746 [02:17<01:03,  9.60it/s] 65%|██████▌   | 1136/1746 [02:17<01:15,  8.13it/s] 65%|██████▌   | 1137/1746 [02:17<01:12,  8.45it/s] 65%|██████▌   | 1138/1746 [02:17<01:15,  8.05it/s] 65%|██████▌   | 1140/1746 [02:18<01:08,  8.81it/s] 65%|██████▌   | 1142/1746 [02:18<01:05,  9.19it/s] 66%|██████▌   | 1144/1746 [02:18<01:02,  9.61it/s] 66%|██████▌   | 1146/1746 [02:18<01:01,  9.80it/s] 66%|██████▌   | 1147/1746 [02:18<01:01,  9.67it/s] 66%|██████▌   | 1148/1746 [02:18<01:02,  9.62it/s] 66%|██████▌   | 1150/1746 [02:19<01:02,  9.52it/s] 66%|██████▌   | 1151/1746 [02:19<01:04,  9.29it/s] 66%|██████▌   | 1152/1746 [02:19<01:03,  9.34it/s] 66%|██████▌   | 1153/1746 [02:19<01:02,  9.49it/s] 66%|██████▌   | 1155/1746 [02:19<01:01,  9.68it/s] 66%|██████▌   | 1156/1746 [02:19<01:01,  9.64it/s] 66%|██████▋   | 1157/1746 [02:19<01:01,  9.53it/s] 66%|██████▋   | 1158/1746 [02:19<01:01,  9.50it/s] 66%|██████▋   | 1160/1746 [02:20<00:59,  9.78it/s] 66%|██████▋   | 1161/1746 [02:20<01:02,  9.30it/s] 67%|██████▋   | 1162/1746 [02:20<01:04,  9.02it/s] 67%|██████▋   | 1163/1746 [02:20<01:04,  9.04it/s] 67%|██████▋   | 1164/1746 [02:20<01:05,  8.88it/s] 67%|██████▋   | 1165/1746 [02:20<01:03,  9.09it/s] 67%|██████▋   | 1167/1746 [02:21<01:07,  8.58it/s] 67%|██████▋   | 1168/1746 [02:21<01:07,  8.57it/s] 67%|██████▋   | 1169/1746 [02:21<01:05,  8.86it/s] 67%|██████▋   | 1171/1746 [02:21<01:01,  9.42it/s] 67%|██████▋   | 1172/1746 [02:21<01:04,  8.90it/s] 67%|██████▋   | 1173/1746 [02:21<01:04,  8.90it/s] 67%|██████▋   | 1174/1746 [02:21<01:13,  7.74it/s] 67%|██████▋   | 1176/1746 [02:22<01:05,  8.69it/s] 67%|██████▋   | 1178/1746 [02:22<01:06,  8.58it/s] 68%|██████▊   | 1180/1746 [02:22<01:01,  9.13it/s] 68%|██████▊   | 1182/1746 [02:22<00:59,  9.40it/s] 68%|██████▊   | 1184/1746 [02:22<00:58,  9.66it/s] 68%|██████▊   | 1185/1746 [02:22<00:57,  9.71it/s] 68%|██████▊   | 1186/1746 [02:23<00:58,  9.62it/s] 68%|██████▊   | 1187/1746 [02:23<00:59,  9.38it/s] 68%|██████▊   | 1188/1746 [02:23<00:59,  9.40it/s] 68%|██████▊   | 1189/1746 [02:23<00:59,  9.31it/s] 68%|██████▊   | 1190/1746 [02:23<01:01,  9.01it/s] 68%|██████▊   | 1191/1746 [02:23<01:02,  8.88it/s] 68%|██████▊   | 1192/1746 [02:23<01:04,  8.53it/s] 68%|██████▊   | 1194/1746 [02:24<01:03,  8.74it/s] 68%|██████▊   | 1195/1746 [02:24<01:01,  8.90it/s] 68%|██████▊   | 1196/1746 [02:24<01:01,  8.91it/s] 69%|██████▊   | 1197/1746 [02:24<01:03,  8.61it/s] 69%|██████▊   | 1199/1746 [02:24<00:59,  9.12it/s] 69%|██████▊   | 1200/1746 [02:24<00:58,  9.25it/s] 69%|██████▉   | 1201/1746 [02:24<00:57,  9.40it/s] 69%|██████▉   | 1202/1746 [02:24<01:00,  8.93it/s] 69%|██████▉   | 1203/1746 [02:24<00:59,  9.18it/s] 69%|██████▉   | 1204/1746 [02:25<01:01,  8.86it/s] 69%|██████▉   | 1205/1746 [02:25<00:59,  9.11it/s] 69%|██████▉   | 1206/1746 [02:27<06:28,  1.39it/s] 69%|██████▉   | 1207/1746 [02:27<04:53,  1.84it/s] 69%|██████▉   | 1208/1746 [02:27<03:43,  2.41it/s] 69%|██████▉   | 1210/1746 [02:27<02:26,  3.67it/s] 69%|██████▉   | 1211/1746 [02:27<02:03,  4.34it/s] 69%|██████▉   | 1212/1746 [02:28<01:47,  4.97it/s] 70%|██████▉   | 1214/1746 [02:28<01:22,  6.41it/s] 70%|██████▉   | 1215/1746 [02:28<01:17,  6.89it/s] 70%|██████▉   | 1217/1746 [02:28<01:05,  8.09it/s] 70%|██████▉   | 1218/1746 [02:28<01:03,  8.36it/s] 70%|██████▉   | 1220/1746 [02:28<00:58,  9.04it/s] 70%|██████▉   | 1221/1746 [02:28<00:57,  9.21it/s] 70%|███████   | 1223/1746 [02:29<00:53,  9.69it/s] 70%|███████   | 1225/1746 [02:29<00:53,  9.79it/s] 70%|███████   | 1227/1746 [02:29<00:52,  9.87it/s] 70%|███████   | 1229/1746 [02:29<00:54,  9.48it/s] 71%|███████   | 1231/1746 [02:29<00:52,  9.74it/s] 71%|███████   | 1232/1746 [02:30<00:55,  9.30it/s] 71%|███████   | 1233/1746 [02:30<00:56,  9.11it/s] 71%|███████   | 1235/1746 [02:30<00:55,  9.27it/s] 71%|███████   | 1237/1746 [02:30<00:53,  9.46it/s] 71%|███████   | 1239/1746 [02:30<00:52,  9.66it/s] 71%|███████   | 1240/1746 [02:30<00:56,  8.96it/s] 71%|███████   | 1241/1746 [02:31<00:55,  9.09it/s] 71%|███████   | 1242/1746 [02:31<00:55,  9.12it/s] 71%|███████   | 1244/1746 [02:31<00:52,  9.51it/s] 71%|███████▏  | 1245/1746 [02:31<01:02,  8.00it/s] 71%|███████▏  | 1246/1746 [02:31<01:01,  8.10it/s] 71%|███████▏  | 1248/1746 [02:31<00:55,  8.95it/s] 72%|███████▏  | 1250/1746 [02:32<00:53,  9.22it/s] 72%|███████▏  | 1252/1746 [02:32<00:51,  9.67it/s] 72%|███████▏  | 1254/1746 [02:32<00:51,  9.48it/s] 72%|███████▏  | 1256/1746 [02:32<00:50,  9.63it/s] 72%|███████▏  | 1258/1746 [02:32<00:50,  9.62it/s] 72%|███████▏  | 1259/1746 [02:33<00:51,  9.52it/s] 72%|███████▏  | 1260/1746 [02:33<00:50,  9.56it/s] 72%|███████▏  | 1261/1746 [02:33<00:50,  9.59it/s] 72%|███████▏  | 1262/1746 [02:33<00:51,  9.42it/s] 72%|███████▏  | 1263/1746 [02:33<00:51,  9.47it/s] 72%|███████▏  | 1264/1746 [02:33<00:50,  9.60it/s] 72%|███████▏  | 1265/1746 [02:33<00:51,  9.37it/s] 73%|███████▎  | 1266/1746 [02:33<00:52,  9.11it/s] 73%|███████▎  | 1268/1746 [02:33<00:50,  9.56it/s] 73%|███████▎  | 1269/1746 [02:34<00:50,  9.51it/s] 73%|███████▎  | 1270/1746 [02:34<00:50,  9.48it/s] 73%|███████▎  | 1272/1746 [02:34<00:48,  9.78it/s] 73%|███████▎  | 1274/1746 [02:34<00:48,  9.72it/s] 73%|███████▎  | 1276/1746 [02:34<00:50,  9.39it/s] 73%|███████▎  | 1278/1746 [02:34<00:48,  9.67it/s] 73%|███████▎  | 1279/1746 [02:35<00:48,  9.68it/s] 73%|███████▎  | 1280/1746 [02:35<00:48,  9.53it/s] 73%|███████▎  | 1281/1746 [02:35<00:48,  9.63it/s] 73%|███████▎  | 1283/1746 [02:35<00:48,  9.59it/s] 74%|███████▎  | 1284/1746 [02:35<00:47,  9.63it/s] 74%|███████▎  | 1285/1746 [02:35<00:50,  9.09it/s] 74%|███████▎  | 1286/1746 [02:35<00:51,  9.00it/s] 74%|███████▎  | 1287/1746 [02:35<00:50,  9.01it/s] 74%|███████▍  | 1288/1746 [02:36<00:54,  8.43it/s] 74%|███████▍  | 1290/1746 [02:36<00:49,  9.19it/s] 74%|███████▍  | 1291/1746 [02:36<00:50,  8.99it/s] 74%|███████▍  | 1293/1746 [02:36<00:48,  9.42it/s] 74%|███████▍  | 1294/1746 [02:36<00:47,  9.50it/s] 74%|███████▍  | 1295/1746 [02:36<00:47,  9.53it/s] 74%|███████▍  | 1296/1746 [02:36<00:47,  9.50it/s] 74%|███████▍  | 1298/1746 [02:37<00:46,  9.62it/s] 74%|███████▍  | 1299/1746 [02:37<00:46,  9.68it/s] 75%|███████▍  | 1301/1746 [02:37<00:45,  9.80it/s] 75%|███████▍  | 1302/1746 [02:37<00:45,  9.74it/s] 75%|███████▍  | 1303/1746 [02:37<00:46,  9.49it/s] 75%|███████▍  | 1305/1746 [02:37<00:44,  9.86it/s] 75%|███████▍  | 1307/1746 [02:38<00:43, 10.06it/s] 75%|███████▍  | 1309/1746 [02:38<00:43, 10.16it/s] 75%|███████▌  | 1311/1746 [02:38<00:45,  9.62it/s] 75%|███████▌  | 1313/1746 [02:38<00:43,  9.87it/s] 75%|███████▌  | 1315/1746 [02:38<00:43,  9.88it/s] 75%|███████▌  | 1317/1746 [02:39<00:42, 10.14it/s] 76%|███████▌  | 1319/1746 [02:39<00:42, 10.02it/s] 76%|███████▌  | 1321/1746 [02:39<00:41, 10.31it/s] 76%|███████▌  | 1323/1746 [02:39<00:41, 10.17it/s] 76%|███████▌  | 1325/1746 [02:39<00:42, 10.00it/s] 76%|███████▌  | 1327/1746 [02:40<00:42,  9.94it/s] 76%|███████▌  | 1328/1746 [02:40<00:42,  9.82it/s] 76%|███████▌  | 1329/1746 [02:40<00:42,  9.82it/s] 76%|███████▌  | 1331/1746 [02:40<00:42,  9.85it/s] 76%|███████▋  | 1333/1746 [02:40<00:40, 10.17it/s] 76%|███████▋  | 1335/1746 [02:40<00:41,  9.80it/s] 77%|███████▋  | 1337/1746 [02:41<00:40, 10.11it/s] 77%|███████▋  | 1339/1746 [02:42<02:08,  3.16it/s] 77%|███████▋  | 1341/1746 [02:42<01:40,  4.02it/s] 77%|███████▋  | 1343/1746 [02:43<01:20,  4.99it/s] 77%|███████▋  | 1344/1746 [02:43<01:15,  5.33it/s] 77%|███████▋  | 1345/1746 [02:43<01:08,  5.88it/s] 77%|███████▋  | 1346/1746 [02:43<01:01,  6.45it/s] 77%|███████▋  | 1348/1746 [02:43<00:54,  7.37it/s] 77%|███████▋  | 1349/1746 [02:43<00:51,  7.78it/s] 77%|███████▋  | 1351/1746 [02:43<00:44,  8.78it/s] 77%|███████▋  | 1352/1746 [02:43<00:44,  8.79it/s] 77%|███████▋  | 1353/1746 [02:44<00:43,  8.97it/s] 78%|███████▊  | 1355/1746 [02:44<00:44,  8.75it/s] 78%|███████▊  | 1357/1746 [02:44<00:41,  9.30it/s] 78%|███████▊  | 1359/1746 [02:44<00:40,  9.67it/s] 78%|███████▊  | 1361/1746 [02:44<00:38,  9.92it/s] 78%|███████▊  | 1363/1746 [02:45<00:37, 10.11it/s] 78%|███████▊  | 1365/1746 [02:45<00:37, 10.05it/s] 78%|███████▊  | 1367/1746 [02:45<00:39,  9.60it/s] 78%|███████▊  | 1368/1746 [02:45<00:39,  9.57it/s] 78%|███████▊  | 1370/1746 [02:45<00:38,  9.69it/s] 79%|███████▊  | 1371/1746 [02:45<00:38,  9.70it/s] 79%|███████▊  | 1372/1746 [02:46<00:39,  9.44it/s] 79%|███████▊  | 1374/1746 [02:46<00:39,  9.53it/s] 79%|███████▉  | 1375/1746 [02:46<00:38,  9.54it/s] 79%|███████▉  | 1377/1746 [02:46<00:37,  9.89it/s] 79%|███████▉  | 1379/1746 [02:46<00:36, 10.07it/s] 79%|███████▉  | 1380/1746 [02:46<00:42,  8.70it/s] 79%|███████▉  | 1382/1746 [02:47<00:39,  9.33it/s] 79%|███████▉  | 1383/1746 [02:47<00:41,  8.85it/s] 79%|███████▉  | 1384/1746 [02:47<00:40,  8.99it/s] 79%|███████▉  | 1386/1746 [02:47<00:38,  9.41it/s] 79%|███████▉  | 1387/1746 [02:47<00:38,  9.24it/s] 79%|███████▉  | 1388/1746 [02:47<00:40,  8.94it/s] 80%|███████▉  | 1389/1746 [02:47<00:40,  8.90it/s] 80%|███████▉  | 1391/1746 [02:48<00:36,  9.62it/s] 80%|███████▉  | 1392/1746 [02:48<00:38,  9.23it/s] 80%|███████▉  | 1393/1746 [02:48<00:39,  8.91it/s] 80%|███████▉  | 1394/1746 [02:48<00:43,  8.11it/s] 80%|███████▉  | 1395/1746 [02:48<00:42,  8.35it/s] 80%|███████▉  | 1396/1746 [02:48<00:41,  8.50it/s] 80%|████████  | 1397/1746 [02:48<00:45,  7.72it/s] 80%|████████  | 1398/1746 [02:48<00:42,  8.23it/s] 80%|████████  | 1399/1746 [02:49<00:42,  8.21it/s] 80%|████████  | 1400/1746 [02:49<00:40,  8.60it/s] 80%|████████  | 1402/1746 [02:49<00:37,  9.16it/s] 80%|████████  | 1403/1746 [02:49<00:36,  9.30it/s] 80%|████████  | 1405/1746 [02:49<00:35,  9.69it/s] 81%|████████  | 1406/1746 [02:49<00:36,  9.35it/s] 81%|████████  | 1407/1746 [02:49<00:36,  9.21it/s] 81%|████████  | 1409/1746 [02:50<00:35,  9.41it/s] 81%|████████  | 1411/1746 [02:50<00:34,  9.69it/s] 81%|████████  | 1412/1746 [02:50<00:34,  9.67it/s] 81%|████████  | 1413/1746 [02:50<00:34,  9.52it/s] 81%|████████  | 1414/1746 [02:50<00:35,  9.45it/s] 81%|████████  | 1415/1746 [02:50<00:36,  9.07it/s] 81%|████████  | 1416/1746 [02:50<00:37,  8.83it/s] 81%|████████  | 1417/1746 [02:50<00:37,  8.67it/s] 81%|████████  | 1418/1746 [02:51<00:36,  8.91it/s] 81%|████████▏ | 1419/1746 [02:51<00:36,  9.04it/s] 81%|████████▏ | 1421/1746 [02:51<00:34,  9.39it/s] 81%|████████▏ | 1422/1746 [02:51<00:34,  9.32it/s] 82%|████████▏ | 1424/1746 [02:51<00:32,  9.91it/s] 82%|████████▏ | 1426/1746 [02:51<00:33,  9.62it/s] 82%|████████▏ | 1427/1746 [02:52<00:33,  9.66it/s] 82%|████████▏ | 1428/1746 [02:52<00:33,  9.46it/s] 82%|████████▏ | 1429/1746 [02:52<00:34,  9.28it/s] 82%|████████▏ | 1431/1746 [02:52<00:32,  9.58it/s] 82%|████████▏ | 1432/1746 [02:52<00:32,  9.65it/s] 82%|████████▏ | 1433/1746 [02:52<00:32,  9.73it/s] 82%|████████▏ | 1434/1746 [02:52<00:32,  9.64it/s] 82%|████████▏ | 1435/1746 [02:52<00:32,  9.66it/s] 82%|████████▏ | 1436/1746 [02:52<00:32,  9.67it/s] 82%|████████▏ | 1437/1746 [02:53<00:32,  9.66it/s] 82%|████████▏ | 1438/1746 [02:53<00:35,  8.57it/s] 82%|████████▏ | 1439/1746 [02:53<00:35,  8.75it/s] 83%|████████▎ | 1441/1746 [02:53<00:31,  9.56it/s] 83%|████████▎ | 1442/1746 [02:53<00:31,  9.62it/s] 83%|████████▎ | 1443/1746 [02:53<00:34,  8.74it/s] 83%|████████▎ | 1444/1746 [02:53<00:35,  8.58it/s] 83%|████████▎ | 1445/1746 [02:53<00:34,  8.82it/s] 83%|████████▎ | 1447/1746 [02:54<00:32,  9.20it/s] 83%|████████▎ | 1448/1746 [02:54<00:32,  9.15it/s] 83%|████████▎ | 1449/1746 [02:54<00:31,  9.31it/s] 83%|████████▎ | 1450/1746 [02:54<00:33,  8.87it/s] 83%|████████▎ | 1451/1746 [02:54<00:33,  8.93it/s] 83%|████████▎ | 1452/1746 [02:54<00:32,  9.09it/s] 83%|████████▎ | 1453/1746 [02:54<00:32,  9.10it/s] 83%|████████▎ | 1455/1746 [02:55<00:31,  9.31it/s] 83%|████████▎ | 1456/1746 [02:55<00:30,  9.41it/s] 84%|████████▎ | 1458/1746 [02:55<00:29,  9.67it/s] 84%|████████▎ | 1459/1746 [02:55<00:29,  9.61it/s] 84%|████████▎ | 1461/1746 [02:55<00:28, 10.15it/s] 84%|████████▍ | 1463/1746 [02:55<00:28,  9.94it/s] 84%|████████▍ | 1464/1746 [02:55<00:28,  9.94it/s] 84%|████████▍ | 1466/1746 [02:56<00:27, 10.31it/s] 84%|████████▍ | 1468/1746 [02:56<00:29,  9.33it/s] 84%|████████▍ | 1470/1746 [02:56<00:28,  9.65it/s] 84%|████████▍ | 1471/1746 [02:56<00:29,  9.47it/s] 84%|████████▍ | 1472/1746 [02:56<00:29,  9.45it/s] 84%|████████▍ | 1474/1746 [02:56<00:28,  9.67it/s] 85%|████████▍ | 1476/1746 [02:57<00:27,  9.93it/s] 85%|████████▍ | 1477/1746 [02:57<00:27,  9.84it/s] 85%|████████▍ | 1479/1746 [02:57<00:27,  9.87it/s] 85%|████████▍ | 1480/1746 [02:57<00:27,  9.58it/s] 85%|████████▍ | 1481/1746 [02:57<00:27,  9.64it/s] 85%|████████▍ | 1482/1746 [02:57<00:29,  9.08it/s] 85%|████████▍ | 1483/1746 [02:57<00:29,  8.86it/s] 85%|████████▍ | 1484/1746 [02:58<00:29,  9.00it/s] 85%|████████▌ | 1485/1746 [02:58<00:29,  8.94it/s] 85%|████████▌ | 1486/1746 [02:58<00:28,  9.01it/s] 85%|████████▌ | 1488/1746 [02:58<00:26,  9.70it/s] 85%|████████▌ | 1489/1746 [02:58<00:37,  6.77it/s] 85%|████████▌ | 1490/1746 [02:58<00:35,  7.31it/s] 85%|████████▌ | 1491/1746 [02:58<00:32,  7.86it/s] 85%|████████▌ | 1492/1746 [02:59<00:30,  8.21it/s] 86%|████████▌ | 1494/1746 [02:59<00:26,  9.35it/s] 86%|████████▌ | 1496/1746 [02:59<00:25,  9.99it/s] 86%|████████▌ | 1498/1746 [02:59<00:23, 10.40it/s] 86%|████████▌ | 1500/1746 [02:59<00:23, 10.59it/s] 86%|████████▌ | 1502/1746 [02:59<00:22, 10.67it/s] 86%|████████▌ | 1504/1746 [03:00<00:22, 10.71it/s] 86%|████████▋ | 1506/1746 [03:00<00:22, 10.63it/s] 86%|████████▋ | 1508/1746 [03:00<00:22, 10.79it/s] 86%|████████▋ | 1510/1746 [03:00<00:22, 10.33it/s] 87%|████████▋ | 1512/1746 [03:00<00:23, 10.12it/s] 87%|████████▋ | 1514/1746 [03:01<00:22, 10.35it/s] 87%|████████▋ | 1516/1746 [03:01<00:22, 10.33it/s] 87%|████████▋ | 1518/1746 [03:01<00:22, 10.11it/s] 87%|████████▋ | 1520/1746 [03:01<00:23,  9.68it/s] 87%|████████▋ | 1522/1746 [03:01<00:23,  9.48it/s] 87%|████████▋ | 1523/1746 [03:02<00:24,  9.16it/s] 87%|████████▋ | 1525/1746 [03:02<00:23,  9.45it/s] 87%|████████▋ | 1527/1746 [03:02<00:22,  9.92it/s] 88%|████████▊ | 1528/1746 [03:02<00:22,  9.77it/s] 88%|████████▊ | 1529/1746 [03:02<00:23,  9.31it/s] 88%|████████▊ | 1531/1746 [03:02<00:22,  9.67it/s] 88%|████████▊ | 1533/1746 [03:03<00:22,  9.59it/s] 88%|████████▊ | 1535/1746 [03:03<00:21,  9.60it/s] 88%|████████▊ | 1537/1746 [03:03<00:21,  9.94it/s] 88%|████████▊ | 1539/1746 [03:03<00:20, 10.03it/s] 88%|████████▊ | 1540/1746 [03:03<00:21,  9.61it/s] 88%|████████▊ | 1541/1746 [03:03<00:22,  9.21it/s] 88%|████████▊ | 1543/1746 [03:04<00:21,  9.52it/s] 88%|████████▊ | 1545/1746 [03:04<00:23,  8.74it/s] 89%|████████▊ | 1547/1746 [03:04<00:21,  9.13it/s] 89%|████████▊ | 1549/1746 [03:04<00:21,  9.10it/s] 89%|████████▉ | 1550/1746 [03:04<00:21,  9.19it/s] 89%|████████▉ | 1552/1746 [03:05<00:20,  9.37it/s] 89%|████████▉ | 1554/1746 [03:05<00:19,  9.87it/s] 89%|████████▉ | 1556/1746 [03:05<00:18, 10.02it/s] 89%|████████▉ | 1558/1746 [03:05<00:19,  9.89it/s] 89%|████████▉ | 1559/1746 [03:05<00:20,  9.26it/s] 89%|████████▉ | 1561/1746 [03:06<00:19,  9.34it/s] 90%|████████▉ | 1563/1746 [03:06<00:22,  8.12it/s] 90%|████████▉ | 1565/1746 [03:06<00:20,  8.81it/s] 90%|████████▉ | 1566/1746 [03:06<00:20,  8.81it/s] 90%|████████▉ | 1567/1746 [03:06<00:19,  8.99it/s] 90%|████████▉ | 1568/1746 [03:06<00:19,  9.08it/s] 90%|████████▉ | 1570/1746 [03:07<00:19,  9.17it/s] 90%|████████▉ | 1571/1746 [03:07<00:18,  9.29it/s] 90%|█████████ | 1572/1746 [03:07<00:18,  9.30it/s] 90%|█████████ | 1574/1746 [03:07<00:17,  9.76it/s] 90%|█████████ | 1576/1746 [03:07<00:17,  9.89it/s] 90%|█████████ | 1578/1746 [03:07<00:17,  9.70it/s] 90%|█████████ | 1579/1746 [03:08<00:17,  9.57it/s] 91%|█████████ | 1581/1746 [03:08<00:16,  9.92it/s] 91%|█████████ | 1583/1746 [03:08<00:16, 10.03it/s] 91%|█████████ | 1584/1746 [03:08<00:16,  9.83it/s] 91%|█████████ | 1586/1746 [03:08<00:15, 10.15it/s] 91%|█████████ | 1588/1746 [03:08<00:15, 10.15it/s] 91%|█████████ | 1590/1746 [03:09<00:15,  9.92it/s] 91%|█████████ | 1591/1746 [03:09<00:15,  9.71it/s] 91%|█████████ | 1592/1746 [03:09<00:15,  9.72it/s] 91%|█████████ | 1593/1746 [03:09<00:15,  9.75it/s] 91%|█████████▏| 1595/1746 [03:09<00:15,  9.90it/s] 91%|█████████▏| 1597/1746 [03:09<00:15,  9.91it/s] 92%|█████████▏| 1598/1746 [03:09<00:15,  9.78it/s] 92%|█████████▏| 1599/1746 [03:10<00:15,  9.48it/s] 92%|█████████▏| 1600/1746 [03:10<00:17,  8.47it/s] 92%|█████████▏| 1602/1746 [03:10<00:15,  9.27it/s] 92%|█████████▏| 1604/1746 [03:10<00:14,  9.92it/s] 92%|█████████▏| 1606/1746 [03:10<00:13, 10.12it/s] 92%|█████████▏| 1608/1746 [03:10<00:13, 10.10it/s] 92%|█████████▏| 1610/1746 [03:11<00:13, 10.20it/s] 92%|█████████▏| 1612/1746 [03:11<00:13, 10.25it/s] 92%|█████████▏| 1614/1746 [03:11<00:12, 10.28it/s] 93%|█████████▎| 1616/1746 [03:11<00:13,  9.64it/s] 93%|█████████▎| 1618/1746 [03:12<00:13,  9.54it/s] 93%|█████████▎| 1619/1746 [03:12<00:13,  9.53it/s] 93%|█████████▎| 1620/1746 [03:12<00:13,  9.19it/s] 93%|█████████▎| 1621/1746 [03:12<00:13,  9.28it/s] 93%|█████████▎| 1622/1746 [03:12<00:14,  8.79it/s] 93%|█████████▎| 1623/1746 [03:12<00:14,  8.40it/s] 93%|█████████▎| 1625/1746 [03:12<00:13,  9.16it/s] 93%|█████████▎| 1626/1746 [03:12<00:12,  9.27it/s] 93%|█████████▎| 1627/1746 [03:13<00:14,  8.39it/s] 93%|█████████▎| 1629/1746 [03:13<00:12,  9.11it/s] 93%|█████████▎| 1630/1746 [03:13<00:13,  8.59it/s] 93%|█████████▎| 1631/1746 [03:13<00:16,  7.15it/s] 93%|█████████▎| 1632/1746 [03:13<00:17,  6.43it/s] 94%|█████████▎| 1633/1746 [03:13<00:16,  6.93it/s] 94%|█████████▎| 1634/1746 [03:14<00:14,  7.56it/s] 94%|█████████▎| 1635/1746 [03:14<00:15,  7.25it/s] 94%|█████████▍| 1637/1746 [03:14<00:13,  8.36it/s] 94%|█████████▍| 1638/1746 [03:14<00:12,  8.69it/s] 94%|█████████▍| 1639/1746 [03:14<00:12,  8.35it/s] 94%|█████████▍| 1640/1746 [03:14<00:14,  7.35it/s] 94%|█████████▍| 1641/1746 [03:14<00:13,  7.79it/s] 94%|█████████▍| 1642/1746 [03:16<01:08,  1.52it/s] 94%|█████████▍| 1644/1746 [03:17<00:41,  2.47it/s] 94%|█████████▍| 1645/1746 [03:17<00:33,  3.02it/s] 94%|█████████▍| 1646/1746 [03:17<00:27,  3.62it/s] 94%|█████████▍| 1648/1746 [03:17<00:19,  4.99it/s] 94%|█████████▍| 1649/1746 [03:17<00:17,  5.63it/s] 95%|█████████▍| 1651/1746 [03:17<00:13,  6.93it/s] 95%|█████████▍| 1652/1746 [03:17<00:12,  7.42it/s] 95%|█████████▍| 1653/1746 [03:17<00:12,  7.71it/s] 95%|█████████▍| 1654/1746 [03:18<00:11,  7.90it/s] 95%|█████████▍| 1655/1746 [03:18<00:11,  7.90it/s] 95%|█████████▍| 1656/1746 [03:18<00:11,  8.14it/s] 95%|█████████▍| 1657/1746 [03:18<00:10,  8.21it/s] 95%|█████████▍| 1658/1746 [03:18<00:10,  8.09it/s] 95%|█████████▌| 1659/1746 [03:18<00:10,  8.40it/s] 95%|█████████▌| 1660/1746 [03:18<00:09,  8.71it/s] 95%|█████████▌| 1662/1746 [03:19<00:09,  9.13it/s] 95%|█████████▌| 1663/1746 [03:19<00:08,  9.32it/s] 95%|█████████▌| 1664/1746 [03:19<00:08,  9.39it/s] 95%|█████████▌| 1665/1746 [03:19<00:08,  9.43it/s] 95%|█████████▌| 1667/1746 [03:19<00:08,  9.78it/s] 96%|█████████▌| 1668/1746 [03:19<00:08,  9.53it/s] 96%|█████████▌| 1669/1746 [03:20<00:14,  5.39it/s] 96%|█████████▌| 1670/1746 [03:20<00:12,  6.11it/s] 96%|█████████▌| 1671/1746 [03:20<00:11,  6.26it/s] 96%|█████████▌| 1672/1746 [03:20<00:10,  6.92it/s] 96%|█████████▌| 1673/1746 [03:20<00:09,  7.37it/s] 96%|█████████▌| 1674/1746 [03:20<00:09,  7.94it/s] 96%|█████████▌| 1675/1746 [03:20<00:08,  8.41it/s] 96%|█████████▌| 1676/1746 [03:20<00:08,  8.44it/s] 96%|█████████▌| 1677/1746 [03:20<00:07,  8.78it/s] 96%|█████████▌| 1678/1746 [03:21<00:07,  9.05it/s] 96%|█████████▌| 1680/1746 [03:21<00:07,  8.95it/s] 96%|█████████▋| 1681/1746 [03:21<00:07,  9.03it/s] 96%|█████████▋| 1682/1746 [03:21<00:07,  8.57it/s] 96%|█████████▋| 1683/1746 [03:21<00:07,  8.48it/s] 96%|█████████▋| 1684/1746 [03:21<00:07,  8.67it/s] 97%|█████████▋| 1685/1746 [03:21<00:06,  8.76it/s] 97%|█████████▋| 1686/1746 [03:21<00:06,  8.95it/s] 97%|█████████▋| 1688/1746 [03:22<00:07,  8.15it/s] 97%|█████████▋| 1689/1746 [03:22<00:06,  8.48it/s] 97%|█████████▋| 1690/1746 [03:22<00:06,  8.67it/s] 97%|█████████▋| 1691/1746 [03:22<00:06,  8.60it/s] 97%|█████████▋| 1692/1746 [03:22<00:06,  8.11it/s] 97%|█████████▋| 1694/1746 [03:22<00:05,  8.77it/s] 97%|█████████▋| 1696/1746 [03:23<00:05,  8.83it/s] 97%|█████████▋| 1697/1746 [03:23<00:05,  8.67it/s] 97%|█████████▋| 1699/1746 [03:23<00:05,  9.19it/s] 97%|█████████▋| 1701/1746 [03:23<00:04,  9.08it/s] 98%|█████████▊| 1703/1746 [03:23<00:05,  8.52it/s] 98%|█████████▊| 1704/1746 [03:24<00:04,  8.58it/s] 98%|█████████▊| 1705/1746 [03:24<00:04,  8.63it/s] 98%|█████████▊| 1706/1746 [03:24<00:04,  8.55it/s] 98%|█████████▊| 1707/1746 [03:24<00:04,  8.39it/s] 98%|█████████▊| 1708/1746 [03:24<00:04,  8.70it/s] 98%|█████████▊| 1709/1746 [03:24<00:04,  8.81it/s] 98%|█████████▊| 1710/1746 [03:24<00:04,  8.11it/s] 98%|█████████▊| 1711/1746 [03:24<00:04,  8.27it/s] 98%|█████████▊| 1713/1746 [03:25<00:03,  9.00it/s] 98%|█████████▊| 1714/1746 [03:25<00:03,  9.08it/s] 98%|█████████▊| 1715/1746 [03:25<00:03,  8.96it/s] 98%|█████████▊| 1717/1746 [03:25<00:02,  9.77it/s] 98%|█████████▊| 1718/1746 [03:25<00:02,  9.56it/s] 98%|█████████▊| 1719/1746 [03:25<00:02,  9.66it/s] 99%|█████████▊| 1720/1746 [03:25<00:02,  9.68it/s] 99%|█████████▊| 1721/1746 [03:25<00:02,  8.91it/s] 99%|█████████▊| 1722/1746 [03:26<00:02,  9.16it/s] 99%|█████████▊| 1723/1746 [03:26<00:02,  9.32it/s] 99%|█████████▉| 1725/1746 [03:26<00:02,  9.58it/s] 99%|█████████▉| 1726/1746 [03:26<00:02,  9.42it/s] 99%|█████████▉| 1727/1746 [03:26<00:02,  8.93it/s] 99%|█████████▉| 1728/1746 [03:26<00:02,  7.63it/s] 99%|█████████▉| 1729/1746 [03:26<00:02,  8.12it/s] 99%|█████████▉| 1730/1746 [03:26<00:01,  8.42it/s] 99%|█████████▉| 1731/1746 [03:27<00:01,  8.72it/s] 99%|█████████▉| 1733/1746 [03:27<00:01,  9.16it/s] 99%|█████████▉| 1735/1746 [03:27<00:01,  9.75it/s] 99%|█████████▉| 1737/1746 [03:27<00:00, 10.09it/s]100%|█████████▉| 1739/1746 [03:27<00:00,  9.57it/s]100%|█████████▉| 1740/1746 [03:27<00:00,  9.63it/s]100%|█████████▉| 1741/1746 [03:28<00:00,  9.62it/s]100%|█████████▉| 1742/1746 [03:28<00:00,  9.70it/s]100%|█████████▉| 1743/1746 [03:28<00:00,  9.49it/s]100%|█████████▉| 1745/1746 [03:28<00:00,  9.75it/s]100%|██████████| 1746/1746 [03:28<00:00,  8.37it/s]
avgFirstErrPos: 90.88257830206446
numErrMetric: 0.20504009163802978
numErrMetric_inErroneousCodes 1.4039215686274509
sorted_numError_list

./AVATAR_data/third_party
  0%|          | 0/1746 [00:00<?, ?it/s]

-------------------------------------


---> lineNum: 1
---> probID: aizu_p00855_A
---> inputs:
10
11
27
2
492170
0
---> outputs:
4
0
6
0
114

import sys
class PrimeNumberGenerator :
    def __init__ ( self ) :
        self . N = 2000000
        self . isPrime = [ True ] * ( self . N + 1 )
        self . isPrime [ 0 ] = False
        self . isPrime [ 1 ] = False
        limit = int ( self . N ** 0.5 )
        for i in range ( 2 , limit + 1 ) :
            if not self . isPrime [ i ] :
                continue
            for j in range ( i * 2 , self . N + 1 , i ) :
                self . isPrime [ j ] = False
    def is_prime ( self , index ) :
        return self . isPrime [ index ]
def main ( ) :
    pg = PrimeNumberGenerator ( )
    while True :
        n = int ( sys . stdin . readline ( ) )
        if n == 0 :
            break
        if pg . is_prime ( n ) :
            print ( 0 )
            continue
        begin = - 1
        end = - 1
        for i in range ( n - 1 , - 1 , - 1 ) :
            if pg . is_prime ( i ) :
                begin = i
                break
        for i in range ( n + 1 , 2000000 ) :
            if pg . is_prime ( i ) :
                end = i
                break
        print ( end - begin )
if __name__ == '__main__' :
    main ( )


---> console_out:
4
0
6
0
114
 
MATCHED!! :D
  0%|          | 1/1746 [00:00<19:15,  1.51it/s]

-------------------------------------


---> lineNum: 2
---> probID: geeksforgeeks_2849_A
---> inputs:

---> outputs:
aalmymlaa 


MAX_CHAR = 26
def countFreq ( str , freq , length ) :
    for i in range ( length ) :
        freq [ ord ( str [ i ] ) - ord ( 'a' ) ] += 1
def canMakePalindrome ( freq , length ) :
    count_odd = 0
    for i in range ( MAX_CHAR ) :
        if freq [ i ] % 2 != 0 :
            count_odd += 1
    if length % 2 == 0 :
        if count_odd > 0 :
            return False
        else :
            return True
    if count_odd != 1 :
        return False
    return True
def findOddAndRemoveItsFreq ( freq ) :
    odd_str = ""
    for i in range ( MAX_CHAR ) :
        if freq [ i ] % 2 != 0 :
            freq [ i ] -= 1
            odd_str += chr ( i + ord ( 'a' ) )
            return odd_str
    return odd_str
def findPalindromicString ( str ) :
    length = len ( str )
    freq = [ 0 ] * MAX_CHAR
    countFreq ( str , freq , length )
    if not canMakePalindrome ( freq , length ) :
        return "No Palindromic String"
    odd_str = findOddAndRemoveItsFreq ( freq )
    front_str , rear_str = "" , ""
    for i in range ( MAX_CHAR ) :
        temp = ""
        if freq [ i ] != 0 :
            ch = chr ( i + ord ( 'a' ) )
            for j in range ( 1 , freq [ i ] // 2 + 1 ) :
                temp += ch
            front_str += temp
            rear_str = temp + rear_str
    return front_str + odd_str + rear_str
str = "malayalam"
print ( findPalindromicString ( str ) )


---> console_out:
aalmymlaa
 
MATCHED!! :D
  File "./junk/1703783685881_8091/main.py", line 5
    in_ = Scanner ( System . in )
                             ^
SyntaxError: invalid syntax
out1,out2  101400


-------------------------------------


---> lineNum: 3
---> probID: aizu_p02296_A
---> inputs:
3
0 0 1 0 0 1 1 1
0 0 1 0 2 1 1 2
-1 0 1 0 0 1 0 -1
---> outputs:
1.0000000000
1.4142135624
0.0000000000

from java . awt . geom import Line2D
import java . util . Scanner
class Main :
    def __init__ ( self ) :
        in_ = Scanner ( System . in )
        q = in_ . nextInt ( )
        for i in range ( q ) :
            CGL_2B ( ) . doIt ( )
class CGL_2B :
    def segSegDist ( self , l1 , l2 ) :
        if l1 . intersectsLine ( l2 ) :
            return 0
        else :
            return min ( min ( l1 . ptSegDist ( l2 . getP1 ( ) ) , l1 . ptSegDist ( l2 . getP2 ( ) ) ) , min ( l2 . ptSegDist ( l1 . getP1 ( ) ) , l2 . ptSegDist ( l1 . getP2 ( ) ) ) )
    def doIt ( self ) :
        in_ = Scanner ( System . in )
        l1 = Line2D . Double ( in_ . nextDouble ( ) , in_ . nextDouble ( ) , in_ . nextDouble ( ) , in_ . nextDouble ( ) )
        l2 = Line2D . Double ( in_ . nextDouble ( ) , in_ . nextDouble ( ) , in_ . nextDouble ( ) , in_ . nextDouble ( ) )
        print ( "%.10f" % self . segSegDist ( l1 , l2 ) )


---> console_out:
 
DIDN'T MATCH!! :(
  0%|          | 3/1746 [00:00<06:29,  4.47it/s]

-------------------------------------


---> lineNum: 4
---> probID: geeksforgeeks_528_A
---> inputs:

---> outputs:
8
5
3


def count9s ( number ) :
    n = len ( number )
    d = [ 0 ] * 9
    d [ 0 ] = 1
    result = 0
    mod_sum = 0
    continuous_zero = 0
    for i in range ( n ) :
        if int ( number [ i ] ) == 0 :
            continuous_zero += 1
        else :
            continuous_zero = 0
        mod_sum += int ( number [ i ] )
        mod_sum %= 9
        result += d [ mod_sum ]
        d [ mod_sum ] += 1
        result -= continuous_zero
    return result
print ( count9s ( "01809" ) )
print ( count9s ( "1809" ) )
print ( count9s ( "4189" ) )


---> console_out:
8
5
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 5
---> probID: geeksforgeeks_3249_A
---> inputs:

---> outputs:
12


import math
def fastPow ( N , K ) :
    if K == 0 :
        return 1
    temp = fastPow ( N , K // 2 )
    if K % 2 == 0 :
        return temp * temp
    else :
        return N * temp * temp
def countWays ( N , K ) :
    return K * fastPow ( K - 1 , N - 1 )
if __name__ == '__main__' :
    N = 3
    K = 3
    print ( countWays ( N , K ) )


---> console_out:
12
 
MATCHED!! :D
  0%|          | 5/1746 [00:00<04:16,  6.80it/s]

-------------------------------------


---> lineNum: 6
---> probID: aizu_p00228_A
---> inputs:
3
0
5
1
1
0
-1
---> outputs:
0111111
1010010
1101011
0111111

import sys
s = [ [ 0 , 1 , 1 , 1 , 1 , 1 , 1 ] , [ 0 , 0 , 0 , 0 , 1 , 1 , 0 ] , [ 1 , 0 , 1 , 1 , 0 , 1 , 1 ] , [ 1 , 0 , 0 , 1 , 1 , 1 , 1 ] , [ 1 , 1 , 0 , 0 , 1 , 1 , 0 ] , [ 1 , 1 , 0 , 1 , 1 , 0 , 1 ] , [ 1 , 1 , 1 , 1 , 1 , 0 , 1 ] , [ 0 , 1 , 0 , 0 , 1 , 1 , 1 ] , [ 1 , 1 , 1 , 1 , 1 , 1 , 1 ] , [ 1 , 1 , 0 , 1 , 1 , 1 , 1 ] ]
while True :
    n = int ( input ( ) )
    a = [ 0 ] * 7
    if n == - 1 :
        break
    for i in range ( n ) :
        m = int ( input ( ) )
        for j in range ( 7 ) :
            sys . stdout . write ( str ( a [ j ] ^ s [ m ] [ j ] ) + ( "\n" if j == 6 else "" ) )
        a = s [ m ] . copy ( )


---> console_out:
0111111
1010010
1101011
0111111
 
MATCHED!! :D


-------------------------------------


---> lineNum: 7
---> probID: geeksforgeeks_1326_A
---> inputs:

---> outputs:
YES
NO


import math
MAX = 10000
arr = [ ]
def SieveOfEratosthenes ( ) :
    prime = [ True ] * MAX
    for p in range ( 2 , int ( math . sqrt ( MAX ) ) + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , MAX , p ) :
                prime [ i ] = False
    for p in range ( 2 , MAX ) :
        if prime [ p ] :
            arr . append ( p )
def isEuclid ( n ) :
    product = 1
    i = 0
    while product < n :
        product *= arr [ i ]
        if product + 1 == n :
            return True
        i += 1
    return False
SieveOfEratosthenes ( )
n = 31
if isEuclid ( n ) :
    print ( "YES" )
else :
    print ( "NO" )
n = 42
if isEuclid ( n ) :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
YES
NO
 
MATCHED!! :D
  0%|          | 7/1746 [00:01<03:26,  8.43it/s]

-------------------------------------


---> lineNum: 8
---> probID: geeksforgeeks_1321_A
---> inputs:

---> outputs:
YES


import math
MAX = 1000000
arr = [ ]
prime = [ True ] * MAX
def SieveOfEratosthenes ( ) :
    for i in range ( MAX ) :
        prime [ i ] = True
    p = 2
    while p * p < MAX :
        if prime [ p ] == True :
            for i in range ( p * 2 , MAX , p ) :
                prime [ i ] = False
        p += 1
    for p in range ( 2 , MAX ) :
        if prime [ p ] :
            arr . append ( p )
def isPrimorialPrime ( n ) :
    if not prime [ n ] :
        return False
    product = 1
    i = 0
    while product < n :
        product *= arr [ i ]
        if product + 1 == n or product - 1 == n :
            return True
        i += 1
    return False
SieveOfEratosthenes ( )
n = 31
if isPrimorialPrime ( n ) :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 9
---> probID: geeksforgeeks_2880_A
---> inputs:

---> outputs:
8 * 1 = 8
8 * 2 = 16
8 * 3 = 24
8 * 4 = 32
8 * 5 = 40
8 * 6 = 48
8 * 7 = 56
8 * 8 = 64
8 * 9 = 72
8 * 10 = 80


def mul_table ( N , i ) :
    if i > 10 :
        return
    print ( N , "*" , i , "=" , N * i )
    mul_table ( N , i + 1 )
if __name__ == "__main__" :
    N = 8
    mul_table ( N , 1 )


---> console_out:
8 * 1 = 8
8 * 2 = 16
8 * 3 = 24
8 * 4 = 32
8 * 5 = 40
8 * 6 = 48
8 * 7 = 56
8 * 8 = 64
8 * 9 = 72
8 * 10 = 80
 
MATCHED!! :D
  1%|          | 9/1746 [00:01<05:11,  5.57it/s]

-------------------------------------


---> lineNum: 10
---> probID: geeksforgeeks_2069_A
---> inputs:

---> outputs:
12
-18
0
21


def closestNumber ( n , m ) :
    q = n // m
    n1 = m * q
    n2 = ( m * ( q + 1 ) ) if ( n * m ) > 0 else ( m * ( q - 1 ) )
    if abs ( n - n1 ) < abs ( n - n2 ) :
        return n1
    return n2
n , m = 13 , 4
print ( closestNumber ( n , m ) )
n , m = - 15 , 6
print ( closestNumber ( n , m ) )
n , m = 0 , 8
print ( closestNumber ( n , m ) )
n , m = 18 , - 7
print ( closestNumber ( n , m ) )


---> console_out:
12
-18
0
21
 
MATCHED!! :D


-------------------------------------


---> lineNum: 11
---> probID: geeksforgeeks_833_A
---> inputs:

---> outputs:
4


def solve ( ang , n ) :
    if ( ang * n ) > ( 180 * ( n - 2 ) ) :
        return 0
    elif ( ang * n ) % 180 != 0 :
        return 0
    ans = 1
    freq = ( ang * n ) // 180
    ans = ans * ( n - 1 - freq )
    ans = ans * n
    return ans
if __name__ == '__main__' :
    ang , n = 90 , 4
    print ( solve ( ang , n ) )


---> console_out:
4
 
MATCHED!! :D
  1%|          | 11/1746 [00:01<04:08,  6.99it/s]Traceback (most recent call last):
  File "./junk/1703783686972_1504/main.py", line 34, in <module>
    Longestsubstring ( s )
  File "./junk/1703783686972_1504/main.py", line 20, in Longestsubstring
    lps = compute_lps ( s )
  File "./junk/1703783686972_1504/main.py", line 2, in compute_lps
    n = len ( s )
UnboundLocalError: local variable 'len' referenced before assignment
out1,out2  fix


-------------------------------------


---> lineNum: 12
---> probID: geeksforgeeks_2722_A
---> inputs:

---> outputs:
fix


def compute_lps ( s ) :
    n = len ( s )
    lps = [ 0 ] * n
    len = 0
    lps [ 0 ] = 0
    i = 1
    while i < n :
        if s [ i ] == s [ len ] :
            len += 1
            lps [ i ] = len
            i += 1
        else :
            if len != 0 :
                len = lps [ len - 1 ]
            else :
                lps [ i ] = 0
                i += 1
    return lps
def Longestsubstring ( s ) :
    lps = compute_lps ( s )
    n = len ( s )
    if lps [ n - 1 ] == 0 :
        print ( - 1 )
        return
    for i in range ( n - 1 ) :
        if lps [ i ] == lps [ n - 1 ] :
            print ( s [ : lps [ i ] ] )
            return
    if lps [ lps [ n - 1 ] - 1 ] == 0 :
        print ( - 1 )
    else :
        print ( s [ : lps [ lps [ n - 1 ] - 1 ] ] )
s = "fixprefixsuffix"
Longestsubstring ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 13
---> probID: geeksforgeeks_1532_A
---> inputs:

---> outputs:
YES


import sys
def checkIfSortRotated ( arr , n ) :
    minEle = sys . maxsize
    maxEle = - sys . maxsize - 1
    minIndex = - 1
    for i in range ( n ) :
        if arr [ i ] < minEle :
            minEle = arr [ i ]
            minIndex = i
    flag1 = True
    for i in range ( 1 , minIndex ) :
        if arr [ i ] < arr [ i - 1 ] :
            flag1 = False
            break
    flag2 = True
    for i in range ( minIndex + 1 , n ) :
        if arr [ i ] < arr [ i - 1 ] :
            flag2 = False
            break
    if minIndex == 0 :
        print ( "NO" )
        return
    if flag1 and flag2 and ( arr [ n - 1 ] < arr [ minIndex - 1 ] ) :
        print ( "YES" )
    else :
        print ( "NO" )
arr = [ 3 , 4 , 5 , 1 , 2 ]
n = len ( arr )
checkIfSortRotated ( arr , n )


---> console_out:
YES
 
MATCHED!! :D
  1%|          | 13/1746 [00:01<03:23,  8.50it/s]

-------------------------------------


---> lineNum: 14
---> probID: codeforces_11_A
---> inputs:
4 2
1 3 3 2
---> outputs:
3

import sys
class IS :
    def main ( self ) :
        self . runapp ( )
    def runapp ( self ) :
        n , d = map ( int , input ( ) . split ( ) )
        sequence = list ( map ( int , input ( ) . split ( ) ) )
        step = 0
        for y in range ( n - 1 ) :
            while sequence [ y + 1 ] <= sequence [ y ] :
                diff = sequence [ y + 1 ] - sequence [ y ]
                if sequence [ y + 1 ] == sequence [ y ] :
                    sequence [ y + 1 ] += d
                    step += 1
                else :
                    diff = - diff
                    store = ( diff // d ) + 1
                    step += store
                    sequence [ y + 1 ] += ( d * store )
        print ( step )
if __name__ == '__main__' :
    IS ( ) . main ( )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 15
---> probID: geeksforgeeks_891_A
---> inputs:

---> outputs:
Power-isolated Integer
Not a Power-isolated Integer
Power-isolated Integer


def checkIfPowerIsolated ( num ) :
    input = num
    count = 0
    factor = [ 0 ] * ( num + 1 )
    if num % 2 == 0 :
        while num % 2 == 0 :
            count += 1
            num //= 2
        factor [ 2 ] = count
    for i in range ( 3 , int ( num ** 0.5 ) + 1 , 2 ) :
        count = 0
        while num % i == 0 :
            count += 1
            num //= i
        if count > 0 :
            factor [ i ] = count
    if num > 1 :
        factor [ num ] = 1
    product = 1
    for i in range ( num + 1 ) :
        if factor [ i ] > 0 :
            product = product * factor [ i ] * i
    if product == input :
        print ( "Power-isolated Integer" )
    else :
        print ( "Not a Power-isolated Integer" )
checkIfPowerIsolated ( 12 )
checkIfPowerIsolated ( 18 )
checkIfPowerIsolated ( 35 )


---> console_out:
Power-isolated Integer
Not a Power-isolated Integer
Power-isolated Integer
 
MATCHED!! :D
  1%|          | 15/1746 [00:02<03:00,  9.58it/s]Traceback (most recent call last):
  File "./junk/1703783687259_3170/main.py", line 4, in <module>
    for i in range ( len ( s ) ) :
TypeError: 'int' object is not callable
out1,out2  az


-------------------------------------


---> lineNum: 16
---> probID: aizu_p01772_A
---> inputs:
AIZUNYANPEROPERO
---> outputs:
AZ

import sys
s = input ( )
len = 0
for i in range ( len ( s ) ) :
    if len % 2 == 0 and s [ i ] == 'A' or len % 2 == 1 and s [ i ] == 'Z' :
        len += 1
len //= 2
if len == 0 :
    print ( - 1 )
else :
    sb = ""
    for i in range ( len ) :
        sb += "AZ"
    print ( sb )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 17
---> probID: codeforces_1625_B
---> inputs:
4
7
3 1 5 2 1 3 4
6
1 1 1 1 1 1
6
1 4 2 8 5 7
2
15 15
---> outputs:
4
5
-1
1

import sys
class Diff :
    def __init__ ( self ) :
        self . prev = 0
def solve ( arr ) :
    max_val = - 1
    map = { }
    for i in range ( len ( arr ) ) :
        if arr [ i ] in map :
            diff = map [ arr [ i ] ]
            prev = diff . prev
            count = prev + len ( arr ) - i
            if count > max_val :
                max_val = count
            diff . prev = i
        else :
            diff = Diff ( )
            diff . prev = i
            map [ arr [ i ] ] = diff
    print ( max_val )
if __name__ == '__main__' :
    t = int ( sys . stdin . readline ( ) )
    for _ in range ( t ) :
        n = int ( sys . stdin . readline ( ) )
        arr = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
        solve ( arr )


---> console_out:
4
5
-1
1
 
MATCHED!! :D
  1%|          | 17/1746 [00:02<02:49, 10.23it/s]

-------------------------------------


---> lineNum: 18
---> probID: geeksforgeeks_3058_A
---> inputs:

---> outputs:
2118187521397235888154583183918321221520083884298838480662480


def multiply ( num1 , num2 ) :
    len1 = len ( num1 )
    len2 = len ( num2 )
    if len1 == 0 or len2 == 0 :
        return "0"
    result = [ 0 ] * ( len1 + len2 )
    i_n1 = 0
    i_n2 = 0
    for i in range ( len1 - 1 , - 1 , - 1 ) :
        carry = 0
        n1 = int ( num1 [ i ] )
        i_n2 = 0
        for j in range ( len2 - 1 , - 1 , - 1 ) :
            n2 = int ( num2 [ j ] )
            sum = n1 * n2 + result [ i_n1 + i_n2 ] + carry
            carry = sum // 10
            result [ i_n1 + i_n2 ] = sum % 10
            i_n2 += 1
        if carry > 0 :
            result [ i_n1 + i_n2 ] += carry
        i_n1 += 1
    i = len ( result ) - 1
    while i >= 0 and result [ i ] == 0 :
        i -= 1
    if i == - 1 :
        return "0"
    s = ""
    while i >= 0 :
        s += str ( result [ i ] )
        i -= 1
    return s
str1 = "1235421415454545454545454544"
str2 = "1714546546546545454544548544544545"
if ( str1 [ 0 ] == '-' or str2 [ 0 ] == '-' ) and ( str1 [ 0 ] != '-' or str2 [ 0 ] != '-' ) :
    print ( "-" )
if str1 [ 0 ] == '-' and str2 [ 0 ] != '-' :
    str1 = str1 [ 1 : ]
elif str1 [ 0 ] != '-' and str2 [ 0 ] == '-' :
    str2 = str2 [ 1 : ]
elif str1 [ 0 ] == '-' and str2 [ 0 ] == '-' :
    str1 = str1 [ 1 : ]
    str2 = str2 [ 1 : ]
print ( multiply ( str1 , str2 ) )


---> console_out:
2118187521397235888154583183918321221520083884298838480662480
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783687495_2368/main.py", line 6, in <module>
    sum1 = sum ( arr1 )
TypeError: 'int' object is not callable
out1,out2  yes


-------------------------------------


---> lineNum: 19
---> probID: codeforces_1013_A
---> inputs:
5
1 2 3 4 5
2 1 4 3 5
---> outputs:
Yes

import sys
n = int ( input ( ) )
arr = list ( map ( int , input ( ) . split ( ) ) )
sum = sum ( arr )
arr1 = list ( map ( int , input ( ) . split ( ) ) )
sum1 = sum ( arr1 )
if sum >= sum1 :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(
  1%|          | 19/1746 [00:02<02:32, 11.29it/s]Traceback (most recent call last):
  File "./junk/1703783687562_8244/main.py", line 2, in <module>
    n , k , a = map ( str , sys . stdin . readline ( ) . split ( ) )
ValueError: not enough values to unpack (expected 3, got 2)
out1,out2  print10leftprintr


-------------------------------------


---> lineNum: 20
---> probID: codeforces_412_A
---> inputs:
2 2
R1
---> outputs:
PRINT 1
LEFT
PRINT R

import sys
n , k , a = map ( str , sys . stdin . readline ( ) . split ( ) )
n = int ( n )
k = int ( k )
if k > n // 2 :
    while k < n :
        print ( "RIGHT" )
        k += 1
else :
    while k > 1 :
        print ( "LEFT" )
        k -= 1
if k == 1 :
    for i in range ( len ( a ) ) :
        print ( "PRINT" , a [ i ] )
        if i + 1 < len ( a ) :
            print ( "RIGHT" )
else :
    for i in range ( len ( a ) - 1 , - 1 , - 1 ) :
        print ( "PRINT" , a [ i ] )
        if i - 1 >= 0 :
            print ( "LEFT" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 21
---> probID: geeksforgeeks_734_A
---> inputs:

---> outputs:
0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 20 

import numpy as np
def printDistSum ( arr , n ) :
    sum = np . sum ( arr )
    dp = np . zeros ( ( n + 1 , sum + 1 ) , dtype = bool )
    for i in range ( n + 1 ) :
        dp [ i ] [ 0 ] = True
    for i in range ( 1 , n + 1 ) :
        dp [ i ] [ arr [ i - 1 ] ] = True
        for j in range ( 1 , sum + 1 ) :
            if dp [ i - 1 ] [ j ] :
                dp [ i ] [ j ] = True
                dp [ i ] [ j + arr [ i - 1 ] ] = True
    for j in range ( sum + 1 ) :
        if dp [ n ] [ j ] :
            print ( j , end = " " )
arr = [ 2 , 3 , 4 , 5 , 6 ]
n = len ( arr )
printDistSum ( arr , n )


---> console_out:
0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 20  
MATCHED!! :D
  1%|          | 21/1746 [00:02<03:43,  7.71it/s]

-------------------------------------


---> lineNum: 22
---> probID: geeksforgeeks_2591_A
---> inputs:

---> outputs:
-1
2


def subtract ( a , b ) :
    c = a + ( ~ b + 1 )
    return c
a , b = 2 , 3
print ( subtract ( a , b ) )
a , b = 9 , 7
print ( subtract ( a , b ) )


---> console_out:
-1
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 23
---> probID: codeforces_622_A
---> inputs:
3
---> outputs:
2

import sys
import math
n1 = int ( sys . stdin . readline ( ) )
n = int ( ( math . sqrt ( 1 + ( 8 * n1 ) ) - 1 ) / 2 )
ans = n1 - ( ( ( n + 1 ) * n ) // 2 )
print ( ans if ans != 0 else n )


---> console_out:
2
 
MATCHED!! :D
  1%|▏         | 23/1746 [00:02<03:10,  9.07it/s]

-------------------------------------


---> lineNum: 24
---> probID: codeforces_939_A
---> inputs:
5
2 4 5 1 3
---> outputs:
YES

import sys
n = int ( input ( ) )
arr = list ( map ( int , input ( ) . split ( ) ) )
for i in range ( n ) :
    arr [ i ] -= 1
lt = False
for i in range ( n ) :
    if i == arr [ arr [ arr [ i ] ] ] :
        lt = True
        break
if lt :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 25
---> probID: geeksforgeeks_2843_A
---> inputs:

---> outputs:
abcdhforgieks


def nextZero ( i , occurrences ) :
    while i < len ( occurrences ) :
        if occurrences [ i ] == 0 :
            return i
        i += 1
    return - 1
def getModifiedString ( str ) :
    n = len ( str )
    if n > 26 :
        return "-1"
    ch = list ( str )
    occurrences = [ 0 ] * 26
    for i in range ( n ) :
        occurrences [ ord ( ch [ i ] ) - ord ( 'a' ) ] += 1
    index = nextZero ( 0 , occurrences )
    for i in range ( n ) :
        if occurrences [ ord ( ch [ i ] ) - ord ( 'a' ) ] > 1 :
            occurrences [ ord ( ch [ i ] ) - ord ( 'a' ) ] -= 1
            ch [ i ] = chr ( ord ( 'a' ) + index )
            occurrences [ index ] = 1
            index = nextZero ( index + 1 , occurrences )
    return '' . join ( ch )
if __name__ == '__main__' :
    arr = [ ]
    str = "geeksforgeeks"
    print ( getModifiedString ( str ) )


---> console_out:
abcdhforgieks
 
MATCHED!! :D
  1%|▏         | 25/1746 [00:03<02:47, 10.26it/s]Traceback (most recent call last):
  File "./junk/1703783688275_4028/main.py", line 31, in <module>
    main ( )
  File "./junk/1703783688275_4028/main.py", line 6, in main
    hr = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '24 60'
out1,out2  120210000052028000000000


-------------------------------------


---> lineNum: 26
---> probID: codeforces_1493_B
---> inputs:
5
24 60
12:21
24 60
23:59
90 80
52:26
1 100
00:01
10 10
04:04
---> outputs:
12:21
00:00
52:28
00:00
00:00

import re
FLIP = [ 0 , 1 , 5 , - 1 , - 1 , 2 , - 1 , - 1 , 8 , - 1 ]
def main ( ) :
    nC = int ( input ( ) )
    for loop in range ( nC ) :
        hr = int ( input ( ) )
        min = int ( input ( ) )
        sHr , sMin = map ( int , re . findall ( r'\d+' , input ( ) ) )
        res = None
        for i in range ( sHr * min + sMin , hr * min ) :
            res = flip ( i , hr , min )
            if res is not None :
                break
        if res is None :
            res = [ 0 , 0 , 0 , 0 ]
        print ( "{}{}:{}{}" . format ( res [ 0 ] , res [ 1 ] , res [ 2 ] , res [ 3 ] ) )
def flip ( val , hr , min ) :
    thisHr = val // min
    thisMin = val % min
    disp = [ thisMin % 10 , thisMin // 10 , thisHr % 10 , thisHr // 10 ]
    for i in range ( len ( disp ) ) :
        if FLIP [ disp [ i ] ] == - 1 :
            return None
        disp [ i ] = FLIP [ disp [ i ] ]
    newHr = 10 * disp [ 0 ] + disp [ 1 ]
    newMin = 10 * disp [ 2 ] + disp [ 3 ]
    if newHr >= hr or newMin >= min :
        return None
    return [ thisHr // 10 , thisHr % 10 , thisMin // 10 , thisMin % 10 ]
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703783688377_9105/main.py", line 39, in <module>
    main ( )
  File "./junk/1703783688377_9105/main.py", line 27, in main
    a = sc . readArray ( n )
  File "./junk/1703783688377_9105/main.py", line 21, in readArray
    return [ self . nextInt ( ) for _ in range ( n ) ]
  File "./junk/1703783688377_9105/main.py", line 21, in <listcomp>
    return [ self . nextInt ( ) for _ in range ( n ) ]
  File "./junk/1703783688377_9105/main.py", line 17, in nextInt
    return int ( self . next ( ) )
ValueError: invalid literal for int() with base 10: ' '
out1,out2  20


-------------------------------------


---> lineNum: 27
---> probID: codeforces_388_A
---> inputs:
3
0 0 10
---> outputs:
2

import sys
import math
from collections import defaultdict
class FastReader :
    def __init__ ( self ) :
        self . st = ""
        self . br = sys . stdin
    def next ( self ) :
        while not self . st :
            try :
                self . st = self . br . readline ( ) . strip ( )
            except :
                pass
        res , self . st = self . st [ 0 ] , self . st [ 1 : ]
        return res
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def readArray ( self , n ) :
        return [ self . nextInt ( ) for _ in range ( n ) ]
def main ( ) :
    global sc
    sc = FastReader ( )
    n = sc . nextInt ( )
    nax = 105
    a = sc . readArray ( n )
    cnts = [ 0 ] * nax
    for e in a :
        cnts [ e + 1 ] += 1
    ans = 0
    pre = [ 0 ] * nax
    for i in range ( 1 , nax ) :
        pre [ i ] = pre [ i - 1 ] + cnts [ i ]
        val = ( pre [ i ] + i - 1 ) // i
        ans = max ( ans , val )
    print ( ans )
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
  2%|▏         | 27/1746 [00:03<02:41, 10.68it/s]

-------------------------------------


---> lineNum: 28
---> probID: codeforces_1688_A
---> inputs:
7
1
2
5
9
16
114514
1000000
---> outputs:
3
3
1
1
17
2
64

import sys
t = int ( input ( ) )
for i in range ( t ) :
    n = int ( input ( ) )
    sb = ""
    if n == 1 :
        print ( 3 )
    else :
        while n > 0 :
            ans = n & 1
            n = n >> 1
            if ans == 1 :
                sb = "1" + sb
                break
            else :
                sb = "0" + sb
        if n == 0 :
            sb = sb [ : - 1 ] + "1"
        val = int ( sb , 2 )
        print ( val )


---> console_out:
3
3
1
1
17
2
64
 
MATCHED!! :D


-------------------------------------


---> lineNum: 29
---> probID: aizu_p01998_A
---> inputs:
3
---> outputs:
2

import sys
n = int ( input ( ) )
arr = [ False ] * ( n + 3 )
arr [ 0 ] = True
arr [ 1 ] = True
count = 0
for i in range ( 2 , len ( arr ) ) :
    if not arr [ i ] :
        for j in range ( 2 , len ( arr ) ) :
            if j * i >= len ( arr ) :
                break
            arr [ i * j ] = True
        if not arr [ i ] and not arr [ i - 2 ] :
            count += 1
print ( count * 2 )


---> console_out:
2
 
MATCHED!! :D
  2%|▏         | 29/1746 [00:03<02:27, 11.68it/s]

-------------------------------------


---> lineNum: 30
---> probID: codeforces_474_B
---> inputs:
5
2 7 3 4 9
3
1 25 11
---> outputs:
1
5
3

import sys
class League :
    def solve ( self , in_data ) :
        n = int ( in_data [ 0 ] )
        num = 0
        a = [ 0 ] * 1000001
        start = 0
        i = 1
        while i <= n :
            num += int ( in_data [ i ] )
            j = start
            while j < num :
                a [ j ] = i
                j += 1
            start = num
            i += 1
        m = int ( in_data [ n + 1 ] )
        i = n + 2
        result = [ ]
        for _ in range ( m ) :
            result . append ( str ( a [ int ( in_data [ i ] ) - 1 ] ) )
            i += 1
        return "\n" . join ( result )
    def run ( self ) :
        in_data = sys . stdin . read ( ) . split ( )
        result = self . solve ( in_data )
        sys . stdout . write ( result )
if __name__ == '__main__' :
    League ( ) . run ( )


---> console_out:
1
5
3 
MATCHED!! :D


-------------------------------------


---> lineNum: 31
---> probID: codeforces_1558_B
---> inputs:
3 998244353
---> outputs:
5

import sys
n , m = map ( int , input ( ) . split ( ) )
dp = [ 0 ] * ( n + 1 )
pre = [ 0 ] * ( n + 1 )
prevSum = dp [ 1 ] = 1
for i in range ( 1 , n + 1 ) :
    if i != 1 :
        pre [ i ] = ( pre [ i - 1 ] + pre [ i ] ) % m
        dp [ i ] = ( prevSum + pre [ i ] ) % m
        prevSum = ( prevSum + dp [ i ] ) % m
    for p , j in enumerate ( range ( 2 * i , n + 1 , i ) , start = 2 ) :
        r = j + p
        pre [ j ] = ( pre [ j ] + dp [ i ] ) % m
        if r <= n :
            pre [ r ] = ( ( pre [ r ] - dp [ i ] ) % m + m ) % m
print ( dp [ n ] )


---> console_out:
5
 
MATCHED!! :D
  2%|▏         | 31/1746 [00:03<02:19, 12.30it/s]

-------------------------------------


---> lineNum: 32
---> probID: geeksforgeeks_660_A
---> inputs:

---> outputs:
78 90 90 90 89


from collections import deque
def printMax ( arr , n , k ) :
    Qi = deque ( )
    for i in range ( k ) :
        while Qi and arr [ i ] >= arr [ Qi [ - 1 ] ] :
            Qi . pop ( )
        Qi . append ( i )
    for i in range ( k , n ) :
        print ( arr [ Qi [ 0 ] ] , end = " " )
        while Qi and Qi [ 0 ] <= i - k :
            Qi . popleft ( )
        while Qi and arr [ i ] >= arr [ Qi [ - 1 ] ] :
            Qi . pop ( )
        Qi . append ( i )
    print ( arr [ Qi [ 0 ] ] )
arr = [ 12 , 1 , 78 , 90 , 57 , 89 , 56 ]
k = 3
printMax ( arr , len ( arr ) , k )


---> console_out:
78 90 90 90 89
 
MATCHED!! :D


-------------------------------------


---> lineNum: 33
---> probID: geeksforgeeks_1175_A
---> inputs:

---> outputs:
18
240


import math
def russianPeasant ( a , b ) :
    res = 0
    while b > 0 :
        if b & 1 != 0 :
            res = res + a
        a = a << 1
        b = b >> 1
    return res
print ( russianPeasant ( 18 , 1 ) )
print ( russianPeasant ( 20 , 12 ) )


---> console_out:
18
240
 
MATCHED!! :D
  2%|▏         | 33/1746 [00:03<02:16, 12.52it/s]

-------------------------------------


---> lineNum: 34
---> probID: geeksforgeeks_4021_A
---> inputs:

---> outputs:
Invalid


def isValid ( str , length ) :
    for i in range ( 1 , length ) :
        if str [ i ] == str [ i - 1 ] :
            return False
    return True
if __name__ == '__main__' :
    string = "0110"
    length = len ( string )
    if isValid ( string , length ) :
        print ( "Valid" )
    else :
        print ( "Invalid" )


---> console_out:
Invalid
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783688941_2229/main.py", line 22, in <module>
    flag = lehmann ( n , t )
  File "./junk/1703783688941_2229/main.py", line 7, in lehmann
    result = pow ( a , e , n )
TypeError: pow() 3rd argument not allowed unless all arguments are integers
out1,out2  130maybeprime


-------------------------------------


---> lineNum: 35
---> probID: geeksforgeeks_2144_A
---> inputs:

---> outputs:
13 may be Prime.


import random
def lehmann ( n , t ) :
    rand = random . Random ( )
    a = rand . randint ( 2 , n - 3 )
    e = ( n - 1 ) / 2
    while t > 0 :
        result = pow ( a , e , n )
        if result % n == 1 or result % n == n - 1 :
            a = rand . randint ( 2 , n - 3 )
            t -= 1
        else :
            return - 1
    return 1
if __name__ == '__main__' :
    n = 13
    t = 10
    if n == 2 :
        print ( "2 is Prime." )
    elif n % 2 == 0 :
        print ( n , "is Composite" )
    else :
        flag = lehmann ( n , t )
        if flag == 1 :
            print ( n , "may be Prime." )
        else :
            print ( n , "is Composite." )


---> console_out:
 
DIDN'T MATCH!! :(
  2%|▏         | 35/1746 [00:03<02:11, 13.03it/s]

-------------------------------------


---> lineNum: 36
---> probID: codeforces_267_A
---> inputs:
2
4 17
7 987654321
---> outputs:
8
141093479

import sys
num = int ( input ( ) )
for i in range ( num ) :
    a , b = map ( int , input ( ) . split ( ) )
    res = 0
    while a != 0 and b != 0 :
        if a >= b :
            res += a // b
            a %= b
        else :
            res += b // a
            b %= a
    print ( res )


---> console_out:
8
141093479
 
MATCHED!! :D
out1,out2 iostringioobjecthasnoattributehasmoretokens 00


-------------------------------------


---> lineNum: 37
---> probID: codeforces_844_A
---> inputs:
yandex
6
---> outputs:
0

import io
import sys
class Scanner :
    def __init__ ( self , s ) :
        self . br = io . StringIO ( s )
    def next ( self ) :
        while not hasattr ( self , 'st' ) or not self . st . hasMoreTokens ( ) :
            self . st = io . StringIO ( self . br . readline ( ) )
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
def gcd ( a , b ) :
    if b == 0 :
        return a
    return gcd ( b , a % b )
def printArrayList ( al ) :
    for i in al :
        print ( i , end = ' ' )
    print ( )
def digitSum ( n ) :
    sum = 0
    while n != 0 :
        sum += n % 10
        n //= 10
    return sum
if __name__ == '__main__' :
    try :
        s = Scanner ( sys . stdin . read ( ) )
        sb = [ ]
        st = s . next ( )
        k = s . nextInt ( )
        hs = set ( st )
        if len ( st ) < k :
            sb . append ( "impossible" )
        else :
            if k <= len ( hs ) :
                sb . append ( "0\n" )
            else :
                sb . append ( str ( k - len ( hs ) ) )
        print ( '' . join ( sb ) )
    except Exception as e :
        print ( e )


---> console_out:
'_io.StringIO' object has no attribute 'hasMoreTokens'
 
DIDN'T MATCH!! :(
  2%|▏         | 37/1746 [00:03<02:06, 13.54it/s]

-------------------------------------


---> lineNum: 38
---> probID: geeksforgeeks_5251_A
---> inputs:

---> outputs:
20


N = 3
def MaxTraceSub ( mat ) :
    max_trace = 0
    for i in range ( N ) :
        for j in range ( N ) :
            r = i
            s = j
            trace = 0
            while r < N and s < N :
                trace += mat [ r ] [ s ]
                r += 1
                s += 1
                max_trace = max ( trace , max_trace )
    return max_trace
mat = [ [ 10 , 2 , 5 ] , [ 6 , 10 , 4 ] , [ 2 , 7 , - 10 ] ]
print ( MaxTraceSub ( mat ) )


---> console_out:
20
 
MATCHED!! :D


-------------------------------------


---> lineNum: 39
---> probID: aizu_p00059_A
---> inputs:
0.0 0.0 5.0 5.0 1.0 1.0 4.0 4.0
0.0 0.0 4.0 5.0 1.0 1.0 5.0 5.0
0.0 0.0 4.0 4.0 -3.0 -5.0 2.0 -1.0
---> outputs:
YES
YES
NO

import sys
for line in sys . stdin :
    xa1 , ya1 , xa2 , ya2 , xb1 , yb1 , xb2 , yb2 = map ( float , line . split ( ) )
    xaMin , xaMax = min ( xa1 , xa2 ) , max ( xa1 , xa2 )
    xbMin , xbMax = min ( xb1 , xb2 ) , max ( xb1 , xb2 )
    yaMin , yaMax = min ( ya1 , ya2 ) , max ( ya1 , ya2 )
    ybMin , ybMax = min ( yb1 , yb2 ) , max ( yb1 , yb2 )
    if xaMax < xbMin or xbMax < xaMin or yaMax < ybMin or ybMax < yaMin :
        print ( "NO" )
    else :
        print ( "YES" )


---> console_out:
YES
YES
NO
 
MATCHED!! :D
  2%|▏         | 39/1746 [00:04<02:06, 13.46it/s]

-------------------------------------


---> lineNum: 40
---> probID: codeforces_1601_A
---> inputs:
5
4
4 4 4 4
4
13 7 25 19
6
3 5 3 1 7 1
1
1
5
0 0 0 0 0
---> outputs:
1 2 4
1 2
1
1
1 2 3 4 5

import sys
t = int ( input ( ) )
for tt in range ( t ) :
    n = int ( input ( ) )
    bit = [ 0 ] * 32
    arr = list ( map ( int , input ( ) . split ( ) ) )
    for i in range ( n ) :
        for j in range ( 32 ) :
            temp = ( 1 << j )
            bitwiseAnd = arr [ i ] & temp
            if bitwiseAnd > 0 :
                bit [ j ] += 1
    for i in range ( 1 , n + 1 ) :
        possible = True
        for j in range ( 32 ) :
            if bit [ j ] % i != 0 :
                possible = False
                break
        if possible :
            sys . stdout . write ( str ( i ) + " " )
    sys . stdout . write ( "\n" )


---> console_out:
1 2 4 
1 2 
1 
1 
1 2 3 4 5 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 41
---> probID: geeksforgeeks_1302_A
---> inputs:

---> outputs:
3


import math
def OddDivCount ( a , b ) :
    res = 0
    for i in range ( a , b + 1 ) :
        divCount = 0
        for j in range ( 1 , i + 1 ) :
            if i % j == 0 :
                divCount += 1
        if divCount % 2 != 0 :
            res += 1
    return res
a , b = 1 , 10
print ( OddDivCount ( a , b ) )


---> console_out:
3
 
MATCHED!! :D
  2%|▏         | 41/1746 [00:04<02:11, 12.93it/s]

-------------------------------------


---> lineNum: 42
---> probID: codeforces_450_A
---> inputs:
5 2
1 3 1 4 2
---> outputs:
4

import math
n , m = map ( int , input ( ) . split ( ) )
M = float ( m )
arr = list ( map ( int , input ( ) . split ( ) ) )
max_val = 0
ans = 0
for i in range ( n ) :
    x = math . ceil ( arr [ i ] / M )
    if x >= max_val :
        max_val = x
        ans = i
print ( ans + 1 )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 43
---> probID: geeksforgeeks_3877_A
---> inputs:

---> outputs:
2 3 1 2 0 
2 2 4 1 2 0 


def printArray ( N , arr ) :
    for i in range ( N ) :
        print ( arr [ i ] , end = " " )
    print ( )
def replacedArray ( N , arr ) :
    pos_sum = 0
    neg_sum = 0
    for i in range ( N - 1 , - 1 , - 1 ) :
        diff = abs ( pos_sum ) - abs ( neg_sum )
        if arr [ i ] > 0 :
            pos_sum += arr [ i ]
        else :
            neg_sum += arr [ i ]
        arr [ i ] = abs ( diff )
if __name__ == "__main__" :
    N = 5
    arr = [ 1 , - 1 , 2 , 3 , - 2 ]
    replacedArray ( N , arr )
    printArray ( N , arr )
    N = 6
    arr1 = [ - 3 , - 4 , - 2 , 5 , 1 , - 2 ]
    replacedArray ( N , arr1 )
    printArray ( N , arr1 )


---> console_out:
2 3 1 2 0 
2 2 4 1 2 0 
 
MATCHED!! :D
  2%|▏         | 43/1746 [00:04<02:06, 13.49it/s]

-------------------------------------


---> lineNum: 44
---> probID: geeksforgeeks_3876_A
---> inputs:

---> outputs:
2 3 1 2 0 
2 2 4 1 2 0 


def printArray ( N , arr ) :
    for i in range ( N ) :
        print ( arr [ i ] , end = " " )
    print ( )
def replacedArray ( N , arr ) :
    for i in range ( N ) :
        pos_sum = 0
        neg_sum = 0
        for j in range ( i + 1 , N ) :
            if arr [ j ] > 0 :
                pos_sum += arr [ j ]
            else :
                neg_sum += arr [ j ]
        diff = abs ( pos_sum ) - abs ( neg_sum )
        arr [ i ] = abs ( diff )
if __name__ == "__main__" :
    N = 5
    arr = [ 1 , - 1 , 2 , 3 , - 2 ]
    replacedArray ( N , arr )
    printArray ( N , arr )
    N = 6
    arr1 = [ - 3 , - 4 , - 2 , 5 , 1 , - 2 ]
    replacedArray ( N , arr1 )
    printArray ( N , arr1 )


---> console_out:
2 3 1 2 0 
2 2 4 1 2 0 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 45
---> probID: geeksforgeeks_2153_A
---> inputs:

---> outputs:
4


import re
def countDivisbleby4 ( s ) :
    n = len ( s )
    count = 0
    for i in range ( n ) :
        if s [ i ] == '4' or s [ i ] == '8' or s [ i ] == '0' :
            count += 1
    for i in range ( n - 1 ) :
        h = int ( s [ i : i + 2 ] )
        if h % 4 == 0 :
            count += i + 1
    return count
s = "124"
print ( countDivisbleby4 ( s ) )


---> console_out:
4
 
MATCHED!! :D
  3%|▎         | 45/1746 [00:04<02:03, 13.78it/s]

-------------------------------------


---> lineNum: 46
---> probID: codeforces_1535_A
---> inputs:
4
3 7 9 5
4 5 6 9
5 3 8 1
6 5 3 2
---> outputs:
YES
NO
YES
NO

import sys
t = int ( input ( ) )
for i in range ( 1 , t + 1 ) :
    a = list ( map ( int , input ( ) . split ( ) ) )
    if max ( a [ 0 ] , a [ 1 ] ) > min ( a [ 2 ] , a [ 3 ] ) and max ( a [ 2 ] , a [ 3 ] ) > min ( a [ 0 ] , a [ 1 ] ) :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
YES
NO
YES
NO
 
MATCHED!! :D
out1,out2 44444777770 47470


-------------------------------------


---> lineNum: 47
---> probID: codeforces_96_B
---> inputs:
4500
---> outputs:
4747

import sys
number = int ( input ( ) )
ans = - 1
value = 0
mask = 2
while value < number :
    s = bin ( mask ) [ 2 : ]
    mask += 1
    s = '0' * ( 10 - len ( s ) ) + s
    zeros = s . count ( '0' )
    if zeros != 5 :
        continue
    s = s . replace ( '0' , '4' )
    s = s . replace ( '1' , '7' )
    value = int ( s )
print ( value )


---> console_out:
4444477777
 
DIDN'T MATCH!! :(
  3%|▎         | 47/1746 [00:04<01:59, 14.28it/s]

-------------------------------------


---> lineNum: 48
---> probID: codeforces_1349_B
---> inputs:
5
5 3
1 5 2 6 1
1 6
6
3 2
1 2 3
4 3
3 1 2 3
10 3
1 2 3 4 5 6 7 8 9 10
---> outputs:
no
yes
yes
no
yes

import sys
def helper ( nums , target ) :
    isTargetFound = False
    canPrintYes = False
    score = 0
    prev = - 1
    for num in nums :
        if num == target :
            isTargetFound = True
        if num < target :
            score -= 1
        else :
            score += 1
        if score > 0 and prev > - 1 :
            canPrintYes = True
        prev = score
        score = max ( score , 0 )
    if ( len ( nums ) == 1 or canPrintYes ) and isTargetFound :
        print ( "yes" )
    else :
        print ( "no" )
cases = int ( sys . stdin . readline ( ) )
for _ in range ( cases ) :
    n , target = map ( int , sys . stdin . readline ( ) . split ( ) )
    nums = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
    helper ( nums , target )


---> console_out:
no
yes
yes
no
yes
 
MATCHED!! :D
  File "./junk/1703783689933_8547/main.py", line 6
    res = del + solve ( index + 1 , prev )
          ^
SyntaxError: invalid syntax
out1,out2  case1040case20170


-------------------------------------


---> lineNum: 49
---> probID: codejam_10_12
---> inputs:
2
6 6 2 3
1 7 5
100 1 5 3
1 50 7

---> outputs:
Case #1: 4
Case #2: 17


import sys
def solve ( index , prev ) :
    if index >= n :
        return 0
    if memo [ index ] [ prev ] == - 1 :
        res = del + solve ( index + 1 , prev )
        for val in range ( SPC ) :
            res = min ( res , abs ( arr [ index ] - val ) + insCost ( val , prev ) + solve ( index + 1 , val ) )
        memo [ index ] [ prev ] = res
    return memo [ index ] [ prev ]
def insCost ( cur , prev ) :
    if prev == SPC or cur == prev :
        return 0
    if maxDist == 0 :
        return 100000000
    return ins * ( ( abs ( cur - prev ) + maxDist - 1 ) // maxDist - 1 )
if __name__ == "__main__" :
    T = int ( input ( ) )
    for i in range ( 1 , T + 1 ) :
        print ( "Case #{}: " . format ( i ) , end = "" )
        del_val , ins_val , max_dist , n = map ( int , input ( ) . split ( ) )
        arr = list ( map ( int , input ( ) . split ( ) ) )
        memo = [ [ - 1 for _ in range ( 257 ) ] for _ in range ( 100 ) ]
        SPC = 256
        del , ins , maxDist = del_val , ins_val , max_dist
        solve ( 0 , SPC )
        print ( memo [ 0 ] [ SPC ] )


---> console_out:
 
DIDN'T MATCH!! :(
  3%|▎         | 49/1746 [00:04<01:56, 14.55it/s]Traceback (most recent call last):
  File "./junk/1703783689998_1915/main.py", line 28, in <module>
    io ( )
  File "./junk/1703783689998_1915/main.py", line 23, in io
    map = [ [ True if str [ y ] [ x ] == '1' else False for x in range ( N ) ] for y in range ( N ) ]
  File "./junk/1703783689998_1915/main.py", line 23, in <listcomp>
    map = [ [ True if str [ y ] [ x ] == '1' else False for x in range ( N ) ] for y in range ( N ) ]
  File "./junk/1703783689998_1915/main.py", line 23, in <listcomp>
    map = [ [ True if str [ y ] [ x ] == '1' else False for x in range ( N ) ] for y in range ( N ) ]
IndexError: list index out of range
out1,out2 202020102020 5013040


-------------------------------------


---> lineNum: 50
---> probID: aizu_p00067_A
---> inputs:
111100001111
111000001111
110000001111
100000001111
000100010000
000000111000
000001111100
100011111110
110001111100
111000111000
111100010000
000000000000

010001111100
110010000010
010010000001
010000000001
010000000110
010000111000
010000000100
010000000010
010000000001
010010000001
010010000010
111001111100

000000000000
111111111111
100010100001
100010100001
100010100001
100010100001
100100100101
101000011101
100000000001
100000000001
111111111111
100000000001
---> outputs:
5
13
4

import sys
N = 12
ofs = [ ( 1 , 0 ) , ( 0 , - 1 ) , ( - 1 , 0 ) , ( 0 , 1 ) ]
def del_func ( map , y , x ) :
    map [ y ] [ x ] = False
    for i in range ( 4 ) :
        nx = x + ofs [ i ] [ 0 ]
        ny = y + ofs [ i ] [ 1 ]
        if 0 <= ny < N and 0 <= nx < N :
            if map [ ny ] [ nx ] :
                del_func ( map , ny , nx )
def solve ( map ) :
    c = 0
    for y in range ( N ) :
        for x in range ( N ) :
            if map [ y ] [ x ] :
                c += 1
                del_func ( map , y , x )
    return c
def io ( ) :
    for line in sys . stdin :
        str = [ list ( line . strip ( ) ) for _ in range ( N ) ]
        map = [ [ True if str [ y ] [ x ] == '1' else False for x in range ( N ) ] for y in range ( N ) ]
        print ( solve ( map ) )
        if sys . stdin . readline ( ) :
            continue
if __name__ == '__main__' :
    io ( )


---> console_out:
2
2
2
1
2
2
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 51
---> probID: geeksforgeeks_3141_A
---> inputs:

---> outputs:
Yes


def arraySortedOrNot ( arr , n ) :
    if n == 0 or n == 1 :
        return True
    for i in range ( 1 , n ) :
        if arr [ i - 1 ] > arr [ i ] :
            return False
    return True
if __name__ == '__main__' :
    arr = [ 20 , 23 , 23 , 45 , 78 , 88 ]
    n = len ( arr )
    if arraySortedOrNot ( arr , n ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
  3%|▎         | 51/1746 [00:04<01:55, 14.66it/s]  File "./junk/1703783690132_1175/main.py", line 4
    inpt = Scanner ( System . in )
                              ^
SyntaxError: invalid syntax
out1,out2  100497503800000


-------------------------------------


---> lineNum: 52
---> probID: codeforces_1676_B
---> inputs:
5
5
1 2 3 4 5
6
1000 1000 5 1000 1000 1000
10
1 2 3 5 1 2 7 9 13 5
3
8 8 8
1
10000000
---> outputs:
10
4975
38
0
0

import java . util . Arrays
import java . util . Scanner
def main ( ) :
    inpt = Scanner ( System . in )
    t = inpt . nextInt ( )
    while t > 0 :
        a = inpt . nextInt ( )
        x = [ 0 ] * a
        for i in range ( a ) :
            x [ i ] = inpt . nextInt ( )
        Arrays . sort ( x )
        s = 0
        for i in range ( a ) :
            s += abs ( x [ i ] - x [ 0 ] )
        print ( s )
        t -= 1
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 53
---> probID: geeksforgeeks_4980_A
---> inputs:

---> outputs:
4


import collections
def printKDistinct ( arr , n , k ) :
    h = collections . Counter ( arr )
    if len ( h ) < k :
        return - 1
    dist_count = 0
    for i in range ( n ) :
        if h [ arr [ i ] ] == 1 :
            dist_count += 1
        if dist_count == k :
            return arr [ i ]
    return - 1
if __name__ == '__main__' :
    ar = [ 1 , 2 , 1 , 3 , 4 , 2 ]
    n = len ( ar )
    print ( printKDistinct ( ar , n , 2 ) )


---> console_out:
4
 
MATCHED!! :D
  3%|▎         | 53/1746 [00:05<01:53, 14.86it/s]

-------------------------------------


---> lineNum: 54
---> probID: geeksforgeeks_1200_A
---> inputs:

---> outputs:
1
1
3
3


class GFG :
    def fib ( self , f ) :
        f [ 0 ] = 0
        f [ 1 ] = 1
        for i in range ( 2 , 60 ) :
            f [ i ] = ( f [ i - 1 ] + f [ i - 2 ] ) % 10
    def findLastDigit ( self , n ) :
        f = [ 0 ] * 60
        self . fib ( f )
        index = int ( n % 60 )
        return f [ index ]
if __name__ == '__main__' :
    n = 1
    ob = GFG ( )
    print ( ob . findLastDigit ( n ) )
    n = 61
    print ( ob . findLastDigit ( n ) )
    n = 7
    print ( ob . findLastDigit ( n ) )
    n = 67
    print ( ob . findLastDigit ( n ) )


---> console_out:
1
1
3
3
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783690326_4598/main.py", line 3, in <module>
    num_1 = int ( str )
ValueError: invalid literal for int() with base 10: '5 5 7'
out1,out2  yes


-------------------------------------


---> lineNum: 55
---> probID: atcoder_ABC042_A
---> inputs:
5 5 7
---> outputs:
YES

import sys
str = sys . stdin . readline ( ) . strip ( )
num_1 = int ( str )
str = sys . stdin . readline ( ) . strip ( )
num_2 = int ( str )
str = sys . stdin . readline ( ) . strip ( )
num_3 = int ( str )
if num_1 == 7 :
    if num_2 == 5 and num_3 == 5 :
        print ( "YES" )
    else :
        print ( "NO" )
elif num_2 == 7 :
    if num_1 == 5 and num_3 == 5 :
        print ( "YES" )
    else :
        print ( "NO" )
elif num_3 == 7 :
    if num_2 == 5 and num_1 == 5 :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(
  3%|▎         | 55/1746 [00:05<01:53, 14.96it/s]

-------------------------------------


---> lineNum: 56
---> probID: atcoder_ABC078_D
---> inputs:
3 100 100
10 1000 100
---> outputs:
900

import sys
n , z , w = map ( int , input ( ) . split ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
if n == 1 :
    print ( abs ( w - a [ 0 ] ) )
else :
    ans1 = abs ( a [ n - 2 ] - a [ n - 1 ] )
    ans2 = abs ( w - a [ n - 1 ] )
    print ( max ( ans1 , ans2 ) )


---> console_out:
900
 
MATCHED!! :D


-------------------------------------


---> lineNum: 57
---> probID: geeksforgeeks_487_A
---> inputs:

---> outputs:
4 5 5 6 6 6 

import numpy as np
def countEleLessThanOrEqual ( arr1 , arr2 , m , n ) :
    for i in range ( m ) :
        count = 0
        for j in range ( n ) :
            if arr2 [ j ] <= arr1 [ i ] :
                count += 1
        print ( count , end = " " )
    return m
arr1 = np . array ( [ 1 , 2 , 3 , 4 , 7 , 9 ] )
arr2 = np . array ( [ 0 , 1 , 2 , 1 , 1 , 4 ] )
countEleLessThanOrEqual ( arr1 , arr2 , arr1 . size , arr2 . size )


---> console_out:
4 5 5 6 6 6  
MATCHED!! :D
  3%|▎         | 57/1746 [00:05<03:01,  9.31it/s]

-------------------------------------


---> lineNum: 58
---> probID: codeforces_870_B
---> inputs:
5 2
1 2 3 4 5
---> outputs:
5

import sys
def solve ( n , a , k ) :
    if k == 1 :
        res = sys . maxsize
        for x in a :
            res = min ( x , res )
        return res
    if k == 2 :
        if n == 1 :
            return a [ 0 ]
        dq = [ ]
        for x in a :
            dq . append ( x )
        lMin = sys . maxsize
        rMin = sys . maxsize
        ans = a [ 0 ]
        while dq :
            lMin = min ( dq . pop ( 0 ) , lMin )
            if rMin == sys . maxsize and not dq :
                rMin = - sys . maxsize
                break
            if not dq :
                break
            rMin = min ( dq [ - 1 ] , rMin )
            ans = max ( ans , max ( rMin , lMin ) )
        ans = max ( ans , max ( rMin , lMin ) )
        return ans
    ans = - sys . maxsize
    for x in a :
        ans = max ( ans , x )
    return ans
if __name__ == '__main__' :
    n , k = map ( int , input ( ) . split ( ) )
    a = list ( map ( int , input ( ) . split ( ) ) )
    print ( solve ( n , a , k ) )


---> console_out:
5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 59
---> probID: codeforces_776_A
---> inputs:
ross rachel
4
ross joey
rachel phoebe
phoebe monica
monica chandler
---> outputs:
ross rachel
joey rachel
joey phoebe
joey monica
joey chandler

import sys
name1 , name2 = input ( ) . split ( )
print ( name1 , name2 )
n = int ( input ( ) )
while True :
    s1 , s2 = input ( ) . split ( )
    if s1 == name1 :
        name1 = s2
    if s1 == name2 :
        name2 = s2
    print ( name1 , name2 )
    n -= 1
    if n == 0 :
        break


---> console_out:
ross rachel
joey rachel
joey phoebe
joey monica
joey chandler
 
MATCHED!! :D
  3%|▎         | 59/1746 [00:05<02:43, 10.33it/s]

-------------------------------------


---> lineNum: 60
---> probID: codeforces_710_B
---> inputs:
4
1 2 3 4
---> outputs:
2

import sys
import math
class TaskA :
    def solve ( self , in_stream , out_stream ) :
        n = int ( in_stream . readline ( ) )
        s = list ( map ( int , in_stream . readline ( ) . split ( ) ) )
        s . sort ( )
        if n % 2 == 0 :
            out_stream . write ( str ( s [ n // 2 - 1 ] ) + '\n' )
        else :
            out_stream . write ( str ( s [ ( n + 1 ) // 2 - 1 ] ) + '\n' )
if __name__ == '__main__' :
    task = TaskA ( )
    task . solve ( sys . stdin , sys . stdout )


---> console_out:
2
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783691010_4584/main.py", line 40, in <module>
    main ( )
  File "./junk/1703783691010_4584/main.py", line 35, in main
    out_stream = PrintWriter ( output_stream )
NameError: name 'PrintWriter' is not defined
out1,out2  330


-------------------------------------


---> lineNum: 61
---> probID: codeforces_897_B
---> inputs:
2 100
---> outputs:
33

import sys
import math
class InputReader :
    def __init__ ( self , stream ) :
        self . reader = stream . readline
        self . tokenizer = None
    def next ( self ) :
        while self . tokenizer is None or not self . tokenizer . hasMoreTokens ( ) :
            self . tokenizer = StringTokenizer ( self . reader ( ) )
        return self . tokenizer . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
class TaskA :
    def solve ( self , testNumber , in_stream , out_stream ) :
        k = in_stream . nextInt ( )
        p = in_stream . nextInt ( )
        sum = 0
        for i in range ( 1 , k + 1 ) :
            a = i
            b = i
            while a != 0 :
                b = b * 10 + a % 10
                a //= 10
            b = b % p
            sum = ( sum + b ) % p
        out_stream . printf ( "%.0f" , sum )
def main ( ) :
    input_stream = sys . stdin
    output_stream = sys . stdout
    in_stream = InputReader ( input_stream )
    out_stream = PrintWriter ( output_stream )
    solver = TaskA ( )
    solver . solve ( 1 , in_stream , out_stream )
    out_stream . close ( )
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
  3%|▎         | 61/1746 [00:05<02:28, 11.35it/s]

-------------------------------------


---> lineNum: 62
---> probID: atcoder_AGC005_B
---> inputs:
1
1
---> outputs:
1

import bisect
n = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
p = [ 0 ] * n
for i in range ( n ) :
    p [ a [ i ] - 1 ] = i
x = [ ]
l = [ 0 ] * n
r = [ 0 ] * n
for i in range ( n ) :
    bisect . insort ( x , p [ i ] )
    if x [ 0 ] == p [ i ] :
        l [ i ] = p [ i ] + 1
    else :
        lower = bisect . bisect_left ( x , p [ i ] ) - 1
        l [ i ] = p [ i ] - x [ lower ]
    if x [ - 1 ] == p [ i ] :
        r [ i ] = n - p [ i ]
    else :
        high = bisect . bisect_right ( x , p [ i ] )
        r [ i ] = x [ high ] - p [ i ]
ans = 0
for i in range ( n ) :
    ans += l [ i ] * r [ i ] * ( i + 1 )
print ( ans )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 63
---> probID: geeksforgeeks_3935_A
---> inputs:

---> outputs:
The length of the LPS is 5


class LPS :
    @ staticmethod
    def max ( x , y ) :
        return x if x > y else y
    @ staticmethod
    def lps ( seq ) :
        n = len ( seq )
        L = [ [ 0 for x in range ( n ) ] for y in range ( n ) ]
        for i in range ( n ) :
            L [ i ] [ i ] = 1
        for cl in range ( 2 , n + 1 ) :
            for i in range ( n - cl + 1 ) :
                j = i + cl - 1
                if seq [ i ] == seq [ j ] and cl == 2 :
                    L [ i ] [ j ] = 2
                elif seq [ i ] == seq [ j ] :
                    L [ i ] [ j ] = L [ i + 1 ] [ j - 1 ] + 2
                else :
                    L [ i ] [ j ] = L [ i ] [ j - 1 ] if L [ i ] [ j - 1 ] > L [ i + 1 ] [ j ] else L [ i + 1 ] [ j ]
        return L [ 0 ] [ n - 1 ]
    @ staticmethod
    def main ( ) :
        seq = "GEEKSFORGEEKS"
        print ( "The length of the LPS is" , LPS . lps ( seq ) )
LPS . main ( )


---> console_out:
The length of the LPS is 5
 
MATCHED!! :D
  4%|▎         | 63/1746 [00:06<02:24, 11.66it/s]

-------------------------------------


---> lineNum: 64
---> probID: geeksforgeeks_906_A
---> inputs:

---> outputs:
12 = 3 + 4 + 5

def printConsecutive ( last , first ) :
    print ( first , end = ' ' )
    first += 1
    for x in range ( first , last + 1 ) :
        print ( "+" , x , end = ' ' )
def findConsecutive ( N ) :
    for last in range ( 1 , N ) :
        for first in range ( 0 , last ) :
            if 2 * N == ( last - first ) * ( last + first + 1 ) :
                print ( N , "=" , end = ' ' )
                printConsecutive ( last , first + 1 )
                return
    print ( "-1" , end = '' )
n = 12
findConsecutive ( n )


---> console_out:
12 = 3 + 4 + 5  
MATCHED!! :D


-------------------------------------


---> lineNum: 65
---> probID: codeforces_761_A
---> inputs:
2 3
---> outputs:
YES

import sys
even , odd = map ( int , input ( ) . split ( ) )
if even == 0 and odd == 0 :
    print ( "NO" )
else :
    sub = abs ( even - odd )
    if sub <= 1 :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
YES
 
MATCHED!! :D
  4%|▎         | 65/1746 [00:06<02:12, 12.65it/s]

-------------------------------------


---> lineNum: 66
---> probID: geeksforgeeks_1240_A
---> inputs:

---> outputs:
924


import math
def gcd ( a , b ) :
    if a == 0 or b == 0 :
        return 0
    if a == b :
        return a
    if a > b :
        return gcd ( a - b , b )
    return gcd ( a , b - a )
def number_of_squares ( x , y ) :
    s = gcd ( x , y )
    ans = ( x * y ) // ( s * s )
    return ans
m = 385
n = 60
print ( number_of_squares ( m , n ) )


---> console_out:
924
 
MATCHED!! :D


-------------------------------------


---> lineNum: 67
---> probID: geeksforgeeks_2873_A
---> inputs:

---> outputs:
Yes


import array
def isAlphabaticOrder ( s ) :
    n = len ( s )
    c = array . array ( 'u' , s )
    c = sorted ( c )
    for i in range ( n ) :
        if c [ i ] != s [ i ] :
            return False
    return True
if __name__ == '__main__' :
    s = "aabbbcc"
    if isAlphabaticOrder ( s ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
  4%|▍         | 67/1746 [00:06<02:11, 12.78it/s]

-------------------------------------


---> lineNum: 68
---> probID: geeksforgeeks_659_A
---> inputs:

---> outputs:
3 4 5 6 7 8 9 10 

def printKMax ( arr , n , k ) :
    for i in range ( n - k + 1 ) :
        max_val = arr [ i ]
        for j in range ( 1 , k ) :
            if arr [ i + j ] > max_val :
                max_val = arr [ i + j ]
        print ( max_val , end = " " )
arr = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ]
k = 3
printKMax ( arr , len ( arr ) , k )


---> console_out:
3 4 5 6 7 8 9 10  
MATCHED!! :D


-------------------------------------


---> lineNum: 69
---> probID: atcoder_AGC011_C
---> inputs:
100 50
1 63
57 63
13 75
56 87
27 31
29 35
79 84
14 56
48 52
29 39
43 53
48 96
27 69
32 77
52 83
22 88
26 79
25 78
57 75
11 24
70 79
4 61
74 79
15 16
31 74
27 43
44 51
61 100
33 98
37 92
71 98
30 61
35 39
63 82
49 91
27 99
18 87
4 45
51 99
44 58
1 50
3 77
6 76
36 80
74 80
40 77
6 25
21 27
24 93
1 8
---> outputs:
6396

from typing import List
import sys
class Main :
    def __init__ ( self ) :
        self . graph : List [ List [ int ] ] = [ ]
        self . visited : List [ bool ] = [ ]
        self . color : List [ int ] = [ ]
        self . one : int = 0
        self . bipartite : int = 0
        self . count : int = 0
        self . mujun : bool = False
    def dfs ( self , a : int , c : int ) -> int :
        if self . visited [ a ] :
            if self . color [ a ] >= 0 and self . color [ a ] != c :
                self . mujun = True
            return 0
        self . visited [ a ] = True
        self . color [ a ] = c
        total = 1
        for b in self . graph [ a ] :
            total += self . dfs ( b , 1 - c )
        return total
    def run ( self ) -> None :
        n , m = map ( int , input ( ) . split ( ) )
        self . graph = [ [ ] for _ in range ( n ) ]
        for _ in range ( m ) :
            u , v = map ( int , input ( ) . split ( ) )
            self . graph [ u - 1 ] . append ( v - 1 )
            self . graph [ v - 1 ] . append ( u - 1 )
        self . visited = [ False ] * n
        self . color = [ - 1 ] * n
        self . one = 0
        self . bipartite = 0
        self . count = 0
        for i in range ( n ) :
            if self . visited [ i ] :
                continue
            self . count += 1
            self . mujun = False
            kind = self . dfs ( i , 0 )
            if kind == 1 :
                self . one += 1
            elif not self . mujun :
                self . bipartite += 1
        total = self . one * ( 2 * n - self . one )
        total += ( self . count - self . one ) * ( self . count - self . one )
        total += self . bipartite * self . bipartite
        print ( total )
if __name__ == '__main__' :
    sys . setrecursionlimit ( 10 ** 6 )
    Main ( ) . run ( )


---> console_out:
6396
 
MATCHED!! :D
  4%|▍         | 69/1746 [00:06<02:08, 13.03it/s]Traceback (most recent call last):
  File "./junk/1703783691664_6708/main.py", line 44, in <module>
    main ( )
  File "./junk/1703783691664_6708/main.py", line 38, in main
    in_stream = InputReader ( input_stream )
  File "./junk/1703783691664_6708/main.py", line 21, in __init__
    self . reader = io . StringIO ( stream )
TypeError: initial_value must be str or None, not _io.BufferedReader
out1,out2  20


-------------------------------------


---> lineNum: 70
---> probID: codeforces_760_B
---> inputs:
4 6 2
---> outputs:
2

import sys
import math
import io
class TaskA :
    def solve ( self , testNumber , in_stream , out_stream ) :
        n , m , k = map ( int , in_stream . readline ( ) . split ( ) )
        c = 1
        s = m - n
        l = k
        r = k
        while s >= r - l + 1 :
            s -= r - l + 1
            c += 1
            if l > 1 :
                l -= 1
            if r < n :
                r += 1
        out_stream . write ( str ( c ) + '\n' )
class InputReader :
    def __init__ ( self , stream ) :
        self . reader = io . StringIO ( stream )
        self . tokenizer = None
    def readline ( self ) :
        return self . reader . readline ( )
    def next ( self ) :
        while self . tokenizer is None or not self . tokenizer . hasMoreTokens ( ) :
            self . tokenizer = self . readline ( ) . split ( )
        return self . tokenizer . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
def main ( ) :
    input_stream = sys . stdin . buffer
    output_stream = sys . stdout . buffer
    in_stream = InputReader ( input_stream )
    out_stream = io . StringIO ( )
    solver = TaskA ( )
    solver . solve ( 1 , in_stream , out_stream )
    output_stream . write ( out_stream . getvalue ( ) . encode ( ) )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 71
---> probID: atcoder_ABC075_D
---> inputs:
4 4
1 4
3 3
6 2
8 1
---> outputs:
21

import sys
class Main :
    class P :
        def __init__ ( self , x , y ) :
            self . x = x
            self . y = y
        def __lt__ ( self , other ) :
            return self . x < other . x
    def run ( self ) :
        N , K = map ( int , input ( ) . split ( ) )
        x = [ 0 ] * N
        y = [ 0 ] * N
        for i in range ( N ) :
            x [ i ] , y [ i ] = map ( int , input ( ) . split ( ) )
        ans = sys . maxsize
        for i in range ( N ) :
            x1 = x [ i ]
            for j in range ( N ) :
                x2 = x [ j ]
                if x1 >= x2 :
                    continue
                for k in range ( N ) :
                    y1 = y [ k ]
                    for l in range ( N ) :
                        y2 = y [ l ]
                        if y1 >= y2 :
                            continue
                        cnt = 0
                        for m in range ( N ) :
                            if x1 <= x [ m ] <= x2 and y1 <= y [ m ] <= y2 :
                                cnt += 1
                        if cnt == K :
                            ans = min ( ans , ( x2 - x1 ) * ( y2 - y1 ) )
        print ( ans )
if __name__ == '__main__' :
    main = Main ( )
    main . run ( )


---> console_out:
21
 
MATCHED!! :D
  4%|▍         | 71/1746 [00:06<02:04, 13.46it/s]out1,out2 1020304050 5020103040


-------------------------------------


---> lineNum: 72
---> probID: codeforces_1575_A
---> inputs:
5 2
AA
AB
BB
BA
AZ
---> outputs:
5 2 1 3 4

import sys
class Main :
    @ staticmethod
    def compare ( a , b ) :
        for i in range ( len ( a ) ) :
            if a [ i ] < b [ i ] :
                return - 1 + ( i % 2 ) * 2
            elif a [ i ] > b [ i ] :
                return 1 - ( i % 2 ) * 2
        return 0
    @ staticmethod
    def main ( ) :
        n , m = map ( int , input ( ) . split ( ) )
        a = [ ]
        ids = { }
        for i in range ( n ) :
            s = input ( )
            a . append ( s )
            ids [ s ] = i + 1
        a . sort ( key = lambda x : Main . compare ( x , x ) )
        for x in a :
            sys . stdout . write ( str ( ids [ x ] ) + " " )
        sys . stdout . write ( "\n" )
if __name__ == "__main__" :
    Main . main ( )


---> console_out:
1 2 3 4 5 
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703783691896_7235/main.py", line 1, in <module>
    import java . util
ModuleNotFoundError: No module named 'java'
out1,out2  eekk


-------------------------------------


---> lineNum: 73
---> probID: geeksforgeeks_972_A
---> inputs:

---> outputs:
e
ek
k


import java . util
def pre_process ( substrings , s ) :
    n = len ( s )
    count = 0
    for i in range ( n ) :
        dup = ""
        for j in range ( i , n ) :
            dup += s [ j ]
            substrings [ count ] = dup
            count += 1
    size = len ( substrings )
    for i in range ( size - 1 ) :
        for j in range ( i + 1 , len ( substrings ) ) :
            if substrings [ i ] > substrings [ j ] :
                temp = substrings [ i ]
                substrings [ i ] = substrings [ j ]
                substrings [ j ] = temp
def main ( ) :
    s = "geek"
    substrings = [ "" ] * 10
    pre_process ( substrings , s )
    queries = [ 1 , 5 , 10 ]
    q = len ( queries )
    for i in range ( q ) :
        print ( substrings [ queries [ i ] - 1 ] )
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
  4%|▍         | 73/1746 [00:06<02:07, 13.09it/s]

-------------------------------------


---> lineNum: 74
---> probID: aizu_p00686_A
---> inputs:
6 5
FORWARD 3
RIGHT
FORWARD 5
LEFT
BACKWARD 2
STOP
3 1
FORWARD 2
STOP
0 0
---> outputs:
6 2
1 1

import sys
while True :
    w , h = map ( int , input ( ) . split ( ) )
    if w == 0 and h == 0 :
        break
    s = ""
    t = 0
    d = 0
    x = 0
    y = 0
    c = ""
    while True :
        s = input ( )
        c = s [ 0 ]
        if c == 'S' :
            print ( ( x + 1 ) , ( y + 1 ) )
            break
        elif c == 'R' :
            d += 1
            if d == 4 :
                d = 0
        elif c == 'L' :
            d -= 1
            if d == - 1 :
                d = 3
        elif ( c == 'F' and d == 0 ) or ( c == 'B' and d == 2 ) :
            t = int ( s . split ( ) [ 1 ] )
            y += t
            if y > h - 1 :
                y = h - 1
        elif ( c == 'F' and d == 1 ) or ( c == 'B' and d == 3 ) :
            t = int ( s . split ( ) [ 1 ] )
            x += t
            if x > w - 1 :
                x = w - 1
        elif ( c == 'F' and d == 2 ) or ( c == 'B' and d == 0 ) :
            t = int ( s . split ( ) [ 1 ] )
            y -= t
            if y < 0 :
                y = 0
        elif ( c == 'F' and d == 3 ) or ( c == 'B' and d == 1 ) :
            t = int ( s . split ( ) [ 1 ] )
            x -= t
            if x < 0 :
                x = 0


---> console_out:
6 2
1 1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 75
---> probID: codeforces_978_B
---> inputs:
6
xxxiii
---> outputs:
1

import sys
n = int ( input ( ) )
str = input ( )
count = 0
total = 0
for i in range ( len ( str ) ) :
    if str [ i ] == 'x' :
        count += 1
        continue
    else :
        if count >= 3 :
            total += count - 2
            count = 0
        count = 0
if count >= 3 :
    total += count - 2
    count = 0
print ( total )


---> console_out:
1
 
MATCHED!! :D
  4%|▍         | 75/1746 [00:06<02:08, 13.05it/s]

-------------------------------------


---> lineNum: 76
---> probID: aizu_p00174_A
---> inputs:
ABAABBBAABABAAABBAA
AABBBABBABBAAABABABAAB
BABAABAABABABBAAAB
AABABAAABBAABBBABAA
AAAAAAAAAAA
ABBBBBBBBBB
0
---> outputs:
11 8
10 12
11 7
11 8
11 0
0 11

import sys
while True :
    a = input ( )
    num = list ( a )
    if num [ 0 ] == '0' :
        break
    A , B = 0 , 0
    for i in range ( 1 , len ( num ) ) :
        if num [ i ] == 'A' :
            A += 1
        else :
            B += 1
    if A > B :
        A += 1
    else :
        B += 1
    print ( A , B )


---> console_out:
11 8
10 12
11 7
11 8
11 0
0 11
 
MATCHED!! :D


-------------------------------------


---> lineNum: 77
---> probID: geeksforgeeks_4565_A
---> inputs:

---> outputs:
384


import math
def fact ( N ) :
    product = 1
    for i in range ( 1 , N + 1 ) :
        product *= i
    return product
def nthTerm ( N ) :
    return ( N * N ) * fact ( N )
N = 4
print ( nthTerm ( N ) )


---> console_out:
384
 
MATCHED!! :D
  4%|▍         | 77/1746 [00:07<02:04, 13.38it/s]

-------------------------------------


---> lineNum: 78
---> probID: geeksforgeeks_2543_A
---> inputs:

---> outputs:
7


def longestSubArray ( arr , n ) :
    isZeroPresent = False
    for i in range ( n ) :
        if arr [ i ] == 0 :
            isZeroPresent = True
            break
    if isZeroPresent :
        return n
    return 0
arr = [ 1 , 2 , 3 , 0 , 1 , 2 , 0 ]
n = len ( arr )
print ( longestSubArray ( arr , n ) )


---> console_out:
7
 
MATCHED!! :D


-------------------------------------


---> lineNum: 79
---> probID: codeforces_1107_B
---> inputs:
3
1 5
5 2
3 1
---> outputs:
5
38
19

import sys
t = int ( input ( ) )
for i in range ( t ) :
    k , x = map ( int , input ( ) . split ( ) )
    f = k * 9
    for y in range ( x , 9 ) :
        f -= 1
    print ( f )


---> console_out:
5
38
19
 
MATCHED!! :D
  5%|▍         | 79/1746 [00:07<02:00, 13.85it/s]

-------------------------------------


---> lineNum: 80
---> probID: geeksforgeeks_826_A
---> inputs:

---> outputs:
56


import math
def maximumArea ( l , b , x , y ) :
    left = x * b
    right = ( l - x - 1 ) * b
    above = l * y
    below = ( b - y - 1 ) * l
    print ( max ( left , right , above , below ) )
L = 8
B = 8
X = 0
Y = 0
maximumArea ( L , B , X , Y )


---> console_out:
56
 
MATCHED!! :D


-------------------------------------


---> lineNum: 81
---> probID: geeksforgeeks_4907_A
---> inputs:

---> outputs:
The length of the smallest substring consisting of maximum distinct characters : 5


NO_OF_CHARS = 256
def max_distinct_char ( str , n ) :
    count = [ 0 ] * NO_OF_CHARS
    for i in range ( n ) :
        count [ ord ( str [ i ] ) ] += 1
    max_distinct = 0
    for i in range ( NO_OF_CHARS ) :
        if count [ i ] != 0 :
            max_distinct += 1
    return max_distinct
def smallesteSubstr_maxDistictChar ( str ) :
    n = len ( str )
    max_distinct = max_distinct_char ( str , n )
    minl = n
    for i in range ( n ) :
        for j in range ( n ) :
            subs = None
            if i < j :
                subs = str [ i : j ]
            else :
                subs = str [ j : i ]
            subs_lenght = len ( subs )
            sub_distinct_char = max_distinct_char ( subs , subs_lenght )
            if subs_lenght < minl and max_distinct == sub_distinct_char :
                minl = subs_lenght
    return minl
str = "AABBBCBB"
len = smallesteSubstr_maxDistictChar ( str )
print ( "The length of the smallest substring consisting of maximum distinct characters : " , len )


---> console_out:
The length of the smallest substring consisting of maximum distinct characters :  5
 
MATCHED!! :D
  5%|▍         | 81/1746 [00:07<01:57, 14.15it/s]Traceback (most recent call last):
  File "./junk/1703783692526_8348/main.py", line 29, in <module>
    if s [ i ] == "R" :
IndexError: list index out of range
out1,out2  yesnoyesnoyesyes


-------------------------------------


---> lineNum: 82
---> probID: codeforces_1722_B
---> inputs:
6
2
RG
RB
4
GRBG
GBGB
5
GGGGG
BBBBB
7
BBBBBBB
RRRRRRR
8
RGBRRGBR
RGGRRBGR
1
G
G
---> outputs:
YES
NO
YES
NO
YES
YES

import math
def aver ( arr ) :
    sum = 0
    for i in range ( len ( arr ) ) :
        sum += arr [ i ]
    return sum / len ( arr )
def fac ( x ) :
    sum = 1
    while x > 0 :
        sum *= x
        x -= 1
    return sum
def comb ( x , y ) :
    sum = 0
    sum = fac ( x )
    temp = fac ( y ) * fac ( x - y )
    return sum / temp
n = int ( input ( ) )
while n > 0 :
    input ( )
    input ( )
    f = list ( input ( ) )
    s = list ( input ( ) )
    flag = True
    for i in range ( len ( f ) ) :
        if f [ i ] == "R" :
            if s [ i ] == "B" or s [ i ] == "G" :
                flag = False
        if s [ i ] == "R" :
            if f [ i ] == "B" or f [ i ] == "G" :
                flag = False
    if flag :
        print ( "YES" )
    else :
        print ( "NO" )
    n -= 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 83
---> probID: geeksforgeeks_4843_A
---> inputs:

---> outputs:
2


def findNumberOfEvenCells ( n , q , size ) :
    row = [ 0 ] * n
    col = [ 0 ] * n
    for i in range ( size ) :
        x = q [ i ] [ 0 ]
        y = q [ i ] [ 1 ]
        row [ x - 1 ] += 1
        col [ y - 1 ] += 1
    r1 , r2 , c1 , c2 = 0 , 0 , 0 , 0
    for i in range ( n ) :
        if row [ i ] % 2 == 0 :
            r1 += 1
        if row [ i ] % 2 == 1 :
            r2 += 1
        if col [ i ] % 2 == 0 :
            c1 += 1
        if col [ i ] % 2 == 1 :
            c2 += 1
    count = r1 * c1 + r2 * c2
    return count
n = 2
q = [ [ 1 , 1 ] , [ 1 , 2 ] , [ 2 , 1 ] ]
size = len ( q )
print ( findNumberOfEvenCells ( n , q , size ) )


---> console_out:
2
 
MATCHED!! :D
  5%|▍         | 83/1746 [00:07<01:55, 14.35it/s]

-------------------------------------


---> lineNum: 84
---> probID: geeksforgeeks_4884_A
---> inputs:

---> outputs:
Increasing


import math
def checkType ( arr , n ) :
    if arr [ 0 ] <= arr [ 1 ] and arr [ n - 2 ] <= arr [ n - 1 ] :
        print ( "Increasing" )
    elif arr [ 0 ] >= arr [ 1 ] and arr [ n - 2 ] >= arr [ n - 1 ] :
        print ( "Decreasing" )
    elif arr [ 0 ] <= arr [ 1 ] and arr [ n - 2 ] >= arr [ n - 1 ] :
        print ( "Increasing then decreasing" )
    else :
        print ( "Decreasing then increasing" )
if __name__ == '__main__' :
    arr = [ 1 , 2 , 3 , 4 ]
    n = len ( arr )
    checkType ( arr , n )


---> console_out:
Increasing
 
MATCHED!! :D
out1,out2 002020 001020


-------------------------------------


---> lineNum: 85
---> probID: codeforces_1437_B
---> inputs:
3
2
10
4
0110
8
11101000
---> outputs:
0
1
2

import sys
t = int ( sys . stdin . readline ( ) )
for i in range ( t ) :
    n = int ( sys . stdin . readline ( ) )
    arr = list ( sys . stdin . readline ( ) . strip ( ) )
    arr2 = [ '0' if j % 2 == 0 else '1' for j in range ( n ) ]
    cur = 0
    for j in range ( n ) :
        if arr [ j ] == arr2 [ j ] :
            continue
        for k in range ( j , n ) :
            if arr [ k ] == arr2 [ k ] :
                break
        cur += 1
        j = k - 1
    ans = cur
    arr2 = [ '1' if j % 2 == 0 else '0' for j in range ( n ) ]
    cur = 0
    for j in range ( n ) :
        if arr [ j ] == arr2 [ j ] :
            continue
        for k in range ( j , n ) :
            if arr [ k ] == arr2 [ k ] :
                break
        cur += 1
        j = k - 1
    ans = min ( ans , cur )
    print ( ans )


---> console_out:
0
2
2
 
DIDN'T MATCH!! :(
  5%|▍         | 85/1746 [00:07<01:53, 14.60it/s]

-------------------------------------


---> lineNum: 86
---> probID: codeforces_337_B
---> inputs:
1 1 3 2
---> outputs:
1/3

import sys
from math import gcd
from collections import deque
class FastScanner :
    def __init__ ( self ) :
        self . br = sys . stdin
        self . st = deque ( )
    def next ( self ) :
        while not self . st :
            try :
                self . st = deque ( self . br . readline ( ) . split ( ) )
            except :
                return None
        return self . st . popleft ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def readArray ( self , n ) :
        return [ self . nextInt ( ) for _ in range ( n ) ]
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
def main ( ) :
    fs = FastScanner ( )
    a , b , c , d = fs . nextInt ( ) , fs . nextInt ( ) , fs . nextInt ( ) , fs . nextInt ( )
    p , q = 0 , 0
    if a * d >= b * c :
        p = a * d - b * c
        q = a * d
    else :
        p = b * c - a * d
        q = b * c
    k = gcd ( p , q )
    p //= k
    q //= k
    print ( str ( p ) + "/" + str ( q ) )
if __name__ == "__main__" :
    main ( )


---> console_out:
1/3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 87
---> probID: geeksforgeeks_3703_A
---> inputs:

---> outputs:
4


import math
def numberOfWays ( x ) :
    dp = [ 0 ] * ( x + 1 )
    dp [ 0 ] = dp [ 1 ] = 1
    for i in range ( 2 , x + 1 ) :
        dp [ i ] = dp [ i - 1 ] + ( i - 1 ) * dp [ i - 2 ]
    return dp [ x ]
x = 3
print ( numberOfWays ( x ) )


---> console_out:
4
 
MATCHED!! :D
  5%|▍         | 87/1746 [00:07<01:56, 14.19it/s]  File "./junk/1703783692942_2821/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  103070405060208090


-------------------------------------


---> lineNum: 88
---> probID: geeksforgeeks_4403_A
---> inputs:

---> outputs:
[-1, -3, -7, 4, 5, 6, 2, 8, 9]


import java . util . * ;
public class GFG { static void rearrange ( int [ ] arr , int n ) { int j = 0 , temp ; for ( int i = 0 ; i < n ; i + + ) { if ( arr [ i ] < 0 ) { if ( i != j ) { temp = arr [ i ] ; arr [ i ] = arr [ j ] ; arr [ j ] = temp ; } j + + ; } } } public static void main ( String [ ] args ) { int [ ] arr = { - 1 , 2 , - 3 , 4 , 5 , 6 , - 7 , 8 , 9 } ; int n = arr . length ; rearrange ( arr , n ) ; System . out . println ( Arrays . toString ( arr ) ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 89
---> probID: geeksforgeeks_1727_A
---> inputs:

---> outputs:
7th Centered square number: 85


import math
def centered_square_num ( n ) :
    return n * n + ( ( n - 1 ) * ( n - 1 ) )
n = 7
print ( str ( n ) + "th Centered square number: " + str ( centered_square_num ( n ) ) )


---> console_out:
7th Centered square number: 85
 
MATCHED!! :D
  5%|▌         | 89/1746 [00:07<01:58, 14.01it/s]Traceback (most recent call last):
  File "./junk/1703783693089_2767/main.py", line 17, in <module>
    o = teest ( )
  File "./junk/1703783693089_2767/main.py", line 4, in __init__
    super ( ) . __init__ ( sys . stdout . buffer )
TypeError: object.__init__() takes exactly one argument (the instance to initialize)
out1,out2  yesyesnoyesyesno


-------------------------------------


---> lineNum: 90
---> probID: codeforces_1327_A
---> inputs:
6
3 1
4 2
10 3
10 2
16 4
16 5
---> outputs:
YES
YES
NO
YES
YES
NO

import sys
class teest :
    def __init__ ( self ) :
        super ( ) . __init__ ( sys . stdout . buffer )
    def main ( self ) :
        a = input ( ) . split ( )
        t = int ( a [ 0 ] )
        i = 1
        while t > 0 :
            n , k = map ( int , a [ i : i + 2 ] )
            if n % 2 != k % 2 or n // k < k :
                print ( "NO" )
            else :
                print ( "YES" )
            t -= 1
            i += 2
o = teest ( )
o . main ( )
o . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703783693165_6584/main.py", line 5, in <module>
    nums [ i ] = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 2 3'
out1,out2  260


-------------------------------------


---> lineNum: 91
---> probID: codeforces_1248_B
---> inputs:
3
1 2 3
---> outputs:
26

import numpy as np
n = int ( input ( ) )
nums = np . zeros ( n , dtype = int )
for i in range ( n ) :
    nums [ i ] = int ( input ( ) )
nums . sort ( )
firstHalf = 0
secondHalf = 0
length = n // 2
for i in range ( length ) :
    firstHalf += nums [ i ]
for i in range ( length , n ) :
    secondHalf += nums [ i ]
result = ( firstHalf ** 2 ) + ( secondHalf ** 2 )
print ( result )


---> console_out:
 
DIDN'T MATCH!! :(
  5%|▌         | 91/1746 [00:08<02:58,  9.26it/s]

-------------------------------------


---> lineNum: 92
---> probID: geeksforgeeks_307_A
---> inputs:

---> outputs:
Length of longest subarray having maximum sum = 4


import collections
def maxSubArraySum ( arr , size ) :
    max_so_far = arr [ 0 ]
    curr_max = arr [ 0 ]
    for i in range ( 1 , size ) :
        curr_max = max ( arr [ i ] , curr_max + arr [ i ] )
        max_so_far = max ( max_so_far , curr_max )
    return max_so_far
def lenOfLongSubarrWithGivenSum ( arr , n , k ) :
    um = collections . defaultdict ( int )
    sum = 0
    maxLen = 0
    for i in range ( n ) :
        sum += arr [ i ]
        if sum == k :
            maxLen = i + 1
        if sum in um :
            um [ sum ] = i
        if sum - k in um :
            if maxLen < ( i - um [ sum - k ] ) :
                maxLen = i - um [ sum - k ]
    return maxLen
def lenLongSubarrWithMaxSum ( arr , n ) :
    maxSum = maxSubArraySum ( arr , n )
    return lenOfLongSubarrWithGivenSum ( arr , n , maxSum )
arr = [ 5 , - 2 , - 1 , 3 , - 4 ]
n = len ( arr )
print ( "Length of longest subarray having maximum sum =" , lenLongSubarrWithMaxSum ( arr , n ) )


---> console_out:
Length of longest subarray having maximum sum = 4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 93
---> probID: aizu_p01880_A
---> inputs:
2
1 2
---> outputs:
2

import math
n = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
ans = - 1
for i in range ( n ) :
    for j in range ( i + 1 , n ) :
        s = str ( a [ i ] * a [ j ] )
        f = True
        for k in range ( len ( s ) - 1 ) :
            if ord ( s [ k ] ) + 1 != ord ( s [ k + 1 ] ) :
                f = False
        if f :
            ans = max ( ans , a [ i ] * a [ j ] )
print ( ans )


---> console_out:
2
 
MATCHED!! :D
  5%|▌         | 93/1746 [00:08<02:45, 10.01it/s]out1,out2 3010 3010


-------------------------------------


---> lineNum: 94
---> probID: geeksforgeeks_2848_A
---> inputs:

---> outputs:
3, 1


def find ( dividend , divisor , start , end ) :
    if start > end :
        return [ 0 , dividend ]
    mid = start + ( end - start ) // 2
    n = dividend - divisor * mid
    if n > divisor :
        start = mid + 1
    elif n < 0 :
        end = mid - 1
    else :
        if n == divisor :
            mid += 1
            n = 0
        return [ mid , n ]
    return find ( dividend , divisor , start , end )
def divide ( dividend , divisor ) :
    return find ( dividend , divisor , 1 , dividend )
if __name__ == '__main__' :
    dividend = 10
    divisor = 3
    ans = divide ( dividend , divisor )
    print ( ans [ 0 ] , ans [ 1 ] )


---> console_out:
3 1
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783693704_1201/main.py", line 7, in <module>
    arr [ i ] = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '-5 -2 2 7'
out1,out2  301203090407050120


-------------------------------------


---> lineNum: 95
---> probID: codeforces_567_A
---> inputs:
4
-5 -2 2 7
---> outputs:
3 12
3 9
4 7
5 12

import math
size = int ( input ( ) )
min_val = 0
max_val = 0
arr = [ 0 ] * size
for i in range ( size ) :
    arr [ i ] = int ( input ( ) )
for i in range ( size ) :
    if i == 0 :
        min_val = abs ( arr [ i ] - arr [ i + 1 ] )
        max_val = abs ( arr [ i ] - arr [ size - 1 ] )
    elif i == size - 1 :
        min_val = abs ( arr [ i ] - arr [ i - 1 ] )
        max_val = abs ( arr [ i ] - arr [ 0 ] )
    elif i != 0 and i != size - 1 :
        min_val = min ( abs ( arr [ i ] - arr [ i - 1 ] ) , abs ( arr [ i ] - arr [ i + 1 ] ) )
        max_val = max ( abs ( arr [ i ] - arr [ size - 1 ] ) , abs ( arr [ i ] - arr [ 0 ] ) )
    print ( str ( min_val ) + " " + str ( max_val ) )


---> console_out:
 
DIDN'T MATCH!! :(
  5%|▌         | 95/1746 [00:08<02:29, 11.07it/s]Traceback (most recent call last):
  File "./junk/1703783693774_2732/main.py", line 1, in <module>
    import java . util . Arrays
ModuleNotFoundError: No module named 'java'
out1,out2  20


-------------------------------------


---> lineNum: 96
---> probID: codeforces_1198_A
---> inputs:
6 1
2 1 2 3 4 3
---> outputs:
2

import java . util . Arrays
import java . util . Scanner
def lg ( n ) :
    res = 0
    while n > ( 1 << res ) :
        res += 1
    return res
n = int ( input ( ) )
diskSize = int ( input ( ) ) * 8
sounds = [ int ( input ( ) ) for i in range ( n ) ]
sounds . sort ( )
distinctVals = [ ]
distinctAmt = [ ]
k = - 1
for i in range ( n ) :
    if i == 0 or sounds [ i ] > sounds [ i - 1 ] :
        distinctVals . append ( sounds [ i ] )
        distinctAmt . append ( 1 )
        k += 1
    else :
        distinctAmt [ k ] += 1
k += 1
answer = n
currAmt = distinctAmt [ 0 ]
for i in range ( k ) :
    currAmt -= distinctAmt [ i ]
    for j in range ( i , k ) :
        if j < k - 1 and n * lg ( j + 1 - i + 1 ) <= diskSize :
            currAmt += distinctAmt [ j + 1 ]
        else :
            break
    answer = min ( answer , n - currAmt )
print ( answer )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 97
---> probID: geeksforgeeks_4345_A
---> inputs:

---> outputs:
Move disk 1 from rod A to rod D
Move disk 2 from rod A to rod B
Move disk 1 from rod D to rod B
Move disk 3 from rod A to rod C
Move disk 4 from rod A to rod D
Move disk 3 from rod C to rod D
Move disk 1 from rod B to rod C
Move disk 2 from rod B to rod D
Move disk 1 from rod C to rod D


def towerOfHanoi ( n , from_rod , to_rod , aux_rod1 , aux_rod2 ) :
    if n == 0 :
        return
    if n == 1 :
        print ( "Move disk" , n , "from rod" , from_rod , "to rod" , to_rod )
        return
    towerOfHanoi ( n - 2 , from_rod , aux_rod1 , aux_rod2 , to_rod )
    print ( "Move disk" , n - 1 , "from rod" , from_rod , "to rod" , aux_rod2 )
    print ( "Move disk" , n , "from rod" , from_rod , "to rod" , to_rod )
    print ( "Move disk" , n - 1 , "from rod" , aux_rod2 , "to rod" , to_rod )
    towerOfHanoi ( n - 2 , aux_rod1 , to_rod , from_rod , aux_rod2 )
n = 4
towerOfHanoi ( n , 'A' , 'D' , 'B' , 'C' )


---> console_out:
Move disk 1 from rod A to rod D
Move disk 2 from rod A to rod B
Move disk 1 from rod D to rod B
Move disk 3 from rod A to rod C
Move disk 4 from rod A to rod D
Move disk 3 from rod C to rod D
Move disk 1 from rod B to rod C
Move disk 2 from rod B to rod D
Move disk 1 from rod C to rod D
 
MATCHED!! :D
  6%|▌         | 97/1746 [00:08<02:31, 10.90it/s]

-------------------------------------


---> lineNum: 98
---> probID: codeforces_133_B
---> inputs:
,.
---> outputs:
220

import sys
n = input ( )
res = ""
for i in range ( len ( n ) ) :
    if n [ i ] == '>' :
        res += "1000"
    elif n [ i ] == '<' :
        res += "1001"
    elif n [ i ] == '+' :
        res += "1010"
    elif n [ i ] == '-' :
        res += "1011"
    elif n [ i ] == '.' :
        res += "1100"
    elif n [ i ] == ',' :
        res += "1101"
    elif n [ i ] == '[' :
        res += "1110"
    elif n [ i ] == ']' :
        res += "1111"
k = 0
m = 0
for i in range ( len ( res ) - 1 , - 1 , - 1 ) :
    y = int ( res [ i ] )
    m += ( 2 ** k % 1000003 ) * y % 1000003
    k += 1
print ( m % 1000003 )


---> console_out:
220
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783694033_6783/main.py", line 5, in <module>
    command = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '0 blue 4'
out1,out2  10400000


-------------------------------------


---> lineNum: 99
---> probID: aizu_p02460_A
---> inputs:
8
0 blue 4
0 red 1
0 white 5
1 red
1 blue
2 red
1 black
1 red
---> outputs:
1
4
0
0

import sys
dic = { }
count = int ( input ( ) )
for i in range ( count ) :
    command = int ( input ( ) )
    if command == 0 :
        key = input ( )
        value = int ( input ( ) )
        dic [ key ] = value
    elif command == 1 :
        key = input ( )
        if key in dic :
            print ( dic [ key ] )
        else :
            print ( 0 )
    elif command == 2 :
        key = input ( )
        if key in dic :
            del dic [ key ]
sys . stdin . close ( )


---> console_out:
 
DIDN'T MATCH!! :(
  6%|▌         | 99/1746 [00:08<02:19, 11.80it/s]  File "./junk/1703783694101_5253/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax
out1,out2  200


-------------------------------------


---> lineNum: 100
---> probID: geeksforgeeks_3771_A
---> inputs:

---> outputs:
20


import java . io . * ;
class GFG { static int minSum ( int [ ] arr , int n ) { int sum = arr [ 0 ] , prev = arr [ 0 ] ; for ( int i = 1 ; i < n ; i + + ) { if ( arr [ i ] <= prev ) { prev = prev + 1 ; sum = sum + prev ; } else { sum = sum + arr [ i ] ; prev = arr [ i ] ; } } return sum ; } public static void main ( String [ ] args ) { int [ ] arr = { 2 , 2 , 3 , 5 , 6 } ; int n = arr . length ; System . out . println ( minSum ( arr , n ) ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 101
---> probID: geeksforgeeks_3564_A
---> inputs:

---> outputs:
6


import math
def findN ( k ) :
    ans = 0
    if k == 0 :
        ans = 3
    elif k == 1 :
        ans = 1
    elif k % 4 == 0 :
        ans = k
    elif k % 4 == 3 :
        ans = k - 1
    else :
        ans = - 1
    return ans
if __name__ == '__main__' :
    k = 7
    res = findN ( k )
    if res == - 1 :
        print ( "Not possible" )
    else :
        print ( res )


---> console_out:
6
 
MATCHED!! :D
  6%|▌         | 101/1746 [00:09<02:10, 12.59it/s]

-------------------------------------


---> lineNum: 102
---> probID: geeksforgeeks_326_A
---> inputs:

---> outputs:
3


import math
def subsetXOR ( arr , n , K ) :
    max_ele = arr [ 0 ]
    for i in range ( 1 , n ) :
        if arr [ i ] > max_ele :
            max_ele = arr [ i ]
    m = ( 1 << int ( math . log ( max_ele ) / math . log ( 2 ) + 1 ) ) - 1
    dp = [ [ [ 0 for k in range ( n + 1 ) ] for j in range ( m + 1 ) ] for i in range ( n + 1 ) ]
    for i in range ( n + 1 ) :
        for j in range ( m + 1 ) :
            for k in range ( n + 1 ) :
                dp [ i ] [ j ] [ k ] = 0
    for i in range ( n + 1 ) :
        dp [ i ] [ 0 ] [ 0 ] = 1
    for i in range ( 1 , n + 1 ) :
        for j in range ( m + 1 ) :
            for k in range ( n + 1 ) :
                dp [ i ] [ j ] [ k ] = dp [ i - 1 ] [ j ] [ k ]
                if k != 0 :
                    dp [ i ] [ j ] [ k ] += k * dp [ i - 1 ] [ j ^ arr [ i - 1 ] ] [ k - 1 ]
    ans = 0
    for i in range ( 1 , n + 1 ) :
        ans += dp [ n ] [ K ] [ i ]
    return ans
arr = [ 1 , 2 , 3 ]
k = 1
n = len ( arr )
print ( subsetXOR ( arr , n , k ) )


---> console_out:
3
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783694303_6391/main.py", line 2, in <module>
    D = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '2 700'
out1,out2  30


-------------------------------------


---> lineNum: 103
---> probID: atcoder_ABC104_C
---> inputs:
2 700
3 500
5 800
---> outputs:
3

import math
D = int ( input ( ) )
G = int ( input ( ) )
p = [ ]
c = [ ]
for i in range ( D ) :
    p_i , c_i = map ( int , input ( ) . split ( ) )
    p . append ( p_i )
    c . append ( c_i )
min_ans = 1001
for i in range ( int ( math . pow ( 2 , D ) ) ) :
    bit = format ( i , f'0{D}b' )
    count = 0
    ans = 0
    for j in range ( len ( bit ) ) :
        if bit [ j ] == '1' :
            count += p [ j ] * ( j + 1 ) * 100 + c [ j ]
            ans += p [ j ]
    if count < G :
        for j in range ( len ( bit ) - 1 , - 1 , - 1 ) :
            if bit [ j ] == '0' :
                l = p [ j ]
                while count < G and l > 0 :
                    count += ( j + 1 ) * 100
                    ans += 1
                    l -= 1
    if count >= G :
        min_ans = min ( ans , min_ans )
print ( min_ans )


---> console_out:
 
DIDN'T MATCH!! :(
  6%|▌         | 103/1746 [00:09<02:07, 12.93it/s]Traceback (most recent call last):
  File "./junk/1703783694380_1718/main.py", line 7, in <module>
    k += int ( input ( ) )
ValueError: invalid literal for int() with base 10: '2 5 1'
out1,out2  yesno


-------------------------------------


---> lineNum: 104
---> probID: codeforces_1436_A
---> inputs:
2
3 8
2 5 1
4 4
0 1 2 3
---> outputs:
YES
NO

import sys
n = int ( input ( ) )
for i in range ( n ) :
    k = 0
    a , b = map ( int , input ( ) . split ( ) )
    for j in range ( a ) :
        k += int ( input ( ) )
    if b == k :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703783694448_4662/main.py", line 6, in <module>
    arr . append ( int ( input ( ) ) )
ValueError: invalid literal for int() with base 10: '1 5'
out1,out2  00


-------------------------------------


---> lineNum: 105
---> probID: codeforces_768_A
---> inputs:
2
1 5
---> outputs:
0

import math
arr = [ ]
size = int ( input ( ) )
count = 0
for i in range ( size ) :
    arr . append ( int ( input ( ) ) )
arr . sort ( )
for i in range ( 1 , size - 1 ) :
    if arr [ i ] > arr [ 0 ] and arr [ i ] < arr [ size - 1 ] :
        count += 1
print ( count )


---> console_out:
 
DIDN'T MATCH!! :(
  6%|▌         | 105/1746 [00:09<02:03, 13.34it/s]

-------------------------------------


---> lineNum: 106
---> probID: geeksforgeeks_4680_A
---> inputs:

---> outputs:
1


import math
def minAbsDiff ( n ) :
    left = int ( math . pow ( 2 , int ( math . log ( n , 2 ) ) ) )
    right = left * 2
    return min ( ( n - left ) , ( right - n ) )
if __name__ == '__main__' :
    n = 15
    print ( minAbsDiff ( n ) )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 107
---> probID: geeksforgeeks_3537_A
---> inputs:

---> outputs:
Length of LCIS is 2


import numpy as np
def LCIS ( arr1 , n , arr2 , m ) :
    table = np . zeros ( m , dtype = int )
    for j in range ( m ) :
        table [ j ] = 0
    for i in range ( n ) :
        current = 0
        for j in range ( m ) :
            if arr1 [ i ] == arr2 [ j ] :
                if current + 1 > table [ j ] :
                    table [ j ] = current + 1
            if arr1 [ i ] > arr2 [ j ] :
                if table [ j ] > current :
                    current = table [ j ]
    result = 0
    for i in range ( m ) :
        if table [ i ] > result :
            result = table [ i ]
    return result
arr1 = [ 3 , 4 , 9 , 1 ]
arr2 = [ 5 , 3 , 8 , 9 , 10 , 2 , 1 ]
n = len ( arr1 )
m = len ( arr2 )
print ( "Length of LCIS is" , LCIS ( arr1 , n , arr2 , m ) )


---> console_out:
Length of LCIS is 2
 
MATCHED!! :D
  6%|▌         | 107/1746 [00:09<03:04,  8.89it/s]

-------------------------------------


---> lineNum: 108
---> probID: geeksforgeeks_4508_A
---> inputs:

---> outputs:
Total set bit count is 5


def countSetBits ( n ) :
    bitCount = 0
    for i in range ( 1 , n + 1 ) :
        bitCount += countSetBitsUtil ( i )
    return bitCount
def countSetBitsUtil ( x ) :
    if x <= 0 :
        return 0
    return ( 0 if x % 2 == 0 else 1 ) + countSetBitsUtil ( x // 2 )
if __name__ == '__main__' :
    n = 4
    print ( "Total set bit count is" , countSetBits ( n ) )


---> console_out:
Total set bit count is 5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 109
---> probID: geeksforgeeks_1639_A
---> inputs:

---> outputs:
Sorted array:
1 5 7 8 9 10 


import sys
def partition ( arr , low , high ) :
    pivot = arr [ low ]
    i = low - 1
    j = high + 1
    while True :
        i += 1
        while arr [ i ] < pivot :
            i += 1
        j -= 1
        while arr [ j ] > pivot :
            j -= 1
        if i >= j :
            return j
        temp = arr [ i ]
        arr [ i ] = arr [ j ]
        arr [ j ] = temp
def quickSort ( arr , low , high ) :
    if low < high :
        pi = partition ( arr , low , high )
        quickSort ( arr , low , pi )
        quickSort ( arr , pi + 1 , high )
def printArray ( arr , n ) :
    for i in range ( n ) :
        sys . stdout . write ( str ( arr [ i ] ) + " " )
    print ( )
if __name__ == "__main__" :
    arr = [ 10 , 7 , 8 , 9 , 1 , 5 ]
    n = len ( arr )
    quickSort ( arr , 0 , n - 1 )
    print ( "Sorted array:" )
    printArray ( arr , n )


---> console_out:
Sorted array:
1 5 7 8 9 10 
 
MATCHED!! :D
  6%|▌         | 109/1746 [00:09<02:53,  9.46it/s]

-------------------------------------


---> lineNum: 110
---> probID: geeksforgeeks_1638_A
---> inputs:

---> outputs:
Sorted array:
1 5 7 8 9 10 


import sys
def swap ( array , position1 , position2 ) :
    temp = array [ position1 ]
    array [ position1 ] = array [ position2 ]
    array [ position2 ] = temp
def partition ( arr , low , high ) :
    pivot = arr [ high ]
    i = low - 1
    for j in range ( low , high ) :
        if arr [ j ] <= pivot :
            i += 1
            swap ( arr , i , j )
    swap ( arr , i + 1 , high )
    return i + 1
def quickSort ( arr , low , high ) :
    if low < high :
        pi = partition ( arr , low , high )
        quickSort ( arr , low , pi - 1 )
        quickSort ( arr , pi + 1 , high )
def printArray ( arr ) :
    for i in range ( len ( arr ) ) :
        print ( arr [ i ] , end = " " )
    print ( )
if __name__ == "__main__" :
    arr = [ 10 , 7 , 8 , 9 , 1 , 5 ]
    n = len ( arr )
    quickSort ( arr , 0 , n - 1 )
    print ( "Sorted array:" )
    printArray ( arr )


---> console_out:
Sorted array:
1 5 7 8 9 10 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 111
---> probID: geeksforgeeks_380_A
---> inputs:

---> outputs:
0.5


def maxSubArraySum ( a , size ) :
    max_so_far = float ( '-inf' )
    max_ending_here = 0
    for i in range ( size ) :
        max_ending_here = max_ending_here + a [ i ]
        if max_so_far < max_ending_here :
            max_so_far = max_ending_here
        if max_ending_here < 0 :
            max_ending_here = 0
    return max_so_far
def minPossibleSum ( a , n , x ) :
    mxSum = maxSubArraySum ( a , n )
    sum = 0
    for i in range ( n ) :
        sum += a [ i ]
    sum = sum - mxSum + mxSum / x
    print ( sum )
if __name__ == '__main__' :
    N = 3
    X = 2
    A = [ 1 , - 2 , 3 ]
    minPossibleSum ( A , N , X )


---> console_out:
0.5
 
MATCHED!! :D
  6%|▋         | 111/1746 [00:10<02:36, 10.42it/s]Traceback (most recent call last):
  File "./junk/1703783695245_5519/main.py", line 47, in <module>
    main ( )
  File "./junk/1703783695245_5519/main.py", line 24, in main
    t = sc . nextInt ( )
  File "./junk/1703783695245_5519/main.py", line 14, in nextInt
    return int ( self . next ( ) )
  File "./junk/1703783695245_5519/main.py", line 7, in next
    while self . st is None or not self . st . hasMoreElements ( ) :
AttributeError: 'list' object has no attribute 'hasMoreElements'
out1,out2  40302010502040301060105030402010


-------------------------------------


---> lineNum: 112
---> probID: codeforces_1492_B
---> inputs:
4
4
1 2 3 4
5
1 5 2 4 3
6
4 2 5 3 6 1
1
1
---> outputs:
4 3 2 1
5 2 4 3 1
6 1 5 3 4 2
1

import sys
class FastScanner :
    def __init__ ( self ) :
        self . br = sys . stdin
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = input ( ) . split ( )
            except EOFError :
                return None
        return self . st . pop ( 0 )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return input ( )
def main ( ) :
    sc = FastScanner ( )
    out = sys . stdout
    t = sc . nextInt ( )
    while t > 0 :
        n = sc . nextInt ( )
        arr = [ 0 ] * ( n + 1 )
        indexOf = [ 0 ] * ( n + 1 )
        for i in range ( 1 , n + 1 ) :
            arr [ i ] = sc . nextInt ( )
            indexOf [ arr [ i ] ] = i
        least = n + 1
        ans = [ ]
        for e in range ( n , 0 , - 1 ) :
            ind = indexOf [ e ]
            if ind >= least :
                continue
            for j in range ( ind , least ) :
                ans . append ( arr [ j ] )
            least = ind
        for e in ans :
            out . write ( str ( e ) + " " )
        out . write ( "\n" )
        t -= 1
    out . close ( )
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 113
---> probID: geeksforgeeks_4970_A
---> inputs:

---> outputs:
1 6 8 

import sys
def printArray ( N , SUM , K ) :
    minSum = ( N * ( N + 1 ) ) // 2
    maxSum = ( N * K ) - ( N * ( N - 1 ) ) // 2
    if minSum > SUM or maxSum < SUM :
        print ( "Not Possible" )
        return
    arr = [ i for i in range ( 1 , N + 1 ) ]
    sum = minSum
    for i in range ( N , 0 , - 1 ) :
        x = sum + ( K - i )
        if x < SUM :
            sum = sum + ( K - i )
            arr [ i - 1 ] = K
            K -= 1
        else :
            arr [ i - 1 ] += ( SUM - sum )
            sum = SUM
            break
    for i in range ( N ) :
        sys . stdout . write ( str ( arr [ i ] ) + " " )
N , SUM , K = 3 , 15 , 8
printArray ( N , SUM , K )


---> console_out:
1 6 8  
MATCHED!! :D
  6%|▋         | 113/1746 [00:10<02:23, 11.36it/s]

-------------------------------------


---> lineNum: 114
---> probID: geeksforgeeks_1309_A
---> inputs:

---> outputs:
4


import math
COST = 3
def maxItems ( x , y , z ) :
    type1 = x // COST
    x %= COST
    type2 = y // COST
    y %= COST
    type3 = z // COST
    z %= COST
    type4 = min ( x , min ( y , z ) )
    maxItems = type1 + type2 + type3 + type4
    return maxItems
x = 4
y = 5
z = 6
print ( maxItems ( x , y , z ) )


---> console_out:
4
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783695450_3560/main.py", line 2, in <module>
    def run_tasks ( A : Queue [ int ] , B : Queue [ int ] ) -> int :
TypeError: 'type' object is not subscriptable
out1,out2  140


-------------------------------------


---> lineNum: 115
---> probID: geeksforgeeks_3471_A
---> inputs:

---> outputs:
14


from queue import Queue
def run_tasks ( A : Queue [ int ] , B : Queue [ int ] ) -> int :
    total_time = 0
    while not A . empty ( ) :
        x = A . queue [ 0 ]
        y = B . queue [ 0 ]
        if x == y :
            A . get ( )
            B . get ( )
            total_time += 1
        else :
            A . get ( )
            A . put ( x )
            total_time += 2
    return total_time
if __name__ == '__main__' :
    A = Queue ( )
    A . put ( 3 )
    A . put ( 2 )
    A . put ( 1 )
    A . put ( 4 )
    B = Queue ( )
    B . put ( 4 )
    B . put ( 1 )
    B . put ( 3 )
    B . put ( 2 )
    print ( run_tasks ( A , B ) )


---> console_out:
 
DIDN'T MATCH!! :(
  7%|▋         | 115/1746 [00:10<02:13, 12.22it/s]

-------------------------------------


---> lineNum: 116
---> probID: geeksforgeeks_3465_A
---> inputs:

---> outputs:
3.0x + 4.0y = 24.0


def line ( x0 , y0 ) :
    c = int ( 2 * y0 * x0 )
    print ( "{:.1f}x + {:.1f}y = {:.1f}" . format ( y0 , x0 , c ) )
x0 = 4
y0 = 3
line ( x0 , y0 )


---> console_out:
3.0x + 4.0y = 24.0
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783695586_2722/main.py", line 9, in <module>
    x [ c ] += 1
IndexError: list index out of range
out1,out2  20


-------------------------------------


---> lineNum: 117
---> probID: codeforces_975_A
---> inputs:
5
a aa aaa ab abb
---> outputs:
2

import string
n = int ( input ( ) )
set = set ( )
for i in range ( n ) :
    s = input ( )
    x = [ 0 ] * 26
    for j in range ( len ( s ) ) :
        c = ord ( s [ j ] ) - ord ( 'a' )
        x [ c ] += 1
    s1 = ""
    for j in range ( 26 ) :
        if x [ j ] > 0 :
            s1 += chr ( j + ord ( 'a' ) )
    set . add ( s1 )
print ( len ( set ) )


---> console_out:
 
DIDN'T MATCH!! :(
  7%|▋         | 117/1746 [00:10<02:08, 12.70it/s]  File "./junk/1703783695662_9261/main.py", line 5
    in_ = util . Scanner ( System . in )
                                    ^
SyntaxError: invalid syntax
out1,out2  101000


-------------------------------------


---> lineNum: 118
---> probID: aizu_p02294_A
---> inputs:
3
0 0 3 0 1 1 2 -1
0 0 3 0 3 1 3 -1
0 0 3 0 3 -2 5 0
---> outputs:
1
1
0

from java . awt . geom import Line2D
import java . util as util
class Main :
    def __init__ ( self ) :
        in_ = util . Scanner ( System . in )
        q = in_ . nextInt ( )
        for i in range ( q ) :
            CGL_2B ( ) . doIt ( )
class CGL_2B :
    def doIt ( self ) :
        in_ = util . Scanner ( System . in )
        l1 = Line2D . Double ( in_ . nextDouble ( ) , in_ . nextDouble ( ) , in_ . nextDouble ( ) , in_ . nextDouble ( ) )
        l2 = Line2D . Double ( in_ . nextDouble ( ) , in_ . nextDouble ( ) , in_ . nextDouble ( ) , in_ . nextDouble ( ) )
        if l1 . intersectsLine ( l2 ) :
            print ( "1" )
        else :
            print ( "0" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 119
---> probID: geeksforgeeks_2741_A
---> inputs:

---> outputs:
YES


import collections
def isAnyNotPalindrome ( s ) :
    unique = set ( s )
    if len ( unique ) > 1 :
        return True
    else :
        return False
if __name__ == '__main__' :
    s = "aaaaab"
    if isAnyNotPalindrome ( s ) :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
YES
 
MATCHED!! :D
  7%|▋         | 119/1746 [00:10<02:01, 13.35it/s]

-------------------------------------


---> lineNum: 120
---> probID: geeksforgeeks_4773_A
---> inputs:

---> outputs:
2


def findMajority ( arr , n ) :
    return arr [ n // 2 ]
if __name__ == '__main__' :
    arr = [ 1 , 2 , 2 , 3 ]
    n = len ( arr )
    print ( findMajority ( arr , n ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 121
---> probID: codeforces_750_B
---> inputs:
5
7500 South
10000 East
3500 North
4444 West
4000 North
---> outputs:
YES

import math
import heapq
nodeColors = [ ]
visited = [ ]
neighborstring = [ ]
startIndices = [ ]
edgesToPrint = [ ]
mod = 998244353
parents = [ ]
cycleSet = set ( )
neighborPriority = [ ]
minPointsToEnterRoom = [ ]
maxPointsToEnterRoom = [ ]
pointOfEachRoom = [ ]
neighbors = [ ]
memo = [ ]
count = int ( input ( ) )
pos = 0
for i in range ( count ) :
    s = input ( ) . split ( )
    no = int ( s [ 0 ] )
    if s [ 1 ] == "South" :
        pos += no
        if pos > 20000 :
            break
    elif s [ 1 ] == "North" :
        pos -= no
        if pos < 0 :
            break
    else :
        if pos == 0 or pos == 20000 :
            pos = 1
            break
if pos == 0 :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
YES
 
MATCHED!! :D
  7%|▋         | 121/1746 [00:10<01:58, 13.76it/s]

-------------------------------------


---> lineNum: 122
---> probID: geeksforgeeks_625_A
---> inputs:

---> outputs:
2


import numpy as np
def countSubArrays ( arr , n , K ) :
    count = 0
    for i in range ( n ) :
        for j in range ( i , n ) :
            bitwise_or = 0
            for k in range ( i , j + 1 ) :
                bitwise_or = np . bitwise_or ( bitwise_or , arr [ k ] )
            if bitwise_or >= K :
                count += 1
    return count
arr = np . array ( [ 3 , 4 , 5 ] )
n = arr . size
k = 6
print ( countSubArrays ( arr , n , k ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 123
---> probID: geeksforgeeks_4766_A
---> inputs:

---> outputs:
Yes


import numpy as np
def canBeEqual ( a , b , c , k ) :
    arr = np . array ( [ a , b , c ] )
    arr . sort ( )
    diff = 2 * arr [ 2 ] - arr [ 1 ] - arr [ 0 ]
    k = k - diff
    if k < 0 or k % 3 != 0 :
        return False
    return True
a1 , b1 , c1 , k1 = 6 , 3 , 2 , 7
if canBeEqual ( a1 , b1 , c1 , k1 ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
  7%|▋         | 123/1746 [00:11<03:40,  7.37it/s]

-------------------------------------


---> lineNum: 124
---> probID: geeksforgeeks_4841_A
---> inputs:

---> outputs:
The node 1 has 4 leaf nodes
The node 2 has 1 leaf nodes
The node 3 has 3 leaf nodes
The node 4 has 1 leaf nodes
The node 5 has 1 leaf nodes
The node 6 has 1 leaf nodes


import numpy as np
adjacency = [ [ ] for i in range ( 7 ) ]
def insert ( x , y ) :
    adjacency [ x ] . append ( y )
def dfs ( node , leaf , vis ) :
    leaf [ node ] = 0
    vis [ node ] = 1
    for it in adjacency [ node ] :
        if vis [ it ] == 0 :
            dfs ( it , leaf , vis )
            leaf [ node ] += leaf [ it ]
    if len ( adjacency [ node ] ) == 0 :
        leaf [ node ] = 1
def printLeaf ( n , leaf ) :
    for i in range ( 1 , n + 1 ) :
        print ( "The node" , i , "has" , leaf [ i ] , "leaf nodes" )
if __name__ == '__main__' :
    N = 6
    leaf = np . zeros ( N + 1 , dtype = int )
    vis = np . zeros ( N + 1 , dtype = int )
    insert ( 1 , 2 )
    insert ( 1 , 3 )
    insert ( 3 , 4 )
    insert ( 3 , 5 )
    insert ( 3 , 6 )
    dfs ( 1 , leaf , vis )
    printLeaf ( N , leaf )


---> console_out:
The node 1 has 4 leaf nodes
The node 2 has 1 leaf nodes
The node 3 has 3 leaf nodes
The node 4 has 1 leaf nodes
The node 5 has 1 leaf nodes
The node 6 has 1 leaf nodes
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783696767_3008/main.py", line 2, in <module>
    v , n = input ( ) . split ( )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2  10


-------------------------------------


---> lineNum: 125
---> probID: atcoder_ABC106_C
---> inputs:
1
1
---> outputs:
1

import sys
v , n = input ( ) . split ( )
n = int ( n )
for i in range ( min ( len ( v ) , n ) ) :
    if v [ i ] != '1' :
        print ( v [ i ] )
        sys . exit ( )
print ( '1' )


---> console_out:
 
DIDN'T MATCH!! :(
  7%|▋         | 125/1746 [00:11<03:56,  6.86it/s]  File "./junk/1703783696833_4094/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  60


-------------------------------------


---> lineNum: 126
---> probID: codeforces_408_B
---> inputs:
aaabbac
aabbccac
---> outputs:
6

import java . util . * ;
public class Garland { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; String s1 = s . next ( ) ; String s2 = s . next ( ) ; if ( ! isValid ( s1 , s2 ) ) { System . out . println ( - 1 ) ; } else { HashMap < Character , Integer > m1 = new HashMap < > ( ) ; HashMap < Character , Integer > m2 = new HashMap < > ( ) ; for ( char c : s1 . toCharArray ( ) ) { if ( m1 . containsKey ( c ) ) { m1 . put ( c , m1 . get ( c ) + 1 ) ; } else { m1 . put ( c , 1 ) ; } } for ( char c : s2 . toCharArray ( ) ) { if ( m2 . containsKey ( c ) ) { m2 . put ( c , m2 . get ( c ) + 1 ) ; } else { m2 . put ( c , 1 ) ; } } int ans = 0 ; HashSet < Character > hs = new HashSet < > ( ) ; for ( char c : s2 . toCharArray ( ) ) { if ( ! hs . contains ( c ) ) { hs . add ( c ) ; int x1 = m1 . get ( c ) ; int x2 = m2 . get ( c ) ; x1 = Math . min ( x1 , x2 ) ; ans += x1 ; } } System . out . println ( ans ) ; } } public static boolean isValid ( String s1 , String s2 ) { int n1 = s1 . length ( ) ; int n2 = s2 . length ( ) ; HashMap < Character , Boolean > map = new HashMap < > ( ) ; for ( char c : s1 . toCharArray ( ) ) { map . put ( c , true ) ; } for ( char c : s2 . toCharArray ( ) ) { if ( ! map . containsKey ( c ) ) return false ; } return true ; } }


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 127
---> probID: geeksforgeeks_2667_A
---> inputs:

---> outputs:
Length of LCS is 2


def lcsOf3 ( X , Y , Z , m , n , o ) :
    L = [ [ [ 0 for _ in range ( o + 1 ) ] for _ in range ( n + 1 ) ] for _ in range ( m + 1 ) ]
    for i in range ( m + 1 ) :
        for j in range ( n + 1 ) :
            for k in range ( o + 1 ) :
                if i == 0 or j == 0 or k == 0 :
                    L [ i ] [ j ] [ k ] = 0
                elif X [ i - 1 ] == Y [ j - 1 ] and X [ i - 1 ] == Z [ k - 1 ] :
                    L [ i ] [ j ] [ k ] = L [ i - 1 ] [ j - 1 ] [ k - 1 ] + 1
                else :
                    L [ i ] [ j ] [ k ] = max ( L [ i - 1 ] [ j ] [ k ] , L [ i ] [ j - 1 ] [ k ] , L [ i ] [ j ] [ k - 1 ] )
    return L [ m ] [ n ] [ o ]
X = "AGGT12"
Y = "12TXAYB"
Z = "12XBA"
m = len ( X )
n = len ( Y )
o = len ( Z )
print ( "Length of LCS is" , lcsOf3 ( X , Y , Z , m , n , o ) )


---> console_out:
Length of LCS is 2
 
MATCHED!! :D
  7%|▋         | 127/1746 [00:11<03:38,  7.40it/s]

-------------------------------------


---> lineNum: 128
---> probID: codeforces_596_B
---> inputs:
5
1 2 3 4 5
---> outputs:
5

import sys
n = int ( sys . stdin . readline ( ) )
arr = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
answer = abs ( arr [ 0 ] )
for i in range ( 1 , n ) :
    answer += abs ( arr [ i ] - arr [ i - 1 ] )
print ( answer )


---> console_out:
5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 129
---> probID: geeksforgeeks_3602_A
---> inputs:

---> outputs:
YES


def isSpiltPossible ( n , a ) :
    sum = 0
    c1 = 0
    for i in range ( n ) :
        sum += a [ i ]
        if a [ i ] == 1 :
            c1 += 1
    if sum % 2 != 0 :
        return False
    if ( sum // 2 ) % 2 == 0 :
        return True
    if c1 > 0 :
        return True
    else :
        return False
n = 3
a = [ 1 , 1 , 2 ]
if isSpiltPossible ( n , a ) :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
YES
 
MATCHED!! :D
  7%|▋         | 129/1746 [00:12<03:05,  8.73it/s]

-------------------------------------


---> lineNum: 130
---> probID: codeforces_933_A
---> inputs:
4
1 2 1 2
---> outputs:
4

import sys
n = int ( input ( ) )
arr = list ( map ( int , input ( ) . split ( ) ) )
dp = [ 0 ] * 5
for i in range ( n ) :
    dp [ 1 ] += 1 if arr [ i ] == 1 else 0
    dp [ 2 ] = max ( dp [ 1 ] , dp [ 2 ] + ( 1 if arr [ i ] == 2 else 0 ) )
    dp [ 3 ] = max ( dp [ 2 ] , dp [ 3 ] + ( 1 if arr [ i ] == 1 else 0 ) )
    dp [ 4 ] = max ( dp [ 3 ] , dp [ 4 ] + ( 1 if arr [ i ] == 2 else 0 ) )
print ( dp [ 4 ] )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 131
---> probID: geeksforgeeks_3743_A
---> inputs:

---> outputs:
even = 2, odd = 2


import math
def count_even_odd ( minimum , maximum , steps ) :
    a , b , even , odd = 0 , 0 , 0 , 0
    beven , aeven = True , False
    n = 2
    for i in range ( n ) :
        a = steps [ i ] [ 0 ]
        b = steps [ i ] [ 1 ]
        if not ( aeven or ( a & 1 ) > 0 ) :
            aeven = True
        if beven :
            if ( b & 1 ) > 0 :
                beven = False
        elif not ( ( a & 1 ) > 0 ) :
            if not ( ( b & 1 ) > 0 ) :
                beven = True
        else :
            if ( b & 1 ) > 0 :
                beven = True
    if beven :
        even = math . floor ( maximum / 2 ) - math . floor ( ( minimum - 1 ) / 2 )
        odd = 0
    else :
        even = math . floor ( maximum / 2 ) - math . floor ( ( minimum - 1 ) / 2 )
        odd = 0
    if not ( beven ^ aeven ) :
        even += maximum - minimum + 1 - math . floor ( maximum / 2 ) + math . floor ( ( minimum - 1 ) / 2 )
    else :
        odd += maximum - minimum + 1 - math . floor ( maximum / 2 ) + math . floor ( ( minimum - 1 ) / 2 )
    print ( "even =" , even , ", odd =" , odd )
if __name__ == "__main__" :
    minimum , maximum = 1 , 4
    steps = [ [ 1 , 2 ] , [ 3 , 4 ] ]
    count_even_odd ( minimum , maximum , steps )


---> console_out:
even = 2 , odd = 2
 
MATCHED!! :D
  8%|▊         | 131/1746 [00:12<03:05,  8.71it/s]out1,out2  60


-------------------------------------


---> lineNum: 132
---> probID: codeforces_678_A
---> inputs:
5 3
---> outputs:
6

class JohnyLikesNumbers :
    def main ( ) :
        input = input ( ) . split ( )
        n = int ( input [ 0 ] )
        k = int ( input [ 1 ] )
        print ( ( n // k + 1 ) * k )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 133
---> probID: geeksforgeeks_474_A
---> inputs:

---> outputs:
14 15 18 

import math
def printKPFNums ( A , B , K ) :
    prime = [ True ] * ( B + 1 )
    p_factors = [ 0 ] * ( B + 1 )
    for p in range ( 2 , B + 1 ) :
        if p_factors [ p ] == 0 :
            for i in range ( p , B + 1 , p ) :
                p_factors [ i ] += 1
    for i in range ( A , B + 1 ) :
        if p_factors [ i ] == K :
            print ( i , end = " " )
A , B , K = 14 , 18 , 2
printKPFNums ( A , B , K )


---> console_out:
14 15 18  
MATCHED!! :D
  8%|▊         | 133/1746 [00:12<02:49,  9.54it/s]

-------------------------------------


---> lineNum: 134
---> probID: geeksforgeeks_4139_A
---> inputs:

---> outputs:
skeeG rof skeeG

import re
def reverseWords ( str ) :
    words = re . split ( r'(\s+)' , str )
    reversed_words = [ word [ : : - 1 ] for word in words if word != ' ' ]
    return '' . join ( reversed_words )
str = "Geeks for Geeks"
print ( reverseWords ( str ) )


---> console_out:
skeeGrofskeeG
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783697703_7985/main.py", line 7, in <module>
    r = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '0 1 1 1 1'
out1,out2  30


-------------------------------------


---> lineNum: 135
---> probID: codeforces_1321_A
---> inputs:
5
1 1 1 0 0
0 1 1 1 1
---> outputs:
3

import sys
n = int ( input ( ) )
p = list ( map ( int , input ( ) . split ( ) ) )
onlyFirstSolve = 0
onlySecondSolve = 0
for i in range ( n ) :
    r = int ( input ( ) )
    if p [ i ] == 1 and r == 0 :
        onlyFirstSolve += 1
    elif p [ i ] == 0 and r == 1 :
        onlySecondSolve += 1
if onlyFirstSolve == 0 :
    print ( - 1 )
else :
    print ( ( onlySecondSolve + onlyFirstSolve ) // onlyFirstSolve )


---> console_out:
 
DIDN'T MATCH!! :(
  8%|▊         | 135/1746 [00:12<02:48,  9.53it/s]out1,out2 201010 20101020


-------------------------------------


---> lineNum: 136
---> probID: codeforces_776_B
---> inputs:
3
---> outputs:
2
1 1 2

import sys
import math
N = int ( 1e7 )
IsPrime = [ True ] * N
def Is_prime ( ) :
    global IsPrime
    IsPrime [ 0 ] = IsPrime [ 1 ] = False
    for i in range ( 2 , int ( math . sqrt ( N ) ) + 1 ) :
        if IsPrime [ i ] :
            for j in range ( i * i , N , i ) :
                IsPrime [ j ] = False
class IRead :
    def __init__ ( self ) :
        self . Br = sys . stdin
        self . st = ""
    def next ( self ) :
        while not self . st or len ( self . st . split ( ) ) == 0 :
            self . st = self . Br . readline ( )
        ret = self . st . split ( ) [ 0 ]
        self . st = " " . join ( self . st . split ( ) [ 1 : ] )
        return ret
    def nextInt ( self ) :
        return int ( self . next ( ) )
def main ( ) :
    input = IRead ( )
    out = sys . stdout
    n = input . nextInt ( )
    Is_prime ( )
    x = 1 if n <= 2 else 2
    n += 1
    out . write ( str ( x ) + "\n" )
    for i in range ( 2 , n ) :
        if IsPrime [ i ] :
            out . write ( "1 " )
        else :
            out . write ( "2 " )
    out . close ( )
if __name__ == "__main__" :
    main ( )


---> console_out:
2
1 1  
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 137
---> probID: aizu_p00087_A
---> inputs:
10 2 12 - /
3 4 - 7 2 3 * + *
-1 -2 3 + +
---> outputs:
-1.000000
-13.000000
0.000000

import sys
h = 0
w = 0
c = 0
ans = 0
count = 0
color_order = [ ]
map = [ ]
tmp = [ ]
for line in sys . stdin :
    ns = line . split ( )
    stack = [ ]
    for i in range ( len ( ns ) ) :
        if len ( ns [ i ] ) > 1 :
            stack . append ( float ( ns [ i ] ) )
        else :
            sw = ns [ i ] [ 0 ]
            if sw . isdigit ( ) :
                stack . append ( float ( ns [ i ] ) )
            elif sw == '+' :
                x = stack . pop ( )
                y = stack . pop ( )
                stack . append ( x + y )
            elif sw == '-' :
                x = stack . pop ( )
                y = stack . pop ( )
                stack . append ( y - x )
            elif sw == '*' :
                x = stack . pop ( )
                y = stack . pop ( )
                stack . append ( y * x )
            elif sw == '/' :
                x = stack . pop ( )
                y = stack . pop ( )
                stack . append ( y / x )
    ans = stack . pop ( )
    print ( "{:.6f}" . format ( ans ) )


---> console_out:
-1.000000
-13.000000
0.000000
 
MATCHED!! :D
  8%|▊         | 137/1746 [00:15<13:04,  2.05it/s]

-------------------------------------


---> lineNum: 138
---> probID: codeforces_1036_A
---> inputs:
4 3
---> outputs:
1

import sys
n , k = map ( int , sys . stdin . readline ( ) . split ( ) )
if n >= k :
    print ( 1 )
else :
    if k % n == 0 :
        print ( k // n )
    else :
        print ( k // n + 1 )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 139
---> probID: geeksforgeeks_1833_A
---> inputs:

---> outputs:
3
32


import math
def findNthTerm ( n ) :
    if n % 2 == 0 :
        n = n // 2
        print ( int ( math . pow ( 3 , n - 1 ) ) )
    else :
        n = ( n // 2 ) + 1
        print ( int ( math . pow ( 2 , n - 1 ) ) )
N = 4
findNthTerm ( N )
N = 11
findNthTerm ( N )


---> console_out:
3
32
 
MATCHED!! :D
  8%|▊         | 139/1746 [00:15<09:48,  2.73it/s]

-------------------------------------


---> lineNum: 140
---> probID: geeksforgeeks_1568_A
---> inputs:

---> outputs:
8


def countNonIncreasing ( arr , n ) :
    cnt = 0
    len = 1
    for i in range ( n - 1 ) :
        if arr [ i + 1 ] >= arr [ i ] :
            len += 1
        else :
            cnt += ( ( ( len + 1 ) * len ) // 2 )
            len = 1
    if len > 1 :
        cnt += ( ( ( len - 1 ) * len ) // 2 )
    return cnt
arr = [ 5 , 2 , 3 , 7 , 1 , 1 ]
n = len ( arr )
print ( countNonIncreasing ( arr , n ) )


---> console_out:
8
 
MATCHED!! :D
out1,out2 210 210


-------------------------------------


---> lineNum: 141
---> probID: geeksforgeeks_2522_A
---> inputs:

---> outputs:
21


import numpy as np
def maximize ( A1 , A2 , n , x , y ) :
    c = np . zeros ( n )
    sum = 0
    for i in range ( n ) :
        c [ i ] = A2 [ i ] - A1 [ i ]
        sum += A1 [ i ]
    for i in range ( n - 1 ) :
        if c [ i ] < c [ i + 1 ] :
            temp = c [ i ]
            c [ i ] = c [ i + 1 ]
            c [ i + 1 ] = temp
    maxi = - 1
    for i in range ( n ) :
        sum += c [ i ]
        if i + 1 >= ( n - x ) :
            maxi = max ( sum , maxi )
    return maxi
A1 = [ 1 , 2 , 3 , 4 , 5 ]
A2 = [ 5 , 4 , 3 , 2 , 1 ]
n = 5
x = 3
y = 3
print ( maximize ( A1 , A2 , n , x , y ) )


---> console_out:
21.0
 
MATCHED!! :D
  8%|▊         | 141/1746 [00:15<08:12,  3.26it/s]

-------------------------------------


---> lineNum: 142
---> probID: codeforces_1433_A
---> inputs:
4
22
9999
1
777
---> outputs:
13
90
1
66

import sys
t = int ( input ( ) )
for _ in range ( t ) :
    x = int ( input ( ) )
    s = str ( x )
    extra = len ( s )
    temp = int ( s [ 0 ] )
    ans = 0
    for i in range ( 1 , temp ) :
        ans += 10
    ans += ( extra ) * ( extra + 1 ) // 2
    print ( ans )


---> console_out:
13
90
1
66
 
MATCHED!! :D


-------------------------------------


---> lineNum: 143
---> probID: aizu_p00117_A
---> inputs:
6
8
1,2,2,2 
1,3,4,3 
1,4,4,2 
2,5,3,2 
3,4,4,2 
3,6,1,2 
4,6,1,1 
5,6,1,2 
2,4,50,30
---> outputs:
11

import sys
INFINITY = sys . maxsize // 2
N = int ( input ( ) )
K = [ [ INFINITY for j in range ( N ) ] for i in range ( N ) ]
m = int ( input ( ) )
for i in range ( m ) :
    a , b , c , d = map ( int , input ( ) . strip ( ) . split ( "," ) )
    K [ a - 1 ] [ b - 1 ] = c
    K [ b - 1 ] [ a - 1 ] = d
start , goal , V , P = map ( int , input ( ) . strip ( ) . split ( "," ) )
for k in range ( N ) :
    for i in range ( N ) :
        for j in range ( N ) :
            if K [ i ] [ j ] > K [ i ] [ k ] + K [ k ] [ j ] :
                K [ i ] [ j ] = K [ i ] [ k ] + K [ k ] [ j ]
print ( V - P - K [ start - 1 ] [ goal - 1 ] - K [ goal - 1 ] [ start - 1 ] )


---> console_out:
11
 
MATCHED!! :D
  8%|▊         | 143/1746 [00:16<06:19,  4.22it/s]Traceback (most recent call last):
  File "./junk/1703783701202_9326/main.py", line 2, in <module>
    r1 , r2 , c1 , c2 , d1 , d2 = map ( int , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 6, got 2)
out1,out2  10203040


-------------------------------------


---> lineNum: 144
---> probID: codeforces_143_A
---> inputs:
3 7
4 6
5 5
---> outputs:
1 2
3 4

import sys
r1 , r2 , c1 , c2 , d1 , d2 = map ( int , input ( ) . split ( ) )
if ( c1 + c2 - r1 - r2 ) != 0 or ( d1 + d2 - r1 - r2 ) != 0 :
    print ( - 1 )
else :
    flag = True
    t = ( r2 - d2 + c2 ) // 2
    z = d2 - c2 + t
    y = c2 - t
    x = r1 + r2 - y - z - t
    box = [ x , y , z , t ]
    for gem in box :
        if gem > 9 or gem < 1 :
            flag = False
            break
    if x == y or x == z or x == t or y == z or y == t or z == t :
        flag = False
    if flag :
        print ( x , y )
        print ( z , t )
    else :
        print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 145
---> probID: aizu_p01119_A
---> inputs:
4 2
9 2 7 11
2 9
6 2
7 3 6 12 16 9
2 9
5 2
7 3 6 12 17
2 9
7 5
15 21 33 48 51 75 111
36 54 57 93 113
0 0
---> outputs:
0
5
-1
5

import sys
def calcNearestWeight ( x , w , i , s , additions ) :
    if x == s :
        return True
    if i == len ( w ) :
        additions . add ( abs ( x - s ) )
        return False
    if calcNearestWeight ( x , w , i + 1 , s , additions ) :
        return True
    if calcNearestWeight ( x , w , i + 1 , s + w [ i ] , additions ) :
        return True
    return calcNearestWeight ( x , w , i + 1 , s - w [ i ] , additions )
for line in sys . stdin :
    n , m = map ( int , line . split ( ) )
    if n == 0 and m == 0 :
        break
    a = list ( map ( int , input ( ) . split ( ) ) )
    w = list ( map ( int , input ( ) . split ( ) ) )
    commonAdditions = None
    for i in range ( n ) :
        additions = set ( )
        bJust = calcNearestWeight ( a [ i ] , w , 0 , 0 , additions )
        if not bJust :
            if commonAdditions is None :
                commonAdditions = additions
            else :
                commonAdditions . intersection_update ( additions )
    if commonAdditions is None :
        print ( 0 )
    else :
        if len ( commonAdditions ) > 0 :
            print ( sorted ( commonAdditions ) [ 0 ] )
        else :
            print ( - 1 )


---> console_out:
0
5
-1
5
 
MATCHED!! :D
  8%|▊         | 145/1746 [00:16<04:58,  5.37it/s]

-------------------------------------


---> lineNum: 146
---> probID: codeforces_1042_B
---> inputs:
4
5 C
6 B
16 BAC
4 A
---> outputs:
15

import sys
mod = int ( 1e9 + 7 )
def main ( ) :
    N = int ( input ( ) )
    dp = [ sys . maxsize ] * ( 1 << 3 )
    dp [ 0 ] = 0
    for i in range ( N ) :
        price , s = input ( ) . split ( )
        price = int ( price )
        mask = 0
        if "A" in s :
            mask |= 1
        if "B" in s :
            mask |= 2
        if "C" in s :
            mask |= 4
        for k in range ( 1 << 3 ) :
            if dp [ k ] != sys . maxsize :
                t = k | mask
                dp [ t ] = min ( dp [ t ] , dp [ k ] + price )
    if dp [ 7 ] == sys . maxsize :
        print ( - 1 )
    else :
        print ( dp [ 7 ] )
if __name__ == "__main__" :
    main ( )


---> console_out:
15
 
MATCHED!! :D


-------------------------------------


---> lineNum: 147
---> probID: geeksforgeeks_2761_A
---> inputs:

---> outputs:
Yes


def startsWith ( str , pre ) :
    strLen = len ( str )
    preLen = len ( pre )
    i = 0
    j = 0
    while i < strLen and j < preLen :
        if str [ i ] != pre [ j ] :
            return False
        i += 1
        j += 1
    return True
def endsWith ( str , suff ) :
    i = len ( str ) - 1
    j = len ( suff ) - 1
    while i >= 0 and j >= 0 :
        if str [ i ] != suff [ j ] :
            return False
        i -= 1
        j -= 1
    return True
def checkString ( str , a , b ) :
    if len ( str ) != len ( a ) + len ( b ) :
        return False
    if startsWith ( str , a ) :
        if endsWith ( str , b ) :
            return True
    if startsWith ( str , b ) :
        if endsWith ( str , a ) :
            return True
    return False
str = "GeeksforGeeks"
a = "Geeksfo"
b = "rGeeks"
if checkString ( str , a , b ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
  8%|▊         | 147/1746 [00:16<04:06,  6.50it/s]

-------------------------------------


---> lineNum: 148
---> probID: geeksforgeeks_5217_A
---> inputs:

---> outputs:
1 2 230


import sys
def printCombination ( n ) :
    for i in range ( 1 , n ) :
        if i % 3 != 0 :
            for j in range ( 1 , n ) :
                if j % 3 != 0 :
                    for k in range ( 1 , n ) :
                        if k % 3 != 0 and ( i + j + k ) == n :
                            print ( i , j , k )
                            return
if __name__ == "__main__" :
    n = 233
    printCombination ( n )


---> console_out:
1 2 230
 
MATCHED!! :D


-------------------------------------


---> lineNum: 149
---> probID: geeksforgeeks_1130_A
---> inputs:

---> outputs:
10


import math
def countIntegralSolutions ( n ) :
    result = 0
    for i in range ( n + 1 ) :
        for j in range ( n - i + 1 ) :
            for k in range ( n - i - j + 1 ) :
                if i + j + k == n :
                    result += 1
    return result
n = 3
print ( countIntegralSolutions ( n ) )


---> console_out:
10
 
MATCHED!! :D
  9%|▊         | 149/1746 [00:16<03:24,  7.82it/s]

-------------------------------------


---> lineNum: 150
---> probID: geeksforgeeks_2018_A
---> inputs:

---> outputs:
19 28 37 46 55 64 73 82 91 109 

TEN = 10
def digitSum ( n ) :
    sum = 0
    while n > 0 :
        sum += n % TEN
        n //= TEN
    return sum
def getNthTerm ( n ) :
    sum = digitSum ( n )
    if sum % TEN == 0 :
        return n * TEN
    extra = TEN - ( sum % TEN )
    return ( n * TEN ) + extra
def firstNTerms ( n ) :
    for i in range ( 1 , n + 1 ) :
        print ( getNthTerm ( i ) , end = " " )
n = 10
firstNTerms ( n )


---> console_out:
19 28 37 46 55 64 73 82 91 109  
MATCHED!! :D


-------------------------------------


---> lineNum: 151
---> probID: geeksforgeeks_4854_A
---> inputs:

---> outputs:
36


def power ( x , a ) :
    res = 1
    while a > 0 :
        if a & 1 > 0 :
            res = res * x
        x = x * x
        a >>= 1
    return res
def breakInteger ( N ) :
    if N == 2 :
        return 1
    if N == 3 :
        return 2
    maxProduct = - 1
    if N % 3 == 0 :
        maxProduct = power ( 3 , N // 3 )
    elif N % 3 == 1 :
        maxProduct = 2 * 2 * power ( 3 , ( N // 3 ) - 1 )
    elif N % 3 == 2 :
        maxProduct = 2 * power ( 3 , N // 3 )
    return maxProduct
maxProduct = breakInteger ( 10 )
print ( maxProduct )


---> console_out:
36
 
MATCHED!! :D
  9%|▊         | 151/1746 [00:16<02:54,  9.12it/s]

-------------------------------------


---> lineNum: 152
---> probID: aizu_p01403_A
---> inputs:
2
3
5
---> outputs:
5
11

import numpy as np
class Main :
    def eulerPhiTable ( self , n ) :
        res = np . arange ( n + 1 )
        p = np . ones ( n + 1 , dtype = bool )
        p [ 0 ] = p [ 1 ] = False
        for i in range ( 2 , n + 1 ) :
            if p [ i ] :
                res [ i ] -= res [ i ] // i
                for j in range ( i + i , n + 1 , i ) :
                    p [ j ] = False
                    res [ j ] -= res [ j ] // i
        return res
    def run ( self ) :
        N = 1000000
        f = self . eulerPhiTable ( N )
        res = np . zeros ( N + 1 , dtype = np . int64 )
        res [ 1 ] = 2
        for i in range ( 2 , N + 1 ) :
            res [ i ] = res [ i - 1 ] + f [ i ]
        T = int ( input ( ) )
        for _ in range ( T ) :
            print ( res [ int ( input ( ) ) ] )
if __name__ == '__main__' :
    Main ( ) . run ( )


---> console_out:
5
11
 
MATCHED!! :D
  File "./junk/1703783704587_3465/main.py", line 3
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  201801070


-------------------------------------


---> lineNum: 153
---> probID: atcoder_ABC085_A
---> inputs:
2017/01/07
---> outputs:
2018/01/07

import java . util . Scanner
def main ( args ) :
    sc = Scanner ( System . in )
    s = sc . next ( )
    sb = StringBuilder ( s )
    s = s . replace ( "2017" , "2018" )
    print ( s )


---> console_out:
 
DIDN'T MATCH!! :(
  9%|▉         | 153/1746 [00:19<13:33,  1.96it/s]

-------------------------------------


---> lineNum: 154
---> probID: geeksforgeeks_4097_A
---> inputs:

---> outputs:
a -1 b b 


from collections import deque
MAX_CHAR = 26
def firstNonRepeating ( str ) :
    charCount = [ 0 ] * MAX_CHAR
    q = deque ( )
    for ch in str :
        q . append ( ch )
        charCount [ ord ( ch ) - ord ( 'a' ) ] += 1
        while q :
            if charCount [ ord ( q [ 0 ] ) - ord ( 'a' ) ] > 1 :
                q . popleft ( )
            else :
                print ( q [ 0 ] , end = " " )
                break
        else :
            print ( - 1 , end = " " )
    print ( )
str = "aabc"
firstNonRepeating ( str )


---> console_out:
a -1 b b 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 155
---> probID: codeforces_862_B
---> inputs:
3
1 2
1 3
---> outputs:
0

import sys
class Node :
    def __init__ ( self , index ) :
        self . index = index
        self . neighbors = [ ]
        self . parity = None
def dfs ( currNode , parity ) :
    global totalFalse
    arr [ currNode ] . parity = parity
    if not parity :
        totalFalse += 1
    for nextNode in arr [ currNode ] . neighbors :
        if arr [ nextNode ] . parity is not None :
            continue
        dfs ( nextNode , not parity )
if __name__ == '__main__' :
    n = int ( input ( ) )
    arr = [ Node ( i ) for i in range ( n ) ]
    totalFalse = 0
    for i in range ( n - 1 ) :
        a , b = map ( int , input ( ) . split ( ) )
        arr [ a - 1 ] . neighbors . append ( b - 1 )
        arr [ b - 1 ] . neighbors . append ( a - 1 )
    dfs ( 0 , True )
    total = 0
    for i in range ( n ) :
        if arr [ i ] . parity :
            total += ( totalFalse - len ( arr [ i ] . neighbors ) )
    print ( total )


---> console_out:
0
 
MATCHED!! :D
  9%|▉         | 155/1746 [00:19<10:01,  2.65it/s]Traceback (most recent call last):
  File "./junk/1703783704792_8727/main.py", line 20, in <module>
    print ( solve ( n , m , obstacles , range ) )
  File "./junk/1703783704792_8727/main.py", line 6, in solve
    for i in range ( obstacles - 1 , - 1 , - 1 ) :
TypeError: 'numpy.ndarray' object is not callable
out1,out2  20


-------------------------------------


---> lineNum: 156
---> probID: geeksforgeeks_820_A
---> inputs:

---> outputs:
2


import numpy as np
def solve ( n , m , obstacles , range ) :
    val = min ( n , m )
    range = np . sort ( range )
    c = 1
    for i in range ( obstacles - 1 , - 1 , - 1 ) :
        range [ i ] = 2 * range [ i ]
        val -= range [ i ]
        if val <= 0 :
            return c
        else :
            c += 1
    if val > 0 :
        return - 1
    return 0
n = 4
m = 5
obstacles = 3
range = np . array ( [ 1.0 , 1.25 , 1.15 ] )
print ( solve ( n , m , obstacles , range ) )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1703783705059_9549/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  m


-------------------------------------


---> lineNum: 157
---> probID: aizu_p00925_A
---> inputs:
1+2*3+4
11
---> outputs:
M

import java . util . Scanner
class Main :
    def run ( self ) :
        sc = Scanner ( System . in )
        exp = sc . next ( )
        self . calc ( exp )
    def calc ( self , exp ) :
        ans1 = 0
        ans2 = int ( exp [ 0 ] )
        temp = ans2
        for i in range ( 0 , len ( exp ) // 2 ) :
            e = exp [ 2 * i + 1 ]
            k = int ( exp [ 2 * i + 2 ] )
            if e == "+" :
                ans2 += k
                ans1 += temp
                temp = k
            else :
                ans2 *= k
                temp *= k
        ans1 += temp
        bob_ans = int ( input ( ) )
        output = ""
        if bob_ans == ans1 :
            if bob_ans == ans2 :
                output = "U"
            else :
                output = "M"
        elif bob_ans == ans2 :
            output = "L"
        else :
            output = "I"
        print ( output )
if __name__ == "__main__" :
    Main ( ) . run ( )


---> console_out:
 
DIDN'T MATCH!! :(
  9%|▉         | 157/1746 [00:19<08:20,  3.18it/s]

-------------------------------------


---> lineNum: 158
---> probID: leetcode_155_A
---> inputs:

---> outputs:
-3
0
-2

import queue
class MinStack :
    def __init__ ( self ) :
        self . stack = queue . LifoQueue ( )
        self . minStack = queue . LifoQueue ( )
    def push ( self , x : int ) -> None :
        self . stack . put ( x )
        if self . minStack . qsize ( ) == 0 or x <= self . minStack . queue [ - 1 ] :
            self . minStack . put ( x )
        else :
            self . minStack . put ( self . minStack . queue [ - 1 ] )
    def pop ( self ) -> None :
        self . stack . get ( )
        self . minStack . get ( )
    def top ( self ) -> int :
        return self . stack . queue [ - 1 ]
    def getMin ( self ) -> int :
        return self . minStack . queue [ - 1 ]
m = MinStack ( )
m . push ( - 2 )
m . push ( 0 )
m . push ( - 3 )
print ( m . getMin ( ) )
m . pop ( )
print ( m . top ( ) )
print ( m . getMin ( ) )


---> console_out:
-3
0
-2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 159
---> probID: geeksforgeeks_4470_A
---> inputs:

---> outputs:
forty three crore eighty two lakh thirty seven thousand seven hundred and sixty four 


one = [ "" , "one " , "two " , "three " , "four " , "five " , "six " , "seven " , "eight " , "nine " , "ten " , "eleven " , "twelve " , "thirteen " , "fourteen " , "fifteen " , "sixteen " , "seventeen " , "eighteen " , "nineteen " ]
ten = [ "" , "" , "twenty " , "thirty " , "forty " , "fifty " , "sixty " , "seventy " , "eighty " , "ninety " ]
def numToWords ( n , s ) :
    str = ""
    if n > 19 :
        str += ten [ n // 10 ] + one [ n % 10 ]
    else :
        str += one [ n ]
    if n != 0 :
        str += s
    return str
def convertToWords ( n ) :
    out = ""
    out += numToWords ( int ( n // 10000000 ) , "crore " )
    out += numToWords ( int ( ( n // 100000 ) % 100 ) , "lakh " )
    out += numToWords ( int ( ( n // 1000 ) % 100 ) , "thousand " )
    out += numToWords ( int ( ( n // 100 ) % 10 ) , "hundred " )
    if n > 100 and n % 100 > 0 :
        out += "and "
    out += numToWords ( int ( n % 100 ) , "" )
    return out
n = 438237764
print ( convertToWords ( n ) )


---> console_out:
forty three crore eighty two lakh thirty seven thousand seven hundred and sixty four 
 
MATCHED!! :D
  9%|▉         | 159/1746 [00:20<06:20,  4.17it/s]

-------------------------------------


---> lineNum: 160
---> probID: geeksforgeeks_3446_A
---> inputs:

---> outputs:
Subtraction is 6
Product is -54
Division is 4


def flipSign ( a ) :
    neg = 0
    tmp = 1 if a < 0 else - 1
    while a != 0 :
        neg += tmp
        a += tmp
    return neg
def areDifferentSign ( a , b ) :
    return ( a < 0 and b > 0 ) or ( a > 0 and b < 0 )
def sub ( a , b ) :
    return a + flipSign ( b )
def mul ( a , b ) :
    if a < b :
        return mul ( b , a )
    sum = 0
    for i in range ( abs ( b ) , 0 , - 1 ) :
        sum += a
    if b < 0 :
        sum = flipSign ( sum )
    return sum
def division ( a , b ) :
    if b == 0 :
        raise ArithmeticError
    quotient = 0
    dividend = abs ( a )
    divisor = flipSign ( abs ( b ) )
    while dividend >= abs ( divisor ) :
        dividend += divisor
        quotient += 1
    if areDifferentSign ( a , b ) :
        quotient = flipSign ( quotient )
    return quotient
if __name__ == '__main__' :
    print ( "Subtraction is" , sub ( 4 , - 2 ) )
    print ( "Product is" , mul ( - 9 , 6 ) )
    try :
        print ( "Division is" , division ( 8 , 2 ) )
    except ArithmeticError :
        print ( "Exception :- Divide by 0" )


---> console_out:
Subtraction is 6
Product is -54
Division is 4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 161
---> probID: geeksforgeeks_3995_A
---> inputs:

---> outputs:
Factorial of 5 is 120


class Test :
    @ staticmethod
    def factorial ( n ) :
        i , fact = n , 1
        while n // i != n :
            fact *= i
            i -= 1
        return fact
    @ staticmethod
    def main ( args ) :
        num = 5
        print ( "Factorial of" , num , "is" , Test . factorial ( 5 ) )
Test . main ( None )


---> console_out:
Factorial of 5 is 120
 
MATCHED!! :D
  9%|▉         | 161/1746 [00:20<04:57,  5.34it/s]

-------------------------------------


---> lineNum: 162
---> probID: geeksforgeeks_5230_A
---> inputs:

---> outputs:
3


def CntDivbyX ( arr , n , x ) :
    number = 0
    count = 0
    for i in range ( n ) :
        number = number * 2 + arr [ i ]
        if number % x == 0 :
            count += 1
    return count
if __name__ == '__main__' :
    arr = [ 1 , 0 , 1 , 0 , 1 , 1 , 0 ]
    n = len ( arr )
    x = 2
    print ( CntDivbyX ( arr , n , x ) )


---> console_out:
3
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783705470_6334/main.py", line 5, in <module>
    a = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 2 4'
out1,out2  30


-------------------------------------


---> lineNum: 163
---> probID: codeforces_272_B
---> inputs:
3
1 2 4
---> outputs:
3

import sys
N = int ( input ( ) )
stat = [ 0 ] * 30
for n in range ( N ) :
    a = int ( input ( ) )
    stat [ bin ( a ) . count ( '1' ) ] += 1
answer = 0
for count in stat :
    answer += count * ( count - 1 )
answer //= 2
print ( answer )


---> console_out:
 
DIDN'T MATCH!! :(
  9%|▉         | 163/1746 [00:20<04:02,  6.52it/s]

-------------------------------------


---> lineNum: 164
---> probID: geeksforgeeks_3386_A
---> inputs:

---> outputs:
3


import math
def min_noOf_operation ( arr , n , k ) :
    noOfSubtraction = 0
    res = 0
    for i in range ( 1 , n ) :
        noOfSubtraction = 0
        if arr [ i ] > arr [ i - 1 ] :
            noOfSubtraction = math . ceil ( ( arr [ i ] - arr [ i - 1 ] ) / k )
            arr [ i ] = arr [ i ] - k * noOfSubtraction
        res = res + noOfSubtraction
    return res
if __name__ == "__main__" :
    arr = [ 1 , 1 , 2 , 3 ]
    N = 4
    k = 5
    print ( min_noOf_operation ( arr , N , k ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 165
---> probID: geeksforgeeks_327_A
---> inputs:

---> outputs:
8


def CountSubSet ( arr , n , X ) :
    N = 2 ** n
    count = 0
    for i in range ( N ) :
        for j in range ( n ) :
            if ( i & ( 1 << j ) ) != 0 :
                if arr [ j ] == X :
                    count += 1
    return count
if __name__ == '__main__' :
    arr = [ 4 , 5 , 6 , 7 ]
    X = 5
    n = len ( arr )
    print ( CountSubSet ( arr , n , X ) )


---> console_out:
8
 
MATCHED!! :D
  9%|▉         | 165/1746 [00:20<03:23,  7.79it/s]

-------------------------------------


---> lineNum: 166
---> probID: geeksforgeeks_3344_A
---> inputs:

---> outputs:
3024


n = 5
def FindMaxProduct ( arr , n ) :
    max = 0
    for i in range ( n ) :
        for j in range ( n ) :
            if ( j - 3 ) >= 0 :
                result = arr [ i ] [ j ] * arr [ i ] [ j - 1 ] * arr [ i ] [ j - 2 ] * arr [ i ] [ j - 3 ]
                if max < result :
                    max = result
            if ( i - 3 ) >= 0 :
                result = arr [ i ] [ j ] * arr [ i - 1 ] [ j ] * arr [ i - 2 ] [ j ] * arr [ i - 3 ] [ j ]
                if max < result :
                    max = result
            if ( i - 3 ) >= 0 and ( j - 3 ) >= 0 :
                result = arr [ i ] [ j ] * arr [ i - 1 ] [ j - 1 ] * arr [ i - 2 ] [ j - 2 ] * arr [ i - 3 ] [ j - 3 ]
                if max < result :
                    max = result
            if ( i - 3 ) >= 0 and ( j - 1 ) <= 0 :
                result = arr [ i ] [ j ] * arr [ i - 1 ] [ j + 1 ] * arr [ i - 2 ] [ j + 2 ] * arr [ i - 3 ] [ j + 3 ]
                if max < result :
                    max = result
    return max
arr = [ [ 1 , 2 , 3 , 4 , 5 ] , [ 6 , 7 , 8 , 9 , 1 ] , [ 2 , 3 , 4 , 5 , 6 ] , [ 7 , 8 , 9 , 1 , 0 ] , [ 9 , 6 , 4 , 2 , 3 ] ]
print ( FindMaxProduct ( arr , n ) )


---> console_out:
3024
 
MATCHED!! :D


-------------------------------------


---> lineNum: 167
---> probID: geeksforgeeks_4002_A
---> inputs:

---> outputs:
1


import math
MAX = 50002
primes = [ ]
def sieve ( ) :
    isPrime = [ True ] * MAX
    for p in range ( 2 , int ( math . sqrt ( MAX ) ) + 1 ) :
        if isPrime [ p ] :
            for i in range ( p * 2 , MAX , p ) :
                isPrime [ i ] = False
    for p in range ( 2 , MAX ) :
        if isPrime [ p ] :
            primes . append ( p )
def power ( x , y ) :
    count = 0
    z = y
    while x >= z :
        count += ( x // z )
        z *= y
    return count
def modMult ( a , b , mod ) :
    res = 0
    a = a % mod
    while b > 0 :
        if b % 2 == 1 :
            res = ( res + a ) % mod
        a = ( a * 2 ) % mod
        b //= 2
    return res % mod
def countWays ( n , m ) :
    ans = 1
    for i in range ( 1 , len ( primes ) ) :
        powers = power ( n , primes [ i ] )
        if powers == 0 :
            break
        ans = modMult ( ans , powers + 1 , m ) % m
    if ( ( ans - 1 ) % m ) < 0 :
        return ( ans - 1 + m ) % m
    else :
        return ( ans - 1 ) % m
sieve ( )
n , m = 4 , 7
print ( countWays ( n , m ) )


---> console_out:
1
 
MATCHED!! :D
 10%|▉         | 167/1746 [00:20<02:56,  8.93it/s]

-------------------------------------


---> lineNum: 168
---> probID: geeksforgeeks_5124_A
---> inputs:

---> outputs:
16


def smallestIndexsum ( arr , n ) :
    i = n - 1
    while i >= 0 and arr [ i ] % 2 == 1 :
        i -= 1
    sum = 0
    for j in range ( i + 1 ) :
        sum += arr [ j ]
    return sum
arr = [ 2 , 3 , 5 , 6 , 3 , 3 ]
n = len ( arr )
print ( smallestIndexsum ( arr , n ) )


---> console_out:
16
 
MATCHED!! :D


-------------------------------------


---> lineNum: 169
---> probID: codeforces_304_B
---> inputs:
1900:01:01
2038:12:31
---> outputs:
50768

import math
from datetime import datetime , timezone , timedelta
t1 = input ( )
t2 = input ( )
date = datetime . strptime ( t1 , "%Y:%m:%d" )
date = date . replace ( tzinfo = timezone . utc )
delta = abs ( date - datetime . strptime ( t2 , "%Y:%m:%d" ) . replace ( tzinfo = timezone . utc ) )
print ( delta . days )


---> console_out:
50768
 
MATCHED!! :D
 10%|▉         | 169/1746 [00:20<02:38,  9.96it/s]

-------------------------------------


---> lineNum: 170
---> probID: codeforces_894_A
---> inputs:
QAQAQYSYIOIWIN
---> outputs:
4

import sys
s = input ( )
count = 0
for i in range ( len ( s ) ) :
    al = [ ]
    c = s [ i ]
    if c == 'Q' :
        al . append ( c )
    for j in range ( i + 1 , len ( s ) ) :
        a = s [ j ]
        if len ( al ) > 0 :
            if al [ - 1 ] == 'Q' and a == 'A' :
                al . append ( a )
            if al [ - 1 ] == 'A' and a == 'Q' :
                al . append ( a )
            if al [ - 1 ] == 'A' and a == 'A' :
                al . append ( a )
        if len ( al ) >= 3 and al [ 0 ] == 'Q' and al [ - 1 ] == 'Q' :
            count = count + len ( al ) - 3
            al . pop ( )
print ( count )


---> console_out:
4
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783706037_4659/main.py", line 11, in <module>
    if is_needed ( mid , n , k , a ) :
NameError: name 'is_needed' is not defined
out1,out2  10


-------------------------------------


---> lineNum: 171
---> probID: atcoder_ABC056_D
---> inputs:
3 6
1 4 3
---> outputs:
1

import sys
n , k = map ( int , input ( ) . split ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
if n == 1 :
    print ( 1 if k > a [ 0 ] else 0 )
    sys . exit ( )
a . sort ( )
ng , ok = 0 , n + 1
while ok - ng > 1 :
    mid = ( ok + ng ) // 2
    if is_needed ( mid , n , k , a ) :
        ok = mid
    else :
        ng = mid
print ( ng )
def is_needed ( now , n , k , a ) :
    dp = [ [ False ] * ( k + 1 ) for _ in range ( n + 1 ) ]
    dp [ 0 ] [ 0 ] = True
    for i in range ( 1 , n + 1 ) :
        for j in range ( k + 1 ) :
            if i == now :
                dp [ i ] [ j ] = dp [ i - 1 ] [ j ]
            else :
                if dp [ i - 1 ] [ j ] :
                    dp [ i ] [ j ] = True
                    if j + a [ i - 1 ] <= k :
                        dp [ i ] [ j + a [ i - 1 ] ] = True
    for i in range ( k - 1 , max ( k - a [ now - 1 ] , 0 ) - 1 , - 1 ) :
        if dp [ n ] [ i ] :
            return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 10%|▉         | 171/1746 [00:20<02:22, 11.06it/s]

-------------------------------------


---> lineNum: 172
---> probID: codeforces_1061_A
---> inputs:
5 11
---> outputs:
3

import sys
n , s = map ( int , sys . stdin . readline ( ) . split ( ) )
count = 0
for i in range ( n , 0 , - 1 ) :
    k = s // i
    count += k
    s -= k * i
print ( count )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 173
---> probID: geeksforgeeks_2566_A
---> inputs:

---> outputs:
10539


import array as arr
v = arr . array ( 'i' , [ ] )
def multiply ( x ) :
    global v
    carry = 0
    size = len ( v )
    for i in range ( size ) :
        res = carry + v [ i ] * x
        v [ i ] = res % 10
        carry = res // 10
    while carry != 0 :
        v . append ( carry % 10 )
        carry //= 10
def findSumOfDigits ( n ) :
    global v
    v . append ( 1 )
    for i in range ( 1 , n + 1 ) :
        multiply ( i )
    sum = 0
    size = len ( v )
    for i in range ( size ) :
        sum += v [ i ]
    return sum
n = 1000
print ( findSumOfDigits ( n ) )


---> console_out:
10539
 
MATCHED!! :D
 10%|▉         | 173/1746 [00:21<03:57,  6.62it/s]Traceback (most recent call last):
  File "./junk/1703783706688_5872/main.py", line 2, in <module>
    N , M = map ( int , input ( ) . split ( ) )
ValueError: too many values to unpack (expected 2)
out1,out2  002020


-------------------------------------


---> lineNum: 174
---> probID: codeforces_436_B
---> inputs:
3 3 4
...
R.L
R.U
---> outputs:
0 2 2

import sys
N , M = map ( int , input ( ) . split ( ) )
input ( )
answer = [ 0 ] * M
for n in range ( N ) :
    S = input ( ) . strip ( )
    for m in range ( M ) :
        c = S [ m ]
        if c == 'L' :
            hit = m - n
            if hit >= 0 :
                answer [ hit ] += 1
        elif c == 'R' :
            hit = m + n
            if hit < M :
                answer [ hit ] += 1
        elif c == 'U' :
            if n % 2 == 0 :
                answer [ m ] += 1
output = ' ' . join ( str ( a ) for a in answer )
sys . stdout . write ( output )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703783706756_1997/main.py", line 3, in <module>
    n = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '4 3\n'
out1,out2  30104000


-------------------------------------


---> lineNum: 175
---> probID: codeforces_356_A
---> inputs:
4 3
1 2 1
1 3 3
1 4 4
---> outputs:
3 1 4 0

import sys
input = sys . stdin . readline
n = int ( input ( ) )
left = set ( range ( n ) )
answer = [ 0 ] * n
q = int ( input ( ) )
for _ in range ( q ) :
    l , r , win = map ( int , input ( ) . split ( ) )
    l -= 1
    r -= 1
    while left and min ( left ) <= r :
        curr = min ( left )
        if curr >= l :
            answer [ curr ] = win
            left . remove ( curr )
    answer [ win - 1 ] = 0
    left . add ( win - 1 )
ans = " " . join ( str ( x ) for x in answer )
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 10%|█         | 175/1746 [00:21<03:20,  7.84it/s]

-------------------------------------


---> lineNum: 176
---> probID: codeforces_581_B
---> inputs:
5
1 2 3 1 2
---> outputs:
3 2 0 2 0

import sys
n = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
dp = [ - 1 ] * ( n + 1 )
dp [ n - 1 ] = a [ n - 1 ]
for i in range ( n - 2 , - 1 , - 1 ) :
    dp [ i ] = max ( dp [ i + 1 ] , a [ i ] )
for i in range ( n ) :
    if a [ i ] > dp [ i + 1 ] :
        sys . stdout . write ( "0 " )
    else :
        sys . stdout . write ( str ( dp [ i + 1 ] - a [ i ] + 1 ) + " " )
sys . stdout . write ( "\n" )


---> console_out:
3 2 0 2 0 
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783706899_2464/main.py", line 1, in <module>
    class PellNumber :
  File "./junk/1703783706899_2464/main.py", line 7, in PellNumber
    print ( pell ( n ) )
  File "./junk/1703783706899_2464/main.py", line 5, in pell
    return 2 * PellNumber . pell ( n - 1 ) + PellNumber . pell ( n - 2 )
NameError: name 'PellNumber' is not defined
out1,out2  120


-------------------------------------


---> lineNum: 177
---> probID: geeksforgeeks_4606_A
---> inputs:

---> outputs:
12


class PellNumber :
    def pell ( n ) :
        if n <= 2 :
            return n
        return 2 * PellNumber . pell ( n - 1 ) + PellNumber . pell ( n - 2 )
    n = 4
    print ( pell ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 10%|█         | 177/1746 [00:21<02:50,  9.21it/s]

-------------------------------------


---> lineNum: 178
---> probID: codeforces_334_A
---> inputs:
2
---> outputs:
1 4
2 3

import sys
n = int ( input ( ) )
square = n * n
odd = [ ]
even = [ ]
for i in range ( 1 , square + 1 ) :
    if i % 2 == 0 :
        even . append ( i )
    else :
        odd . append ( i )
loop = square // n
div = loop // 2
for i in range ( 1 , loop + 1 ) :
    for j in range ( div ) :
        if i % 2 == 1 :
            sys . stdout . write ( str ( odd . pop ( 0 ) ) + " " + str ( even . pop ( ) ) + " " )
        else :
            sys . stdout . write ( str ( even . pop ( 0 ) ) + " " + str ( odd . pop ( ) ) + " " )
    sys . stdout . write ( "\n" )


---> console_out:
1 4 
2 3 
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783707035_6097/main.py", line 1, in <module>
    import java . util . Arrays
ModuleNotFoundError: No module named 'java'
out1,out2  1030402000


-------------------------------------


---> lineNum: 179
---> probID: geeksforgeeks_4880_A
---> inputs:

---> outputs:
1 3 4 2 0 

import java . util . Arrays
def printSmall ( arr , asize , n ) :
    copy_arr = Arrays . copyOf ( arr , asize )
    Arrays . sort ( copy_arr )
    for i in range ( asize ) :
        if Arrays . binarySearch ( copy_arr , 0 , n , arr [ i ] ) > - 1 :
            print ( arr [ i ] , end = " " )
if __name__ == "__main__" :
    arr = [ 1 , 5 , 8 , 9 , 6 , 7 , 3 , 4 , 2 , 0 ]
    asize = len ( arr )
    n = 5
    printSmall ( arr , asize , n )


---> console_out:
 
DIDN'T MATCH!! :(
 10%|█         | 179/1746 [00:21<02:32, 10.26it/s]

-------------------------------------


---> lineNum: 180
---> probID: geeksforgeeks_4219_A
---> inputs:

---> outputs:
4


import math
def countNumbers ( n ) :
    k = 0
    count = 0
    while n > 0 :
        if ( n & 1 ) == 0 :
            count += int ( math . pow ( 2 , k ) )
        k += 1
        n >>= 1
    return count
n = 11
print ( countNumbers ( n ) )


---> console_out:
4
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783707173_3736/main.py", line 6, in <module>
    min_val = min ( min_val , int ( input ( ) ) )
ValueError: invalid literal for int() with base 10: '4 2 5'
out1,out2  260


-------------------------------------


---> lineNum: 181
---> probID: codeforces_1150_A
---> inputs:
3 4 11
4 2 5
4 4 5 4
---> outputs:
26

import sys
n , m , money = map ( int , input ( ) . split ( ) )
min_val = sys . maxsize
max_val = - sys . maxsize
for i in range ( n ) :
    min_val = min ( min_val , int ( input ( ) ) )
for i in range ( m ) :
    max_val = max ( max_val , int ( input ( ) ) )
if money % min_val == 0 :
    div = money // min_val
    div *= max_val
    print ( max ( div , money ) )
else :
    div = money // min_val
    div = ( div * max_val ) + ( money % min_val )
    print ( max ( div , money ) )


---> console_out:
 
DIDN'T MATCH!! :(
 10%|█         | 181/1746 [00:22<02:18, 11.32it/s]

-------------------------------------


---> lineNum: 182
---> probID: geeksforgeeks_2614_A
---> inputs:

---> outputs:
4


import math
maximum = - math . inf
x = 0
ans = math . inf
graph = [ [ ] for i in range ( 100 ) ]
weight = [ 0 , 5 , 10 , 11 , 8 , 6 ]
def __builtin_popcount ( x ) :
    c = 0
    for i in range ( 60 ) :
        if ( ( x >> i ) & 1 ) != 0 :
            c += 1
    return c
def dfs ( node , parent ) :
    global maximum , ans
    a = __builtin_popcount ( weight [ node ] + x )
    if maximum < a :
        maximum = a
        ans = node
    elif maximum == a :
        ans = min ( ans , node )
    for i in range ( len ( graph [ node ] ) ) :
        if graph [ node ] [ i ] == parent :
            continue
        dfs ( graph [ node ] [ i ] , node )
x = 15
for i in range ( 6 ) :
    weight . append ( 0 )
graph [ 1 ] . append ( 2 )
graph [ 2 ] . append ( 3 )
graph [ 2 ] . append ( 4 )
graph [ 1 ] . append ( 5 )
dfs ( 1 , 1 )
print ( ans )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 183
---> probID: geeksforgeeks_1938_A
---> inputs:

---> outputs:
2


MAX = 26
def updateFreq ( str , freq ) :
    len_str = len ( str )
    for i in range ( len_str ) :
        freq [ ord ( str [ i ] ) - ord ( 'a' ) ] += 1
def maxCount ( str , patt ) :
    strFreq = [ 0 ] * MAX
    updateFreq ( str , strFreq )
    pattFreq = [ 0 ] * MAX
    updateFreq ( patt , pattFreq )
    ans = float ( 'inf' )
    for i in range ( MAX ) :
        if pattFreq [ i ] == 0 :
            continue
        ans = min ( ans , strFreq [ i ] // pattFreq [ i ] )
    return ans
str = "geeksforgeeks"
patt = "geeks"
print ( maxCount ( str , patt ) )


---> console_out:
2
 
MATCHED!! :D
 10%|█         | 183/1746 [00:22<02:14, 11.65it/s]Traceback (most recent call last):
  File "./junk/1703783707400_1601/main.py", line 6, in <module>
    a [ i ] = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 2 4 3 2'
out1,out2  220


-------------------------------------


---> lineNum: 184
---> probID: codeforces_631_A
---> inputs:
5
1 2 4 3 2
2 3 3 12 1
---> outputs:
22

import sys
n = int ( input ( ) )
a = [ 0 ] * ( n + 1 )
b = [ 0 ] * ( n + 1 )
for i in range ( 1 , n + 1 ) :
    a [ i ] = int ( input ( ) )
for i in range ( 1 , n + 1 ) :
    b [ i ] = int ( input ( ) )
a1 , b1 , ans = 0 , 0 , 0
for i in range ( 1 , n + 1 ) :
    a1 = a1 | a [ i ]
    b1 = b1 | b [ i ]
    if a1 + b1 > ans :
        ans = a1 + b1
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 185
---> probID: codeforces_354_A
---> inputs:
3 4 4 19 1
42 3 99
---> outputs:
576

import sys
N , L , R , QL , QR = map ( int , sys . stdin . readline ( ) . split ( ) )
W = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
sum = [ 0 ] * ( N + 1 )
for n in range ( N ) :
    sum [ n + 1 ] = sum [ n ] + W [ n ]
min_val = float ( 'inf' )
for firstR in range ( N + 1 ) :
    lCount = firstR
    rCount = N - lCount
    cand = sum [ lCount ] * L + ( sum [ N ] - sum [ lCount ] ) * R
    llCount = max ( 0 , lCount - rCount - 1 )
    rrCount = max ( 0 , rCount - lCount - 1 )
    cand += llCount * QL
    cand += rrCount * QR
    min_val = min ( cand , min_val )
print ( min_val )


---> console_out:
576
 
MATCHED!! :D
 11%|█         | 185/1746 [00:22<02:04, 12.54it/s]

-------------------------------------


---> lineNum: 186
---> probID: geeksforgeeks_3668_A
---> inputs:

---> outputs:
300.0
1000.0


def wastedWater ( V , M , N ) :
    amt_per_min = M - N
    time_to_fill = V / amt_per_min
    wasted_amt = N * time_to_fill
    return wasted_amt
V , M , N = 700 , 10 , 3
print ( wastedWater ( V , M , N ) )
V , M , N = 1000 , 100 , 50
print ( wastedWater ( V , M , N ) )


---> console_out:
300.0
1000.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 187
---> probID: geeksforgeeks_1500_A
---> inputs:

---> outputs:
4


def maxSubStr ( str , n ) :
    count0 = 0
    count1 = 0
    cnt = 0
    for i in range ( n ) :
        if str [ i ] == '0' :
            count0 += 1
        else :
            count1 += 1
        if count0 == count1 :
            cnt += 1
    if count0 != count1 :
        return - 1
    return cnt
if __name__ == '__main__' :
    str = "0100110101"
    n = len ( str )
    print ( maxSubStr ( str , n ) )


---> console_out:
4
 
MATCHED!! :D
 11%|█         | 187/1746 [00:22<01:59, 13.10it/s]Traceback (most recent call last):
  File "./junk/1703783707668_2302/main.py", line 4, in <module>
    abc . append ( int ( sys . stdin . readline ( ) ) )
ValueError: invalid literal for int() with base 10: '4 5 3'
out1,out2  3050


-------------------------------------


---> lineNum: 188
---> probID: aizu_p02439_A
---> inputs:
4 5 3
---> outputs:
3 5

import sys
abc = [ ]
for i in range ( 3 ) :
    abc . append ( int ( sys . stdin . readline ( ) ) )
max_val = - sys . maxsize
min_val = sys . maxsize
for i in range ( 3 ) :
    if abc [ i ] > max_val :
        max_val = abc [ i ]
    if abc [ i ] < min_val :
        min_val = abc [ i ]
print ( str ( min_val ) + " " + str ( max_val ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 189
---> probID: geeksforgeeks_1586_A
---> inputs:

---> outputs:
5


def findS ( s ) :
    sum = 0
    n = 1
    while sum < s :
        sum += n
        if sum == s :
            return n
        n += 1
    return - 1
s = 15
n = findS ( s )
if n == - 1 :
    print ( "-1" )
else :
    print ( n )


---> console_out:
5
 
MATCHED!! :D
 11%|█         | 189/1746 [00:22<01:53, 13.70it/s]

-------------------------------------


---> lineNum: 190
---> probID: geeksforgeeks_657_A
---> inputs:

---> outputs:
4


import math
def maximumAbsolute ( arr , n ) :
    mn = float ( 'inf' )
    mx = float ( '-inf' )
    for i in range ( n ) :
        if i > 0 and arr [ i ] == - 1 and arr [ i - 1 ] != - 1 :
            mn = min ( mn , arr [ i - 1 ] )
            mx = max ( mx , arr [ i - 1 ] )
        if i < n - 1 and arr [ i ] == - 1 and arr [ i + 1 ] != - 1 :
            mn = min ( mn , arr [ i + 1 ] )
            mx = max ( mx , arr [ i + 1 ] )
    common_integer = ( mn + mx ) // 2
    for i in range ( n ) :
        if arr [ i ] == - 1 :
            arr [ i ] = common_integer
    max_diff = 0
    for i in range ( n - 1 ) :
        diff = abs ( arr [ i ] - arr [ i + 1 ] )
        if diff > max_diff :
            max_diff = diff
    return max_diff
arr = [ - 1 , - 1 , 11 , - 1 , 3 , - 1 ]
n = len ( arr )
print ( maximumAbsolute ( arr , n ) )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 191
---> probID: geeksforgeeks_1908_A
---> inputs:

---> outputs:
7


MOD = 1000000007
def countStrings ( N ) :
    dp = [ [ 0 for j in range ( 3 ) ] for i in range ( N + 1 ) ]
    dp [ 1 ] [ 0 ] = 1
    dp [ 1 ] [ 1 ] = 1
    dp [ 1 ] [ 2 ] = 0
    for i in range ( 2 , N + 1 ) :
        dp [ i ] [ 0 ] = ( dp [ i - 1 ] [ 0 ] + dp [ i - 1 ] [ 1 ] + dp [ i - 1 ] [ 2 ] ) % MOD
        dp [ i ] [ 1 ] = dp [ i - 1 ] [ 0 ] % MOD
        dp [ i ] [ 2 ] = dp [ i - 1 ] [ 1 ] % MOD
    ans = ( dp [ N ] [ 0 ] + dp [ N ] [ 1 ] + dp [ N ] [ 2 ] ) % MOD
    return ans
N = 3
print ( countStrings ( N ) )


---> console_out:
7
 
MATCHED!! :D
 11%|█         | 191/1746 [00:22<01:50, 14.11it/s]

-------------------------------------


---> lineNum: 192
---> probID: geeksforgeeks_86_A
---> inputs:

---> outputs:
7


def longest_subseq ( n , k , s ) :
    dp = [ 0 ] * n
    max_length = [ 0 ] * 26
    for i in range ( n ) :
        curr = ord ( s [ i ] ) - ord ( 'a' )
        lower = max ( 0 , curr - k )
        upper = min ( 25 , curr + k )
        for j in range ( lower , upper + 1 ) :
            dp [ i ] = max ( dp [ i ] , max_length [ j ] + 1 )
        max_length [ curr ] = max ( dp [ i ] , max_length [ curr ] )
    ans = 0
    for i in dp :
        ans = max ( i , ans )
    return ans
if __name__ == '__main__' :
    s = "geeksforgeeks"
    n = len ( s )
    k = 3
    print ( longest_subseq ( n , k , s ) )


---> console_out:
7
 
MATCHED!! :D


-------------------------------------


---> lineNum: 193
---> probID: geeksforgeeks_4595_A
---> inputs:

---> outputs:
4


def longestFibonacciSubarray ( n , a ) :
    if n <= 2 :
        return n
    len = 2
    mx = float ( '-inf' )
    for i in range ( 2 , n ) :
        if a [ i ] == a [ i - 1 ] + a [ i - 2 ] :
            len += 1
        else :
            len = 2
        mx = max ( mx , len )
    return mx
if __name__ == '__main__' :
    n = 5
    a = [ 2 , 4 , 6 , 10 , 2 ]
    print ( longestFibonacciSubarray ( n , a ) )


---> console_out:
4
 
MATCHED!! :D
 11%|█         | 193/1746 [00:22<01:47, 14.50it/s]

-------------------------------------


---> lineNum: 194
---> probID: geeksforgeeks_3796_A
---> inputs:

---> outputs:
5


import numpy as np
def minimumSubarrays ( ar , n ) :
    se = [ ]
    cnt = 1
    for i in range ( n ) :
        if ar [ i ] not in se :
            se . append ( ar [ i ] )
        else :
            cnt += 1
            se . clear ( )
            se . append ( ar [ i ] )
    return cnt
ar = np . array ( [ 1 , 2 , 1 , 3 , 4 , 2 , 4 , 4 , 4 ] )
n = len ( ar )
print ( minimumSubarrays ( ar , n ) )


---> console_out:
5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 195
---> probID: geeksforgeeks_1804_A
---> inputs:

---> outputs:
Yes


def check ( s ) :
    freq = [ 0 ] * 10
    while s != 0 :
        r = s % 10
        s = int ( s / 10 )
        freq [ r ] += 1
    xor__ = 0
    for i in range ( 10 ) :
        xor__ = xor__ ^ freq [ i ]
        if xor__ == 0 :
            return True
    return False
s = 122233
if check ( s ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
 11%|█         | 195/1746 [00:23<02:33, 10.12it/s]

-------------------------------------


---> lineNum: 196
---> probID: codeforces_1016_A
---> inputs:
3 5
3 7 9
---> outputs:
0 2 1

import sys
import math
class FastScanner :
    def __init__ ( self ) :
        self . br = sys . stdin . buffer
        self . buffer = bytearray ( )
        self . pos = 0
        self . size = 0
    def read ( self ) :
        if self . pos >= self . size :
            self . buffer = self . br . read ( 1024 )
            self . size = len ( self . buffer )
            self . pos = 0
        if self . size == 0 :
            return - 1
        self . pos += 1
        return self . buffer [ self . pos - 1 ]
    def next ( self ) :
        sb = [ ]
        b = self . read ( )
        while b >= 0 and chr ( b ) . isspace ( ) :
            b = self . read ( )
        while b >= 0 and not chr ( b ) . isspace ( ) :
            sb . append ( chr ( b ) )
            b = self . read ( )
        return "" . join ( sb )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
def main ( ) :
    in_ = FastScanner ( )
    n = in_ . nextInt ( )
    m = in_ . nextInt ( )
    g = m
    f = 0
    sum_ = 0
    arr = [ 0 ] * n
    for i in range ( n ) :
        arr [ i ] = in_ . nextInt ( )
    for i in range ( n ) :
        sum_ += arr [ i ]
        if m <= sum_ :
            f += sum_ // m
            sum_ %= m
        sys . stdout . write ( str ( f ) + " " )
        f -= f
    sys . stdout . flush ( )
if __name__ == "__main__" :
    main ( )


---> console_out:
0 2 1  
MATCHED!! :D


-------------------------------------


---> lineNum: 197
---> probID: geeksforgeeks_1178_A
---> inputs:

---> outputs:
Even
Odd
Odd
Even


MAXN = 1000005
even = [ 0 ] * MAXN
odd = [ 0 ] * MAXN
def precompute ( arr , n ) :
    for i in range ( n ) :
        if arr [ i ] % 2 == 1 :
            odd [ i ] = 1
        if arr [ i ] % 2 == 0 :
            even [ i ] = 1
    for i in range ( 1 , n ) :
        even [ i ] += even [ i - 1 ]
        odd [ i ] += odd [ i - 1 ]
def isOdd ( L , R ) :
    cnt = odd [ R ]
    if L > 0 :
        cnt -= odd [ L - 1 ]
    if cnt == R - L + 1 :
        return True
    return False
def performQueries ( a , n , q , m ) :
    precompute ( a , n )
    for i in range ( m ) :
        L , R = q [ i ] [ 0 ] , q [ i ] [ 1 ]
        if isOdd ( L , R ) :
            print ( "Odd" )
        else :
            print ( "Even" )
a = [ 2 , 1 , 5 , 7 , 6 , 8 , 9 ]
n = len ( a )
q = [ [ 0 , 2 ] , [ 1 , 2 ] , [ 2 , 3 ] , [ 3 , 6 ] ]
m = len ( q )
performQueries ( a , n , q , m )


---> console_out:
Even
Odd
Odd
Even
 
MATCHED!! :D
 11%|█▏        | 197/1746 [00:23<02:29, 10.36it/s] 11%|█▏        | 197/1746 [00:40<02:29, 10.36it/s]out1,out2 timeoutencounteredpy 20202070503010000020
out1,out2 timeoutencounteredpy 00600000506010000020


-------------------------------------


---> lineNum: 198
---> probID: codeforces_1430_A
---> inputs:
4
30
67
4
14
---> outputs:
['2 2 2\n7 5 3\n-1\n0 0 2', '0 6 0\n0 5 6\n-1\n0 0 2\n']

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = StringTokenizer ( self . br ( ) . strip ( ) )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return self . br ( ) . strip ( )
def main ( ) :
    obj = FastReader ( )
    s = [ "" ] * 1000
    for n in range ( 1 , 1001 ) :
        flag = True
        for i in range ( 1001 ) :
            for j in range ( 1001 ) :
                if ( n - i * 3 - j * 5 ) % 7 == 0 and ( n - i * 3 - j * 5 ) // 7 >= 0 :
                    s [ n - 1 ] = f"{i} {j} {(n - i * 3 - j * 5) // 7}"
                    flag = False
                    break
            if not flag :
                break
        if flag :
            s [ n - 1 ] = "-1"
    tc = obj . nextInt ( )
    while tc != 0 :
        n = obj . nextInt ( )
        print ( s [ n - 1 ] )
        tc -= 1
if __name__ == "__main__" :
    main ( )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 11%|█▏        | 198/1746 [01:03<3:04:44,  7.16s/it]

-------------------------------------


---> lineNum: 199
---> probID: codeforces_665_A
---> inputs:
10 30
10 35
05:20
---> outputs:
5

import sys
a , tA = map ( int , input ( ) . split ( ) )
b , tB = map ( int , input ( ) . split ( ) )
timing = input ( )
hrs = int ( timing [ : 2 ] )
mins = int ( timing [ 3 : ] )
simDeparture = hrs * 60 + mins
simArrival = simDeparture + tA
counter = 0
for i in range ( 300 , 1440 , b ) :
    busDeparture = i
    busArrival = i + tB
    if busDeparture >= simArrival or simDeparture >= busArrival :
        continue
    counter += 1
print ( counter )


---> console_out:
5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 200
---> probID: codeforces_893_A
---> inputs:
3
1
1
2
---> outputs:
YES

from typing import List
playing = [ 1 , 2 ]
def main ( n : int , wins : List [ int ] ) -> str :
    global playing
    out = 3
    for win in wins :
        if win == out :
            return "NO"
        else :
            replace = next ( j for j in range ( 1 , 4 ) if win != j and out != j )
            index = playing . index ( replace )
            playing [ index ] = out
            out = replace
    return "YES"
if __name__ == "__main__" :
    n = int ( input ( ) )
    wins = [ int ( input ( ) ) for _ in range ( n ) ]
    print ( main ( n , wins ) )


---> console_out:
YES
 
MATCHED!! :D
 11%|█▏        | 200/1746 [01:03<2:03:15,  4.78s/it]

-------------------------------------


---> lineNum: 201
---> probID: geeksforgeeks_830_A
---> inputs:

---> outputs:
3


def times ( steps , n ) :
    current_level = 0
    previous_level = 0
    count = 0
    for i in range ( n ) :
        previous_level = current_level
        current_level = current_level + steps [ i ]
        if ( previous_level < 0 and current_level >= 0 ) or ( previous_level > 0 and current_level <= 0 ) :
            count += 1
    return count
steps = [ 1 , - 1 , 0 , 0 , 1 , 1 , - 3 , 2 ]
n = len ( steps )
print ( times ( steps , n ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 202
---> probID: aizu_p02112_A
---> inputs:
1
1 1 359 1
---> outputs:
0

import sys
class Holiday :
    def __init__ ( self , month , day , time , value ) :
        self . start = ( month - 1 ) * 30 + day
        self . end = self . start + time - 1
        if self . end > 360 :
            self . end -= 360
        self . value = value
    def get_crowded ( self , target ) :
        if self . start > self . end :
            if target <= self . end or target >= self . start :
                return self . value
        else :
            if self . start <= target <= self . end :
                return self . value
        v1 = max ( 0 , self . value - abs ( self . start - target ) % 360 )
        v2 = max ( 0 , self . value - abs ( self . end - target ) % 360 )
        return max ( v1 , v2 )
def main ( ) :
    n = int ( input ( ) )
    holidays = [ ]
    for i in range ( n ) :
        month , day , time , value = map ( int , input ( ) . split ( ) )
        holidays . append ( Holiday ( month , day , time , value ) )
    min_crowded = sys . maxsize
    for i in range ( 1 , 361 ) :
        max_crowded = 0
        for holiday in holidays :
            max_crowded = max ( max_crowded , holiday . get_crowded ( i ) )
        min_crowded = min ( min_crowded , max_crowded )
    print ( min_crowded )
if __name__ == '__main__' :
    main ( )


---> console_out:
0
 
MATCHED!! :D
 12%|█▏        | 202/1746 [01:03<1:23:46,  3.26s/it] 12%|█▏        | 202/1746 [01:20<1:23:46,  3.26s/it]out1,out2 timeoutencounteredpy petr


-------------------------------------


---> lineNum: 203
---> probID: codeforces_986_B
---> inputs:
5
2 4 5 1 3
---> outputs:
Petr

import sys
class FastScanner :
    def __init__ ( self , stream = sys . stdin ) :
        self . br = stream
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = StringTokenizer ( self . br . readline ( ) )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def readNextLine ( self ) :
        try :
            return self . br . readline ( )
        except :
            pass
    def readIntArray ( self , n ) :
        a = [ ]
        for idx in range ( n ) :
            a . append ( self . nextInt ( ) )
        return a
class PetrPermutations :
    @ staticmethod
    def main ( args ) :
        scanner = FastScanner ( )
        out = sys . stdout
        N = scanner . nextInt ( )
        perm = [ 0 ] * N
        for i in range ( N ) :
            perm [ i ] = scanner . nextInt ( )
        swaps = 0
        vis = [ False ] * N
        for i in range ( N ) :
            j = i
            cycle = 0
            while not vis [ j ] :
                vis [ j ] = True
                j = perm [ j ] - 1
                cycle += 1
            if cycle > 0 :
                swaps += cycle - 1
        if swaps % 2 != N % 2 :
            out . write ( "Um_nik\n" )
        else :
            out . write ( "Petr\n" )
        out . flush ( )
if __name__ == "__main__" :
    PetrPermutations . main ( None )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 12%|█▏        | 203/1746 [01:43<4:21:46, 10.18s/it]

-------------------------------------


---> lineNum: 204
---> probID: geeksforgeeks_975_A
---> inputs:

---> outputs:
abca


def smallest ( s ) :
    l = len ( s )
    ans = ""
    for i in range ( l - 1 ) :
        if s [ i ] > s [ i + 1 ] :
            for j in range ( l ) :
                if i != j :
                    ans += s [ j ]
            return ans
    ans = s [ : l - 1 ]
    return ans
s = "abcda"
print ( smallest ( s ) )


---> console_out:
abca
 
MATCHED!! :D


-------------------------------------


---> lineNum: 205
---> probID: atcoder_ABC062_A
---> inputs:
1 3
---> outputs:
Yes

import sys
a , b = map ( int , sys . stdin . readline ( ) . split ( ) )
g = [ 0 , 0 , 2 , 0 , 1 , 0 , 1 , 0 , 0 , 1 , 0 , 1 , 0 ]
if g [ a ] == g [ b ] :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
 12%|█▏        | 205/1746 [01:44<2:50:41,  6.65s/it]

-------------------------------------


---> lineNum: 206
---> probID: geeksforgeeks_2524_A
---> inputs:

---> outputs:
3


def FindMinNumber ( arr , n , k ) :
    i = 0
    j = 0
    min_num = float ( 'inf' )
    found = False
    sum = 0
    while i < n :
        sum = sum + arr [ i ]
        if sum == k :
            min_num = min ( min_num , ( ( n - ( i + 1 ) ) + j ) )
            found = True
        elif sum > k :
            while sum > k :
                sum = sum - arr [ j ]
                j += 1
            if sum == k :
                min_num = min ( min_num , ( ( n - ( i + 1 ) ) + j ) )
                found = True
        i += 1
    if found :
        return min_num
    return - 1
if __name__ == '__main__' :
    arr = [ 1 , 3 , 2 , 5 , 6 ]
    n = len ( arr )
    k = 5
    print ( FindMinNumber ( arr , n , k ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 207
---> probID: atcoder_ABC081_A
---> inputs:
101
---> outputs:
2

import sys
class Printer :
    def __init__ ( self , out ) :
        self . out = out
    def println ( self , s ) :
        self . out . write ( str ( s ) + "\n" )
def solve ( ) :
    s = input ( )
    cnt = 0
    for c in s :
        if c == '1' :
            cnt += 1
    pr . println ( cnt )
if __name__ == "__main__" :
    sc = sys . stdin
    pr = Printer ( sys . stdout )
    solve ( )
    pr . out . close ( )
    sc . close ( )


---> console_out:
2
 
MATCHED!! :D
 12%|█▏        | 207/1746 [01:44<1:54:17,  4.46s/it]

-------------------------------------


---> lineNum: 208
---> probID: geeksforgeeks_3518_A
---> inputs:

---> outputs:
6th palindrome of 5 digit = 10501
10th palindrome of 6 digit = 109901


def nth_palindrome ( n , k ) :
    temp = ( k // 2 ) if k % 2 != 0 else ( k // 2 - 1 )
    palindrome = 10 ** temp
    palindrome += n - 1
    print ( palindrome , end = "" )
    if k % 2 != 0 :
        palindrome //= 10
    while palindrome > 0 :
        print ( palindrome % 10 , end = "" )
        palindrome //= 10
    print ( "" )
n = 6
k = 5
print ( str ( n ) + "th palindrome of " + str ( k ) + " digit = " , end = "" )
nth_palindrome ( n , k )
n = 10
k = 6
print ( str ( n ) + "th palindrome of " + str ( k ) + " digit = " , end = "" )
nth_palindrome ( n , k )


---> console_out:
6th palindrome of 5 digit = 10501
10th palindrome of 6 digit = 109901
 
MATCHED!! :D


-------------------------------------


---> lineNum: 209
---> probID: atcoder_AGC027_B
---> inputs:
2 100
1 10
---> outputs:
355

import sys
class Main :
    INF = sys . maxsize
    def main ( self ) :
        self . solve ( )
    def solve ( self ) :
        N , X = map ( int , input ( ) . split ( ) )
        x = list ( map ( int , input ( ) . split ( ) ) )
        xsum = [ 0 ] * ( N + 1 )
        for i in range ( N ) :
            xsum [ i + 1 ] = xsum [ i ] + x [ i ]
        ans = X * N + 5 * xsum [ N ]
        for i in range ( 1 , N ) :
            cost = X * i + 5 * ( xsum [ N ] - xsum [ N - i ] )
            j = 5
            k = N - i
            while k >= 0 :
                if cost > ans :
                    break
                cost += j * ( xsum [ k ] - xsum [ max ( k - i , 0 ) ] )
                j += 2
                k -= i
            ans = min ( ans , cost )
        print ( ans + N * X )
if __name__ == '__main__' :
    Main ( ) . main ( )


---> console_out:
355
 
MATCHED!! :D
 12%|█▏        | 209/1746 [01:44<1:17:53,  3.04s/it]

-------------------------------------


---> lineNum: 210
---> probID: geeksforgeeks_3455_A
---> inputs:

---> outputs:
2


import numpy as np
def minOperations ( arr , n ) :
    MAX = 10000
    hashTable = np . zeros ( MAX , dtype = int )
    arr = np . sort ( arr )
    for i in range ( n ) :
        hashTable [ arr [ i ] ] += 1
    res = 0
    for i in range ( n ) :
        if hashTable [ arr [ i ] ] != 0 :
            for j in range ( i , n ) :
                if arr [ j ] % arr [ i ] == 0 :
                    hashTable [ arr [ j ] ] = 0
            res += 1
    return res
arr = np . array ( [ 4 , 6 , 2 , 8 , 7 , 21 , 24 , 49 , 44 ] )
n = arr . size
print ( minOperations ( arr , n ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 211
---> probID: codeforces_68_A
---> inputs:
2 7 1 8 2 8
---> outputs:
0

import sys
p1 , p2 , p3 , p4 , a , b = map ( int , sys . stdin . readline ( ) . split ( ) )
min_val = min ( p1 , p2 , p3 , p4 )
count = 0
for i in range ( a , b + 1 ) :
    if i < min_val :
        count += 1
print ( count )


---> console_out:
0
 
MATCHED!! :D
 12%|█▏        | 211/1746 [01:44<54:39,  2.14s/it]  

-------------------------------------


---> lineNum: 212
---> probID: projecteuler_p033_A
---> inputs:

---> outputs:
100

class p033 :
    def main ( self ) :
        print ( self . run ( ) )
    def run ( self ) :
        numer = 1
        denom = 1
        for d in range ( 10 , 100 ) :
            for n in range ( 10 , d ) :
                n0 = n % 10
                n1 = n // 10
                d0 = d % 10
                d1 = d // 10
                if n1 == d0 and n0 * d == n * d1 or n0 == d1 and n1 * d == n * d0 :
                    numer *= n
                    denom *= d
        return str ( denom // gcd ( numer , denom ) )
def gcd ( a , b ) :
    while b :
        a , b = b , a % b
    return a
p = p033 ( )
p . main ( )


---> console_out:
100
 
MATCHED!! :D


-------------------------------------


---> lineNum: 213
---> probID: geeksforgeeks_3003_A
---> inputs:

---> outputs:
4


import math
def countSetBits ( n ) :
    count = 0
    while n > 0 :
        count += n & 1
        n >>= 1
    return count
def countOfOddsPascal ( n ) :
    c = countSetBits ( n )
    return int ( math . pow ( 2 , c ) )
if __name__ == '__main__' :
    n = 20
    print ( countOfOddsPascal ( n ) )


---> console_out:
4
 
MATCHED!! :D
 12%|█▏        | 213/1746 [01:44<38:12,  1.50s/it]

-------------------------------------


---> lineNum: 214
---> probID: codeforces_1315_A
---> inputs:
6
8 8 0 0
1 10 0 3
17 31 10 4
2 1 0 0
5 10 3 9
10 10 4 8
---> outputs:
56
6
442
1
45
80

import math
class Codechef :
    def main ( ) :
        try :
            t = int ( input ( ) )
            while t > 0 :
                a , b , x , y = map ( int , input ( ) . split ( ) )
                ans = max ( max ( x , a - 1 - x ) * b , a * max ( y , b - 1 - y ) )
                print ( ans )
                t -= 1
        except :
            pass
Codechef . main ( )


---> console_out:
56
6
442
1
45
80
 
MATCHED!! :D


-------------------------------------


---> lineNum: 215
---> probID: geeksforgeeks_1516_A
---> inputs:

---> outputs:
2


from typing import List
from collections import namedtuple
Pair = namedtuple ( 'Pair' , [ 'key' , 'value' ] )
def minSwaps ( arr : List [ int ] ) -> int :
    n = len ( arr )
    arrpos = [ Pair ( arr [ i ] , i ) for i in range ( n ) ]
    arrpos . sort ( key = lambda x : x . key )
    vis = [ False ] * n
    ans = 0
    for i in range ( n ) :
        if vis [ i ] or arrpos [ i ] . value == i :
            continue
        cycle_size = 0
        j = i
        while not vis [ j ] :
            vis [ j ] = True
            j = arrpos [ j ] . value
            cycle_size += 1
        if cycle_size > 0 :
            ans += cycle_size - 1
    return ans
if __name__ == '__main__' :
    a = [ 1 , 5 , 4 , 3 , 2 ]
    print ( minSwaps ( a ) )


---> console_out:
2
 
MATCHED!! :D
 12%|█▏        | 215/1746 [01:44<26:57,  1.06s/it]

-------------------------------------


---> lineNum: 216
---> probID: geeksforgeeks_4864_A
---> inputs:

---> outputs:
40


import numpy as np
N = 1000005
prime = np . ones ( N , dtype = bool )
def sieve ( ) :
    global prime
    prime [ 0 ] = False
    prime [ 1 ] = False
    for i in range ( 2 , N ) :
        if prime [ i ] :
            for j in range ( i * 2 , N , i ) :
                prime [ j ] = False
def sumTruncatablePrimes ( n ) :
    global prime
    s = 0
    for i in range ( 2 , n ) :
        num = i
        flag = True
        while num > 0 :
            if not prime [ num ] :
                flag = False
                break
            num //= 10
        num = i
        power = 10
        while num // power > 0 :
            if not prime [ num % power ] :
                flag = False
                break
            power *= 10
        if flag :
            s += i
    return s
n = 25
sieve ( )
print ( sumTruncatablePrimes ( n ) )


---> console_out:
40
 
MATCHED!! :D


-------------------------------------


---> lineNum: 217
---> probID: geeksforgeeks_3392_A
---> inputs:

---> outputs:
1 3 

import math
def findWeights ( X ) :
    sum = 0
    power = 0
    number = 3
    while sum < X :
        sum = number - 1
        sum //= 2
        power += 1
        number *= 3
    ans = 1
    for i in range ( 1 , power + 1 ) :
        print ( ans , end = " " )
        ans *= 3
X = 2
findWeights ( X )


---> console_out:
1 3  
MATCHED!! :D
 12%|█▏        | 217/1746 [01:45<22:14,  1.15it/s]

-------------------------------------


---> lineNum: 218
---> probID: geeksforgeeks_2489_A
---> inputs:

---> outputs:
455

import math
def addToArrayForm ( A , K ) :
    v = [ ]
    ans = [ ]
    rem = 0
    i = len ( A ) - 1
    while i >= 0 :
        my = A [ i ] + K % 10 + rem
        if my > 9 :
            rem = 1
            v . append ( my % 10 )
        else :
            v . append ( my )
            rem = 0
        K = math . floor ( K / 10 )
        i -= 1
    while K > 0 :
        my = K % 10 + rem
        v . append ( my % 10 )
        if my // 10 > 0 :
            rem = 1
        else :
            rem = 0
        K = math . floor ( K / 10 )
    if rem > 0 :
        v . append ( rem )
    for j in range ( len ( v ) - 1 , - 1 , - 1 ) :
        ans . append ( v [ j ] )
    return ans
A = [ 2 , 7 , 4 ]
K = 181
ans = addToArrayForm ( A , K )
for i in range ( len ( ans ) ) :
    print ( ans [ i ] , end = '' )


---> console_out:
455 
MATCHED!! :D


-------------------------------------


---> lineNum: 219
---> probID: geeksforgeeks_4262_A
---> inputs:

---> outputs:
ad ae 
bd be 


def printPaths ( input , R , C ) :
    for i in range ( C ) :
        dfs ( input , "" , 0 , i , R , C )
        print ( )
def dfs ( input , res , i , j , R , C ) :
    if i == R :
        print ( res , end = " " )
        return
    res = res + input [ i ] [ j ]
    for k in range ( C ) :
        dfs ( input , res , i + 1 , k , R , C )
        if i + 1 == R :
            break
input = [ [ 'a' , 'b' ] , [ 'd' , 'e' ] ]
R = len ( input )
C = len ( input [ 0 ] )
printPaths ( input , R , C )


---> console_out:
ad ae 
bd be 
 
MATCHED!! :D
 13%|█▎        | 219/1746 [01:45<15:57,  1.59it/s]

-------------------------------------


---> lineNum: 220
---> probID: codeforces_1200_A
---> inputs:
8
LLRL1RL1
---> outputs:
1010000011

import sys
num = int ( input ( ) )
line = input ( )
hotel = [ 0 ] * 10
for i in range ( num ) :
    actual = line [ i ]
    if actual == 'L' :
        bb = True
        pos = 0
        while pos < 10 and bb == True :
            if hotel [ pos ] == 0 :
                hotel [ pos ] = 1
                bb = False
            pos += 1
    elif actual == 'R' :
        bb = True
        pos = 9
        while pos >= 0 and bb == True :
            if hotel [ pos ] == 0 :
                hotel [ pos ] = 1
                bb = False
            pos -= 1
    else :
        pos = int ( actual )
        hotel [ pos ] = 0
res = ""
for x in hotel :
    res += str ( x )
print ( res )


---> console_out:
1010000011
 
MATCHED!! :D
 13%|█▎        | 219/1746 [02:00<15:57,  1.59it/s]out1,out2 timeoutencounteredpy yesyesno


-------------------------------------


---> lineNum: 221
---> probID: codeforces_1351_B
---> inputs:
3
2 3
3 1
3 2
1 3
3 3
1 3
---> outputs:
Yes
Yes
No

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = StringTokenizer ( self . br ( ) . strip ( ) )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        try :
            return self . br ( )
        except :
            pass
def main ( ) :
    reader = FastReader ( )
    T = reader . nextInt ( )
    while T != 0 :
        T -= 1
        a1 = reader . nextInt ( )
        b1 = reader . nextInt ( )
        a2 = reader . nextInt ( )
        b2 = reader . nextInt ( )
        r1 = [ min ( a1 , b1 ) , max ( a1 , b1 ) ]
        r2 = [ min ( a2 , b2 ) , max ( a2 , b2 ) ]
        if r1 [ 0 ] == r2 [ 0 ] and r1 [ 1 ] + r2 [ 1 ] == r1 [ 0 ] :
            print ( "Yes" )
        elif r1 [ 1 ] == r2 [ 1 ] and r1 [ 0 ] + r2 [ 0 ] == r1 [ 1 ] :
            print ( "Yes" )
        else :
            print ( "No" )
if __name__ == "__main__" :
    main ( )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 13%|█▎        | 221/1746 [02:26<2:45:32,  6.51s/it]

-------------------------------------


---> lineNum: 222
---> probID: geeksforgeeks_2152_A
---> inputs:

---> outputs:
3.142857142857142


import math
def precisionCompute ( x , y , n ) :
    if y == 0 :
        print ( "Infinite" )
        return
    if x == 0 :
        print ( "0" )
        return
    if n <= 0 :
        print ( x // y )
        return
    if ( ( x > 0 and y < 0 ) or ( x < 0 and y > 0 ) ) :
        print ( "-" , end = "" )
        x = abs ( x )
        y = abs ( y )
    d = x // y
    for i in range ( n + 1 ) :
        print ( d , end = "" )
        x = x - ( y * d )
        if x == 0 :
            break
        x = x * 10
        d = x // y
        if i == 0 :
            print ( "." , end = "" )
x , y , n = 22 , 7 , 15
precisionCompute ( x , y , n )
print ( )


---> console_out:
3.142857142857142
 
MATCHED!! :D


-------------------------------------


---> lineNum: 223
---> probID: geeksforgeeks_1091_A
---> inputs:

---> outputs:
9261000


import math
def gcd ( a , b ) :
    if b == 0 :
        return a
    else :
        return gcd ( b , a % b )
def lcmOfArray ( arr , n ) :
    if n < 1 :
        return 0
    lcm = arr [ 0 ]
    for i in range ( 1 , n ) :
        lcm = ( lcm * arr [ i ] ) // gcd ( lcm , arr [ i ] )
    return lcm
def minPerfectCube ( arr , n ) :
    minPerfectCube = 0
    lcm = lcmOfArray ( arr , n )
    minPerfectCube = lcm
    cnt = 0
    while lcm > 1 and lcm % 2 == 0 :
        cnt += 1
        lcm //= 2
    if cnt % 3 == 2 :
        minPerfectCube *= 2
    elif cnt % 3 == 1 :
        minPerfectCube *= 4
    i = 3
    while lcm > 1 :
        cnt = 0
        while lcm % i == 0 :
            cnt += 1
            lcm //= i
        if cnt % 3 == 1 :
            minPerfectCube *= i * i
        elif cnt % 3 == 2 :
            minPerfectCube *= i
        i += 2
    return minPerfectCube
arr = [ 10 , 125 , 14 , 42 , 100 ]
n = len ( arr )
print ( minPerfectCube ( arr , n ) )


---> console_out:
9261000
 
MATCHED!! :D
 13%|█▎        | 223/1746 [02:26<1:55:56,  4.57s/it]Traceback (most recent call last):
  File "./junk/1703783831440_2928/main.py", line 2, in <module>
    from stack import Stack
ModuleNotFoundError: No module named 'stack'
out1,out2  specificlevelordertraversalofbinarytreeis203010


-------------------------------------


---> lineNum: 224
---> probID: geeksforgeeks_3953_A
---> inputs:

---> outputs:
Specific Level Order Traversal of Binary Tree is
2 3 1 

from queue import Queue
from stack import Stack
class Node :
    def __init__ ( self , data ) :
        self . data = data
        self . left = None
        self . right = None
class BinaryTree :
    def __init__ ( self ) :
        self . root = None
    def printSpecificLevelOrderUtil ( self , root , s ) :
        if root is None :
            return
        q = Queue ( )
        q . put ( root . left )
        q . put ( root . right )
        first = None
        second = None
        while not q . empty ( ) :
            first = q . get ( )
            second = q . get ( )
            s . push ( second . left )
            s . push ( first . right )
            s . push ( second . right )
            s . push ( first . left )
            if first . left . left is not None :
                q . put ( first . right )
                q . put ( second . left )
                q . put ( first . left )
                q . put ( second . right )
    def printSpecificLevelOrder ( self , root ) :
        s = Stack ( )
        s . push ( root )
        if root . left is not None :
            s . push ( root . right )
            s . push ( root . left )
        if root . left . left is not None :
            self . printSpecificLevelOrderUtil ( root , s )
        while not s . empty ( ) :
            print ( s . peek ( ) . data , end = " " )
            s . pop ( )
if __name__ == "__main__" :
    tree = BinaryTree ( )
    tree . root = Node ( 1 )
    tree . root . left = Node ( 2 )
    tree . root . right = Node ( 3 )
    print ( "Specific Level Order Traversal of Binary Tree is" )
    tree . printSpecificLevelOrder ( tree . root )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 225
---> probID: geeksforgeeks_1758_A
---> inputs:

---> outputs:
Solid Square:
*****
*****
*****
*****
*****

Hollow Square:
*****
*   *
*   *
*   *
*****


def hollowSquare ( rows ) :
    for i in range ( 1 , rows + 1 ) :
        if i == 1 or i == rows :
            for j in range ( 1 , rows + 1 ) :
                print ( "*" , end = "" )
        else :
            for j in range ( 1 , rows + 1 ) :
                if j == 1 or j == rows :
                    print ( "*" , end = "" )
                else :
                    print ( " " , end = "" )
        print ( )
def solidSquare ( rows ) :
    for i in range ( 1 , rows + 1 ) :
        for j in range ( 1 , rows + 1 ) :
            print ( "*" , end = "" )
        print ( )
def printPattern ( rows ) :
    print ( "Solid Square:" )
    solidSquare ( rows )
    print ( "\nHollow Square:" )
    hollowSquare ( rows )
rows = 5
printPattern ( rows )


---> console_out:
Solid Square:
*****
*****
*****
*****
*****

Hollow Square:
*****
*   *
*   *
*   *
*****
 
MATCHED!! :D
 13%|█▎        | 225/1746 [02:26<1:21:28,  3.21s/it]

-------------------------------------


---> lineNum: 226
---> probID: codeforces_110_B
---> inputs:
5
---> outputs:
abcda

import sys
n = int ( input ( ) )
if n == 1 :
    print ( 'a' )
elif n == 2 :
    print ( 'ab' )
elif n == 3 :
    print ( 'abc' )
else :
    for i in range ( n // 4 ) :
        sys . stdout . write ( 'abcd' )
    t = n % 4
    if t == 1 :
        print ( 'a' )
    elif t == 2 :
        print ( 'ab' )
    elif t == 3 :
        print ( 'abc' )


---> console_out:
abcda
 
MATCHED!! :D


-------------------------------------


---> lineNum: 227
---> probID: codeforces_294_B
---> inputs:
5
1 12
1 3
2 15
2 5
2 1
---> outputs:
5

import numpy as np
n = int ( input ( ) )
data = np . zeros ( ( n + 1 , 2 ) , dtype = int )
maxLen = 0
for i in range ( 1 , n + 1 ) :
    data [ i ] [ 0 ] , data [ i ] [ 1 ] = map ( int , input ( ) . split ( ) )
    maxLen += data [ i ] [ 0 ]
dp = np . full ( maxLen + 1 , 10000 , dtype = int )
dp [ 0 ] = 0
for i in range ( 1 , n + 1 ) :
    for j in range ( maxLen , data [ i ] [ 0 ] - 1 , - 1 ) :
        dp [ j ] = min ( dp [ j ] , dp [ j - data [ i ] [ 0 ] ] + data [ i ] [ 1 ] )
for i in range ( maxLen , - 1 , - 1 ) :
    if maxLen - i >= dp [ i ] :
        print ( maxLen - i )
        break


---> console_out:
5
 
MATCHED!! :D
 13%|█▎        | 227/1746 [02:26<58:08,  2.30s/it]  

-------------------------------------


---> lineNum: 228
---> probID: atcoder_ABC094_A
---> inputs:
3 5 4
---> outputs:
YES

import sys
a , b , x = map ( int , sys . stdin . readline ( ) . split ( ) )
if x < a or ( a + b ) < x :
    print ( "NO" )
else :
    print ( "YES" )


---> console_out:
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 229
---> probID: geeksforgeeks_220_A
---> inputs:

---> outputs:
3


def findLargest ( arr , n ) :
    def gcd ( a , b ) :
        return a if b == 0 else gcd ( b , a % b )
    gcd_val = 0
    for i in range ( n ) :
        gcd_val = gcd ( arr [ i ] , gcd_val )
    return gcd_val
arr = [ 3 , 6 , 9 ]
n = len ( arr )
print ( findLargest ( arr , n ) )


---> console_out:
3
 
MATCHED!! :D
 13%|█▎        | 229/1746 [02:26<41:04,  1.62s/it]

-------------------------------------


---> lineNum: 230
---> probID: geeksforgeeks_576_A
---> inputs:

---> outputs:
Second Player wins the game


def findWinner ( n ) :
    if ( n - 1 ) % 6 == 0 :
        print ( "Second Player wins the game" )
    else :
        print ( "First Player wins the game" )
n = 7
findWinner ( n )


---> console_out:
Second Player wins the game
 
MATCHED!! :D


-------------------------------------


---> lineNum: 231
---> probID: geeksforgeeks_3573_A
---> inputs:

---> outputs:
Following is Breadth First Traversal (starting from vertex 2)
2 0 3 1 

import queue
class Graph :
    def __init__ ( self , v ) :
        self . V = v
        self . adj = [ list ( ) for i in range ( v ) ]
    def addEdge ( self , v , w ) :
        self . adj [ v ] . append ( w )
    def BFS ( self , s ) :
        visited = [ False ] * self . V
        q = queue . Queue ( )
        visited [ s ] = True
        q . put ( s )
        while not q . empty ( ) :
            s = q . get ( )
            print ( s , end = " " )
            for n in self . adj [ s ] :
                if not visited [ n ] :
                    visited [ n ] = True
                    q . put ( n )
if __name__ == "__main__" :
    g = Graph ( 4 )
    g . addEdge ( 0 , 1 )
    g . addEdge ( 0 , 2 )
    g . addEdge ( 1 , 2 )
    g . addEdge ( 2 , 0 )
    g . addEdge ( 2 , 3 )
    g . addEdge ( 3 , 3 )
    print ( "Following is Breadth First Traversal (starting from vertex 2)" )
    g . BFS ( 2 )


---> console_out:
Following is Breadth First Traversal (starting from vertex 2)
2 0 3 1  
MATCHED!! :D
 13%|█▎        | 231/1746 [02:27<29:16,  1.16s/it]

-------------------------------------


---> lineNum: 232
---> probID: geeksforgeeks_3472_A
---> inputs:

---> outputs:
Following is Breadth First Traversal (starting from vertex 2)
2 0 3 1 

import queue
class Graph :
    def __init__ ( self , v ) :
        self . V = v
        self . adj = [ list ( ) for i in range ( v ) ]
    def addEdge ( self , v , w ) :
        self . adj [ v ] . append ( w )
    def BFS ( self , s ) :
        visited = [ False ] * self . V
        q = queue . Queue ( )
        visited [ s ] = True
        q . put ( s )
        while not q . empty ( ) :
            s = q . get ( )
            print ( s , end = " " )
            for n in self . adj [ s ] :
                if not visited [ n ] :
                    visited [ n ] = True
                    q . put ( n )
if __name__ == "__main__" :
    g = Graph ( 4 )
    g . addEdge ( 0 , 1 )
    g . addEdge ( 0 , 2 )
    g . addEdge ( 1 , 2 )
    g . addEdge ( 2 , 0 )
    g . addEdge ( 2 , 3 )
    g . addEdge ( 3 , 3 )
    print ( "Following is Breadth First Traversal (starting from vertex 2)" )
    g . BFS ( 2 )


---> console_out:
Following is Breadth First Traversal (starting from vertex 2)
2 0 3 1  
MATCHED!! :D


-------------------------------------


---> lineNum: 233
---> probID: geeksforgeeks_1120_A
---> inputs:

---> outputs:
5 8 10 12 13 

import numpy as np
def getElements ( a , arr , n ) :
    elements = np . zeros ( n + 1 , dtype = int )
    elements [ 0 ] = a
    for i in range ( n ) :
        elements [ i + 1 ] = arr [ i ] ^ elements [ i ]
    for i in range ( n + 1 ) :
        print ( elements [ i ] , end = " " )
if __name__ == "__main__" :
    arr = [ 13 , 2 , 6 , 1 ]
    n = len ( arr )
    a = 5
    getElements ( a , arr , n )


---> console_out:
5 8 10 12 13  
MATCHED!! :D
 13%|█▎        | 233/1746 [02:27<21:45,  1.16it/s]Traceback (most recent call last):
  File "./junk/1703783832533_9982/main.py", line 15, in <module>
    print ( "Case #{}: {}" . format ( i , solve ( ) ) )
NameError: name 'solve' is not defined
out1,out2  case10prcase20impossiblecase30psrscase40impossible


-------------------------------------


---> lineNum: 234
---> probID: codejam_16_41
---> inputs:
4
1 1 1 0
1 2 0 0
2 1 1 2
2 2 0 2

---> outputs:
Case #1: PR
Case #2: IMPOSSIBLE
Case #3: PSRS
Case #4: IMPOSSIBLE


import sys
cs = [ 'P' , 'R' , 'S' ]
dp = [ [ '' for i in range ( 13 ) ] for j in range ( 3 ) ]
dp [ 0 ] [ 0 ] = 'P'
dp [ 1 ] [ 0 ] = 'R'
dp [ 2 ] [ 0 ] = 'S'
for i in range ( 1 , len ( dp [ 0 ] ) ) :
    for j in range ( 3 ) :
        dp [ j ] [ i ] = dp [ j ] [ i - 1 ] + dp [ ( j + 1 ) % 3 ] [ i - 1 ]
        o = dp [ ( j + 1 ) % 3 ] [ i - 1 ] + dp [ j ] [ i - 1 ]
        if o < dp [ j ] [ i ] :
            dp [ j ] [ i ] = o
T = int ( input ( ) )
for i in range ( 1 , T + 1 ) :
    print ( "Case #{}: {}" . format ( i , solve ( ) ) )
def solve ( ) :
    N , R , P , S = map ( int , input ( ) . split ( ) )
    ret = None
    for i in range ( 3 ) :
        c = [ 0 , 0 , 0 ]
        for ch in dp [ i ] [ N ] :
            if ch == 'P' :
                c [ 0 ] += 1
            elif ch == 'R' :
                c [ 1 ] += 1
            elif ch == 'S' :
                c [ 2 ] += 1
        if c [ 0 ] == P and c [ 1 ] == R and c [ 2 ] == S :
            ret = dp [ i ] [ N ]
    return ret if ret is not None else "IMPOSSIBLE"


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 235
---> probID: codeforces_333_B
---> inputs:
3 1
2 2
---> outputs:
0

import sys
n , k = map ( int , input ( ) . split ( ) )
row = [ False ] * n
col = [ False ] * n
for i in range ( k ) :
    val , val2 = map ( int , input ( ) . split ( ) )
    row [ val - 1 ] = True
    col [ val2 - 1 ] = True
ans = 0
for i in range ( 1 , n - 1 ) :
    if n % 2 == 1 and i == n // 2 :
        if not row [ i ] or not col [ i ] :
            ans += 1
    elif not row [ i ] or not col [ i ] :
        ans += 2 if not row [ i ] and not col [ i ] else 1
print ( ans )


---> console_out:
0
 
MATCHED!! :D
 13%|█▎        | 235/1746 [02:27<15:40,  1.61it/s]out1,out2 thetworepeatingelementsare4020 thetworepeatingelementsare4020


-------------------------------------


---> lineNum: 236
---> probID: geeksforgeeks_1493_A
---> inputs:

---> outputs:
The two repeating elements are : 4 & 2


class RepeatElement :
    def printRepeating ( self , arr , size ) :
        S = 0
        P = 1
        x = 0
        y = 0
        D = 0
        n = size - 2
        for i in range ( size ) :
            S = S + arr [ i ]
            P = P * arr [ i ]
        S = S - n * ( n + 1 ) / 2
        P = P // self . fact ( n )
        D = int ( ( S * S - 4 * P ) ** 0.5 )
        x = ( D + S ) // 2
        y = ( S - D ) // 2
        print ( "The two repeating elements are: " , x , "&" , y )
    def fact ( self , n ) :
        return 1 if n == 0 else n * self . fact ( n - 1 )
repeat = RepeatElement ( )
arr = [ 4 , 2 , 4 , 5 , 2 , 3 , 1 ]
arr_size = len ( arr )
repeat . printRepeating ( arr , arr_size )


---> console_out:
The two repeating elements are:  4.0 & 2.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 237
---> probID: aizu_p00836_A
---> inputs:
2
3
17
41
20
666
12
53
0
---> outputs:
1
1
2
3
0
0
1
2

import math
count = 1
isPrime = [ True ] * 10001
primes = [ 0 ] * 100000
sum = [ 0 ] * 100000
isPrime [ 0 ] = isPrime [ 1 ] = False
for i in range ( int ( math . sqrt ( len ( isPrime ) ) ) ) :
    if isPrime [ i ] :
        for j in range ( i + i , len ( isPrime ) , i ) :
            isPrime [ j ] = False
for i in range ( len ( isPrime ) ) :
    if isPrime [ i ] :
        primes [ count ] = i
        sum [ count ] = sum [ count - 1 ] + primes [ count ]
        count += 1
while True :
    n = int ( input ( ) )
    cnt = 0
    if n == 0 :
        break
    for i in range ( count ) :
        for j in range ( i + 1 , count ) :
            if sum [ j ] - sum [ i ] == n :
                cnt += 1
    print ( cnt )


---> console_out:
1
1
2
3
0
0
1
2
 
MATCHED!! :D
 14%|█▎        | 237/1746 [02:29<17:35,  1.43it/s]out1,out2 000000000000000000020000000100000000000000000000000000000000000000000000000000000000020000000100000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000010000 000000000000000000020000000100000000000000000000000000000000000000000000000000000000020000000100000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000010000


-------------------------------------


---> lineNum: 238
---> probID: atcoder_AGC021_B
---> inputs:
99
-597624 -111746
-763451 -909006
889623 352669
-750222 28248
-18288 -97300
765545 -140277
353638 -843558
-826064 985707
850084 329188
605117 -893630
-491067 -861004
204072 215374
501906 687744
958939 74794
562265 -320746
-188128 456002
650567 -594335
-794253 745145
-475876 834471
123399 573522
34925 443871
-935582 343858
-787505 82135
-145089 658822
602317 -697406
263274 -972576
-929401 844863
-747171 199268
-959666 -601220
-897125 692530
-610884 -436755
-458195 -935396
-90495 715006
-920721 877265
623278 -395430
-30508 514839
321218 -232955
-913055 504732
253154 -482912
-768486 467286
-429825 -821249
151322 800710
916040 892014
-539063 691920
-948109 895210
-958378 356070
-859726 -854798
-266817 -391859
-494814 -837985
771621 -358544
-130241 580634
433743 726425
808927 836079
-428889 -310011
420233 -492990
-374326 178099
607817 -817154
738703 356407
-443209 882732
-545159 622014
461087 -735737
203317 -503046
192009 528706
-691771 988989
365717 -285807
-999587 974231
320484 -226195
-869783 364554
-1858 -918858
43354 366046
246156 -945373
570957 -849030
-205436 523777
-852249 113239
-793866 986146
-823507 -847947
-520779 -115306
-872853 391240
142227 -446959
860826 402362
-415806 -626337
241906 226824
133538 283644
825611 912830
55007 -368019
641090 144135
465173 -150217
545525 -83537
578909 361955
-84097 -615101
-561335 -108710
325878 25712
-943542 -652584
312973 747464
-157504 -388122
373884 265085
-794498 -900206
457864 -44312
-415053 -699362
---> outputs:
0.00000000000000000000
0.03023296010721759561
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00662162848797220958
0.00000000000000000000
0.15812711462230091830
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.06409756998449887833
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.04431690633576074179
0.00000000000000000000
0.00000000000000000000
0.04437887715814670120
0.00000000000000000000
0.00000000000000000000
0.00553054036605005704
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.20564414178076056983
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.09067493950998017915
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.01187028589970203288
0.00000000000000000000
0.24352157176574720787
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.02802741206854937606
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.01412685716278153265
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.05282919475053176467
0.00000000000000000000
0.00000000000000000000

import math
n = int ( input ( ) )
x = [ 0 ] * n
y = [ 0 ] * n
for i in range ( n ) :
    x [ i ] , y [ i ] = map ( float , input ( ) . split ( ) )
for i in range ( n ) :
    deg = [ ]
    for j in range ( n ) :
        if i == j :
            continue
        deg . append ( math . atan2 ( y [ j ] - y [ i ] , x [ j ] - x [ i ] ) )
    deg . sort ( )
    ans = 0
    for j in range ( n - 2 ) :
        ans = max ( ans , deg [ ( j + 1 ) % ( n - 1 ) ] - deg [ j ] )
    ans = max ( ans , math . pi * 2 + deg [ 0 ] - deg [ n - 2 ] )
    ans = ans - math . pi
    if ans <= 0 :
        print ( 0 )
    else :
        print ( "{:.20f}" . format ( ans / ( 2 * math . pi ) ) )


---> console_out:
0
0.03023296010721745336
0
0
0
0
0
0.00662162848797235096
0
0.15812711462230097381
0
0
0
0.06409756998449887833
0
0
0
0
0
0
0
0
0
0
0
0.04431690633576074179
0
0
0.04437887715814670120
0
0
0.00553054036604991566
0
0
0
0
0
0
0
0
0
0
0.20564414178076065309
0
0
0
0.09067493950998017915
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0.01187028589970189237
0
0.24352157176574720787
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0.02802741206854944545
0
0
0
0
0
0
0
0
0.01412685716278160378
0
0
0
0.05282919475053176467
0
0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 239
---> probID: aizu_p01369_A
---> inputs:
koukyoukoukokukikou
abrakadabra
acmicpc
japaque
helloworld
#
---> outputs:
0
2
4
5
7

import sys
def check ( c ) :
    if c in [ 'q' , 'w' , 'e' , 'r' , 't' , 'a' , 's' , 'd' , 'f' , 'g' , 'z' , 'x' , 'c' , 'v' , 'b' ] :
        return 1
    else :
        return 2
try :
    while True :
        st = input ( )
        if st == "#" :
            break
        c = list ( st )
        count = 0
        t = check ( c [ 0 ] )
        for i in range ( 1 , len ( c ) ) :
            if t != check ( c [ i ] ) :
                count += 1
                t = check ( c [ i ] )
        print ( count )
except :
    print ( "Error" )


---> console_out:
0
2
4
5
7
 
MATCHED!! :D
 14%|█▎        | 239/1746 [02:29<12:49,  1.96it/s]

-------------------------------------


---> lineNum: 240
---> probID: codeforces_867_A
---> inputs:
4
FSSF
---> outputs:
NO

import sys
n = int ( input ( ) )
str = input ( )
S = 0
for i in range ( n - 1 ) :
    if str [ i ] == 'S' and str [ i + 1 ] == 'F' :
        S += 1
    elif str [ i ] == 'F' and str [ i + 1 ] == 'S' :
        S -= 1
if S > 0 :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
NO
 
MATCHED!! :D


-------------------------------------


---> lineNum: 241
---> probID: codeforces_1554_A
---> inputs:
4
3
2 4 3
4
3 2 3 1
2
69 69
6
719313 273225 402638 473783 804745 323328
---> outputs:
12
6
4761
381274500335

import sys
t = int ( input ( ) )
for j in range ( t ) :
    n = int ( input ( ) )
    a = list ( map ( int , input ( ) . split ( ) ) )
    max = 0
    if n == 2 :
        max = a [ 0 ] * a [ 1 ]
    for i in range ( 1 , n - 1 ) :
        if a [ i - 1 ] > a [ i + 1 ] :
            if a [ i ] * a [ i - 1 ] > max :
                max = a [ i ] * a [ i - 1 ]
        else :
            if a [ i ] * a [ i + 1 ] > max :
                max = a [ i ] * a [ i + 1 ]
    print ( max )


---> console_out:
12
6
4761
381274500335
 
MATCHED!! :D
 14%|█▍        | 241/1746 [02:29<09:25,  2.66it/s]

-------------------------------------


---> lineNum: 242
---> probID: geeksforgeeks_1029_A
---> inputs:

---> outputs:
6
190475


from math import gcd
from functools import reduce
def FindLCM ( a , b ) :
    return ( a * b ) // gcd ( a , b )
def rangeDivisor ( m , n , a , b ) :
    lcm = FindLCM ( a , b )
    a_divisor = n // a - ( m - 1 ) // a
    b_divisor = n // b - ( m - 1 ) // b
    common_divisor = n // lcm - ( m - 1 ) // lcm
    ans = a_divisor + b_divisor - common_divisor
    return ans
m , n , a , b = 3 , 11 , 2 , 3
print ( rangeDivisor ( m , n , a , b ) )
m , n , a , b = 11 , 1000000 , 6 , 35
print ( rangeDivisor ( m , n , a , b ) )


---> console_out:
6
190475
 
MATCHED!! :D


-------------------------------------


---> lineNum: 243
---> probID: codeforces_147_A
---> inputs:
galileo galilei was an   italian physicist  ,mathematician,astronomer
---> outputs:
galileo galilei was an italian physicist, mathematician, astronomer

import sys
def isLatinLetter ( c ) :
    return c >= 'a' and c <= 'z'
def isPunctuation ( c ) :
    if c == '.' :
        return True
    if c == ',' :
        return True
    if c == '!' :
        return True
    if c == '?' :
        return True
    return False
s = input ( )
sb = [ ]
n = len ( s )
sb . append ( s [ 0 ] )
for i in range ( 1 , n ) :
    c = s [ i ]
    if isLatinLetter ( c ) :
        if not isLatinLetter ( s [ i - 1 ] ) :
            sb . append ( ' ' )
        sb . append ( c )
    elif isPunctuation ( c ) :
        sb . append ( c )
print ( '' . join ( sb ) )


---> console_out:
galileo galilei was an italian physicist, mathematician, astronomer
 
MATCHED!! :D
 14%|█▍        | 243/1746 [02:29<07:10,  3.49it/s]

-------------------------------------


---> lineNum: 244
---> probID: geeksforgeeks_4941_A
---> inputs:

---> outputs:
1


import collections
def smallestKFreq ( a , n , k ) :
    m = collections . Counter ( a )
    res = float ( 'inf' )
    for temp in m :
        if m [ temp ] == k :
            res = min ( res , temp )
    return res if res != float ( 'inf' ) else - 1
if __name__ == '__main__' :
    arr = [ 2 , 2 , 1 , 3 , 1 ]
    k = 2
    print ( smallestKFreq ( arr , len ( arr ) , k ) )


---> console_out:
1
 
MATCHED!! :D
  File "./junk/1703783834905_6699/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax
out1,out2  yes


-------------------------------------


---> lineNum: 245
---> probID: geeksforgeeks_2871_A
---> inputs:

---> outputs:
Yes


import java . io . * ;
public class GFG { static boolean areVowelsInOrder ( String s ) { int n = s . length ( ) ; char c = ( char ) 64 ; for ( int i = 1 ; i < n ; i + + ) { if ( s . charAt ( i ) == 'a' | | s . charAt ( i ) == 'e' | | s . charAt ( i ) == 'i' | | s . charAt ( i ) == 'o' | | s . charAt ( i ) == 'u' ) { if ( s . charAt ( i ) < c ) return false ; else { c = s . charAt ( i ) ; } } } return true ; } public static void main ( String [ ] args ) { String s = "aabbbddeecc" ; if ( areVowelsInOrder ( s ) ) System . out . println ( "Yes" ) ; else System . out . println ( "No" ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
 14%|█▍        | 245/1746 [02:29<05:30,  4.54it/s]out1,out2 00000000000000000000000000000000 206020140205010101018050350404030370


-------------------------------------


---> lineNum: 246
---> probID: aizu_p00748_A
---> inputs:
40
14
5
165
120
103
106
139
0
---> outputs:
2 6
2 14
2 5
1 1
1 18
5 35
4 4
3 37

import math
N = 0
min_val = math . inf
cnt = 0
a = [ 0 ] * 180
b = [ 0 ] * 45
alreadyA = [ 0 ] * 1000000
alreadyB = [ 0 ] * 1000000
def tetrahedral ( a ) :
    return ( a * ( a + 1 ) * ( a + 2 ) ) // 6
for i in range ( 1 , 1000000 ) :
    if tetrahedral ( i ) > 1000000 :
        break
    t = tetrahedral ( i )
    a [ cnt ] = t
    cnt += 1
cnt = 0
for i in range ( 1 , 1000000 ) :
    if tetrahedral ( i ) > 1000000 :
        break
    t = tetrahedral ( i )
    if t % 2 == 1 :
        b [ cnt ] = t
        cnt += 1
def a ( ) :
    for i in range ( 1 , 1000000 ) :
        mina = math . inf
        minb = math . inf
        x = 0
        y = 0
        for j in range ( 0 , 180 ) :
            if a [ j ] > i :
                break
            mina = min ( 1 + alreadyA [ i - a [ j ] ] , mina )
            if a [ j ] % 2 == 1 :
                minb = min ( 1 + alreadyB [ i - a [ j ] ] , minb )
        alreadyA [ i ] = mina
        alreadyB [ i ] = minb
while True :
    N = int ( input ( ) )
    if N == 0 :
        break
    cnt = 0
    min_val = math . inf
    print ( alreadyA [ N ] , alreadyB [ N ] )


---> console_out:
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 247
---> probID: geeksforgeeks_4135_A
---> inputs:

---> outputs:
Yes


def countOfLetters ( str ) :
    letter = 0
    for i in range ( len ( str ) ) :
        if str [ i ] . isalpha ( ) :
            letter += 1
    return letter
def countOfNumbers ( str ) :
    number = 0
    for i in range ( len ( str ) ) :
        if str [ i ] . isdigit ( ) :
            number += 1
    return number
def check ( str ) :
    if countOfLetters ( str ) == countOfNumbers ( str ) :
        print ( "Yes" )
    else :
        print ( "No" )
str = "GeeKs01324"
check ( str )


---> console_out:
Yes
 
MATCHED!! :D
 14%|█▍        | 247/1746 [02:30<04:35,  5.44it/s]

-------------------------------------


---> lineNum: 248
---> probID: aizu_p00013_A
---> inputs:
1
6
0
8
10
0
0
0
---> outputs:
6
10
8
1

import sys
box = [ 0 ] * 10
i = 0
for line in sys . stdin :
    n = int ( line )
    if n == 0 :
        i -= 1
        print ( box [ i ] )
    else :
        box [ i ] = n
        i += 1


---> console_out:
6
10
8
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 249
---> probID: atcoder_AGC006_B
---> inputs:
4 4
---> outputs:
Yes
1
2
3
4
5
6
7


from collections import deque
while True :
    try :
        N , x = map ( int , input ( ) . split ( ) )
    except :
        break
    if x == 1 or x == 2 * N - 1 :
        print ( "No" )
        break
    print ( "Yes" )
    low , high = x - 1 , x + 1
    deq = deque ( [ x ] )
    while low != 0 or high != 2 * N :
        if low == 0 :
            deq . append ( high )
            deq . append ( high + 1 )
            high += 2
        elif high == 2 * N :
            deq . appendleft ( low )
            deq . appendleft ( low - 1 )
            low -= 2
        else :
            deq . appendleft ( low )
            low -= 1
            deq . append ( high )
            high += 1
    for s in deq :
        print ( s )


---> console_out:
Yes
1
2
3
4
5
6
7
 
MATCHED!! :D
 14%|█▍        | 249/1746 [02:30<03:40,  6.79it/s]

-------------------------------------


---> lineNum: 250
---> probID: geeksforgeeks_273_A
---> inputs:

---> outputs:
Total perfect divisors of 16 = 3
Total perfect divisors of 12 = 2


MAX = 100001
perfectDiv = [ 0 ] * MAX
def precomputeCounts ( ) :
    for i in range ( 1 , int ( MAX ** 0.5 ) ) :
        for j in range ( i * i , MAX , i * i ) :
            perfectDiv [ j ] += 1
def countPerfectDivisors ( n ) :
    return perfectDiv [ n ]
precomputeCounts ( )
n = 16
print ( "Total perfect divisors of" , n , "=" , countPerfectDivisors ( n ) )
n = 12
print ( "Total perfect divisors of" , n , "=" , countPerfectDivisors ( n ) )


---> console_out:
Total perfect divisors of 16 = 3
Total perfect divisors of 12 = 2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 251
---> probID: aizu_p02022_A
---> inputs:
3 2
3 1 5
2 4
---> outputs:
54

import sys
n , m = map ( int , sys . stdin . readline ( ) . split ( ) )
nn = sum ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
mm = sum ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
print ( nn * mm )


---> console_out:
54
 
MATCHED!! :D
 14%|█▍        | 251/1746 [02:30<03:13,  7.71it/s]out1,out2 10 20


-------------------------------------


---> lineNum: 252
---> probID: aizu_p01520_A
---> inputs:
2 10 2
3 4
---> outputs:
['2', '1\n']

import math
n , t , e = map ( int , input ( ) . split ( ) )
x = list ( map ( int , input ( ) . split ( ) ) )
for i in range ( n ) :
    check = x [ i ] * math . ceil ( ( t + e ) / x [ i ] )
    if check <= t + e and check >= t - e :
        print ( i + 1 )
        break
else :
    print ( - 1 )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 253
---> probID: geeksforgeeks_5050_A
---> inputs:

---> outputs:
8:20


import math
def cal_IST ( h , r ) :
    IST = ( h * r * 1.0 ) / 360
    int_IST = int ( IST )
    float_IST = int ( math . ceil ( ( int ( ( IST - int_IST ) * 60 ) ) ) )
    print ( str ( int_IST ) + ":" + str ( float_IST ) )
if __name__ == '__main__' :
    h = 20
    r = 150
    cal_IST ( h , r )


---> console_out:
8:20
 
MATCHED!! :D
 14%|█▍        | 253/1746 [02:30<02:47,  8.91it/s]

-------------------------------------


---> lineNum: 254
---> probID: geeksforgeeks_4860_A
---> inputs:

---> outputs:
1.000 + i 0.000
1.000 + i 0.000
-1.000 + i 0.000
1.000 + i 0.000
-0.500 + i 0.866
-0.500 - i 0.866


import math
def printRoots ( n ) :
    theta = 2 * math . pi / n
    for k in range ( n ) :
        real = math . cos ( k * theta )
        img = math . sin ( k * theta )
        print ( "{:.3f}" . format ( real ) , end = "" )
        if img >= 0 :
            print ( " + i " , end = "" )
        else :
            print ( " - i " , end = "" )
        print ( "{:.3f}" . format ( abs ( img ) ) )
printRoots ( 1 )
printRoots ( 2 )
printRoots ( 3 )


---> console_out:
1.000 + i 0.000
1.000 + i 0.000
-1.000 + i 0.000
1.000 + i 0.000
-0.500 + i 0.866
-0.500 - i 0.866
 
MATCHED!! :D
  File "./junk/1703783835677_8530/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax
out1,out2  104010501060204020502060304030503060


-------------------------------------


---> lineNum: 255
---> probID: geeksforgeeks_2548_A
---> inputs:

---> outputs:
{1, 4}, {1, 5}, {1, 6}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, 

import java . io . * ;
import java . util . * ;
class GFG { static void findCart ( int [ ] arr1 , int [ ] arr2 , int n , int n1 ) { for ( int i = 0 ; i < n ; i + + ) { for ( int j = 0 ; j < n1 ; j + + ) { System . out . print ( "{" + arr1 [ i ] + ", " + arr2 [ j ] + "}, " ) ; } } } public static void main ( String [ ] args ) { int [ ] arr1 = { 1 , 2 , 3 } ; int [ ] arr2 = { 4 , 5 , 6 } ; int n1 = arr1 . length ; int n2 = arr2 . length ; findCart ( arr1 , arr2 , n1 , n2 ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
 15%|█▍        | 255/1746 [02:30<02:26, 10.15it/s]

-------------------------------------


---> lineNum: 256
---> probID: geeksforgeeks_2709_A
---> inputs:

---> outputs:
3


def no_of_ways ( s ) :
    n = len ( s )
    count_left = 0
    count_right = 0
    for i in range ( n ) :
        if s [ i ] == s [ 0 ] :
            count_left += 1
        else :
            break
    for i in range ( n - 1 , - 1 , - 1 ) :
        if s [ i ] == s [ n - 1 ] :
            count_right += 1
        else :
            break
    if s [ 0 ] == s [ n - 1 ] :
        return ( count_left + 1 ) * ( count_right + 1 )
    else :
        return count_left + count_right + 1
s = "geeksforgeeks"
print ( no_of_ways ( s ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 257
---> probID: geeksforgeeks_2299_A
---> inputs:

---> outputs:
10


MAX = 1000000
prime = [ True ] * ( MAX + 1 )
def SieveOfEratosthenes ( ) :
    global prime
    for i in range ( 2 , int ( MAX ** 0.5 ) + 1 ) :
        if prime [ i ] :
            for j in range ( i * 2 , MAX + 1 , i ) :
                prime [ j ] = False
    prime [ 0 ] = False
    prime [ 1 ] = False
def SumOfKthPrimes ( arr , n , k ) :
    global prime
    c = 0
    s = 0
    for i in range ( n ) :
        if prime [ arr [ i ] ] :
            c += 1
            if c % k == 0 :
                s += arr [ i ]
                c = 0
    print ( s )
SieveOfEratosthenes ( )
arr = [ 2 , 3 , 5 , 7 , 11 ]
n = len ( arr )
k = 2
SumOfKthPrimes ( arr , n , k )


---> console_out:
10
 
MATCHED!! :D
 15%|█▍        | 257/1746 [02:30<03:05,  8.05it/s]

-------------------------------------


---> lineNum: 258
---> probID: geeksforgeeks_4266_A
---> inputs:

---> outputs:
10


MAX = 1000000
prime = [ True ] * ( MAX + 1 )
def SieveOfEratosthenes ( ) :
    for i in range ( 2 , int ( MAX ** 0.5 ) + 1 ) :
        if prime [ i ] :
            for j in range ( i * 2 , MAX + 1 , i ) :
                prime [ j ] = False
    prime [ 0 ] = False
    prime [ 1 ] = False
def solve ( arr , n , k ) :
    c = 0
    sum = 0
    for i in range ( n ) :
        if prime [ arr [ i ] ] :
            c += 1
            if c % k == 0 :
                sum += arr [ i ]
                c = 0
    print ( sum )
SieveOfEratosthenes ( )
n = 5
k = 2
arr = [ 2 , 3 , 5 , 7 , 11 ]
solve ( arr , n , k )


---> console_out:
10
 
MATCHED!! :D


-------------------------------------


---> lineNum: 259
---> probID: geeksforgeeks_2331_A
---> inputs:

---> outputs:
21


MAX = 1000000
prime = [ False ] * ( MAX + 1 )
def SieveOfEratosthenes ( ) :
    prime [ 1 ] = True
    prime [ 0 ] = True
    p = 2
    while p * p <= MAX :
        if not prime [ p ] :
            i = p * 2
            while i <= MAX :
                prime [ i ] = True
                i += p
        p += 1
def productOfKthPrimes ( arr , n , k ) :
    c = 0
    product = 1
    for i in range ( n ) :
        if not prime [ arr [ i ] ] :
            c += 1
            if c % k == 0 :
                product *= arr [ i ]
                c = 0
    print ( product )
SieveOfEratosthenes ( )
n = 5
k = 2
arr = [ 2 , 3 , 5 , 7 , 11 ]
productOfKthPrimes ( arr , n , k )


---> console_out:
21
 
MATCHED!! :D
 15%|█▍        | 259/1746 [02:31<04:58,  4.98it/s]

-------------------------------------


---> lineNum: 260
---> probID: geeksforgeeks_5053_A
---> inputs:

---> outputs:
0101 1111 1001 0110 0000 1010 


import numpy as np
def findAllSequences ( diff , out , start , end ) :
    if abs ( diff ) > ( end - start + 1 ) / 2 :
        return
    if start > end :
        if diff == 0 :
            print ( '' . join ( out [ : - 1 ] ) , end = ' ' )
        return
    out [ start ] = '0'
    out [ end ] = '1'
    findAllSequences ( diff + 1 , out , start + 1 , end - 1 )
    out [ start ] = out [ end ] = '1'
    findAllSequences ( diff , out , start + 1 , end - 1 )
    out [ start ] = out [ end ] = '0'
    findAllSequences ( diff , out , start + 1 , end - 1 )
    out [ start ] = '1'
    out [ end ] = '0'
    findAllSequences ( diff - 1 , out , start + 1 , end - 1 )
if __name__ == '__main__' :
    n = 2
    out = np . zeros ( 2 * n + 1 , dtype = 'U1' )
    out [ - 1 ] = '\0'
    findAllSequences ( 0 , out , 0 , 2 * n - 1 )
    print ( '' )


---> console_out:
0101 1111 1001 0110 0000 1010 
 
MATCHED!! :D
 15%|█▍        | 260/1746 [02:31<05:16,  4.69it/s]

-------------------------------------


---> lineNum: 261
---> probID: codeforces_1119_B
---> inputs:
5 7
2 3 5 4 1
---> outputs:
3

import heapq
n , h = map ( int , input ( ) . split ( ) )
arr = list ( map ( int , input ( ) . split ( ) ) )
overAllPq = [ ]
ans = - 1
for i in range ( n ) :
    heapq . heappush ( overAllPq , - arr [ i ] )
    pq = sorted ( overAllPq )
    c1 , c2 = h , h
    flag = True
    while pq :
        if flag :
            if c1 >= - pq [ 0 ] :
                c1 += heapq . heappop ( pq )
            else :
                break
            flag = False
        else :
            if c2 >= - pq [ 0 ] :
                c2 += heapq . heappop ( pq )
            else :
                break
            flag = True
    if not pq :
        ans = i + 1
    else :
        break
print ( ans )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 262
---> probID: geeksforgeeks_2488_A
---> inputs:

---> outputs:
1 -> 2 -> 3 -> 4 -> 5 -> 6 -> NULL


class Node :
    def __init__ ( self , data ) :
        self . data = data
        self . next = None
def printList ( node ) :
    while node != None :
        print ( node . data , "->" , end = " " )
        node = node . next
    print ( "NULL" )
def cntNodes ( node ) :
    if node == None :
        return 0
    return 1 + cntNodes ( node . next )
def updateList ( head , m ) :
    cnt = cntNodes ( head )
    if cnt != m and m < cnt :
        skip = cnt - m
        prev = None
        curr = head
        while skip > 0 :
            prev = curr
            curr = curr . next
            skip -= 1
        prev . next = None
        tempHead = head
        head = curr
        while curr . next != None :
            curr = curr . next
        curr . next = tempHead
    printList ( head )
if __name__ == "__main__" :
    head = Node ( 4 )
    head . next = Node ( 5 )
    head . next . next = Node ( 6 )
    head . next . next . next = Node ( 1 )
    head . next . next . next . next = Node ( 2 )
    head . next . next . next . next . next = Node ( 3 )
    m = 3
    updateList ( head , m )


---> console_out:
1 -> 2 -> 3 -> 4 -> 5 -> 6 -> NULL
 
MATCHED!! :D
 15%|█▌        | 262/1746 [02:32<04:06,  6.02it/s]out1,out2 40 30


-------------------------------------


---> lineNum: 263
---> probID: geeksforgeeks_4939_A
---> inputs:

---> outputs:
3


import string
def maxSubStrings ( s , k ) :
    maxSubStr = 0
    n = len ( s )
    for c in string . ascii_lowercase :
        curr = 0
        for i in range ( n - k + 1 ) :
            if s [ i ] != c :
                continue
            cnt = 0
            while i < n and s [ i ] == c and cnt != k :
                i += 1
                cnt += 1
            i -= 1
            if cnt == k :
                curr += 1
        maxSubStr = max ( maxSubStr , curr )
    return maxSubStr
if __name__ == '__main__' :
    s = "aaacaabbaa"
    k = 2
    print ( maxSubStrings ( s , k ) )


---> console_out:
4
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 264
---> probID: geeksforgeeks_626_A
---> inputs:

---> outputs:
0
2
6


import numpy as np
def ansQueries ( prefeven , prefodd , l , r ) :
    if ( r - l + 1 ) % 2 == 0 :
        print ( "0" )
    else :
        if l % 2 == 0 :
            print ( prefeven [ r ] ^ prefeven [ l - 1 ] )
        else :
            print ( prefodd [ r ] ^ prefodd [ l - 1 ] )
def wrapper ( arr , n , l , r , q ) :
    prefeven = np . zeros ( 100 , dtype = int )
    prefodd = np . zeros ( 100 , dtype = int )
    for i in range ( 1 , n + 1 ) :
        if i % 2 == 0 :
            prefeven [ i ] = arr [ i - 1 ] ^ prefeven [ i - 1 ]
            prefodd [ i ] = prefodd [ i - 1 ]
        else :
            prefeven [ i ] = prefeven [ i - 1 ]
            prefodd [ i ] = prefodd [ i - 1 ] ^ arr [ i - 1 ]
    i = 0
    while i != q :
        ansQueries ( prefeven , prefodd , l [ i ] , r [ i ] )
        i += 1
arr = np . array ( [ 1 , 2 , 3 , 4 , 5 ] )
n = arr . size
l = np . array ( [ 1 , 1 , 2 ] )
r = np . array ( [ 2 , 3 , 4 ] )
q = l . size
wrapper ( arr , n , l , r , q )


---> console_out:
0
2
6
 
MATCHED!! :D
 15%|█▌        | 264/1746 [02:32<04:07,  5.99it/s]Traceback (most recent call last):
  File "./junk/1703783837621_8745/main.py", line 1, in <module>
    import java . util . Scanner
ModuleNotFoundError: No module named 'java'
out1,out2  110


-------------------------------------


---> lineNum: 265
---> probID: codeforces_624_B
---> inputs:
3
2 5 5
---> outputs:
11

import java . util . Scanner
n = int ( input ( ) )
ans = [ ]
for i in range ( n ) :
    ans . append ( int ( input ( ) ) )
ans . sort ( )
count = ans [ n - 1 ]
for i in range ( n - 2 , - 1 , - 1 ) :
    if ans [ i ] < ans [ i + 1 ] :
        count += ans [ i ]
    else :
        while ans [ i ] >= ans [ i + 1 ] :
            ans [ i ] -= 1
        if ans [ i ] > 0 :
            count += ans [ i ]
print ( count )


---> console_out:
 
DIDN'T MATCH!! :(
out1,out2 timeoutencounteredpy 165010801450234011030


-------------------------------------


---> lineNum: 266
---> probID: codeforces_1440_B
---> inputs:
6
2 4
0 24 34 58 62 64 69 78
2 2
27 61 81 91
4 3
2 4 16 18 21 27 36 53 82 91 92 95
3 4
3 11 12 22 33 35 38 67 69 71 94 99
2 1
11 41
3 3
1 1 1 1 1 1 1 1 1
---> outputs:
165
108
145
234
11
3

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = StringTokenizer ( self . br ( ) . strip ( ) )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return self . br ( ) . strip ( )
def main ( ) :
    reader = FastReader ( )
    num = reader . nextInt ( )
    while num > 0 :
        n = reader . nextInt ( )
        k = reader . nextInt ( )
        arr = [ 0 ] * ( n * k )
        for i in range ( n * k ) :
            arr [ i ] = reader . nextLong ( )
        sum = 0
        skip = 0
        start = k * n
        if n % 2 == 0 :
            skip = n // 2
            for i in range ( 1 , k + 1 ) :
                sum += arr [ start - skip - 1 ]
                start = start - skip - 1
        else :
            skip = n // 2 + 1
            for i in range ( 1 , k + 1 ) :
                sum += arr [ start - skip ]
                start = start - skip
        print ( sum )
        num -= 1
if __name__ == '__main__' :
    main ( )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 15%|█▌        | 266/1746 [03:12<2:39:36,  6.47s/it]Traceback (most recent call last):
  File "./junk/1703783877818_4831/main.py", line 6, in <module>
    cmd , t = map ( int , input ( ) . split ( ) )
ValueError: too many values to unpack (expected 2)
out1,out2  305020


-------------------------------------


---> lineNum: 267
---> probID: aizu_p02435_A
---> inputs:
3 9
0 0 1
0 0 2
0 0 3
0 2 4
0 2 5
1 0
1 2
2 0
1 0
---> outputs:
3
5
2

import collections
n , q = map ( int , input ( ) . split ( ) )
stack = { i : collections . deque ( ) for i in range ( n ) }
result = [ ]
for i in range ( q ) :
    cmd , t = map ( int , input ( ) . split ( ) )
    if cmd == 0 :
        stack [ t ] . append ( int ( input ( ) ) )
    elif cmd == 1 and stack [ t ] :
        result . append ( str ( stack [ t ] [ 0 ] ) + "\n" )
    elif cmd == 2 and stack [ t ] :
        stack [ t ] . pop ( )
print ( "" . join ( result ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 268
---> probID: geeksforgeeks_289_A
---> inputs:

---> outputs:
0 4 8 12 

def printArray ( arr , n ) :
    for i in range ( n ) :
        print ( arr [ i ] , end = " " )
def removeMin ( arr , n ) :
    i , minVal = 1 , arr [ 0 ]
    while i < n :
        minVal = min ( minVal , arr [ i ] )
        i += 1
    i = 0
    while i < n :
        arr [ i ] = arr [ i ] - minVal
        i += 1
def removeFromMax ( arr , n ) :
    i , maxVal = 1 , arr [ 0 ]
    while i < n :
        maxVal = max ( maxVal , arr [ i ] )
        i += 1
    i = 0
    while i < n :
        arr [ i ] = maxVal - arr [ i ]
        i += 1
def modifyArray ( arr , n , k ) :
    if k % 2 == 0 :
        removeMin ( arr , n )
    else :
        removeFromMax ( arr , n )
    printArray ( arr , n )
arr = [ 4 , 8 , 12 , 16 ]
n = len ( arr )
k = 2
modifyArray ( arr , n , k )


---> console_out:
0 4 8 12  
MATCHED!! :D
 15%|█▌        | 268/1746 [03:12<1:50:16,  4.48s/it]

-------------------------------------


---> lineNum: 269
---> probID: geeksforgeeks_824_A
---> inputs:

---> outputs:
3.333 -3.000


def find_Centroid ( v ) :
    ans = [ 0 , 0 ]
    n = len ( v )
    signedArea = 0
    for i in range ( n ) :
        x0 , y0 = v [ i ] [ 0 ] , v [ i ] [ 1 ]
        x1 , y1 = v [ ( i + 1 ) % n ] [ 0 ] , v [ ( i + 1 ) % n ] [ 1 ]
        A = ( x0 * y1 ) - ( x1 * y0 )
        signedArea += A
        ans [ 0 ] += ( x0 + x1 ) * A
        ans [ 1 ] += ( y0 + y1 ) * A
    signedArea *= 0.5
    ans [ 0 ] = ( ans [ 0 ] ) / ( 6 * signedArea )
    ans [ 1 ] = ( ans [ 1 ] ) / ( 6 * signedArea )
    return ans
vp = [ [ 1 , 2 ] , [ 3 , - 4 ] , [ 6 , - 7 ] ]
ans = find_Centroid ( vp )
print ( "{:.3f} {:.3f}" . format ( ans [ 0 ] , ans [ 1 ] ) )


---> console_out:
3.333 -3.000
 
MATCHED!! :D


-------------------------------------


---> lineNum: 270
---> probID: codeforces_1531_A
---> inputs:
7
red
violet
unlock
red
orange
lock
indigo
---> outputs:
orange

import sys
color = "blue"
locked = False
lines = int ( input ( ) )
for i in range ( lines ) :
    next = input ( )
    if next == "lock" :
        locked = True
        continue
    if next == "unlock" :
        locked = False
        continue
    if locked :
        continue
    color = next
print ( color )


---> console_out:
orange
 
MATCHED!! :D
 15%|█▌        | 270/1746 [03:12<1:16:41,  3.12s/it]

-------------------------------------


---> lineNum: 271
---> probID: geeksforgeeks_3397_A
---> inputs:

---> outputs:
14


import numpy as np
def minOperations ( ar , k ) :
    ar = np . sort ( ar )
    opsNeeded = 0
    for i in range ( k ) :
        opsNeeded += ar [ k - 1 ] - ar [ i ]
    ans = opsNeeded
    for i in range ( k , len ( ar ) ) :
        opsNeeded = opsNeeded - ( ar [ i - 1 ] - ar [ i - k ] )
        opsNeeded += ( k - 1 ) * ( ar [ i ] - ar [ i - 1 ] )
        ans = min ( ans , opsNeeded )
    return ans
arr = [ 3 , 1 , 9 , 100 ]
n = len ( arr )
k = 3
print ( minOperations ( arr , k ) )


---> console_out:
14
 
MATCHED!! :D


-------------------------------------


---> lineNum: 272
---> probID: geeksforgeeks_4092_A
---> inputs:

---> outputs:
 Special Character 


import io
def charCheck ( input_char ) :
    if ( input_char >= 'A' and input_char <= 'Z' ) or ( input_char >= 'a' and input_char <= 'z' ) :
        print ( "Alphabet" )
    elif input_char >= '0' and input_char <= '9' :
        print ( "Digit" )
    else :
        print ( "Special Character" )
if __name__ == '__main__' :
    input_char = '$'
    charCheck ( input_char )


---> console_out:
Special Character
 
MATCHED!! :D
 16%|█▌        | 272/1746 [03:13<54:30,  2.22s/it]    File "./junk/1703783878416_6134/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  202030


-------------------------------------


---> lineNum: 273
---> probID: codeforces_1020_B
---> inputs:
3
2 3 2
---> outputs:
2 2 3

import java . util . Scanner
from collections import defaultdict
if __name__ == '__main__' :
    sc = Scanner ( System . in )
    n = sc . nextInt ( )
    lst = [ ]
    for i in range ( n ) :
        lst . append ( sc . nextInt ( ) )
    for i in range ( n ) :
        d = defaultdict ( int )
        d [ i + 1 ] = 1
        flag = 0
        j = i
        while flag == 0 :
            if d [ lst [ j ] ] == 0 :
                d [ lst [ j ] ] = 1
            else :
                flag = 1
                print ( lst [ j ] , end = ' ' )
            j = lst [ j ] - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 274
---> probID: codeforces_102_A
---> inputs:
3 3
1 2 3
1 2
2 3
3 1
---> outputs:
6

import sys
n , m = map ( int , input ( ) . split ( ) )
p = list ( map ( int , input ( ) . split ( ) ) )
tab = [ set ( ) for _ in range ( n ) ]
ans = 3000003
for i in range ( m ) :
    a , b = map ( int , input ( ) . split ( ) )
    a -= 1
    b -= 1
    for x in tab [ a ] :
        if x in tab [ b ] :
            ans = min ( ans , p [ a ] + p [ b ] + p [ x ] )
    tab [ a ] . add ( b )
    tab [ b ] . add ( a )
if ans == 3000003 :
    print ( - 1 )
else :
    print ( ans )


---> console_out:
6
 
MATCHED!! :D
 16%|█▌        | 274/1746 [03:13<38:22,  1.56s/it]Traceback (most recent call last):
  File "./junk/1703783878544_4646/main.py", line 25, in <module>
    CF67B ( ) . main ( )
  File "./junk/1703783878544_4646/main.py", line 4, in __init__
    super ( ) . __init__ ( sys . stdout . buffer , True )
TypeError: object.__init__() takes exactly one argument (the instance to initialize)
out1,out2  4010502030


-------------------------------------


---> lineNum: 275
---> probID: codeforces_67_B
---> inputs:
5 2
1 2 1 0 0
---> outputs:
4 1 5 2 3

import sys
class CF67B :
    def __init__ ( self ) :
        super ( ) . __init__ ( sys . stdout . buffer , True )
        self . sc = sys . stdin
    def main ( self ) :
        n , k = map ( int , self . sc . readline ( ) . split ( ) )
        bb = list ( map ( int , self . sc . readline ( ) . split ( ) ) )
        aa = [ 0 ] * n
        m = 0
        for a in range ( n - 1 , - 1 , - 1 ) :
            j = 0
            while bb [ a ] > 0 :
                if aa [ j ] >= a + k :
                    bb [ a ] -= 1
                j += 1
            for j_ in range ( m , j , - 1 ) :
                aa [ j_ ] = aa [ j_ - 1 ]
            aa [ j ] = a
            m += 1
        for i in range ( n ) :
            self . print ( aa [ i ] + 1 , end = " " )
        self . println ( )
if __name__ == "__main__" :
    CF67B ( ) . main ( )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703783878605_3687/main.py", line 12, in <module>
    cell = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '4 3 5'
out1,out2  201010202020103010
out1,out2  501010202010203010103030102010202020203010


-------------------------------------


---> lineNum: 276
---> probID: codeforces_237_B
---> inputs:
3
3 2 1
4 3 5
6 1
2
---> outputs:
['2\n1 1 2 2\n2 1 3 1', '5\n1 1 2 2 \n1 2 3 1 \n1 3 3 1 \n2 1 2 2 \n2 2 3 1 \n']

import sys
class Point :
    def __init__ ( self , x , y ) :
        self . x = x
        self . y = y
n = int ( input ( ) )
c = list ( map ( int , input ( ) . split ( ) ) )
table = [ [ 0 for j in range ( 50 ) ] for i in range ( 50 ) ]
map = { }
for i in range ( n ) :
    for j in range ( c [ i ] ) :
        cell = int ( input ( ) )
        map [ cell ] = Point ( i + 1 , j + 1 )
        table [ i ] [ j ] = cell
cnt = 0
m = 0
sb = [ ]
for i in range ( n ) :
    for j in range ( c [ i ] ) :
        cnt += 1
        if table [ i ] [ j ] == cnt :
            continue
        sb . append ( str ( i + 1 ) + " " + str ( j + 1 ) + " " )
        point = map [ cnt ]
        sb . append ( str ( point . x ) + " " + str ( point . y ) + "\n" )
        tmp = table [ i ] [ j ]
        table [ i ] [ j ] = table [ point . x - 1 ] [ point . y - 1 ]
        table [ point . x - 1 ] [ point . y - 1 ] = tmp
        map [ tmp ] = point
        m += 1
print ( m )
if m > 0 :
    sys . stdout . write ( '' . join ( sb ) )


---> console_out:
 
DIDN'T MATCH!! :(
 16%|█▌        | 276/1746 [03:13<27:11,  1.11s/it]

-------------------------------------


---> lineNum: 277
---> probID: geeksforgeeks_951_A
---> inputs:

---> outputs:
7


import numpy as np
def sameOccurrence ( arr , n , x , y ) :
    result = 0
    for i in range ( n ) :
        ctX = 0
        ctY = 0
        for j in range ( i , n ) :
            if arr [ j ] == x :
                ctX += 1
            elif arr [ j ] == y :
                ctY += 1
            if ctX == ctY :
                result += 1
    return result
arr = np . array ( [ 1 , 2 , 2 , 3 , 4 , 1 ] )
n = len ( arr )
x = 2
y = 3
print ( sameOccurrence ( arr , n , x , y ) )


---> console_out:
7
 
MATCHED!! :D


-------------------------------------


---> lineNum: 278
---> probID: codeforces_1633_B
---> inputs:
4
01
1010101010111
00110001000
1
---> outputs:
0
5
3
0

import sys
t = int ( input ( ) )
for i in range ( t ) :
    a = input ( ) . strip ( )
    if len ( a ) >= 3 :
        z = 0
        o = 0
        for j in range ( len ( a ) ) :
            if a [ j ] == '1' :
                o += 1
            else :
                z += 1
        if z > o :
            print ( o )
        elif o > z :
            print ( z )
        else :
            print ( z - 1 )
    else :
        print ( 0 )


---> console_out:
0
5
3
0
 
MATCHED!! :D
 16%|█▌        | 278/1746 [03:13<20:08,  1.21it/s]

-------------------------------------


---> lineNum: 279
---> probID: codeforces_914_B
---> inputs:
3
4 5 7
---> outputs:
Conan

import math
from collections import defaultdict
n = 0
a = [ ]
def solve ( ) :
    mx = max ( a )
    cnt = defaultdict ( int )
    for i in range ( n ) :
        cnt [ a [ i ] ] += 1
    if cnt [ mx ] % 2 != 0 :
        return "Conan\n"
    elif cnt [ mx ] == n :
        return "Agasa\n"
    else :
        for key , value in cnt . items ( ) :
            if value % 2 != 0 :
                return "Conan\n"
        return "Agasa\n"
if __name__ == "__main__" :
    lenv = False
    if lenv :
        bf = open ( "./junk/1703783878989_2388/input.txt" , "r" )
        pw = open ( "./junk/1703783878989_2388/output.txt" , "w" )
    else :
        bf = open ( 0 )
        pw = open ( 1 , "w" )
    n = int ( bf . readline ( ) . strip ( ) )
    a = list ( map ( int , bf . readline ( ) . strip ( ) . split ( ) ) )
    str = solve ( ) + "\n"
    pw . write ( str )
    pw . flush ( )


---> console_out:
Conan

 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783879053_5243/main.py", line 1, in <module>
    import java . util
ModuleNotFoundError: No module named 'java'
out1,out2  1020304050


-------------------------------------


---> lineNum: 280
---> probID: geeksforgeeks_803_A
---> inputs:

---> outputs:
1 2 3 4 5 

import java . util
class GFG :
    def main ( args ) :
        a = [ 1 , 2 , 3 , 4 , 5 ]
        for i in range ( 5 ) :
            print ( a [ i ] , end = " " )


---> console_out:
 
DIDN'T MATCH!! :(
 16%|█▌        | 280/1746 [03:13<14:31,  1.68it/s]

-------------------------------------


---> lineNum: 281
---> probID: geeksforgeeks_218_A
---> inputs:

---> outputs:
Total number of triplets found: 18


def main ( ) :
    target = 93
    arr = [ 1 , 31 , 3 , 1 , 93 , 3 , 31 , 1 , 93 ]
    length = len ( arr )
    totalCount = 0
    for i in range ( length - 2 ) :
        if target % arr [ i ] == 0 :
            for j in range ( i + 1 , length - 1 ) :
                if target % ( arr [ i ] * arr [ j ] ) == 0 :
                    toFind = target // ( arr [ i ] * arr [ j ] )
                    for k in range ( j + 1 , length ) :
                        if arr [ k ] == toFind :
                            totalCount += 1
    print ( "Total number of triplets found: " + str ( totalCount ) )
if __name__ == "__main__" :
    main ( )


---> console_out:
Total number of triplets found: 18
 
MATCHED!! :D
 16%|█▌        | 280/1746 [03:30<14:31,  1.68it/s]out1,out2 timeoutencounteredpy 101010304040202040306060
out1,out2 timeoutencounteredpy 1010101040001208016020409060120


-------------------------------------


---> lineNum: 282
---> probID: codeforces_1396_A
---> inputs:
4
1 3 2 4
---> outputs:
['1 1 \n-1\n3 4\n4 2\n2 4\n-3 -6 -6', '1 1\n-1\n1 4\n0 -12 -8 -16\n2 4\n9 6 12\n']

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = StringTokenizer ( self . br ( ) . strip ( ) )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return self . br ( ) . strip ( )
def main ( ) :
    t = FastReader ( )
    o = sys . stdout
    n = t . nextInt ( )
    a = [ 0 ] * n
    for i in range ( n ) :
        a [ i ] = t . nextLong ( )
    if n == 1 :
        o . write ( "1 1\n" )
        o . write ( str ( - a [ 0 ] ) + "\n" )
        o . write ( "1 1\n" )
        o . write ( "0\n" )
        o . write ( "1 1\n" )
        o . write ( "0\n" )
    else :
        o . write ( "1 1\n" )
        o . write ( str ( - a [ 0 ] ) + "\n" )
        o . write ( "1 " + str ( n ) + "\n" )
        a [ 0 ] = 0
        for i in range ( n ) :
            o . write ( str ( - n * a [ i ] ) + " " )
        o . write ( "\n2 " + str ( n ) + "\n" )
        for i in range ( 1 , n ) :
            o . write ( str ( ( n - 1 ) * a [ i ] ) + " " )
    o . flush ( )
    o . close ( )
if __name__ == "__main__" :
    main ( )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 16%|█▌        | 282/1746 [03:54<2:37:43,  6.46s/it]

-------------------------------------


---> lineNum: 283
---> probID: geeksforgeeks_1001_A
---> inputs:

---> outputs:
3


def gcd ( a , b ) :
    return a if b == 0 else gcd ( b , a % b )
def finalNum ( arr , n ) :
    result = 0
    for i in range ( n ) :
        result = gcd ( result , arr [ i ] )
    return result
arr = [ 3 , 9 , 6 , 36 ]
n = len ( arr )
print ( finalNum ( arr , n ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 284
---> probID: geeksforgeeks_1838_A
---> inputs:

---> outputs:
1
3


import numpy as np
def lastElement ( a , n ) :
    N = 1000
    steps = 1
    v = [ list ( ) for _ in range ( N ) ]
    if n == 1 :
        return a [ 0 ]
    for i in range ( 0 , n , 2 ) :
        v [ steps ] . append ( a [ i ] | a [ i + 1 ] )
    while len ( v [ steps ] ) > 1 :
        steps += 1
        for i in range ( 0 , len ( v [ steps - 1 ] ) , 2 ) :
            if steps % 2 == 1 :
                v [ steps ] . append ( v [ steps - 1 ] [ i ] | v [ steps - 1 ] [ i + 1 ] )
            else :
                v [ steps ] . append ( v [ steps - 1 ] [ i ] ^ v [ steps - 1 ] [ i + 1 ] )
    return v [ steps ] [ 0 ]
if __name__ == '__main__' :
    a = np . array ( [ 1 , 4 , 5 , 6 ] )
    n = len ( a )
    index = 0
    value = 2
    a [ 0 ] = 2
    print ( lastElement ( a , n ) )
    index = 3
    value = 5
    a [ index ] = value
    print ( lastElement ( a , n ) )


---> console_out:
1
3
 
MATCHED!! :D
 16%|█▋        | 284/1746 [03:54<1:51:24,  4.57s/it]

-------------------------------------


---> lineNum: 285
---> probID: geeksforgeeks_4700_A
---> inputs:

---> outputs:
4
93
2626


import math
def number_cake ( n ) :
    return ( n * n * n + 5 * n + 6 ) // 6
n = 2
print ( number_cake ( n ) )
n = 8
print ( number_cake ( n ) )
n = 25
print ( number_cake ( n ) )


---> console_out:
4
93
2626
 
MATCHED!! :D
out1,out2 10 00


-------------------------------------


---> lineNum: 286
---> probID: atcoder_ARC062_B
---> inputs:
2 2
---> outputs:
0


import sys
input = sys . stdin . readline ( ) . strip ( )
result = 0
p = 0
g = 1
for i in range ( 1 , len ( input ) ) :
    if input [ i ] == 'g' :
        if p + 1 <= g :
            result += 1
            p += 1
        else :
            g += 1
    else :
        if p + 1 <= g :
            p += 1
        else :
            g += 1
            result -= 1
print ( result )


---> console_out:
-1
 
DIDN'T MATCH!! :(
 16%|█▋        | 286/1746 [03:54<1:18:21,  3.22s/it]

-------------------------------------


---> lineNum: 287
---> probID: geeksforgeeks_4386_A
---> inputs:

---> outputs:
***********
***** *****
****   ****
***     ***
**       **
*         *



import math
def pattern ( N ) :
    i , j , k , space = 0 , 0 , 0 , 1
    rows = N
    for i in range ( rows , 0 , - 1 ) :
        for j in range ( 1 , i + 1 ) :
            print ( "*" , end = "" )
        if i != rows :
            for k in range ( 1 , space + 1 ) :
                print ( " " , end = "" )
            space += 2
        for j in range ( i , 0 , - 1 ) :
            if j != rows :
                print ( "*" , end = "" )
        print ( )
    print ( )
if __name__ == "__main__" :
    N = 6
    pattern ( N )


---> console_out:
***********
***** *****
****   ****
***     ***
**       **
*         *

 
MATCHED!! :D


-------------------------------------


---> lineNum: 288
---> probID: geeksforgeeks_5207_A
---> inputs:

---> outputs:
7
9


import math
def maximum_middle_value ( n , k , arr ) :
    ans = - 1
    low = ( n + 1 - k ) // 2
    high = ( n + 1 - k ) // 2 + k
    for i in range ( low , high + 1 ) :
        ans = max ( ans , arr [ i - 1 ] )
    return ans
n = 5
k = 2
arr = [ 9 , 5 , 3 , 7 , 10 ]
print ( maximum_middle_value ( n , k , arr ) )
n = 9
k = 3
arr1 = [ 2 , 4 , 3 , 9 , 5 , 8 , 7 , 6 , 10 ]
print ( maximum_middle_value ( n , k , arr1 ) )


---> console_out:
7
9
 
MATCHED!! :D
 16%|█▋        | 288/1746 [03:54<55:12,  2.27s/it]  

-------------------------------------


---> lineNum: 289
---> probID: leetcode_437_A
---> inputs:

---> outputs:
3

class TreeNode :
    def __init__ ( self , rootData ) :
        self . val = rootData
        self . left = None
        self . right = None
class Solution :
    def __init__ ( self ) :
        self . result = 0
        self . cache = { 0 : 1 }
    def pathSum ( self , root : TreeNode , sum : int ) -> int :
        self . result = 0
        self . cache = { 0 : 1 }
        self . pathSumHelper ( root , sum , 0 )
        return self . result
    def pathSumHelper ( self , root : TreeNode , target : int , soFar : int ) -> None :
        if root :
            complement = soFar + root . val - target
            if complement in self . cache :
                self . result += self . cache [ complement ]
            self . cache [ soFar + root . val ] = self . cache . get ( soFar + root . val , 0 ) + 1
            self . pathSumHelper ( root . left , target , soFar + root . val )
            self . pathSumHelper ( root . right , target , soFar + root . val )
            self . cache [ soFar + root . val ] -= 1
if __name__ == '__main__' :
    sObj = Solution ( )
    tree = TreeNode ( 10 )
    tree . left = TreeNode ( 5 )
    tree . right = TreeNode ( - 3 )
    tree . left . left = TreeNode ( 3 )
    tree . left . right = TreeNode ( 2 )
    tree . right . right = TreeNode ( 11 )
    tree . left . left . left = TreeNode ( 3 )
    tree . left . left . right = TreeNode ( - 2 )
    tree . left . right . right = TreeNode ( 1 )
    sum = 8
    out = sObj . pathSum ( tree , sum )
    print ( out )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 290
---> probID: geeksforgeeks_3650_A
---> inputs:

---> outputs:
5


import math
def getmax ( arr , n , x ) :
    s = 0
    for i in range ( n ) :
        s = s + arr [ i ]
    print ( min ( s , x ) )
if __name__ == '__main__' :
    arr = [ 1 , 2 , 3 , 4 ]
    x = 5
    arr_size = len ( arr )
    getmax ( arr , arr_size , x )


---> console_out:
5
 
MATCHED!! :D
 17%|█▋        | 290/1746 [03:54<39:05,  1.61s/it]Traceback (most recent call last):
  File "./junk/1703783920071_2974/main.py", line 15, in <module>
    msm ( int ( input ( ) ) , 1 )
  File "./junk/1703783920071_2974/main.py", line 5, in msm
    str = str ( n * n )
UnboundLocalError: local variable 'str' referenced before assignment
out1,out2 case10 case1015102280519026930252203604098880772506756064350case2032140329708702072480533504622036280162306341020820


-------------------------------------


---> lineNum: 291
---> probID: aizu_p00137_A
---> inputs:
2
123
567
---> outputs:
Case 1:
151
228
519
2693
2522
3604
9888
7725
6756
6435
Case 2:
3214
3297
8702
7248
5335
4622
3628
1623
6341
2082

import sys
def msm ( n , c ) :
    if c == 11 :
        return
    str = str ( n * n )
    sb = "0" * ( 8 - len ( str ) ) + str
    str = sb [ 2 : 6 ]
    out = int ( str )
    print ( out )
    msm ( out , c + 1 )
if __name__ == "__main__" :
    n = int ( input ( ) )
    for i in range ( 1 , n + 1 ) :
        print ( "Case {}: " . format ( i ) )
        msm ( int ( input ( ) ) , 1 )


---> console_out:
Case 1: 
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 292
---> probID: aizu_p00753_A
---> inputs:
1
10
13
100
1000
10000
100000
0
---> outputs:
1
4
3
21
135
1033
8392

import sys
sosu = [ True ] * ( 123456 * 2 + 1 )
sosu [ 0 ] = False
sosu [ 1 ] = False
for i in range ( 2 , 123456 * 2 ) :
    if sosu [ i ] :
        for j in range ( 2 , 123456 * 2 + 1 ) :
            if i * j > 123456 * 2 :
                break
            sosu [ i * j ] = False
while True :
    n = int ( sys . stdin . readline ( ) )
    if n == 0 :
        break
    count = 0
    for i in range ( n + 1 , n * 2 + 1 ) :
        if sosu [ i ] :
            count += 1
    print ( count )


---> console_out:
1
4
3
21
135
1033
8392
 
MATCHED!! :D
 17%|█▋        | 292/1746 [03:55<28:43,  1.19s/it]

-------------------------------------


---> lineNum: 293
---> probID: geeksforgeeks_722_A
---> inputs:

---> outputs:
28


def maxOR ( arr , n ) :
    maxVal = 0
    for i in range ( n - 1 ) :
        for j in range ( i + 1 , n ) :
            maxVal = max ( maxVal , arr [ i ] | arr [ j ] )
    return maxVal
if __name__ == '__main__' :
    arr = [ 4 , 8 , 12 , 16 ]
    n = len ( arr )
    print ( maxOR ( arr , n ) )


---> console_out:
28
 
MATCHED!! :D


-------------------------------------


---> lineNum: 294
---> probID: leetcode_771_A
---> inputs:

---> outputs:
3

from typing import List
class Solution :
    def numJewelsInStones ( self , J : str , S : str ) -> int :
        result = 0
        jHash = set ( J )
        for s in S :
            if s in jHash :
                result += 1
        return result
if __name__ == '__main__' :
    sObj = Solution ( )
    J = "aA"
    S = "aAAbbbb"
    out = sObj . numJewelsInStones ( J , S )
    print ( out )


---> console_out:
3
 
MATCHED!! :D
 17%|█▋        | 294/1746 [03:55<20:38,  1.17it/s]

-------------------------------------


---> lineNum: 295
---> probID: geeksforgeeks_3572_A
---> inputs:

---> outputs:
4


import numpy as np
MAX = 100
n = 0
store = np . zeros ( MAX , dtype = int )
graph = np . zeros ( ( MAX , MAX ) , dtype = int )
d = np . zeros ( MAX , dtype = int )
def is_clique ( b ) :
    for i in range ( 1 , b ) :
        for j in range ( i + 1 , b ) :
            if graph [ store [ i ] , store [ j ] ] == 0 :
                return False
    return True
def maxCliques ( i , l ) :
    max_ = 0
    for j in range ( i + 1 , n + 1 ) :
        store [ l ] = j
        if is_clique ( l + 1 ) :
            max_ = max ( max_ , l )
            max_ = max ( max_ , maxCliques ( j , l + 1 ) )
    return max_
if __name__ == '__main__' :
    edges = np . array ( [ [ 1 , 2 ] , [ 2 , 3 ] , [ 3 , 1 ] , [ 4 , 3 ] , [ 4 , 1 ] , [ 4 , 2 ] ] )
    size = edges . shape [ 0 ]
    n = 4
    for i in range ( size ) :
        graph [ edges [ i , 0 ] , edges [ i , 1 ] ] = 1
        graph [ edges [ i , 1 ] , edges [ i , 0 ] ] = 1
        d [ edges [ i , 0 ] ] += 1
        d [ edges [ i , 1 ] ] += 1
    print ( maxCliques ( 0 , 1 ) )


---> console_out:
4
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783920881_2384/main.py", line 5, in <module>
    print ( setBitNumber ( n ) )
  File "./junk/1703783920881_2384/main.py", line 2, in setBitNumber
    k = int ( math . log ( n , 2 ) )
NameError: name 'math' is not defined
out1,out2  2560


-------------------------------------


---> lineNum: 296
---> probID: geeksforgeeks_1887_A
---> inputs:

---> outputs:
256


def setBitNumber ( n ) :
    k = int ( math . log ( n , 2 ) )
    return int ( math . pow ( 2 , k ) )
n = 273
print ( setBitNumber ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 17%|█▋        | 296/1746 [03:55<16:02,  1.51it/s]Traceback (most recent call last):
  File "./junk/1703783921057_8877/main.py", line 3, in <module>
    m , s , f = map ( int , input ( ) . split ( ) )
ValueError: too many values to unpack (expected 3)
out1,out2  xxrr


-------------------------------------


---> lineNum: 297
---> probID: codeforces_342_B
---> inputs:
3 5 1 3
1 1 2
2 2 3
3 3 3
4 1 1
10 1 3
---> outputs:
XXRR

import sys
input = sys . stdin . readline
m , s , f = map ( int , input ( ) . split ( ) )
maxT = - 1
map = { }
for i in range ( m ) :
    k , a , b = map ( int , input ( ) . split ( ) )
    map [ k ] = [ a , b ]
    maxT = max ( maxT , k )
actions = [ ]
M = 'R' if s < f else 'L'
d = 1 if s < f else - 1
cur = s
for t in range ( 1 , maxT + 1 ) :
    if t in map :
        a , b = map [ t ]
    if t in map and ( ( cur >= a and cur <= b ) or ( cur + d >= a and cur + d <= b ) ) :
        actions . append ( 'X' )
    else :
        actions . append ( M )
        cur += d
    if cur == f :
        break
while cur != f :
    actions . append ( M )
    cur += d
print ( '' . join ( actions ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 298
---> probID: geeksforgeeks_3524_A
---> inputs:

---> outputs:
3


import numpy as np
def subsetPairNotDivisibleByK ( arr , N , K ) :
    f = np . zeros ( K , dtype = int )
    for i in range ( N ) :
        f [ arr [ i ] % K ] += 1
    if K % 2 == 0 :
        f [ K // 2 ] = min ( f [ K // 2 ] , 1 )
    res = min ( f [ 0 ] , 1 )
    for i in range ( 1 , K // 2 + 1 ) :
        res += max ( f [ i ] , f [ K - i ] )
    return res
arr = [ 3 , 7 , 2 , 9 , 1 ]
N = len ( arr )
K = 3
print ( subsetPairNotDivisibleByK ( arr , N , K ) )


---> console_out:
3
 
MATCHED!! :D
 17%|█▋        | 298/1746 [03:56<12:23,  1.95it/s]

-------------------------------------


---> lineNum: 299
---> probID: codeforces_373_B
---> inputs:
9 1 1
---> outputs:
9

import sys
def get ( a ) :
    ret = 0
    now = 1
    t = 1
    while True :
        if now * 10 > a :
            ret += ( a - now + 1 ) * t
            break
        ret += now * 9 * t
        now *= 10
        t += 1
    return ret
def binarySearch ( k , l , r , x ) :
    global ans
    if r >= l :
        mid = l + ( r - l ) // 2
        if mid > ans and mid * k <= x :
            ans = mid
        if k * mid == x :
            return mid
        if k * mid > x :
            return binarySearch ( k , l , mid - 1 , x )
        return binarySearch ( k , mid + 1 , r , x )
    return - 1
ans = 0
gen , st , tim = map ( int , input ( ) . split ( ) )
gen //= tim
beg , end = st - 1 , 10 ** 18
while True :
    med = ( beg + end ) // 2 + 1
    if get ( med ) - get ( st - 1 ) > gen :
        end = med - 1
    else :
        beg = med
    if beg == end :
        print ( beg - st + 1 )
        break


---> console_out:
9
 
MATCHED!! :D


-------------------------------------


---> lineNum: 300
---> probID: geeksforgeeks_4862_A
---> inputs:

---> outputs:
1, -2.5


def printRoots ( a , b , c ) :
    print ( 1 , ", " , c / ( a * 1.0 ) )
if __name__ == '__main__' :
    a = 2
    b = 3
    c = - 5
    printRoots ( a , b , c )


---> console_out:
1 ,  -2.5
 
MATCHED!! :D
 17%|█▋        | 300/1746 [03:56<09:11,  2.62it/s]

-------------------------------------


---> lineNum: 301
---> probID: geeksforgeeks_465_A
---> inputs:

---> outputs:
8


memo = [ [ [ - 1 for i in range ( 2 ) ] for j in range ( 2 ) ] for k in range ( 32 ) ]
def dp ( pos , fl , pr , bin ) :
    if pos == len ( bin ) :
        return 1
    if memo [ pos ] [ fl ] [ pr ] != - 1 :
        return memo [ pos ] [ fl ] [ pr ]
    val = 0
    if bin [ pos ] == '0' :
        val += dp ( pos + 1 , fl , 0 , bin )
    elif bin [ pos ] == '1' :
        val += dp ( pos + 1 , 1 , 0 , bin )
    if pr == 0 :
        if fl == 1 :
            val += dp ( pos + 1 , fl , 1 , bin )
        elif bin [ pos ] == '1' :
            val += dp ( pos + 1 , fl , 1 , bin )
    memo [ pos ] [ fl ] [ pr ] = val
    return val
def findIntegers ( num ) :
    bin = ""
    while num > 0 :
        if num % 2 == 1 :
            bin += "1"
        else :
            bin += "0"
        num //= 2
    bin = reverse ( bin )
    for i in range ( 32 ) :
        for j in range ( 2 ) :
            for l in range ( 2 ) :
                memo [ i ] [ j ] [ l ] = - 1
    return dp ( 0 , 0 , 0 , bin )
def reverse ( input ) :
    a = list ( input )
    l , r = 0 , len ( a ) - 1
    while l < r :
        temp = a [ l ]
        a [ l ] = a [ r ]
        a [ r ] = temp
        l += 1
        r -= 1
    return '' . join ( a )
N = 12
print ( findIntegers ( N ) )


---> console_out:
8
 
MATCHED!! :D


-------------------------------------


---> lineNum: 302
---> probID: geeksforgeeks_3483_A
---> inputs:

---> outputs:
111


n = 4
def MaximumDecimalValue ( mat , n ) :
    dp = [ [ 0 for i in range ( n ) ] for j in range ( n ) ]
    if mat [ 0 ] [ 0 ] == 1 :
        dp [ 0 ] [ 0 ] = 1
    for i in range ( 1 , n ) :
        if mat [ 0 ] [ i ] == 1 :
            dp [ 0 ] [ i ] = int ( dp [ 0 ] [ i - 1 ] + pow ( 2 , i ) )
        else :
            dp [ 0 ] [ i ] = dp [ 0 ] [ i - 1 ]
    for i in range ( 1 , n ) :
        if mat [ i ] [ 0 ] == 1 :
            dp [ i ] [ 0 ] = int ( dp [ i - 1 ] [ 0 ] + pow ( 2 , i ) )
        else :
            dp [ i ] [ 0 ] = dp [ i - 1 ] [ 0 ]
    for i in range ( 1 , n ) :
        for j in range ( 1 , n ) :
            if mat [ i ] [ j ] == 1 :
                dp [ i ] [ j ] = int ( max ( dp [ i ] [ j - 1 ] , dp [ i - 1 ] [ j ] ) + pow ( 2 , i + j ) )
            else :
                dp [ i ] [ j ] = max ( dp [ i ] [ j - 1 ] , dp [ i - 1 ] [ j ] )
    return dp [ n - 1 ] [ n - 1 ]
mat = [ [ 1 , 1 , 0 , 1 ] , [ 0 , 1 , 1 , 0 ] , [ 1 , 0 , 0 , 1 ] , [ 1 , 0 , 1 , 1 ] ]
print ( MaximumDecimalValue ( mat , n ) )


---> console_out:
111
 
MATCHED!! :D
 17%|█▋        | 302/1746 [03:56<06:51,  3.51it/s]

-------------------------------------


---> lineNum: 303
---> probID: geeksforgeeks_3183_A
---> inputs:

---> outputs:
1, 89


import math
def createHash ( hash_set , max_element ) :
    prev = 0
    curr = 1
    hash_set . add ( prev )
    hash_set . add ( curr )
    while curr < max_element :
        temp = curr + prev
        hash_set . add ( temp )
        prev = curr
        curr = temp
def findFibonacciPair ( n ) :
    hash_set = set ( )
    createHash ( hash_set , n )
    for i in range ( n ) :
        if i in hash_set and ( n - i ) in hash_set :
            print ( str ( i ) + ", " + str ( n - i ) )
            return
    print ( "-1" )
if __name__ == "__main__" :
    N = 90
    findFibonacciPair ( N )


---> console_out:
1, 89
 
MATCHED!! :D
  File "./junk/1703783921713_8723/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax
out1,out2  30


-------------------------------------


---> lineNum: 304
---> probID: geeksforgeeks_4540_A
---> inputs:

---> outputs:
3


import java . io . * ;
import java . util . * ;
public class GFG { static int countgroup ( int [ ] a , int n ) { int xs = 0 ; for ( int i = 0 ; i < n ; i + + ) { xs = xs ^ a [ i ] ; } if ( xs == 0 ) { return ( 1 << ( n - 1 ) ) - 1 ; } return 0 ; } public static void main ( String [ ] args ) { int [ ] a = { 1 , 2 , 3 } ; int n = a . length ; System . out . println ( countgroup ( a , n ) ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
 17%|█▋        | 304/1746 [03:56<05:14,  4.58it/s]

-------------------------------------


---> lineNum: 305
---> probID: geeksforgeeks_3580_A
---> inputs:

---> outputs:
13


import math
def maxLength ( s , n ) :
    ans = - math . inf
    A = [ ]
    L = [ ]
    R = [ ]
    freq = [ 0 ] * ( n + 5 )
    for i in range ( 26 ) :
        count = 0
        for j in range ( n ) :
            if ord ( s [ j ] ) - ord ( 'a' ) == i :
                count += 1
            freq [ j ] = count
        for j in range ( 1 , n ) :
            L . append ( ( 2 * freq [ j - 1 ] ) - j )
            R . append ( ( 2 * freq [ j ] ) - j )
        max_len = - math . inf
        min_val = math . inf
        for j in range ( len ( L ) ) :
            min_val = min ( min_val , L [ j ] )
            A . append ( min_val )
            l = 0
            r = j
            while l <= r :
                mid = ( l + r ) // 2
                if A [ mid ] <= R [ j ] :
                    max_len = max ( max_len , j - mid + 1 )
                    r = mid - 1
                else :
                    l = mid + 1
        ans = max ( ans , max_len )
        A . clear ( )
        R . clear ( )
        L . clear ( )
    return ans
s = "ababbbacbcbcca"
n = len ( s )
print ( maxLength ( s , n ) )


---> console_out:
13
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783921841_8948/main.py", line 48, in <module>
    GFG . main ( )
  File "./junk/1703783921841_8948/main.py", line 43, in main
    GFG . gr = [ [ ] for i in range ( N ) ]
NameError: name 'N' is not defined
out1,out2  102010301040


-------------------------------------


---> lineNum: 306
---> probID: geeksforgeeks_3383_A
---> inputs:

---> outputs:
1 2
1 3
1 4


import collections
class GFG :
    class pair :
        def __init__ ( self , first , second ) :
            self . first = first
            self . second = second
    N = 100005
    gr = [ [ ] for i in range ( N ) ]
    colour = [ - 1 for i in range ( N ) ]
    edges = [ ]
    bip = True
    @ staticmethod
    def add_edge ( x , y ) :
        gr [ x ] . append ( y )
        gr [ y ] . append ( x )
        edges . append ( GFG . pair ( x , y ) )
    @ staticmethod
    def dfs ( x , col ) :
        global bip
        colour [ x ] = col
        for i in gr [ x ] :
            if colour [ i ] == - 1 :
                GFG . dfs ( i , col ^ 1 )
            elif colour [ i ] == col :
                bip = False
    @ staticmethod
    def Directed_Graph ( n , m ) :
        global bip
        for i in range ( N ) :
            colour [ i ] = - 1
        bip = True
        GFG . dfs ( 1 , 1 )
        if not bip :
            print ( - 1 )
            return
        for i in range ( m ) :
            if colour [ edges [ i ] . first ] == 0 :
                edges [ i ] . first , edges [ i ] . second = edges [ i ] . second , edges [ i ] . first
            print ( edges [ i ] . first , edges [ i ] . second )
    @ staticmethod
    def main ( ) :
        n , m = 4 , 3
        GFG . gr = [ [ ] for i in range ( N ) ]
        GFG . add_edge ( 1 , 2 )
        GFG . add_edge ( 1 , 3 )
        GFG . add_edge ( 1 , 4 )
        GFG . Directed_Graph ( n , m )
GFG . main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 18%|█▊        | 306/1746 [03:56<04:19,  5.56it/s]

-------------------------------------


---> lineNum: 307
---> probID: codeforces_1174_B
---> inputs:
3
4 1 7
---> outputs:
1 4 7

import sys
n = int ( sys . stdin . readline ( ) . strip ( ) )
line1 = sys . stdin . readline ( ) . strip ( ) . split ( )
arr = [ int ( x ) for x in line1 ]
odd = False
even = False
ans = [ ]
for i in range ( n ) :
    if arr [ i ] % 2 == 0 :
        even = True
    else :
        odd = True
    ans . append ( arr [ i ] )
if odd and even :
    ans . sort ( )
for i in range ( n ) :
    print ( ans [ i ] )


---> console_out:
1
4
7
 
MATCHED!! :D


-------------------------------------


---> lineNum: 308
---> probID: codeforces_546_A
---> inputs:
3 17 4
---> outputs:
13

import sys
o , g , x = 0 , 0 , 0
n , borrow = 0 , 0
for line in sys . stdin :
    data = line . split ( )
    o = int ( data [ 0 ] )
    n = int ( data [ 1 ] )
    g = int ( data [ 2 ] )
for i in range ( 1 , g + 1 ) :
    x = x + i * o
borrow = x - n
if borrow <= 0 :
    print ( 0 )
else :
    print ( borrow )


---> console_out:
13
 
MATCHED!! :D
 18%|█▊        | 308/1746 [03:56<03:30,  6.84it/s]

-------------------------------------


---> lineNum: 309
---> probID: geeksforgeeks_2171_A
---> inputs:

---> outputs:
28


def isPrime ( k ) :
    if k <= 1 :
        return False
    for i in range ( 2 , k ) :
        if k % i == 0 :
            return False
    return True
def check ( num , k ) :
    flag = 1
    for i in range ( 2 , k ) :
        if num % i == 0 :
            flag = 0
    if flag == 1 :
        if num % k == 0 :
            return 1
        else :
            return 0
    else :
        return 0
def findCount ( a , b , k ) :
    count = 0
    if not isPrime ( k ) :
        return 0
    else :
        ans = 0
        for i in range ( a , b + 1 ) :
            ans = check ( i , k )
            if ans == 1 :
                count += 1
            else :
                continue
    return count
a = 2020
b = 6300
k = 29
print ( findCount ( a , b , k ) )


---> console_out:
28
 
MATCHED!! :D


-------------------------------------


---> lineNum: 310
---> probID: codeforces_288_A
---> inputs:
7 4
---> outputs:
ababacd

import sys
from collections import defaultdict
class InputReader :
    def __init__ ( self ) :
        self . reader = sys . stdin . readline
        self . tokenizer = None
    def next ( self ) :
        while self . tokenizer is None or not self . tokenizer . hasMoreTokens ( ) :
            self . tokenizer = StringTokenizer ( self . reader ( ) . strip ( ) )
        return self . tokenizer . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
class StringTokenizer :
    def __init__ ( self , string ) :
        self . tokens = string . split ( )
        self . pos = 0
    def hasMoreTokens ( self ) :
        return self . pos < len ( self . tokens )
    def nextToken ( self ) :
        if self . hasMoreTokens ( ) :
            token = self . tokens [ self . pos ]
            self . pos += 1
            return token
        else :
            return None
def main ( ) :
    a = [ ]
    l = [ ]
    ans = [ ]
    map = defaultdict ( bool )
    reader = InputReader ( )
    n = reader . nextInt ( )
    k = reader . nextInt ( )
    str = [ 0 ] * n
    if n < k :
        print ( "-1" )
        return
    if k == 1 :
        if n > 1 :
            print ( "-1" )
        else :
            print ( "a" )
        return
    for i in range ( n - k + 2 ) :
        if i < n :
            if i % 2 == 0 :
                str [ i ] = 0
            else :
                str [ i ] = 1
    j = 2
    for i in range ( n - k + 2 , n ) :
        str [ i ] = j
        j += 1
    for i in range ( n ) :
        print ( chr ( str [ i ] + 97 ) , end = "" )
    print ( )
if __name__ == "__main__" :
    main ( )


---> console_out:
ababacd
 
MATCHED!! :D
 18%|█▊        | 310/1746 [03:57<02:57,  8.09it/s]

-------------------------------------


---> lineNum: 311
---> probID: geeksforgeeks_3460_A
---> inputs:

---> outputs:
3


maxn = 16
def precompute ( ) :
    dp = [ - 1 ] * maxn
    arr = [ 4 , 6 , 9 ]
    dp [ 0 ] = 0
    for i in range ( 1 , maxn ) :
        for k in range ( 3 ) :
            j = arr [ k ]
            if i >= j and dp [ i - j ] != - 1 :
                dp [ i ] = max ( dp [ i ] , dp [ i - j ] + 1 )
    return dp
def Maximum_Summands ( dp , n ) :
    if n < maxn :
        return dp [ n ]
    else :
        t = ( n - maxn ) // 4 + 1
        return t + dp [ n - 4 * t ]
n = 12
dp = precompute ( )
print ( Maximum_Summands ( dp , n ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 312
---> probID: geeksforgeeks_4481_A
---> inputs:

---> outputs:
Count of squares is 14


def countSquares ( n ) :
    return ( n * ( n + 1 ) // 2 ) * ( 2 * n + 1 ) // 3
if __name__ == '__main__' :
    n = 3
    print ( "Count of squares is" , countSquares ( n ) )


---> console_out:
Count of squares is 14
 
MATCHED!! :D
 18%|█▊        | 312/1746 [03:57<02:30,  9.52it/s]

-------------------------------------


---> lineNum: 313
---> probID: atcoder_ABC105_D
---> inputs:
1 2
1
---> outputs:
0

import collections
n , m = map ( int , input ( ) . split ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
sum = [ 0 ] * ( n + 1 )
for i in range ( 1 , n + 1 ) :
    sum [ i ] = a [ i - 1 ] + sum [ i - 1 ]
map = collections . defaultdict ( int )
for i in range ( 1 , n + 1 ) :
    map [ sum [ i ] % m ] += 1
ans = 0
if 0 in map :
    ans = map [ 0 ]
for i in map :
    if map [ i ] >= 2 :
        for j in range ( 2 , map [ i ] + 1 ) :
            ans += j * ( j - 1 ) // 2
print ( ans )


---> console_out:
0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 314
---> probID: geeksforgeeks_1959_A
---> inputs:

---> outputs:
2


def FindSubarray ( arr , n , k ) :
    count_one = [ 0 ] * n
    for i in range ( n ) :
        count_one [ i ] = bin ( arr [ i ] ) . count ( '1' )
    sum = count_one [ 0 ]
    if n == 1 :
        if count_one [ 0 ] >= k :
            return 1
        else :
            return - 1
    ans = float ( 'inf' )
    i = 1
    j = 0
    while i < n :
        if k == count_one [ j ] :
            ans = 1
            break
        elif k == count_one [ i ] :
            ans = 1
            break
        elif sum + count_one [ i ] < k :
            sum += count_one [ i ]
            i += 1
        elif sum + count_one [ i ] > k :
            ans = min ( ans , ( i - j ) + 1 )
            sum -= count_one [ j ]
            j += 1
        elif sum + count_one [ i ] == k :
            ans = min ( ans , ( i - j ) + 1 )
            sum += count_one [ i ]
            i += 1
    if ans != float ( 'inf' ) :
        return ans
    else :
        return - 1
if __name__ == '__main__' :
    arr = [ 1 , 2 , 4 , 8 ]
    n = len ( arr )
    k = 2
    print ( FindSubarray ( arr , n , k ) )


---> console_out:
2
 
MATCHED!! :D
 18%|█▊        | 314/1746 [03:57<02:11, 10.88it/s]

-------------------------------------


---> lineNum: 315
---> probID: geeksforgeeks_2367_A
---> inputs:

---> outputs:
Loss = 474.725


def Loss ( SP , P ) :
    loss = 0
    loss = ( 2 * P * P * SP ) / ( 100 * 100 - P * P )
    print ( "Loss = {:.3f}" . format ( loss ) )
if __name__ == '__main__' :
    SP , P = 2400 , 30
    Loss ( SP , P )


---> console_out:
Loss = 474.725
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783922543_6960/main.py", line 5, in <module>
    a [ int ( sys . stdin . readline ( ) ) ] = 1
ValueError: invalid literal for int() with base 10: '1 2 4'
out1,out2  10


-------------------------------------


---> lineNum: 316
---> probID: atcoder_ABC094_B
---> inputs:
5 3 3
1 2 4
---> outputs:
1

import sys
n , m , x = map ( int , sys . stdin . readline ( ) . split ( ) )
a = [ 0 ] * n
for i in range ( m ) :
    a [ int ( sys . stdin . readline ( ) ) ] = 1
ans1 , ans2 = 0 , 0
for i in range ( x , 0 , - 1 ) :
    ans1 += a [ i ]
for i in range ( x , n ) :
    ans2 += a [ i ]
print ( min ( ans1 , ans2 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 18%|█▊        | 316/1746 [03:57<01:59, 11.98it/s]Traceback (most recent call last):
  File "./junk/1703783922607_2006/main.py", line 8, in <module>
    x = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '2 2 2 1 1 2 2'
out1,out2  40


-------------------------------------


---> lineNum: 317
---> probID: codeforces_1138_A
---> inputs:
7
2 2 2 1 1 2 2
---> outputs:
4

import sys
n = int ( input ( ) )
len = 1
prev = 0
oneSeq = 0
twoSeq = 0
for i in range ( n ) :
    x = int ( input ( ) )
    if x == 1 :
        if prev == 1 :
            oneSeq += 1
        else :
            oneSeq = 1
        prev = 1
    else :
        if prev == 2 :
            twoSeq += 1
        else :
            twoSeq = 1
        prev = 2
    if min ( oneSeq , twoSeq ) > len :
        len = min ( oneSeq , twoSeq )
print ( len * 2 )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703783922671_4929/main.py", line 1, in <module>
    class p092 :
  File "./junk/1703783922671_4929/main.py", line 2, in p092
    LIMIT = Library . pow ( 10 , 7 )
NameError: name 'Library' is not defined
out1,out2  85811460


-------------------------------------


---> lineNum: 318
---> probID: projecteuler_p092_A
---> inputs:

---> outputs:
8581146

class p092 :
    LIMIT = Library . pow ( 10 , 7 )
    def main ( self ) :
        print ( p092 ( ) . run ( ) )
    def run ( self ) :
        count = 0
        for i in range ( 1 , p092 . LIMIT ) :
            if p092 . isClass89 ( i ) :
                count += 1
        return str ( count )
    @ staticmethod
    def isClass89 ( x ) :
        while True :
            if x == 1 :
                return False
            elif x == 89 :
                return True
            else :
                x = p092 . nextNumber ( x )
    @ staticmethod
    def nextNumber ( x ) :
        sum = 0
        while x != 0 :
            sum += ( x % 10 ) * ( x % 10 )
            x //= 10
        return sum


---> console_out:
 
DIDN'T MATCH!! :(
 18%|█▊        | 318/1746 [03:57<01:50, 12.92it/s]

-------------------------------------


---> lineNum: 319
---> probID: geeksforgeeks_2840_A
---> inputs:

---> outputs:
5040


import math
def fact ( n ) :
    fact = 1
    for i in range ( 1 , n + 1 ) :
        fact *= i
    return fact
def countStrings ( str , n ) :
    distinct_char = set ( str )
    return fact ( len ( distinct_char ) )
str = "geeksforgeeks"
n = len ( str )
print ( countStrings ( str , n ) )


---> console_out:
5040
 
MATCHED!! :D


-------------------------------------


---> lineNum: 320
---> probID: geeksforgeeks_4256_A
---> inputs:

---> outputs:
8 1 

import numpy as np
def printCommonElements ( mat ) :
    M , N = mat . shape
    mp = { }
    for j in range ( N ) :
        mp [ mat [ 0 ] [ j ] ] = 1
    for i in range ( 1 , M ) :
        for j in range ( N ) :
            if mat [ i ] [ j ] in mp and mp [ mat [ i ] [ j ] ] == i :
                mp [ mat [ i ] [ j ] ] = i + 1
                if i == M - 1 :
                    print ( mat [ i ] [ j ] , end = " " )
mat = np . array ( [ [ 1 , 2 , 1 , 4 , 8 ] , [ 3 , 7 , 8 , 5 , 1 ] , [ 8 , 7 , 7 , 3 , 1 ] , [ 8 , 1 , 2 , 7 , 9 ] ] )
printCommonElements ( mat )


---> console_out:
8 1  
MATCHED!! :D
 18%|█▊        | 320/1746 [03:57<02:26,  9.73it/s]

-------------------------------------


---> lineNum: 321
---> probID: codeforces_593_B
---> inputs:
4
1 2
1 2
1 0
0 1
0 2
---> outputs:
NO

import sys
eps = 10e-9
class Pair :
    def __init__ ( self , i , a , b ) :
        self . x1 = a
        self . x2 = b
        self . id = i
    def __lt__ ( self , other ) :
        return self . x1 < other . x1
def main ( ) :
    n = int ( sys . stdin . readline ( ) )
    start , end = map ( float , sys . stdin . readline ( ) . split ( ) )
    first = [ ]
    second = [ ]
    for i in range ( n ) :
        a , b = map ( float , sys . stdin . readline ( ) . split ( ) )
        y1 = a * ( start + eps ) + b
        y2 = a * ( end - eps ) + b
        first . append ( Pair ( i + 1 , y1 , y2 ) )
        second . append ( Pair ( i + 1 , y2 , y1 ) )
    first . sort ( )
    second . sort ( )
    for i in range ( len ( first ) ) :
        if first [ i ] . id != second [ i ] . id :
            print ( "YES" )
            return
    print ( "NO" )
if __name__ == "__main__" :
    main ( )


---> console_out:
NO
 
MATCHED!! :D


-------------------------------------


---> lineNum: 322
---> probID: codeforces_1153_A
---> inputs:
2 2
6 4
9 5
---> outputs:
1

import sys
def main ( ) :
    n , t = map ( int , input ( ) . split ( ) )
    s = [ ]
    d = [ ]
    for i in range ( n ) :
        s_i , d_i = map ( int , input ( ) . split ( ) )
        s . append ( s_i )
        d . append ( d_i )
    print ( solve ( s , d , t ) )
def solve ( s , d , t ) :
    min_time = sys . maxsize
    result = - 1
    for i in range ( len ( s ) ) :
        time = divide_to_ceil ( t - s [ i ] , d [ i ] ) * d [ i ] + s [ i ]
        if time < min_time :
            min_time = time
            result = i + 1
    return result
def divide_to_ceil ( x , y ) :
    if x < 0 :
        return 0
    return x // y + ( 0 if x % y == 0 else 1 )
if __name__ == '__main__' :
    main ( )


---> console_out:
1
 
MATCHED!! :D
 18%|█▊        | 322/1746 [03:58<02:12, 10.72it/s]

-------------------------------------


---> lineNum: 323
---> probID: geeksforgeeks_4085_A
---> inputs:

---> outputs:
335.0


def sumOfAP ( a , d , n ) :
    sum = 0
    for i in range ( n ) :
        sum = sum + a
        a = a + d
    return sum
n = 20
a = 2.5
d = 1.5
print ( sumOfAP ( a , d , n ) )


---> console_out:
335.0
 
MATCHED!! :D
out1,out2 nosuchtripletfound 507080


-------------------------------------


---> lineNum: 324
---> probID: geeksforgeeks_5112_A
---> inputs:

---> outputs:
5 7 8


def find3Numbers ( arr , n ) :
    small , large = float ( 'inf' ) , float ( 'inf' )
    for i in range ( n ) :
        if arr [ i ] <= small :
            small = arr [ i ]
        elif arr [ i ] <= large :
            large = arr [ i ]
        else :
            break
    if i == n - 1 :
        print ( "No such triplet found" )
        return
    for j in range ( i + 1 ) :
        if arr [ j ] < large :
            small = arr [ j ]
            break
    print ( small , large , arr [ i ] )
if __name__ == '__main__' :
    arr = [ 5 , 7 , 4 , 8 ]
    n = len ( arr )
    find3Numbers ( arr , n )


---> console_out:
No such triplet found
 
DIDN'T MATCH!! :(
 19%|█▊        | 324/1746 [03:59<05:32,  4.28it/s]

-------------------------------------


---> lineNum: 325
---> probID: geeksforgeeks_896_A
---> inputs:

---> outputs:
Numbers with 3 divisors :
4 9 25 49 

import math
def numbersWith3Divisors ( n ) :
    prime = [ True ] * ( n + 1 )
    prime [ 0 ] = prime [ 1 ] = False
    for p in range ( 2 , int ( math . sqrt ( n ) ) + 1 ) :
        if prime [ p ] :
            for i in range ( p * 2 , n + 1 , p ) :
                prime [ i ] = False
    print ( "Numbers with 3 divisors:" )
    for i in range ( int ( math . sqrt ( n ) ) + 1 ) :
        if prime [ i ] :
            print ( i * i , end = " " )
n = 96
numbersWith3Divisors ( n )


---> console_out:
Numbers with 3 divisors:
4 9 25 49  
MATCHED!! :D


-------------------------------------


---> lineNum: 326
---> probID: geeksforgeeks_3039_A
---> inputs:

---> outputs:
10


def findPairCount ( N , K ) :
    count = 0
    rem = [ 0 ] * K
    rem [ 0 ] = N // K
    for i in range ( 1 , K ) :
        rem [ i ] = ( N - i ) // K + 1
    if K % 2 == 0 :
        count += ( rem [ 0 ] * ( rem [ 0 ] - 1 ) ) // 2
        for i in range ( 1 , K // 2 ) :
            count += rem [ i ] * rem [ K - i ]
        count += ( rem [ K // 2 ] * ( rem [ K // 2 ] - 1 ) ) // 2
    else :
        count += ( rem [ 0 ] * ( rem [ 0 ] - 1 ) ) // 2
        for i in range ( 1 , ( K // 2 ) + 1 ) :
            count += rem [ i ] * rem [ K - i ]
    return count
N = 10
K = 4
print ( findPairCount ( N , K ) )


---> console_out:
10
 
MATCHED!! :D
 19%|█▊        | 326/1746 [03:59<04:18,  5.49it/s]Traceback (most recent call last):
  File "./junk/1703783924446_7180/main.py", line 6, in <module>
    array . append ( int ( sys . stdin . readline ( ) ) )
ValueError: invalid literal for int() with base 10: '20 35 60 70\n'
out1,out2  2001801000400


-------------------------------------


---> lineNum: 327
---> probID: aizu_p00615_A
---> inputs:
4 5
20 35 60 70
15 30 40 80 90
3 2
10 20 30
42 60
0 1
100
1 1
10
50
0 0
---> outputs:
20
18
100
40

import sys
n , m = map ( int , sys . stdin . readline ( ) . split ( ) )
while n != 0 or m != 0 :
    array = [ ]
    for i in range ( n + m ) :
        array . append ( int ( sys . stdin . readline ( ) ) )
    array . sort ( )
    interval = 0
    nt = 0
    for time in array :
        if time - nt > interval :
            interval = time - nt
        nt = time
    print ( interval )
    n , m = map ( int , sys . stdin . readline ( ) . split ( ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 328
---> probID: codeforces_1201_B
---> inputs:
4
1 1 2 2
---> outputs:
YES

import numpy as np
def solve ( a ) :
    sum = np . sum ( a )
    max = np . max ( a )
    return sum % 2 == 0 and max * 2 <= sum
n = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
print ( "YES" if solve ( a ) else "NO" )


---> console_out:
YES
 
MATCHED!! :D
 19%|█▉        | 328/1746 [03:59<04:17,  5.51it/s]

-------------------------------------


---> lineNum: 329
---> probID: geeksforgeeks_4598_A
---> inputs:

---> outputs:
9th Fibonacci Number = 34


PHI = 1.6180339
f = [ 0 , 1 , 1 , 2 , 3 , 5 ]
def fib ( n ) :
    if n < 6 :
        return f [ n ]
    t = 5
    fn = 5
    while t < n :
        fn = round ( fn * PHI )
        t += 1
    return fn
n = 9
print ( n , "th Fibonacci Number =" , fib ( n ) )


---> console_out:
9 th Fibonacci Number = 34
 
MATCHED!! :D


-------------------------------------


---> lineNum: 330
---> probID: geeksforgeeks_1427_A
---> inputs:

---> outputs:
8


def kthSmallest ( n , k ) :
    return ( 2 * k )
n = 8
k = 4
print ( kthSmallest ( n , k ) )


---> console_out:
8
 
MATCHED!! :D
 19%|█▉        | 330/1746 [03:59<03:25,  6.90it/s]out1,out2 180180180270270270360360360 180180180270270270360360360


-------------------------------------


---> lineNum: 331
---> probID: geeksforgeeks_727_A
---> inputs:

---> outputs:
18 18 18 
27 27 27 
36 36 36 


import numpy as np
def printSumTricky ( mat , k ) :
    n = 5
    if k > n :
        return
    stripSum = np . zeros ( ( n , n ) )
    for j in range ( n ) :
        sum = 0
        for i in range ( k ) :
            sum += mat [ i ] [ j ]
        stripSum [ 0 ] [ j ] = sum
        for i in range ( 1 , n - k + 1 ) :
            sum += ( mat [ i + k - 1 ] [ j ] - mat [ i - 1 ] [ j ] )
            stripSum [ i ] [ j ] = sum
    for i in range ( n - k + 1 ) :
        sum = 0
        for j in range ( k ) :
            sum += stripSum [ i ] [ j ]
        print ( sum , end = " " )
        for j in range ( 1 , n - k + 1 ) :
            sum += ( stripSum [ i ] [ j + k - 1 ] - stripSum [ i ] [ j - 1 ] )
            print ( sum , end = " " )
        print ( )
mat = np . array ( [ [ 1 , 1 , 1 , 1 , 1 ] , [ 2 , 2 , 2 , 2 , 2 ] , [ 3 , 3 , 3 , 3 , 3 ] , [ 4 , 4 , 4 , 4 , 4 ] , [ 5 , 5 , 5 , 5 , 5 ] ] )
k = 3
printSumTricky ( mat , k )


---> console_out:
18.0 18.0 18.0 
27.0 27.0 27.0 
36.0 36.0 36.0 
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783925192_3897/main.py", line 2, in <module>
    A = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '2 18 2'
out1,out2  30


-------------------------------------


---> lineNum: 332
---> probID: codeforces_30_A
---> inputs:
2 18 2
---> outputs:
3

import math
A = int ( input ( ) )
B = int ( input ( ) )
N = int ( input ( ) )
for x in range ( - 1000 , 1001 ) :
    if x ** N * A == B :
        print ( x )
        break
else :
    print ( "No solution" )


---> console_out:
 
DIDN'T MATCH!! :(
 19%|█▉        | 332/1746 [04:00<03:33,  6.61it/s]

-------------------------------------


---> lineNum: 333
---> probID: geeksforgeeks_3279_A
---> inputs:

---> outputs:
150


import math
def ncr ( n , r ) :
    ans = 1
    for i in range ( 1 , r + 1 ) :
        ans *= ( n - r + i )
        ans //= i
    return ans
def totalWays ( X , Y , M , W ) :
    return ncr ( M , X ) * ncr ( W , Y )
X , Y , M , W = 4 , 3 , 6 , 5
print ( totalWays ( X , Y , M , W ) )


---> console_out:
150
 
MATCHED!! :D


-------------------------------------


---> lineNum: 334
---> probID: geeksforgeeks_361_A
---> inputs:

---> outputs:
2


def nextPowerOf2 ( n ) :
    count = 0
    if n != 0 and ( n & ( n - 1 ) ) == 0 :
        return n
    while n != 0 :
        n >>= 1
        count += 1
    return 1 << count
def removeElement ( n ) :
    if n == 1 or n == 2 :
        return 0
    a = nextPowerOf2 ( n )
    if n == a or n == a - 1 :
        return 1
    elif n == a - 2 :
        return 0
    elif n % 2 == 0 :
        return 1
    else :
        return 2
n = 5
print ( removeElement ( n ) )


---> console_out:
2
 
MATCHED!! :D
 19%|█▉        | 334/1746 [04:00<02:55,  8.05it/s]Traceback (most recent call last):
  File "./junk/1703783925380_9277/main.py", line 11, in <module>
    A = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '72 87 15 1 78 11 80 46 35 87 67 17 83 69 2 54 88 12 60 41 96 83 49 22 99 81 84 83 28 82 58 79 63 88 42 39 49 78 4 38 71 89 15 17 20 82 68 9 53 42'
out1,out2  5629499534213120


-------------------------------------


---> lineNum: 335
---> probID: atcoder_AGC017_A
---> inputs:
50 0
72 87 15 1 78 11 80 46 35 87 67 17 83 69 2 54 88 12 60 41 96 83 49 22 99 81 84 83 28 82 58 79 63 88 42 39 49 78 4 38 71 89 15 17 20 82 68 9 53 42
---> outputs:
562949953421312

import math
def Choose ( n , k ) :
    res = 1
    for i in range ( n , n - k , - 1 ) :
        res *= i
        res //= k - n + i
    return res
N , P = map ( int , input ( ) . split ( ) )
Even , Odd = 0 , 0
for i in range ( N ) :
    A = int ( input ( ) )
    if A % 2 == 0 :
        Even += 1
    else :
        Odd += 1
if Odd == 0 :
    if P == 0 :
        print ( int ( math . pow ( 2 , Even ) ) )
    else :
        print ( 0 )
else :
    print ( int ( math . pow ( 2 , N - 1 ) ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 336
---> probID: geeksforgeeks_1582_A
---> inputs:

---> outputs:
4


import math
def modInverse ( a , m ) :
    a = a % m
    for x in range ( 1 , m ) :
        if ( a * x ) % m == 1 :
            return x
    return 1
a = 3
m = 11
print ( modInverse ( a , m ) )


---> console_out:
4
 
MATCHED!! :D
 19%|█▉        | 336/1746 [04:00<02:32,  9.26it/s]

-------------------------------------


---> lineNum: 337
---> probID: geeksforgeeks_2184_A
---> inputs:

---> outputs:
834


def sumOfDigits ( x ) :
    sum = 0
    while x != 0 :
        sum += x % 10
        x = x // 10
    return sum
def countNumbers ( l , r ) :
    count = 0
    for i in range ( l , r + 1 ) :
        if i % 2 == 0 and sumOfDigits ( i ) % 3 == 0 :
            count += 1
    return count
l , r = 1000 , 6000
print ( countNumbers ( l , r ) )


---> console_out:
834
 
MATCHED!! :D


-------------------------------------


---> lineNum: 338
---> probID: geeksforgeeks_916_A
---> inputs:

---> outputs:
a^b is greater
Both are equal


import math
def findGreater ( a , b ) :
    x = float ( a ) * math . log ( float ( b ) )
    y = float ( b ) * math . log ( float ( a ) )
    if y > x :
        print ( "a^b is greater" )
    elif y < x :
        print ( "b^a is greater" )
    else :
        print ( "Both are equal" )
a , b , c , d = 3 , 5 , 2 , 4
findGreater ( a , b )
findGreater ( c , d )


---> console_out:
a^b is greater
Both are equal
 
MATCHED!! :D
 19%|█▉        | 338/1746 [04:00<02:19, 10.12it/s]  File "./junk/1703783925674_8037/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  20


-------------------------------------


---> lineNum: 339
---> probID: geeksforgeeks_4217_A
---> inputs:

---> outputs:
2


import java . util . * ;
class GFG :
    def findAnswer ( str1 : str , str2 : str , n : int ) -> int :
        l , r = 0 , 0
        ans = 2
        for i in range ( n ) :
            if str1 [ i ] != str2 [ i ] :
                l = i
                break
        for i in range ( n - 1 , - 1 , - 1 ) :
            if str1 [ i ] != str2 [ i ] :
                r = i
                break
        if r < l :
            return 26 * ( n + 1 )
        elif l == r :
            return ans
        else :
            for i in range ( l + 1 , r + 1 ) :
                if str1 [ i ] != str2 [ i - 1 ] :
                    ans -= 1
                    break
            for i in range ( l + 1 , r + 1 ) :
                if str1 [ i - 1 ] != str2 [ i ] :
                    ans -= 1
                    break
            return ans
    def main ( args : List [ str ] ) :
        str1 = "toy"
        str2 = "try"
        n = len ( str1 )
        print ( findAnswer ( str1 , str2 , n ) )
    if __name__ == '__main__' :
        main ( [ ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 340
---> probID: codeforces_1366_B
---> inputs:
3
6 4 3
1 6
2 3
5 5
4 1 2
2 4
1 2
3 3 2
2 3
1 2
---> outputs:
6
2
3

import sys
t = int ( input ( ) )
output = ""
for z in range ( t ) :
    n , x , m = map ( int , input ( ) . split ( ) )
    arr = [ ]
    for i in range ( m ) :
        arr . append ( list ( map ( int , input ( ) . split ( ) ) ) )
    si = x
    ei = x
    for i in range ( m ) :
        l = arr [ i ] [ 0 ]
        r = arr [ i ] [ 1 ]
        if ( l <= si <= r ) or ( l <= ei <= r ) :
            si = min ( l , si )
            ei = max ( r , ei )
    output += str ( ei - si + 1 ) + "\n"
sys . stdout . write ( output )


---> console_out:
6
2
3
 
MATCHED!! :D
 19%|█▉        | 340/1746 [04:00<02:03, 11.38it/s]

-------------------------------------


---> lineNum: 341
---> probID: geeksforgeeks_4524_A
---> inputs:

---> outputs:
Yes


def bitsAreInAltPatrnInGivenTRange ( n , l , r ) :
    num = n >> ( l - 1 )
    prev = num & 1
    num = num >> 1
    for i in range ( 1 , r - l + 1 ) :
        curr = num & 1
        if curr == prev :
            return False
        prev = curr
        num = num >> 1
    return True
if __name__ == '__main__' :
    n = 18
    l , r = 1 , 3
    if bitsAreInAltPatrnInGivenTRange ( n , l , r ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 342
---> probID: codeforces_302_A
---> inputs:
2 3
1 -1
1 1
1 2
2 2
---> outputs:
0
1
0

import sys
n , k = map ( int , input ( ) . split ( ) )
arr = list ( map ( int , input ( ) . split ( ) ) )
res = ""
o = arr . count ( 1 )
e = n - o
for i in range ( k ) :
    l , r = map ( int , input ( ) . split ( ) )
    if ( r - l + 1 ) % 2 == 1 :
        res += "0\n"
    else :
        if ( r - l + 1 ) // 2 <= o and ( r - l + 1 ) // 2 <= e :
            res += "1\n"
        else :
            res += "0\n"
sys . stdout . write ( res )


---> console_out:
0
1
0
 
MATCHED!! :D
 20%|█▉        | 342/1746 [04:00<01:58, 11.87it/s]

-------------------------------------


---> lineNum: 343
---> probID: geeksforgeeks_1792_A
---> inputs:

---> outputs:
255


import math
def nth_group ( n ) :
    return n * ( 2 * int ( math . pow ( n , 2 ) ) + 1 )
if __name__ == '__main__' :
    N = 5
    print ( nth_group ( N ) )


---> console_out:
255
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783926013_3992/main.py", line 7, in <module>
    magic_square [ i ] [ j ] = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '4 0 2'
out1,out2  90


-------------------------------------


---> lineNum: 344
---> probID: codeforces_711_B
---> inputs:
3
4 0 2
3 5 7
8 1 6
---> outputs:
9

import sys
n = int ( input ( ) )
magic_square = [ [ 0 for j in range ( n ) ] for i in range ( n ) ]
row , column = - 1 , - 1
for i in range ( n ) :
    for j in range ( n ) :
        magic_square [ i ] [ j ] = int ( input ( ) )
        if magic_square [ i ] [ j ] == 0 :
            row , column = i , j
if n == 1 :
    print ( 1 )
    sys . exit ( )
sum = 0
for i in range ( n ) :
    if row != 0 :
        sum += magic_square [ 0 ] [ i ]
    else :
        sum += magic_square [ 1 ] [ i ]
answer = sum
for i in range ( n ) :
    answer -= magic_square [ row ] [ i ]
magic_square [ row ] [ column ] = answer
m = 0
current_sumi , current_sumj = 0 , 0
for i in range ( n ) :
    for j in range ( n ) :
        current_sumi += magic_square [ i ] [ j ]
        current_sumj += magic_square [ j ] [ i ]
    if current_sumi != sum or current_sumj != sum :
        m += 1
    current_sumi , current_sumj = 0 , 0
for i in range ( n ) :
    current_sumi += magic_square [ i ] [ i ]
    current_sumj += magic_square [ n - i - 1 ] [ i ]
if current_sumi != sum or current_sumj != sum :
    m += 1
if m == 0 and answer > 0 :
    print ( answer )
else :
    print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 20%|█▉        | 344/1746 [04:00<01:49, 12.83it/s]  File "./junk/1703783926077_1897/main.py", line 3
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  40203020


-------------------------------------


---> lineNum: 345
---> probID: codeforces_732_B
---> inputs:
3 5
2 0 1
---> outputs:
4
2 3 2

import java . util . Scanner
def main ( ) :
    sc = Scanner ( System . in )
    n = sc . nextInt ( )
    k = sc . nextInt ( )
    arr = [ 0 ] * n
    sum1 = 0
    sum2 = 0
    for i in range ( n ) :
        arr [ i ] = sc . nextInt ( )
        sum1 += arr [ i ]
    for i in range ( 1 , n ) :
        csum = arr [ i ] + arr [ i - 1 ]
        if k > csum :
            arr [ i ] += k - csum
    for i in range ( n ) :
        sum2 += arr [ i ]
    print ( sum2 - sum1 )
    for i in range ( n ) :
        print ( arr [ i ] , end = " " )
    print ( )
def isPrime ( n ) :
    if n <= 1 :
        return False
    if n <= 3 :
        return True
    if n % 2 == 0 or n % 3 == 0 :
        return False
    i = 5
    while i * i <= n :
        if n % i == 0 or n % ( i + 2 ) == 0 :
            return False
        i += 6
    return True
def gcd ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )
def lcm ( a , b ) :
    return ( a // gcd ( a , b ) ) * b
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 346
---> probID: geeksforgeeks_4878_A
---> inputs:

---> outputs:
4


import numpy as np
def maximumOccurredElement ( L , R , n ) :
    MAX = 1000000
    arr = np . zeros ( MAX , dtype = int )
    maxi = - 1
    for i in range ( n ) :
        arr [ L [ i ] ] += 1
        arr [ R [ i ] + 1 ] -= 1
        if R [ i ] > maxi :
            maxi = R [ i ]
    msum = arr [ 0 ]
    ind = 0
    for i in range ( 1 , maxi + 1 ) :
        arr [ i ] += arr [ i - 1 ]
        if msum < arr [ i ] :
            msum = arr [ i ]
            ind = i
    return ind
L = [ 1 , 4 , 9 , 13 , 21 ]
R = [ 15 , 8 , 12 , 20 , 30 ]
n = len ( L )
print ( maximumOccurredElement ( L , R , n ) )


---> console_out:
4
 
MATCHED!! :D
 20%|█▉        | 346/1746 [04:01<02:24,  9.67it/s]Traceback (most recent call last):
  File "./junk/1703783926402_3472/main.py", line 6, in <module>
    if arr [ i ] != arr [ i + 1 ] :
IndexError: list index out of range
out1,out2  30


-------------------------------------


---> lineNum: 347
---> probID: codeforces_344_A
---> inputs:
6
10
10
10
01
10
10
---> outputs:
3

import sys
n = int ( input ( ) )
arr = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
count = 1
for i in range ( n - 1 ) :
    if arr [ i ] != arr [ i + 1 ] :
        count += 1
print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 348
---> probID: codeforces_190_A
---> inputs:
1 2
---> outputs:
2 2

import sys
n , m = map ( int , input ( ) . split ( ) )
if n == 0 :
    if m != 0 :
        print ( "Impossible" )
    else :
        print ( "0 0" )
    sys . exit ( )
if m <= n :
    if m == 0 :
        m = 1
    print ( n , m + n - 1 )
else :
    print ( m , m + n - 1 )


---> console_out:
2 2
 
MATCHED!! :D
 20%|█▉        | 348/1746 [04:01<02:06, 11.03it/s]

-------------------------------------


---> lineNum: 349
---> probID: geeksforgeeks_3442_A
---> inputs:

---> outputs:
0.6879


import math
def func ( x ) :
    return ( 1 / ( 1 + x * x ) )
def calculate ( lower_limit , upper_limit , interval_limit ) :
    interval_size = ( upper_limit - lower_limit ) / interval_limit
    sum = func ( lower_limit ) + func ( upper_limit )
    for i in range ( 1 , interval_limit ) :
        if i % 3 == 0 :
            sum = sum + 2 * func ( lower_limit + i * interval_size )
        else :
            sum = sum + 3 * func ( lower_limit + i * interval_size )
    return ( 3 * interval_size / 8 ) * sum
interval_limit = 10
lower_limit = 1
upper_limit = 10
integral_res = calculate ( lower_limit , upper_limit , interval_limit )
print ( "{:.4f}" . format ( integral_res ) )


---> console_out:
0.6879
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703783926587_6697/main.py", line 13, in <module>
    Main ( ) . run ( )
  File "./junk/1703783926587_6697/main.py", line 4, in run
    n , k , x , y = map ( int , sys . stdin . readline ( ) . split ( ) )
ValueError: not enough values to unpack (expected 4, got 1)
out1,out2  480000


-------------------------------------


---> lineNum: 350
---> probID: atcoder_ABC044_A
---> inputs:
5
3
10000
9000
---> outputs:
48000

import sys
class Main :
    def run ( self ) :
        n , k , x , y = map ( int , sys . stdin . readline ( ) . split ( ) )
        sum = 0
        if n > k :
            sum += x * k
            sum += y * ( n - k )
        else :
            sum += x * n
        print ( sum )
if __name__ == '__main__' :
    Main ( ) . run ( )


---> console_out:
 
DIDN'T MATCH!! :(
 20%|██        | 350/1746 [04:01<01:59, 11.70it/s]Traceback (most recent call last):
  File "./junk/1703783926671_5881/main.py", line 3, in <module>
    x , h = map ( float , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2  9601842


-------------------------------------


---> lineNum: 351
---> probID: aizu_p00073_A
---> inputs:
6
4
7
9
0
0
---> outputs:
96.000000
184.192455

import math
while True :
    x , h = map ( float , input ( ) . split ( ) )
    if x == 0 and h == 0 :
        break
    c = math . sqrt ( h * h + ( x / 2 ) * ( x / 2 ) )
    ans = x * x + x * c / 2 * 4
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 352
---> probID: codeforces_919_B
---> inputs:
1
---> outputs:
19

import sys
def count ( num ) :
    sum = 0
    while num > 0 :
        sum += num % 10
        num = num // 10
    return sum
def main ( ) :
    k , i , mo = 0 , 1 , 19
    k = int ( input ( ) )
    while i != k :
        mo += 1
        if 10 == count ( mo ) :
            i += 1
    print ( mo )
if __name__ == "__main__" :
    main ( )


---> console_out:
19
 
MATCHED!! :D
 20%|██        | 352/1746 [04:01<01:49, 12.76it/s]

-------------------------------------


---> lineNum: 353
---> probID: geeksforgeeks_5176_A
---> inputs:

---> outputs:
5 7 11 13
11 13 17 19


import math
MAX = 1000000
prime = [ True ] * MAX
def sieve ( ) :
    global prime
    for p in range ( 2 , int ( math . sqrt ( MAX ) ) + 1 ) :
        if prime [ p ] :
            for i in range ( p * 2 , MAX , p ) :
                prime [ i ] = False
def printPrimeQuad ( n ) :
    for i in range ( n - 7 ) :
        if prime [ i ] and prime [ i + 2 ] and prime [ i + 6 ] and prime [ i + 8 ] :
            print ( i , i + 2 , i + 6 , i + 8 )
def main ( ) :
    global prime
    n = 20
    sieve ( )
    printPrimeQuad ( n )
if __name__ == '__main__' :
    main ( )


---> console_out:
5 7 11 13
11 13 17 19
 
MATCHED!! :D


-------------------------------------


---> lineNum: 354
---> probID: geeksforgeeks_1284_A
---> inputs:

---> outputs:
3


MAX = 1000
def maxSubsequenceSubstring ( x , y , n , m ) :
    dp = [ [ 0 for j in range ( MAX ) ] for i in range ( MAX ) ]
    for i in range ( m + 1 ) :
        for j in range ( n + 1 ) :
            dp [ i ] [ j ] = 0
    for i in range ( 1 , m + 1 ) :
        for j in range ( 1 , n + 1 ) :
            if x [ j - 1 ] == y [ i - 1 ] :
                dp [ i ] [ j ] = 1 + dp [ i - 1 ] [ j - 1 ]
            else :
                dp [ i ] [ j ] = dp [ i ] [ j - 1 ]
    ans = 0
    for i in range ( 1 , m + 1 ) :
        ans = max ( ans , dp [ i ] [ n ] )
    return ans
x = list ( "ABCD" )
y = list ( "BACDBDCD" )
n = len ( x )
m = len ( y )
print ( maxSubsequenceSubstring ( x , y , n , m ) )


---> console_out:
3
 
MATCHED!! :D
 20%|██        | 354/1746 [04:02<02:48,  8.28it/s]

-------------------------------------


---> lineNum: 355
---> probID: geeksforgeeks_2092_A
---> inputs:

---> outputs:
23


import math
def findSum ( n , a , b ) :
    sum = 0
    for i in range ( n ) :
        if i % a == 0 or i % b == 0 :
            sum += i
    return sum
n = 10
a = 3
b = 5
print ( findSum ( n , a , b ) )


---> console_out:
23
 
MATCHED!! :D


-------------------------------------


---> lineNum: 356
---> probID: codeforces_518_B
---> inputs:
AbC
DCbA
---> outputs:
3 0

import sys
s1 = input ( )
s2 = input ( )
a = [ 0 ] * 123
b = [ 0 ] * len ( s1 )
y = 0
w = 0
for i in range ( len ( s2 ) ) :
    a [ ord ( s2 [ i ] ) ] += 1
for i in range ( len ( s1 ) ) :
    ch = s1 [ i ]
    if a [ ord ( ch ) ] >= 1 :
        a [ ord ( ch ) ] -= 1
        b [ i ] = 1
        y += 1
for i in range ( len ( s1 ) ) :
    ch = s1 [ i ]
    if b [ i ] == 0 :
        if ord ( ch ) <= 90 :
            ch = chr ( ord ( ch ) + 32 )
        else :
            ch = chr ( ord ( ch ) - 32 )
        if a [ ord ( ch ) ] >= 1 :
            a [ ord ( ch ) ] -= 1
            w += 1
print ( y , w )


---> console_out:
3 0
 
MATCHED!! :D
 20%|██        | 356/1746 [04:02<02:23,  9.69it/s]

-------------------------------------


---> lineNum: 357
---> probID: geeksforgeeks_507_A
---> inputs:

---> outputs:
2
23


MAX = 1000
sequence = [ 0 ] * MAX
def vanEckSequence ( ) :
    for i in range ( MAX - 1 ) :
        sequence [ i ] = 0
    for i in range ( MAX - 1 ) :
        for j in range ( i - 1 , - 1 , - 1 ) :
            if sequence [ j ] == sequence [ i ] :
                sequence [ i + 1 ] = i - j
                break
def getNthTerm ( n ) :
    return sequence [ n ]
vanEckSequence ( )
n = 6
print ( getNthTerm ( n ) )
n = 100
print ( getNthTerm ( n ) )


---> console_out:
2
23
 
MATCHED!! :D
 20%|██        | 356/1746 [04:20<02:23,  9.69it/s]out1,out2 timeoutencounteredpy 1050


-------------------------------------


---> lineNum: 358
---> probID: geeksforgeeks_498_A
---> inputs:

---> outputs:
1
5


MAX = 100000
sequence = [ 0 ] * ( MAX + 1 )
def vanEckSequence ( ) :
    for i in range ( MAX ) :
        sequence [ i ] = 0
    for i in range ( MAX ) :
        for j in range ( i - 1 , - 1 , - 1 ) :
            if sequence [ j ] == sequence [ i ] :
                sequence [ i + 1 ] = i - j
                break
def getCount ( n ) :
    count = 1
    i = n - 1
    while sequence [ i + 1 ] != 0 :
        count += 1
        i = i - sequence [ i + 1 ]
    return count
vanEckSequence ( )
n = 5
print ( getCount ( n ) )
n = 11
print ( getCount ( n ) )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 21%|██        | 358/1746 [04:42<2:21:08,  6.10s/it]out1,out2 timeoutencounteredpy 1050


-------------------------------------


---> lineNum: 359
---> probID: geeksforgeeks_497_A
---> inputs:

---> outputs:
1
5


MAX = 100000
sequence = [ 0 ] * ( MAX + 1 )
def vanEckSequence ( ) :
    for i in range ( MAX ) :
        sequence [ i ] = 0
    for i in range ( MAX ) :
        for j in range ( i - 1 , - 1 , - 1 ) :
            if sequence [ j ] == sequence [ i ] :
                sequence [ i + 1 ] = i - j
                break
def getCount ( n ) :
    nthTerm = sequence [ n - 1 ]
    count = 0
    for i in range ( n ) :
        if sequence [ i ] == nthTerm :
            count += 1
    return count
vanEckSequence ( )
n = 5
print ( getCount ( n ) )
n = 11
print ( getCount ( n ) )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 21%|██        | 359/1746 [05:22<4:39:30, 12.09s/it]

-------------------------------------


---> lineNum: 360
---> probID: geeksforgeeks_2382_A
---> inputs:

---> outputs:
10


import math
def gcd ( a , b ) :
    if a == 0 or b == 0 :
        return 0
    if a == b :
        return a
    if a > b :
        return gcd ( a - b , b )
    return gcd ( a , b - a )
def nthElement ( a , b , n ) :
    lcm = ( a * b ) // gcd ( a , b )
    l = 1
    r = min ( a , b ) * n
    while l <= r :
        mid = ( l + r ) // 2
        val = mid // a + mid // b - mid // lcm
        if val == n :
            return max ( ( mid // a ) * a , ( mid // b ) * b )
        if val < n :
            l = mid + 1
        else :
            r = mid - 1
    return 0
a = 5
b = 3
n = 5
print ( nthElement ( a , b , n ) )


---> console_out:
10
 
MATCHED!! :D


-------------------------------------


---> lineNum: 361
---> probID: codeforces_678_B
---> inputs:
2016
---> outputs:
2044

from datetime import datetime
def check_leap ( y ) :
    return y % 400 == 0 or ( y % 4 == 0 and y % 100 != 0 )
if __name__ == '__main__' :
    y = int ( input ( ) )
    leap = check_leap ( y )
    sum = 0
    mod = 0
    for i in range ( y + 1 , 1000000 ) :
        if check_leap ( i ) :
            sum += 366
        else :
            sum += 365
        if sum % 7 == 0 :
            if ( check_leap ( i ) and leap ) or ( not check_leap ( i ) and not leap ) :
                print ( i )
                break
            else :
                continue


---> console_out:
2044
 
MATCHED!! :D
 21%|██        | 361/1746 [05:22<3:06:03,  8.06s/it]Traceback (most recent call last):
  File "./junk/1703784007730_2242/main.py", line 34, in <module>
    while n > 0 and read ( ) :
  File "./junk/1703784007730_2242/main.py", line 10, in read
    event = sc . pop ( 0 )
IndexError: pop from empty list
out1,out2  7000


-------------------------------------


---> lineNum: 362
---> probID: aizu_p00103_A
---> inputs:
2
HIT
OUT
HOMERUN
HIT
HIT
HOMERUN
HIT
OUT
HIT
HIT
HIT
HIT
OUT
HIT
HIT
OUT
HIT
OUT
OUT
---> outputs:
7
0

import queue
n = 0
sc = input ( ) . split ( )
events = queue . Queue ( )
def read ( ) :
    global events
    cnt = 0
    events = queue . Queue ( )
    while cnt < 3 :
        event = sc . pop ( 0 )
        if event == "OUT" :
            cnt += 1
        else :
            events . put ( event )
    return True
def solve ( ) :
    global events
    ans = 0
    s = 0
    while not events . empty ( ) :
        e = events . get ( )
        s = ( s << 1 ) + 1
        if e == "HIT" :
            if ( s & 8 ) > 1 :
                ans += 1
            s = ( s & 7 )
        else :
            for i in range ( 1 , 16 ) :
                if ( s & i ) >= 1 :
                    ans += 1
            s = 0
    return ans
n = int ( sc . pop ( 0 ) )
while n > 0 and read ( ) :
    print ( solve ( ) )
    n -= 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 363
---> probID: geeksforgeeks_3210_A
---> inputs:

---> outputs:
120


def gcd ( a , b ) :
    if a == 0 or b == 0 :
        return 0
    if a == b :
        return a
    if a > b :
        return gcd ( a - b , b )
    return gcd ( a , b - a )
def findValue ( x , y , z ) :
    g = gcd ( y , z )
    return ( x * g ) // gcd ( x , g )
x , y , z = 30 , 40 , 400
print ( findValue ( x , y , z ) )


---> console_out:
120
 
MATCHED!! :D
 21%|██        | 363/1746 [05:22<2:06:05,  5.47s/it]

-------------------------------------


---> lineNum: 364
---> probID: geeksforgeeks_3655_A
---> inputs:

---> outputs:
x2 = 0.4 y2 = 0.2 z2 = 4.0 

import math
def foot ( a , b , c , d , x1 , y1 , z1 ) :
    k = ( - a * x1 - b * y1 - c * z1 - d ) / ( a * a + b * b + c * c )
    x2 = a * k + x1
    y2 = b * k + y1
    z2 = c * k + z1
    print ( "x2 = {:.1f}" . format ( x2 ) , end = "" )
    print ( " y2 = {:.1f}" . format ( y2 ) , end = "" )
    print ( " z2 = {:.1f}" . format ( z2 ) )
a = 1
b = - 2
c = 0
d = 0
x1 = - 1
y1 = 3
z1 = 4
foot ( a , b , c , d , x1 , y1 , z1 )


---> console_out:
x2 = 0.4 y2 = 0.2 z2 = 4.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 365
---> probID: atcoder_ABC077_A
---> inputs:
pot
top
---> outputs:
YES

import sys
c1 = input ( )
c2 = input ( )
if c1 [ 0 ] == c2 [ - 1 ] and c2 [ 0 ] == c1 [ - 1 ] and c1 [ 1 ] == c2 [ 1 ] :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
YES
 
MATCHED!! :D
 21%|██        | 365/1746 [05:22<1:26:33,  3.76s/it]

-------------------------------------


---> lineNum: 366
---> probID: geeksforgeeks_1659_A
---> inputs:

---> outputs:
2


import math
def getMinimumOps ( ar ) :
    n = len ( ar )
    small = min ( ar )
    large = max ( ar )
    dp = [ [ 0 for j in range ( large + 1 ) ] for i in range ( n ) ]
    for j in range ( small , large + 1 ) :
        dp [ 0 ] [ j ] = abs ( ar [ 0 ] - j )
    for i in range ( 1 , n ) :
        minimum = math . inf
        for j in range ( small , large + 1 ) :
            minimum = min ( minimum , dp [ i - 1 ] [ j ] )
            dp [ i ] [ j ] = minimum + abs ( ar [ i ] - j )
    ans = math . inf
    for j in range ( small , large + 1 ) :
        ans = min ( ans , dp [ n - 1 ] [ j ] )
    return ans
if __name__ == '__main__' :
    arr = [ 1 , 2 , 1 , 4 , 3 ]
    print ( getMinimumOps ( arr ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 367
---> probID: geeksforgeeks_3686_A
---> inputs:

---> outputs:
27.969019925000005


import math
class GFG :
    PI = 3.14159265
    @ staticmethod
    def area_leaf ( a ) :
        return ( a * a * ( GFG . PI / 2 - 1 ) )
a = 7
print ( GFG . area_leaf ( a ) )


---> console_out:
27.969019925000005
 
MATCHED!! :D
 21%|██        | 367/1746 [05:22<59:58,  2.61s/it]  

-------------------------------------


---> lineNum: 368
---> probID: geeksforgeeks_677_A
---> inputs:

---> outputs:
3
5


def removeAlternate ( n ) :
    if n == 1 :
        return 1
    if n % 2 == 0 :
        return 2 * removeAlternate ( n // 2 ) - 1
    else :
        return 2 * removeAlternate ( ( n - 1 ) // 2 ) + 1
if __name__ == "__main__" :
    n = 5
    print ( removeAlternate ( n ) )
    n = 10
    print ( "\n" + str ( removeAlternate ( n ) ) )


---> console_out:
3

5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 369
---> probID: geeksforgeeks_635_A
---> inputs:

---> outputs:
Yes


import math
def check ( n , m ) :
    if n == 2 or m == 2 or n % m == 0 :
        print ( "Yes" )
    else :
        print ( "No" )
m = 3
n = 9
check ( n , m )


---> console_out:
Yes
 
MATCHED!! :D
 21%|██        | 369/1746 [05:23<41:53,  1.83s/it]

-------------------------------------


---> lineNum: 370
---> probID: codeforces_1710_A
---> inputs:
6
4 6 3
12 9 8
3 3 2
8 8
3 3 2
9 5
4 5 2
10 11
5 4 2
9 11
10 10 3
11 45 14
---> outputs:
Yes
No
Yes
Yes
No
No

import sys
def solve ( m , n , k , colors ) :
    sum = 0
    for i in range ( k ) :
        sum += colors [ i ]
    flag = check ( m , n , colors ) or check ( n , m , colors )
    print ( "Yes" if flag else "No" )
def check ( m , n , colors ) :
    count = 0
    s = set ( )
    for i in colors :
        max = i // m
        if max >= 2 :
            count += max
            s . add ( max )
    if count < n :
        return False
    if len ( s ) >= 2 :
        return True
    if len ( s ) == 1 :
        if 2 in s :
            return n % 2 == 0
        else :
            return True
    return True
if __name__ == "__main__" :
    t = int ( input ( ) )
    for i in range ( t ) :
        temp = input ( ) . split ( )
        m = int ( temp [ 0 ] )
        n = int ( temp [ 1 ] )
        k = int ( temp [ 2 ] )
        colors = list ( map ( int , input ( ) . split ( ) ) )
        solve ( m , n , k , colors )


---> console_out:
Yes
No
Yes
Yes
No
No
 
MATCHED!! :D


-------------------------------------


---> lineNum: 371
---> probID: geeksforgeeks_2660_A
---> inputs:

---> outputs:
8


def negProdSubArr ( arr , n ) :
    positive = 1
    negative = 0
    for i in range ( n ) :
        if arr [ i ] > 0 :
            arr [ i ] = 1
        else :
            arr [ i ] = - 1
        if i > 0 :
            arr [ i ] *= arr [ i - 1 ]
        if arr [ i ] == 1 :
            positive += 1
        else :
            negative += 1
    return positive * negative
arr = [ 5 , - 4 , - 3 , 2 , - 5 ]
n = len ( arr )
print ( negProdSubArr ( arr , n ) )


---> console_out:
8
 
MATCHED!! :D
 21%|██        | 371/1746 [05:23<29:31,  1.29s/it]

-------------------------------------


---> lineNum: 372
---> probID: geeksforgeeks_240_A
---> inputs:

---> outputs:
7


def negProdSubArr ( arr , n ) :
    positive = 1
    negative = 0
    for i in range ( n ) :
        if arr [ i ] > 0 :
            arr [ i ] = 1
        else :
            arr [ i ] = - 1
        if i > 0 :
            arr [ i ] *= arr [ i - 1 ]
        if arr [ i ] == 1 :
            positive += 1
        else :
            negative += 1
    return positive * negative
def posProdSubArr ( arr , n ) :
    total = ( n * ( n + 1 ) ) // 2
    cntNeg = negProdSubArr ( arr , n )
    return total - cntNeg
arr = [ 5 , - 4 , - 3 , 2 , - 5 ]
n = len ( arr )
print ( posProdSubArr ( arr , n ) )


---> console_out:
7
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784008423_9191/main.py", line 40, in <module>
    main ( )
  File "./junk/1703784008423_9191/main.py", line 26, in main
    t = in_ . nextInt ( )
  File "./junk/1703784008423_9191/main.py", line 14, in nextInt
    return int ( self . next ( ) )
  File "./junk/1703784008423_9191/main.py", line 7, in next
    while self . st is None or not self . st . hasMoreElements ( ) :
AttributeError: 'list' object has no attribute 'hasMoreElements'
out1,out2  40306000


-------------------------------------


---> lineNum: 373
---> probID: codeforces_1606_B
---> inputs:
4
8 3
6 6
7 1
1 1
---> outputs:
4
3
6
0

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = input ( ) . split ( )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        try :
            return input ( )
        except :
            pass
def main ( ) :
    in_ = FastReader ( )
    t = in_ . nextInt ( )
    while t > 0 :
        n = in_ . nextLong ( )
        k = in_ . nextLong ( )
        sum_ = 0
        cur = 1
        while cur < k :
            cur *= 2
            sum_ += 1
        if cur < n :
            sum_ += ( n - cur + k - 1 ) // k
        print ( sum_ )
        t -= 1
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 21%|██▏       | 373/1746 [05:23<21:00,  1.09it/s]

-------------------------------------


---> lineNum: 374
---> probID: codeforces_340_A
---> inputs:
2 3 6 18
---> outputs:
3

import sys
def gcd ( a , b ) :
    temp = a
    if a < b :
        a = b
        b = temp
    if a % b == 0 :
        return b
    else :
        return gcd ( b , a % b )
if __name__ == "__main__" :
    z = input ( ) . split ( )
    x = int ( z [ 0 ] )
    y = int ( z [ 1 ] )
    a = int ( z [ 2 ] )
    b = int ( z [ 3 ] )
    c = 0
    lcm = x * y // gcd ( x , y )
    for i in range ( a , b + 1 ) :
        if i % lcm == 0 :
            break
    for j in range ( b , a - 1 , - 1 ) :
        if j % lcm == 0 :
            break
    if j % lcm == 0 and i % lcm == 0 :
        c = ( j - i ) // lcm + 1
    print ( c )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 375
---> probID: geeksforgeeks_5206_A
---> inputs:

---> outputs:
2


def minRemove ( arr , n ) :
    LIS = [ 1 ] * n
    len = 0
    for i in range ( 1 , n ) :
        for j in range ( i ) :
            if arr [ i ] > arr [ j ] and ( i - j ) <= ( arr [ i ] - arr [ j ] ) :
                LIS [ i ] = max ( LIS [ i ] , LIS [ j ] + 1 )
        len = max ( len , LIS [ i ] )
    return n - len
arr = [ 1 , 2 , 6 , 5 , 4 ]
n = len ( arr )
print ( minRemove ( arr , n ) )


---> console_out:
2
 
MATCHED!! :D
 21%|██▏       | 375/1746 [05:23<15:05,  1.51it/s]

-------------------------------------


---> lineNum: 376
---> probID: geeksforgeeks_1441_A
---> inputs:

---> outputs:
9 7 6 8 8 8 5 


import queue
def print_max ( a , n , k ) :
    max_upto = [ 0 ] * n
    s = queue . LifoQueue ( )
    s . put ( 0 )
    for i in range ( 1 , n ) :
        while not s . empty ( ) and a [ s . queue [ - 1 ] ] < a [ i ] :
            max_upto [ s . get ( ) ] = i - 1
        s . put ( i )
    while not s . empty ( ) :
        max_upto [ s . get ( ) ] = n - 1
    j = 0
    for i in range ( n - k + 1 ) :
        while j < i or max_upto [ j ] < i + k - 1 :
            j += 1
        print ( a [ j ] , end = " " )
    print ( )
a = [ 9 , 7 , 2 , 4 , 6 , 8 , 2 , 1 , 5 ]
n = len ( a )
k = 3
print_max ( a , n , k )


---> console_out:
9 7 6 8 8 8 5 
 
MATCHED!! :D
out1,out2  9720


-------------------------------------


---> lineNum: 377
---> probID: projecteuler_p056_A
---> inputs:

---> outputs:
972

import math
class p056 :
    def main ( self ) :
        return self . run ( )
    def run ( self ) :
        max = 0
        for a in range ( 1 , 100 ) :
            for b in range ( 1 , 100 ) :
                pow = a ** b
                max = max ( digitSum ( pow ) , max )
        return str ( max )
    def digitSum ( self , n ) :
        sum = 0
        s = str ( n )
        for i in range ( len ( s ) ) :
            sum += int ( s [ i ] )
        return sum


---> console_out:
 
DIDN'T MATCH!! :(
 22%|██▏       | 377/1746 [05:23<10:56,  2.08it/s]

-------------------------------------


---> lineNum: 378
---> probID: geeksforgeeks_957_A
---> inputs:

---> outputs:
3
4
4
3


import numpy as np
def countWindowDistinct ( win , k ) :
    dist_count = 0
    for i in range ( k ) :
        j = 0
        while j < i :
            if win [ i ] == win [ j ] :
                break
            j += 1
        if j == i :
            dist_count += 1
    return dist_count
def countDistinct ( arr , n , k ) :
    for i in range ( n - k + 1 ) :
        print ( countWindowDistinct ( arr [ i : i + k ] , k ) )
arr = np . array ( [ 1 , 2 , 1 , 3 , 4 , 2 , 3 ] )
k = 4
countDistinct ( arr , len ( arr ) , k )


---> console_out:
3
4
4
3
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784009118_9457/main.py", line 10, in <module>
    print ( evenNumSubstring ( str ) )
  File "./junk/1703784009118_9457/main.py", line 2, in evenNumSubstring
    len = len ( str )
UnboundLocalError: local variable 'len' referenced before assignment
out1,out2  60


-------------------------------------


---> lineNum: 379
---> probID: geeksforgeeks_2750_A
---> inputs:

---> outputs:
6


def evenNumSubstring ( str ) :
    len = len ( str )
    count = 0
    for i in range ( len ) :
        temp = int ( str [ i ] )
        if temp % 2 == 0 :
            count += ( i + 1 )
    return count
str = "1234"
print ( evenNumSubstring ( str ) )


---> console_out:
 
DIDN'T MATCH!! :(
 22%|██▏       | 379/1746 [05:24<09:05,  2.51it/s]

-------------------------------------


---> lineNum: 380
---> probID: geeksforgeeks_3926_A
---> inputs:

---> outputs:
12


class Solution :
    max = 4
    @ staticmethod
    def countWays ( index , cnt , dp , n , m , k ) :
        if index == n :
            if cnt == k :
                return 1
            else :
                return 0
        if dp [ index ] [ cnt ] != - 1 :
            return dp [ index ] [ cnt ]
        ans = 0
        ans += Solution . countWays ( index + 1 , cnt , dp , n , m , k )
        ans += ( m - 1 ) * Solution . countWays ( index + 1 , cnt + 1 , dp , n , m , k )
        dp [ index ] [ cnt ] = ans
        return ans
    @ staticmethod
    def main ( ) :
        n , m , k = 3 , 3 , 2
        dp = [ [ - 1 for j in range ( Solution . max ) ] for i in range ( n + 1 ) ]
        print ( m * Solution . countWays ( 1 , 0 , dp , n , m , k ) )
Solution . main ( )


---> console_out:
12
 
MATCHED!! :D


-------------------------------------


---> lineNum: 381
---> probID: geeksforgeeks_2213_A
---> inputs:

---> outputs:
12 16 15 9 4 3 1 0 

import math
def getSum ( n ) :
    sum = 0
    for i in range ( 1 , int ( math . sqrt ( n ) ) + 1 ) :
        if n % i == 0 :
            if n // i == i :
                sum += i
            else :
                sum += i
                sum += n // i
    return sum - n
def printAliquot ( n ) :
    print ( n , end = " " )
    s = set ( )
    s . add ( n )
    next = 0
    while n > 0 :
        n = getSum ( n )
        if n in s and n != max ( s ) :
            print ( "\nRepeats with" , n , end = "" )
            break
        print ( n , end = " " )
        s . add ( n )
printAliquot ( 12 )


---> console_out:
12 16 15 9 4 3 1 0  
MATCHED!! :D
 22%|██▏       | 381/1746 [05:24<06:46,  3.36it/s]

-------------------------------------


---> lineNum: 382
---> probID: codeforces_421_A
---> inputs:
4 2 3
1 2
2 3 4
---> outputs:
1 1 2 2

import sys
dims = sys . stdin . readline ( ) . split ( )
total = int ( dims [ 0 ] )
at = int ( dims [ 1 ] )
pt = int ( dims [ 2 ] )
vals = [ False ] * total
as_ = sys . stdin . readline ( ) . split ( )
for i in range ( len ( as_ ) ) :
    x = int ( as_ [ i ] )
    vals [ x - 1 ] = True
sb = ""
for i in range ( total ) :
    sb += ( "1 " if vals [ i ] else "2 " )
print ( sb )


---> console_out:
1 1 2 2 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 383
---> probID: geeksforgeeks_4371_A
---> inputs:

---> outputs:
6 1 2 7 3 5 

import numpy as np
def reverseArray ( arr , n ) :
    for i in range ( n // 2 ) :
        arr [ i ] , arr [ n - i - 1 ] = arr [ n - i - 1 ] , arr [ i ]
def main ( ) :
    arr = np . array ( [ 5 , 3 , 7 , 2 , 1 , 6 ] )
    n = len ( arr )
    reverseArray ( arr , n )
    for i in range ( n ) :
        print ( arr [ i ] , end = " " )
if __name__ == "__main__" :
    main ( )


---> console_out:
6 1 2 7 3 5  
MATCHED!! :D
 22%|██▏       | 383/1746 [05:24<05:53,  3.85it/s]

-------------------------------------


---> lineNum: 384
---> probID: geeksforgeeks_4394_A
---> inputs:

---> outputs:
201.0


def printSeriesSum ( N ) :
    sum = 0
    a = 1
    cnt = 0
    flag = True
    sum += a
    while cnt < N :
        if flag == True :
            nextElement = a * 2
            sum += nextElement
            flag = not flag
        else :
            nextElement = a * 3 / 2
            sum += nextElement
            flag = not flag
        a = nextElement
        cnt += 1
    print ( sum )
N = 8
printSeriesSum ( N )


---> console_out:
201.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 385
---> probID: aizu_p01855_A
---> inputs:
3
2 3
3 3
4 3
---> outputs:
1 1
1 0
1 1

import sys
def gcd ( a , b ) :
    if b == 0 :
        return a
    return gcd ( b , a % b )
for line in sys . stdin :
    T = int ( line )
    for i in range ( T ) :
        line = input ( )
        h , w = map ( int , line . split ( ) )
        gcd_val = gcd ( h , w )
        h //= gcd_val
        w //= gcd_val
        if h == w :
            print ( "1 0" )
        elif h % 2 == 0 or w % 2 == 0 :
            print ( "1 1" )
        else :
            a = ( h * w ) // 2 + 1
            b = ( h * w ) // 2
            print ( str ( a ) + " " + str ( b ) )


---> console_out:
1 1
1 0
1 1
 
MATCHED!! :D
 22%|██▏       | 385/1746 [05:24<04:38,  4.89it/s]

-------------------------------------


---> lineNum: 386
---> probID: geeksforgeeks_468_A
---> inputs:

---> outputs:
2


import math
sz = int ( 1e5 )
isPrime = [ True ] * ( sz + 1 )
def sieve ( ) :
    global isPrime
    isPrime [ 0 ] = isPrime [ 1 ] = False
    for i in range ( 2 , int ( math . sqrt ( sz ) ) + 1 ) :
        if isPrime [ i ] :
            for j in range ( i * i , sz , i ) :
                isPrime [ j ] = False
def minDifference ( L , R ) :
    global isPrime
    fst = 0
    for i in range ( L , R + 1 ) :
        if isPrime [ i ] :
            fst = i
            break
    snd = 0
    for i in range ( fst + 1 , R + 1 ) :
        if isPrime [ i ] :
            snd = i
            break
    if snd == 0 :
        return - 1
    diff = snd - fst
    left = snd + 1
    right = R
    for i in range ( left , right + 1 ) :
        if isPrime [ i ] :
            if i - snd <= diff :
                fst = snd
                snd = i
                diff = snd - fst
    return diff
sieve ( )
L , R = 21 , 50
print ( minDifference ( L , R ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 387
---> probID: geeksforgeeks_1962_A
---> inputs:

---> outputs:
6


def getMaxLength ( arr , n ) :
    start = 0
    preCnt = 0
    while start < n and arr [ start ] == 1 :
        preCnt += 1
        start += 1
    end = n - 1
    suffCnt = 0
    while end >= 0 and arr [ end ] == 1 :
        suffCnt += 1
        end -= 1
    if start > end :
        return n
    midCnt = 0
    result = 0
    for i in range ( start , end + 1 ) :
        if arr [ i ] == 1 :
            midCnt += 1
            result = max ( result , midCnt )
        else :
            midCnt = 0
    return max ( result , preCnt + suffCnt )
arr = [ 1 , 1 , 0 , 0 , 1 , 0 , 1 , 0 , 1 , 1 , 1 , 1 ]
n = len ( arr )
print ( getMaxLength ( arr , n ) )


---> console_out:
6
 
MATCHED!! :D
 22%|██▏       | 387/1746 [05:24<03:44,  6.04it/s]Traceback (most recent call last):
  File "./junk/1703784009948_5194/main.py", line 8, in <module>
    a [ i ] , b [ i ] , c [ i ] = map ( int , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 3, got 1)
out1,out2  800


-------------------------------------


---> lineNum: 388
---> probID: aizu_p00502_A
---> inputs:
3 4
31
27
35
20 25 30
23 29 90
21 35 60
28 33 40
---> outputs:
80

import sys
d , n = map ( int , input ( ) . split ( ) )
temp = list ( map ( int , input ( ) . split ( ) ) )
a = [ 0 ] * n
b = [ 0 ] * n
c = [ 0 ] * n
for i in range ( n ) :
    a [ i ] , b [ i ] , c [ i ] = map ( int , input ( ) . split ( ) )
dp = [ [ - 1 ] * n for _ in range ( d ) ]
for i in range ( n ) :
    if a [ i ] <= temp [ 0 ] and b [ i ] >= temp [ 0 ] :
        dp [ 0 ] [ i ] = 0
for i in range ( 1 , d ) :
    for j in range ( n ) :
        if a [ j ] <= temp [ i ] and b [ j ] >= temp [ i ] :
            for k in range ( n ) :
                if dp [ i - 1 ] [ k ] < 0 :
                    continue
                dp [ i ] [ j ] = max ( dp [ i ] [ j ] , dp [ i - 1 ] [ k ] + abs ( c [ j ] - c [ k ] ) )
ans = 0
for i in range ( n ) :
    ans = max ( ans , dp [ d - 1 ] [ i ] )
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
out1,out2 yes2030 yes2050


-------------------------------------


---> lineNum: 389
---> probID: codeforces_1155_A
---> inputs:
7
abacaba
---> outputs:
['YES\n2 5', 'YES\n2 3\n']

import sys
mod = int ( 1e9 + 7 )
n = int ( input ( ) )
i1 , i2 = 0 , 0
s = input ( )
flag = True
ch = list ( s )
for i in range ( len ( s ) - 1 ) :
    if ch [ i ] > ch [ i + 1 ] :
        i1 = i + 1
        i2 = i + 2
        flag = False
        break
if flag :
    print ( "NO" )
else :
    print ( "YES" )
    print ( i1 , i2 )
sys . stdout . flush ( )


---> console_out:
YES
2 3
 
MATCHED!! :D
 22%|██▏       | 389/1746 [05:24<03:02,  7.44it/s]

-------------------------------------


---> lineNum: 390
---> probID: geeksforgeeks_4861_A
---> inputs:

---> outputs:
Square root of 9.2345 = 3.03883


def sqroot ( s ) :
    pSq = 0
    N = 0
    for i in range ( int ( s ) , 0 , - 1 ) :
        for j in range ( 1 , i ) :
            if j * j == i :
                pSq = i
                N = j
                break
        if pSq > 0 :
            break
    d = s - pSq
    P = d / ( 2.0 * N )
    A = N + P
    sqrt_of_s = A - ( ( P * P ) / ( 2.0 * A ) )
    return sqrt_of_s
num = 9.2345
sqroot_of_num = sqroot ( num )
print ( "Square root of" , num , "=" , round ( sqroot_of_num * 100000.0 ) / 100000.0 )


---> console_out:
Square root of 9.2345 = 3.03883
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784010132_1873/main.py", line 14, in <module>
    if a [ i ] <= q and b [ i ] == 0 :
IndexError: list index out of range
out1,out2  10


-------------------------------------


---> lineNum: 391
---> probID: codeforces_583_B
---> inputs:
3
0 2 0
---> outputs:
1

import sys
for line in sys . stdin :
    data = list ( map ( int , line . split ( ) ) )
    n = data [ 0 ]
    a = data [ 1 : ]
    b = [ 0 ] * n
    s = - 1
    tem = 1
    q = 0
    while q != n :
        s += 1
        if tem == 1 :
            for i in range ( n ) :
                if a [ i ] <= q and b [ i ] == 0 :
                    b [ i ] = 1
                    q += 1
            tem = 0
        else :
            for i in range ( n - 1 , - 1 , - 1 ) :
                if a [ i ] <= q and b [ i ] == 0 :
                    b [ i ] = 1
                    q += 1
            tem = 1
    print ( s )


---> console_out:
 
DIDN'T MATCH!! :(
 22%|██▏       | 391/1746 [05:25<02:35,  8.71it/s]out1,out2 00302323 00302323


-------------------------------------


---> lineNum: 392
---> probID: aizu_p00775_A
---> inputs:
2 3
-2 -1 3
0 1 3
2 3 3
2 2
-2 0 4
0 2 3
2 6
-3 3 1
-2 3 2
-1 3 3
0 3 4
1 3 5
2 3 6
2 6
-3 3 1
-3 2 2
-3 1 3
-3 0 4
-3 -1 5
-3 -2 6
0 0
---> outputs:
0.0000
3.0000
2.2679
2.2679

import math
INF = 100.0
def crossTime ( x , y , r ) :
    d = ( - 2 * ( y + r ) ) ** 2 - 4 * ( x ** 2 + y ** 2 + 2 * y * r )
    if d <= 0 :
        return INF
    else :
        ans = ( 2 * ( y + r ) - math . sqrt ( d ) ) / 2
        return ans
while True :
    r , n = map ( int , input ( ) . split ( ) )
    if r == 0 :
        break
    field = [ 0 ] * 40
    for i in range ( n ) :
        xl , xr , h = map ( int , input ( ) . split ( ) )
        for j in range ( xl + 20 , xr + 20 ) :
            field [ j ] = max ( field [ j ] , h )
    minTime = INF
    for i in range ( len ( field ) ) :
        minTime = min ( minTime , crossTime ( i - 20 , field [ i ] , r ) )
        minTime = min ( minTime , crossTime ( i + 1 - 20 , field [ i ] , r ) )
    print ( minTime )


---> console_out:
0.0
3.0
2.267949192431123
2.267949192431123
 
MATCHED!! :D


-------------------------------------


---> lineNum: 393
---> probID: codeforces_1358_B
---> inputs:
4
5
1 1 2 2 1
6
2 3 4 5 6 7
6
1 5 4 5 1 9
5
1 2 3 5 6
---> outputs:
6
1
6
4

import sys
def find ( list ) :
    list . sort ( )
    n = len ( list )
    for i in range ( n - 1 , - 1 , - 1 ) :
        if list [ i ] <= i + 1 :
            print ( i + 2 )
            return
    print ( 1 )
if __name__ == "__main__" :
    t = int ( input ( ) )
    for i in range ( t ) :
        n = int ( input ( ) )
        lst = list ( map ( int , input ( ) . split ( ) ) )
        find ( lst )


---> console_out:
6
1
6
4
 
MATCHED!! :D
 23%|██▎       | 393/1746 [05:25<02:18,  9.79it/s]

-------------------------------------


---> lineNum: 394
---> probID: aizu_p00208_A
---> inputs:
15
100
1000000000
3
0
---> outputs:
19
155
9358757000
3

import sys
num = 0
def read ( ) :
    global num
    num = int ( input ( ) )
    if num == 0 :
        return False
    return True
def solve ( ) :
    table = [ 0 , 1 , 2 , 3 , 5 , 7 , 8 , 9 ]
    s = oct ( num ) [ 2 : ]
    for i in range ( len ( s ) ) :
        num2 = int ( s [ i ] , 8 )
        sys . stdout . write ( str ( table [ num2 ] ) )
    sys . stdout . write ( '\n' )
while read ( ) :
    solve ( )


---> console_out:
19
155
9358757000
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 395
---> probID: geeksforgeeks_1464_A
---> inputs:

---> outputs:
Maximum sum = 25


def maxAlternateSum ( arr , n ) :
    if n == 1 :
        return arr [ 0 ]
    dec = [ 0 ] * n
    inc = [ 0 ] * n
    dec [ 0 ] = inc [ 0 ] = arr [ 0 ]
    flag = 0
    for i in range ( 1 , n ) :
        for j in range ( i ) :
            if arr [ j ] > arr [ i ] :
                dec [ i ] = max ( dec [ i ] , inc [ j ] + arr [ i ] )
                flag = 1
            elif arr [ j ] < arr [ i ] and flag == 1 :
                inc [ i ] = max ( inc [ i ] , dec [ j ] + arr [ i ] )
    result = float ( '-inf' )
    for i in range ( n ) :
        if result < inc [ i ] :
            result = inc [ i ]
        if result < dec [ i ] :
            result = dec [ i ]
    return result
arr = [ 8 , 2 , 3 , 5 , 7 , 9 , 10 ]
print ( "Maximum sum =" , maxAlternateSum ( arr , len ( arr ) ) )


---> console_out:
Maximum sum = 25
 
MATCHED!! :D
 23%|██▎       | 395/1746 [05:25<02:01, 11.10it/s]

-------------------------------------


---> lineNum: 396
---> probID: geeksforgeeks_1884_A
---> inputs:

---> outputs:
0 1 0 1 4 4 

import numpy as np
def generateArr ( arr , n ) :
    if n <= 1 :
        return
    prev = arr [ 0 ]
    arr [ 0 ] = arr [ 0 ] & arr [ 1 ]
    for i in range ( 1 , n - 1 ) :
        curr = arr [ i ]
        arr [ i ] = prev & arr [ i + 1 ]
        prev = curr
    arr [ n - 1 ] = prev & arr [ n - 1 ]
arr = np . array ( [ 1 , 2 , 3 , 4 , 5 , 6 ] )
n = arr . size
generateArr ( arr , n )
for i in range ( n ) :
    print ( arr [ i ] , end = " " )


---> console_out:
0 1 0 1 4 4  
MATCHED!! :D


-------------------------------------


---> lineNum: 397
---> probID: geeksforgeeks_3872_A
---> inputs:

---> outputs:
1 6 6 2 3 

import numpy as np
def ReplaceElements ( arr , n ) :
    if n <= 1 :
        return
    prev = arr [ 0 ]
    arr [ 0 ] = arr [ 0 ] ^ arr [ 1 ]
    for i in range ( 1 , n - 1 ) :
        curr = arr [ i ]
        arr [ i ] = prev ^ arr [ i + 1 ]
        prev = curr
    arr [ n - 1 ] = prev ^ arr [ n - 1 ]
arr = np . array ( [ 2 , 3 , 4 , 5 , 6 ] )
n = arr . size
ReplaceElements ( arr , n )
for i in range ( n ) :
    print ( arr [ i ] , end = " " )


---> console_out:
1 6 6 2 3  
MATCHED!! :D
 23%|██▎       | 397/1746 [05:25<03:14,  6.93it/s]

-------------------------------------


---> lineNum: 398
---> probID: geeksforgeeks_3879_A
---> inputs:

---> outputs:
5 6 8 10 11 

import numpy as np
def ReplaceElements ( arr ) :
    n = len ( arr )
    if n <= 1 :
        return
    prev = arr [ 0 ]
    arr [ 0 ] = arr [ 0 ] + arr [ 1 ]
    for i in range ( 1 , n - 1 ) :
        curr = arr [ i ]
        arr [ i ] = prev + arr [ i + 1 ]
        prev = curr
    arr [ n - 1 ] = prev + arr [ n - 1 ]
if __name__ == '__main__' :
    arr = np . array ( [ 2 , 3 , 4 , 5 , 6 ] )
    ReplaceElements ( arr )
    for i in range ( len ( arr ) ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
5 6 8 10 11  
MATCHED!! :D


-------------------------------------


---> lineNum: 399
---> probID: geeksforgeeks_4047_A
---> inputs:

---> outputs:
6


import math
def countTriplets ( A , B , C ) :
    ans = 0
    for i in range ( 1 , A + 1 ) :
        for j in range ( 1 , B + 1 ) :
            for k in range ( 1 , C + 1 ) :
                if i * k > j * j :
                    ans += 1
    return ans
A , B , C = 3 , 2 , 2
print ( countTriplets ( A , B , C ) )


---> console_out:
6
 
MATCHED!! :D
 23%|██▎       | 399/1746 [05:26<03:26,  6.52it/s]  File "./junk/1703784011369_9125/main.py", line 1
    N / A ( This is a Java program and cannot be directly translated to Python without significant changes . )
                      ^
SyntaxError: invalid syntax
out1,out2  110970100070999910


-------------------------------------


---> lineNum: 400
---> probID: geeksforgeeks_1376_A
---> inputs:

---> outputs:
11 97
10007 99991


N / A ( This is a Java program and cannot be directly translated to Python without significant changes . )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784011429_8082/main.py", line 16, in <module>
    tir [ i ] [ j ] = min ( tir [ i + 1 ] [ j ] , tir [ i + 1 ] [ j + 1 ] + d [ j ] * c [ i ] )
IndexError: list index out of range
out1,out2  11250


-------------------------------------


---> lineNum: 401
---> probID: aizu_p00534_A
---> inputs:
3 5
10
25
15
50
30
15
40
30
---> outputs:
1125

import sys
import math
INF = math . inf // 2
for line in sys . stdin :
    line = line . strip ( )
    if not line :
        break
    n , m = map ( int , line . split ( ) )
    tir = [ [ 0 ] * ( n + 1 ) for _ in range ( m + 1 ) ]
    tir [ m ] = [ INF ] * ( n + 1 )
    tir [ m ] [ n ] = 0
    d = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
    c = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
    for i in range ( m - 1 , - 1 , - 1 ) :
        for j in range ( n - 1 , - 1 , - 1 ) :
            tir [ i ] [ j ] = min ( tir [ i + 1 ] [ j ] , tir [ i + 1 ] [ j + 1 ] + d [ j ] * c [ i ] )
    print ( tir [ 0 ] [ 0 ] )


---> console_out:
 
DIDN'T MATCH!! :(
 23%|██▎       | 401/1746 [05:26<02:48,  7.96it/s]  File "./junk/1703784011491_7481/main.py", line 5
    input = Scanner ( System . in )
                               ^
SyntaxError: invalid syntax
out1,out2  130


-------------------------------------


---> lineNum: 402
---> probID: codeforces_873_A
---> inputs:
4 2 2
3 6 7 10
---> outputs:
13

import java . util . ArrayList
import java . util . Scanner
class Main :
    def main ( args : Array [ str ] ) :
        input = Scanner ( System . in )
        n = input . nextInt ( )
        k = input . nextInt ( )
        x = input . nextInt ( )
        arr = ArrayList [ int ] ( )
        for i in range ( n ) :
            arr . add ( input . nextInt ( ) )
        for i in range ( arr . size ( ) - k , arr . size ( ) ) :
            arr . set ( i , x )
        sum = 0
        for i in range ( arr . size ( ) ) :
            sum += arr . get ( i )
        print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 403
---> probID: codeforces_883_A
---> inputs:
1 1 3 4
7
---> outputs:
1

import sys
n , m , a , d = map ( int , sys . stdin . readline ( ) . split ( ) )
arr = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
count = 0
time = 0
x = d // a + 1
y = d - ( x - 1 ) * a
if y < 0 :
    y = 0
last = 0
i = 0
while i < m :
    b = max ( min ( ( arr [ i ] - 1 ) // a , n ) , 0 )
    c = b - time
    k = c // x
    count += k
    time += k * x
    if k != 0 :
        while i < m and arr [ i ] <= time * a + y :
            i += 1
    if i >= m :
        break
    count += 1
    last = arr [ i ] + d
    if time < n :
        last = min ( last , ( time + 1 ) * a + d )
    while i < m and arr [ i ] <= last :
        i += 1
    time = max ( time , min ( n , last // a ) )
if time < n :
    count += ( n - time + x - 1 ) // x
print ( count )


---> console_out:
1
 
MATCHED!! :D
 23%|██▎       | 403/1746 [05:26<02:26,  9.19it/s] 23%|██▎       | 403/1746 [05:40<02:26,  9.19it/s]out1,out2 timeoutencounteredpy 404999999983525163520


-------------------------------------


---> lineNum: 404
---> probID: codeforces_598_A
---> inputs:
2
4
1000000000
---> outputs:
-4
499999998352516354

import sys
t = int ( sys . stdin . readline ( ) )
for p in range ( t ) :
    n1 = int ( sys . stdin . readline ( ) )
    sum = n1 * ( n1 + 1 ) // 2
    valu = 0
    for i in range ( 1 , n1 + 1 ) :
        valu += i
        if i & ( i - 1 ) == 0 :
            valu -= i * 2
    result = sum - ( valu * 2 )
    sys . stdout . write ( str ( result ) + "\n" )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 23%|██▎       | 404/1746 [06:06<2:40:08,  7.16s/it]

-------------------------------------


---> lineNum: 405
---> probID: codeforces_276_B
---> inputs:
aba
---> outputs:
First

import sys
s = input ( )
ar = [ 0 ] * 26
for ch in s :
    ar [ ord ( ch ) - 97 ] += 1
cntod = 0
for i in range ( 26 ) :
    if ar [ i ] % 2 != 0 :
        cntod += 1
if cntod == 0 :
    print ( "First" )
else :
    if cntod % 2 == 0 :
        print ( "Second" )
    else :
        print ( "First" )


---> console_out:
First
 
MATCHED!! :D
 23%|██▎       | 405/1746 [06:06<2:08:20,  5.74s/it]

-------------------------------------


---> lineNum: 406
---> probID: geeksforgeeks_2292_A
---> inputs:

---> outputs:
Sum odd = 20
Sum even = 15


import math
def reverse ( n ) :
    rev = 0
    while n != 0 :
        rev = ( rev * 10 ) + ( n % 10 )
        n //= 10
    return rev
def getSum ( n ) :
    n = reverse ( n )
    sumOdd = 0
    sumEven = 0
    c = 1
    while n != 0 :
        if c % 2 == 0 :
            sumEven += n % 10
        else :
            sumOdd += n % 10
        n //= 10
        c += 1
    print ( "Sum odd = " , sumOdd )
    print ( "Sum even = " , sumEven )
n = 457892
getSum ( n )


---> console_out:
Sum odd =  20
Sum even =  15
 
MATCHED!! :D


-------------------------------------


---> lineNum: 407
---> probID: geeksforgeeks_823_A
---> inputs:

---> outputs:
224


import math
def disp ( row_no , block ) :
    print ( row_no * block )
def row ( ht , h ) :
    return ht // h
def calculate ( l , w , h , a , ht ) :
    no_block = ( 4 * a ) // l
    if h < w :
        row_no = row ( ht , w )
    else :
        row_no = row ( ht , h )
    disp ( row_no , no_block )
if __name__ == '__main__' :
    l , w , h = 50 , 20 , 35
    a , ht = 700 , 140
    calculate ( l , w , h , a , ht )


---> console_out:
224
 
MATCHED!! :D
 23%|██▎       | 407/1746 [06:06<1:21:51,  3.67s/it]

-------------------------------------


---> lineNum: 408
---> probID: geeksforgeeks_5049_A
---> inputs:

---> outputs:
2


bin = [ "000" , "001" , "010" , "011" , "100" , "101" , "110" , "111" ]
def maxFreq ( s ) :
    binary = ""
    for i in range ( len ( s ) ) :
        binary += bin [ int ( s [ i ] ) ]
    binary = binary [ : - 1 ]
    count , prev , j = 1 , - 1 , 0
    for i in range ( len ( binary ) - 1 , - 1 , - 1 ) :
        if binary [ i ] == '1' :
            count = max ( count , j - prev )
            prev = j
        j += 1
    return count
octal = "13"
print ( maxFreq ( octal ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 409
---> probID: geeksforgeeks_2776_A
---> inputs:

---> outputs:
1101


def isVowel ( c ) :
    return c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u'
def encryptString ( s , n , k ) :
    cv = [ 0 ] * n
    cc = [ 0 ] * n
    if isVowel ( s [ 0 ] ) :
        cv [ 0 ] = 1
    else :
        cc [ 0 ] = 1
    for i in range ( 1 , n ) :
        cv [ i ] = cv [ i - 1 ] + ( 1 if isVowel ( s [ i ] ) else 0 )
        cc [ i ] = cc [ i - 1 ] + ( 0 if isVowel ( s [ i ] ) else 1 )
    ans = ""
    prod = 0
    prod = cc [ k - 1 ] * cv [ k - 1 ]
    ans += str ( prod )
    for i in range ( k , len ( s ) ) :
        prod = ( cc [ i ] - cc [ i - k ] ) * ( cv [ i ] - cv [ i - k ] )
        ans += str ( prod )
    return ans
s = "hello"
n = len ( s )
k = 2
print ( encryptString ( list ( s ) , n , k ) )


---> console_out:
1101
 
MATCHED!! :D
 23%|██▎       | 409/1746 [06:06<54:10,  2.43s/it]  

-------------------------------------


---> lineNum: 410
---> probID: geeksforgeeks_3448_A
---> inputs:

---> outputs:
15.0631


def harmonicMean ( arr , freq , n ) :
    sum = 0
    frequency_sum = 0
    for i in range ( n ) :
        sum = sum + float ( freq [ i ] ) / arr [ i ]
        frequency_sum = frequency_sum + freq [ i ]
    return frequency_sum / sum
num = [ 13 , 14 , 15 , 16 , 17 ]
freq = [ 2 , 5 , 13 , 7 , 3 ]
n = len ( num )
print ( "{:.4f}" . format ( harmonicMean ( num , freq , n ) ) )


---> console_out:
15.0631
 
MATCHED!! :D


-------------------------------------


---> lineNum: 411
---> probID: geeksforgeeks_3645_A
---> inputs:

---> outputs:
210.444


import math
def polyarea ( n , a ) :
    if a < 0 and n < 0 :
        return - 1
    A = ( a * a * n ) / ( 4 * math . tan ( ( 180 / n ) * math . pi / 180 ) )
    return A
a = 9
n = 6
print ( "{:.3f}" . format ( polyarea ( n , a ) ) )


---> console_out:
210.444
 
MATCHED!! :D
 24%|██▎       | 411/1746 [06:07<36:44,  1.65s/it]

-------------------------------------


---> lineNum: 412
---> probID: geeksforgeeks_3834_A
---> inputs:

---> outputs:
3


def gcd ( a , b ) :
    if a == 0 :
        return b
    if b == 0 :
        return a
    if a == b :
        return a
    if a > b :
        return gcd ( a - b , b )
    return gcd ( a , b - a )
def lcm ( a , b ) :
    return ( a // gcd ( a , b ) * b )
def getMinValue ( c ) :
    ans = float ( 'inf' )
    for i in range ( 1 , int ( c ** 0.5 ) + 1 ) :
        if c % i == 0 and lcm ( i , c // i ) == c :
            ans = min ( ans , max ( i , c // i ) )
    return ans
c = 6
print ( getMinValue ( c ) )


---> console_out:
3
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784052239_2043/main.py", line 10, in <module>
    if gap <= p [ i ] - p [ i + 1 ] and n < i :
IndexError: list index out of range
out1,out2  304020203020


-------------------------------------


---> lineNum: 413
---> probID: aizu_p01085_A
---> inputs:
5 2 4
100
90
82
70
65
5 2 4
100
90
80
75
65
3 1 2
5000
4000
3000
4 2 3
10000
10000
8000
8000
4 2 3
10000
10000
10000
8000
5 2 3
100
80
68
60
45
0 0 0
---> outputs:
3
4
2
2
3
2

import sys
for line in sys . stdin :
    m , nmin , nmax = map ( int , line . split ( ) )
    if m + nmin + nmax == 0 :
        break
    p = [ 0 ] + list ( map ( int , input ( ) . split ( ) ) )
    gap = 0
    n = 0
    for i in range ( nmin , nmax + 1 ) :
        if gap <= p [ i ] - p [ i + 1 ] and n < i :
            gap = p [ i ] - p [ i + 1 ]
            n = i
    print ( n )


---> console_out:
 
DIDN'T MATCH!! :(
 24%|██▎       | 413/1746 [06:07<25:27,  1.15s/it]

-------------------------------------


---> lineNum: 414
---> probID: codeforces_789_B
---> inputs:
3 2 30 4
6 14 25 48
---> outputs:
3

import sys
start , ratio , max_val , m = map ( int , input ( ) . split ( ) )
bad = set ( map ( int , input ( ) . split ( ) ) )
if abs ( start ) > max_val :
    print ( 0 )
    sys . exit ( )
if start == 0 :
    if 0 in bad :
        print ( 0 )
        sys . exit ( )
    else :
        print ( "inf" )
        sys . exit ( )
if ratio == 1 :
    if start in bad :
        print ( 0 )
        sys . exit ( )
    else :
        print ( "inf" )
        sys . exit ( )
if ratio == - 1 :
    if start in bad and - start in bad :
        print ( 0 )
        sys . exit ( )
    else :
        print ( "inf" )
        sys . exit ( )
if ratio == 0 :
    if 0 not in bad :
        print ( "inf" )
        sys . exit ( )
    elif start in bad :
        print ( 0 )
        sys . exit ( )
    else :
        print ( 1 )
        sys . exit ( )
cnt = 0
while abs ( start ) <= max_val :
    if start not in bad :
        cnt += 1
    start *= ratio
print ( cnt )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 415
---> probID: codeforces_1656_A
---> inputs:
3
3
5 2 7
5
1 4 2 2 3
1
2
---> outputs:
2 3
1 2
1 1

import sys
T = int ( input ( ) )
for _ in range ( T ) :
    n = int ( input ( ) )
    arr = [ [ int ( x ) , i + 1 ] for i , x in enumerate ( input ( ) . split ( ) ) ]
    arr . sort ( key = lambda x : x [ 0 ] )
    if n >= 2 :
        print ( arr [ 0 ] [ 1 ] , arr [ - 1 ] [ 1 ] )
    else :
        print ( 1 , 1 )
    sys . stdout . flush ( )


---> console_out:
2 3
1 2
1 1
 
MATCHED!! :D
 24%|██▍       | 415/1746 [06:07<17:53,  1.24it/s]Traceback (most recent call last):
  File "./junk/1703784052441_1838/main.py", line 10, in <module>
    Fibonacci . main ( )
  File "./junk/1703784052441_1838/main.py", line 9, in main
    print ( Fibonacci . findIndex ( n ) )
  File "./junk/1703784052441_1838/main.py", line 4, in findIndex
    fibo = 2.078087 * math . log ( n ) + 1.672276
NameError: name 'math' is not defined
out1,out2  80


-------------------------------------


---> lineNum: 416
---> probID: geeksforgeeks_601_A
---> inputs:

---> outputs:
8


class Fibonacci :
    @ staticmethod
    def findIndex ( n ) :
        fibo = 2.078087 * math . log ( n ) + 1.672276
        return round ( fibo )
    @ staticmethod
    def main ( ) :
        n = 21
        print ( Fibonacci . findIndex ( n ) )
Fibonacci . main ( )


---> console_out:
 
DIDN'T MATCH!! :(
out1,out2 aa9990a9000 1199909999000


-------------------------------------


---> lineNum: 417
---> probID: geeksforgeeks_198_A
---> inputs:

---> outputs:
11999
0999900


import math
def isSmaller ( str1 , str2 ) :
    n1 = len ( str1 )
    n2 = len ( str2 )
    if n1 < n2 :
        return True
    if n2 < n1 :
        return False
    for i in range ( n1 ) :
        if ord ( str1 [ i ] ) < ord ( str2 [ i ] ) :
            return True
        elif ord ( str1 [ i ] ) > ord ( str2 [ i ] ) :
            return False
    return False
def findDiff ( str1 , str2 ) :
    if isSmaller ( str1 , str2 ) :
        t = str1
        str1 = str2
        str2 = t
    str_ = ""
    n1 = len ( str1 )
    n2 = len ( str2 )
    str1 = str1 [ : : - 1 ]
    str2 = str2 [ : : - 1 ]
    carry = 0
    for i in range ( n2 ) :
        sub = ( ord ( str1 [ i ] ) - ord ( str2 [ i ] ) - carry )
        if sub < 0 :
            sub = sub + 10
            carry = 1
        else :
            carry = 0
        str_ += chr ( sub + ord ( '0' ) )
    for i in range ( n2 , n1 ) :
        sub = ( ord ( str1 [ i ] ) - carry )
        if sub < 0 :
            sub = sub + 10
            carry = 1
        else :
            carry = 0
        str_ += chr ( sub + ord ( '0' ) )
    return str_ [ : : - 1 ]
str1 = "978"
str2 = "12977"
print ( findDiff ( str1 , str2 ) )
s1 = "100"
s2 = "1000000"
print ( findDiff ( s1 , s2 ) )


---> console_out:
aa999
a``_900
 
DIDN'T MATCH!! :(
 24%|██▍       | 417/1746 [06:07<12:47,  1.73it/s]

-------------------------------------


---> lineNum: 418
---> probID: geeksforgeeks_3315_A
---> inputs:

---> outputs:
1


def minSwaps ( s1 , s2 ) :
    c0 , c1 = 0 , 0
    for i in range ( len ( s1 ) ) :
        if s1 [ i ] == '0' and s2 [ i ] == '1' :
            c0 += 1
        elif s1 [ i ] == '1' and s2 [ i ] == '0' :
            c1 += 1
    ans = c0 // 2 + c1 // 2
    if c0 % 2 == 0 and c1 % 2 == 0 :
        return ans
    elif ( c0 + c1 ) % 2 == 0 :
        return ans + 2
    else :
        return - 1
s1 = "0011"
s2 = "1111"
ans = minSwaps ( s1 , s2 )
print ( ans )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 419
---> probID: aizu_p01545_A
---> inputs:
4
1 4 2 3
---> outputs:
4

import sys
class SegmentTree :
    def __init__ ( self , n ) :
        self . n = 1
        while self . n < n :
            self . n *= 2
        self . val = [ 0 ] * ( 2 * self . n - 1 )
    def set ( self , k , l ) :
        k += self . n - 1
        self . val [ k ] = l
        while k > 0 :
            k = ( k - 1 ) // 2
            self . val [ k ] = max ( self . val [ 2 * k + 1 ] , self . val [ 2 * k + 2 ] )
    def query ( self , a , b ) :
        return self . _query ( a , b , 0 , self . n , 0 )
    def _query ( self , a , b , l , r , k ) :
        if r <= a or b <= l :
            return 0
        elif a <= l and r <= b :
            return self . val [ k ]
        else :
            vl = self . _query ( a , b , l , ( l + r ) // 2 , 2 * k + 1 )
            vr = self . _query ( a , b , ( l + r ) // 2 , r , 2 * k + 2 )
            return max ( vl , vr )
def main ( ) :
    n = int ( input ( ) )
    x = list ( map ( int , input ( ) . split ( ) ) )
    all_sum = sum ( x )
    seg = SegmentTree ( n + 1 )
    for i in range ( n ) :
        pre = seg . query ( 0 , x [ i ] )
        seg . set ( x [ i ] , pre + x [ i ] )
    fix_sum = seg . query ( 0 , n + 1 )
    print ( all_sum - fix_sum )
if __name__ == '__main__' :
    main ( )


---> console_out:
4
 
MATCHED!! :D
 24%|██▍       | 419/1746 [06:07<09:19,  2.37it/s]

-------------------------------------


---> lineNum: 420
---> probID: codeforces_376_A
---> inputs:
=^==
---> outputs:
balance

import sys
s = input ( )
part = s . index ( "^" )
left = 0
right = 0
for i in range ( part ) :
    if s [ i ] . isdigit ( ) :
        left += ( part - i ) * int ( s [ i ] )
for j in range ( part + 1 , len ( s ) ) :
    if s [ j ] . isdigit ( ) :
        right += ( j - part ) * int ( s [ j ] )
if left == right :
    print ( "balance" )
elif left < right :
    print ( "right" )
else :
    print ( "left" )


---> console_out:
balance
 
MATCHED!! :D


-------------------------------------


---> lineNum: 421
---> probID: geeksforgeeks_1748_A
---> inputs:

---> outputs:
2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 

import math
def normalSieve ( n ) :
    prime = [ False ] * ( n // 2 )
    for i in range ( 3 , int ( math . sqrt ( n ) ) + 1 , 2 ) :
        if not prime [ i // 2 ] :
            for j in range ( i * i , n , i * 2 ) :
                prime [ j // 2 ] = True
    print ( "2" , end = " " )
    for i in range ( 3 , n , 2 ) :
        if not prime [ i // 2 ] :
            print ( i , end = " " )
n = 100
normalSieve ( n )


---> console_out:
2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97  
MATCHED!! :D
 24%|██▍       | 421/1746 [06:07<07:01,  3.14it/s]

-------------------------------------


---> lineNum: 422
---> probID: codeforces_59_A
---> inputs:
HoUse
---> outputs:
house

import sys
word = input ( )
uppercase = 0
lowercase = 0
for ch in word :
    if ch . isupper ( ) :
        uppercase += 1
    else :
        lowercase += 1
if uppercase > lowercase :
    print ( word . upper ( ) )
elif lowercase > uppercase :
    print ( word . lower ( ) )
else :
    print ( word . lower ( ) )


---> console_out:
house
 
MATCHED!! :D


-------------------------------------


---> lineNum: 423
---> probID: geeksforgeeks_4548_A
---> inputs:

---> outputs:
1


import sys
def frequencyOfSmallest ( n , arr ) :
    mn = arr [ 0 ]
    freq = 1
    for i in range ( 1 , n ) :
        if arr [ i ] < mn :
            mn = arr [ i ]
            freq = 1
        elif arr [ i ] == mn :
            freq += 1
    return freq
if __name__ == "__main__" :
    N = 5
    arr = [ 3 , 2 , 3 , 4 , 4 ]
    print ( frequencyOfSmallest ( N , arr ) )


---> console_out:
1
 
MATCHED!! :D
 24%|██▍       | 423/1746 [06:07<05:18,  4.16it/s]

-------------------------------------


---> lineNum: 424
---> probID: geeksforgeeks_1108_A
---> inputs:

---> outputs:
YES


def isSubArray ( A , B , n , m ) :
    i = 0
    j = 0
    while i < n and j < m :
        if A [ i ] == B [ j ] :
            i += 1
            j += 1
            if j == m :
                return True
        else :
            i = i - j + 1
            j = 0
    return False
if __name__ == '__main__' :
    A = [ 2 , 3 , 0 , 5 , 1 , 1 , 2 ]
    n = len ( A )
    B = [ 3 , 0 , 5 , 1 ]
    m = len ( B )
    if isSubArray ( A , B , n , m ) :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
YES
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784053060_5744/main.py", line 1, in <module>
    import java . util . Scanner
ModuleNotFoundError: No module named 'java'
out1,out2  50


-------------------------------------


---> lineNum: 425
---> probID: codeforces_265_B
---> inputs:
2
1
2
---> outputs:
5

import java . util . Scanner
n = int ( input ( ) )
arr = list ( map ( int , input ( ) . split ( ) ) )
ans = arr [ 0 ] + 1
for i in range ( 1 , len ( arr ) ) :
    ans += abs ( arr [ i ] - arr [ i - 1 ] ) + 2
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 24%|██▍       | 425/1746 [06:07<04:10,  5.28it/s]

-------------------------------------


---> lineNum: 426
---> probID: geeksforgeeks_2625_A
---> inputs:

---> outputs:
64


def calculateSum ( n , k ) :
    res = 1
    MOD = 1000000007
    for i in range ( k ) :
        res = ( res * n ) % MOD
    return res
n = 4
k = 3
print ( calculateSum ( n , k ) )


---> console_out:
64
 
MATCHED!! :D


-------------------------------------


---> lineNum: 427
---> probID: atcoder_ABC122_D
---> inputs:
3
---> outputs:
61

import sys
MOD = 1000000007
class Main :
    def __init__ ( self ) :
        self . N = 0
        self . TOKENS = [ "A" , "C" , "G" , "T" ]
        self . memo = [ ]
        self . N = int ( input ( ) )
        self . memo = [ { } for i in range ( self . N + 1 ) ]
    def calc ( self ) :
        return self . dfs ( 0 , "TTT" )
    def isOK ( self , last4 ) :
        if "AGC" in last4 :
            return False
        for i in range ( 3 ) :
            vals = list ( last4 )
            vals [ i ] , vals [ i + 1 ] = vals [ i + 1 ] , vals [ i ]
            s = "" . join ( vals )
            if "AGC" in s :
                return False
        return True
    def dfs ( self , current , last3 ) :
        if last3 in self . memo [ current ] :
            return self . memo [ current ] [ last3 ]
        if current == self . N :
            return 1
        result = 0
        for c in self . TOKENS :
            if self . isOK ( last3 + c ) :
                result = ( result + self . dfs ( current + 1 , last3 [ 1 : ] + c ) ) % MOD
        self . memo [ current ] [ last3 ] = result
        return result
if __name__ == "__main__" :
    ins = Main ( )
    print ( ins . calc ( ) )


---> console_out:
61
 
MATCHED!! :D
 24%|██▍       | 427/1746 [06:08<03:19,  6.63it/s]

-------------------------------------


---> lineNum: 428
---> probID: aizu_p00045_A
---> inputs:
100,20
50,10
70,35
---> outputs:
4950
22

import re
sum = 0
n = 0
total = 0
while True :
    try :
        value , amount = map ( int , re . split ( '[,\n]' , input ( ) ) )
        sum += value * amount
        total += amount
        n += 1
    except :
        break
print ( sum )
print ( round ( total / n ) )


---> console_out:
4950
22
 
MATCHED!! :D


-------------------------------------


---> lineNum: 429
---> probID: geeksforgeeks_2989_A
---> inputs:

---> outputs:
15


import math
MAX = 100
def binomialCoeff ( n , k ) :
    C = [ 0 ] * ( k + 1 )
    C [ 0 ] = 1
    for i in range ( 1 , n + 1 ) :
        for j in range ( min ( i , k ) , 0 , - 1 ) :
            C [ j ] = C [ j ] + C [ j - 1 ]
    return C [ k ]
def sumOfproduct ( n ) :
    return binomialCoeff ( 2 * n , n - 1 )
if __name__ == '__main__' :
    n = 3
    print ( sumOfproduct ( n ) )


---> console_out:
15
 
MATCHED!! :D
 25%|██▍       | 429/1746 [06:08<02:50,  7.73it/s]out1,out2 enterthefirststringenterthefirststringabxhydlenterthesecondstringenterthesecondstringabxhydlarebothstringssameyes enterthefirststringabxhydlenterthesecondstringabxhydlarebothstringssameyes


-------------------------------------


---> lineNum: 430
---> probID: geeksforgeeks_4247_A
---> inputs:
abxhydl
abxhydl

---> outputs:
Enter the first string: abxhydl
Enter the second string: abxhydl
Are both strings same: Yes


import sys
string1 = input ( "Enter the first string: " )
print ( "Enter the first string: " + string1 )
string2 = input ( "Enter the second string: " )
print ( "Enter the second string: " + string2 )
print ( "Are both strings same: " , end = "" )
if string1 == string2 :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Enter the first string: Enter the first string: abxhydl
Enter the second string: Enter the second string: abxhydl
Are both strings same: Yes
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 431
---> probID: geeksforgeeks_1058_A
---> inputs:

---> outputs:
6


import math
def pairCount ( arr , n ) :
    max_val = max ( arr )
    prime = [ True ] * ( max_val + 1 )
    prime [ 0 ] = False
    prime [ 1 ] = False
    for p in range ( 2 , int ( math . sqrt ( max_val ) ) + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , max_val + 1 , p ) :
                prime [ i ] = False
    count = 0
    for i in range ( n ) :
        if prime [ arr [ i ] ] == True :
            count += 1
    return ( count * ( count - 1 ) ) // 2
arr = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 ]
n = len ( arr )
print ( pairCount ( arr , n ) )


---> console_out:
6
 
MATCHED!! :D
 25%|██▍       | 431/1746 [06:08<02:31,  8.65it/s]

-------------------------------------


---> lineNum: 432
---> probID: geeksforgeeks_521_A
---> inputs:

---> outputs:
13


import numpy as np
def getPrime ( arr , n ) :
    max_val = np . max ( arr )
    prime = [ True ] * ( max_val + 1 )
    prime [ 1 ] = False
    prime [ 2 ] = False
    for p in range ( 2 , int ( max_val ** 0.5 ) + 1 ) :
        if prime [ p ] :
            for i in range ( p * 2 , max_val + 1 , p ) :
                prime [ i ] = False
    maximum = - 1
    for i in range ( n ) :
        if prime [ arr [ i ] ] :
            maximum = max ( maximum , arr [ i ] )
    return maximum
arr = [ 2 , 10 , 15 , 7 , 6 , 8 , 13 ]
n = len ( arr )
print ( getPrime ( arr , n ) )


---> console_out:
13
 
MATCHED!! :D
  File "./junk/1703784053859_8424/main.py", line 1
    0ERROR
     ^
SyntaxError: invalid syntax
out1,out2  55373762300


-------------------------------------


---> lineNum: 433
---> probID: projecteuler_p013_A
---> inputs:

---> outputs:
5537376230

0ERROR

---> console_out:
 
DIDN'T MATCH!! :(
 25%|██▍       | 433/1746 [06:08<02:51,  7.66it/s]Traceback (most recent call last):
  File "./junk/1703784053921_2764/main.py", line 1, in <module>
    import java . util . Arrays
ModuleNotFoundError: No module named 'java'
out1,out2  601020


-------------------------------------


---> lineNum: 434
---> probID: geeksforgeeks_1484_A
---> inputs:

---> outputs:
-6 1 2 

import java . util . Arrays
class GFG :
    @ staticmethod
    def findElements ( arr , n ) :
        arr . sort ( )
        for i in range ( n - 2 ) :
            print ( arr [ i ] , end = " " )
    @ staticmethod
    def main ( args ) :
        arr = [ 2 , - 6 , 3 , 5 , 1 ]
        n = len ( arr )
        GFG . findElements ( arr , n )
GFG . main ( None )


---> console_out:
 
DIDN'T MATCH!! :(
out1,out2 4040506060901001001200 405060901001200


-------------------------------------


---> lineNum: 435
---> probID: geeksforgeeks_1785_A
---> inputs:

---> outputs:
4 5 6 9 10 120 

import numpy as np
def printDistinct ( arr , n ) :
    arr = np . sort ( arr )
    for i in range ( n ) :
        while i < n - 1 and arr [ i ] == arr [ i + 1 ] :
            i += 1
        print ( arr [ i ] , end = " " )
arr = np . array ( [ 6 , 10 , 5 , 4 , 9 , 120 , 4 , 6 , 10 ] )
n = len ( arr )
printDistinct ( arr , n )


---> console_out:
4 4 5 6 6 9 10 10 120  
DIDN'T MATCH!! :(
 25%|██▍       | 435/1746 [06:09<03:08,  6.95it/s]

-------------------------------------


---> lineNum: 436
---> probID: aizu_p02477_A
---> inputs:
5 8
---> outputs:
40

import math
import sys
BIG_NUM = 2000000000
MOD = 1000000007
try :
    input = input ( ) . split ( )
    A = int ( input [ 0 ] )
    B = int ( input [ 1 ] )
    ans = A * B
    print ( ans )
except :
    pass


---> console_out:
40
 
MATCHED!! :D


-------------------------------------


---> lineNum: 437
---> probID: geeksforgeeks_4600_A
---> inputs:

---> outputs:
7


def nth_term ( a , b , n ) :
    z = 0
    if n % 6 == 1 :
        z = a
    elif n % 6 == 2 :
        z = b
    elif n % 6 == 3 :
        z = b - a
    elif n % 6 == 4 :
        z = - a
    elif n % 6 == 5 :
        z = - b
    if n % 6 == 0 :
        z = - ( b - a )
    return z
if __name__ == '__main__' :
    a , b , n = 10 , 17 , 3
    print ( nth_term ( a , b , n ) )


---> console_out:
7
 
MATCHED!! :D
 25%|██▌       | 437/1746 [06:09<02:38,  8.26it/s]Traceback (most recent call last):
  File "./junk/1703784054406_9498/main.py", line 19, in <module>
    print ( combinedSum ( s ) )
  File "./junk/1703784054406_9498/main.py", line 15, in combinedSum
    for i in range ( range + 1 ) :
TypeError: 'int' object is not callable
out1,out2  240


-------------------------------------


---> lineNum: 438
---> probID: geeksforgeeks_535_A
---> inputs:

---> outputs:
24


import math
def findSubSequence ( s , num ) :
    res = 0
    i = 0
    while num > 0 :
        if num & 1 == 1 :
            res += int ( s [ i ] )
        i += 1
        num = num >> 1
    return res
def combinedSum ( s ) :
    n = len ( s )
    c_sum = 0
    range = int ( math . pow ( 2 , n ) ) - 1
    for i in range ( range + 1 ) :
        c_sum += findSubSequence ( s , i )
    return c_sum
s = "123"
print ( combinedSum ( s ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 439
---> probID: geeksforgeeks_963_A
---> inputs:

---> outputs:
9


import math
def minimumCost ( cost , n ) :
    dp1 = 0
    dp2 = 0
    for i in range ( n ) :
        dp0 = cost [ i ] + min ( dp1 , dp2 )
        dp2 = dp1
        dp1 = dp0
    return min ( dp1 , dp2 )
a = [ 2 , 5 , 3 , 1 , 7 , 3 , 4 ]
n = len ( a )
print ( minimumCost ( a , n ) )


---> console_out:
9
 
MATCHED!! :D
 25%|██▌       | 439/1746 [06:09<02:14,  9.69it/s]

-------------------------------------


---> lineNum: 440
---> probID: geeksforgeeks_1369_A
---> inputs:

---> outputs:
Count = 10


import math
def countMultiples ( n ) :
    return n // 3 + n // 7 - n // 21
print ( "Count = " , countMultiples ( 25 ) )


---> console_out:
Count =  10
 
MATCHED!! :D


-------------------------------------


---> lineNum: 441
---> probID: geeksforgeeks_2875_A
---> inputs:

---> outputs:
Length = 3


import string
SIZE = 26
def longSubstring ( str1 , k ) :
    freq = [ 0 ] * SIZE
    str = list ( str1 )
    start = 0
    maxLen = 0
    n = len ( str1 )
    for i in range ( n ) :
        ch = str [ i ]
        freq [ ord ( ch ) - ord ( 'a' ) ] += 1
        if freq [ ord ( ch ) - ord ( 'a' ) ] > k :
            if maxLen < ( i - start ) :
                maxLen = i - start
            while freq [ ord ( ch ) - ord ( 'a' ) ] > k :
                freq [ ord ( str [ start ] ) - ord ( 'a' ) ] -= 1
                start += 1
    if maxLen < ( n - start ) :
        maxLen = n - start
    return maxLen
if __name__ == '__main__' :
    str = "babcaag"
    k = 1
    print ( "Length = " , longSubstring ( str , k ) )


---> console_out:
Length =  3
 
MATCHED!! :D
 25%|██▌       | 441/1746 [06:09<02:00, 10.87it/s]

-------------------------------------


---> lineNum: 442
---> probID: codeforces_282_B
---> inputs:
2
1 999
999 1
---> outputs:
AG

import sys
n = int ( input ( ) )
ch = [ '' ] * n
s1 , s2 = 0 , 0
j , flag = 0 , 0
for i in range ( n ) :
    x , y = map ( int , input ( ) . split ( ) )
    temp1 = s1 + x
    temp2 = s2 + y
    if abs ( temp1 - s2 ) <= 500 :
        s1 += x
        ch [ j ] = 'A'
        j += 1
        continue
    if abs ( temp2 - s1 ) <= 500 :
        s2 += y
        ch [ j ] = 'G'
        j += 1
        continue
    flag = 1
    break
if flag == 1 :
    print ( - 1 )
else :
    ans = '' . join ( ch )
    print ( ans )


---> console_out:
AG
 
MATCHED!! :D


-------------------------------------


---> lineNum: 443
---> probID: leetcode_405_A
---> inputs:

---> outputs:
1a

class Solution :
    def toHex ( self , num : int ) -> str :
        hex_map = "0123456789abcdef"
        if num == 0 :
            return "0"
        res = ""
        while num != 0 and len ( res ) < 8 :
            res = hex_map [ num & 15 ] + res
            num = num >> 4
        return res
sObj = Solution ( )
n = 26
out = sObj . toHex ( n )
print ( out )


---> console_out:
1a
 
MATCHED!! :D
 25%|██▌       | 443/1746 [06:09<01:49, 11.92it/s]out1,out2 yeslslssssssssssssssssssssss yesssssslllllssssslllllsssss


-------------------------------------


---> lineNum: 444
---> probID: codeforces_544_B
---> inputs:
5 2
---> outputs:
['YES\nSSSSS\nLLLLL\nSSSSS\nLLLLL\nSSSSS', 'YES\nLSLSS\nSSSSS\nSSSSS\nSSSSS\nSSSSS\n']

import sys
def printIsland ( n , count ) :
    a = ( n + 1 ) // 2
    b = n // 2
    max_val = a * a + b * b
    if count > max_val :
        print ( "NO" )
        return
    print ( "YES" )
    sb = ""
    for i in range ( n ) :
        for j in range ( n ) :
            if ( i + j ) % 2 == 0 and count > 0 :
                sb += 'L'
                count -= 1
            else :
                sb += 'S'
        sb += "\n"
    print ( sb )
if __name__ == "__main__" :
    n , count = map ( int , input ( ) . split ( ) )
    printIsland ( n , count )


---> console_out:
YES
LSLSS
SSSSS
SSSSS
SSSSS
SSSSS

 
MATCHED!! :D


-------------------------------------


---> lineNum: 445
---> probID: geeksforgeeks_5111_A
---> inputs:

---> outputs:
ek


def longestString ( str1 , str2 ) :
    count1 = [ 0 ] * 26
    count2 = [ 0 ] * 26
    for i in range ( len ( str1 ) ) :
        count1 [ ord ( str1 [ i ] ) - ord ( 'a' ) ] += 1
    for i in range ( len ( str2 ) ) :
        count2 [ ord ( str2 [ i ] ) - ord ( 'a' ) ] += 1
    result = ""
    for i in range ( 26 ) :
        for j in range ( 1 , min ( count1 [ i ] , count2 [ i ] ) + 1 ) :
            result += chr ( ord ( 'a' ) + i )
    print ( result )
str1 = "geeks"
str2 = "cake"
longestString ( str1 , str2 )


---> console_out:
ek
 
MATCHED!! :D
 25%|██▌       | 445/1746 [06:09<01:42, 12.74it/s]

-------------------------------------


---> lineNum: 446
---> probID: geeksforgeeks_1843_A
---> inputs:

---> outputs:
4


def msb ( x ) :
    ret = 0
    while ( x >> ( ret + 1 ) ) != 0 :
        ret += 1
    return ret
def xorRange ( l , r ) :
    max_bit = msb ( r )
    mul = 2
    ans = 0
    for i in range ( 1 , max_bit + 1 ) :
        if ( l // mul ) * mul == ( r // mul ) * mul :
            if ( l & ( 1 << i ) ) != 0 and ( r - l + 1 ) % 2 == 1 :
                ans += mul
            mul *= 2
            continue
        odd_c = 0
        if ( l & ( 1 << i ) ) != 0 and l % 2 == 1 :
            odd_c ^= 1
        if ( r & ( 1 << i ) ) != 0 and r % 2 == 0 :
            odd_c ^= 1
        if odd_c != 0 :
            ans += mul
        mul *= 2
    zero_bit_cnt = ( r - l + 1 ) // 2
    if l % 2 == 1 and r % 2 == 1 :
        zero_bit_cnt += 1
    if zero_bit_cnt % 2 == 1 :
        ans += 1
    return ans
l , r = 1 , 4
print ( xorRange ( l , r ) )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 447
---> probID: geeksforgeeks_4393_A
---> inputs:

---> outputs:
No


def q1 ( s , i ) :
    if i == len ( s ) :
        print ( "Yes" )
        return
    if s [ i ] == 'a' :
        q1 ( s , i + 1 )
    else :
        q2 ( s , i + 1 )
def q2 ( s , i ) :
    if i == len ( s ) :
        print ( "No" )
        return
    if s [ i ] == 'a' :
        q1 ( s , i + 1 )
    else :
        q2 ( s , i + 1 )
def q3 ( s , i ) :
    if i == len ( s ) :
        print ( "Yes" )
        return
    if s [ i ] == 'a' :
        q4 ( s , i + 1 )
    else :
        q3 ( s , i + 1 )
def q4 ( s , i ) :
    if i == len ( s ) :
        print ( "No" )
        return
    if s [ i ] == 'a' :
        q4 ( s , i + 1 )
    else :
        q3 ( s , i + 1 )
def q0 ( s , i ) :
    if i == len ( s ) :
        print ( "No" )
        return
    if s [ i ] == 'a' :
        q1 ( s , i + 1 )
    else :
        q3 ( s , i + 1 )
s = "abbaabb"
q0 ( s , 0 )


---> console_out:
No
 
MATCHED!! :D
 26%|██▌       | 447/1746 [06:09<01:36, 13.50it/s]Traceback (most recent call last):
  File "./junk/1703784055050_9621/main.py", line 16, in <module>
    if t [ k ] > 0 :
IndexError: list index out of range
out1,out2  160001207097890136580174660


-------------------------------------


---> lineNum: 448
---> probID: aizu_p00154_A
---> inputs:
5
1 10
5 3
10 3
25 2
50 2
4
120
500
100
168
7
1 10
3 10
5 10
10 10
25 10
50 10
100 10
3
452
574
787
0
---> outputs:
16
0
12
7
9789
13658
17466

import sys
while True :
    n = int ( input ( ) )
    if n == 0 :
        break
    m = [ 0 ] * 10000
    t = [ 1 ]
    a , b = 0 , 0
    max_val = 0
    for i in range ( n ) :
        m = [ 0 ] * 10000
        t = [ 1 ]
        a , b = map ( int , input ( ) . split ( ) )
        for j in range ( 0 , a * b + 1 , a ) :
            for k in range ( max_val + 1 ) :
                if t [ k ] > 0 :
                    m [ j + k ] += t [ k ]
        max_val += a * b
        t = m [ : ]
    s = int ( input ( ) )
    for i in range ( s ) :
        print ( m [ int ( input ( ) ) ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 449
---> probID: geeksforgeeks_1134_A
---> inputs:

---> outputs:
22:22


def findTime ( T , K ) :
    minutes = ( ( int ( T [ 0 ] ) * 10 + int ( T [ 1 ] ) ) * 60 ) + ( int ( T [ 3 ] ) * 10 + int ( T [ 4 ] ) )
    minutes += K
    hour = ( minutes // 60 ) % 24
    min = minutes % 60
    if hour < 10 :
        print ( "0" + str ( hour ) + ":" , end = "" )
    else :
        print ( str ( hour ) + ":" , end = "" )
    if min < 10 :
        print ( "0" + str ( min ) )
    else :
        print ( str ( min ) )
T = "21:39"
K = 43
findTime ( T , K )


---> console_out:
22:22
 
MATCHED!! :D
 26%|██▌       | 449/1746 [06:10<01:31, 14.20it/s]

-------------------------------------


---> lineNum: 450
---> probID: geeksforgeeks_2226_A
---> inputs:

---> outputs:
Maximum Product = 3150
Maximum Sum = 26


import math
def maxProductSum ( str , m ) :
    n = len ( str )
    maxProd = - math . inf
    maxSum = - math . inf
    for i in range ( n - m ) :
        product = 1
        sum = 0
        for j in range ( i , m + i ) :
            product *= int ( str [ j ] )
            sum += int ( str [ j ] )
        maxProd = max ( maxProd , product )
        maxSum = max ( maxSum , sum )
    print ( "Maximum Product = " , maxProd )
    print ( "Maximum Sum = " , maxSum )
str = "3675356291"
m = 5
maxProductSum ( str , m )


---> console_out:
Maximum Product =  3150
Maximum Sum =  26
 
MATCHED!! :D


-------------------------------------


---> lineNum: 451
---> probID: geeksforgeeks_3429_A
---> inputs:

---> outputs:
8


def min ( x , y , z ) :
    if x < y :
        return x if x < z else z
    else :
        return y if y < z else z
def minCost ( cost , m , n ) :
    if n < 0 or m < 0 :
        return float ( 'inf' )
    elif m == 0 and n == 0 :
        return cost [ m ] [ n ]
    else :
        return cost [ m ] [ n ] + min ( minCost ( cost , m - 1 , n - 1 ) , minCost ( cost , m - 1 , n ) , minCost ( cost , m , n - 1 ) )
cost = [ [ 1 , 2 , 3 ] , [ 4 , 8 , 2 ] , [ 1 , 5 , 3 ] ]
print ( minCost ( cost , 2 , 2 ) )


---> console_out:
8
 
MATCHED!! :D
 26%|██▌       | 451/1746 [06:10<01:27, 14.72it/s]Traceback (most recent call last):
  File "./junk/1703784055298_9388/main.py", line 7, in <module>
    shu [ i ] = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 2 6'
out1,out2  20


-------------------------------------


---> lineNum: 452
---> probID: codeforces_985_A
---> inputs:
6
1 2 6
---> outputs:
2

import sys
n = int ( input ( ) )
x = [ 0 ] * ( n + 1 )
ji = [ 0 ] * ( n + 1 )
shu = [ 0 ] * ( n // 2 )
for i in range ( n // 2 ) :
    shu [ i ] = int ( input ( ) )
shu . sort ( )
l1 = 0
l2 = 0
for i in range ( n // 2 ) :
    s1 = i * 2 + 1
    s2 = i * 2 + 2
    id = shu [ i ]
    if id != s1 :
        l1 = l1 + abs ( s1 - id )
    if id != s2 :
        l2 = l2 + abs ( s2 - id )
min_val = min ( l1 , l2 )
print ( min_val )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784055364_4076/main.py", line 40, in <module>
    relate ( query [ 1 ] , query [ 2 ] , query [ 3 ] )
  File "./junk/1703784055364_4076/main.py", line 14, in relate
    z += weight ( x )
TypeError: 'list' object is not callable
out1,out2  20100


-------------------------------------


---> lineNum: 453
---> probID: aizu_p02344_A
---> inputs:
5 6
0 0 2 5
0 1 2 3
1 0 1
1 1 3
0 1 4 8
1 0 4
---> outputs:
2
?
10

import sys
def find ( x ) :
    if x == parents [ x ] :
        return x
    else :
        r = find ( parents [ x ] )
        weight [ x ] += weight [ parents [ x ] ]
        parents [ x ] = r
        return r
def weight ( x ) :
    find ( x )
    return weight [ x ]
def relate ( x , y , z ) :
    z += weight ( x )
    z -= weight ( y )
    x = find ( x )
    y = find ( y )
    if x == y :
        return
    if rank [ x ] < rank [ y ] :
        x , y = y , x
        z = - z
    if rank [ x ] == rank [ y ] :
        rank [ x ] += 1
    parents [ y ] = x
    weight [ y ] = z
def diff ( x , y ) :
    if find ( x ) == find ( y ) :
        print ( weight ( y ) - weight ( x ) )
    else :
        print ( "?" )
if __name__ == "__main__" :
    n , q = map ( int , input ( ) . split ( ) )
    parents = [ i for i in range ( n ) ]
    weight = [ 0 ] * n
    rank = [ 0 ] * n
    for i in range ( q ) :
        query = list ( map ( int , input ( ) . split ( ) ) )
        if query [ 0 ] == 0 :
            relate ( query [ 1 ] , query [ 2 ] , query [ 3 ] )
        else :
            diff ( query [ 1 ] , query [ 2 ] )


---> console_out:
 
DIDN'T MATCH!! :(
 26%|██▌       | 453/1746 [06:10<01:26, 14.93it/s]

-------------------------------------


---> lineNum: 454
---> probID: geeksforgeeks_2430_A
---> inputs:

---> outputs:
42


import math
def sumDivisibles ( A , B , M ) :
    sum = 0
    for i in range ( A , B + 1 ) :
        if i % M == 0 :
            sum += i
    return sum
A = 6
B = 15
M = 3
print ( sumDivisibles ( A , B , M ) )


---> console_out:
42
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784055490_4280/main.py", line 18, in <module>
    print ( "Count of numbers from 1 to" , n , "that have 4 as a digit is" , countNumbersWith4 ( n ) )
  File "./junk/1703784055490_4280/main.py", line 4, in countNumbersWith4
    d = int ( math . log10 ( n ) )
NameError: name 'math' is not defined
out1,out2  countofnumbersfrom10to3280thathave40asadigitis600


-------------------------------------


---> lineNum: 455
---> probID: geeksforgeeks_1744_A
---> inputs:

---> outputs:
Count of numbers from 1 to 328 that have 4 as a digit is 60


def countNumbersWith4 ( n ) :
    if n < 4 :
        return 0
    d = int ( math . log10 ( n ) )
    a = [ 0 ] * ( d + 2 )
    a [ 0 ] = 0
    a [ 1 ] = 1
    for i in range ( 2 , d + 1 ) :
        a [ i ] = a [ i - 1 ] * 9 + int ( math . ceil ( math . pow ( 10 , i - 1 ) ) )
    p = int ( math . ceil ( math . pow ( 10 , d ) ) )
    msd = n // p
    if msd == 4 :
        return ( msd ) * a [ d ] + ( n % p ) + 1
    if msd > 4 :
        return ( msd - 1 ) * a [ d ] + p + countNumbersWith4 ( n % p )
    return ( msd ) * a [ d ] + countNumbersWith4 ( n % p )
n = 328
print ( "Count of numbers from 1 to" , n , "that have 4 as a digit is" , countNumbersWith4 ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 26%|██▌       | 455/1746 [06:10<01:24, 15.25it/s]Traceback (most recent call last):
  File "./junk/1703784055552_2269/main.py", line 2, in <module>
    x = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '2 3'
out1,out2  10


-------------------------------------


---> lineNum: 456
---> probID: codeforces_450_B
---> inputs:
2 3
3
---> outputs:
1

import sys
x = int ( input ( ) )
y = int ( input ( ) )
lst = [ x , y , y - x ]
i = 2
while not ( lst [ i ] == y and lst [ i - 1 ] == x or lst [ i ] == 0 and lst [ i - 1 ] == 0 ) :
    lst . append ( lst [ i ] - lst [ i - 1 ] )
    i += 1
k = int ( input ( ) )
i -= 1
k = k % i if k != 0 else i
print ( ( lst [ k - 1 ] % 1000000007 + 1000000007 ) % 1000000007 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 457
---> probID: geeksforgeeks_3088_A
---> inputs:

---> outputs:
35 30 100 80 40 

import sys
class INT :
    def __init__ ( self , d ) :
        self . data = d
def findPostOrderUtil ( pre , n , minval , maxval , preIndex ) :
    if preIndex . data == n :
        return
    if pre [ preIndex . data ] < minval or pre [ preIndex . data ] > maxval :
        return
    val = pre [ preIndex . data ]
    preIndex . data += 1
    findPostOrderUtil ( pre , n , minval , val , preIndex )
    findPostOrderUtil ( pre , n , val , maxval , preIndex )
    sys . stdout . write ( str ( val ) + " " )
def findPostOrder ( pre , n ) :
    preIndex = INT ( 0 )
    findPostOrderUtil ( pre , n , - sys . maxsize , sys . maxsize , preIndex )
if __name__ == "__main__" :
    pre = [ 40 , 30 , 35 , 80 , 100 ]
    n = len ( pre )
    findPostOrder ( pre , n )


---> console_out:
35 30 100 80 40  
MATCHED!! :D
 26%|██▌       | 457/1746 [06:10<01:23, 15.39it/s]

-------------------------------------


---> lineNum: 458
---> probID: geeksforgeeks_1057_A
---> inputs:

---> outputs:
1


import numpy as np
def countWays ( n , arr , k ) :
    if k <= 0 or k >= n :
        return 0
    s = set ( arr )
    if len ( s ) <= k :
        return 0
    return len ( s ) - k
if __name__ == '__main__' :
    arr = np . array ( [ 100 , 200 , 400 , 50 ] )
    k = 3
    n = len ( arr )
    print ( countWays ( n , arr , k ) )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 459
---> probID: codeforces_250_B
---> inputs:
6
a56f:d3:0:0124:01:f19a:1000:00
a56f:00d3:0000:0124:0001::
a56f::0124:0001:0000:1234:0ff0
a56f:0000::0000:0001:0000:1234:0ff0
::
0ea::4d:f4:6:0
---> outputs:
a56f:00d3:0000:0124:0001:f19a:1000:0000
a56f:00d3:0000:0124:0001:0000:0000:0000
a56f:0000:0000:0124:0001:0000:1234:0ff0
a56f:0000:0000:0000:0001:0000:1234:0ff0
0000:0000:0000:0000:0000:0000:0000:0000
00ea:0000:0000:0000:004d:00f4:0006:0000

import sys
class _250B :
    def __init__ ( self ) :
        self . inp = sys . stdin
        self . out = sys . stdout
    def solve ( self ) :
        sb = [ ]
        for i in range ( int ( self . next_token ( ) ) ) :
            s = self . next_token ( ) . split ( ":" )
            k , m = 0 , len ( s ) - 1
            if s [ k ] == "" :
                k += 1
            if s [ m ] == "" :
                m -= 1
            for j in range ( k , m + 1 ) :
                if s [ j ] == "" :
                    for l in range ( 1 , 8 - m + k + 1 ) :
                        sb . append ( "0000" )
                        if l < 8 - m + k :
                            sb . append ( ":" )
                else :
                    sb . append ( s [ j ] . zfill ( 4 ) )
                if j < m :
                    sb . append ( ":" )
            sb . append ( "\n" )
        return "" . join ( sb )
    def run ( self ) :
        try :
            print ( self . solve ( ) , file = self . out )
        except Exception as e :
            sys . exit ( 0 )
    def next_token ( self ) :
        return self . inp . readline ( ) . strip ( )
if __name__ == "__main__" :
    _250B ( ) . run ( )


---> console_out:
a56f:00d3:0000:0124:0001:f19a:1000:0000
a56f:00d3:0000:0124:0001:0000:0000:0000
a56f:0000:0000:0124:0001:0000:1234:0ff0
a56f:0000:0000:0000:0001:0000:1234:0ff0
0000:0000:0000:0000:0000:0000:0000:0000
00ea:0000:0000:0000:004d:00f4:0006:0000

 
MATCHED!! :D
 26%|██▋       | 459/1746 [06:10<02:01, 10.58it/s]

-------------------------------------


---> lineNum: 460
---> probID: geeksforgeeks_395_A
---> inputs:

---> outputs:
2


def isPrime ( n ) :
    flag = 1
    for i in range ( 2 , int ( n ** 0.5 ) + 1 ) :
        if n % i == 0 :
            flag = 0
            break
    return True if flag == 1 else False
def isPerfectSquare ( x ) :
    sr = int ( x ** 0.5 )
    return True if sr * sr == x else False
def countInterestingPrimes ( n ) :
    answer = 0
    for i in range ( 2 , n + 1 ) :
        if isPrime ( i ) :
            for j in range ( 1 , int ( i ** ( 1 / 4 ) ) + 1 ) :
                if isPerfectSquare ( i - j * j * j * j ) :
                    answer += 1
                    break
    return answer
N = 10
print ( countInterestingPrimes ( N ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 461
---> probID: atcoder_ABC109_B
---> inputs:
100
wzcitmdfbw
ziowcpggbu
niopnjdjcw
rixzquldia
lwrdjmbhvk
gysprovnzf
rajessmyby
cdqmsxsryd
soiktyfxjo
mtwyskctdj
fuvekmckrw
izayctxcfx
pgruprmpnz
suoegwgdbb
yiruisjqib
apbombsjoq
ozsdgdrgyq
yfrkssntfg
ufqrqzxecg
ulnxeatmlq
xjkyjxifir
szudolgmnl
jzjujuayji
icervhavvg
twhlsrwaqo
tgokhtwgjm
fslvhzpgns
fhgboehmzp
ortkqjuanp
nfnluezljs
qtofmenwfz
lrrpzetxog
oqrhuhlyge
nbkpwqbwwc
zxeiyoztkm
gvjusurkti
eahzrntrra
skbabwcsrh
aznxyudgfp
qpguijawgh
wvfogdvtuh
mrjceofctz
qgfietzkbe
gbsjzmfzrm
fmgvoafxfy
imayuxcjre
dydnvlxwvh
uaiqgluufb
btpvtcfhpr
lrbvvlntrq
zqawbssran
jaxtjvsxsd
uzsxloeblc
ibyfeuonsy
rcvccfpkzt
ialhqhqeky
dqxmnzcapl
zyxvfbpdzm
lfmmlgtnfr
aoebtfduzx
gsaqwcnjiy
trzyfwkrdl
aywhcmfgzv
cbflkacyhh
casmblhbdj
ejnfwylcqv
nmzxugfsiy
juicgffiwr
szdbzjyhvg
pfsapufjqf
epxbfljgtd
gmfeecqfwf
vweiacditm
sfaldcqlry
clmccmodln
lkwvgmdzwa
pbzyrwxasq
vtbmtbpide
dvrpxqndca
htgzshjaru
umquxrrvth
ocdkuurwur
kexhypsbup
xisdeshlts
vhvjvhnxgg
avcdaiiaqa
djjernidpe
rjdqucsaup
rtyfoiiklh
tsznddftcg
echwbizhes
dxmacmzild
eegshhntfz
nbbgxavmpn
fhpxylxkyz
tbqwpuymql
nmetghtnre
fypivpyndo
bresgvlmkk
xhlomigiri
---> outputs:
No

import sys
N = int ( input ( ) )
previous = input ( )
used_words = set ( [ previous ] )
while N > 1 :
    next_word = input ( )
    if not ( previous [ - 1 ] == next_word [ 0 ] and next_word not in used_words ) :
        print ( "No" )
        sys . exit ( )
    used_words . add ( next_word )
    previous = next_word
    N -= 1
print ( "Yes" )


---> console_out:
No
 
MATCHED!! :D
 26%|██▋       | 461/1746 [06:10<01:48, 11.80it/s]

-------------------------------------


---> lineNum: 462
---> probID: geeksforgeeks_2976_A
---> inputs:

---> outputs:
18


def findNum ( div , rem , N ) :
    num = rem [ N - 1 ]
    for i in range ( N - 2 , - 1 , - 1 ) :
        num = num * div [ i ] + rem [ i ]
    return num
if __name__ == '__main__' :
    div = [ 8 , 3 ]
    rem = [ 2 , 2 ]
    N = len ( div )
    print ( findNum ( div , rem , N ) )


---> console_out:
18
 
MATCHED!! :D
out1,out2 arrayaftersegregationis002000202020 arrayaftersegregationis000010101010


-------------------------------------


---> lineNum: 463
---> probID: geeksforgeeks_3759_A
---> inputs:

---> outputs:
Array after segregation is 0 0 1 1 1 1 

import numpy as np
def segregate0and1 ( arr ) :
    type0 = 0
    type1 = len ( arr ) - 1
    while type0 < type1 :
        if arr [ type0 ] == 1 :
            arr [ type1 ] , arr [ type0 ] = arr [ type1 ] + arr [ type0 ] , arr [ type1 ] - arr [ type0 ]
            arr [ type1 ] , arr [ type0 ] = arr [ type1 ] - arr [ type0 ] , arr [ type1 ]
            type1 -= 1
        else :
            type0 += 1
array = np . array ( [ 0 , 1 , 0 , 1 , 1 , 1 ] )
segregate0and1 ( array )
print ( "Array after segregation is" , end = " " )
for a in array :
    print ( a , end = " " )


---> console_out:
Array after segregation is 0 2 0 2 2 2  
DIDN'T MATCH!! :(
 27%|██▋       | 463/1746 [06:11<02:18,  9.23it/s]Traceback (most recent call last):
  File "./junk/1703784056457_5141/main.py", line 7, in <module>
    if d [ i ] != d [ i + 1 ] :
IndexError: list index out of range
out1,out2  30


-------------------------------------


---> lineNum: 464
---> probID: atcoder_ABC085_B
---> inputs:
4
10
8
8
6
---> outputs:
3

import sys
n = int ( input ( ) )
d = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
d . sort ( )
ans = 1
for i in range ( n - 1 ) :
    if d [ i ] != d [ i + 1 ] :
        ans += 1
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 465
---> probID: codeforces_3_A
---> inputs:
a8
h1
---> outputs:
7
RD
RD
RD
RD
RD
RD
RD

import sys
s = input ( )
s1 = input ( )
c = list ( s )
c1 = list ( s1 )
diff = ord ( c1 [ 0 ] ) - ord ( c [ 0 ] )
dif = ord ( c1 [ 1 ] ) - ord ( c [ 1 ] )
n = abs ( diff )
m = abs ( dif )
ans = ""
while diff != 0 or dif != 0 :
    if diff > 0 :
        ans += "R"
        diff -= 1
    if diff < 0 :
        ans += "L"
        diff += 1
    if dif > 0 :
        ans += "U"
        dif -= 1
    if dif < 0 :
        ans += "D"
        dif += 1
    ans += "\n"
print ( max ( n , m ) )
sys . stdout . write ( ans )


---> console_out:
7
RD
RD
RD
RD
RD
RD
RD
 
MATCHED!! :D
 27%|██▋       | 465/1746 [06:11<02:00, 10.65it/s]Traceback (most recent call last):
  File "./junk/1703784056578_8356/main.py", line 6, in <module>
    x = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 2'
out1,out2  600


-------------------------------------


---> lineNum: 466
---> probID: aizu_p02025_A
---> inputs:
2 2
1 2
4 8
---> outputs:
60

import sys
h , w = map ( int , input ( ) . split ( ) )
total = 0
for i in range ( h ) :
    for j in range ( w ) :
        x = int ( input ( ) )
        total += x * ( i + 1 ) * ( h - i ) * ( j + 1 ) * ( w - j )
print ( total )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 467
---> probID: codeforces_821_A
---> inputs:
3
1 1 2
2 3 1
6 4 1
---> outputs:
Yes

import sys
n = int ( sys . stdin . readline ( ) )
lab = [ [ 0 ] * n for i in range ( n ) ]
for i in range ( n ) :
    line = sys . stdin . readline ( ) . split ( )
    for j in range ( n ) :
        lab [ i ] [ j ] = int ( line [ j ] )
ans = True
for x in range ( n ) :
    for y in range ( n ) :
        if lab [ x ] [ y ] != 1 :
            cur = lab [ x ] [ y ]
            isValid = False
            for i in range ( n ) :
                for j in range ( n ) :
                    if lab [ x ] [ i ] + lab [ j ] [ y ] == cur :
                        isValid = True
                        break
                if isValid :
                    break
            if not isValid :
                ans = False
                break
    if not ans :
        break
print ( "Yes" if ans else "No" )


---> console_out:
Yes
 
MATCHED!! :D
 27%|██▋       | 467/1746 [06:11<01:48, 11.80it/s]

-------------------------------------


---> lineNum: 468
---> probID: aizu_p02424_A
---> inputs:
8 10
---> outputs:
00000000000000000000000000001000
00000000000000000000000000001010
00000000000000000000000000000010

import sys
def main ( ) :
    x , y = map ( int , input ( ) . split ( ) )
    print_bin ( fill_zero ( bin ( x & y ) [ 2 : ] ) )
    print_bin ( fill_zero ( bin ( x | y ) [ 2 : ] ) )
    print_bin ( fill_zero ( bin ( x ^ y ) [ 2 : ] ) )
def print_bin ( str ) :
    for i in range ( len ( str ) - 32 , len ( str ) ) :
        sys . stdout . write ( str [ i ] )
    print ( )
def fill_zero ( str ) :
    zero = ""
    if len ( str ) < 32 :
        for i in range ( 32 - len ( str ) ) :
            zero += "0"
    return zero + str
if __name__ == "__main__" :
    main ( )


---> console_out:
00000000000000000000000000001000
00000000000000000000000000001010
00000000000000000000000000000010
 
MATCHED!! :D


-------------------------------------


---> lineNum: 469
---> probID: aizu_p02423_A
---> inputs:
8
---> outputs:
00000000000000000000000000001000
11111111111111111111111111110111
00000000000000000000000000010000
00000000000000000000000000000100

import sys
def main ( ) :
    x = int ( input ( ) )
    print_bin ( fill_zero ( bin ( x ) [ 2 : ] ) )
    print_bin ( fill_zero ( bin ( ~ x & 0xffffffff ) [ 2 : ] ) )
    print_bin ( fill_zero ( bin ( x << 1 ) [ 2 : ] ) )
    print_bin ( fill_zero ( bin ( x >> 1 ) [ 2 : ] ) )
def print_bin ( str ) :
    for i in range ( len ( str ) - 32 , len ( str ) ) :
        sys . stdout . write ( str [ i ] )
    print ( )
def fill_zero ( str ) :
    zero = ""
    if len ( str ) < 32 :
        for i in range ( 32 - len ( str ) ) :
            zero += "0"
    return zero + str
if __name__ == "__main__" :
    main ( )


---> console_out:
00000000000000000000000000001000
11111111111111111111111111110111
00000000000000000000000000010000
00000000000000000000000000000100
 
MATCHED!! :D
 27%|██▋       | 469/1746 [06:11<01:49, 11.69it/s]Traceback (most recent call last):
  File "./junk/1703784056879_3609/main.py", line 1, in <module>
    import java . util . Scanner
ModuleNotFoundError: No module named 'java'
out1,out2  00


-------------------------------------


---> lineNum: 470
---> probID: atcoder_ABC089_C
---> inputs:
1
AAA
---> outputs:
0

import java . util . Scanner
from java . lang import Integer , Long , Math , System
M = 5
n = int ( input ( ) )
s = None
ma = [ 0 ] * M
for i in range ( n ) :
    s = input ( )
    if s [ 0 ] == 'M' :
        ma [ 0 ] += 1
    elif s [ 0 ] == 'A' :
        ma [ 1 ] += 1
    elif s [ 0 ] == 'R' :
        ma [ 2 ] += 1
    elif s [ 0 ] == 'C' :
        ma [ 3 ] += 1
    elif s [ 0 ] == 'H' :
        ma [ 4 ] += 1
ans = 0
for i in range ( M - 2 ) :
    for j in range ( i + 1 , M - 1 ) :
        for k in range ( j + 1 , M ) :
            ans += ma [ i ] * ma [ j ] * ma [ k ]
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 471
---> probID: codeforces_950_B
---> inputs:
7 6
2 5 3 1 11 4 4
7 8 2 4 1 8
---> outputs:
3

import sys
totalFirstFiles , totalSecondFiles = map ( int , input ( ) . split ( ) )
firstFiles = list ( map ( int , input ( ) . split ( ) ) )
secondFiles = list ( map ( int , input ( ) . split ( ) ) )
def interceptedMessage ( firstFiles , secondFiles ) :
    maxFiles = 0
    firstPointer = 0
    secondPointer = 0
    hasFinished = False
    tempFirstNumber = 0
    tempSecondNumber = 0
    while not hasFinished :
        if firstPointer == 0 and secondPointer == 0 :
            tempFirstNumber += firstFiles [ firstPointer ]
            tempSecondNumber += secondFiles [ secondPointer ]
        if tempFirstNumber == tempSecondNumber :
            maxFiles += 1
            firstPointer += 1
            secondPointer += 1
            if firstPointer > len ( firstFiles ) - 1 and secondPointer > len ( secondFiles ) - 1 :
                break
            tempFirstNumber = firstFiles [ firstPointer ]
            tempSecondNumber = secondFiles [ secondPointer ]
        elif tempFirstNumber < tempSecondNumber :
            firstPointer += 1
            tempFirstNumber += firstFiles [ firstPointer ]
        else :
            secondPointer += 1
            tempSecondNumber += secondFiles [ secondPointer ]
    return maxFiles
print ( interceptedMessage ( firstFiles , secondFiles ) )


---> console_out:
3
 
MATCHED!! :D
 27%|██▋       | 471/1746 [06:11<01:40, 12.64it/s]

-------------------------------------


---> lineNum: 472
---> probID: aizu_p02401_A
---> inputs:
1 + 2
56 - 18
13 * 2
100 / 10
27 + 81
0 ? 0
---> outputs:
3
38
26
10
108

import sys
for line in sys . stdin :
    a , op , b = line . split ( )
    a , b = int ( a ) , int ( b )
    if op == "?" :
        break
    elif op == "+" :
        print ( a + b )
    elif op == "-" :
        print ( a - b )
    elif op == "*" :
        print ( a * b )
    elif op == "/" :
        print ( a // b )


---> console_out:
3
38
26
10
108
 
MATCHED!! :D


-------------------------------------


---> lineNum: 473
---> probID: atcoder_AGC013_A
---> inputs:
6
1 2 3 2 2 1
---> outputs:
2

import sys
N = int ( input ( ) )
A = list ( map ( int , input ( ) . split ( ) ) )
count = 0
i = 0
while i < N :
    if i == N - 1 :
        count += 1
    elif A [ i ] == A [ i + 1 ] :
        pass
    elif A [ i ] < A [ i + 1 ] :
        while A [ i ] <= A [ i + 1 ] :
            i += 1
            if i == N - 1 :
                break
        count += 1
    else :
        while A [ i ] >= A [ i + 1 ] :
            i += 1
            if i == N - 1 :
                break
        count += 1
    i += 1
print ( count )


---> console_out:
2
 
MATCHED!! :D
 27%|██▋       | 473/1746 [06:11<01:34, 13.50it/s]

-------------------------------------


---> lineNum: 474
---> probID: geeksforgeeks_3904_A
---> inputs:

---> outputs:
31


import string
MAX = 256
def countPairs ( s ) :
    cnt = [ 0 ] * MAX
    for i in range ( len ( s ) ) :
        cnt [ ord ( s [ i ] ) ] += 1
    ans = 0
    for i in range ( MAX ) :
        ans += cnt [ i ] * cnt [ i ]
    return ans
s = "geeksforgeeks"
print ( countPairs ( s ) )


---> console_out:
31
 
MATCHED!! :D


-------------------------------------


---> lineNum: 475
---> probID: geeksforgeeks_1637_A
---> inputs:

---> outputs:
1 11 100 2 17 500 

import math
def SieveOfEratosthenes ( n ) :
    prime = [ True ] * ( n + 1 )
    prime [ 1 ] = False
    p = 2
    while ( p * p <= n ) :
        if ( prime [ p ] == True ) :
            for i in range ( p * 2 , n + 1 , p ) :
                prime [ i ] = False
        p += 1
    return prime
def sortedArray ( arr , n ) :
    prime = SieveOfEratosthenes ( 100005 )
    v = [ ]
    for i in range ( n ) :
        if ( prime [ arr [ i ] ] == False ) :
            v . append ( arr [ i ] )
    v . sort ( )
    j = 0
    for i in range ( n ) :
        if ( prime [ arr [ i ] ] == True ) :
            print ( arr [ i ] , end = " " )
        else :
            print ( v [ j ] , end = " " )
            j += 1
n = 6
arr = [ 100 , 11 , 500 , 2 , 17 , 1 ]
sortedArray ( arr , n )


---> console_out:
1 11 100 2 17 500  
MATCHED!! :D
 27%|██▋       | 475/1746 [06:12<01:34, 13.44it/s]  File "./junk/1703784057282_9605/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  30


-------------------------------------


---> lineNum: 476
---> probID: geeksforgeeks_636_A
---> inputs:

---> outputs:
3


import java . util . * ;
public class GFG { static void createHash ( HashSet < Integer > hash , int maxElement ) { int prev = 0 , curr = 1 ; hash . add ( prev ) ; hash . add ( curr ) ; while ( curr <= maxElement ) { int temp = curr + prev ; hash . add ( temp ) ; prev = curr ; curr = temp ; } } static int gcdFibonacciFreq ( int [ ] arr , int n ) { HashSet < Integer > hash = new HashSet < Integer > ( ) ; createHash ( hash , Arrays . stream ( arr ) . max ( ) . getAsInt ( ) ) ; int i ; HashMap < Integer , Integer > m = new HashMap < Integer , Integer > ( ) ; for ( i = 0 ; i < n ; i + + ) { if ( m . containsKey ( arr [ i ] ) ) { m . put ( arr [ i ] , m . get ( arr [ i ] ) + 1 ) ; } else { m . put ( arr [ i ] , 1 ) ; } } int gcd = 0 ; for ( Map . Entry < Integer , Integer > it : m . entrySet ( ) ) { if ( hash . contains ( it . getValue ( ) ) ) { gcd = __gcd ( gcd , it . getKey ( ) ) ; } } return gcd ; } static int __gcd ( int a , int b ) { return b == 0   ? a : __gcd ( b , a % b ) ; } public static void main ( String [ ] args ) { int [ ] arr = { 5 , 3 , 6 , 5 , 6 , 6 , 5 , 5 } ; int n = arr . length ; System . out . print ( gcdFibonacciFreq ( arr , n ) ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 477
---> probID: geeksforgeeks_828_A
---> inputs:

---> outputs:
Area of semicircle = 8.6198


def find_Area ( a ) :
    R = a * ( 2.0 - math . sqrt ( 2 ) )
    area = ( 3.14 * R * R ) / 2.0
    return area
if __name__ == '__main__' :
    import math
    a = 4
    print ( "Area of semicircle = {:.4f}" . format ( find_Area ( a ) ) )


---> console_out:
Area of semicircle = 8.6198
 
MATCHED!! :D
 27%|██▋       | 477/1746 [06:12<01:31, 13.91it/s]

-------------------------------------


---> lineNum: 478
---> probID: geeksforgeeks_3808_A
---> inputs:

---> outputs:
4


def findQuadruples ( a , b , c , d , x , n ) :
    count = 0
    for i in range ( n ) :
        for j in range ( n ) :
            for k in range ( n ) :
                for l in range ( n ) :
                    if ( a [ i ] ^ b [ j ] ^ c [ k ] ^ d [ l ] ) == x :
                        count += 1
    return count
if __name__ == '__main__' :
    x = 3
    a = [ 0 , 1 ]
    b = [ 2 , 0 ]
    c = [ 0 , 1 ]
    d = [ 0 , 1 ]
    n = len ( a )
    print ( findQuadruples ( a , b , c , d , x , n ) )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 479
---> probID: geeksforgeeks_2410_A
---> inputs:

---> outputs:
b
c
e


import string
class Query :
    def __init__ ( self , l , r , n ) :
        self . l = l
        self . r = r
        self . n = n
def printSmallest ( s , q ) :
    N = len ( s )
    H = [ [ 0 ] * 26 for _ in range ( N + 1 ) ]
    for i in range ( 1 , N + 1 ) :
        H [ i ] [ ord ( s [ i - 1 ] ) - ord ( 'a' ) ] += 1
        for j in range ( 26 ) :
            H [ i ] [ j ] += H [ i - 1 ] [ j ]
    m = len ( q )
    for j in range ( m ) :
        l , r , n = q [ j ] . l , q [ j ] . r , q [ j ] . n
        sum = 0
        for i in range ( 26 ) :
            sum += H [ r ] [ i ] - H [ l - 1 ] [ i ]
            if sum >= n :
                print ( chr ( ord ( 'a' ) + i ) )
                break
if __name__ == '__main__' :
    s = "afbccdeb"
    q = [ Query ( 2 , 4 , 1 ) , Query ( 1 , 6 , 4 ) , Query ( 1 , 8 , 7 ) ]
    printSmallest ( s , q )


---> console_out:
b
c
e
 
MATCHED!! :D
 27%|██▋       | 479/1746 [06:12<01:40, 12.56it/s]Traceback (most recent call last):
  File "./junk/1703784057610_4278/main.py", line 4, in <module>
    activating , placing , inputStr = input ( ) . split ( )
ValueError: not enough values to unpack (expected 3, got 2)
out1,out2  2060


-------------------------------------


---> lineNum: 480
---> probID: codeforces_1443_B
---> inputs:
2
1 1
01000010
5 1
01101110
---> outputs:
2
6

import sys
testCases = int ( input ( ) )
for _ in range ( testCases ) :
    activating , placing , inputStr = input ( ) . split ( )
    activating = int ( activating )
    placing = int ( placing )
    res = 0
    if placing >= activating :
        for i in range ( len ( inputStr ) ) :
            if inputStr [ i ] == '0' :
                continue
            else :
                res += activating
                while i < len ( inputStr ) and inputStr [ i ] == '1' :
                    i += 1
        print ( res )
    else :
        diff = activating // placing
        firstOne = - 1
        for i in range ( len ( inputStr ) ) :
            if inputStr [ i ] == '1' :
                firstOne = i
                break
        if firstOne == - 1 :
            print ( 0 )
        else :
            array = [ ]
            lastOne = firstOne
            for i in range ( firstOne + 1 , len ( inputStr ) ) :
                if inputStr [ i ] == '1' :
                    array . append ( i - lastOne - 1 )
                    lastOne = i
            res1 = 0
            for i in range ( len ( array ) ) :
                first = array [ i ]
                if first <= diff :
                    res1 += first * placing
                else :
                    res1 += activating
            res1 += activating
            print ( res1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 481
---> probID: codeforces_1716_A
---> inputs:
4
1
3
4
12
---> outputs:
2
1
2
4

import sys
t = int ( input ( ) )
for j in range ( t ) :
    x = int ( input ( ) )
    if x == 1 :
        print ( "2" )
    elif x == 2 :
        print ( "1" )
    elif x % 3 == 0 :
        print ( x // 3 )
    else :
        print ( x // 3 + 1 )


---> console_out:
2
1
2
4
 
MATCHED!! :D
 28%|██▊       | 481/1746 [06:12<01:34, 13.45it/s]

-------------------------------------


---> lineNum: 482
---> probID: codeforces_999_B
---> inputs:
10
rocesfedoc
---> outputs:
codeforces

import sys
def reverse ( string , last ) :
    arr = list ( string )
    counterUp = 0
    counterDown = last
    for i in range ( last // 2 + 1 ) :
        arr [ counterUp ] , arr [ counterDown ] = arr [ counterDown ] , arr [ counterUp ]
        counterUp += 1
        counterDown -= 1
    return '' . join ( arr )
if __name__ == '__main__' :
    t = int ( input ( ) )
    string = input ( ) . strip ( )
    for i in range ( 1 , t + 1 ) :
        if t % i == 0 :
            string = reverse ( string , i - 1 )
    print ( string )


---> console_out:
codeforces
 
MATCHED!! :D


-------------------------------------


---> lineNum: 483
---> probID: geeksforgeeks_1466_A
---> inputs:

---> outputs:
-1 1 -4 4 -8 8 -9 9 

import math
def printPairs ( arr , n ) :
    v = [ ]
    for i in range ( n ) :
        for j in range ( i + 1 , n ) :
            if abs ( arr [ i ] ) == abs ( arr [ j ] ) :
                v . append ( abs ( arr [ i ] ) )
    if len ( v ) == 0 :
        return
    v . sort ( )
    for i in range ( len ( v ) ) :
        print ( - v [ i ] , v [ i ] , end = " " )
if __name__ == "__main__" :
    arr = [ 4 , 8 , 9 , - 4 , 1 , - 1 , - 8 , - 9 ]
    n = len ( arr )
    printPairs ( arr , n )


---> console_out:
-1 1 -4 4 -8 8 -9 9  
MATCHED!! :D
 28%|██▊       | 483/1746 [06:12<01:32, 13.68it/s]

-------------------------------------


---> lineNum: 484
---> probID: geeksforgeeks_3020_A
---> inputs:

---> outputs:
Double factorial is 15


import math
def doublefactorial ( n ) :
    if n == 0 or n == 1 :
        return 1
    return n * doublefactorial ( n - 2 )
print ( "Double factorial is" , doublefactorial ( 5 ) )


---> console_out:
Double factorial is 15
 
MATCHED!! :D
out1,out2 0000 1020


-------------------------------------


---> lineNum: 485
---> probID: geeksforgeeks_3365_A
---> inputs:

---> outputs:
1
2


import sys
def isPalindrome ( str ) :
    l = 0
    h = len ( str ) - 1
    while h > l :
        if str [ l ] != str [ h ] :
            return False
        l += 1
        h -= 1
    return True
def minRemovals ( str ) :
    if str [ 0 ] == '0' :
        return 0
    if isPalindrome ( str ) :
        return 1
    return 2
if __name__ == '__main__' :
    print ( minRemovals ( "010010" ) )
    print ( minRemovals ( "0100101" ) )


---> console_out:
0
0
 
DIDN'T MATCH!! :(
 28%|██▊       | 485/1746 [06:12<01:30, 13.86it/s]

-------------------------------------


---> lineNum: 486
---> probID: geeksforgeeks_3286_A
---> inputs:

---> outputs:
1670


def sumOfSubstrings ( num ) :
    n = len ( num )
    sumofdigit = [ 0 ] * n
    sumofdigit [ 0 ] = int ( num [ 0 ] )
    res = sumofdigit [ 0 ]
    for i in range ( 1 , n ) :
        numi = int ( num [ i ] )
        sumofdigit [ i ] = ( i + 1 ) * numi + 10 * sumofdigit [ i - 1 ]
        res += sumofdigit [ i ]
    return res
num = "1234"
print ( sumOfSubstrings ( num ) )


---> console_out:
1670
 
MATCHED!! :D
  File "./junk/1703784058076_1072/main.py", line 1
    N / A ( This code cannot be directly translated to Python as it uses Java - specific syntax and libraries . )
                 ^
SyntaxError: invalid syntax
out1,out2  220


-------------------------------------


---> lineNum: 487
---> probID: geeksforgeeks_4209_A
---> inputs:

---> outputs:
22


N / A ( This code cannot be directly translated to Python as it uses Java - specific syntax and libraries . )


---> console_out:
 
DIDN'T MATCH!! :(
 28%|██▊       | 487/1746 [06:12<01:26, 14.53it/s]Traceback (most recent call last):
  File "./junk/1703784058136_4465/main.py", line 1, in <module>
    class p071 :
  File "./junk/1703784058136_4465/main.py", line 15, in p071
    print ( p071 ( ) . run ( ) )
NameError: name 'p071' is not defined
out1,out2  4285700


-------------------------------------


---> lineNum: 488
---> probID: projecteuler_p071_A
---> inputs:

---> outputs:
428570

class p071 :
    LIMIT = 1000000
    def run ( self ) :
        maxN = 0
        maxD = 1
        for d in range ( 1 , self . LIMIT + 1 ) :
            n = d * 3 // 7
            if d % 7 == 0 :
                n -= 1
            if n * maxD > maxN * d :
                maxN = n
                maxD = d
        return str ( maxN )
    if __name__ == '__main__' :
        print ( p071 ( ) . run ( ) )


---> console_out:
 
DIDN'T MATCH!! :(
out1,out2 notprime prime


-------------------------------------


---> lineNum: 489
---> probID: geeksforgeeks_2328_A
---> inputs:

---> outputs:
Prime


c = [ 0 ] * 100
def coef ( n ) :
    c [ 0 ] = 1
    for i in range ( n ) :
        c [ 0 ] = - c [ 0 ]
        c [ 1 + i ] = 1
        for j in range ( i , 0 , - 1 ) :
            c [ j ] = c [ j - 1 ] - c [ j ]
def isPrime ( n ) :
    coef ( n )
    c [ 0 ] += 1
    c [ n ] -= 1
    i = n
    while i > 0 and c [ i ] % n == 0 :
        i -= 1
    return i < 0
n = 37
if isPrime ( n ) :
    print ( "Prime" )
else :
    print ( "Not Prime" )


---> console_out:
Not Prime
 
DIDN'T MATCH!! :(
 28%|██▊       | 489/1746 [06:13<01:27, 14.44it/s]

-------------------------------------


---> lineNum: 490
---> probID: geeksforgeeks_480_A
---> inputs:

---> outputs:
2


def count_greater ( arr , n ) :
    min_val = float ( 'inf' )
    counter = 0
    for i in range ( n - 1 , - 1 , - 1 ) :
        if arr [ i ] > min_val :
            counter += 1
        if arr [ i ] <= min_val :
            min_val = arr [ i ]
    return counter
if __name__ == '__main__' :
    arr = [ 3 , 2 , 1 , 2 , 3 , 4 , 5 ]
    n = len ( arr )
    print ( count_greater ( arr , n ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 491
---> probID: atcoder_AGC027_A
---> inputs:
3 70
20 30 10
---> outputs:
2

import sys
N , x = map ( int , input ( ) . split ( ) )
sweet = list ( map ( int , input ( ) . split ( ) ) )
sweet . sort ( )
num = 0
for i in range ( N ) :
    if x - sweet [ num ] >= 0 :
        x -= sweet [ num ]
        num += 1
    else :
        break
if num == N and x > 0 :
    num -= 1
print ( num )


---> console_out:
2
 
MATCHED!! :D
 28%|██▊       | 491/1746 [06:13<01:23, 14.94it/s]

-------------------------------------


---> lineNum: 492
---> probID: codeforces_900_A
---> inputs:
3
1 1
-1 -1
2 -1
---> outputs:
Yes

import sys
casos = int ( input ( ) )
conta = 0
cont = 0
for i in range ( casos ) :
    x , y = map ( int , input ( ) . split ( ) )
    if x > 0 :
        conta += 1
    else :
        cont += 1
if conta > 1 and cont > 1 :
    print ( "No" )
else :
    print ( "Yes" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 493
---> probID: aizu_p01924_A
---> inputs:
5 2 3
3
5
1
2
3
3 100 100
3
3
4
20 3 8
3
2
6
1
9
1
8
4
2
2
8
1
8
8
2
5
3
4
3
8
7 2 2
0
2
5
2
5
2
1
0 0 0
---> outputs:
3
0
11
5

import sys
while True :
    T , D , L = map ( int , input ( ) . split ( ) )
    if T == 0 and D == 0 and L == 0 :
        break
    ans , time = 0 , 0
    for i in range ( T - 1 ) :
        x = int ( input ( ) )
        if x >= L :
            time = D - 1
            ans += 1
        elif time != 0 :
            time -= 1
            ans += 1
    input ( )
    print ( ans )


---> console_out:
3
0
11
5
 
MATCHED!! :D
 28%|██▊       | 493/1746 [06:13<01:22, 15.27it/s]  File "./junk/1703784058524_5971/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax
out1,out2  30


-------------------------------------


---> lineNum: 494
---> probID: geeksforgeeks_256_A
---> inputs:

---> outputs:
3


import java . io . * ;
import java . util . * ;
class GFG { static int minimumSwaps ( int [ ] arr ) { int count = 0 ; int i = 0 ; while ( i < arr . length ) { if ( arr [ i ] != i + 1 ) { while ( arr [ i ] != i + 1 ) { int temp = 0 ; temp = arr [ arr [ i ] - 1 ] ; arr [ arr [ i ] - 1 ] = arr [ i ] ; arr [ i ] = temp ; count + + ; } } i + + ; } return count ; } public static void main ( String [ ] args ) { int [ ] arr = { 2 , 3 , 4 , 1 , 5 } ; System . out . println ( minimumSwaps ( arr ) ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
 28%|██▊       | 493/1746 [06:30<01:22, 15.27it/s]out1,out2 timeoutencounteredpy 354072810


-------------------------------------


---> lineNum: 495
---> probID: projecteuler_p500_A
---> inputs:

---> outputs:
35407281

import queue
import math
class p500 :
    def __init__ ( self ) :
        self . TARGET = 500500
        self . MODULUS = 500500507
    def run ( self ) :
        queue = [ ]
        nextPrime = 2
        queue . append ( nextPrime )
        product = 1
        for i in range ( self . TARGET ) :
            item = queue . pop ( 0 )
            product *= item % self . MODULUS
            product %= self . MODULUS
            queue . append ( item * item )
            if item == nextPrime :
                nextPrime += 1
                while not self . isPrime ( nextPrime ) :
                    nextPrime += 1
                queue . append ( nextPrime )
        return str ( product )
    def isPrime ( self , n ) :
        if n <= 1 :
            return False
        elif n <= 3 :
            return True
        elif n % 2 == 0 or n % 3 == 0 :
            return False
        i = 5
        while i * i <= n :
            if n % i == 0 or n % ( i + 2 ) == 0 :
                return False
            i += 6
        return True
if __name__ == '__main__' :
    print ( p500 ( ) . run ( ) )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 28%|██▊       | 495/1746 [06:53<2:06:39,  6.07s/it]

-------------------------------------


---> lineNum: 496
---> probID: geeksforgeeks_1410_A
---> inputs:

---> outputs:
The unique pair is (7, 5)


def findUniquePair ( arr , n ) :
    XOR = arr [ 0 ]
    for i in range ( 1 , n ) :
        XOR = XOR ^ arr [ i ]
    set_bit_no = XOR & ~ ( XOR - 1 )
    x , y = 0 , 0
    for i in range ( n ) :
        if ( arr [ i ] & set_bit_no ) > 0 :
            x = x ^ arr [ i ]
        else :
            y = y ^ arr [ i ]
    print ( "The unique pair is (" + str ( x ) + ", " + str ( y ) + ")" )
if __name__ == '__main__' :
    a = [ 6 , 1 , 3 , 5 , 1 , 3 , 7 , 6 ]
    n = len ( a )
    findUniquePair ( a , n )


---> console_out:
The unique pair is (7, 5)
 
MATCHED!! :D


-------------------------------------


---> lineNum: 497
---> probID: codeforces_404_A
---> inputs:
5
xooox
oxoxo
soxoo
oxoxo
xooox
---> outputs:
NO

import sys
class CustomScanner :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = [ ]
    def next ( self ) :
        while not self . st :
            self . st = self . br ( ) . split ( )
        return self . st . pop ( 0 )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def readArray ( self , n ) :
        a = [ ]
        for i in range ( n ) :
            a . append ( self . nextInt ( ) )
        return a
def main ( ) :
    cs = CustomScanner ( )
    n = cs . nextInt ( )
    xch , nxch = None , None
    for i in range ( n ) :
        line = cs . next ( )
        if i == 0 :
            xch = line [ 0 ]
            nxch = line [ 1 ]
        if xch == nxch :
            print ( "NO" )
            return
        for j in range ( n ) :
            if j == i or j == n - i - 1 :
                if line [ j ] != xch :
                    print ( "NO" )
                    return
            else :
                if line [ j ] != nxch :
                    print ( "NO" )
                    return
    print ( "YES" )
if __name__ == "__main__" :
    main ( )


---> console_out:
NO
 
MATCHED!! :D
 28%|██▊       | 497/1746 [06:53<1:28:55,  4.27s/it]

-------------------------------------


---> lineNum: 498
---> probID: aizu_p00077_A
---> inputs:
ab@5C1@8050
@99+1=1@90
---> outputs:
abCCCCC10000000050
999999999+1=1000000000

import sys
class Main :
    def doIt ( self ) :
        for line in sys . stdin :
            line = line . strip ( )
            length = len ( line )
            i = 0
            while i < length :
                now = line [ i ]
                if now != '@' :
                    sys . stdout . write ( now )
                else :
                    i += 1
                    num = int ( line [ i ] )
                    i += 1
                    if 0 <= num <= 9 :
                        now = line [ i ]
                        for j in range ( num ) :
                            sys . stdout . write ( now )
                i += 1
            sys . stdout . write ( '\n' )
obj = Main ( )
obj . doIt ( )


---> console_out:
abCCCCC10000000050
999999999+1=1000000000
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784098910_2053/main.py", line 1, in <module>
    import java . util . HashMap
ModuleNotFoundError: No module named 'java'
out1,out2  yes


-------------------------------------


---> lineNum: 499
---> probID: geeksforgeeks_5181_A
---> inputs:

---> outputs:
Yes


import java . util . HashMap
class GFG :
    @ staticmethod
    def isMajority ( a , n ) :
        mp = { }
        for i in range ( n ) :
            if a [ i ] in mp :
                mp [ a [ i ] ] += 1
            else :
                mp [ a [ i ] ] = 1
        for x in mp . items ( ) :
            if x [ 1 ] >= n / 2 :
                return True
        return False
    @ staticmethod
    def main ( args ) :
        a = [ 2 , 3 , 9 , 2 , 2 ]
        n = len ( a )
        if GFG . isMajority ( a , n ) :
            print ( "Yes" )
        else :
            print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(
 29%|██▊       | 499/1746 [06:53<1:02:32,  3.01s/it]out1,out2 160 210


-------------------------------------


---> lineNum: 500
---> probID: aizu_p02316_A
---> inputs:
4 8
4 2
5 2
2 1
8 3
---> outputs:
21

import sys
class Knap :
    def __init__ ( self , value , weight ) :
        self . value = value
        self . weight = weight
    def __lt__ ( self , other ) :
        return self . value * other . weight > other . value * self . weight
def dfw ( idx , weight ) :
    if weight < 0 :
        return - sys . maxsize
    if idx < 0 :
        return 0
    if dp [ idx ] [ weight ] != 0 :
        return dp [ idx ] [ weight ]
    if weight % knaps [ idx ] . weight == 0 :
        dp [ idx ] [ weight ] = weight // knaps [ idx ] . weight * knaps [ idx ] . value
        return dp [ idx ] [ weight ]
    max_val = 0
    for i in range ( weight // knaps [ idx ] . weight + 1 ) :
        max_val = max ( max_val , dfw ( idx - 1 , weight - knaps [ idx ] . weight * i ) + knaps [ idx ] . value * i )
    dp [ idx ] [ weight ] = max_val
    return max_val
n , w = map ( int , input ( ) . split ( ) )
knaps = [ ]
for i in range ( n ) :
    value , weight = map ( int , input ( ) . split ( ) )
    knaps . append ( Knap ( value , weight ) )
knaps . sort ( )
dp = [ [ 0 ] * ( w + 1 ) for _ in range ( n ) ]
print ( dfw ( n - 1 , w ) )


---> console_out:
16
 
DIDN'T MATCH!! :(
out1,out2 03172308 03172308


-------------------------------------


---> lineNum: 501
---> probID: aizu_p00076_A
---> inputs:
3
6
-1
---> outputs:
0.29 
1.71
-2.31 
0.80

import math
def doIt ( ) :
    n = int ( input ( ) )
    while n != - 1 :
        rad = 0
        hyp = 1
        for i in range ( 1 , n ) :
            rad += math . atan ( 1 / hyp )
            hyp = math . sqrt ( hyp * hyp + 1 )
        print ( hyp * math . cos ( rad ) )
        print ( hyp * math . sin ( rad ) )
        n = int ( input ( ) )
doIt ( )


---> console_out:
0.2928932188134525
1.7071067811865477
-2.3149821631755447
0.8005358106787456
 
MATCHED!! :D
 29%|██▊       | 501/1746 [06:53<44:05,  2.13s/it]  

-------------------------------------


---> lineNum: 502
---> probID: geeksforgeeks_4813_A
---> inputs:

---> outputs:
1 5 6 

import numpy as np
def printKMissing ( arr , n , k ) :
    arr = np . sort ( arr )
    i = 0
    while i < n and arr [ i ] <= 0 :
        i += 1
    count = 0
    curr = 1
    while count < k and i < n :
        if arr [ i ] != curr :
            print ( curr , end = " " )
            count += 1
        else :
            i += 1
        curr += 1
    while count < k :
        print ( curr , end = " " )
        curr += 1
        count += 1
arr = np . array ( [ 2 , 3 , 4 ] )
n = len ( arr )
k = 3
printKMissing ( arr , n , k )


---> console_out:
1 5 6  
MATCHED!! :D
out1,out2 20304050 20304050


-------------------------------------


---> lineNum: 503
---> probID: geeksforgeeks_615_A
---> inputs:

---> outputs:
2 3 4 5 

import math
def printNumbers ( a , n ) :
    mpp = { }
    for i in range ( n ) :
        num = a [ i ]
        for j in range ( 1 , int ( math . sqrt ( num ) ) + 1 ) :
            if num % j == 0 :
                if j != 1 :
                    if j in mpp :
                        mpp [ j ] += 1
                    else :
                        mpp [ j ] = 1
                if ( num / j ) != j :
                    if ( num / j ) in mpp :
                        mpp [ num / j ] += 1
                    else :
                        mpp [ num / j ] = 1
    maxi = 0
    for key , value in mpp . items ( ) :
        maxi = max ( value , maxi )
    for key , value in mpp . items ( ) :
        if value == maxi :
            print ( key , end = " " )
a = [ 12 , 15 , 27 , 20 , 40 ]
n = len ( a )
printNumbers ( a , n )


---> console_out:
2 3 4.0 5.0  
MATCHED!! :D
 29%|██▉       | 503/1746 [06:54<31:59,  1.54s/it]

-------------------------------------


---> lineNum: 504
---> probID: codeforces_1146_B
---> inputs:
aaaaa
---> outputs:
aaaaa

import sys
str = input ( )
index = str . find ( "a" )
aCnt = 0
while index != - 1 :
    aCnt += 1
    index = str . find ( "a" , index + 1 )
sLength = ( len ( str ) - aCnt ) // 2
s = str [ : len ( str ) - sLength ]
s2 = s
r = str [ len ( str ) - sLength : ]
s = s . replace ( "a" , "" )
if s == r :
    print ( s2 )
else :
    print ( ":(" )


---> console_out:
aaaaa
 
MATCHED!! :D


-------------------------------------


---> lineNum: 505
---> probID: codeforces_637_A
---> inputs:
5
1 3 2 2 1
---> outputs:
2

import sys
class FScanner :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . sb = ""
    def next ( self ) :
        while not self . sb :
            self . sb = self . br ( ) . split ( )
        res = self . sb [ 0 ]
        self . sb = self . sb [ 1 : ]
        return res
    def nextInt ( self ) :
        return int ( self . next ( ) )
class voting :
    def main ( args ) :
        in_ = FScanner ( )
        out = sys . stdout
        n = in_ . nextInt ( )
        ans = 0
        max_ = 0
        a = [ 0 ] * 1000001
        for i in range ( n ) :
            b = in_ . nextInt ( )
            a [ b ] += 1
            if a [ b ] > max_ :
                max_ = a [ b ]
                ans = b
        out . write ( str ( ans ) )
        out . close ( )
if __name__ == "__main__" :
    voting . main ( None )


---> console_out:
2 
MATCHED!! :D
 29%|██▉       | 505/1746 [06:54<23:49,  1.15s/it]

-------------------------------------


---> lineNum: 506
---> probID: geeksforgeeks_1181_A
---> inputs:

---> outputs:
Accepted
Not Accepted


def checkIfStartsWithCapital ( str ) :
    if str [ 0 ] . isupper ( ) :
        return 1
    else :
        return 0
def check ( str ) :
    if checkIfStartsWithCapital ( str ) == 1 :
        print ( "Accepted" )
    else :
        print ( "Not Accepted" )
if __name__ == '__main__' :
    str = "GeeksforGeeks"
    check ( str )
    str = "geeksforgeeks"
    check ( str )


---> console_out:
Accepted
Not Accepted
 
MATCHED!! :D


-------------------------------------


---> lineNum: 507
---> probID: geeksforgeeks_1752_A
---> inputs:

---> outputs:
Average of 1 numbers is 10.0
Average of 2 numbers is 15.0
Average of 3 numbers is 20.0
Average of 4 numbers is 25.0
Average of 5 numbers is 30.0
Average of 6 numbers is 35.0


def getAvg ( prev_avg , x , n ) :
    return ( prev_avg * n + x ) / ( n + 1 )
def streamAvg ( arr , n ) :
    avg = 0
    for i in range ( n ) :
        avg = getAvg ( avg , arr [ i ] , i )
        print ( "Average of {} numbers is {:.1f}" . format ( i + 1 , avg ) )
arr = [ 10 , 20 , 30 , 40 , 50 , 60 ]
n = len ( arr )
streamAvg ( arr , n )


---> console_out:
Average of 1 numbers is 10.0
Average of 2 numbers is 15.0
Average of 3 numbers is 20.0
Average of 4 numbers is 25.0
Average of 5 numbers is 30.0
Average of 6 numbers is 35.0
 
MATCHED!! :D
 29%|██▉       | 507/1746 [06:54<17:01,  1.21it/s]Traceback (most recent call last):
  File "./junk/1703784100068_1155/main.py", line 1, in <module>
    class p050 :
  File "./junk/1703784100068_1155/main.py", line 2, in p050
    LIMIT = Library . pow ( 10 , 6 )
NameError: name 'Library' is not defined
out1,out2  9976510


-------------------------------------


---> lineNum: 508
---> probID: projecteuler_p050_A
---> inputs:

---> outputs:
997651

class p050 :
    LIMIT = Library . pow ( 10 , 6 )
    def main ( self ) :
        print ( p050 ( ) . run ( ) )
    def run ( self ) :
        isPrime = Library . listPrimality ( p050 . LIMIT )
        primes = Library . listPrimes ( p050 . LIMIT )
        maxSum = 0
        maxRun = - 1
        for i in range ( len ( primes ) ) :
            sum = 0
            for j in range ( i , len ( primes ) ) :
                sum += primes [ j ]
                if sum > p050 . LIMIT :
                    break
                elif j - i > maxRun and sum > maxSum and isPrime [ sum ] :
                    maxSum = sum
                    maxRun = j - i
        return str ( maxSum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 509
---> probID: geeksforgeeks_5228_A
---> inputs:

---> outputs:
Length of lst is 5


import numpy as np
def lis ( arr , n ) :
    max = 0
    lst = np . ones ( n , dtype = int )
    for i in range ( 1 , n ) :
        for j in range ( i ) :
            if arr [ i ] > arr [ j ] and lst [ i ] < lst [ j ] + 1 :
                lst [ i ] = lst [ j ] + 1
    for i in range ( n ) :
        if max < lst [ i ] :
            max = lst [ i ]
    return max
arr = [ 10 , 22 , 9 , 33 , 21 , 50 , 41 , 60 ]
n = len ( arr )
print ( "Length of lst is" , lis ( arr , n ) )


---> console_out:
Length of lst is 5
 
MATCHED!! :D
 29%|██▉       | 509/1746 [06:55<12:54,  1.60it/s]

-------------------------------------


---> lineNum: 510
---> probID: atcoder_ABC086_B
---> inputs:
1 21
---> outputs:
Yes

import math
a , b = map ( int , input ( ) . split ( ) )
k = int ( math . log10 ( b ) ) + 1
a = int ( a * math . pow ( 10 , k ) + b )
yono = math . sqrt ( a )
if yono - math . ceil ( yono ) == 0 :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
  File "./junk/1703784100458_9716/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  10102030401060101090


-------------------------------------


---> lineNum: 511
---> probID: geeksforgeeks_4236_A
---> inputs:

---> outputs:
[-1, 1, 2, 3, 4, -1, 6, -1, -1, 9]


import java . util . * ;
public class GFG { public static int [ ] fix ( int [ ] A ) { Set < Integer > s = new HashSet < Integer > ( ) ; for ( int i = 0 ; i < A . length ; i + + ) { s . add ( A [ i ] ) ; } for ( int i = 0 ; i < A . length ; i + + ) { if ( s . contains ( i ) ) { A [ i ] = i ; } else { A [ i ] = - 1 ; } } return A ; } public static void main ( String [ ] args ) { int [ ] A = { - 1 , - 1 , 6 , 1 , 9 , 3 , 2 , - 1 , 4 , - 1 } ; System . out . println ( Arrays . toString ( fix ( A ) ) ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
 29%|██▉       | 511/1746 [06:55<09:24,  2.19it/s]

-------------------------------------


---> lineNum: 512
---> probID: aizu_p02212_A
---> inputs:
2 1 3 4
---> outputs:
0

import sys
class Main :
    def __init__ ( self ) :
        self . log = None
        self . result = sys . stdout
        self . systemin = sys . stdin
    def main ( self ) :
        sc = input ( ) . split ( )
        a = int ( sc [ 0 ] )
        b = int ( sc [ 1 ] )
        c = int ( sc [ 2 ] )
        d = int ( sc [ 3 ] )
        sum = a + b + c + d
        s1 = abs ( sum - ( a + b ) * 2 )
        s2 = abs ( sum - ( a + c ) * 2 )
        s3 = abs ( sum - ( a + d ) * 2 )
        min_val = min ( s1 , min ( s2 , s3 ) )
        print ( min_val )
if __name__ == '__main__' :
    instance = Main ( )
    instance . main ( )


---> console_out:
0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 513
---> probID: geeksforgeeks_4846_A
---> inputs:

---> outputs:
Original List: 6 9 8 7 4 
New odd List: 3 9 5 7 23 

class GFG :
    class Node :
        def __init__ ( self ) :
            self . data = None
            self . prev = None
            self . next = None
    @ staticmethod
    def push ( head_ref , new_data ) :
        new_node = GFG . Node ( )
        new_node . data = new_data
        new_node . prev = None
        new_node . next = head_ref
        if head_ref != None :
            head_ref . prev = new_node
        head_ref = new_node
        return head_ref
    @ staticmethod
    def makeOddNode ( head_ref , A , n ) :
        ptr = head_ref
        i = 0
        while ptr != None :
            next = ptr . next
            if ptr . data % 2 == 0 :
                ptr . data = A [ i ]
                i += 1
            ptr = next
        return head_ref
    @ staticmethod
    def printList ( head ) :
        while head != None :
            print ( head . data , end = " " )
            head = head . next
    @ staticmethod
    def main ( args ) :
        head = None
        Arr = [ 3 , 5 , 23 , 17 , 1 ]
        head = GFG . push ( head , 4 )
        head = GFG . push ( head , 7 )
        head = GFG . push ( head , 8 )
        head = GFG . push ( head , 9 )
        head = GFG . push ( head , 6 )
        n = len ( Arr )
        print ( "Original List: " , end = "" )
        GFG . printList ( head )
        print ( )
        head = GFG . makeOddNode ( head , Arr , n )
        print ( "New odd List: " , end = "" )
        GFG . printList ( head )
GFG . main ( None )


---> console_out:
Original List: 6 9 8 7 4 
New odd List: 3 9 5 7 23  
MATCHED!! :D
 29%|██▉       | 513/1746 [06:55<06:57,  2.95it/s]

-------------------------------------


---> lineNum: 514
---> probID: aizu_p00070_A
---> inputs:
3 10
3 1
---> outputs:
8
0

import sys
def dfs ( depth , sum , dp , use ) :
    dp [ depth - 1 ] [ sum ] += 1
    for i in range ( 10 ) :
        if not use [ i ] :
            use [ i ] = True
            dfs ( depth + 1 , sum + depth * i , dp , use )
            use [ i ] = False
dp = [ [ 0 ] * 331 for _ in range ( 11 ) ]
use = [ False ] * 10
dfs ( 1 , 0 , dp , use )
for line in sys . stdin :
    values = line . split ( )
    n = int ( values [ 0 ] )
    s = int ( values [ 1 ] )
    if n > 10 or s > 330 :
        print ( "0" )
        continue
    print ( dp [ n ] [ s ] )


---> console_out:
8
0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 515
---> probID: geeksforgeeks_335_A
---> inputs:

---> outputs:
5


import math
mod = 1000000007
def fact ( n ) :
    res = 1
    for i in range ( 2 , n + 1 ) :
        res *= i
    return res
def nCr ( n , r ) :
    return fact ( n ) // ( fact ( r ) * fact ( n - r ) )
def powmod ( a , n ) :
    if n == 0 :
        return 1
    pt = powmod ( a , n // 2 )
    pt = ( pt * pt ) % mod
    if n % 2 == 1 :
        return ( pt * a ) % mod
    else :
        return pt
def CountSubset ( arr , n ) :
    ans = powmod ( 2 , n - 1 )
    arr . sort ( )
    i = 0
    while i < n :
        j = i + 1
        while j < n and arr [ j ] == arr [ i ] :
            r = n - 1 - j
            l = i
            ans = ( ans + nCr ( l + r , l ) ) % mod
            j += 1
        i = j
    return ans
arr = [ 2 , 3 , 2 ]
n = len ( arr )
print ( CountSubset ( arr , n ) )


---> console_out:
5
 
MATCHED!! :D
 29%|██▉       | 515/1746 [07:09<47:28,  2.31s/it]

-------------------------------------


---> lineNum: 516
---> probID: geeksforgeeks_1206_A
---> inputs:

---> outputs:
5


MAX = 1000001
primeUpto = [ 0 ] * MAX
def SieveOfEratosthenes ( ) :
    isPrime = [ 1 ] * MAX
    isPrime [ 0 ] = isPrime [ 1 ] = 0
    for i in range ( 2 , int ( MAX ** 0.5 ) + 1 ) :
        if isPrime [ i ] == 1 :
            for j in range ( i * 2 , MAX , i ) :
                isPrime [ j ] = 0
    for i in range ( 1 , MAX ) :
        primeUpto [ i ] = primeUpto [ i - 1 ]
        if isPrime [ i ] == 1 :
            primeUpto [ i ] += 1
def countOfNumbers ( N , K ) :
    SieveOfEratosthenes ( )
    low , high , ans = 1 , N , 0
    while low <= high :
        mid = ( low + high ) // 2
        if mid - primeUpto [ mid ] >= K :
            ans = mid
            high = mid - 1
        else :
            low = mid + 1
    ans = N - ans + 1 if ans != 0 else 0
    return ans
if __name__ == '__main__' :
    N , K = 10 , 3
    print ( countOfNumbers ( N , K ) )


---> console_out:
5
 
MATCHED!! :D
 30%|██▉       | 516/1746 [07:09<40:56,  2.00s/it]

-------------------------------------


---> lineNum: 517
---> probID: geeksforgeeks_3222_A
---> inputs:

---> outputs:
1


def countOperations ( n ) :
    i = 2
    while ( i * i ) < n and ( n % i ) > 0 :
        i += 1
    if ( i * i ) > n :
        i = n
    return ( 1 + ( n - i ) // 2 )
if __name__ == '__main__' :
    n = 5
    print ( countOperations ( n ) )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 518
---> probID: atcoder_ABC122_C
---> inputs:
8 3
ACACTACG
3 7
2 3
1 8
---> outputs:
2
0
3

import sys
def exec_func ( inpt , out ) :
    inpt = inpt . split ( )
    n = int ( inpt [ 0 ] )
    q = int ( inpt [ 1 ] )
    s = inpt [ 2 ]
    t = [ 0 ] * len ( s )
    for i in range ( len ( s ) - 1 ) :
        if s [ i ] == 'A' and s [ i + 1 ] == 'C' :
            t [ i + 1 ] = t [ i ] + 1
        else :
            t [ i + 1 ] = t [ i ]
    for i in range ( q ) :
        l = int ( inpt [ 3 + i * 2 ] )
        r = int ( inpt [ 4 + i * 2 ] )
        out . write ( str ( t [ r - 1 ] - t [ l - 1 ] ) + '\n' )
def main ( ) :
    exec_func ( sys . stdin . read ( ) . strip ( ) , sys . stdout )
if __name__ == '__main__' :
    main ( )


---> console_out:
2
0
3
 
MATCHED!! :D
 30%|██▉       | 518/1746 [07:09<27:35,  1.35s/it]out1,out2 102030601020 1070309050100


-------------------------------------


---> lineNum: 519
---> probID: codeforces_1096_A
---> inputs:
3
1 10
3 14
1 10
---> outputs:
['1 7\n3 9\n5 10', '1 2\n3 6\n1 2\n']

import sys
t = int ( input ( ) )
for i in range ( t ) :
    try :
        l , r = input ( ) . split ( )
        print ( l , int ( l ) * 2 )
    except :
        sys . exit ( 0 )


---> console_out:
1 2
3 6
1 2
 
MATCHED!! :D
out1,out2  92752625642504180


-------------------------------------


---> lineNum: 520
---> probID: projecteuler_p249_A
---> inputs:

---> outputs:
9275262564250418

class p249 :
    LIMIT = 5000
    MODULUS = 10000000000000000
    def main ( self ) :
        print ( self . run ( ) )
    def run ( self ) :
        isPrime = Library . listPrimality ( self . LIMIT * self . LIMIT // 2 )
        numSubsets = [ 0 ] * ( self . LIMIT * self . LIMIT // 2 )
        numSubsets [ 0 ] = 1
        maxSum = 0
        for i in range ( self . LIMIT ) :
            if not isPrime [ i ] :
                continue
            maxSum += i
            for j in range ( maxSum , i - 1 , - 1 ) :
                temp = numSubsets [ j ] + numSubsets [ j - i ]
                if temp < self . MODULUS :
                    numSubsets [ j ] = temp
                else :
                    numSubsets [ j ] = temp - self . MODULUS
        sum = 0
        for i in range ( len ( numSubsets ) ) :
            if isPrime [ i ] :
                sum = ( sum + numSubsets [ i ] ) % self . MODULUS
        return str ( sum )


---> console_out:
 
DIDN'T MATCH!! :(
 30%|██▉       | 520/1746 [07:10<19:02,  1.07it/s]

-------------------------------------


---> lineNum: 521
---> probID: geeksforgeeks_2286_A
---> inputs:

---> outputs:
1 2 2 4 2 4 4 8 2 4 4 8 4 8 8 16 

def countOddNumber ( row_num ) :
    count = 0
    while row_num > 0 :
        count += row_num & 1
        row_num >>= 1
    return ( 1 << count )
def gouldSequence ( n ) :
    for row_num in range ( n ) :
        print ( countOddNumber ( row_num ) , end = " " )
if __name__ == "__main__" :
    n = 16
    gouldSequence ( n )


---> console_out:
1 2 2 4 2 4 4 8 2 4 4 8 4 8 8 16  
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784115340_4428/main.py", line 14, in <module>
    findMin ( n )
  File "./junk/1703784115340_4428/main.py", line 7, in findMin
    while V >= deno [ i ] :
IndexError: index 92 is out of bounds for axis 0 with size 9
out1,out2 followingisminimalnumberofchangefor930 followingisminimalnumberofchangefor9305002002002010


-------------------------------------


---> lineNum: 522
---> probID: geeksforgeeks_3425_A
---> inputs:

---> outputs:
Following is minimal number of change for 93 : 50 20 20 2 1 

import numpy as np
deno = np . array ( [ 1 , 2 , 5 , 10 , 20 , 50 , 100 , 500 , 1000 ] )
n = len ( deno )
def findMin ( V ) :
    ans = [ ]
    for i in range ( n - 1 , - 1 , - 1 ) :
        while V >= deno [ i ] :
            V -= deno [ i ]
            ans . append ( deno [ i ] )
    for i in range ( len ( ans ) ) :
        print ( ans [ i ] , end = " " )
n = 93
print ( "Following is minimal number of change for" , n , ": " , end = "" )
findMin ( n )


---> console_out:
Following is minimal number of change for 93 :  
DIDN'T MATCH!! :(
 30%|██▉       | 522/1746 [07:10<14:07,  1.44it/s]Traceback (most recent call last):
  File "./junk/1703784115609_1107/main.py", line 1, in <module>
    import java . util . Arrays
ModuleNotFoundError: No module named 'java'
out1,out2  1428570


-------------------------------------


---> lineNum: 523
---> probID: projecteuler_p052_A
---> inputs:

---> outputs:
142857

import java . util . Arrays
class p052 :
    def main ( self ) :
        print ( self . run ( ) )
    def run ( self ) :
        i = 1
        while True :
            if i > ( 2147483647 // 6 ) :
                raise ArithmeticError ( "Overflow" )
            if self . multiplesHaveSameDigits ( i ) :
                return str ( i )
            i += 1
    @ staticmethod
    def multiplesHaveSameDigits ( x ) :
        for i in range ( 2 , 7 ) :
            if toSortedDigits ( x ) != toSortedDigits ( i * x ) :
                return False
        return True
    @ staticmethod
    def toSortedDigits ( x ) :
        result = list ( str ( x ) )
        result . sort ( )
        return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 524
---> probID: geeksforgeeks_3822_A
---> inputs:

---> outputs:
15


import math
def count ( arr , n , x ) :
    if x == 1 :
        ans = int ( math . pow ( 2 , n ) ) - 1
        return ans
    count = 0
    for i in range ( n ) :
        if arr [ i ] % x == 0 :
            count += 1
    ans = int ( math . pow ( 2 , count ) ) - 1
    return ans
arr = [ 2 , 4 , 3 , 5 ]
n = len ( arr )
x = 1
print ( count ( arr , n , x ) )


---> console_out:
15
 
MATCHED!! :D
 30%|███       | 524/1746 [07:10<10:06,  2.01it/s]

-------------------------------------


---> lineNum: 525
---> probID: geeksforgeeks_676_A
---> inputs:

---> outputs:
6


import numpy as np
def findEle ( arr , n ) :
    sum = np . sum ( arr )
    for i in range ( n ) :
        if arr [ i ] == sum - arr [ i ] :
            return arr [ i ]
    return - 1
arr = np . array ( [ 1 , 2 , 3 , 6 ] )
n = len ( arr )
print ( findEle ( arr , n ) )


---> console_out:
6
 
MATCHED!! :D


-------------------------------------


---> lineNum: 526
---> probID: geeksforgeeks_2689_A
---> inputs:

---> outputs:
d


def findExtraCharcter ( strA , strB ) :
    m1 = [ 0 ] * 256
    for i in range ( len ( strB ) ) :
        m1 [ ord ( strB [ i ] ) ] += 1
    for i in range ( len ( strA ) ) :
        m1 [ ord ( strA [ i ] ) ] -= 1
    for i in range ( len ( m1 ) ) :
        if m1 [ i ] == 1 :
            return chr ( i )
    return None
strA = "abcd"
strB = "cbdad"
print ( findExtraCharcter ( strA , strB ) )


---> console_out:
d
 
MATCHED!! :D
 30%|███       | 526/1746 [07:10<08:00,  2.54it/s]Traceback (most recent call last):
  File "./junk/1703784116063_6657/main.py", line 35, in <module>
    Main ( ) . main ( [ ] )
  File "./junk/1703784116063_6657/main.py", line 13, in main
    aoj1216 ( ) . doIt ( )
  File "./junk/1703784116063_6657/main.py", line 20, in doIt
    n = self . sc . nextInt ( )
AttributeError: 'aoj1216' object has no attribute 'sc'
out1,out2  9906404702001512000


-------------------------------------


---> lineNum: 527
---> probID: aizu_p00803_A
---> inputs:
100
64
50
20
151200
0
---> outputs:
99
64
47
20
151200

from typing import List
import math
class Line2D :
    pass
class Point2D :
    pass
class Double ( Point2D ) :
    pass
class Main :
    def __init__ ( self ) :
        self . sc = Scanner ( )
    def main ( self , args : List [ str ] ) :
        aoj1216 ( ) . doIt ( )
class aoj1216 :
    def __init__ ( self ) :
        self . a = [ i * i * i for i in range ( 101 ) ]
        self . b = [ i * ( i + 1 ) * ( i + 2 ) // 6 for i in range ( 101 ) ]
    def doIt ( self ) :
        while True :
            n = self . sc . nextInt ( )
            if n == 0 :
                break
            num = 0
            for i in range ( 101 ) :
                for j in range ( 101 ) :
                    if self . a [ i ] + self . b [ j ] <= n :
                        num = max ( num , self . a [ i ] + self . b [ j ] )
            print ( num )
class Scanner :
    def __init__ ( self ) :
        pass
    def nextInt ( self ) :
        return int ( input ( ) )
if __name__ == '__main__' :
    Main ( ) . main ( [ ] )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784116136_8742/main.py", line 11, in <module>
    deque = deque ( )
TypeError: 'collections.deque' object is not callable
out1,out2 30 30107040


-------------------------------------


---> lineNum: 528
---> probID: aizu_p00875_A
---> inputs:
2
a bb
b aa
a
bbbbbbbb
1
a aa
a
aaaaa
3
ab aab
abc aadc
ad dee
abc
deeeeeeeec
10
a abc
b bai
c acf
d bed
e abh
f fag
g abe
h bag
i aaj
j bbb
a
abacfaabe
0
---> outputs:
3
-1
7
4

from collections import deque
while True :
    n = int ( input ( ) )
    if n == 0 :
        break
    conv = [ ]
    for i in range ( n ) :
        conv . append ( input ( ) . split ( ) )
    before = input ( )
    after = input ( )
    deque = deque ( )
    deque . append ( before )
    depth = 0
    convertable = False
    while deque :
        depth += 1
        size = len ( deque )
        for q in range ( size ) :
            poll = deque . popleft ( )
            for i in range ( n ) :
                test = poll . replace ( conv [ i ] [ 0 ] , conv [ i ] [ 1 ] )
                if test == poll :
                    continue
                elif test == after :
                    convertable = True
                    break
                elif len ( test ) <= len ( after ) :
                    deque . append ( test )
            if convertable :
                break
        if convertable :
            break
    if convertable :
        print ( depth )
    else :
        print ( - 1 )


---> console_out:
3
 
DIDN'T MATCH!! :(
 30%|███       | 528/1746 [07:11<06:03,  3.35it/s]

-------------------------------------


---> lineNum: 529
---> probID: codeforces_296_A
---> inputs:
1
1
---> outputs:
YES

import math
n = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
freq = [ 0 ] * 1010
can = ( n + 1 )
for i in a :
    freq [ i ] += 1
    if freq [ i ] > can / 2 :
        print ( "NO" )
        break
else :
    print ( "YES" )


---> console_out:
YES
 
MATCHED!! :D
out1,out2  170


-------------------------------------


---> lineNum: 530
---> probID: geeksforgeeks_5084_A
---> inputs:

---> outputs:
17


class AAB :
    @ staticmethod
    def maxSumPair ( arr1 , n1 , arr2 , n2 ) :
        max1 = float ( '-inf' )
        max2 = float ( '-inf' )
        for i in range ( n1 ) :
            if arr1 [ i ] > max1 :
                max1 = arr1 [ i ]
        for i in range ( n2 ) :
            if arr2 [ i ] > max2 :
                max2 = arr2 [ i ]
        return max1 + max2
    @ staticmethod
    def main ( args ) :
        arr1 = [ 10 , 2 , 3 ]
        arr2 = [ 3 , 4 , 7 ]
        n1 = len ( arr1 )
        n2 = len ( arr2 )
        print ( AAB . maxSumPair ( arr1 , n1 , arr2 , n2 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 30%|███       | 530/1746 [07:11<04:37,  4.39it/s]

-------------------------------------


---> lineNum: 531
---> probID: geeksforgeeks_3166_A
---> inputs:

---> outputs:
71391


def operations ( op , n , k ) :
    count = 0
    nVal = 0
    min_val = float ( 'inf' )
    for i in range ( n ) :
        nVal += op [ i ]
        min_val = min ( min_val , nVal )
        if ( k + nVal ) <= 0 :
            return i + 1
    if nVal >= 0 :
        return - 1
    times = ( k - abs ( min_val ) ) // abs ( nVal )
    k = k - ( times * abs ( nVal ) )
    count = times * n
    while k > 0 :
        for i in range ( n ) :
            k = k + op [ i ]
            count += 1
            if k <= 0 :
                break
    return count
op = [ - 60 , 65 , - 1 , 14 , - 25 ]
n = len ( op )
k = 100000
print ( operations ( op , n , k ) )


---> console_out:
71391
 
MATCHED!! :D


-------------------------------------


---> lineNum: 532
---> probID: geeksforgeeks_4717_A
---> inputs:

---> outputs:
9 100 8 35 

import math
pref = [ 0 ] * 100010
def isPerfectCube ( x ) :
    cr = round ( math . pow ( x , 1 / 3 ) )
    if cr * cr * cr == x :
        return x
    return 0
def compute ( ) :
    for i in range ( 1 , 100001 ) :
        pref [ i ] = pref [ i - 1 ] + isPerfectCube ( i )
def printSum ( L , R ) :
    sum = pref [ R ] - pref [ L - 1 ]
    print ( sum , end = " " )
def main ( ) :
    compute ( )
    Q = 4
    arr = [ [ 1 , 10 ] , [ 1 , 100 ] , [ 2 , 25 ] , [ 4 , 50 ] ]
    for i in range ( Q ) :
        printSum ( arr [ i ] [ 0 ] , arr [ i ] [ 1 ] )
if __name__ == "__main__" :
    main ( )


---> console_out:
9 100 8 35  
MATCHED!! :D
 30%|███       | 532/1746 [07:11<03:52,  5.21it/s]

-------------------------------------


---> lineNum: 533
---> probID: aizu_p00277_A
---> inputs:
3 4 600
3 100 5
1 200 10
2 400 20
3 500 20
---> outputs:
1

import sys
N , R , L = map ( int , sys . stdin . readline ( ) . split ( ) )
po = [ 0 ] * N
c = [ 0 ] * N
now = 0
index = 0
for i in range ( R ) :
    d , t , x = map ( int , sys . stdin . readline ( ) . split ( ) )
    c [ index ] += t - now
    po [ d - 1 ] += x
    now = t
    if x > 0 :
        if d - 1 == index :
            continue
        if po [ index ] < po [ d - 1 ] :
            index = d - 1
        elif po [ index ] == po [ d - 1 ] and index > d - 1 :
            index = d - 1
    else :
        if d - 1 != index :
            continue
        maxp = float ( '-inf' )
        for j in range ( N ) :
            if maxp < po [ j ] :
                maxp = po [ j ]
                index = j
c [ index ] += L - now
ans = 0
maxc = 0
for i in range ( N ) :
    if c [ i ] > maxc :
        maxc = c [ i ]
        ans = i
print ( ans + 1 )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 534
---> probID: geeksforgeeks_1722_A
---> inputs:

---> outputs:
3th Centered cube number: 91
10th Centered cube number: 2331


import math
def centered_cube ( n ) :
    return ( 2 * n + 1 ) * ( n * n + n + 1 )
n = 3
print ( str ( n ) + "th Centered cube number: " + str ( centered_cube ( n ) ) )
n = 10
print ( str ( n ) + "th Centered cube number: " + str ( centered_cube ( n ) ) )


---> console_out:
3th Centered cube number: 91
10th Centered cube number: 2331
 
MATCHED!! :D
 31%|███       | 534/1746 [07:11<03:07,  6.46it/s] 31%|███       | 534/1746 [07:30<03:07,  6.46it/s]out1,out2 timeoutencounteredpy 1111111010100010


-------------------------------------


---> lineNum: 535
---> probID: codeforces_1369_B
---> inputs:
5
10
0001111111
4
0101
8
11001101
10
1110000000
1
1
---> outputs:
0001111111
001
01
0
1

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = StringTokenizer ( self . br ( ) . strip ( ) )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return self . br ( ) . strip ( )
def main ( ) :
    obj = FastReader ( )
    tc = obj . nextInt ( )
    while tc != 0 :
        n = obj . nextInt ( )
        arr = list ( obj . next ( ) )
        r , l = n - 1 , - 1
        while r >= 0 and arr [ r ] == '1' :
            r -= 1
        while l + 1 < n and arr [ 0 ] == '0' and arr [ l + 1 ] == '0' :
            l += 1
        flag = [ False ] * n
        for i in range ( l + 1 ) :
            flag [ i ] = True
        for i in range ( n - 1 , max ( r , 0 ) - 1 , - 1 ) :
            flag [ i ] = True
        for i in range ( n ) :
            if flag [ i ] :
                print ( arr [ i ] , end = '' )
        print ( )
        tc -= 1
if __name__ == '__main__' :
    main ( )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 31%|███       | 535/1746 [07:51<2:26:10,  7.24s/it]out1,out2 320 320


-------------------------------------


---> lineNum: 536
---> probID: geeksforgeeks_2638_A
---> inputs:

---> outputs:
32


import math
def nthTerm ( N ) :
    nth = 0
    for i in range ( N , 0 , - 1 ) :
        nth += math . pow ( i , i )
    return nth
N = 3
print ( nthTerm ( N ) )


---> console_out:
32.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 537
---> probID: geeksforgeeks_3160_A
---> inputs:

---> outputs:
True
False
True
False


def isPower ( x , y ) :
    if x == 1 :
        return y == 1
    pow = 1
    while pow < y :
        pow = pow * x
    return pow == y
print ( "True" if isPower ( 10 , 1 ) else "False" )
print ( "True" if isPower ( 1 , 20 ) else "False" )
print ( "True" if isPower ( 2 , 128 ) else "False" )
print ( "True" if isPower ( 2 , 30 ) else "False" )


---> console_out:
True
False
True
False
 
MATCHED!! :D
 31%|███       | 537/1746 [07:51<1:37:16,  4.83s/it]

-------------------------------------


---> lineNum: 538
---> probID: geeksforgeeks_2048_A
---> inputs:

---> outputs:
1
0
1
0


def isPower ( x , y ) :
    if x == 1 :
        return y == 1
    pow = 1
    while pow < y :
        pow = pow * x
    return pow == y
print ( 1 if isPower ( 10 , 1 ) else 0 )
print ( 1 if isPower ( 1 , 20 ) else 0 )
print ( 1 if isPower ( 2 , 128 ) else 0 )
print ( 1 if isPower ( 2 , 30 ) else 0 )


---> console_out:
1
0
1
0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 539
---> probID: geeksforgeeks_692_A
---> inputs:

---> outputs:
200


import numpy as np
def minimumValue ( arr , n , k ) :
    arr = np . sort ( arr )
    answer = 0
    for i in range ( k ) :
        answer += arr [ i ] * arr [ i ]
    return answer * ( 2 * k - 2 )
arr = [ 4 , 21 , 5 , 3 , 8 ]
k = 3
n = len ( arr )
print ( minimumValue ( arr , n , k ) )


---> console_out:
200
 
MATCHED!! :D
 31%|███       | 539/1746 [07:52<1:06:43,  3.32s/it]

-------------------------------------


---> lineNum: 540
---> probID: aizu_p00303_A
---> inputs:
4
1 lock 1
2 lock 2
1 wait 2
2 wait 1
---> outputs:
1

import queue
N = int ( input ( ) )
vs = set ( )
indeg = { }
outdeg = { }
for i in range ( N ) :
    u , rel , d = input ( ) . split ( )
    u = 'u' + u
    d = 'd' + d
    vs . add ( u )
    vs . add ( d )
    indeg . setdefault ( u , set ( ) )
    indeg . setdefault ( d , set ( ) )
    outdeg . setdefault ( u , set ( ) )
    outdeg . setdefault ( d , set ( ) )
    if rel == "lock" :
        indeg [ u ] . add ( d )
        outdeg [ d ] . add ( u )
    else :
        indeg [ d ] . add ( u )
        outdeg [ u ] . add ( d )
que = queue . Queue ( )
for v in indeg . keys ( ) :
    if len ( indeg [ v ] ) == 0 :
        que . put ( v )
while not que . empty ( ) :
    u = que . get ( )
    for v in outdeg [ u ] :
        indeg [ v ] . remove ( u )
        if len ( indeg [ v ] ) == 0 :
            que . put ( v )
    vs . remove ( u )
print ( 0 if len ( vs ) == 0 else 1 )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 541
---> probID: geeksforgeeks_3591_A
---> inputs:

---> outputs:
32


def countWays ( N ) :
    E = ( N * ( N - 1 ) ) // 2
    if N == 1 :
        return 0
    return 2 ** ( E - 1 )
if __name__ == '__main__' :
    N = 4
    print ( countWays ( N ) )


---> console_out:
32
 
MATCHED!! :D
 31%|███       | 541/1746 [07:52<45:54,  2.29s/it]  

-------------------------------------


---> lineNum: 542
---> probID: geeksforgeeks_1082_A
---> inputs:

---> outputs:
2


def gcd ( a , b ) :
    if a == 0 or b == 0 :
        return 0
    if a == b :
        return a
    if a > b :
        return gcd ( a - b , b )
    return gcd ( a , b - a )
def find_lcm ( arr , n ) :
    lcm = arr [ 0 ]
    for i in range ( 1 , n ) :
        lcm = ( lcm * arr [ i ] ) // gcd ( arr [ i ] , lcm )
    return lcm
def count_numbers ( arr , n , l , r ) :
    lcm = find_lcm ( arr , n )
    count = ( r // lcm ) - ( ( l - 1 ) // lcm )
    return count
arr = [ 1 , 4 , 2 ]
n = len ( arr )
l = 1
r = 10
print ( count_numbers ( arr , n , l , r ) )


---> console_out:
2
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784157485_4464/main.py", line 11, in <module>
    ans . append ( int ( str ( num [ i ] ) + str ( num [ j ] ) ) )
IndexError: list index out of range
out1,out2  520


-------------------------------------


---> lineNum: 543
---> probID: aizu_p00507_A
---> inputs:
3
2
7
5
---> outputs:
52

import sys
n = int ( input ( ) )
a = min ( n , 4 )
num = list ( map ( int , input ( ) . split ( ) ) )
num . sort ( )
ans = [ ]
for i in range ( a ) :
    for j in range ( a ) :
        if i == j :
            continue
        ans . append ( int ( str ( num [ i ] ) + str ( num [ j ] ) ) )
ans . sort ( )
print ( ans [ 2 ] )


---> console_out:
 
DIDN'T MATCH!! :(
 31%|███       | 543/1746 [07:52<31:56,  1.59s/it]

-------------------------------------


---> lineNum: 544
---> probID: codeforces_1203_B
---> inputs:
5
1
1 1 10 10
2
10 5 2 10 1 1 2 5
2
10 5 1 10 5 1 1 1
2
1 1 1 1 1 1 1 1
1
10000 10000 10000 10000
---> outputs:
YES
YES
NO
YES
YES

import sys
T = int ( sys . stdin . readline ( ) )
for _ in range ( T ) :
    n = int ( sys . stdin . readline ( ) )
    a = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
    a . sort ( )
    area = a [ 0 ] * a [ - 1 ]
    yes = True
    for i in range ( n ) :
        lf = i * 2
        rg = 4 * n - ( i * 2 ) - 1
        if a [ lf ] != a [ lf + 1 ] or a [ rg ] != a [ rg - 1 ] or a [ lf ] * a [ rg ] != area :
            yes = False
            break
    if yes :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
YES
YES
NO
YES
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 545
---> probID: geeksforgeeks_3391_A
---> inputs:

---> outputs:
3


import collections
def MinDeletion ( a , n ) :
    mp = collections . defaultdict ( int )
    for i in range ( n ) :
        mp [ a [ i ] ] += 1
    ans = 0
    for x , frequency in mp . items ( ) :
        if x <= frequency :
            ans += ( frequency - x )
        else :
            ans += frequency
    return ans
a = [ 2 , 3 , 2 , 3 , 4 , 4 , 4 , 4 , 5 ]
n = len ( a )
print ( MinDeletion ( a , n ) )


---> console_out:
3
 
MATCHED!! :D
 31%|███       | 545/1746 [07:52<22:27,  1.12s/it]  File "./junk/1703784157671_9601/main.py", line 1
    def fromStart ( inp , del ) :
                          ^
SyntaxError: invalid syntax
out1,out2  numafterdeletingfromstarting1240numafterdeletingfromending1340


-------------------------------------


---> lineNum: 546
---> probID: geeksforgeeks_1197_A
---> inputs:

---> outputs:
num_after_deleting_from_starting 124
num_after_deleting_from_ending 134


def fromStart ( inp , del ) :
    try :
        inp1 = inp [ : del - 1 ]
        inp2 = inp [ del : ]
        return inp1 + inp2
    except :
        return "Check Input"
def fromEnd ( inp , del ) :
    try :
        inp1 = inp [ : len ( inp ) - del ]
        inp2 = inp [ len ( inp ) - del + 1 : ]
        return inp1 + inp2
    except :
        return "Check Input"
if __name__ == "__main__" :
    in_ = 1234
    inp = str ( in_ )
    del_ = 3
    print ( "num_after_deleting_from_starting " + fromStart ( inp , del_ ) )
    print ( "num_after_deleting_from_ending " + fromEnd ( inp , del_ ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 547
---> probID: geeksforgeeks_2384_A
---> inputs:

---> outputs:
199


import math
def nondecdigits ( n ) :
    x = 0
    for x in range ( n , 0 , - 1 ) :
        no = x
        prev_dig = 11
        flag = True
        while no != 0 :
            if prev_dig < no % 10 :
                flag = False
                break
            prev_dig = no % 10
            no //= 10
        if flag == True :
            break
    return x
n = 200
print ( nondecdigits ( n ) )


---> console_out:
199
 
MATCHED!! :D
 31%|███▏      | 547/1746 [07:52<15:56,  1.25it/s]

-------------------------------------


---> lineNum: 548
---> probID: codeforces_459_A
---> inputs:
0 0 0 1
---> outputs:
1 0 1 1

import sys
x1 , y1 , x2 , y2 = map ( int , input ( ) . split ( ) )
if x1 == x2 :
    dif = abs ( y1 - y2 )
    print ( x1 + dif , y1 , x1 + dif , y2 )
elif y1 == y2 :
    dif = abs ( x1 - x2 )
    print ( x1 , y1 + dif , x2 , y2 + dif )
elif abs ( x1 - x2 ) == abs ( y1 - y2 ) :
    print ( x1 , y2 , x2 , y1 )
else :
    print ( - 1 )


---> console_out:
1 0 1 1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 549
---> probID: codeforces_79_A
---> inputs:
2 2
---> outputs:
Ciel

import sys
def canTake ( xNeeded , xAvailable , yNeeded , yAvailable ) :
    if xNeeded > xAvailable :
        return False
    if yNeeded > yAvailable :
        return False
    return True
def main ( ) :
    line = sys . stdin . readline ( )
    x , y = map ( int , line . split ( ) )
    turn = 0
    while True :
        if turn % 2 == 0 :
            if canTake ( 2 , x , 2 , y ) :
                x -= 2
                y -= 2
            elif canTake ( 1 , x , 12 , y ) :
                x -= 1
                y -= 12
            elif canTake ( 0 , x , 22 , y ) :
                y -= 22
            else :
                print ( "Hanako" )
                return
        else :
            if canTake ( 0 , x , 22 , y ) :
                y -= 22
            elif canTake ( 1 , x , 12 , y ) :
                x -= 1
                y -= 12
            elif canTake ( 2 , x , 2 , y ) :
                x -= 2
                y -= 2
            else :
                print ( "Ciel" )
                return
        turn += 1
if __name__ == "__main__" :
    main ( )


---> console_out:
Ciel
 
MATCHED!! :D
 31%|███▏      | 549/1746 [07:52<11:29,  1.74it/s]Traceback (most recent call last):
  File "./junk/1703784157933_6672/main.py", line 38, in <module>
    main ( )
  File "./junk/1703784157933_6672/main.py", line 24, in main
    n = in_ . nextInt ( )
  File "./junk/1703784157933_6672/main.py", line 14, in nextInt
    return int ( self . next ( ) )
  File "./junk/1703784157933_6672/main.py", line 7, in next
    while self . st is None or not self . st . hasMoreElements ( ) :
AttributeError: 'list_iterator' object has no attribute 'hasMoreElements'
out1,out2  b


-------------------------------------


---> lineNum: 550
---> probID: codeforces_445_A
---> inputs:
1 1
.
---> outputs:
B

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = iter ( self . br . readline ( ) . split ( ) )
            except ValueError :
                self . st = iter ( [ ] )
        return next ( self . st )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return self . br . readline ( ) . strip ( )
def main ( ) :
    in_ = FastReader ( )
    out = sys . stdout
    n = in_ . nextInt ( )
    m = in_ . nextInt ( )
    arr = [ list ( in_ . nextLine ( ) ) for _ in range ( n ) ]
    for i in range ( n ) :
        w = i % 2 == 0
        for j in range ( m ) :
            w = not w
            if arr [ i ] [ j ] == '.' :
                out . write ( 'W' if w else 'B' )
            else :
                out . write ( '-' )
        out . write ( '\n' )
    out . close ( )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
out1,out2  40


-------------------------------------


---> lineNum: 551
---> probID: codeforces_327_A
---> inputs:
5
1 0 0 1 0
---> outputs:
4

import sys
def check_no ( brr ) :
    val = 0
    for i in brr :
        if i == 1 :
            val += 1
    return val
if __name__ == "__main__" :
    if len ( sys . argv ) > 1 :
        n = int ( sys . argv [ 1 ] )
        arr = list ( map ( int , sys . argv [ 2 : ] ) )
        max_val = float ( '-inf' )
        for i in range ( n ) :
            for j in range ( i , n ) :
                x = 0
                brr = arr . copy ( )
                for k in range ( i , j + 1 ) :
                    if brr [ k ] == 0 :
                        brr [ k ] = 1
                    else :
                        brr [ k ] = 0
                count = check_no ( brr )
                if count > max_val :
                    max_val = count
        if n == 1 :
            if arr [ 0 ] == 1 :
                print ( 0 )
            else :
                print ( 1 )
        else :
            print ( max_val )


---> console_out:
 
DIDN'T MATCH!! :(
 32%|███▏      | 551/1746 [07:52<08:23,  2.37it/s]

-------------------------------------


---> lineNum: 552
---> probID: geeksforgeeks_417_A
---> inputs:

---> outputs:
5


from collections import defaultdict
def countDistictSubarray ( arr , n ) :
    vis = defaultdict ( int )
    for i in range ( n ) :
        vis [ arr [ i ] ] = 1
    k = len ( vis )
    vis . clear ( )
    ans , right , window = 0 , 0 , 0
    for left in range ( n ) :
        while right < n and window < k :
            vis [ arr [ right ] ] += 1
            if vis [ arr [ right ] ] == 1 :
                window += 1
            right += 1
        if window == k :
            ans += ( n - right + 1 )
        vis [ arr [ left ] ] -= 1
        if vis [ arr [ left ] ] == 0 :
            window -= 1
    return ans
arr = [ 2 , 1 , 3 , 2 , 3 ]
print ( countDistictSubarray ( arr , len ( arr ) ) )


---> console_out:
5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 553
---> probID: codeforces_608_A
---> inputs:
3 7
2 1
3 8
5 2
---> outputs:
11

import sys
import math
class FastScanner :
    def __init__ ( self ) :
        self . br = sys . stdin . buffer
        self . buffer = bytearray ( )
        self . pos = 0
        self . size = 0
    def read ( self ) :
        if self . pos >= self . size :
            self . buffer = self . br . read ( 1024 )
            self . size = len ( self . buffer )
            self . pos = 0
        if self . size == 0 :
            return - 1
        val = self . buffer [ self . pos ]
        self . pos += 1
        return val
    def next ( self ) :
        while True :
            c = self . read ( )
            if c == - 1 :
                break
            if chr ( c ) . isspace ( ) :
                continue
            res = chr ( c )
            while True :
                c = self . read ( )
                if c == - 1 :
                    break
                if chr ( c ) . isspace ( ) :
                    break
                res += chr ( c )
            return res
        return ""
    def nextLine ( self ) :
        res = ""
        while True :
            c = self . read ( )
            if c == - 1 :
                break
            if chr ( c ) == "\n" :
                break
            res += chr ( c )
        return res
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
def main ( ) :
    in_ = FastScanner ( )
    n = in_ . nextInt ( )
    s = in_ . nextInt ( )
    max_ = 0
    for i in range ( n ) :
        f = in_ . nextInt ( )
        t = in_ . nextInt ( )
        if max_ < f + t :
            max_ = f + t
    print ( max ( max_ , s ) )
if __name__ == "__main__" :
    main ( )


---> console_out:
11
 
MATCHED!! :D
 32%|███▏      | 553/1746 [07:53<06:14,  3.19it/s]

-------------------------------------


---> lineNum: 554
---> probID: geeksforgeeks_1395_A
---> inputs:

---> outputs:
4


def isPrime ( n ) :
    if n <= 1 :
        return False
    if n <= 3 :
        return True
    if n % 2 == 0 or n % 3 == 0 :
        return False
    i = 5
    while i * i <= n :
        if n % i == 0 or n % ( i + 2 ) == 0 :
            return False
        i = i + 6
    return True
def primeBitsInRange ( l , r ) :
    count = 0
    for i in range ( l , r + 1 ) :
        tot_bit = bin ( i ) . count ( '1' )
        if isPrime ( tot_bit ) :
            count += 1
    return count
l = 6
r = 10
print ( primeBitsInRange ( l , r ) )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 555
---> probID: geeksforgeeks_3856_A
---> inputs:

---> outputs:
1


def countSetBits ( n ) :
    count = 0
    while n > 0 :
        n &= ( n - 1 )
        count += 1
    return count
def pairs ( arr , n , k ) :
    count = 0
    for i in range ( n ) :
        for j in range ( i + 1 , n ) :
            sum = countSetBits ( arr [ i ] ) + countSetBits ( arr [ j ] )
            if sum == k :
                count += 1
    return count
if __name__ == '__main__' :
    arr = [ 1 , 2 , 3 , 4 , 5 ]
    n = len ( arr )
    k = 4
    print ( pairs ( arr , n , k ) )


---> console_out:
1
 
MATCHED!! :D
 32%|███▏      | 555/1746 [07:53<04:44,  4.19it/s]

-------------------------------------


---> lineNum: 556
---> probID: geeksforgeeks_3130_A
---> inputs:

---> outputs:
50 40 30 20 10 60 70 80 90 100 

from queue import Queue
def reverseQueueFirstKElements ( k ) :
    if queue . empty ( ) or k > queue . qsize ( ) :
        return
    if k <= 0 :
        return
    stack = [ ]
    for i in range ( k ) :
        stack . append ( queue . get ( ) )
    while stack :
        queue . put ( stack . pop ( ) )
    for i in range ( queue . qsize ( ) - k ) :
        queue . put ( queue . get ( ) )
def Print ( ) :
    while not queue . empty ( ) :
        print ( queue . get ( ) , end = ' ' )
queue = Queue ( )
queue . put ( 10 )
queue . put ( 20 )
queue . put ( 30 )
queue . put ( 40 )
queue . put ( 50 )
queue . put ( 60 )
queue . put ( 70 )
queue . put ( 80 )
queue . put ( 90 )
queue . put ( 100 )
k = 5
reverseQueueFirstKElements ( k )
Print ( )


---> console_out:
50 40 30 20 10 60 70 80 90 100  
MATCHED!! :D
  File "./junk/1703784158387_9852/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  errorgornmaomao900


-------------------------------------


---> lineNum: 557
---> probID: codeforces_1672_A
---> inputs:
2
4
2 4 2 1
1
1
---> outputs:
errorgorn
maomao90

import java . util . * ;
public class Ideone { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; int n = Integer . parseInt ( sc . nextLine ( ) ) ; for ( int i = 0 ; i < n ; i + + ) { int sum = - Integer . parseInt ( sc . nextLine ( ) ) ; for ( String x : sc . nextLine ( ) . trim ( ) . split ( " " ) ) { sum += Integer . parseInt ( x ) ; } if ( sum % 2 == 0 ) { System . out . println ( "maomao90" ) ; } else { System . out . println ( "errorgorn" ) ; } } } }


---> console_out:
 
DIDN'T MATCH!! :(
 32%|███▏      | 557/1746 [07:53<03:43,  5.33it/s]

-------------------------------------


---> lineNum: 558
---> probID: geeksforgeeks_4727_A
---> inputs:

---> outputs:
15


def xorCalc ( k ) :
    if k == 1 :
        return 2
    if ( ( k + 1 ) & k ) == 0 :
        return k // 2
    return 1
k = 31
print ( xorCalc ( k ) )


---> console_out:
15
 
MATCHED!! :D
out1,out2 true true


-------------------------------------


---> lineNum: 559
---> probID: leetcode_367_A
---> inputs:

---> outputs:
true

class Solution :
    def isPerfectSquare ( self , num : int ) -> bool :
        low = 1
        high = num
        while low <= high :
            mid = ( low + high ) // 2
            if mid * mid == num :
                return True
            elif mid * mid < num :
                low = mid + 1
            else :
                high = mid - 1
        return False
if __name__ == '__main__' :
    sObj = Solution ( )
    n = 16
    out = sObj . isPerfectSquare ( n )
    print ( out )


---> console_out:
True
 
MATCHED!! :D
 32%|███▏      | 559/1746 [07:53<02:57,  6.69it/s]

-------------------------------------


---> lineNum: 560
---> probID: atcoder_ABC047_A
---> inputs:
10 30 20
---> outputs:
Yes

import sys
class Scanner :
    def __init__ ( self , istream ) :
        self . br = istream
        self . tok = None
    def getLine ( self ) :
        while not self . hasNext ( ) :
            self . tok = self . br . readline ( ) . split ( )
    def hasNext ( self ) :
        return self . tok is not None and len ( self . tok ) > 0
    def next ( self ) :
        self . getLine ( )
        return self . tok . pop ( 0 )
    def nextInt ( self ) :
        return int ( self . next ( ) )
a , b , c = map ( int , input ( ) . split ( ) )
result = "No"
if max ( a , max ( b , c ) ) * 2 == a + b + c :
    result = "Yes"
print ( result )


---> console_out:
Yes
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784158642_8683/main.py", line 6, in <module>
    n2 = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 2 3 4 5'
out1,out2  1030


-------------------------------------


---> lineNum: 561
---> probID: codeforces_134_A
---> inputs:
5
1 2 3 4 5
---> outputs:
1
3

import sys
n1 = int ( input ( ) )
arr = [ ]
sum = 0
for i in range ( n1 ) :
    n2 = int ( input ( ) )
    arr . append ( n2 )
    sum += arr [ i ]
summ = sum / n1
nos = 0
for i in range ( len ( arr ) ) :
    if arr [ i ] == summ :
        nos += 1
print ( nos )
for i in range ( n1 ) :
    if arr [ i ] == summ :
        sys . stdout . write ( str ( i + 1 ) + " " )


---> console_out:
 
DIDN'T MATCH!! :(
 32%|███▏      | 561/1746 [07:53<02:26,  8.11it/s]Traceback (most recent call last):
  File "./junk/1703784158706_7004/main.py", line 28, in <module>
    main ( )
  File "./junk/1703784158706_7004/main.py", line 9, in main
    queue = queue . Queue ( )
UnboundLocalError: local variable 'queue' referenced before assignment
out1,out2  p201800p504000p104500p305500p408000


-------------------------------------


---> lineNum: 562
---> probID: aizu_p02264_A
---> inputs:
5 100
p1 150
p2 80
p3 200
p4 350
p5 20
---> outputs:
p2 180
p5 400
p1 450
p3 550
p4 800

import queue
class Process :
    def __init__ ( self , name , quantum ) :
        self . name = name
        self . quantum = quantum
def main ( ) :
    size , quantum = map ( int , input ( ) . split ( ) )
    sum = 0
    queue = queue . Queue ( )
    for i in range ( size ) :
        name , time = input ( ) . split ( )
        time = int ( time )
        if time <= quantum :
            sum += time
            print ( name , sum )
        else :
            sum += quantum
            queue . put ( Process ( name , time - quantum ) )
    while not queue . empty ( ) :
        process = queue . get ( )
        if process . quantum <= quantum :
            sum += process . quantum
            print ( process . name , sum )
        else :
            sum += quantum
            queue . put ( Process ( process . name , process . quantum - quantum ) )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 563
---> probID: geeksforgeeks_3870_A
---> inputs:

---> outputs:
3


import numpy as np
def findElement ( arr , ranges , rotations , index ) :
    for i in range ( rotations - 1 , - 1 , - 1 ) :
        left = ranges [ i ] [ 0 ]
        right = ranges [ i ] [ 1 ]
        if left <= index and right >= index :
            if index == left :
                index = right
            else :
                index -= 1
    return arr [ index ]
arr = np . array ( [ 1 , 2 , 3 , 4 , 5 ] )
rotations = 2
ranges = np . array ( [ [ 0 , 2 ] , [ 0 , 3 ] ] )
index = 1
print ( findElement ( arr , ranges , rotations , index ) )


---> console_out:
3
 
MATCHED!! :D
 32%|███▏      | 563/1746 [07:53<02:53,  6.83it/s]

-------------------------------------


---> lineNum: 564
---> probID: geeksforgeeks_924_A
---> inputs:

---> outputs:
Yes


MAXN = 1000001
spf = [ 0 ] * MAXN
hash1 = [ 0 ] * MAXN
def sieve ( ) :
    spf [ 1 ] = 1
    for i in range ( 2 , MAXN ) :
        spf [ i ] = i
    for i in range ( 4 , MAXN , 2 ) :
        spf [ i ] = 2
    for i in range ( 3 , int ( MAXN ** 0.5 ) + 1 ) :
        if spf [ i ] == i :
            for j in range ( i * i , MAXN , i ) :
                if spf [ j ] == j :
                    spf [ j ] = i
def getFactorization ( x ) :
    while x != 1 :
        temp = spf [ x ]
        if x % temp == 0 :
            hash1 [ spf [ x ] ] += 1
            x = x // spf [ x ]
        while x % temp == 0 :
            x = x // temp
def check ( x ) :
    while x != 1 :
        temp = spf [ x ]
        if x % temp == 0 and hash1 [ temp ] > 1 :
            return False
        while x % temp == 0 :
            x = x // temp
    return True
def hasValidNum ( arr , n ) :
    sieve ( )
    for i in range ( n ) :
        getFactorization ( arr [ i ] )
    for i in range ( n ) :
        if check ( arr [ i ] ) :
            return True
    return False
arr = [ 2 , 8 , 4 , 10 , 6 , 7 ]
n = len ( arr )
if hasValidNum ( arr , n ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 565
---> probID: geeksforgeeks_672_A
---> inputs:

---> outputs:
Yes


import collections
def isExists ( a , n ) :
    freq = collections . defaultdict ( int )
    sum = 0
    for i in range ( n ) :
        freq [ a [ i ] ] += 1
        sum += a [ i ]
    if sum % 2 == 0 :
        if freq [ sum // 2 ] != 0 :
            return True
    return False
if __name__ == "__main__" :
    a = [ 5 , 1 , 2 , 2 ]
    n = len ( a )
    if isExists ( a , n ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
 32%|███▏      | 565/1746 [07:54<03:54,  5.03it/s]

-------------------------------------


---> lineNum: 566
---> probID: geeksforgeeks_5026_A
---> inputs:

---> outputs:
Area of Kite = 12.0


def areaOfKite ( d1 , d2 ) :
    area = ( d1 * d2 ) / 2
    return area
if __name__ == '__main__' :
    d1 , d2 = 4 , 6
    print ( "Area of Kite = " , areaOfKite ( d1 , d2 ) )


---> console_out:
Area of Kite =  12.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 567
---> probID: codeforces_475_A
---> inputs:
9
---> outputs:
+------------------------+
|O.O.O.#.#.#.#.#.#.#.#.|D|)
|O.O.O.#.#.#.#.#.#.#.#.|.|
|O.......................|
|O.O.#.#.#.#.#.#.#.#.#.|.|)
+------------------------+

import sys
n = int ( input ( ) )
a = [ [ False for j in range ( 11 ) ] for i in range ( 4 ) ]
i , j = 0 , 0
while n > 0 :
    if i == 2 and j != 0 :
        i += 1
    a [ i ] [ j ] = True
    n -= 1
    j += i // 3
    i = ( i + 1 ) % 4
print ( "+------------------------+" )
for i in range ( 4 ) :
    sys . stdout . write ( "|" )
    for j in range ( 11 ) :
        if a [ i ] [ j ] :
            sys . stdout . write ( "O." )
        elif i == 2 :
            if j == 0 :
                sys . stdout . write ( "#." )
            else :
                sys . stdout . write ( ".." )
        else :
            sys . stdout . write ( "#." )
    if i == 0 :
        print ( "|D|)" )
    else :
        if i == 2 :
            print ( "..|" , end = "" )
        else :
            print ( "|.|" , end = "" )
        if i == 3 :
            print ( ")" , end = "" )
        print ( )
print ( "+------------------------+" )


---> console_out:
+------------------------+
|O.O.O.#.#.#.#.#.#.#.#.|D|)
|O.O.O.#.#.#.#.#.#.#.#.|.|
|O.......................|
|O.O.#.#.#.#.#.#.#.#.#.|.|)
+------------------------+
 
MATCHED!! :D
 32%|███▏      | 567/1746 [07:54<03:05,  6.34it/s]  File "./junk/1703784159873_9916/main.py", line 3
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  yes


-------------------------------------


---> lineNum: 568
---> probID: codeforces_55_A
---> inputs:
1
---> outputs:
YES

import java . util . Scanner
def main ( ) :
    sc = Scanner ( System . in )
    n = sc . nextInt ( )
    if ( n & ( n - 1 ) ) == 0 :
        print ( "YES" )
    else :
        print ( "NO" )
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 569
---> probID: geeksforgeeks_2229_A
---> inputs:

---> outputs:
No


def productEqual ( n ) :
    if n < 10 :
        return False
    prodOdd = 1
    prodEven = 1
    while n > 0 :
        digit = n % 10
        prodOdd *= digit
        n //= 10
        if n == 0 :
            break
        digit = n % 10
        prodEven *= digit
        n //= 10
    if prodEven == prodOdd :
        return True
    return False
n = 4324
if productEqual ( n ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
No
 
MATCHED!! :D
 33%|███▎      | 569/1746 [07:54<02:31,  7.79it/s]

-------------------------------------


---> lineNum: 570
---> probID: aizu_p01620_A
---> inputs:
2
1 2
bdd
3
3 2 1
DDDA
5
3 1 4 5 3
dcdkIlkP
0
---> outputs:
abc
ABCx
abZfFijL

import sys
while True :
    n = int ( sys . stdin . readline ( ) )
    if n == 0 :
        break
    key = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
    c = list ( sys . stdin . readline ( ) . strip ( ) )
    keyCount = 0
    for i in range ( len ( c ) ) :
        for j in range ( key [ keyCount ] ) :
            if c [ i ] == 'a' :
                c [ i ] = 'Z'
            elif c [ i ] == 'A' :
                c [ i ] = 'z'
            else :
                c [ i ] = chr ( ord ( c [ i ] ) - 1 )
        if keyCount == len ( key ) - 1 :
            keyCount = 0
        else :
            keyCount += 1
    print ( '' . join ( c ) )


---> console_out:
abc
ABCx
abZfFijL
 
MATCHED!! :D


-------------------------------------


---> lineNum: 571
---> probID: geeksforgeeks_1107_A
---> inputs:

---> outputs:
odd


import sys
def checkEVENodd ( arr , n , l , r ) :
    if arr [ r ] == 1 :
        print ( "odd" )
    else :
        print ( "even" )
def main ( ) :
    arr = [ 1 , 1 , 0 , 1 ]
    n = len ( arr )
    checkEVENodd ( arr , n , 1 , 3 )
if __name__ == "__main__" :
    main ( )


---> console_out:
odd
 
MATCHED!! :D
 33%|███▎      | 571/1746 [07:54<02:07,  9.24it/s]

-------------------------------------


---> lineNum: 572
---> probID: aizu_p02394_A
---> inputs:
5 4 2 2 1
---> outputs:
Yes

import sys
try :
    str = input ( )
    split = str . split ( " " )
    w = int ( split [ 0 ] )
    h = int ( split [ 1 ] )
    x = int ( split [ 2 ] )
    y = int ( split [ 3 ] )
    r = int ( split [ 4 ] )
    if ( x - r >= 0 ) and ( x + r <= w ) and ( y - r >= 0 ) and ( y + r <= h ) :
        print ( "Yes" )
    else :
        print ( "No" )
except :
    print ( "??¨??????" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 573
---> probID: geeksforgeeks_4264_A
---> inputs:

---> outputs:
5


def isPrime ( n ) :
    if n <= 1 :
        return False
    for i in range ( 2 , n ) :
        if n % i == 0 :
            return False
    return True
def findPrime ( n ) :
    num = n + 1
    while num > 0 :
        if isPrime ( num ) :
            return num
        num = num + 1
    return 0
def minNumber ( arr , n ) :
    sum = 0
    for i in range ( n ) :
        sum += arr [ i ]
    if isPrime ( sum ) :
        return 0
    num = findPrime ( sum )
    return num - sum
arr = [ 2 , 4 , 6 , 8 , 12 ]
n = len ( arr )
print ( minNumber ( arr , n ) )


---> console_out:
5
 
MATCHED!! :D
 33%|███▎      | 573/1746 [07:55<01:55, 10.18it/s]

-------------------------------------


---> lineNum: 574
---> probID: geeksforgeeks_2808_A
---> inputs:

---> outputs:
24


import numpy as np
def compositeProduct ( arr ) :
    max_val = np . max ( arr )
    prime = np . ones ( max_val + 1 , dtype = bool )
    prime [ 0 ] = False
    prime [ 1 ] = False
    for p in range ( 2 , int ( max_val ** 0.5 ) + 1 ) :
        if prime [ p ] :
            for i in range ( p * 2 , max_val + 1 , p ) :
                prime [ i ] = False
    product = 1
    for i in range ( len ( arr ) ) :
        if not prime [ arr [ i ] ] :
            product *= arr [ i ]
    return product
arr = [ 2 , 3 , 4 , 5 , 6 , 7 ]
print ( compositeProduct ( arr ) )


---> console_out:
24
 
MATCHED!! :D


-------------------------------------


---> lineNum: 575
---> probID: aizu_p02397_A
---> inputs:
3 2
2 2
5 3
0 0
---> outputs:
2 3
2 2
3 5

import sys
intx = 0
inty = 0
intWork = 0
while True :
    try :
        strLine = input ( )
        if strLine :
            strNumList = strLine . split ( )
            intx = int ( strNumList [ 0 ] )
            inty = int ( strNumList [ 1 ] )
            if intx != 0 or inty != 0 :
                if intx > inty :
                    intWork = intx
                    intx = inty
                    inty = intWork
                print ( intx , inty )
            else :
                break
        else :
            break
    except Exception as e :
        print ( e , file = sys . stderr )
        break


---> console_out:
2 3
2 2
3 5
 
MATCHED!! :D
 33%|███▎      | 575/1746 [07:55<02:19,  8.39it/s]

-------------------------------------


---> lineNum: 576
---> probID: codeforces_1281_A
---> inputs:
8
kamusta_po
genki_desu
ohayou_gozaimasu
annyeong_hashimnida
hajime_no_ippo
bensamu_no_sentou_houhou_ga_okama_kenpo
ang_halaman_doon_ay_sarisari_singkamasu
si_roy_mustang_ay_namamasu
---> outputs:
FILIPINO
JAPANESE
JAPANESE
KOREAN
FILIPINO
FILIPINO
JAPANESE
JAPANESE

import sys
strarr = [ "FILIPINO" , "JAPANESE" , "KOREAN" ]
t = int ( input ( ) )
indexWord = 0
for i in range ( t ) :
    s1 = input ( )
    if s1 . endswith ( "po" ) :
        indexWord = 0
    elif s1 . endswith ( "mnida" ) :
        indexWord = 2
    else :
        indexWord = 1
    print ( strarr [ indexWord ] )


---> console_out:
FILIPINO
JAPANESE
JAPANESE
KOREAN
FILIPINO
FILIPINO
JAPANESE
JAPANESE
 
MATCHED!! :D


-------------------------------------


---> lineNum: 577
---> probID: geeksforgeeks_4384_A
---> inputs:

---> outputs:
18
40
22


def findSum ( arr , n , left , right ) :
    k = right - left
    d = arr [ 1 ] - arr [ 0 ]
    ans = arr [ left - 1 ] * ( k + 1 )
    ans = ans + ( d * ( k * ( k + 1 ) ) ) // 2
    return ans
if __name__ == '__main__' :
    arr = [ 2 , 4 , 6 , 8 , 10 , 12 , 14 , 16 ]
    queries = 3
    q = [ [ 2 , 4 ] , [ 2 , 6 ] , [ 5 , 6 ] ]
    n = len ( arr )
    for i in range ( queries ) :
        print ( findSum ( arr , n , q [ i ] [ 0 ] , q [ i ] [ 1 ] ) )


---> console_out:
18
40
22
 
MATCHED!! :D
 33%|███▎      | 577/1746 [07:55<01:59,  9.82it/s]

-------------------------------------


---> lineNum: 578
---> probID: geeksforgeeks_3185_A
---> inputs:

---> outputs:
3


import math
def maxResult ( n , a , b , c ) :
    maxVal = 0
    for i in range ( 0 , n + 1 , a ) :
        for j in range ( 0 , n - i + 1 , b ) :
            z = ( n - ( i + j ) ) / c
            if math . floor ( z ) == math . ceil ( z ) :
                x = i // a
                y = j // b
                maxVal = max ( maxVal , x + y + int ( z ) )
    return maxVal
n , a , b , c = 10 , 5 , 3 , 4
print ( maxResult ( n , a , b , c ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 579
---> probID: aizu_p00001_A
---> inputs:
1819
2003
876
2840
1723
1673
3776
2848
1592
922
---> outputs:
3776
2848
2840

import sys
def sort ( a ) :
    for i in range ( len ( a ) - 1 ) :
        for j in range ( len ( a ) - 1 , i , - 1 ) :
            if a [ j ] > a [ j - 1 ] :
                t = a [ j ]
                a [ j ] = a [ j - 1 ]
                a [ j - 1 ] = t
def print_hill ( a ) :
    for i in range ( 3 ) :
        print ( a [ i ] )
def main ( ) :
    hills = [ 0 ] * 10
    for i in range ( 10 ) :
        num = sys . stdin . readline ( )
        n = int ( num )
        hills [ i ] = n
    sort ( hills )
    print_hill ( hills )
if __name__ == "__main__" :
    main ( )


---> console_out:
3776
2848
2840
 
MATCHED!! :D
 33%|███▎      | 579/1746 [07:55<01:45, 11.02it/s]

-------------------------------------


---> lineNum: 580
---> probID: geeksforgeeks_4099_A
---> inputs:

---> outputs:
4


import collections
def fact ( n ) :
    ans = 1
    for i in range ( 1 , n + 1 ) :
        ans *= i
    return ans
def numberOfPossiblePallindrome ( str , n ) :
    mp = collections . defaultdict ( int )
    for i in range ( n ) :
        mp [ str [ i ] ] += 1
    k = 0
    num = 0
    den = 1
    for it in mp . items ( ) :
        if it [ 1 ] % 2 == 0 :
            fi = it [ 1 ] // 2
        else :
            fi = ( it [ 1 ] - 1 ) // 2
            k += 1
        num += fi
        den *= fact ( fi )
    if num != 0 :
        num = fact ( num )
    ans = num // den
    if k != 0 :
        ans *= k
    return ans
str = "ababab"
n = len ( str )
print ( numberOfPossiblePallindrome ( str , n ) )


---> console_out:
4
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784160916_3735/main.py", line 18, in <module>
    print ( split ( arr , 1 , size ) )
  File "./junk/1703784160916_3735/main.py", line 8, in split
    ans2 = split ( arr , mid , m )
  File "./junk/1703784160916_3735/main.py", line 9, in split
    if arr [ mid ] >= arr [ mid - 1 ] and ans1 == ans2 and ans1 == half :
IndexError: list index out of range
out1,out2  40


-------------------------------------


---> lineNum: 581
---> probID: codeforces_1145_A
---> inputs:
4
1 2 2 4
---> outputs:
4

import sys
def split ( arr , s , m ) :
    if s == m :
        return 1
    half = ( m - s + 1 ) >> 1
    mid = half + s
    ans1 = split ( arr , s , mid - 1 )
    ans2 = split ( arr , mid , m )
    if arr [ mid ] >= arr [ mid - 1 ] and ans1 == ans2 and ans1 == half :
        return ans1 + ans2
    elif ans1 > ans2 :
        return ans1
    else :
        return ans2
if __name__ == "__main__" :
    size = int ( input ( ) )
    arr = [ int ( x ) for x in input ( ) . split ( ) ]
    print ( split ( arr , 1 , size ) )


---> console_out:
 
DIDN'T MATCH!! :(
 33%|███▎      | 581/1746 [07:55<01:36, 12.09it/s]

-------------------------------------


---> lineNum: 582
---> probID: geeksforgeeks_4516_A
---> inputs:

---> outputs:
100


import math
def toggleLastMBits ( n , m ) :
    num = int ( math . pow ( 2 , m ) ) - 1
    return ( n ^ num )
if __name__ == '__main__' :
    n = 107
    m = 4
    n = toggleLastMBits ( n , m )
    print ( n )


---> console_out:
100
 
MATCHED!! :D


-------------------------------------


---> lineNum: 583
---> probID: codeforces_1672_B
---> inputs:
4
AABAB
ABB
AAAAAAAAB
A
---> outputs:
YES
NO
YES
NO

import sys
t = int ( input ( ) )
for i in range ( t ) :
    s = input ( )
    a = 0
    b = 0
    f = True
    for ch in s :
        if ch == 'A' :
            a += 1
        else :
            b += 1
            if a < b :
                print ( "NO" )
                f = False
                break
    if f :
        if b != 0 and s [ - 1 ] == 'B' :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
YES
NO
YES
NO
 
MATCHED!! :D
 33%|███▎      | 583/1746 [07:55<01:32, 12.54it/s]

-------------------------------------


---> lineNum: 584
---> probID: geeksforgeeks_2838_A
---> inputs:

---> outputs:
man


import re
def first_subString ( s ) :
    n = len ( s )
    c = 0
    mpp = { }
    for i in range ( n ) :
        if s [ i ] == ' ' or s [ i ] == '#' :
            s1 = s [ c : i ]
            mpp [ s1 ] = 1
            c = i + 1
    for i in range ( n ) :
        if s [ i ] == ' ' :
            continue
        for j in range ( i , n ) :
            if s [ j ] == ' ' :
                break
            s1 = s [ i : j + 1 ]
            s2 = s1
            s1 = reverse ( s1 )
            if s1 in mpp :
                return s2
    return "-1"
def reverse ( input ) :
    return input [ : : - 1 ]
s = "mango is sweet when nam en tastes it#"
s1 = first_subString ( s )
print ( s1 )


---> console_out:
man
 
MATCHED!! :D


-------------------------------------


---> lineNum: 585
---> probID: geeksforgeeks_2391_A
---> inputs:

---> outputs:
4


import re
def countConsecutive ( n ) :
    s = str ( n )
    count = 0
    for i in range ( len ( s ) - 1 ) :
        if s [ i ] == s [ i + 1 ] :
            count += 1
    return count
n = 44522255
print ( countConsecutive ( n ) )


---> console_out:
4
 
MATCHED!! :D
 34%|███▎      | 585/1746 [07:56<01:28, 13.14it/s]out1,out2 interiorangle1440exteriorangle360 interiorangle1440exteriorangle360


-------------------------------------


---> lineNum: 586
---> probID: geeksforgeeks_832_A
---> inputs:

---> outputs:
Interior angle: 144
Exterior angle: 36


import math
def findAngle ( n ) :
    interiorAngle = ( n - 2 ) * 180 / n
    exteriorAngle = 360 / n
    print ( "Interior angle: " , interiorAngle )
    print ( "Exterior angle: " , exteriorAngle )
n = 10
findAngle ( n )


---> console_out:
Interior angle:  144.0
Exterior angle:  36.0
 
MATCHED!! :D
out1,out2 1024099990 1024098010


-------------------------------------


---> lineNum: 587
---> probID: geeksforgeeks_1096_A
---> inputs:

---> outputs:
1024 9801


def nDigitPerfectSquares ( n ) :
    smallest = int ( ( math . ceil ( math . sqrt ( math . pow ( 10 , n - 1 ) ) ) ) ** 2 )
    print ( smallest , end = " " )
    largest = int ( ( math . ceil ( math . sqrt ( math . pow ( 10 , n ) ) ) ) ** 2 - 1 )
    print ( largest )
if __name__ == "__main__" :
    import math
    n = 4
    nDigitPerfectSquares ( n )


---> console_out:
1024 9999
 
DIDN'T MATCH!! :(
 34%|███▎      | 587/1746 [07:56<01:23, 13.92it/s]  File "./junk/1703784161386_9082/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  yesnoyesyesyes


-------------------------------------


---> lineNum: 588
---> probID: codeforces_1411_A
---> inputs:
5
2
))
12
gl))hf))))))
9
gege)))))
14
)aa))b))))))))
1
)
---> outputs:
Yes
No
Yes
Yes
Yes

import java . util . * ;
public class A { public static void main ( String [ ] args ) { new A ( ) . solve ( ) ; } Scanner in ; private void solve ( ) { in = new Scanner ( System . in ) ; int t = in . nextInt ( ) ; while ( t - - > 0 ) { int n = in . nextInt ( ) ; List < String > message = new ArrayList < > ( Arrays . asList ( in . next ( ) . split ( "" ) ) ) ; identifyMessage ( message , n ) ; } } private void identifyMessage ( List < String > list , int n ) { Collections . reverse ( list ) ; int leftSymbols = 0 ; for ( String character : list ) { if ( character . equals ( ")" ) ) { + + leftSymbols ; } else { break ; } } System . out . println ( leftSymbols > ( n - leftSymbols )   ? "Yes" : "No" ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
out1,out2 20abab 20abba


-------------------------------------


---> lineNum: 589
---> probID: codeforces_1216_A
---> inputs:
4
bbbb
---> outputs:
['2\nabba', '2\nabab\n']

import sys
from collections import defaultdict
def solve ( ) :
    n = int ( input ( ) )
    arr = input ( ) . strip ( )
    cnt = 0
    idx = [ ]
    for i in range ( 0 , n - 1 , 2 ) :
        if arr [ i ] == arr [ i + 1 ] :
            cnt += 1
            idx . append ( i )
    print ( cnt )
    arr = list ( arr )
    for index in idx :
        if arr [ index ] == 'a' :
            arr [ index ] = 'b'
        else :
            arr [ index ] = 'a'
    print ( '' . join ( arr ) )
def main ( ) :
    solve ( )
class Reader :
    def __init__ ( self ) :
        self . buffer = sys . stdin . read ( ) . splitlines ( )
        self . index = 0
    def read_line ( self ) :
        if self . index >= len ( self . buffer ) :
            return None
        line = self . buffer [ self . index ]
        self . index += 1
        return line
    def next ( self ) :
        line = self . read_line ( )
        return line . strip ( ) if line else None
    def next_int ( self ) :
        line = self . read_line ( )
        return int ( line . strip ( ) ) if line else None
    def next_float ( self ) :
        line = self . read_line ( )
        return float ( line . strip ( ) ) if line else None
    def next_list ( self ) :
        line = self . read_line ( )
        return line . strip ( ) . split ( ) if line else None
if __name__ == '__main__' :
    main ( )


---> console_out:
2
abab
 
MATCHED!! :D
 34%|███▎      | 589/1746 [07:56<01:26, 13.40it/s]Traceback (most recent call last):
  File "./junk/1703784161548_9789/main.py", line 48, in <module>
    GFG . main ( )
  File "./junk/1703784161548_9789/main.py", line 47, in main
    print ( GFG . countSubsequences ( arr , n , k ) )
  File "./junk/1703784161548_9789/main.py", line 28, in countSubsequences
    k = float ( math . log ( K ) )
NameError: name 'math' is not defined
out1,out2  90


-------------------------------------


---> lineNum: 590
---> probID: geeksforgeeks_301_A
---> inputs:

---> outputs:
9


class GFG :
    discard_count = 0
    @ staticmethod
    def power ( a , n ) :
        if n == 0 :
            return 1
        p = GFG . power ( a , n // 2 )
        p *= p
        if n % 2 == 1 :
            p *= a
        return p
    @ staticmethod
    def solve ( i , n , sum_ , k , a , prefix ) :
        global discard_count
        if sum_ > k :
            discard_count += GFG . power ( 2 , n - i )
            return
        if i == n :
            return
        rem = prefix [ n - 1 ] - prefix [ i ]
        if sum_ + a [ i ] + rem > k :
            GFG . solve ( i + 1 , n , sum_ + a [ i ] , k , a , prefix )
        if sum_ + rem > k :
            GFG . solve ( i + 1 , n , sum_ , k , a , prefix )
    @ staticmethod
    def countSubsequences ( arr , n , K ) :
        sum_ = 0.0
        k = float ( math . log ( K ) )
        prefix = [ 0.0 ] * n
        a = [ 0.0 ] * n
        for i in range ( n ) :
            a [ i ] = float ( math . log ( arr [ i ] ) )
            sum_ += a [ i ]
        prefix [ 0 ] = a [ 0 ]
        for i in range ( 1 , n ) :
            prefix [ i ] = prefix [ i - 1 ] + a [ i ]
        total = GFG . power ( 2 , n ) - 1
        if sum_ <= k :
            return int ( total )
        GFG . solve ( 0 , n , 0.0 , k , a , prefix )
        return int ( total - GFG . discard_count )
    @ staticmethod
    def main ( ) :
        arr = [ 4 , 8 , 7 , 2 ]
        n = len ( arr )
        k = 50
        print ( GFG . countSubsequences ( arr , n , k ) )
GFG . main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 591
---> probID: geeksforgeeks_1546_A
---> inputs:

---> outputs:
Both BSTs are identical


class Node :
    def __init__ ( self , data ) :
        self . data = data
        self . left = None
        self . right = None
def inorder ( root ) :
    if root is None :
        return
    inorder ( root . left )
    print ( root . data , end = " " )
    inorder ( root . right )
def isIdentical ( root1 , root2 ) :
    if root1 is None and root2 is None :
        return 1
    elif root1 is not None and root2 is None :
        return 0
    elif root1 is None and root2 is not None :
        return 0
    else :
        if root1 . data == root2 . data and isIdentical ( root1 . left , root2 . left ) == 1 and isIdentical ( root1 . right , root2 . right ) == 1 :
            return 1
        else :
            return 0
def main ( ) :
    root1 = Node ( 5 )
    root2 = Node ( 5 )
    root1 . left = Node ( 3 )
    root1 . right = Node ( 8 )
    root1 . left . left = Node ( 2 )
    root1 . left . right = Node ( 4 )
    root2 . left = Node ( 3 )
    root2 . right = Node ( 8 )
    root2 . left . left = Node ( 2 )
    root2 . left . right = Node ( 4 )
    if isIdentical ( root1 , root2 ) == 1 :
        print ( "Both BSTs are identical" )
    else :
        print ( "BSTs are not identical" )
if __name__ == "__main__" :
    main ( )


---> console_out:
Both BSTs are identical
 
MATCHED!! :D
 34%|███▍      | 591/1746 [07:56<01:27, 13.21it/s]

-------------------------------------


---> lineNum: 592
---> probID: aizu_p00549_A
---> inputs:
5
JOIOI
---> outputs:
6

import sys
n = int ( input ( ) )
arr = input ( ) . strip ( )
leftJ = [ 0 ] * ( n + 2 )
rightI = [ 0 ] * ( n + 2 )
for i in range ( 1 , n + 1 ) :
    leftJ [ i ] = leftJ [ i - 1 ]
    if arr [ i - 1 ] == 'J' :
        leftJ [ i ] += 1
    rightI [ n - i + 1 ] = rightI [ n - i + 2 ]
    if arr [ n - i ] == 'I' :
        rightI [ n - i + 1 ] += 1
sumI = 0
sumJ = 0
maxO = 0
total = 0
for i in range ( 1 , n + 1 ) :
    if arr [ i - 1 ] == 'O' :
        tmp = leftJ [ i - 1 ] * rightI [ i + 1 ]
        total += tmp
        sumJ += ( leftJ [ i - 1 ] + 1 ) * rightI [ i + 1 ]
        sumI += leftJ [ i - 1 ] * ( rightI [ i + 1 ] + 1 )
    else :
        tmp = leftJ [ i - 1 ] * rightI [ i ]
    maxO = max ( maxO , tmp )
total += maxO
total = max ( total , sumJ )
total = max ( total , sumI )
print ( total )


---> console_out:
6
 
MATCHED!! :D
out1,out2 10 80


-------------------------------------


---> lineNum: 593
---> probID: aizu_p02383_A
---> inputs:
1 2 4 8 16 32
SE
---> outputs:
8

import sys
class Dise :
    def __init__ ( self ) :
        self . surface = [ 0 ] * 6
        self . Top = 0
        self . Bottom = 0
        self . Right = 0
        self . Left = 0
        self . Front = 0
        self . Back = 0
    def setSurface ( self , SurfaceString ) :
        for i in range ( 6 ) :
            self . surface [ i ] = int ( SurfaceString [ i ] )
    def SetDice ( self , top , front , right ) :
        self . Top = top - 1
        self . Front = front - 1
        self . Right = right - 1
        self . Bottom = 5 - ( top - 1 )
        self . Back = 5 - ( front - 1 )
        self . Left = 5 - ( right - 1 )
    def RollDice ( self , RollString ) :
        for i in range ( len ( RollString ) ) :
            if RollString [ i ] == "W" :
                self . Bottom , self . Left , self . Top , self . Right = self . Left , self . Top , 5 - self . Bottom , 5 - self . Left
            elif RollString [ i ] == "S" :
                self . Bottom , self . Front , self . Top , self . Back = self . Front , self . Top , 5 - self . Bottom , 5 - self . Front
            elif RollString [ i ] == "E" :
                self . Bottom , self . Right , self . Top , self . Left = self . Right , self . Top , 5 - self . Bottom , 5 - self . Right
            else :
                self . Bottom , self . Back , self . Top , self . Front = self . Back , self . Top , 5 - self . Bottom , 5 - self . Back
        print ( self . surface [ self . Top ] )
def main ( ) :
    surface = sys . stdin . readline ( ) . split ( )
    order = sys . stdin . readline ( ) . strip ( ) . split ( )
    dice1 = Dise ( )
    dice1 . setSurface ( surface )
    dice1 . SetDice ( 1 , 2 , 3 )
    dice1 . RollDice ( order )
if __name__ == "__main__" :
    main ( )


---> console_out:
1
 
DIDN'T MATCH!! :(
 34%|███▍      | 593/1746 [07:56<02:15,  8.50it/s]

-------------------------------------


---> lineNum: 594
---> probID: geeksforgeeks_3578_A
---> inputs:

---> outputs:
1 2 3 4 5 

class node :
    def __init__ ( self ) :
        self . data = None
        self . next = None
def add ( data ) :
    newnode = node ( )
    newnode . data = data
    newnode . next = None
    return newnode
def printArr ( a , n ) :
    for i in range ( n ) :
        print ( a [ i ] , end = " " )
def findlength ( head ) :
    curr = head
    cnt = 0
    while curr != None :
        cnt += 1
        curr = curr . next
    return cnt
def convertArr ( head ) :
    len = findlength ( head )
    arr = [ 0 ] * len
    index = 0
    curr = head
    while curr != None :
        arr [ index ] = curr . data
        index += 1
        curr = curr . next
    printArr ( arr , len )
if __name__ == '__main__' :
    head = node ( )
    head = add ( 1 )
    head . next = add ( 2 )
    head . next . next = add ( 3 )
    head . next . next . next = add ( 4 )
    head . next . next . next . next = add ( 5 )
    convertArr ( head )


---> console_out:
1 2 3 4 5  
MATCHED!! :D


-------------------------------------


---> lineNum: 595
---> probID: geeksforgeeks_2237_A
---> inputs:

---> outputs:
Non-decreasing digits = 55


import numpy as np
def nonDecNums ( n ) :
    a = np . zeros ( ( n + 1 , 10 ) , dtype = int )
    for i in range ( 10 ) :
        a [ 0 ] [ i ] = 1
    for i in range ( 1 , n + 1 ) :
        a [ i ] [ 9 ] = 1
    for i in range ( 1 , n + 1 ) :
        for j in range ( 8 , - 1 , - 1 ) :
            a [ i ] [ j ] = a [ i - 1 ] [ j ] + a [ i ] [ j + 1 ]
    return a [ n ] [ 0 ]
if __name__ == '__main__' :
    n = 2
    print ( "Non-decreasing digits =" , nonDecNums ( n ) )


---> console_out:
Non-decreasing digits = 55
 
MATCHED!! :D
 34%|███▍      | 595/1746 [07:57<02:31,  7.59it/s]

-------------------------------------


---> lineNum: 596
---> probID: codeforces_1344_A
---> inputs:
6
1
14
2
1 -1
4
5 5 5 1
3
3 2 1
2
0 1
5
-239 -2 -100 -3 -11
---> outputs:
YES
YES
YES
NO
NO
YES

import sys
t = int ( sys . stdin . readline ( ) )
for _ in range ( t ) :
    n = int ( sys . stdin . readline ( ) )
    st = set ( )
    flag = 0
    a = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
    vis = [ 0 ] * n
    for i in range ( n ) :
        val = ( i + a [ i ] ) % n
        if val < 0 :
            val += n
        vis [ val ] = 1
    for i in range ( n ) :
        if vis [ i ] == 0 :
            flag = 1
            break
    if flag == 0 :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
YES
YES
YES
NO
NO
YES
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784162526_4823/main.py", line 2, in <module>
    class Solution :
  File "./junk/1703784162526_4823/main.py", line 3, in Solution
    def minMoves ( self , nums : List [ int ] ) -> int :
NameError: name 'List' is not defined
out1,out2  30


-------------------------------------


---> lineNum: 597
---> probID: leetcode_453_A
---> inputs:

---> outputs:
3

import numpy as np
class Solution :
    def minMoves ( self , nums : List [ int ] ) -> int :
        if len ( nums ) == 0 :
            return 0
        nums = np . sort ( nums )
        min_num = nums [ 0 ]
        ans = 0
        for num in nums :
            ans += num - min_num
        return ans
if __name__ == '__main__' :
    sObj = Solution ( )
    nums = [ 1 , 2 , 3 ]
    out = sObj . minMoves ( nums )
    print ( out )


---> console_out:
 
DIDN'T MATCH!! :(
 34%|███▍      | 597/1746 [07:57<02:42,  7.08it/s]Traceback (most recent call last):
  File "./junk/1703784162793_8288/main.py", line 2, in <module>
    a = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 3'
out1,out2  positive


-------------------------------------


---> lineNum: 598
---> probID: atcoder_AGC002_A
---> inputs:
1 3
---> outputs:
Positive

import sys
a = int ( input ( ) )
b = int ( input ( ) )
if a <= 0 and b >= 0 or a <= 0 and b >= 0 :
    print ( "Zero" )
elif a < 0 and b < 0 :
    print ( "Positive" if ( b - a + 1 ) % 2 == 0 else "Negative" )
elif a > 0 and b > 0 :
    print ( "Positive" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 599
---> probID: geeksforgeeks_3119_A
---> inputs:

---> outputs:
4


class geeks :
    def firstSetBit ( n ) :
        x = n & ( n - 1 )
        return ( n ^ x )
    n = 12
    print ( firstSetBit ( n ) )


---> console_out:
4
 
MATCHED!! :D
 34%|███▍      | 599/1746 [07:57<02:20,  8.15it/s]

-------------------------------------


---> lineNum: 600
---> probID: geeksforgeeks_3375_A
---> inputs:

---> outputs:
2


import sys
MAX_CHAR = 256
def maximumChars ( str ) :
    n = len ( str )
    res = - 1
    firstInd = [ - 1 ] * MAX_CHAR
    for i in range ( n ) :
        first_ind = firstInd [ ord ( str [ i ] ) ]
        if first_ind == - 1 :
            firstInd [ ord ( str [ i ] ) ] = i
        else :
            res = max ( res , abs ( i - first_ind - 1 ) )
    return res
def main ( ) :
    str = "abba"
    print ( maximumChars ( str ) )
if __name__ == "__main__" :
    main ( )


---> console_out:
2
 
MATCHED!! :D
 34%|███▍      | 600/1746 [07:57<02:20,  8.14it/s]

-------------------------------------


---> lineNum: 601
---> probID: codeforces_580_B
---> inputs:
4 5
75 5
0 100
150 20
75 1
---> outputs:
100

import sys
class Kefa :
    def __init__ ( self , money , friend ) :
        self . money = money
        self . friend = friend
def main ( ) :
    n , k = map ( int , input ( ) . split ( ) )
    pf = [ 0 ] * n
    lst = [ ]
    for i in range ( n ) :
        money , friend = map ( int , input ( ) . split ( ) )
        lst . append ( Kefa ( money , friend ) )
    lst . sort ( key = lambda x : x . money )
    ans = 0
    s = 0
    e = 0
    sm = 0
    while e < n :
        if lst [ e ] . money - lst [ s ] . money < k :
            sm += lst [ e ] . friend
            e += 1
        else :
            sm -= lst [ s ] . friend
            s += 1
        ans = max ( ans , sm )
    print ( ans )
if __name__ == '__main__' :
    main ( )


---> console_out:
100
 
MATCHED!! :D


-------------------------------------


---> lineNum: 602
---> probID: geeksforgeeks_1232_A
---> inputs:

---> outputs:
Area: 216.51
Volume: 272.71


import math
def findArea ( a ) :
    area = 5 * math . sqrt ( 3 ) * a * a
    return area
def findVolume ( a ) :
    volume = ( 5 / 12 ) * ( 3 + math . sqrt ( 5 ) ) * a * a * a
    return volume
a = 5
print ( "Area: {:.2f}" . format ( findArea ( a ) ) )
print ( "Volume: {:.2f}" . format ( findVolume ( a ) ) )


---> console_out:
Area: 216.51
Volume: 272.71
 
MATCHED!! :D
 34%|███▍      | 602/1746 [07:58<01:57,  9.71it/s]out1,out2  06


-------------------------------------


---> lineNum: 603
---> probID: projecteuler_p205_A
---> inputs:

---> outputs:
0.5731441

class p205 :
    PYRAMIDAL_DIE_PDF = [ 0 , 1 , 1 , 1 , 1 ]
    CUBIC_DIE_PDF = [ 0 , 1 , 1 , 1 , 1 , 1 , 1 ]
    def main ( self ) :
        print ( self . run ( ) )
    def run ( self ) :
        ninePyramidalPdf = [ 1 ]
        for i in range ( 9 ) :
            ninePyramidalPdf = self . convolve ( ninePyramidalPdf , self . PYRAMIDAL_DIE_PDF )
        sixCubicPdf = [ 1 ]
        for i in range ( 6 ) :
            sixCubicPdf = self . convolve ( sixCubicPdf , self . CUBIC_DIE_PDF )
        numer = 0
        for i in range ( len ( ninePyramidalPdf ) ) :
            numer += ninePyramidalPdf [ i ] * self . sum ( sixCubicPdf , 0 , i )
        denom = self . sum ( ninePyramidalPdf , 0 , len ( ninePyramidalPdf ) ) * self . sum ( sixCubicPdf , 0 , len ( sixCubicPdf ) )
        return "%.7f" % ( numer / denom )
    def convolve ( self , a , b ) :
        c = [ 0 ] * ( len ( a ) + len ( b ) - 1 )
        for i in range ( len ( a ) ) :
            for j in range ( len ( b ) ) :
                c [ i + j ] += a [ i ] * b [ j ]
        return c
    def sum ( self , array , start , end ) :
        return sum ( array [ start : end ] )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1703784163266_6680/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  90


-------------------------------------


---> lineNum: 604
---> probID: geeksforgeeks_2401_A
---> inputs:

---> outputs:
9


import java . util . * ;
import java . lang . * ;
import java . io . * ;
class GFG { public static void main ( String [ ] args ) { int N = 6 ; int Even = N / 2 ; int Odd = N - Even ; System . out . println ( Even * Odd ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
 35%|███▍      | 604/1746 [07:58<01:42, 11.11it/s]

-------------------------------------


---> lineNum: 605
---> probID: geeksforgeeks_2907_A
---> inputs:

---> outputs:
12


import math
def solve ( M , N , s ) :
    if N % s == 0 :
        N = N // s
    else :
        N = ( N // s ) + 1
    if M % s == 0 :
        M = M // s
    else :
        M = ( M // s ) + 1
    return M * N
if __name__ == '__main__' :
    N , M , s = 12 , 13 , 4
    print ( solve ( M , N , s ) )


---> console_out:
12
 
MATCHED!! :D


-------------------------------------


---> lineNum: 606
---> probID: geeksforgeeks_399_A
---> inputs:

---> outputs:
3


import math
def gcd ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )
def lcm ( a , b ) :
    return ( a * b ) // gcd ( a , b )
def countPairs ( arr , n ) :
    ans = 0
    for i in range ( n ) :
        for j in range ( i + 1 , n ) :
            if lcm ( arr [ i ] , arr [ j ] ) == gcd ( arr [ i ] , arr [ j ] ) :
                ans += 1
    return ans
arr = [ 1 , 1 , 1 ]
n = len ( arr )
print ( countPairs ( arr , n ) )


---> console_out:
3
 
MATCHED!! :D
 35%|███▍      | 606/1746 [07:58<01:32, 12.32it/s]Traceback (most recent call last):
  File "./junk/1703784163452_5889/main.py", line 5, in <module>
    _l = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 3 2 1 2 1'
out1,out2  yes


-------------------------------------


---> lineNum: 607
---> probID: codeforces_886_A
---> inputs:
1 3 2 1 2 1
---> outputs:
YES

import math
list = [ ]
sum = 0
for i in range ( 6 ) :
    _l = int ( input ( ) )
    list . append ( _l )
    sum += _l
for i in range ( 4 ) :
    for j in range ( i + 1 , 5 ) :
        for k in range ( j + 1 , 6 ) :
            sum1 = list [ i ] + list [ j ] + list [ k ]
            if sum1 == sum - sum1 :
                print ( "YES" )
                exit ( )
print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 608
---> probID: geeksforgeeks_1394_A
---> inputs:

---> outputs:
2147483648


import math
def _popcnt32 ( number ) :
    counter = 0
    while number > 0 :
        if number % 2 == 1 :
            counter += 1
        number = number // 2
    return counter
def maximize ( a ) :
    n = _popcnt32 ( a )
    res = 0
    for i in range ( 1 , n + 1 ) :
        res = res | ( 1 << ( 32 - i ) )
    return abs ( res )
a = 1
print ( maximize ( a ) )


---> console_out:
2147483648
 
MATCHED!! :D
 35%|███▍      | 608/1746 [07:58<01:26, 13.10it/s]

-------------------------------------


---> lineNum: 609
---> probID: codeforces_1712_A
---> inputs:
4
3 1
2 3 1
3 3
1 2 3
4 2
3 4 1 2
1 1
1
---> outputs:
1
0
2
0

import sys
for line in sys . stdin :
    t = int ( line )
    for _ in range ( t ) :
        n , k = map ( int , input ( ) . split ( ) )
        a = list ( map ( int , input ( ) . split ( ) ) )
        counter = 0
        for i in range ( k , n ) :
            if a [ i ] <= k :
                counter += 1
        print ( counter )


---> console_out:
1
0
2
0
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784163644_6700/main.py", line 2, in <module>
    num1 = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '3 5'
out1,out2  60


-------------------------------------


---> lineNum: 610
---> probID: codeforces_651_A
---> inputs:
3 5
---> outputs:
6

import sys
num1 = int ( input ( ) )
num2 = int ( input ( ) )
counter = 0
while num1 != 0 and num2 != 0 :
    if num1 == 1 and num2 == 1 :
        break
    if num1 <= num2 :
        num1 += 1
        num2 -= 2
    else :
        num1 -= 2
        num2 += 1
    counter += 1
print ( counter )


---> console_out:
 
DIDN'T MATCH!! :(
 35%|███▍      | 610/1746 [07:58<01:21, 13.98it/s]Traceback (most recent call last):
  File "./junk/1703784163704_2688/main.py", line 2, in <module>
    class Solution :
  File "./junk/1703784163704_2688/main.py", line 3, in Solution
    def xorQueries ( self , arr : List [ int ] , queries : List [ List [ int ] ] ) -> List [ int ] :
NameError: name 'List' is not defined
out1,out2  207014080


-------------------------------------


---> lineNum: 611
---> probID: leetcode_1310_A
---> inputs:

---> outputs:
[2,7,14,8]

import numpy as np
class Solution :
    def xorQueries ( self , arr : List [ int ] , queries : List [ List [ int ] ] ) -> List [ int ] :
        res = np . zeros ( len ( queries ) , dtype = int )
        for i in range ( 1 , len ( arr ) ) :
            arr [ i ] ^= arr [ i - 1 ]
        for i in range ( len ( queries ) ) :
            q = queries [ i ]
            res [ i ] = arr [ q [ 0 ] - 1 ] ^ arr [ q [ 1 ] ] if q [ 0 ] > 0 else arr [ q [ 1 ] ]
        return res
sObj = Solution ( )
arr = [ 1 , 3 , 4 , 8 ]
queries = [ [ 0 , 1 ] , [ 1 , 2 ] , [ 0 , 3 ] , [ 3 , 3 ] ]
out = sObj . xorQueries ( arr , queries )
print ( out )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 612
---> probID: geeksforgeeks_4157_A
---> inputs:

---> outputs:
e


def encodedChar ( str , k ) :
    expand = ""
    temp = ""
    freq = 0
    i = 0
    while i < len ( str ) :
        temp = ""
        freq = 0
        while i < len ( str ) and str [ i ] . isalpha ( ) :
            temp += str [ i ]
            i += 1
        while i < len ( str ) and str [ i ] . isdigit ( ) :
            freq = freq * 10 + int ( str [ i ] )
            i += 1
        for j in range ( freq ) :
            expand += temp
    if freq == 0 :
        expand += temp
    return expand [ k - 1 ]
str = "ab4c12ed3"
k = 21
print ( encodedChar ( str , k ) )


---> console_out:
e
 
MATCHED!! :D
 35%|███▌      | 612/1746 [07:58<01:57,  9.64it/s]

-------------------------------------


---> lineNum: 613
---> probID: geeksforgeeks_4561_A
---> inputs:

---> outputs:
YES


import sys
def printPossible ( a , b , c ) :
    if ( a + b + c ) % 2 != 0 or a + b < c :
        print ( "NO" )
    else :
        print ( "YES" )
def main ( ) :
    a , b , c = 2 , 4 , 2
    printPossible ( a , b , c )
if __name__ == "__main__" :
    main ( )


---> console_out:
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 614
---> probID: geeksforgeeks_1048_A
---> inputs:

---> outputs:
-3


def summation ( n ) :
    abs_sum = n * ( n + 1 ) // 2
    sign = 1 if ( n + 1 ) % 2 == 0 else - 1
    result_sum = sign * abs_sum
    return result_sum
if __name__ == '__main__' :
    N = 2
    print ( summation ( N ) )


---> console_out:
-3
 
MATCHED!! :D
 35%|███▌      | 614/1746 [07:59<01:44, 10.81it/s]

-------------------------------------


---> lineNum: 615
---> probID: geeksforgeeks_1640_A
---> inputs:

---> outputs:
Before sort
-6 -3 -1 2 4 5 
After sort
1 4 9 16 25 36 

import math
def sortSquares ( arr ) :
    n = len ( arr )
    for i in range ( n ) :
        arr [ i ] = arr [ i ] * arr [ i ]
    arr . sort ( )
if __name__ == '__main__' :
    arr = [ - 6 , - 3 , - 1 , 2 , 4 , 5 ]
    n = len ( arr )
    print ( "Before sort" )
    for i in range ( n ) :
        print ( arr [ i ] , end = " " )
    sortSquares ( arr )
    print ( "" )
    print ( "After sort" )
    for i in range ( n ) :
        print ( arr [ i ] , end = " " )


---> console_out:
Before sort
-6 -3 -1 2 4 5 
After sort
1 4 9 16 25 36  
MATCHED!! :D


-------------------------------------


---> lineNum: 616
---> probID: codeforces_500_A
---> inputs:
8 4
1 2 1 2 1 2 1
---> outputs:
YES

import sys
n , t = map ( int , input ( ) . split ( ) )
k , pos = 0 , 1
arr = list ( map ( int , input ( ) . split ( ) ) )
while pos < t :
    k = pos + arr [ pos - 1 ]
    pos = k
if pos == t :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
YES
 
MATCHED!! :D
 35%|███▌      | 616/1746 [07:59<01:35, 11.85it/s]

-------------------------------------


---> lineNum: 617
---> probID: aizu_p00344_A
---> inputs:
3
1 1 1
---> outputs:
3

import sys
N = int ( sys . stdin . readline ( ) )
a = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
indeg = [ 0 ] * N
used = [ False ] * N
for i in range ( N ) :
    indeg [ ( i + a [ i ] ) % N ] += 1
for i in range ( N ) :
    j = i
    while not used [ j ] and indeg [ j ] == 0 :
        used [ j ] = True
        j = ( j + a [ j ] ) % N
        indeg [ j ] -= 1
print ( sum ( 1 for x in indeg if x != 0 ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 618
---> probID: geeksforgeeks_1738_A
---> inputs:

---> outputs:
The number is a triangular number


import math
def isTriangular ( num ) :
    if num < 0 :
        return False
    c = ( - 2 * num )
    b = 1
    a = 1
    d = ( b * b ) - ( 4 * a * c )
    if d < 0 :
        return False
    root1 = ( - b + math . sqrt ( d ) ) / ( 2 * a )
    root2 = ( - b - math . sqrt ( d ) ) / ( 2 * a )
    if root1 > 0 and math . floor ( root1 ) == root1 :
        return True
    if root2 > 0 and math . floor ( root2 ) == root2 :
        return True
    return False
num = 55
if isTriangular ( num ) :
    print ( "The number is a triangular number" )
else :
    print ( "The number is NOT a triangular number" )


---> console_out:
The number is a triangular number
 
MATCHED!! :D
 35%|███▌      | 618/1746 [07:59<01:29, 12.57it/s]

-------------------------------------


---> lineNum: 619
---> probID: geeksforgeeks_2789_A
---> inputs:

---> outputs:
4000

import sys
def printNumberWithDR ( k , d ) :
    if d == 0 and k != 1 :
        sys . stdout . write ( "-1" )
    else :
        sys . stdout . write ( str ( d ) )
        k -= 1
        while k > 0 :
            sys . stdout . write ( "0" )
            k -= 1
if __name__ == "__main__" :
    k = 4
    d = 4
    printNumberWithDR ( k , d )


---> console_out:
4000 
MATCHED!! :D


-------------------------------------


---> lineNum: 620
---> probID: geeksforgeeks_4358_A
---> inputs:

---> outputs:
9 8 7 
6 5 4 
3 2 1 


import numpy as np
def rotateMatrix ( mat ) :
    N = 3
    for i in range ( N - 1 , - 1 , - 1 ) :
        for j in range ( N - 1 , - 1 , - 1 ) :
            print ( mat [ i ] [ j ] , end = " " )
        print ( )
mat = np . array ( [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] )
rotateMatrix ( mat )


---> console_out:
9 8 7 
6 5 4 
3 2 1 
 
MATCHED!! :D
 36%|███▌      | 620/1746 [07:59<01:58,  9.47it/s]

-------------------------------------


---> lineNum: 621
---> probID: aizu_p02137_A
---> inputs:
5700
---> outputs:
5500

import sys
p = int ( input ( ) )
print ( p // 500 * 500 )


---> console_out:
5500
 
MATCHED!! :D


-------------------------------------


---> lineNum: 622
---> probID: geeksforgeeks_2228_A
---> inputs:

---> outputs:
60


import math
def getProduct ( n ) :
    product = 1
    while n != 0 :
        product = product * ( n % 10 )
        n = n // 10
    return product
n = 4513
print ( getProduct ( n ) )


---> console_out:
60
 
MATCHED!! :D
 36%|███▌      | 622/1746 [07:59<01:57,  9.57it/s]

-------------------------------------


---> lineNum: 623
---> probID: aizu_p00229_A
---> inputs:
3 2 30 3 26 226
9 0 18 3 20 118
5 5 12 2 15 203
7 4 19 2 22 197
7 4 24 4 17 209
0 0 0 0 0 0
---> outputs:
127
793
414
629
617

import sys
class Slot :
    def __init__ ( self , b , r , g , c , s , t ) :
        self . b = b
        self . r = r
        self . g = g
        self . c = c
        self . s = s
        self . t = t
    def getLost ( self ) :
        return ( self . t - 5 * self . b - 3 * self . r - self . s ) * 3 + ( 5 * self . b + 3 * self . r ) * 2
    def getBenefit ( self ) :
        return self . b * 15 + self . r * 15 + self . g * 7 + self . c * 2 + ( self . b * 5 + self . r * 3 ) * 15
    def isEnd ( self ) :
        return self . b + self . r + self . g + self . c + self . s + self . t == 0
def main ( ) :
    while True :
        line = sys . stdin . readline ( ) . strip ( )
        if not line :
            break
        b , r , g , c , s , t = map ( int , line . split ( ) )
        slot = Slot ( b , r , g , c , s , t )
        if slot . isEnd ( ) :
            break
        print ( 100 + slot . getBenefit ( ) - slot . getLost ( ) )
if __name__ == '__main__' :
    main ( )


---> console_out:
127
793
414
629
617
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784165080_4895/main.py", line 15, in <module>
    res = ( res * comb [ total + color [ i ] - 1 ] [ color [ i ] - 1 ] ) % mod
IndexError: list index out of range
out1,out2  30


-------------------------------------


---> lineNum: 624
---> probID: codeforces_553_A
---> inputs:
3
2
2
1
---> outputs:
3

import sys
mod = 1000000007
MAXN = 1010
comb = [ [ 0 for j in range ( MAXN ) ] for i in range ( MAXN ) ]
comb [ 0 ] [ 0 ] = 1
for i in range ( 1 , MAXN ) :
    comb [ i ] [ 0 ] = 1
    for j in range ( 1 , i + 1 ) :
        comb [ i ] [ j ] = ( comb [ i - 1 ] [ j ] + comb [ i - 1 ] [ j - 1 ] ) % mod
K = int ( input ( ) )
color = list ( map ( int , input ( ) . split ( ) ) )
res = 1
total = 0
for i in range ( K ) :
    res = ( res * comb [ total + color [ i ] - 1 ] [ color [ i ] - 1 ] ) % mod
    total += color [ i ]
print ( res )
sys . exit ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(
 36%|███▌      | 624/1746 [08:00<03:03,  6.10it/s]

-------------------------------------


---> lineNum: 625
---> probID: geeksforgeeks_2043_A
---> inputs:

---> outputs:
85.98229710000001


import math
class GFG :
    PI = 3.14159265
    @ staticmethod
    def length_rope ( r ) :
        return ( ( 2 * GFG . PI * r ) + 6 * r )
r = 7
print ( GFG . length_rope ( r ) )


---> console_out:
85.98229710000001
 
MATCHED!! :D


-------------------------------------


---> lineNum: 626
---> probID: geeksforgeeks_2413_A
---> inputs:

---> outputs:
Is 4562 a Palindrome number? -> False
Is 2002 a Palindrome number? -> True


def reverseDigits ( num ) :
    rev_num = 0
    while num > 0 :
        rev_num = rev_num * 10 + num % 10
        num = num // 10
    return rev_num
def isPalindrome ( n ) :
    rev_n = reverseDigits ( n )
    if rev_n == n :
        return 1
    else :
        return 0
n = 4562
print ( "Is" , n , "a Palindrome number? ->" , "True" if isPalindrome ( n ) == 1 else "False" )
n = 2002
print ( "Is" , n , "a Palindrome number? ->" , "True" if isPalindrome ( n ) == 1 else "False" )


---> console_out:
Is 4562 a Palindrome number? -> False
Is 2002 a Palindrome number? -> True
 
MATCHED!! :D
 36%|███▌      | 626/1746 [08:00<02:30,  7.46it/s]

-------------------------------------


---> lineNum: 627
---> probID: leetcode_415_A
---> inputs:

---> outputs:
134

class Solution :
    def addStrings ( self , num1 : str , num2 : str ) -> str :
        sb = [ ]
        carry = 0
        i = len ( num1 ) - 1
        j = len ( num2 ) - 1
        while i >= 0 or j >= 0 or carry == 1 :
            x = int ( num1 [ i ] ) if i >= 0 else 0
            y = int ( num2 [ j ] ) if j >= 0 else 0
            sb . append ( str ( ( x + y + carry ) % 10 ) )
            carry = ( x + y + carry ) // 10
            i -= 1
            j -= 1
        return '' . join ( sb [ : : - 1 ] )
sObj = Solution ( )
num1 = "11"
num2 = "123"
out = sObj . addStrings ( num1 , num2 )
print ( out )


---> console_out:
134
 
MATCHED!! :D


-------------------------------------


---> lineNum: 628
---> probID: geeksforgeeks_265_A
---> inputs:

---> outputs:
Below are all perfect numbers till 10000
6 is a perfect number
28 is a perfect number
496 is a perfect number
8128 is a perfect number


def isPerfect ( n ) :
    sum = 1
    i = 2
    while i * i <= n :
        if n % i == 0 :
            if i * i != n :
                sum = sum + i + n // i
            else :
                sum = sum + i
        i += 1
    if sum == n and n != 1 :
        return True
    return False
print ( "Below are all perfect numbers till 10000" )
for n in range ( 2 , 10000 ) :
    if isPerfect ( n ) :
        print ( n , "is a perfect number" )


---> console_out:
Below are all perfect numbers till 10000
6 is a perfect number
28 is a perfect number
496 is a perfect number
8128 is a perfect number
 
MATCHED!! :D
 36%|███▌      | 628/1746 [08:00<02:28,  7.53it/s]

-------------------------------------


---> lineNum: 629
---> probID: geeksforgeeks_77_A
---> inputs:

---> outputs:
4 8 9 16 25 27 32 36 49 64 81 

def isPower ( n ) :
    for x in range ( 2 , int ( n ** 0.5 ) + 1 ) :
        p = x
        while p <= n :
            p *= x
            if p == n :
                return True
    return False
if __name__ == '__main__' :
    for i in range ( 2 , 100 ) :
        if isPower ( i ) :
            print ( i , end = ' ' )


---> console_out:
4 8 9 16 25 27 32 36 49 64 81  
MATCHED!! :D


-------------------------------------


---> lineNum: 630
---> probID: geeksforgeeks_76_A
---> inputs:

---> outputs:
4 8 9 16 25 27 32 36 49 64 81 

def isPower ( n ) :
    for x in range ( 2 , int ( n ** 0.5 ) + 1 ) :
        y = 2
        p = x ** y
        while p <= n and p > 0 :
            if p == n :
                return True
            y += 1
            p = x ** y
    return False
if __name__ == '__main__' :
    for i in range ( 2 , 100 ) :
        if isPower ( i ) :
            print ( i , end = ' ' )


---> console_out:
4 8 9 16 25 27 32 36 49 64 81  
MATCHED!! :D
 36%|███▌      | 630/1746 [08:00<02:04,  8.97it/s]Traceback (most recent call last):
  File "./junk/1703784166112_1922/main.py", line 24, in <module>
    print ( findTwoNumbers ( sum , gcd ) )
  File "./junk/1703784166112_1922/main.py", line 17, in findTwoNumbers
    if gcd == __gcd ( gcd , sum - gcd ) :
NameError: name '__gcd' is not defined
out1,out2  a20b60


-------------------------------------


---> lineNum: 631
---> probID: geeksforgeeks_2002_A
---> inputs:

---> outputs:
a = 2, b = 6


import math
def gcd ( a , b ) :
    if b == 0 :
        return a
    return gcd ( b , a % b )
def findTwoNumbers ( sum , gcd ) :
    if gcd == 0 :
        return - 1
    if gcd == sum :
        return - 1
    if gcd > sum :
        return - 1
    if gcd == 1 :
        return - 1
    if gcd == sum - gcd :
        return - 1
    if gcd == __gcd ( gcd , sum - gcd ) :
        return "a = " + str ( min ( gcd , sum - gcd ) ) + ", b = " + str ( int ( sum - min ( gcd , sum - gcd ) ) )
    else :
        return - 1
if __name__ == "__main__" :
    sum = 8
    gcd = 2
    print ( findTwoNumbers ( sum , gcd ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 632
---> probID: codeforces_1623_A
---> inputs:
5
10 10 6 1 2 8
10 10 9 9 1 1
9 8 5 6 2 1
6 9 2 2 5 8
2 2 1 1 2 1
---> outputs:
7
10
9
3
0

import sys
def time ( m , n , rb , cb , rd , cd ) :
    t = 0
    dr = 1
    dc = 1
    while True :
        if rb == rd or cb == cd :
            return t
        t += 1
        if ( rb + dr ) <= 0 or ( rb + dr > m ) :
            dr *= - 1
        if ( cb + dc ) <= 0 or ( cb + dc > n ) :
            dc *= - 1
        rb += dr
        cb += dc
if __name__ == "__main__" :
    testCases = int ( sys . stdin . readline ( ) )
    for i in range ( testCases ) :
        input = sys . stdin . readline ( ) . split ( )
        t = time ( int ( input [ 0 ] ) , int ( input [ 1 ] ) , int ( input [ 2 ] ) , int ( input [ 3 ] ) , int ( input [ 4 ] ) , int ( input [ 5 ] ) )
        print ( t )


---> console_out:
7
10
9
3
0
 
MATCHED!! :D
 36%|███▌      | 632/1746 [08:01<01:48, 10.25it/s]

-------------------------------------


---> lineNum: 633
---> probID: aizu_p00564_A
---> inputs:
10 3 100 5 180
---> outputs:
360

import sys
n , a , b , c , d = map ( int , sys . stdin . readline ( ) . split ( ) )
ans1 , ans2 = 100000 , 1000000
for i in range ( 1 , n + 1 ) :
    if a * i >= n :
        ans1 = i * b
        break
for i in range ( 1 , n + 1 ) :
    if c * i >= n :
        ans2 = i * d
        break
print ( min ( ans1 , ans2 ) )


---> console_out:
360
 
MATCHED!! :D


-------------------------------------


---> lineNum: 634
---> probID: geeksforgeeks_1975_A
---> inputs:

---> outputs:
4


import collections
def countSetBits ( n ) :
    count = 0
    while n > 0 :
        n &= ( n - 1 )
        count += 1
    return count
def totalPairs ( arr , n ) :
    m = collections . defaultdict ( int )
    for i in range ( n ) :
        count = countSetBits ( arr [ i ] )
        m [ count ] += 1
    result = 0
    for value in m . values ( ) :
        result += ( value * ( value - 1 ) ) // 2
    return result
arr = [ 7 , 5 , 3 , 9 , 1 , 2 ]
n = len ( arr )
print ( totalPairs ( arr , n ) )


---> console_out:
4
 
MATCHED!! :D
 36%|███▋      | 634/1746 [08:01<01:42, 10.86it/s]

-------------------------------------


---> lineNum: 635
---> probID: geeksforgeeks_1723_A
---> inputs:

---> outputs:
2 th centered hexadecagonal number :  17
12 th centered hexadecagonal number :  1057


import math
def center_hexadecagonal_num ( n ) :
    return 8 * n * n - 8 * n + 1
if __name__ == '__main__' :
    n = 2
    print ( n , "th centered hexadecagonal number:" , center_hexadecagonal_num ( n ) )
    n = 12
    print ( n , "th centered hexadecagonal number:" , center_hexadecagonal_num ( n ) )


---> console_out:
2 th centered hexadecagonal number: 17
12 th centered hexadecagonal number: 1057
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784166464_1376/main.py", line 2, in <module>
    Q , H , S , D , N = map ( int , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 5, got 4)
out1,out2  1500


-------------------------------------


---> lineNum: 636
---> probID: atcoder_AGC019_A
---> inputs:
20 30 70 90
3
---> outputs:
150

import sys
Q , H , S , D , N = map ( int , input ( ) . split ( ) )
onePrice = min ( min ( Q * 4 , H * 2 ) , S )
if onePrice * 2 <= D :
    print ( N * onePrice )
else :
    print ( ( N // 2 ) * D + ( N % 2 ) * onePrice )


---> console_out:
 
DIDN'T MATCH!! :(
 36%|███▋      | 636/1746 [08:01<01:32, 12.01it/s]

-------------------------------------


---> lineNum: 637
---> probID: geeksforgeeks_2785_A
---> inputs:

---> outputs:
2


def countNumbers ( L , R , K ) :
    if K == 9 :
        K = 0
    totalnumbers = R - L + 1
    factor9 = totalnumbers // 9
    rem = totalnumbers % 9
    ans = factor9
    for i in range ( R , R - rem , - 1 ) :
        rem1 = i % 9
        if rem1 == K :
            ans += 1
    return ans
L = 10
R = 22
K = 3
print ( countNumbers ( L , R , K ) )


---> console_out:
2
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784166588_3703/main.py", line 3, in <module>
    a , b , c , d , e , f = map ( int , line . split ( ) )
ValueError: not enough values to unpack (expected 6, got 1)
out1,out2  60


-------------------------------------


---> lineNum: 638
---> probID: codeforces_1271_A
---> inputs:
4
5
6
3
1
2
---> outputs:
6

import sys
for line in sys . stdin :
    a , b , c , d , e , f = map ( int , line . split ( ) )
    y = min ( c , b )
    x = a
    if y + x <= d :
        print ( y * f + x * e )
    elif f >= e :
        print ( min ( y , d ) * f + ( d - min ( y , d ) ) * e )
    elif e >= f :
        print ( min ( x , d ) * e + ( d - min ( x , d ) ) * f )


---> console_out:
 
DIDN'T MATCH!! :(
 37%|███▋      | 638/1746 [08:01<01:25, 13.01it/s]

-------------------------------------


---> lineNum: 639
---> probID: geeksforgeeks_4951_A
---> inputs:

---> outputs:
3


import numpy as np
def Solution ( A ) :
    ans = 2
    n = len ( A )
    if n <= 2 :
        return n
    llap = np . ones ( n , dtype = int ) * 2
    A = np . sort ( A )
    for j in range ( n - 2 , - 1 , - 1 ) :
        i = j - 1
        k = j + 1
        while i >= 0 and k < n :
            if A [ i ] + A [ k ] == 2 * A [ j ] :
                llap [ j ] = max ( llap [ k ] + 1 , llap [ j ] )
                ans = max ( ans , llap [ j ] )
                i -= 1
                k += 1
            elif A [ i ] + A [ k ] < 2 * A [ j ] :
                k += 1
            else :
                i -= 1
    return ans
a = [ 9 , 4 , 7 , 2 , 10 ]
print ( Solution ( a ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 640
---> probID: geeksforgeeks_358_A
---> inputs:

---> outputs:
2


import collections
def minimumChanges ( arr , n , d ) :
    maxFreq = - 1
    freq = collections . defaultdict ( int )
    for i in range ( n ) :
        a0 = arr [ i ] - ( i * d )
        freq [ a0 ] += 1
        if freq [ a0 ] > maxFreq :
            maxFreq = freq [ a0 ]
    return n - maxFreq
if __name__ == '__main__' :
    n , d = 5 , 1
    arr = [ 1 , 3 , 3 , 4 , 6 ]
    print ( minimumChanges ( arr , n , d ) )


---> console_out:
2
 
MATCHED!! :D
 37%|███▋      | 640/1746 [08:01<01:56,  9.48it/s]

-------------------------------------


---> lineNum: 641
---> probID: codeforces_106_B
---> inputs:
5
2100 512 150 200
2000 2048 240 350
2300 1024 200 320
2500 2048 80 300
2000 512 180 150
---> outputs:
4

import sys
n = int ( input ( ) )
vec = [ ]
for i in range ( n ) :
    vec . append ( list ( map ( int , input ( ) . split ( ) ) ) )
ans = 500
ansprice = 20000
for i in range ( n ) :
    fl = 1
    for j in range ( n ) :
        if vec [ i ] [ 0 ] < vec [ j ] [ 0 ] and vec [ i ] [ 1 ] < vec [ j ] [ 1 ] and vec [ i ] [ 2 ] < vec [ j ] [ 2 ] :
            fl = 0
    if fl == 1 :
        if vec [ i ] [ 3 ] < ansprice :
            ansprice = vec [ i ] [ 3 ]
            ans = i + 1
print ( ans )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 642
---> probID: geeksforgeeks_4668_A
---> inputs:

---> outputs:
1


import numpy as np
def countPoints ( n , m , a , b , x , y ) :
    a = np . sort ( a )
    b = np . sort ( b )
    j = 0
    count = 0
    for i in range ( n ) :
        while j < m :
            if a [ i ] + y < b [ j ] :
                break
            if b [ j ] >= a [ i ] - x and b [ j ] <= a [ i ] + y :
                count += 1
                j += 1
                break
            else :
                j += 1
    return count
if __name__ == '__main__' :
    x , y = 1 , 4
    a = np . array ( [ 1 , 5 ] )
    n = len ( a )
    b = np . array ( [ 1 , 1 , 2 ] )
    m = len ( b )
    print ( countPoints ( n , m , a , b , x , y ) )


---> console_out:
1
 
MATCHED!! :D
 37%|███▋      | 642/1746 [08:02<02:15,  8.16it/s]

-------------------------------------


---> lineNum: 643
---> probID: geeksforgeeks_4746_A
---> inputs:

---> outputs:
14


def multiplyWith3Point5 ( x ) :
    return ( x << 1 ) + x + ( x >> 1 )
x = 4
print ( multiplyWith3Point5 ( x ) )


---> console_out:
14
 
MATCHED!! :D


-------------------------------------


---> lineNum: 644
---> probID: codeforces_1084_B
---> inputs:
3 3
4 3 5
---> outputs:
3

import sys
def main ( ) :
    n , s = map ( int , input ( ) . split ( ) )
    a = list ( map ( int , input ( ) . split ( ) ) )
    ans = solve ( n , a , s )
    print ( ans )
def solve ( n , a , s ) :
    ans = - 1
    sum = 0
    r = sys . maxsize
    for i in range ( n ) :
        sum += a [ i ]
        r = min ( a [ i ] , r )
    if sum < s :
        return - 1
    l = 0
    while l <= r :
        mid = ( l + r ) // 2
        if possible ( n , a , s , mid ) :
            ans = mid
            l = mid + 1
        else :
            r = mid - 1
    return ans
def possible ( n , a , s , least ) :
    sum = 0
    for i in range ( n ) :
        sum += ( a [ i ] - least )
    if s <= sum :
        return True
    return False
if __name__ == "__main__" :
    main ( )


---> console_out:
3
 
MATCHED!! :D
 37%|███▋      | 644/1746 [08:02<01:55,  9.57it/s]

-------------------------------------


---> lineNum: 645
---> probID: geeksforgeeks_3413_A
---> inputs:

---> outputs:
5


import math
def longestSubstring ( s ) :
    cnt = 1
    maxi = 1
    n = len ( s )
    for i in range ( 1 , n ) :
        if s [ i ] != s [ i - 1 ] :
            cnt += 1
        else :
            maxi = max ( cnt , maxi )
            cnt = 1
    maxi = max ( cnt , maxi )
    return maxi
s = "ccccdeededff"
print ( longestSubstring ( s ) )


---> console_out:
5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 646
---> probID: atcoder_ABC068_D
---> inputs:
0
---> outputs:
50
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49


import sys
class Main :
    def main ( self ) :
        main = Main ( )
        main . run ( )
    def run ( self ) :
        k = int ( input ( ) )
        n = 50
        sum = k // n
        amari = k % n
        a = [ 0 ] * 50
        for i in range ( n ) :
            a [ i ] = i + sum
        for i in range ( amari ) :
            a [ n - 1 - i ] += 1
        print ( n )
        for i in range ( n ) :
            sys . stdout . write ( str ( a [ i ] ) + ( " " if i != n - 1 else "\n" ) )
if __name__ == "__main__" :
    Main ( ) . main ( )


---> console_out:
50
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
 
MATCHED!! :D
 37%|███▋      | 646/1746 [08:02<01:42, 10.68it/s]

-------------------------------------


---> lineNum: 647
---> probID: geeksforgeeks_2111_A
---> inputs:

---> outputs:
Count of numbers from 1 to 107 is 17
Count of numbers from 1 to 1264 is 315


def zeroUpto ( digits ) :
    first = int ( ( pow ( 10 , digits ) - 1 ) / 9 )
    second = int ( ( pow ( 9 , digits ) - 1 ) / 8 )
    return 9 * ( first - second )
def toInt ( c ) :
    return ord ( c ) - 48
def countZero ( num ) :
    k = len ( num )
    total = zeroUpto ( k - 1 )
    non_zero = 0
    for i in range ( len ( num ) ) :
        if num [ i ] == '0' :
            non_zero -= 1
            break
        non_zero += ( toInt ( num [ i ] ) - 1 ) * ( pow ( 9 , k - 1 - i ) )
    no = 0
    remaining = 0
    calculatedUpto = 0
    for i in range ( len ( num ) ) :
        no = no * 10 + ( toInt ( num [ i ] ) )
        if i != 0 :
            calculatedUpto = calculatedUpto * 10 + 9
    remaining = no - calculatedUpto
    ans = zeroUpto ( k - 1 ) + ( remaining - non_zero - 1 )
    return ans
if __name__ == '__main__' :
    num = "107"
    print ( "Count of numbers from 1 to" , num , "is" , countZero ( num ) )
    num = "1264"
    print ( "Count of numbers from 1 to" , num , "is" , countZero ( num ) )


---> console_out:
Count of numbers from 1 to 107 is 17
Count of numbers from 1 to 1264 is 315
 
MATCHED!! :D


-------------------------------------


---> lineNum: 648
---> probID: geeksforgeeks_2314_A
---> inputs:

---> outputs:
58.1481


import math
def cone ( a ) :
    if a < 0 :
        return - 1
    r = ( a * math . sqrt ( 2 ) ) / 3
    h = ( 2 * a ) / 3
    V = 3.14 * math . pow ( r , 2 ) * h
    return V
a = 5
print ( "{:.4f}" . format ( cone ( a ) ) )


---> console_out:
58.1481
 
MATCHED!! :D
 37%|███▋      | 648/1746 [08:02<01:32, 11.82it/s]

-------------------------------------


---> lineNum: 649
---> probID: geeksforgeeks_2904_A
---> inputs:

---> outputs:
Prime


import math
def Prime ( n ) :
    if n == 1 :
        return False
    for i in range ( 2 , int ( math . sqrt ( n ) ) + 1 ) :
        if n % i == 0 :
            return False
    return True
def checkSumPrime ( str ) :
    summ = 0
    for i in range ( 1 , len ( str ) ) :
        summ += abs ( ord ( str [ i - 1 ] ) - ord ( str [ i ] ) )
    if Prime ( summ ) :
        return True
    else :
        return False
num = 142
str = "142"
if checkSumPrime ( str ) :
    print ( "Prime" )
else :
    print ( "Not Prime" )


---> console_out:
Prime
 
MATCHED!! :D


-------------------------------------


---> lineNum: 650
---> probID: geeksforgeeks_5011_A
---> inputs:

---> outputs:
2.718
2.929


import math
class GFG :
    def sum ( self , n ) :
        if n < 2 :
            return 1
        else :
            return 1 / n + self . sum ( n - 1 )
g = GFG ( )
print ( "{:.3f}" . format ( g . sum ( 8 ) ) )
print ( "{:.3f}" . format ( g . sum ( 10 ) ) )


---> console_out:
2.718
2.929
 
MATCHED!! :D
 37%|███▋      | 650/1746 [08:02<01:25, 12.86it/s]

-------------------------------------


---> lineNum: 651
---> probID: geeksforgeeks_3274_A
---> inputs:

---> outputs:
1


def countElements ( p , n ) :
    ans = 0
    for i in range ( 1 , n - 1 ) :
        if p [ i - 1 ] > p [ i ] and p [ i ] > p [ i + 1 ] :
            ans += 1
        elif p [ i - 1 ] < p [ i ] and p [ i ] < p [ i + 1 ] :
            ans += 1
    return ans
p = [ 2 , 5 , 1 , 3 , 4 ]
n = len ( p )
print ( countElements ( p , n ) )


---> console_out:
1
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784167910_1845/main.py", line 3, in <module>
    b = input ( ) [ 0 ]
EOFError: EOF when reading a line
out1,out2  


-------------------------------------


---> lineNum: 652
---> probID: atcoder_ABC078_A
---> inputs:
A B
---> outputs:
<

import sys
a = input ( ) [ 0 ]
b = input ( ) [ 0 ]
if a > b :
    print ( '>' )
elif a == b :
    print ( '=' )
else :
    print ( '<' )


---> console_out:
 
MATCHED!! :D
 37%|███▋      | 652/1746 [08:02<01:22, 13.27it/s]

-------------------------------------


---> lineNum: 653
---> probID: geeksforgeeks_1228_A
---> inputs:

---> outputs:
Volume of triangular prism:  972.0


import math
def findVolume ( l , b , h ) :
    volume = ( l * b * h ) / 2
    return volume
l = 18
b = 12
h = 9
print ( "Volume of triangular prism:" , findVolume ( l , b , h ) )


---> console_out:
Volume of triangular prism: 972.0
 
MATCHED!! :D
out1,out2 1010 820


-------------------------------------


---> lineNum: 654
---> probID: codeforces_462_B
---> inputs:
15 10
DZFDFZDFDDDDDDF
---> outputs:
82

import sys
class c462b :
    def __init__ ( self ) :
        self . left = 0
    def __lt__ ( self , other ) :
        return self . left < other . left
def main ( ) :
    f = sys . stdin . readline
    out = sys . stdout . write
    n , k = map ( int , f ( ) . split ( ) )
    cards = [ c462b ( ) for _ in range ( 26 ) ]
    s = f ( ) . strip ( )
    for t in range ( n ) :
        cards [ ord ( s [ t ] ) - ord ( 'A' ) ] . left += 1
    ans = 0
    for i in range ( k ) :
        cards . sort ( )
        change = min ( cards [ - 1 ] . left , k - i )
        ans += change * change
        cards [ - 1 ] . left -= change
        i += change - 1
    out ( str ( ans ) + '\n' )
if __name__ == '__main__' :
    main ( )


---> console_out:
101
 
DIDN'T MATCH!! :(
 37%|███▋      | 654/1746 [08:02<01:17, 14.05it/s]

-------------------------------------


---> lineNum: 655
---> probID: projecteuler_p045_A
---> inputs:

---> outputs:
1533776805

class p045 :
    def run ( self ) :
        i = 286
        j = 166
        k = 144
        while True :
            triangle = i * ( i + 1 ) // 2
            pentagon = j * ( 3 * j - 1 ) // 2
            hexagon = k * ( 2 * k - 1 )
            min_val = min ( triangle , pentagon , hexagon )
            if min_val == triangle == pentagon == hexagon :
                return str ( min_val )
            if min_val == triangle :
                i += 1
            if min_val == pentagon :
                j += 1
            if min_val == hexagon :
                k += 1
print ( p045 ( ) . run ( ) )


---> console_out:
1533776805
 
MATCHED!! :D


-------------------------------------


---> lineNum: 656
---> probID: geeksforgeeks_554_A
---> inputs:

---> outputs:
4


def maxPrimefactorNum ( N ) :
    if N < 2 :
        return 0
    arr = [ False ] * ( N + 1 )
    prod = 1
    res = 0
    for p in range ( 2 , int ( N ** 0.5 ) + 1 ) :
        if not arr [ p ] :
            for i in range ( p * 2 , N + 1 , p ) :
                arr [ i ] = True
            prod *= p
            if prod > N :
                return res
            res += 1
    return res
if __name__ == '__main__' :
    N = 500
    print ( maxPrimefactorNum ( N ) )


---> console_out:
4
 
MATCHED!! :D
 38%|███▊      | 656/1746 [08:03<01:30, 12.02it/s]

-------------------------------------


---> lineNum: 657
---> probID: geeksforgeeks_1351_A
---> inputs:

---> outputs:
Yes


import math
def max_element ( a ) :
    m = a [ 0 ]
    for i in range ( len ( a ) ) :
        m = max ( a [ i ] , m )
    return m
def checkDivisors ( a , n ) :
    X = max_element ( a )
    b = [ ]
    for i in range ( 1 , int ( math . sqrt ( X ) ) + 1 ) :
        if X % i == 0 :
            b . append ( i )
            if X // i != i :
                b . append ( X // i )
    if len ( b ) != n :
        return False
    a . sort ( )
    b . sort ( )
    for i in range ( n ) :
        if b [ i ] != a [ i ] :
            return False
    return True
arr = [ 8 , 1 , 2 , 12 , 48 , 6 , 4 , 24 , 16 , 3 ]
N = len ( arr )
if checkDivisors ( arr , N ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784168378_6492/main.py", line 1, in <module>
    class Test :
  File "./junk/1703784168378_6492/main.py", line 12, in Test
    subArray ( len ( arr ) )
TypeError: 'staticmethod' object is not callable
out1,out2 allnonemptysubarrays allnonemptysubarrays1010201020301020304020203020304030304040


-------------------------------------


---> lineNum: 658
---> probID: geeksforgeeks_3295_A
---> inputs:

---> outputs:
All Non-empty Subarrays
1 
1 2 
1 2 3 
1 2 3 4 
2 
2 3 
2 3 4 
3 
3 4 
4 


class Test :
    arr = [ 1 , 2 , 3 , 4 ]
    @ staticmethod
    def subArray ( n ) :
        for i in range ( n ) :
            for j in range ( i , n ) :
                for k in range ( i , j + 1 ) :
                    print ( arr [ k ] , end = " " )
        print ( )
    if __name__ == '__main__' :
        print ( "All Non-empty Subarrays" )
        subArray ( len ( arr ) )


---> console_out:
All Non-empty Subarrays
 
DIDN'T MATCH!! :(
 38%|███▊      | 658/1746 [08:03<01:23, 13.05it/s]

-------------------------------------


---> lineNum: 659
---> probID: codeforces_1679_A
---> inputs:
4
4
7
24
998244353998244352
---> outputs:
1 1
-1
4 6
166374058999707392 249561088499561088

import sys
tc = int ( input ( ) )
for i in range ( tc ) :
    n = int ( input ( ) )
    x = sys . maxsize
    y = - sys . maxsize
    if n % 6 == 0 :
        x = min ( x , n // 6 )
        y = max ( y , n // 6 )
    if n % 6 == 2 and n != 2 :
        x = min ( x , ( ( n // 6 ) - 1 ) + 2 )
        y = max ( y , ( ( n // 6 ) - 1 ) + 2 )
    if n % 6 == 4 and n != 4 :
        x = min ( x , n // 6 + 1 )
        y = max ( y , n // 6 + 1 )
    if n % 4 == 0 :
        x = min ( x , n // 4 )
        y = max ( y , n // 4 )
    if n % 4 == 2 and n != 2 :
        x = min ( x , ( n // 4 ) - 1 + 1 )
        y = max ( y , ( n // 4 ) - 1 + 1 )
    if x != sys . maxsize and y != - sys . maxsize :
        print ( x , y )
    else :
        print ( "-1" )


---> console_out:
1 1
-1
4 6
166374058999707392 249561088499561088
 
MATCHED!! :D


-------------------------------------


---> lineNum: 660
---> probID: geeksforgeeks_1508_A
---> inputs:

---> outputs:
31


import numpy as np
def maxSum ( arr , n ) :
    arr = np . sort ( arr )
    sum = 0
    for i in range ( n ) :
        sum += ( arr [ i ] * i )
    return sum
arr = [ 3 , 5 , 6 , 1 ]
n = len ( arr )
print ( maxSum ( arr , n ) )


---> console_out:
31
 
MATCHED!! :D
 38%|███▊      | 660/1746 [08:03<01:51,  9.74it/s]

-------------------------------------


---> lineNum: 661
---> probID: geeksforgeeks_5065_A
---> inputs:

---> outputs:
7


import numpy as np
def maxSum ( a , n ) :
    a = np . sort ( a )
    sum = 0
    for i in range ( 0 , n - 1 , 2 ) :
        sum += a [ i ]
    return sum
arr = np . array ( [ 1 , 3 , 2 , 1 , 4 , 5 ] )
n = len ( arr )
print ( maxSum ( arr , n ) )


---> console_out:
7
 
MATCHED!! :D


-------------------------------------


---> lineNum: 662
---> probID: geeksforgeeks_5116_A
---> inputs:

---> outputs:
28465


import numpy as np
def findAnswer ( n , arr ) :
    arr = np . sort ( arr )
    sum = 0
    for i in range ( n // 2 ) :
        sum += ( arr [ i ] + arr [ n - i - 1 ] ) ** 2
    return sum
arr = [ 53 , 28 , 143 , 5 ]
n = len ( arr )
print ( findAnswer ( n , arr ) )


---> console_out:
28465
 
MATCHED!! :D
 38%|███▊      | 662/1746 [08:04<02:44,  6.60it/s]

-------------------------------------


---> lineNum: 663
---> probID: geeksforgeeks_3772_A
---> inputs:

---> outputs:
21


import numpy as np
def findSum ( arr , n ) :
    arr = np . sort ( arr )
    sum = arr [ 0 ]
    for i in range ( n - 1 ) :
        if arr [ i ] != arr [ i + 1 ] :
            sum = sum + arr [ i + 1 ]
    return sum
arr = np . array ( [ 1 , 2 , 3 , 1 , 1 , 4 , 5 , 6 ] )
n = len ( arr )
print ( findSum ( arr , n ) )


---> console_out:
21
 
MATCHED!! :D
 38%|███▊      | 663/1746 [08:04<03:06,  5.80it/s]

-------------------------------------


---> lineNum: 664
---> probID: geeksforgeeks_5172_A
---> inputs:

---> outputs:
Deepest Left Leaf Node :: 9


from queue import Queue
class Node :
    def __init__ ( self , data ) :
        self . data = data
        self . left = None
        self . right = None
def getDeepestLeftLeafNode ( root ) :
    if root is None :
        return None
    q = Queue ( )
    q . put ( root )
    result = None
    while not q . empty ( ) :
        temp = q . get ( )
        if temp . left is not None :
            q . put ( temp . left )
            if temp . left . left is None and temp . left . right is None :
                result = temp . left
        if temp . right is not None :
            q . put ( temp . right )
    return result
root = Node ( 1 )
root . left = Node ( 2 )
root . right = Node ( 3 )
root . left . left = Node ( 4 )
root . right . left = Node ( 5 )
root . right . right = Node ( 6 )
root . right . left . right = Node ( 7 )
root . right . right . right = Node ( 8 )
root . right . left . right . left = Node ( 9 )
root . right . right . right . right = Node ( 10 )
result = getDeepestLeftLeafNode ( root )
if result is not None :
    print ( "Deepest Left Leaf Node ::" , result . data )
else :
    print ( "No result, left leaf not found" )


---> console_out:
Deepest Left Leaf Node :: 9
 
MATCHED!! :D


-------------------------------------


---> lineNum: 665
---> probID: geeksforgeeks_1273_A
---> inputs:

---> outputs:
Deepest Right Leaf Node :: 10


from queue import Queue
class Node :
    def __init__ ( self , data ) :
        self . data = data
        self . left = None
        self . right = None
def getDeepestRightLeafNode ( root ) :
    if root is None :
        return None
    q = Queue ( )
    q . put ( root )
    result = None
    while not q . empty ( ) :
        temp = q . get ( )
        if temp . left is not None :
            q . put ( temp . left )
        if temp . right is not None :
            q . put ( temp . right )
            if temp . right . left is None and temp . right . right is None :
                result = temp . right
    return result
root = Node ( 1 )
root . left = Node ( 2 )
root . right = Node ( 3 )
root . left . right = Node ( 4 )
root . right . left = Node ( 5 )
root . right . right = Node ( 6 )
root . right . left . right = Node ( 7 )
root . right . right . right = Node ( 8 )
root . right . left . right . left = Node ( 9 )
root . right . right . right . right = Node ( 10 )
result = getDeepestRightLeafNode ( root )
if result is not None :
    print ( "Deepest Right Leaf Node ::" , result . data )
else :
    print ( "No result, right leaf not found" )


---> console_out:
Deepest Right Leaf Node :: 10
 
MATCHED!! :D
 38%|███▊      | 665/1746 [08:04<02:30,  7.21it/s]

-------------------------------------


---> lineNum: 666
---> probID: atcoder_ABC079_B
---> inputs:
5
---> outputs:
11

import sys
n = int ( input ( ) )
arr = [ 0 ] * ( n + 1 )
arr [ 0 ] = 2
arr [ 1 ] = 1
for i in range ( 2 , len ( arr ) ) :
    arr [ i ] = arr [ i - 1 ] + arr [ i - 2 ]
print ( arr [ n ] )


---> console_out:
11
 
MATCHED!! :D


-------------------------------------


---> lineNum: 667
---> probID: geeksforgeeks_1235_A
---> inputs:

---> outputs:
3 : 4


import math
def gcd ( a , b ) :
    if a == 0 :
        return b
    if b == 0 :
        return a
    if a == b :
        return a
    if a > b :
        return gcd ( a - b , b )
    return gcd ( a , b - a )
def printRatio ( a , b , c , d ) :
    if b * c > a * d :
        temp = c
        c = d
        d = temp
        temp = a
        a = b
        b = temp
    lcm = ( a * c ) // gcd ( a , c )
    x = lcm // a
    b *= x
    y = lcm // c
    d *= y
    k = gcd ( b , d )
    b //= k
    d //= k
    print ( str ( b ) + ":" + str ( d ) )
a , b , c , d = 4 , 3 , 2 , 2
printRatio ( a , b , c , d )


---> console_out:
3:4
 
MATCHED!! :D
 38%|███▊      | 667/1746 [08:04<02:03,  8.76it/s]

-------------------------------------


---> lineNum: 668
---> probID: geeksforgeeks_3832_A
---> inputs:

---> outputs:
Maximum sum :  6


def maxsum_SIS ( arr , n ) :
    max_sum = 0
    current_sum = arr [ 0 ]
    for i in range ( 1 , n ) :
        if arr [ i - 1 ] < arr [ i ] :
            current_sum += arr [ i ]
        else :
            max_sum = max ( max_sum , current_sum )
            current_sum = arr [ i ]
    return max ( max_sum , current_sum )
if __name__ == '__main__' :
    arr = [ 1 , 2 , 2 , 4 ]
    n = len ( arr )
    print ( "Maximum sum : " , maxsum_SIS ( arr , n ) )


---> console_out:
Maximum sum :  6
 
MATCHED!! :D


-------------------------------------


---> lineNum: 669
---> probID: geeksforgeeks_2973_A
---> inputs:

---> outputs:
16


import math
def GCD ( a , b ) :
    if b == 0 :
        return a
    return GCD ( b , a % b )
def findMaxSumUtil ( arr , n ) :
    finalGCD = arr [ 0 ]
    for i in range ( 1 , n ) :
        finalGCD = GCD ( arr [ i ] , finalGCD )
    return finalGCD
def findMaxSum ( arr , n ) :
    maxElement = findMaxSumUtil ( arr , n )
    return ( maxElement * n )
arr = [ 8 , 20 , 12 , 36 ]
n = len ( arr )
print ( findMaxSum ( arr , n ) )


---> console_out:
16
 
MATCHED!! :D
 38%|███▊      | 669/1746 [08:04<01:47, 10.04it/s]

-------------------------------------


---> lineNum: 670
---> probID: geeksforgeeks_5234_A
---> inputs:

---> outputs:
2


import math
def gcd ( a , b ) :
    while b != 0 :
        t = b
        b = a % b
        a = t
    return a
def findMinDiff ( a , b , x , y ) :
    g = gcd ( a , b )
    diff = abs ( x - y ) % g
    return min ( diff , g - diff )
a , b , x , y = 20 , 52 , 5 , 7
print ( findMinDiff ( a , b , x , y ) )


---> console_out:
2
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784170036_5154/main.py", line 5, in <module>
    X , Y , W , H , N = map ( int , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 5, got 4)
out1,out2  2020


-------------------------------------


---> lineNum: 671
---> probID: aizu_p01303_A
---> inputs:
2
1 3 20 10
4
21 13
1 15
10 10
25 10
1 3 20 10
4
21 13
1 15
10 10
25 10
---> outputs:
2
2

import sys
for line in sys . stdin :
    a = int ( line )
    while a != 0 :
        X , Y , W , H , N = map ( int , input ( ) . split ( ) )
        count = 0
        for i in range ( N ) :
            x , y = map ( int , input ( ) . split ( ) )
            if X <= x <= X + W and Y <= y <= Y + H :
                count += 1
        print ( count )
        a -= 1


---> console_out:
 
DIDN'T MATCH!! :(
 38%|███▊      | 671/1746 [08:04<01:35, 11.31it/s]

-------------------------------------


---> lineNum: 672
---> probID: geeksforgeeks_2428_A
---> inputs:

---> outputs:
True


def divisibleby37 ( n1 ) :
    l = len ( n1 )
    if n1 == "0" :
        return 0
    if l % 3 == 1 :
        n1 = "00" + n1
        l += 2
    elif l % 3 == 2 :
        n1 = "0" + n1
        l += 1
    n = list ( n1 )
    gSum = 0
    while l != 0 :
        if l == 2 :
            gvalue = ( int ( n [ l - 2 ] ) - 48 ) * 100 + ( int ( n [ l - 1 ] ) - 48 ) * 10
        elif l == 1 :
            gvalue = ( int ( n [ l - 1 ] ) - 48 ) * 100
        else :
            gvalue = ( int ( n [ l - 3 ] ) - 48 ) * 100 + ( int ( n [ l - 2 ] ) - 48 ) * 10 + ( int ( n [ l - 1 ] ) - 48 ) * 1
        l = l - 3
        gSum = gSum + gvalue
    if gSum >= 1000 :
        return divisibleby37 ( str ( gSum ) )
    else :
        return 1 if gSum % 37 == 0 else 0
s = "8955795758"
if divisibleby37 ( s ) == 1 :
    print ( "True" )
else :
    print ( "False" )


---> console_out:
True
 
MATCHED!! :D
out1,out2 10101010110 4040101020


-------------------------------------


---> lineNum: 673
---> probID: codeforces_111_A
---> inputs:
5 15 15
---> outputs:
['4\n4\n1\n1\n2', '1\n1\n1\n1\n11']

import sys
from collections import deque
class FastScanner :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = deque ( )
    def next ( self ) :
        while not self . st :
            self . st = deque ( self . br ( ) . split ( ) )
        return self . st . popleft ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def readArray ( self , n ) :
        return [ self . nextInt ( ) for _ in range ( n ) ]
    def nextLong ( self ) :
        return int ( self . next ( ) )
fs = FastScanner ( )
n = fs . nextLong ( )
x = fs . nextLong ( )
y = fs . nextLong ( )
p = y - n + 1
pow = p * p + n - 1
if pow < x or p <= 0 :
    print ( "-1" )
else :
    for i in range ( 1 , n ) :
        print ( "1" )
    print ( p )
print ( )


---> console_out:
1
1
1
1
11

 
MATCHED!! :D
 39%|███▊      | 673/1746 [08:05<01:26, 12.41it/s]

-------------------------------------


---> lineNum: 674
---> probID: geeksforgeeks_3336_A
---> inputs:

---> outputs:
Minimum Cost to make two strings identical is =  60


import math
def lcs ( X , Y , m , n ) :
    L = [ [ 0 for j in range ( n + 1 ) ] for i in range ( m + 1 ) ]
    for i in range ( m + 1 ) :
        for j in range ( n + 1 ) :
            if i == 0 or j == 0 :
                L [ i ] [ j ] = 0
            elif X [ i - 1 ] == Y [ j - 1 ] :
                L [ i ] [ j ] = L [ i - 1 ] [ j - 1 ] + 1
            else :
                L [ i ] [ j ] = max ( L [ i - 1 ] [ j ] , L [ i ] [ j - 1 ] )
    return L [ m ] [ n ]
def findMinCost ( X , Y , costX , costY ) :
    m = len ( X )
    n = len ( Y )
    len_LCS = lcs ( X , Y , m , n )
    return costX * ( m - len_LCS ) + costY * ( n - len_LCS )
X = "ef"
Y = "gh"
print ( "Minimum Cost to make two strings identical is =" , findMinCost ( X , Y , 10 , 20 ) )


---> console_out:
Minimum Cost to make two strings identical is = 60
 
MATCHED!! :D


-------------------------------------


---> lineNum: 675
---> probID: geeksforgeeks_3156_A
---> inputs:

---> outputs:
6


class Squares :
    def numberOfSquares ( base ) :
        base = ( base - 2 )
        base = base // 2
        return base * ( base + 1 ) // 2
    base = 8
    print ( numberOfSquares ( base ) )


---> console_out:
6
 
MATCHED!! :D
 39%|███▊      | 675/1746 [08:05<01:22, 13.00it/s]

-------------------------------------


---> lineNum: 676
---> probID: geeksforgeeks_2553_A
---> inputs:

---> outputs:
7.3485


def rmsValue ( arr , n ) :
    square = 0
    mean = 0
    root = 0
    for i in range ( n ) :
        square += arr [ i ] ** 2
    mean = square / float ( n )
    root = float ( mean ) ** 0.5
    return root
arr = [ 10 , 4 , 6 , 8 ]
n = len ( arr )
print ( "{:.4f}" . format ( rmsValue ( arr , n ) ) )


---> console_out:
7.3485
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784170422_1937/main.py", line 8, in <module>
    C , E = map ( int , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2  4800


-------------------------------------


---> lineNum: 677
---> probID: aizu_p00522_A
---> inputs:
4 3
180
160
170
190
2 100
3 120
4 250
---> outputs:
480

import sys
M , N = map ( int , input ( ) . split ( ) )
P = list ( map ( int , input ( ) . split ( ) ) )
P . sort ( )
dp = [ sys . maxsize ] * ( M + 10001 )
dp [ 0 ] = 0
for i in range ( N ) :
    C , E = map ( int , input ( ) . split ( ) )
    for j in range ( len ( dp ) - 1 , C - 1 , - 1 ) :
        if dp [ j - C ] == sys . maxsize :
            continue
        dp [ j ] = min ( dp [ j ] , dp [ j - C ] + E )
sum = [ 0 ] * len ( dp )
for i in range ( M ) :
    sum [ i + 1 ] = sum [ i ] + P [ M - 1 - i ]
for i in range ( M + 1 , len ( sum ) ) :
    sum [ i ] = sum [ M ]
ans = 0
for i in range ( len ( sum ) ) :
    if dp [ i ] == sys . maxsize :
        continue
    ans = max ( ans , sum [ i ] - dp [ i ] )
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 39%|███▉      | 677/1746 [08:05<01:17, 13.87it/s]Traceback (most recent call last):
  File "./junk/1703784170485_5596/main.py", line 5, in <module>
    array [ i ] = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '7 8 1 2 3'
out1,out2  node10key70leftkey80rightkey10node20key80parentkey70leftkey20rightkey30node30key10parentkey70node40key20parentkey80node50key30parentkey80


-------------------------------------


---> lineNum: 678
---> probID: aizu_p02287_A
---> inputs:
5
7 8 1 2 3
---> outputs:
node 1: key = 7, left key = 8, right key = 1, 
node 2: key = 8, parent key = 7, left key = 2, right key = 3, 
node 3: key = 1, parent key = 7, 
node 4: key = 2, parent key = 8, 
node 5: key = 3, parent key = 8,

import sys
n = int ( input ( ) )
array = [ 0 ] * ( n + 1 )
for i in range ( 1 , n + 1 ) :
    array [ i ] = int ( input ( ) )
for i in range ( 1 , n + 1 ) :
    sys . stdout . write ( "node %d: key = %d, " % ( i , array [ i ] ) )
    if i // 2 > 0 :
        sys . stdout . write ( "parent key = %d, " % array [ i // 2 ] )
    if 2 * i <= n :
        sys . stdout . write ( "left key = %d, " % array [ 2 * i ] )
    if 2 * i + 1 <= n :
        sys . stdout . write ( "right key = %d, " % array [ 2 * i + 1 ] )
    sys . stdout . write ( "\n" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 679
---> probID: geeksforgeeks_634_A
---> inputs:

---> outputs:
35


n = 6
m = 6
def maxSum ( arr ) :
    dp = [ [ 0 for i in range ( 3 ) ] for j in range ( n + 1 ) ]
    for i in range ( n ) :
        m1 , m2 , m3 = 0 , 0 , 0
        for j in range ( m ) :
            if j // ( m // 3 ) == 0 :
                m1 = max ( m1 , arr [ i ] [ j ] )
            elif j // ( m // 3 ) == 1 :
                m2 = max ( m2 , arr [ i ] [ j ] )
            elif j // ( m // 3 ) == 2 :
                m3 = max ( m3 , arr [ i ] [ j ] )
        dp [ i + 1 ] [ 0 ] = max ( dp [ i ] [ 1 ] , dp [ i ] [ 2 ] ) + m1
        dp [ i + 1 ] [ 1 ] = max ( dp [ i ] [ 0 ] , dp [ i ] [ 2 ] ) + m2
        dp [ i + 1 ] [ 2 ] = max ( dp [ i ] [ 1 ] , dp [ i ] [ 0 ] ) + m3
    print ( max ( max ( dp [ n ] [ 0 ] , dp [ n ] [ 1 ] ) , dp [ n ] [ 2 ] ) )
arr = [ [ 1 , 3 , 5 , 2 , 4 , 6 ] , [ 6 , 4 , 5 , 1 , 3 , 2 ] , [ 1 , 3 , 5 , 2 , 4 , 6 ] , [ 6 , 4 , 5 , 1 , 3 , 2 ] , [ 6 , 4 , 5 , 1 , 3 , 2 ] , [ 1 , 3 , 5 , 2 , 4 , 6 ] ]
maxSum ( arr )


---> console_out:
35
 
MATCHED!! :D
 39%|███▉      | 679/1746 [08:05<01:14, 14.38it/s]

-------------------------------------


---> lineNum: 680
---> probID: geeksforgeeks_4697_A
---> inputs:

---> outputs:
( 2 ,  3 )  ( 7 ,  8 )  ( 2 ,  8 )  ( 7 ,  3 ) 


def find_points ( x1 , y1 , x2 , y2 , x3 , y3 , x4 , y4 ) :
    x5 = max ( x1 , x3 )
    y5 = max ( y1 , y3 )
    x6 = min ( x2 , x4 )
    y6 = min ( y2 , y4 )
    if x5 > x6 or y5 > y6 :
        print ( "No intersection" )
        return
    print ( "({}, {})" . format ( x5 , y5 ) , end = " " )
    print ( "({}, {})" . format ( x6 , y6 ) , end = " " )
    x7 = x5
    y7 = y6
    print ( "({}, {})" . format ( x7 , y7 ) , end = " " )
    x8 = x6
    y8 = y5
    print ( "({}, {})" . format ( x8 , y8 ) , end = " " )
if __name__ == "__main__" :
    x1 , y1 , x2 , y2 = 0 , 0 , 10 , 8
    x3 , y3 , x4 , y4 = 2 , 3 , 7 , 9
    find_points ( x1 , y1 , x2 , y2 , x3 , y3 , x4 , y4 )


---> console_out:
(2, 3) (7, 8) (2, 8) (7, 3)  
MATCHED!! :D


-------------------------------------


---> lineNum: 681
---> probID: codeforces_424_A
---> inputs:
4
xxXx
---> outputs:
1
XxXx

import sys
n = int ( input ( ) )
s = input ( ) . strip ( )
sittingToStanding = 0
sitting = 0
standing = 0
for i in range ( n ) :
    if s [ i ] == 'x' :
        sitting += 1
    else :
        standing += 1
sittingToStanding = ( sitting - standing ) // 2
print ( abs ( sittingToStanding ) )
for i in range ( n ) :
    if s [ i ] == 'x' and sittingToStanding > 0 :
        sys . stdout . write ( 'X' )
        sittingToStanding -= 1
    elif s [ i ] == 'X' and sittingToStanding < 0 :
        sys . stdout . write ( 'x' )
        sittingToStanding += 1
    else :
        sys . stdout . write ( s [ i ] )


---> console_out:
1
XxXx 
MATCHED!! :D
 39%|███▉      | 681/1746 [08:05<01:13, 14.44it/s] 39%|███▉      | 681/1746 [08:20<01:13, 14.44it/s]out1,out2 timeoutencounteredpy 400


-------------------------------------


---> lineNum: 682
---> probID: codeforces_1214_A
---> inputs:
100
60
70
---> outputs:
40

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = StringTokenizer ( self . br ( ) . strip ( ) )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return self . br ( ) . strip ( )
if __name__ == '__main__' :
    input = FastReader ( )
    n = input . nextInt ( )
    d = input . nextInt ( )
    e = input . nextInt ( )
    ans = n
    for i in range ( n // ( 5 * e ) + 1 ) :
        ans = min ( ans , ( n - i * 5 * e ) % d )
    print ( ans )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 39%|███▉      | 682/1746 [08:45<2:07:10,  7.17s/it]

-------------------------------------


---> lineNum: 683
---> probID: geeksforgeeks_981_A
---> inputs:

---> outputs:
244.44444444444446


def knapSack ( W , wt , val , n ) :
    maxratio = float ( '-inf' )
    maxindex = 0
    for i in range ( n ) :
        if ( val [ i ] / wt [ i ] ) > maxratio :
            maxratio = ( val [ i ] / wt [ i ] )
            maxindex = i
    return ( W * maxratio )
if __name__ == '__main__' :
    val = [ 14 , 27 , 44 , 19 ]
    wt = [ 6 , 7 , 9 , 8 ]
    n = len ( val )
    W = 50
    print ( knapSack ( W , wt , val , n ) )


---> console_out:
244.44444444444446
 
MATCHED!! :D


-------------------------------------


---> lineNum: 684
---> probID: geeksforgeeks_4682_A
---> inputs:

---> outputs:
2 9 8 13 14 19 

import numpy as np
def AlternateRearrange ( arr ) :
    arr = np . sort ( arr )
    v1 = [ ]
    v2 = [ ]
    for i in range ( len ( arr ) ) :
        if arr [ i ] % 2 == 0 :
            v1 . append ( arr [ i ] )
        else :
            v2 . append ( arr [ i ] )
    index = 0
    i = 0
    j = 0
    flag = False
    if arr [ 0 ] % 2 == 0 :
        flag = True
    while index < len ( arr ) :
        if flag == True :
            arr [ index ] = v1 [ i ]
            i += 1
            index += 1
            flag = not flag
        else :
            arr [ index ] = v2 [ j ]
            j += 1
            index += 1
            flag = not flag
    for i in range ( len ( arr ) ) :
        print ( arr [ i ] , end = " " )
arr = [ 9 , 8 , 13 , 2 , 19 , 14 ]
AlternateRearrange ( arr )


---> console_out:
2 9 8 13 14 19  
MATCHED!! :D
 39%|███▉      | 684/1746 [08:46<1:25:17,  4.82s/it]

-------------------------------------


---> lineNum: 685
---> probID: atcoder_ABC061_A
---> inputs:
1 3 2
---> outputs:
Yes

import sys
A , B , C = map ( int , sys . stdin . readline ( ) . split ( ) )
if A <= C <= B :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 686
---> probID: geeksforgeeks_1960_A
---> inputs:

---> outputs:
1 3 0 1 

def decToBinary ( n ) :
    binaryNum = [ 0 ] * 32
    i = 0
    while n > 0 :
        binaryNum [ i ] = n % 2
        n = n // 2
        i += 1
    binary = ""
    for j in range ( i - 1 , - 1 , - 1 ) :
        binary += str ( binaryNum [ j ] )
    return binary
def countFreq ( pat , txt ) :
    M = len ( pat )
    N = len ( txt )
    res = 0
    for i in range ( N - M + 1 ) :
        j = 0
        while j < M :
            if txt [ i + j ] != pat [ j ] :
                break
            j += 1
        if j == M :
            res += 1
            j = 0
    return res
def findOccurrence ( arr , n , pattern ) :
    for i in range ( n ) :
        binary = decToBinary ( arr [ i ] )
        print ( countFreq ( pattern , binary ) , end = " " )
if __name__ == "__main__" :
    arr = [ 5 , 106 , 7 , 8 ]
    pattern = "10"
    n = len ( arr )
    findOccurrence ( arr , n , pattern )


---> console_out:
1 3 0 1  
MATCHED!! :D
 39%|███▉      | 686/1746 [08:46<57:51,  3.28s/it]  

-------------------------------------


---> lineNum: 687
---> probID: geeksforgeeks_2512_A
---> inputs:

---> outputs:
2


def makearrayequal ( arr , n ) :
    x = 0
    for i in range ( n ) :
        x += ( arr [ i ] & 1 )
    print ( min ( x , n - x ) )
if __name__ == '__main__' :
    arr = [ 4 , 3 , 2 , 1 ]
    n = len ( arr )
    makearrayequal ( arr , n )


---> console_out:
2
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784211403_1634/main.py", line 2, in <module>
    class Solution :
  File "./junk/1703784211403_1634/main.py", line 3, in Solution
    def findKthLargest ( self , nums : List [ int ] , k : int ) -> int :
NameError: name 'List' is not defined
out1,out2  50


-------------------------------------


---> lineNum: 688
---> probID: leetcode_215_A
---> inputs:

---> outputs:
5

import random
class Solution :
    def findKthLargest ( self , nums : List [ int ] , k : int ) -> int :
        self . shuffle ( nums )
        k = len ( nums ) - k
        lo = 0
        hi = len ( nums ) - 1
        while lo < hi :
            j = self . partition ( nums , lo , hi )
            if j < k :
                lo = j + 1
            elif j > k :
                hi = j - 1
            else :
                break
        return nums [ k ]
    def partition ( self , a : List [ int ] , lo : int , hi : int ) -> int :
        i = lo
        j = hi + 1
        while True :
            while i < hi and self . less ( a [ i + 1 ] , a [ lo ] ) :
                i += 1
            while j > lo and self . less ( a [ lo ] , a [ j - 1 ] ) :
                j -= 1
            if i >= j :
                break
            self . exch ( a , i + 1 , j - 1 )
        self . exch ( a , lo , j )
        return j
    def exch ( self , a : List [ int ] , i : int , j : int ) -> None :
        tmp = a [ i ]
        a [ i ] = a [ j ]
        a [ j ] = tmp
    def less ( self , v : int , w : int ) -> bool :
        return v < w
    def shuffle ( self , a : List [ int ] ) -> None :
        random . seed ( )
        for ind in range ( 1 , len ( a ) ) :
            r = random . randint ( 0 , ind )
            self . exch ( a , ind , r )
if __name__ == '__main__' :
    sObj = Solution ( )
    nums = [ 3 , 2 , 1 , 5 , 6 , 4 ]
    k = 2
    out = sObj . findKthLargest ( nums , k )
    print ( out )


---> console_out:
 
DIDN'T MATCH!! :(
 39%|███▉      | 688/1746 [08:46<39:49,  2.26s/it]

-------------------------------------


---> lineNum: 689
---> probID: geeksforgeeks_2291_A
---> inputs:

---> outputs:
YES


def isDivisible ( n ) :
    temp = n
    while n > 0 :
        k = n % 10
        if temp % k == 0 :
            return "YES"
        n //= 10
    return "NO"
n = 9876543
print ( isDivisible ( n ) )


---> console_out:
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 690
---> probID: geeksforgeeks_1809_A
---> inputs:

---> outputs:
NO


def isDivisible ( n ) :
    temp = n
    sum = 0
    while n != 0 :
        k = int ( n % 10 )
        sum += k
        n //= 10
    if temp % sum == 0 :
        return "YES"
    return "NO"
n = 123
print ( isDivisible ( n ) )


---> console_out:
NO
 
MATCHED!! :D
 40%|███▉      | 690/1746 [08:46<27:49,  1.58s/it]

-------------------------------------


---> lineNum: 691
---> probID: atcoder_ABC059_B
---> inputs:
36
24
---> outputs:
GREATER

import sys
a = input ( )
b = input ( )
answer = ""
naa = len ( a )
nab = len ( b )
i = 0
if naa == nab :
    if a == b :
        answer = "EQUAL"
    else :
        for i in range ( naa ) :
            q = ord ( a [ i ] )
            l = ord ( b [ i ] )
            if q > l :
                answer = "GREATER"
                break
            elif q < l :
                answer = "LESS"
                break
else :
    answer = "GREATER" if naa > nab else "LESS"
print ( answer )


---> console_out:
GREATER
 
MATCHED!! :D


-------------------------------------


---> lineNum: 692
---> probID: geeksforgeeks_1237_A
---> inputs:

---> outputs:
54


def calculateAreaSum ( l , b ) :
    size = 1
    maxSize = min ( l , b )
    totalArea = 0
    for i in range ( 1 , maxSize + 1 ) :
        totalSquares = ( l - size + 1 ) * ( b - size + 1 )
        area = totalSquares * size * size
        totalArea += area
        size += 1
    return totalArea
l = 4
b = 3
print ( calculateAreaSum ( l , b ) )


---> console_out:
54
 
MATCHED!! :D
 40%|███▉      | 692/1746 [08:46<19:38,  1.12s/it]

-------------------------------------


---> lineNum: 693
---> probID: geeksforgeeks_751_A
---> inputs:

---> outputs:
5 3 1 4 2 

def arrange ( N ) :
    if N == 1 :
        print ( "1" )
        return
    if N == 2 or N == 3 :
        print ( "-1" )
        return
    even , odd = - 1 , - 1
    if N % 2 == 0 :
        even = N
        odd = N - 1
    else :
        odd = N
        even = N - 1
    while odd >= 1 :
        print ( odd , end = " " )
        odd -= 2
    while even >= 2 :
        print ( even , end = " " )
        even -= 2
N = 5
arrange ( N )


---> console_out:
5 3 1 4 2  
MATCHED!! :D


-------------------------------------


---> lineNum: 694
---> probID: geeksforgeeks_2339_A
---> inputs:

---> outputs:
4


import math
def findMinEqualSums ( a , N ) :
    sum = 0
    for i in range ( N ) :
        sum += a [ i ]
    sum1 = 0
    sum2 = 0
    min_val = math . inf
    for i in range ( N ) :
        sum1 += a [ i ]
        sum2 = sum - sum1
        if abs ( sum1 - sum2 ) < min_val :
            min_val = abs ( sum1 - sum2 )
        if min_val == 0 :
            break
    return min_val
if __name__ == '__main__' :
    a = [ 3 , 2 , 1 , 5 , 7 , 8 ]
    N = len ( a )
    print ( findMinEqualSums ( a , N ) )


---> console_out:
4
 
MATCHED!! :D
 40%|███▉      | 694/1746 [08:46<13:56,  1.26it/s]

-------------------------------------


---> lineNum: 695
---> probID: codeforces_1647_A
---> inputs:
5
1
2
3
4
5
---> outputs:
1
2
21
121
212

import sys
t = int ( input ( ) )
for i in range ( t ) :
    n = int ( input ( ) )
    builder = ""
    mod = n % 3
    if mod == 1 :
        for j in range ( n // 3 ) :
            builder += "12"
        builder += "1"
    else :
        for j in range ( n // 3 ) :
            builder += "21"
        if mod == 2 :
            builder += "2"
    print ( builder )


---> console_out:
1
2
21
121
212
 
MATCHED!! :D


-------------------------------------


---> lineNum: 696
---> probID: geeksforgeeks_1514_A
---> inputs:

---> outputs:
56


import numpy as np
def findOptimalSolution ( a , N ) :
    a = np . sort ( a )
    points = 0
    for i in range ( N ) :
        points += a [ i ] * i
    return points
if __name__ == '__main__' :
    a = [ 1 , 4 , 2 , 3 , 9 ]
    N = len ( a )
    print ( findOptimalSolution ( a , N ) )


---> console_out:
56
 
MATCHED!! :D
 40%|███▉      | 696/1746 [08:47<10:36,  1.65it/s]

-------------------------------------


---> lineNum: 697
---> probID: codeforces_644_B
---> inputs:
5 1
2 9
4 8
10 9
15 2
19 1
---> outputs:
11 19 -1 21 22

import sys
from queue import Queue
from queue import PriorityQueue
tasks = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
taskList = Queue ( )
events = PriorityQueue ( tasks [ 0 ] )
taskDur = [ 0 ] * tasks [ 0 ]
for i in range ( tasks [ 0 ] ) :
    taskInput = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
    taskDur [ i ] = taskInput [ 1 ]
    events . put ( taskInput [ 0 ] * 2 + 1 )
sol = [ 0 ] * tasks [ 0 ]
nextTask = 0
while not events . empty ( ) :
    event = events . get ( )
    time = event // 2
    if event % 2 == 0 :
        taskId = taskList . get ( )
        sol [ taskId ] = time
        if not taskList . empty ( ) :
            events . put ( ( time + taskDur [ taskList . queue [ 0 ] ] ) * 2 )
    else :
        task = nextTask
        nextTask += 1
        if taskList . qsize ( ) <= tasks [ 1 ] :
            taskList . put ( task )
            if taskList . qsize ( ) == 1 :
                events . put ( ( time + taskDur [ task ] ) * 2 )
        else :
            sol [ task ] = - 1
print ( " " . join ( map ( str , sol ) ) )


---> console_out:
11 19 -1 21 22
 
MATCHED!! :D
  File "./junk/1703784212354_9882/main.py", line 7
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  noyesnoyesnoyes


-------------------------------------


---> lineNum: 698
---> probID: codeforces_1668_B
---> inputs:
6
3 2
1 1 1
2 4
1 1
2 5
2 1
3 8
1 2 1
4 12
1 2 1 3
4 19
1 2 1 3
---> outputs:
NO
YES
NO
YES
NO
YES

import java . util . Arrays
import java . util . HashSet
import java . util . Scanner
class Practice :
    @ staticmethod
    def main ( args : list [ str ] ) :
        sc = Scanner ( System . in )
        t = sc . nextInt ( )
        while t > 0 :
            n = sc . nextInt ( )
            m = sc . nextInt ( )
            a = [ 0 ] * n
            for i in range ( n ) :
                a [ i ] = sc . nextInt ( )
            if n > m :
                print ( "NO" )
                continue
            Arrays . sort ( a )
            ans = a [ n - 1 ]
            for i in range ( n - 1 , - 1 , - 1 ) :
                ans += 1
                if i > 0 :
                    ans += a [ i - 1 ]
            if ans <= m :
                print ( "YES" )
            else :
                print ( "NO" )
            t -= 1


---> console_out:
 
DIDN'T MATCH!! :(
 40%|███▉      | 698/1746 [08:47<07:47,  2.24it/s]

-------------------------------------


---> lineNum: 699
---> probID: geeksforgeeks_428_A
---> inputs:

---> outputs:
6


def getPairs ( a ) :
    count = 0
    for i in range ( len ( a ) ) :
        for j in range ( len ( a ) ) :
            if a [ i ] < a [ j ] :
                count += 1
    return count
if __name__ == '__main__' :
    a = [ 2 , 4 , 3 , 1 ]
    print ( getPairs ( a ) )


---> console_out:
6
 
MATCHED!! :D
 40%|███▉      | 698/1746 [09:00<07:47,  2.24it/s]out1,out2 timeoutencounteredpy 100280


-------------------------------------


---> lineNum: 700
---> probID: codeforces_1230_B
---> inputs:
5 3
51528
---> outputs:
10028

import sys
from typing import List
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) -> str :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = StringTokenizer ( self . br ( ) . strip ( ) )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) -> int :
        return int ( self . next ( ) )
    def nextLong ( self ) -> int :
        return int ( self . next ( ) )
    def nextDouble ( self ) -> float :
        return float ( self . next ( ) )
    def nextLine ( self ) -> str :
        return self . br ( ) . strip ( )
def main ( args : List [ str ] ) -> None :
    obj = FastReader ( )
    n , k = obj . nextInt ( ) , obj . nextInt ( )
    num = list ( obj . next ( ) )
    if n == 1 and k > 0 :
        print ( 0 )
        return
    for i in range ( n ) :
        if i == 0 :
            if num [ i ] == '1' :
                continue
            num [ i ] = '1'
            k -= 1
        else :
            if num [ i ] == '0' :
                continue
            num [ i ] = '0'
            k -= 1
        if k == 0 :
            break
    for i in range ( n ) :
        print ( num [ i ] , end = '' )
    print ( )
if __name__ == '__main__' :
    main ( sys . argv [ 1 : ] )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 40%|████      | 700/1746 [09:27<1:51:14,  6.38s/it]Traceback (most recent call last):
  File "./junk/1703784252629_2705/main.py", line 5, in <module>
    arr [ i ] [ j ] = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 0 0 1'
out1,out2  yes


-------------------------------------


---> lineNum: 701
---> probID: codeforces_812_A
---> inputs:
1 0 0 1
0 1 0 0
0 0 1 0
0 0 0 1
---> outputs:
YES

import sys
arr = [ [ 0 for j in range ( 4 ) ] for i in range ( 4 ) ]
for i in range ( 4 ) :
    for j in range ( 4 ) :
        arr [ i ] [ j ] = int ( input ( ) )
if arr [ 0 ] [ 3 ] == 1 :
    if arr [ 0 ] [ 1 ] == 1 or arr [ 0 ] [ 2 ] == 1 or arr [ 0 ] [ 0 ] == 1 or arr [ 1 ] [ 0 ] == 1 or arr [ 2 ] [ 1 ] == 1 or arr [ 3 ] [ 2 ] == 1 :
        print ( "YES" )
        sys . exit ( )
if arr [ 1 ] [ 3 ] == 1 :
    if arr [ 1 ] [ 1 ] == 1 or arr [ 1 ] [ 2 ] == 1 or arr [ 1 ] [ 0 ] == 1 or arr [ 2 ] [ 0 ] == 1 or arr [ 3 ] [ 1 ] == 1 or arr [ 0 ] [ 2 ] == 1 :
        print ( "YES" )
        sys . exit ( )
if arr [ 2 ] [ 3 ] == 1 :
    if arr [ 2 ] [ 1 ] == 1 or arr [ 2 ] [ 2 ] == 1 or arr [ 2 ] [ 0 ] == 1 or arr [ 3 ] [ 0 ] == 1 or arr [ 0 ] [ 1 ] == 1 or arr [ 1 ] [ 2 ] == 1 :
        print ( "YES" )
        sys . exit ( )
if arr [ 3 ] [ 3 ] == 1 :
    if arr [ 3 ] [ 1 ] == 1 or arr [ 3 ] [ 2 ] == 1 or arr [ 3 ] [ 0 ] == 1 or arr [ 0 ] [ 0 ] == 1 or arr [ 1 ] [ 1 ] == 1 or arr [ 2 ] [ 2 ] == 1 :
        print ( "YES" )
        sys . exit ( )
print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 702
---> probID: geeksforgeeks_140_A
---> inputs:

---> outputs:
47


N = 10000
MOD = 1000000007
F = [ 0 ] * N
def precompute ( ) :
    F [ 1 ] = 2
    F [ 2 ] = 3
    F [ 3 ] = 4
    for i in range ( 4 , N ) :
        F [ i ] = ( F [ i - 1 ] + F [ i - 2 ] ) % MOD
def main ( ) :
    n = 8
    precompute ( )
    print ( F [ n ] )
if __name__ == '__main__' :
    main ( )


---> console_out:
47
 
MATCHED!! :D
 40%|████      | 702/1746 [09:27<1:17:56,  4.48s/it]out1,out2 203000 2030


-------------------------------------


---> lineNum: 703
---> probID: aizu_p01314_A
---> inputs:
9
500
0
---> outputs:
2
3

import sys
for line in sys . stdin :
    t = int ( line )
    b = 0
    for i in range ( 1 , t + 1 ) :
        for j in range ( i + 1 , t + 1 ) :
            c = sum ( range ( i , j + 1 ) )
            b += 1 if c == t else 0
    print ( b )


---> console_out:
2
3
0
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 704
---> probID: geeksforgeeks_4886_A
---> inputs:

---> outputs:
Length of Longest Increasing Subsequence is  6


import math
def CeilIndex ( A , l , r , key ) :
    while r - l > 1 :
        m = l + ( r - l ) // 2
        if A [ m ] >= key :
            r = m
        else :
            l = m
    return r
def LongestIncreasingSubsequenceLength ( A , size ) :
    tailTable = [ 0 ] * size
    len = 1
    tailTable [ 0 ] = A [ 0 ]
    for i in range ( 1 , size ) :
        if A [ i ] < tailTable [ 0 ] :
            tailTable [ 0 ] = A [ i ]
        elif A [ i ] > tailTable [ len - 1 ] :
            tailTable [ len ] = A [ i ]
            len += 1
        else :
            tailTable [ CeilIndex ( tailTable , - 1 , len - 1 , A [ i ] ) ] = A [ i ]
    return len
A = [ 2 , 5 , 3 , 7 , 11 , 8 , 10 , 13 , 6 ]
n = len ( A )
print ( "Length of Longest Increasing Subsequence is" , LongestIncreasingSubsequenceLength ( A , n ) )


---> console_out:
Length of Longest Increasing Subsequence is 6
 
MATCHED!! :D
 40%|████      | 704/1746 [09:28<56:19,  3.24s/it]  

-------------------------------------


---> lineNum: 705
---> probID: aizu_p00402_A
---> inputs:
3
4 0 1
---> outputs:
2

import sys
N = int ( sys . stdin . readline ( ) )
ban = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
ban . sort ( )
print ( ( ban [ N - 1 ] - ban [ 0 ] + 1 ) // 2 )


---> console_out:
2
 
MATCHED!! :D
out1,out2 timeoutencounteredpy 4020


-------------------------------------


---> lineNum: 706
---> probID: projecteuler_p074_A
---> inputs:

---> outputs:
402

from math import factorial
class p074 :
    def __init__ ( self ) :
        pass
    def run ( self ) :
        LIMIT = 10 ** 6
        count = 0
        for i in range ( LIMIT ) :
            if self . getChainLength ( i ) == 60 :
                count += 1
        return str ( count )
    def getChainLength ( self , n ) :
        seen = set ( )
        while True :
            if n in seen :
                return len ( seen )
            seen . add ( n )
            n = self . factorialize ( n )
    def factorialize ( self , n ) :
        FACTORIAL = [ factorial ( i ) for i in range ( 10 ) ]
        sum = 0
        while n != 0 :
            sum += FACTORIAL [ n % 10 ]
            n //= 10
        return sum
if __name__ == '__main__' :
    print ( p074 ( ) . run ( ) )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 40%|████      | 706/1746 [10:08<2:24:02,  8.31s/it]

-------------------------------------


---> lineNum: 707
---> probID: geeksforgeeks_2975_A
---> inputs:

---> outputs:
2


import sys
def colourVisible ( height , colour , K ) :
    arr = [ 0 ] * ( K + 1 )
    visible = 0
    max_height = height [ K - 1 ]
    arr [ colour [ K - 1 ] ] = 1
    for i in range ( K - 2 , - 1 , - 1 ) :
        if height [ i ] > max_height :
            max_height = height [ i ]
            arr [ colour [ i ] ] = 1
    for i in range ( 1 , K + 1 ) :
        if arr [ i ] == 1 :
            visible += 1
    return visible
if __name__ == "__main__" :
    height = [ 3 , 5 , 1 , 2 , 3 ]
    colour = [ 1 , 2 , 3 , 4 , 3 ]
    K = len ( colour )
    print ( colourVisible ( height , colour , K ) )


---> console_out:
2
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784293767_2930/main.py", line 6, in <module>
    if checkPowerof8 ( n ) :
  File "./junk/1703784293767_2930/main.py", line 2, in checkPowerof8
    i = math . log ( n ) / math . log ( 8 )
NameError: name 'math' is not defined
out1,out2  no


-------------------------------------


---> lineNum: 708
---> probID: geeksforgeeks_2959_A
---> inputs:

---> outputs:
No


def checkPowerof8 ( n ) :
    i = math . log ( n ) / math . log ( 8 )
    return ( i - math . floor ( i ) < 0.000001 )
if __name__ == '__main__' :
    n = 65
    if checkPowerof8 ( n ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(
 41%|████      | 708/1746 [10:08<1:40:53,  5.83s/it]

-------------------------------------


---> lineNum: 709
---> probID: codeforces_1611_B
---> inputs:
6
5 5
10 1
2 3
0 0
17 2
1000000000 1000000000
---> outputs:
2
1
1
0
2
500000000

import sys
for line in sys . stdin :
    t = int ( line )
    for i in range ( t ) :
        a , b = map ( int , input ( ) . split ( ) )
        res = min ( ( a + b ) // 4 , min ( a , b ) )
        print ( res )


---> console_out:
2
1
1
0
2
500000000
 
MATCHED!! :D


-------------------------------------


---> lineNum: 710
---> probID: aizu_p01117_A
---> inputs:
5 2
10 20 30 40 50
15 25 35 45 55
6 3
10 20 30 15 25 35
21 34 11 52 20 18
31 15 42 10 21 19
4 2
0 0 0 0
0 0 0 0
0 0
---> outputs:
105
83
0

import sys
class Main :
    def __init__ ( self ) :
        self . maxes = [ ]
    def go ( self ) :
        while True :
            n , m = map ( int , input ( ) . split ( ) )
            if n == 0 and m == 0 :
                break
            points = [ 0 ] * n
            max_val = 0
            for i in range ( m ) :
                for j , val in enumerate ( map ( int , input ( ) . split ( ) ) ) :
                    points [ j ] += val
                    if i == m - 1 and max_val < points [ j ] :
                        max_val = points [ j ]
            self . maxes . append ( max_val )
        for max_val in self . maxes :
            print ( max_val )
if __name__ == '__main__' :
    Main ( ) . go ( )


---> console_out:
105
83
0
 
MATCHED!! :D
 41%|████      | 710/1746 [10:08<1:10:50,  4.10s/it]

-------------------------------------


---> lineNum: 711
---> probID: codeforces_920_B
---> inputs:
2
2
1 3
1 4
3
1 5
1 1
2 3
---> outputs:
1 2
1 0 2

import sys
for line in sys . stdin :
    t = int ( line )
    for _ in range ( t ) :
        n = int ( sys . stdin . readline ( ) )
        l = [ ]
        r = [ ]
        for i in range ( n ) :
            l_r = sys . stdin . readline ( ) . split ( )
            l . append ( int ( l_r [ 0 ] ) )
            r . append ( int ( l_r [ 1 ] ) )
        s = 0
        for i in range ( n ) :
            if s < r [ i ] :
                if l [ i ] > s :
                    s = l [ i ]
                else :
                    s += 1
                print ( s , end = " " )
            else :
                print ( 0 , end = " " )
        print ( )


---> console_out:
1 2 
1 0 2 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 712
---> probID: geeksforgeeks_728_A
---> inputs:

---> outputs:
Number of ways =  5


import math
def countWays ( n , m ) :
    count = [ 0 ] * ( n + 1 )
    count [ 0 ] = 0
    for i in range ( 1 , n + 1 ) :
        if i > m :
            count [ i ] = count [ i - 1 ] + count [ i - m ]
        elif i < m :
            count [ i ] = 1
        else :
            count [ i ] = 2
    return count [ n ]
n = 7
m = 4
print ( "Number of ways = " , countWays ( n , m ) )


---> console_out:
Number of ways =  5
 
MATCHED!! :D
 41%|████      | 712/1746 [10:08<49:47,  2.89s/it]  

-------------------------------------


---> lineNum: 713
---> probID: geeksforgeeks_4845_A
---> inputs:

---> outputs:
4
2 1 3 2 

def print_func ( n ) :
    print ( n + n // 2 )
    for i in range ( 2 , n + 1 , 2 ) :
        print ( i , end = " " )
    for i in range ( 1 , n + 1 , 2 ) :
        print ( i , end = " " )
    for i in range ( 2 , n + 1 , 2 ) :
        print ( i , end = " " )
if __name__ == "__main__" :
    n = 3
    print_func ( n )


---> console_out:
4
2 1 3 2  
MATCHED!! :D


-------------------------------------


---> lineNum: 714
---> probID: aizu_p02116_A
---> inputs:
2
---> outputs:
1

import sys
try :
    str = input ( )
    res = 0
    han = 0
    ni_beki = 1
    ruijyo = 0
    if str == "" :
        sys . exit ( 0 )
    else :
        res = int ( str )
        while True :
            han = ( res >> ruijyo ) % 2
            if han == 0 :
                res = ( res % ni_beki ) + 1
                break
            else :
                ni_beki = ni_beki * 2
                ruijyo += 1
        print ( res )
except :
    pass


---> console_out:
1
 
MATCHED!! :D
 41%|████      | 714/1746 [10:09<35:06,  2.04s/it]

-------------------------------------


---> lineNum: 715
---> probID: atcoder_ABC043_B
---> inputs:
01B0
---> outputs:
00

import re
s = input ( )
while "0B" in s or "1B" in s :
    s = re . sub ( "0B|1B" , "" , s )
s = s . replace ( "B" , "" )
print ( s )


---> console_out:
00
 
MATCHED!! :D
  File "./junk/1703784294294_2647/main.py", line 8
    public class Main :
           ^
SyntaxError: invalid syntax
out1,out2  20


-------------------------------------


---> lineNum: 716
---> probID: aizu_p02412_A
---> inputs:
5 9
0 0
---> outputs:
2

import java . util . ArrayList
import java . util . Arrays
import java . util . List
import java . util . Scanner
import java . util . concurrent . atomic . AtomicInteger
import java . util . stream . Collectors
import java . util . stream . IntStream
public class Main :
    def main ( args : Array [ str ] ) :
        scanner = Scanner ( System . in )
        while True :
            a = scanner . nextInt ( )
            b = scanner . nextInt ( )
            if a == 0 and b == 0 :
                break
            count = AtomicInteger ( 0 )
            used = ArrayList ( )
            IntStream . range ( 1 , a + 1 ) . forEach ( lambda x : IntStream . range ( 1 , a + 1 ) . filter ( lambda y : y != x ) . forEach ( lambda y : IntStream . range ( 1 , a + 1 ) . filter ( lambda z : z != x and z != y ) . filter ( lambda z : x + y + z == b ) . forEach ( lambda z : sorted = Arrays . asList ( x , y , z ) . stream ( ) . sorted ( ) . collect ( Collectors . toList ( ) ) . toString ( ) if used . contains ( sorted ) : return used . add ( sorted ) count . getAndAdd ( 1 ) ) ) )
            print ( count . get ( ) )


---> console_out:
 
DIDN'T MATCH!! :(
 41%|████      | 716/1746 [10:09<24:51,  1.45s/it]

-------------------------------------


---> lineNum: 717
---> probID: geeksforgeeks_2835_A
---> inputs:

---> outputs:
9


import math
MAX = 100
def recur ( ind , cnt , last , a , n , k , dp ) :
    if cnt == k :
        return 0
    if ind == n :
        return - 1e9
    if dp [ ind ] [ cnt ] != - 1 :
        return dp [ ind ] [ cnt ]
    ans = 0
    for i in range ( ind , n ) :
        if cnt % 2 == 0 :
            ans = max ( ans , recur ( i + 1 , cnt + 1 , i , a , n , k , dp ) )
        else :
            ans = max ( ans , math . gcd ( a [ last ] , a [ i ] ) + recur ( i + 1 , cnt + 1 , 0 , a , n , k , dp ) )
    dp [ ind ] [ cnt ] = ans
    return ans
def main ( ) :
    a = [ 4 , 5 , 3 , 7 , 8 , 10 , 9 , 8 ]
    n = len ( a )
    k = 4
    dp = [ [ - 1 for j in range ( MAX ) ] for i in range ( n ) ]
    print ( recur ( 0 , 0 , 0 , a , n , k , dp ) )
if __name__ == '__main__' :
    main ( )


---> console_out:
9
 
MATCHED!! :D


-------------------------------------


---> lineNum: 718
---> probID: codeforces_351_A
---> inputs:
3
0.000 0.500 0.750 1.000 2.000 3.000
---> outputs:
0.250

import sys
n = int ( sys . stdin . readline ( ) )
arr = [ ]
non_int = 0
sum_before = 0
sum = 0
for num in sys . stdin . readline ( ) . split ( ) :
    num = float ( num )
    sum_before += num
    if num != int ( num ) :
        non_int += 1
    sum += int ( num )
    arr . append ( num )
max_sum = min ( n , non_int ) + sum
min_sum = max ( 0 , non_int - n ) + sum
if min_sum > sum_before :
    ans = min_sum - sum_before
elif max_sum < sum_before :
    ans = sum_before - max_sum
else :
    x = sum_before - int ( sum_before )
    ans = min ( 1 - x , x )
print ( "{:.3f}" . format ( ans ) )


---> console_out:
0.250
 
MATCHED!! :D
 41%|████      | 718/1746 [10:09<17:45,  1.04s/it]

-------------------------------------


---> lineNum: 719
---> probID: geeksforgeeks_3293_A
---> inputs:

---> outputs:
Yes


def equivalentBase4 ( bin ) :
    if bin == "00" :
        return 0
    elif bin == "01" :
        return 1
    elif bin == "10" :
        return 2
    else :
        return 3
def isDivisibleBy5 ( bin ) :
    l = len ( bin )
    if l % 2 != 0 :
        bin = '0' + bin
    odd_sum = 0
    even_sum = 0
    isOddDigit = 1
    for i in range ( 0 , len ( bin ) , 2 ) :
        if isOddDigit != 0 :
            odd_sum += equivalentBase4 ( bin [ i : i + 2 ] )
        else :
            even_sum += equivalentBase4 ( bin [ i : i + 2 ] )
        isOddDigit ^= 1
    if abs ( odd_sum - even_sum ) % 5 == 0 :
        return "Yes"
    else :
        return "No"
bin = "10000101001"
print ( isDivisibleBy5 ( bin ) )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 720
---> probID: aizu_p00121_A
---> inputs:
0 1 2 3 4 5 6 7
1 0 2 3 4 5 6 7
7 6 5 4 3 2 1 0
---> outputs:
0
1
28

from collections import deque
queue = deque ( )
map = { }
str = ""
d = [ [ 0 , 1 , 4 ] , [ - 1 , 1 , 4 ] , [ - 1 , 1 , 4 ] , [ - 1 , 0 , 4 ] , [ 0 , 1 , - 4 ] , [ - 1 , 1 , - 4 ] , [ - 1 , 1 , - 4 ] , [ - 1 , 0 , - 4 ] ]
def bfs ( ) :
    while queue :
        str1 = queue . popleft ( )
        point = map [ str1 ]
        str2 = ""
        for i in range ( 8 ) :
            if str1 [ i ] == '0' :
                for j in range ( 3 ) :
                    change = str1 [ i + d [ i ] [ j ] ]
                    str2 = str1 . replace ( '0' , '9' )
                    str2 = str2 . replace ( change , '0' )
                    str2 = str2 . replace ( '9' , change )
                    if str2 not in map :
                        map [ str2 ] = point + 1
                        queue . append ( str2 )
                break
if __name__ == "__main__" :
    queue . append ( "01234567" )
    map [ "01234567" ] = 0
    bfs ( )
    while True :
        try :
            s = input ( )
            token = s . split ( )
            str = "" . join ( token )
            print ( map [ str ] )
        except :
            break


---> console_out:
0
1
28
 
MATCHED!! :D
 41%|████      | 720/1746 [10:09<12:55,  1.32it/s]Traceback (most recent call last):
  File "./junk/1703784294714_4603/main.py", line 20, in <module>
    arr . append ( int ( input ( ) ) )
ValueError: invalid literal for int() with base 10: '1 1 1 1'
out1,out2  30


-------------------------------------


---> lineNum: 721
---> probID: codeforces_55_B
---> inputs:
1 1 1 1
+ + *
---> outputs:
3

import sys
min_val = sys . maxsize
def util ( arr , ops , idx ) :
    global min_val
    if idx == 3 :
        min_val = min ( min_val , arr [ 0 ] )
        return
    for i in range ( len ( arr ) ) :
        for j in range ( i + 1 , len ( arr ) ) :
            a = [ arr [ k ] for k in range ( len ( arr ) ) if k != i and k != j ]
            if idx < 3 and ops [ idx ] == "+" :
                res = arr [ i ] + arr [ j ]
            else :
                res = arr [ i ] * arr [ j ]
            a . append ( res )
            util ( a , ops , idx + 1 )
if __name__ == "__main__" :
    arr = [ ]
    for i in range ( 4 ) :
        arr . append ( int ( input ( ) ) )
    ops = [ ]
    for i in range ( 3 ) :
        ops . append ( input ( ) )
    util ( arr , ops , 0 )
    print ( min_val )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 722
---> probID: geeksforgeeks_4183_A
---> inputs:

---> outputs:
Minimum Number of Square Free Divisors is 3
Minimum Number of Square Free Divisors is 1


from typing import List
MAX = 1005
def SieveOfEratosthenes ( primes : List [ int ] ) -> None :
    prime = [ True ] * MAX
    for i in range ( MAX ) :
        prime [ i ] = True
    p = 2
    while p * p < MAX :
        if prime [ p ] == True :
            for i in range ( p * 2 , MAX , p ) :
                prime [ i ] = False
        p += 1
    for p in range ( 2 , MAX ) :
        if prime [ p ] :
            primes . append ( p )
def minimumSquareFreeDivisors ( N : int ) -> int :
    primes = [ ]
    SieveOfEratosthenes ( primes )
    max_count = 0
    i = 0
    while i < len ( primes ) and primes [ i ] * primes [ i ] <= N :
        if N % primes [ i ] == 0 :
            tmp = 0
            while N % primes [ i ] == 0 :
                tmp += 1
                N //= primes [ i ]
            max_count = max ( max_count , tmp )
        i += 1
    if max_count == 0 :
        max_count = 1
    return max_count
if __name__ == '__main__' :
    N = 24
    print ( "Minimum Number of Square Free Divisors is" , minimumSquareFreeDivisors ( N ) )
    N = 6
    print ( "Minimum Number of Square Free Divisors is" , minimumSquareFreeDivisors ( N ) )


---> console_out:
Minimum Number of Square Free Divisors is 3
Minimum Number of Square Free Divisors is 1
 
MATCHED!! :D
 41%|████▏     | 722/1746 [10:09<09:25,  1.81it/s]  File "./junk/1703784294867_2213/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  840


-------------------------------------


---> lineNum: 723
---> probID: atcoder_ABC087_A
---> inputs:
1234
150
100
---> outputs:
84

import java . util . Scanner
class Main :
    def main ( args : Array [ str ] ) :
        sc = Scanner ( System . in )
        x = sc . nextInt ( )
        a = sc . nextInt ( )
        b = sc . nextInt ( )
        print ( ( x - a ) % b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 724
---> probID: codeforces_222_A
---> inputs:
3 2
3 1 1
---> outputs:
1

import sys
n , k = map ( int , input ( ) . split ( ) )
arr = list ( map ( int , input ( ) . split ( ) ) )
idx = k - 1
flag = True
while idx < n :
    if arr [ idx ] != arr [ k - 1 ] :
        flag = False
        break
    idx += 1
if not flag :
    print ( - 1 )
else :
    i = k - 1
    while i >= 0 :
        if arr [ i ] != arr [ k - 1 ] :
            break
        i -= 1
    print ( i + 1 )


---> console_out:
1
 
MATCHED!! :D
 41%|████▏     | 724/1746 [10:09<06:53,  2.47it/s]out1,out2  thenumberafterunsettingtherightmostsetbit60


-------------------------------------


---> lineNum: 725
---> probID: geeksforgeeks_4747_A
---> inputs:

---> outputs:
The number after unsetting the rightmost set bit 6


class GFG :
    def fun ( n ) :
        return n & ( n - 1 )
    def main ( arg ) :
        n = 7
        print ( "The number after unsetting the rightmost set bit" , fun ( n ) )
        


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 726
---> probID: geeksforgeeks_2348_A
---> inputs:

---> outputs:
5


import bisect
def LongestFibSubseq ( A , n ) :
    S = set ( A )
    maxLen = 0
    for i in range ( n ) :
        for j in range ( i + 1 , n ) :
            x = A [ j ]
            y = A [ i ] + A [ j ]
            length = 3
            while y in S and y != max ( A ) :
                z = x + y
                x = y
                y = z
                length += 1
                maxLen = max ( maxLen , length )
    return maxLen if maxLen >= 3 else 0
if __name__ == '__main__' :
    A = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ]
    n = len ( A )
    print ( LongestFibSubseq ( A , n ) )


---> console_out:
5
 
MATCHED!! :D
 42%|████▏     | 726/1746 [10:10<05:26,  3.12it/s]

-------------------------------------


---> lineNum: 727
---> probID: geeksforgeeks_2188_A
---> inputs:

---> outputs:
7


import numpy as np
def countPairs ( a , b , n , m ) :
    cnt = 0
    s = set ( )
    for i in range ( n ) :
        for j in range ( m ) :
            sum = a [ i ] + b [ j ]
            if sum not in s :
                cnt += 1
                s . add ( sum )
    return cnt
a = np . array ( [ 12 , 2 , 7 ] )
n = len ( a )
b = np . array ( [ 4 , 3 , 8 ] )
m = len ( b )
print ( countPairs ( a , b , n , m ) )


---> console_out:
7
 
MATCHED!! :D


-------------------------------------


---> lineNum: 728
---> probID: geeksforgeeks_94_A
---> inputs:

---> outputs:
Yes


def check ( arr , x , n ) :
    sum = 0
    for i in range ( n ) :
        y = arr [ i ] ** 0.5
        if y == int ( y ) :
            sum += arr [ i ]
    if sum % x == 0 :
        return True
    else :
        return False
if __name__ == '__main__' :
    arr = [ 2 , 3 , 4 , 9 , 10 ]
    n = len ( arr )
    x = 13
    if check ( arr , x , n ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
 42%|████▏     | 728/1746 [10:10<04:38,  3.66it/s]Traceback (most recent call last):
  File "./junk/1703784295564_5733/main.py", line 2, in <module>
    n = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '2 10'
out1,out2  90304080


-------------------------------------


---> lineNum: 729
---> probID: aizu_p02437_A
---> inputs:
2 10
0 0 3
0 0 9
0 0 1
1 0
2 0
1 0
0 0 4
1 0
0 1 8
1 1
---> outputs:
9
3
4
8

import heapq
n = int ( input ( ) )
pque = [ [ ] for i in range ( n ) ]
q = int ( input ( ) )
for i in range ( q ) :
    command , t = map ( int , input ( ) . split ( ) )
    if command == 0 :
        x = int ( input ( ) )
        heapq . heappush ( pque [ t ] , - x )
    elif command == 1 :
        if pque [ t ] :
            print ( - pque [ t ] [ 0 ] )
    elif command == 2 :
        if pque [ t ] :
            heapq . heappop ( pque [ t ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 730
---> probID: geeksforgeeks_2928_A
---> inputs:

---> outputs:
The minimum sum of pairs is 40
The maximum sum of pairs is 80


import math
def calculate_min_sum ( a , n ) :
    a . sort ( )
    min_sum = 0
    for i in range ( 1 , n , 2 ) :
        min_sum += abs ( a [ i ] - a [ i - 1 ] )
    return min_sum
def calculate_max_sum ( a , n ) :
    a . sort ( )
    max_sum = 0
    for i in range ( n // 2 ) :
        max_sum += abs ( a [ n - 1 - i ] - a [ i ] )
    return max_sum
a = [ 10 , - 10 , 20 , - 40 ]
n = len ( a )
print ( "The minimum sum of pairs is" , calculate_min_sum ( a , n ) )
print ( "The maximum sum of pairs is" , calculate_max_sum ( a , n ) )


---> console_out:
The minimum sum of pairs is 40
The maximum sum of pairs is 80
 
MATCHED!! :D
 42%|████▏     | 730/1746 [10:10<03:36,  4.70it/s]

-------------------------------------


---> lineNum: 731
---> probID: aizu_p02442_A
---> inputs:
3
1 2 3
2
2 4
---> outputs:
1

import sys
n = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
m = int ( input ( ) )
b = list ( map ( int , input ( ) . split ( ) ) )
i = 0
while True :
    if i >= len ( b ) :
        print ( "0" )
        sys . exit ( )
    if i >= len ( a ) :
        print ( "1" )
        sys . exit ( )
    if a [ i ] > b [ i ] :
        print ( "0" )
        sys . exit ( )
    if a [ i ] < b [ i ] :
        print ( "1" )
        sys . exit ( )
    i += 1


---> console_out:
1
 
MATCHED!! :D
  File "./junk/1703784295770_2926/main.py", line 7
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  yes


-------------------------------------


---> lineNum: 732
---> probID: atcoder_ABC069_C
---> inputs:
3
1 10 100
---> outputs:
Yes

import java . util . ArrayList
import java . util . Collections
import java . util . Scanner
class Main :
    def main ( args : Array [ str ] ) :
        sum = 0
        sc = Scanner ( System . in )
        a = sc . nextInt ( )
        stateList = ArrayList [ int ] ( )
        cnt4 = 0
        cnt2 = 0
        work = 0
        for i in range ( a ) :
            stateList . add ( sc . nextInt ( ) )
            work = stateList . get ( i ) % 4
            if work == 0 :
                cnt4 += 1
            else :
                work = stateList . get ( i ) % 2
                if work == 0 :
                    cnt2 += 1
        work = a // 2
        if work <= cnt4 :
            print ( "Yes" )
            return
        work = a - ( cnt4 * 2 )
        if work == 0 or cnt2 == 0 :
            print ( "No" )
            return
        if work == cnt2 :
            print ( "Yes" )
            return
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(
 42%|████▏     | 732/1746 [10:10<02:50,  5.96it/s]

-------------------------------------


---> lineNum: 733
---> probID: geeksforgeeks_2852_A
---> inputs:

---> outputs:
2


import numpy as np
def isPalindrome ( s ) :
    for i in range ( len ( s ) ) :
        if s [ i ] != s [ len ( s ) - i - 1 ] :
            return False
    return True
def ans ( s ) :
    s2 = s
    for i in range ( len ( s ) ) :
        s2 = s2 [ len ( s2 ) - 1 ] + s2
        s2 = s2 [ : - 1 ]
        if ( s is None and s2 is not None ) or ( s is not None and s != s2 ) and isPalindrome ( s2 ) :
            return True
    return False
def solve ( s ) :
    if len ( s ) <= 3 :
        return - 1
    cnt = np . zeros ( 25 , dtype = int )
    for i in range ( len ( s ) ) :
        cnt [ ord ( s [ i ] ) - ord ( 'a' ) ] += 1
    if np . max ( cnt ) >= len ( s ) - 1 :
        return - 1
    else :
        return 1 if ans ( s ) else 2
s = "nolon"
print ( solve ( s ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 734
---> probID: geeksforgeeks_2565_A
---> inputs:

---> outputs:
891


import numpy as np
def count_numbers ( k , n ) :
    dp = np . zeros ( ( n + 1 , 2 ) , dtype = int )
    dp [ 1 ] [ 0 ] = 0
    dp [ 1 ] [ 1 ] = k - 1
    for i in range ( 2 , n + 1 ) :
        dp [ i ] [ 0 ] = dp [ i - 1 ] [ 1 ]
        dp [ i ] [ 1 ] = ( dp [ i - 1 ] [ 0 ] + dp [ i - 1 ] [ 1 ] ) * ( k - 1 )
    return dp [ n ] [ 0 ] + dp [ n ] [ 1 ]
if __name__ == '__main__' :
    k = 10
    n = 3
    print ( count_numbers ( k , n ) )


---> console_out:
891
 
MATCHED!! :D
 42%|████▏     | 734/1746 [10:11<03:20,  5.04it/s]

-------------------------------------


---> lineNum: 735
---> probID: geeksforgeeks_1186_A
---> inputs:

---> outputs:
31


def minCost ( n , arr , cost ) :
    sum = 0
    totalCost = 0
    for i in range ( n - 1 ) :
        sum += arr [ i ]
    totalCost += cost * sum
    arr [ n - 1 ] += sum
    totalCost += ( 2 * cost * arr [ n - 1 ] )
    return totalCost
if __name__ == '__main__' :
    arr = [ 1 , 2 , 4 , 5 ]
    n = len ( arr )
    cost = 1
    print ( minCost ( n , arr , cost ) )


---> console_out:
31
 
MATCHED!! :D


-------------------------------------


---> lineNum: 736
---> probID: aizu_p00276_A
---> inputs:
4
3 0 0
1 1 1
9 4 1
0 1 2
---> outputs:
1
1
4
0

import sys
class Main :
    def main ( self ) :
        main = Main ( )
        main . teamFormationMake ( )
    def teamFormationMake ( self ) :
        bufferedReader = sys . stdin . readline
        try :
            inputStr = bufferedReader ( )
            yearNum = int ( inputStr )
            programmerList = [ ]
            teamNum = 0
            for i in range ( yearNum ) :
                teamStr = bufferedReader ( )
                teamStrs = teamStr . split ( )
                programmerList . append ( [ ] )
                for j in range ( len ( teamStrs ) ) :
                    programmerList [ i ] . append ( int ( teamStrs [ j ] ) )
            for i in range ( yearNum ) :
                c = programmerList [ i ] [ 0 ]
                a = programmerList [ i ] [ 1 ]
                n = programmerList [ i ] [ 2 ]
                while True :
                    if c >= 1 and a >= 1 and n >= 1 :
                        teamNum += 1
                        c -= 1
                        a -= 1
                        n -= 1
                    elif c >= 2 and a >= 1 :
                        teamNum += 1
                        c -= 2
                        a -= 1
                    elif c >= 3 :
                        teamNum += 1
                        c -= 3
                    else :
                        break
                print ( teamNum )
                teamNum = 0
        except :
            pass
if __name__ == '__main__' :
    Main ( ) . main ( )


---> console_out:
1
1
4
0
 
MATCHED!! :D
 42%|████▏     | 736/1746 [10:11<02:39,  6.33it/s]Traceback (most recent call last):
  File "./junk/1703784296500_6361/main.py", line 6, in <module>
    n , m , s = map ( str , line . split ( ) )
ValueError: not enough values to unpack (expected 3, got 1)
out1,out2  4020


-------------------------------------


---> lineNum: 737
---> probID: aizu_p00461_A
---> inputs:
1
13
OOIOIOIOIIOII
2
13
OOIOIOIOIIOII
0
---> outputs:
4
2

import sys
for line in sys . stdin :
    line = line . strip ( )
    if line == '0' :
        break
    n , m , s = map ( str , line . split ( ) )
    n = int ( n )
    m = int ( m )
    count = 0
    for i in range ( m - ( n * 2 ) + 1 ) :
        if s [ i ] == 'I' :
            flag = True
            for j in range ( n ) :
                if s [ i + j * 2 + 1 ] != 'O' or s [ i + ( j + 1 ) * 2 ] != 'I' :
                    flag = False
                    break
            if flag :
                count += 1
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 738
---> probID: codeforces_1593_B
---> inputs:
5
100
71345
3259
50555
2050047
---> outputs:
0
3
1
3
2

from collections import deque
t = int ( input ( ) )
for _ in range ( t ) :
    s = input ( )
    ans = 0
    lst = deque ( )
    for i in range ( len ( s ) - 1 , - 1 , - 1 ) :
        ch = s [ i ]
        if not lst :
            if ch == '0' or ch == '5' :
                lst . append ( ch )
            else :
                ans += 1
        else :
            found = False
            for j in range ( len ( lst ) ) :
                if int ( ch + lst [ j ] ) % 25 == 0 :
                    found = True
                    ans += len ( lst ) - 1
                    break
            if found :
                break
            if ch == '0' or ch == '5' :
                lst . append ( ch )
            else :
                ans += 1
    print ( ans )


---> console_out:
0
3
1
3
2
 
MATCHED!! :D
 42%|████▏     | 738/1746 [10:11<02:11,  7.68it/s]

-------------------------------------


---> lineNum: 739
---> probID: geeksforgeeks_1277_A
---> inputs:

---> outputs:
1 2 3 4 5 

from typing import Optional
class Node :
    def __init__ ( self , data : int ) -> None :
        self . data = data
        self . left : Optional [ Node ] = None
        self . right : Optional [ Node ] = None
def insert ( root : Optional [ Node ] , data : int ) -> Node :
    if root is None :
        return Node ( data )
    if data < root . data :
        root . left = insert ( root . left , data )
    if data > root . data :
        root . right = insert ( root . right , data )
    return root
def inOrder ( root : Optional [ Node ] ) -> None :
    if root is None :
        return
    inOrder ( root . left )
    print ( root . data , end = " " )
    inOrder ( root . right )
if __name__ == "__main__" :
    arr = [ 1 , 2 , 3 , 2 , 5 , 4 , 4 ]
    n = len ( arr )
    root = None
    for i in range ( n ) :
        root = insert ( root , arr [ i ] )
    inOrder ( root )


---> console_out:
1 2 3 4 5  
MATCHED!! :D


-------------------------------------


---> lineNum: 740
---> probID: geeksforgeeks_2710_A
---> inputs:

---> outputs:
geeksgeeks


MAX_CHAR = 26
def removeChars ( str , k ) :
    hash = [ 0 ] * MAX_CHAR
    n = len ( str )
    for i in range ( n ) :
        hash [ ord ( str [ i ] ) - ord ( 'a' ) ] += 1
    res = ""
    for i in range ( n ) :
        if hash [ ord ( str [ i ] ) - ord ( 'a' ) ] >= k :
            res += str [ i ]
    return res
if __name__ == '__main__' :
    str = "geeksforgeeks"
    k = 2
    print ( removeChars ( str , k ) )


---> console_out:
geeksgeeks
 
MATCHED!! :D
 42%|████▏     | 740/1746 [10:11<01:56,  8.61it/s]

-------------------------------------


---> lineNum: 741
---> probID: geeksforgeeks_3533_A
---> inputs:

---> outputs:
Length of Longest Common Substring is 10


def LCSubStr ( X , Y , m , n ) :
    LCStuff = [ [ 0 for j in range ( n + 1 ) ] for i in range ( m + 1 ) ]
    result = 0
    for i in range ( m + 1 ) :
        for j in range ( n + 1 ) :
            if i == 0 or j == 0 :
                LCStuff [ i ] [ j ] = 0
            elif X [ i - 1 ] == Y [ j - 1 ] :
                LCStuff [ i ] [ j ] = LCStuff [ i - 1 ] [ j - 1 ] + 1
                result = max ( result , LCStuff [ i ] [ j ] )
            else :
                LCStuff [ i ] [ j ] = 0
    return result
X = "OldSite:GeeksforGeeks.org"
Y = "NewSite:GeeksQuiz.com"
m = len ( X )
n = len ( Y )
print ( "Length of Longest Common Substring is" , LCSubStr ( list ( X ) , list ( Y ) , m , n ) )


---> console_out:
Length of Longest Common Substring is 10
 
MATCHED!! :D


-------------------------------------


---> lineNum: 742
---> probID: geeksforgeeks_1502_A
---> inputs:

---> outputs:
Max occurring digit is 5


import math
def countOccurrences ( x , d ) :
    count = 0
    while x > 0 :
        if x % 10 == d :
            count += 1
        x = math . floor ( x / 10 )
    return count
def maxOccurring ( x ) :
    if x < 0 :
        x = - x
    result = 0
    max_count = 1
    for d in range ( 10 ) :
        count = countOccurrences ( x , d )
        if count >= max_count :
            max_count = count
            result = d
    return result
x = 1223355
print ( "Max occurring digit is" , maxOccurring ( x ) )


---> console_out:
Max occurring digit is 5
 
MATCHED!! :D
 42%|████▏     | 742/1746 [10:11<01:43,  9.73it/s]

-------------------------------------


---> lineNum: 743
---> probID: geeksforgeeks_311_A
---> inputs:

---> outputs:
3 5 7 8 9 

import numpy as np
def printLogestIncSubArr ( arr , n ) :
    max_val = 1
    length = 1
    max_index = 0
    for i in range ( 1 , n ) :
        if arr [ i ] > arr [ i - 1 ] :
            length += 1
        else :
            if max_val < length :
                max_val = length
                max_index = i - max_val
            length = 1
    if max_val < length :
        max_val = length
        max_index = n - max_val
    for i in range ( max_index , max_val + max_index ) :
        print ( arr [ i ] , end = " " )
arr = np . array ( [ 5 , 6 , 3 , 5 , 7 , 8 , 9 , 1 , 2 ] )
n = len ( arr )
printLogestIncSubArr ( arr , n )


---> console_out:
3 5 7 8 9  
MATCHED!! :D
  File "./junk/1703784297202_8189/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  1005010


-------------------------------------


---> lineNum: 744
---> probID: codeforces_58_B
---> inputs:
10
---> outputs:
10 5 1

import java . util . Scanner
class Main :
    def main ( args : list ) -> None :
        sc = Scanner ( System . in )
        n = sc . nextInt ( )
        print ( n , end = " " )
        m = n
        for i in range ( n - 1 , 0 , - 1 ) :
            if m % i == 0 :
                print ( i , end = " " )
                m = i
if __name__ == "__main__" :
    Main . main ( [ ] )


---> console_out:
 
DIDN'T MATCH!! :(
 43%|████▎     | 744/1746 [10:12<02:03,  8.14it/s]  File "./junk/1703784297279_9305/main.py", line 4
    sf = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  yesnoyesyesno


-------------------------------------


---> lineNum: 745
---> probID: codeforces_811_B
---> inputs:
5 5
5 4 3 2 1
1 5 3
1 3 1
2 4 3
4 4 4
2 5 3
---> outputs:
Yes
No
Yes
Yes
No

import java . util . Scanner
class program :
    def main ( args : list ) -> None :
        sf = Scanner ( System . in )
        t = 1
        for t1 in range ( t ) :
            n = sf . nextInt ( )
            m = sf . nextInt ( )
            p = [ 0 ] * n
            hash = [ 0 ] * ( n + 1 )
            for i in range ( n ) :
                p [ i ] = sf . nextInt ( )
                hash [ i ] = p [ i ]
            for i in range ( m ) :
                l = sf . nextInt ( )
                r = sf . nextInt ( )
                x = sf . nextInt ( )
                l -= 1
                r -= 1
                x -= 1
                ind = x
                if ind < l or ind > r :
                    print ( "Yes" )
                else :
                    hash1 = [ 0 ] * ( n + 1 )
                    for j in range ( l ) :
                        hash1 [ p [ j ] ] += 1
                    for j in range ( r + 1 , n ) :
                        hash1 [ p [ j ] ] += 1
                    cnt = 0
                    for j in range ( 1 , n + 1 ) :
                        if hash1 [ j ] == 0 :
                            cnt += 1
                        if j == hash [ x ] :
                            break
                    dif1 = ind - l + 1
                    if dif1 != cnt :
                        print ( "No" )
                    else :
                        print ( "Yes" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 746
---> probID: geeksforgeeks_3778_A
---> inputs:

---> outputs:
Maximum sum is: 25


import math
def Max_Sum ( a , n ) :
    b = [ 0 ] * n
    S = 0
    res = 0
    for i in range ( n ) :
        b [ i ] = res
        res += a [ i ]
        S += a [ i ]
        res = max ( res , - S )
    ans = S
    ans = max ( ans , res )
    g = 0
    for i in range ( n - 1 , - 1 , - 1 ) :
        g -= a [ i ]
        ans = max ( ans , g + b [ i ] )
    return ans
a = [ - 6 , 10 , - 3 , 10 , - 2 ]
n = len ( a )
print ( "Maximum sum is:" , Max_Sum ( a , n ) )


---> console_out:
Maximum sum is: 25
 
MATCHED!! :D
 43%|████▎     | 746/1746 [10:12<01:44,  9.54it/s]

-------------------------------------


---> lineNum: 747
---> probID: codeforces_1452_A
---> inputs:
5
5 5
3 4
7 1
0 0
2 0
---> outputs:
10
7
13
0
3

import sys
for line in sys . stdin :
    t = int ( line )
    for i in range ( t ) :
        a = list ( map ( int , input ( ) . split ( ) ) )
        a . sort ( )
        if a [ 0 ] == a [ 1 ] :
            print ( 2 * a [ 0 ] )
        else :
            print ( 2 * a [ 1 ] - 1 )


---> console_out:
10
7
13
0
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 748
---> probID: geeksforgeeks_2945_A
---> inputs:

---> outputs:
geeksrofgeeks

def reverse ( str , x ) :
    n = ( len ( str ) - x ) // 2
    for i in range ( n ) :
        print ( str [ i ] , end = "" )
    for i in range ( n + x - 1 , n - 1 , - 1 ) :
        print ( str [ i ] , end = "" )
    for i in range ( n + x , len ( str ) ) :
        print ( str [ i ] , end = "" )
str = "geeksforgeeks"
x = 3
reverse ( str , x )


---> console_out:
geeksrofgeeks 
MATCHED!! :D
 43%|████▎     | 748/1746 [10:12<01:31, 10.87it/s]Traceback (most recent call last):
  File "./junk/1703784297529_8270/main.py", line 21, in <module>
    print ( "Minimum number of deletions = " , minimumNumberOfDeletions ( str ) )
  File "./junk/1703784297529_8270/main.py", line 17, in minimumNumberOfDeletions
    n = len ( str )
UnboundLocalError: local variable 'len' referenced before assignment
out1,out2  minimumnumberofdeletions80


-------------------------------------


---> lineNum: 749
---> probID: geeksforgeeks_2859_A
---> inputs:

---> outputs:
Minimum number of deletions =  8


def lps ( str ) :
    n = len ( str )
    L = [ [ 0 for x in range ( n ) ] for x in range ( n ) ]
    for i in range ( n ) :
        L [ i ] [ i ] = 1
    for cl in range ( 2 , n + 1 ) :
        for i in range ( n - cl + 1 ) :
            j = i + cl - 1
            if ( str [ i ] == str [ j ] and cl == 2 ) :
                L [ i ] [ j ] = 2
            elif ( str [ i ] == str [ j ] ) :
                L [ i ] [ j ] = L [ i + 1 ] [ j - 1 ] + 2
            else :
                L [ i ] [ j ] = max ( L [ i ] [ j - 1 ] , L [ i + 1 ] [ j ] )
    return L [ 0 ] [ n - 1 ]
def minimumNumberOfDeletions ( str ) :
    n = len ( str )
    len = lps ( str )
    return ( n - len )
str = "geeksforgeeks"
print ( "Minimum number of deletions = " , minimumNumberOfDeletions ( str ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 750
---> probID: geeksforgeeks_561_A
---> inputs:

---> outputs:
0


def bit_check ( n ) :
    if ( n & ( n - 1 ) ) == 0 :
        return True
    return False
if __name__ == '__main__' :
    n = 14
    if bit_check ( n ) :
        print ( '1' )
    else :
        print ( '0' )


---> console_out:
0
 
MATCHED!! :D
 43%|████▎     | 750/1746 [10:12<01:22, 12.09it/s]

-------------------------------------


---> lineNum: 751
---> probID: codeforces_1213_B
---> inputs:
5
6
3 9 4 6 7 5
1
1000000
2
2 1
10
31 41 59 26 53 58 97 93 23 84
7
3 2 1 2 3 4 5
---> outputs:
3
0
1
8
2

import sys
t = int ( input ( ) )
for _ in range ( t ) :
    n = int ( input ( ) )
    arr = list ( map ( int , input ( ) . split ( ) ) )
    curr = arr [ n - 1 ]
    c = 0
    for i in range ( n - 2 , - 1 , - 1 ) :
        if arr [ i ] <= curr :
            curr = arr [ i ]
        else :
            c += 1
    print ( c )


---> console_out:
3
0
1
8
2
 
MATCHED!! :D
out1,out2  174272580


-------------------------------------


---> lineNum: 752
---> probID: projecteuler_p187_A
---> inputs:

---> outputs:
17427258

import math
class p187 :
    def __init__ ( self ) :
        pass
    def main ( self ) :
        print ( self . run ( ) )
    LIMIT = math . pow ( 10 , 8 ) - 1
    def run ( self ) :
        count = 0
        primes = self . listPrimes ( int ( self . LIMIT / 2 ) )
        sqrt = int ( math . sqrt ( self . LIMIT ) )
        for i in range ( len ( primes ) ) :
            if primes [ i ] > sqrt :
                break
            end = self . binarySearch ( primes , int ( self . LIMIT / primes [ i ] ) )
            if end >= 0 :
                end += 1
            else :
                end = - end - 1
            count += end - i
        return str ( count )
    def listPrimes ( self , n ) :
        primes = [ ]
        is_prime = [ True ] * ( n + 1 )
        for i in range ( 2 , n + 1 ) :
            if is_prime [ i ] :
                primes . append ( i )
                for j in range ( i * i , n + 1 , i ) :
                    is_prime [ j ] = False
        return primes
    def binarySearch ( self , arr , x ) :
        l = 0
        r = len ( arr ) - 1
        while l <= r :
            mid = int ( ( l + r ) / 2 )
            if arr [ mid ] == x :
                return mid
            elif arr [ mid ] < x :
                l = mid + 1
            else :
                r = mid - 1
        return - ( l + 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 43%|████▎     | 752/1746 [10:12<01:17, 12.82it/s]out1,out2 2080 170


-------------------------------------


---> lineNum: 753
---> probID: geeksforgeeks_2098_A
---> inputs:

---> outputs:
17


import math
M = 20
dp = [ [ [ [ 0 for _ in range ( 2 ) ] for _ in range ( 2 ) ] for _ in range ( M ) ] for _ in range ( M ) ]
d = 0
K = 0
def count ( pos , cnt , tight , nonz , num ) :
    if pos == len ( num ) :
        if cnt == K :
            return 1
        return 0
    if dp [ pos ] [ cnt ] [ tight ] [ nonz ] != - 1 :
        return dp [ pos ] [ cnt ] [ tight ] [ nonz ]
    ans = 0
    limit = 9 if tight == 0 else num [ pos ]
    for dig in range ( limit + 1 ) :
        currCnt = cnt
        if dig == d :
            if d != 0 or ( d == 0 and nonz != 0 ) :
                currCnt += 1
        currTight = tight
        if dig < num [ pos ] :
            currTight = 1
        ans += count ( pos + 1 , currCnt , currTight , 1 if dig != 0 else 0 , num )
    dp [ pos ] [ cnt ] [ tight ] [ nonz ] = ans
    return ans
def solve ( x ) :
    num = [ ]
    while x != 0 :
        num . append ( x % 10 )
        x //= 10
    num . reverse ( )
    for i in range ( M ) :
        for j in range ( M ) :
            for k in range ( 2 ) :
                for l in range ( 2 ) :
                    dp [ i ] [ j ] [ k ] [ l ] = - 1
    return count ( 0 , 0 , 0 , 0 , num )
if __name__ == '__main__' :
    L = 11
    R = 100
    d = 2
    K = 1
    print ( solve ( R ) - solve ( L - 1 ) )


---> console_out:
208
 
DIDN'T MATCH!! :(
  File "./junk/1703784297852_5954/main.py", line 6
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  220


-------------------------------------


---> lineNum: 754
---> probID: codeforces_514_A
---> inputs:
27
---> outputs:
22

import java . util . ArrayList
import java . util . List
import java . util . Scanner
class Test1 :
    def main ( args : Array [ str ] ) :
        sc = Scanner ( System . in )
        list = ArrayList [ Long ] ( )
        x = sc . nextLong ( )
        while x > 0 :
            r = x % 10
            if 9 - r < r :
                if x / 10 == 0 and 9 - r == 0 :
                    list . add ( r )
                else :
                    list . add ( 9 - r )
            else :
                list . add ( r )
            x = x / 10
        pow = 0
        newNumber = 0
        for i in range ( list . size ( ) ) :
            newNumber = newNumber + list . get ( i ) * pow ( 10 , pow )
            pow += 1
        System . out . println ( newNumber )


---> console_out:
 
DIDN'T MATCH!! :(
 43%|████▎     | 754/1746 [10:12<01:13, 13.49it/s]

-------------------------------------


---> lineNum: 755
---> probID: geeksforgeeks_5076_A
---> inputs:

---> outputs:
Peaks : 10 7 5 
Troughs : 5 5 3 

import numpy as np
def isPeak ( arr , n , num , i , j ) :
    if i >= 0 and arr [ i ] > num :
        return False
    if j < n and arr [ j ] > num :
        return False
    return True
def isTrough ( arr , n , num , i , j ) :
    if i >= 0 and arr [ i ] < num :
        return False
    if j < n and arr [ j ] < num :
        return False
    return True
def printPeaksTroughs ( arr , n ) :
    print ( "Peaks : " , end = "" )
    for i in range ( n ) :
        if isPeak ( arr , n , arr [ i ] , i - 1 , i + 1 ) :
            print ( arr [ i ] , end = " " )
    print ( "" )
    print ( "Troughs : " , end = "" )
    for i in range ( n ) :
        if isTrough ( arr , n , arr [ i ] , i - 1 , i + 1 ) :
            print ( arr [ i ] , end = " " )
if __name__ == "__main__" :
    arr = np . array ( [ 5 , 10 , 5 , 7 , 4 , 3 , 5 ] )
    n = arr . size
    printPeaksTroughs ( arr , n )


---> console_out:
Peaks : 10 7 5 
Troughs : 5 5 3  
MATCHED!! :D


-------------------------------------


---> lineNum: 756
---> probID: geeksforgeeks_1173_A
---> inputs:

---> outputs:
30 is positive
-20 is negative
0 is zero


def index ( i ) :
    return 1 + ( i >> 31 ) - ( - i >> 31 )
def check ( n ) :
    s = [ "negative" , "zero" , "positive" ]
    val = index ( n )
    print ( n , "is" , s [ val ] )
if __name__ == "__main__" :
    check ( 30 )
    check ( - 20 )
    check ( 0 )


---> console_out:
30 is positive
-20 is negative
0 is zero
 
MATCHED!! :D
 43%|████▎     | 756/1746 [10:13<01:39,  9.96it/s]

-------------------------------------


---> lineNum: 757
---> probID: geeksforgeeks_2932_A
---> inputs:

---> outputs:
3


import numpy as np
def frequency ( a , n , x ) :
    count = 0
    for i in range ( n ) :
        if a [ i ] == x :
            count += 1
    return count
a = np . array ( [ 0 , 5 , 5 , 5 , 4 ] )
x = 5
n = len ( a )
print ( frequency ( a , n , x ) )


---> console_out:
3
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784298501_8697/main.py", line 14, in <module>
    flag = isNumBalanced ( N )
  File "./junk/1703784298501_8697/main.py", line 4, in isNumBalanced
    str = str ( num )
UnboundLocalError: local variable 'str' referenced before assignment
out1,out2  yes


-------------------------------------


---> lineNum: 758
---> probID: geeksforgeeks_1807_A
---> inputs:

---> outputs:
YES


import collections
def isNumBalanced ( num ) :
    num = abs ( num )
    str = str ( num )
    ch_arr = list ( str )
    hs = set ( ch_arr )
    str_len = len ( str )
    hs_len = len ( hs )
    if hs_len <= str_len // 2 or hs_len == str_len :
        return True
    return False
if __name__ == '__main__' :
    N = 1234567890
    flag = isNumBalanced ( N )
    if flag :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(
 43%|████▎     | 758/1746 [10:13<01:57,  8.40it/s]

-------------------------------------


---> lineNum: 759
---> probID: geeksforgeeks_4836_A
---> inputs:

---> outputs:
Yes
No
No


def isPrime ( n ) :
    if n <= 1 :
        return False
    if n <= 3 :
        return True
    if n % 2 == 0 or n % 3 == 0 :
        return False
    i = 5
    while i * i <= n :
        if n % i == 0 or n % ( i + 2 ) == 0 :
            return False
        i = i + 6
    return True
def isThreeDisctFactors ( n ) :
    sq = int ( n ** 0.5 )
    if sq * sq != n :
        return False
    return True if isPrime ( sq ) else False
num = 9
if isThreeDisctFactors ( num ) :
    print ( "Yes" )
else :
    print ( "No" )
num = 15
if isThreeDisctFactors ( num ) :
    print ( "Yes" )
else :
    print ( "No" )
num = 12397923568441
if isThreeDisctFactors ( num ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
No
No
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784298626_8200/main.py", line 1, in <module>
    from math import BigInteger
ImportError: cannot import name 'BigInteger' from 'math' (/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so)
out1,out2  2720


-------------------------------------


---> lineNum: 760
---> probID: projecteuler_p065_A
---> inputs:

---> outputs:
272

from math import BigInteger
class p065 :
    def __init__ ( self ) :
        pass
    def run ( self ) :
        n = BigInteger ( '1' )
        d = BigInteger ( '0' )
        for i in range ( 99 , - 1 , - 1 ) :
            temp = BigInteger ( str ( self . continuedFractionTerm ( i ) ) ) . multiply ( n ) . add ( d )
            d = n
            n = temp
        sum = 0
        while not n . equals ( BigInteger ( '0' ) ) :
            divrem = n . divideAndRemainder ( BigInteger ( '10' ) )
            sum += divrem [ 1 ] . intValue ( )
            n = divrem [ 0 ]
        return str ( sum )
    def continuedFractionTerm ( self , i ) :
        if i == 0 :
            return 2
        elif i % 3 == 2 :
            return i // 3 * 2 + 2
        else :
            return 1
if __name__ == '__main__' :
    print ( p065 ( ) . run ( ) )


---> console_out:
 
DIDN'T MATCH!! :(
 44%|████▎     | 760/1746 [10:13<01:44,  9.39it/s]

-------------------------------------


---> lineNum: 761
---> probID: geeksforgeeks_2334_A
---> inputs:

---> outputs:
1020


import math
def gcd ( a , b ) :
    if b == 0 :
        return a
    else :
        return gcd ( b , a % b )
def lcm ( x , y , z ) :
    ans = ( x * y ) // gcd ( x , y )
    return ( z * ans ) // gcd ( ans , z )
def findDivisible ( n , x , y , z ) :
    lcm_val = lcm ( x , y , z )
    ndigitnumber = 10 ** ( n - 1 )
    reminder = ndigitnumber % lcm_val
    if reminder == 0 :
        return ndigitnumber
    ndigitnumber += lcm_val - reminder
    if ndigitnumber < 10 ** n :
        return ndigitnumber
    else :
        return 0
n , x , y , z = 4 , 2 , 3 , 5
res = findDivisible ( n , x , y , z )
if res != 0 :
    print ( res )
else :
    print ( "Not possible" )


---> console_out:
1020
 
MATCHED!! :D


-------------------------------------


---> lineNum: 762
---> probID: geeksforgeeks_1101_A
---> inputs:

---> outputs:
2 3 

MAXN = 100001
prime = [ True ] * MAXN
def SieveOfEratosthenes ( ) :
    for i in range ( MAXN ) :
        prime [ i ] = True
    prime [ 0 ] = False
    prime [ 1 ] = False
    p = 2
    while p * p < MAXN :
        if prime [ p ] == True :
            for i in range ( p * p , MAXN , p ) :
                prime [ i ] = False
        p += 1
def common_prime ( a , b ) :
    gcd = __gcd ( a , b )
    for i in range ( 2 , gcd + 1 ) :
        if prime [ i ] and gcd % i == 0 :
            print ( i , end = " " )
def __gcd ( a , b ) :
    if a == 0 :
        return b
    return __gcd ( b % a , a )
SieveOfEratosthenes ( )
a , b = 6 , 12
common_prime ( a , b )


---> console_out:
2 3  
MATCHED!! :D
 44%|████▎     | 762/1746 [10:13<01:36, 10.18it/s]  File "./junk/1703784298876_4660/main.py", line 6
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  190390


-------------------------------------


---> lineNum: 763
---> probID: aizu_p01614_A
---> inputs:
3
4 5 15
2 3 4
7 8 39
2
6
8
---> outputs:
19
39

import java . util . Scanner
import java . util . Arrays
class Main :
    len = 393
    def run ( self ) :
        sc = Scanner ( System . in )
        n = sc . nextInt ( )
        s = [ 0 ] * n
        l = [ 0 ] * n
        p = [ 0 ] * n
        for i in range ( n ) :
            s [ i ] = sc . nextInt ( )
            l [ i ] = sc . nextInt ( )
            p [ i ] = sc . nextInt ( )
        dp = [ - 1 ] * ( self . len + 1 )
        dp [ 0 ] = 0
        for j in range ( self . len + 1 ) :
            for i in range ( n ) :
                if dp [ j ] >= 0 :
                    for k in range ( s [ i ] , l [ i ] + 1 ) :
                        if j + k <= self . len :
                            dp [ j + k ] = max ( dp [ j + k ] , dp [ j ] + p [ i ] )
        m = sc . nextInt ( )
        ans = [ 0 ] * m
        flg = True
        for i in range ( m ) :
            r = sc . nextInt ( )
            ans [ i ] = dp [ r ]
            if ans [ i ] == - 1 :
                flg = False
        if not flg :
            print ( - 1 )
        else :
            for i in ans :
                print ( i )
if __name__ == '__main__' :
    Main ( ) . run ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 764
---> probID: atcoder_AGC014_D
---> inputs:
2
1 2
---> outputs:
Second

import sys
from collections import defaultdict
def maxMatching ( v , p ) :
    a = 0
    o = 0
    for w in g [ v ] :
        if w == p :
            continue
        r = maxMatching ( w , v )
        a += r // 2
        o += r % 2
    return 2 * a + min ( 1 , o ) + 1
n = int ( input ( ) )
g = defaultdict ( list )
for i in range ( n - 1 ) :
    a , b = map ( int , input ( ) . split ( ) )
    g [ a - 1 ] . append ( b - 1 )
    g [ b - 1 ] . append ( a - 1 )
m = maxMatching ( 0 , - 1 ) // 2
if 2 * m == n :
    print ( "Second" )
else :
    print ( "First" )


---> console_out:
Second
 
MATCHED!! :D
 44%|████▍     | 764/1746 [10:13<01:26, 11.41it/s]

-------------------------------------


---> lineNum: 765
---> probID: codeforces_1647_B
---> inputs:
5
3 3
100
011
011
3 3
110
111
110
1 5
01111
4 5
11111
01010
01000
01000
3 2
11
00
11
---> outputs:
YES
NO
YES
NO
YES

import sys
N = 205
M = 205
grid = [ [ 0 for j in range ( M ) ] for i in range ( N ) ]
def solve ( ) :
    n , m = map ( int , input ( ) . split ( ) )
    for i in range ( n ) :
        line = input ( )
        for j in range ( m ) :
            grid [ i ] [ j ] = int ( line [ j ] )
    for i in range ( n - 1 ) :
        for j in range ( m - 1 ) :
            sum = grid [ i ] [ j ] + grid [ i + 1 ] [ j ] + grid [ i ] [ j + 1 ] + grid [ i + 1 ] [ j + 1 ]
            if sum == 3 :
                print ( "NO" )
                return
    print ( "YES" )
def main ( ) :
    t = int ( input ( ) )
    for _ in range ( t ) :
        solve ( )
if __name__ == "__main__" :
    main ( )


---> console_out:
YES
NO
YES
NO
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 766
---> probID: codeforces_721_B
---> inputs:
5 2
cba
abc
bb1
abC
ABC
abc
---> outputs:
1 15

import sys
tc = 1
for line in sys . stdin :
    if tc == 0 :
        break
    tc -= 1
    n , k = map ( int , line . split ( ) )
    len_arr = [ ]
    for i in range ( n ) :
        s = input ( )
        len_arr . append ( len ( s ) )
    p = input ( )
    plen = len ( p )
    kk = k
    len_arr . sort ( )
    min_count = 0
    max_count = 0
    for i in range ( n ) :
        if len_arr [ i ] == plen :
            min_count += 1
            break
        if k > 0 :
            k -= 1
            min_count += 1
        if k == 0 :
            k = kk
            min_count += 5
    k = kk
    for i in range ( n - 1 ) :
        if len_arr [ i ] == plen and len_arr [ i + 1 ] > plen :
            max_count += 1
            break
        if k > 0 :
            k -= 1
            max_count += 1
        if k == 0 :
            k = kk
            max_count += 5
    if len_arr [ n - 1 ] == plen :
        max_count += 1
    print ( min_count , max_count )


---> console_out:
1 15
 
MATCHED!! :D
 44%|████▍     | 766/1746 [10:14<01:22, 11.88it/s]

-------------------------------------


---> lineNum: 767
---> probID: codeforces_61_B
---> inputs:
Iran_
Persian;
W_o;n;d;e;r;f;u;l;
7
WonderfulPersianIran
wonderful_PersIAN_IRAN;;_
WONDERFUL___IRAN__PERSIAN__;;
Ira__Persiann__Wonderful
Wonder;;fulPersian___;I;r;a;n;
__________IranPersianWonderful__________
PersianIran_is_Wonderful
---> outputs:
ACC
ACC
ACC
WA
ACC
ACC
WA

import re
word1 = re . sub ( "[^a-zA-Z]" , "" , input ( ) ) . lower ( )
word2 = re . sub ( "[^a-zA-Z]" , "" , input ( ) ) . lower ( )
word3 = re . sub ( "[^a-zA-Z]" , "" , input ( ) ) . lower ( )
perm1 = word1 + word2 + word3
perm2 = word1 + word3 + word2
perm3 = word2 + word1 + word3
perm4 = word2 + word3 + word1
perm5 = word3 + word2 + word1
perm6 = word3 + word1 + word2
students = int ( input ( ) )
for i in range ( students ) :
    testCase = re . sub ( "[^a-zA-Z]" , "" , input ( ) ) . lower ( )
    if testCase == perm1 or testCase == perm2 or testCase == perm3 or testCase == perm4 or testCase == perm5 or testCase == perm6 :
        print ( "ACC" )
    else :
        print ( "WA" )


---> console_out:
ACC
ACC
ACC
WA
ACC
ACC
WA
 
MATCHED!! :D
  File "./junk/1703784299222_8149/main.py", line 5
    need = set ( ) , have = set ( )
           ^
SyntaxError: cannot assign to function call
out1,out2  case1010case20notpossiblecase3000


-------------------------------------


---> lineNum: 768
---> probID: codejam_14_11
---> inputs:
3
3 2
01 11 10
11 00 10
2 3
101 111
010 001
2 2
01 10
10 01

---> outputs:
Case #1: 1
Case #2: NOT POSSIBLE
Case #3: 0


import sys
cases = int ( input ( ) )
for caze in range ( 1 , cases + 1 ) :
    N , L = map ( int , input ( ) . split ( ) )
    need = set ( ) , have = set ( )
    for i in range ( N ) :
        tmp = input ( )
        tmp2 = 0
        for j in range ( L ) :
            if tmp [ j ] == '1' :
                tmp2 |= ( 1 << j )
        have . add ( tmp2 )
    lastNeeded = 0
    for i in range ( N ) :
        tmp = input ( )
        tmp2 = 0
        for j in range ( L ) :
            if tmp [ j ] == '1' :
                tmp2 |= ( 1 << j )
        need . add ( tmp2 )
        lastNeeded = tmp2
    ans = L + 1
    for elem in have :
        flip = lastNeeded ^ elem
        got = set ( )
        for e in need :
            got . add ( e ^ flip )
        if got == have :
            ans = min ( ans , bin ( flip ) . count ( '1' ) )
    print ( "Case #{}: {}" . format ( caze , "NOT POSSIBLE" if ans > L else ans ) )


---> console_out:
 
DIDN'T MATCH!! :(
 44%|████▍     | 768/1746 [10:14<01:17, 12.69it/s]  File "./junk/1703784299287_4257/main.py", line 1
    0ERROR
     ^
SyntaxError: invalid syntax
out1,out2  60


-------------------------------------


---> lineNum: 769
---> probID: leetcode_695_A
---> inputs:

---> outputs:
6

0ERROR

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 770
---> probID: geeksforgeeks_5288_A
---> inputs:

---> outputs:
40


def sum ( x , y , n ) :
    sum1 = int ( ( x ** 2 * ( x ** ( 2 * n ) - 1 ) ) / ( x ** 2 - 1 ) )
    sum2 = int ( ( x * y * ( x ** n * y ** n - 1 ) ) / ( x * y - 1 ) )
    return sum1 + sum2
x , y , n = 2 , 2 , 2
print ( sum ( x , y , n ) )


---> console_out:
40
 
MATCHED!! :D
 44%|████▍     | 770/1746 [10:14<01:11, 13.74it/s]out1,out2 80 80


-------------------------------------


---> lineNum: 771
---> probID: geeksforgeeks_1614_A
---> inputs:

---> outputs:
8


import math
def findSum ( n ) :
    n -= 1
    sum = 0
    sum += ( n * ( n + 1 ) ) / 2
    sum += ( n * ( n + 1 ) * ( 2 * n + 1 ) ) / 6
    return sum
if __name__ == '__main__' :
    n = 3
    print ( findSum ( n ) )


---> console_out:
8.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 772
---> probID: geeksforgeeks_3145_A
---> inputs:

---> outputs:
21


import io
def getSum ( n ) :
    sum = 0
    while n != 0 :
        sum = sum + n % 10
        n = n // 10
    return sum
if __name__ == "__main__" :
    n = 687
    print ( getSum ( n ) )


---> console_out:
21
 
MATCHED!! :D
 44%|████▍     | 772/1746 [10:14<01:10, 13.80it/s]  File "./junk/1703784299548_4056/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax
out1,out2  210


-------------------------------------


---> lineNum: 773
---> probID: geeksforgeeks_3146_A
---> inputs:

---> outputs:
21


import java . io . * ;
class GFG { static int getSum ( int n ) { int sum ; for ( sum = 0 ; n > 0 ; sum += n % 10 , n /= 10 ) ; return sum ; } public static void main ( String [ ] args ) { int n = 687 ; System . out . println ( getSum ( n ) ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 774
---> probID: geeksforgeeks_5092_A
---> inputs:

---> outputs:
Original List: 
15 16 6 7 17 
Modified List: 
7 17 

class Node :
    def __init__ ( self ) :
        self . data = None
        self . next = None
def push ( head_ref , new_data ) :
    new_node = Node ( )
    new_node . data = new_data
    new_node . next = head_ref
    head_ref = new_node
    return head_ref
def isPrime ( n ) :
    if n <= 1 :
        return False
    if n <= 3 :
        return True
    if n % 2 == 0 or n % 3 == 0 :
        return False
    i = 5
    while i * i <= n :
        if n % i == 0 or n % ( i + 2 ) == 0 :
            return False
        i = i + 6
    return True
def deleteNonPrimeNodes ( head_ref ) :
    ptr = head_ref
    while ptr != None and not isPrime ( ptr . data ) :
        temp = ptr
        ptr = ptr . next
    head_ref = ptr
    if ptr == None :
        return None
    curr = ptr . next
    while curr != None :
        if not isPrime ( curr . data ) :
            ptr . next = curr . next
            curr = ptr . next
        else :
            ptr = curr
            curr = curr . next
    return head_ref
def printList ( head ) :
    while head != None :
        print ( head . data , end = " " )
        head = head . next
head = None
head = push ( head , 17 )
head = push ( head , 7 )
head = push ( head , 6 )
head = push ( head , 16 )
head = push ( head , 15 )
print ( "Original List: " , end = "" )
printList ( head )
head = deleteNonPrimeNodes ( head )
print ( "\nModified List: " , end = "" )
printList ( head )


---> console_out:
Original List: 15 16 6 7 17 
Modified List: 7 17  
MATCHED!! :D
 44%|████▍     | 774/1746 [10:14<01:07, 14.43it/s]

-------------------------------------


---> lineNum: 775
---> probID: aizu_p01074_A
---> inputs:
3 7 3
0 1 1 1
0 1 1 2
1 1 3 4
1 1 1 1
1 2 1 2
2 1 1 3
2 2 2 1
---> outputs:
9

import numpy as np
N , M , L = map ( int , input ( ) . split ( ) )
cs = [ [ ] for _ in range ( N * M ) ]
for i in range ( M ) :
    D , A , K , T = map ( int , input ( ) . split ( ) )
    start = D * N + A - 1
    cs [ start ] . append ( ( K << 16 ) | T )
dp = np . zeros ( ( L + 1 , N * M + 1 ) , dtype = int )
for i in range ( N * M ) :
    for j in range ( L ) :
        for c in cs [ i ] :
            length = c >> 16
            t = c & 0xFFFF
            dp [ j + 1 , i + length ] = max ( dp [ j + 1 , i + length ] , dp [ j , i ] + t )
    for j in range ( L + 1 ) :
        dp [ j , i + 1 ] = max ( dp [ j , i + 1 ] , dp [ j , i ] )
ans = np . max ( dp [ : , N * M ] )
print ( ans )


---> console_out:
9
 
MATCHED!! :D
  File "./junk/1703784299938_3997/main.py", line 24
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  20


-------------------------------------


---> lineNum: 776
---> probID: atcoder_AGC002_B
---> inputs:
3 2
1 2
2 3
---> outputs:
2

import java . util . Scanner
class Main :
    class Box :
        def __init__ ( self ) :
            self . bolls = 1
            self . isRed = False
        def add ( self , src ) :
            self . isRed |= src . isRed
            self . bolls += 1
            src . bolls -= 1
            if src . bolls == 0 :
                src . isRed = False
    def main ( self , sc : Scanner ) :
        n = sc . nextInt ( )
        m = sc . nextInt ( )
        boxs = [ self . Box ( ) for i in range ( n ) ]
        boxs [ 0 ] . isRed = True
        for i in range ( m ) :
            x = sc . nextInt ( )
            y = sc . nextInt ( )
            boxs [ y - 1 ] . add ( boxs [ x - 1 ] )
        print ( sum ( [ 1 if box . isRed else 0 for box in boxs ] ) )
    def __init__ ( self ) :
        sc = Scanner ( System . in )
        self . main ( sc )
        sc . close ( )
Main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 44%|████▍     | 776/1746 [10:14<01:35, 10.20it/s]

-------------------------------------


---> lineNum: 777
---> probID: aizu_p02052_A
---> inputs:
3 3
B.B
..B
.BB
---> outputs:
4

import sys
h , w = map ( int , input ( ) . split ( ) )
lst = [ ]
max_dist = 0
for i in range ( h ) :
    row = input ( ) . strip ( )
    for j in range ( w ) :
        if row [ j ] == '.' :
            continue
        for x in lst :
            hh = x // w
            ww = x % w
            max_dist = max ( max_dist , abs ( i - hh ) + abs ( j - ww ) )
        lst . append ( i * w + j )
print ( max_dist )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 778
---> probID: geeksforgeeks_3350_A
---> inputs:

---> outputs:
abcxdefy


def minReplacement ( str ) :
    if len ( str ) > 26 :
        print ( "IMPOSSIBLE" )
    else :
        hash = [ 0 ] * 26
        for i in range ( len ( str ) ) :
            hash [ ord ( str [ i ] ) - ord ( 'a' ) ] += 1
        count = 0
        for i in range ( len ( str ) ) :
            if hash [ ord ( str [ i ] ) - ord ( 'a' ) ] > 1 :
                for j in range ( 26 ) :
                    if hash [ j ] == 0 :
                        hash [ ord ( str [ i ] ) - ord ( 'a' ) ] -= 1
                        str = str [ : i ] + chr ( j + ord ( 'a' ) ) + str [ i + 1 : ]
                        hash [ j ] += 1
                        break
        print ( str )
str = "xxxxyyyy"
minReplacement ( str )


---> console_out:
abcxdefy
 
MATCHED!! :D
 45%|████▍     | 778/1746 [10:15<01:30, 10.64it/s]

-------------------------------------


---> lineNum: 779
---> probID: geeksforgeeks_1286_A
---> inputs:

---> outputs:
12


def longestSubseq ( s ) :
    n = len ( s )
    pre_count_0 = [ 0 ] * ( n + 2 )
    pre_count_1 = [ 0 ] * ( n + 1 )
    post_count_0 = [ 0 ] * ( n + 2 )
    pre_count_0 [ 0 ] = 0
    post_count_0 [ n + 1 ] = 0
    pre_count_1 [ 0 ] = 0
    for j in range ( 1 , n + 1 ) :
        pre_count_0 [ j ] = pre_count_0 [ j - 1 ]
        pre_count_1 [ j ] = pre_count_1 [ j - 1 ]
        post_count_0 [ n - j + 1 ] = post_count_0 [ n - j + 2 ]
        if s [ j - 1 ] == '0' :
            pre_count_0 [ j ] += 1
        else :
            pre_count_1 [ j ] += 1
        if s [ n - j ] == '0' :
            post_count_0 [ n - j + 1 ] += 1
    if pre_count_0 [ n ] == n or pre_count_0 [ n ] == 0 :
        return n
    ans = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( i , n + 1 ) :
            ans = max ( pre_count_0 [ i - 1 ] + pre_count_1 [ j ] - pre_count_1 [ i - 1 ] + post_count_0 [ j + 1 ] , ans )
    return ans
s = "000011100000"
print ( longestSubseq ( s ) )


---> console_out:
12
 
MATCHED!! :D


-------------------------------------


---> lineNum: 780
---> probID: geeksforgeeks_549_A
---> inputs:

---> outputs:
Factor Power
2	3
3	2
5	1


def sieveOfEratosthenes ( N , s ) :
    prime = [ False ] * ( N + 1 )
    i = 2
    while i <= N :
        s [ i ] = 2
        i += 2
    i = 3
    while i <= N :
        if not prime [ i ] :
            s [ i ] = i
            j = i
            while j * i <= N :
                if not prime [ i * j ] :
                    prime [ i * j ] = True
                    s [ i * j ] = i
                j += 2
        i += 2
def generatePrimeFactors ( N ) :
    s = [ 0 ] * ( N + 1 )
    sieveOfEratosthenes ( N , s )
    print ( "Factor Power" )
    curr = s [ N ]
    cnt = 1
    while N > 1 :
        N //= s [ N ]
        if curr == s [ N ] :
            cnt += 1
            continue
        print ( curr , "\t" , cnt )
        curr = s [ N ]
        cnt = 1
N = 360
generatePrimeFactors ( N )


---> console_out:
Factor Power
2 	 3
3 	 2
5 	 1
 
MATCHED!! :D
 45%|████▍     | 780/1746 [10:15<01:22, 11.66it/s]

-------------------------------------


---> lineNum: 781
---> probID: geeksforgeeks_1380_A
---> inputs:

---> outputs:
4


def longestSubarray ( a , n ) :
    hash = [ [ 0 for j in range ( 10 ) ] for i in range ( n ) ]
    for i in range ( n ) :
        num = a [ i ]
        while num != 0 :
            hash [ i ] [ num % 10 ] = 1
            num //= 10
    longest = float ( '-inf' )
    count = 0
    for i in range ( n - 1 ) :
        for j in range ( 10 ) :
            if hash [ i ] [ j ] == 1 and hash [ i + 1 ] [ j ] == 1 :
                count += 1
                break
        else :
            longest = max ( longest , count + 1 )
            count = 0
    longest = max ( longest , count + 1 )
    return longest
if __name__ == '__main__' :
    a = [ 11 , 22 , 33 , 44 , 54 , 56 , 63 ]
    n = len ( a )
    print ( longestSubarray ( a , n ) )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 782
---> probID: codeforces_1196_A
---> inputs:
4
1 3 4
1 10 100
10000000000000000 10000000000000000 10000000000000000
23 34 45
---> outputs:
4
55
15000000000000000
51

import sys
test = int ( sys . stdin . readline ( ) )
for i in range ( test ) :
    a , b , c = map ( int , sys . stdin . readline ( ) . split ( ) )
    result = ( a + b + c ) // 2
    print ( result )


---> console_out:
4
55
15000000000000000
51
 
MATCHED!! :D
 45%|████▍     | 782/1746 [10:15<01:16, 12.62it/s]

-------------------------------------


---> lineNum: 783
---> probID: geeksforgeeks_3567_A
---> inputs:

---> outputs:
1


from typing import List
def Divisors ( x : int ) -> List [ int ] :
    c = 0
    v = [ ]
    while x % 2 == 0 :
        c += 1
        x //= 2
    v . append ( c )
    c = 0
    while x % 3 == 0 :
        c += 1
        x //= 3
    v . append ( c )
    c = 0
    while x % 7 == 0 :
        c += 1
        x //= 7
    v . append ( c )
    v . append ( x )
    return v
def MinOperations ( a : int , b : int ) -> int :
    va = Divisors ( a )
    vb = Divisors ( b )
    if va [ 3 ] != vb [ 3 ] :
        return - 1
    minOperations = abs ( va [ 0 ] - vb [ 0 ] ) + abs ( va [ 1 ] - vb [ 1 ] ) + abs ( va [ 2 ] - vb [ 2 ] )
    return minOperations
if __name__ == '__main__' :
    a = 14
    b = 28
    print ( MinOperations ( a , b ) )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 784
---> probID: geeksforgeeks_122_A
---> inputs:

---> outputs:
4


import numpy as np
def dfs ( a , b , v , vis ) :
    vis [ a ] = 1
    global c
    c += 1
    for i in v [ a ] :
        if vis [ i ] == 0 and i != b :
            dfs ( i , b , v , vis )
def Calculate ( v ) :
    vis = np . zeros ( n + 1 , dtype = int )
    global c
    c = 0
    dfs ( a , b , v , vis )
    ans1 = n - c - 1
    vis = np . zeros ( n + 1 , dtype = int )
    c = 0
    dfs ( b , a , v , vis )
    ans2 = n - c - 1
    print ( ans1 * ans2 )
if __name__ == '__main__' :
    n = 7
    m = 7
    a = 3
    b = 5
    edges = np . array ( [ [ 1 , 2 ] , [ 2 , 3 ] , [ 3 , 4 ] , [ 4 , 5 ] , [ 5 , 6 ] , [ 6 , 7 ] , [ 7 , 5 ] ] )
    v = [ [ ] for i in range ( n + 1 ) ]
    for i in range ( m ) :
        v [ edges [ i ] [ 0 ] ] . append ( edges [ i ] [ 1 ] )
        v [ edges [ i ] [ 1 ] ] . append ( edges [ i ] [ 0 ] )
    Calculate ( v )


---> console_out:
4
 
MATCHED!! :D
 45%|████▍     | 784/1746 [10:15<01:41,  9.45it/s] 45%|████▍     | 784/1746 [10:30<01:41,  9.45it/s]out1,out2 timeoutencounteredpy 2160


-------------------------------------


---> lineNum: 785
---> probID: codeforces_1143_B
---> inputs:
390
---> outputs:
216

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = StringTokenizer ( self . br ( ) . strip ( ) )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return self . br ( ) . strip ( )
def main ( ) :
    reader = FastReader ( )
    num = reader . nextInt ( )
    prod = 1
    ans = prodOfDigits ( num )
    while num > 9 :
        prod *= 9
        digit = num % 10
        num = num // 10
        if digit == 9 :
            ans = max ( ans , prodOfDigits ( num ) * prod )
        else :
            ans = max ( ans , prodOfDigits ( num - 1 ) * prod )
            num = num - 1
    print ( ans )
def prodOfDigits ( N ) :
    prod = 1
    while N != 0 :
        digit = N % 10
        if digit == 0 :
            return 0
        else :
            prod *= digit
            N //= 10
    return prod
if __name__ == '__main__' :
    main ( )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 45%|████▍     | 785/1746 [10:55<1:54:47,  7.17s/it]

-------------------------------------


---> lineNum: 786
---> probID: codeforces_379_A
---> inputs:
4 2
---> outputs:
7

import sys
a , b = map ( int , sys . stdin . readline ( ) . split ( ) )
res = a
while a >= b :
    res += ( a // b )
    a = ( a // b ) + ( a % b )
print ( res )


---> console_out:
7
 
MATCHED!! :D


-------------------------------------


---> lineNum: 787
---> probID: geeksforgeeks_1317_A
---> inputs:

---> outputs:
7


import math
def getSum ( n ) :
    sum = 0
    while n != 0 :
        sum = sum + n % 10
        n = n // 10
    return sum
def largestDigitSumdivisior ( n ) :
    res = 0
    for i in range ( 1 , int ( math . sqrt ( n ) ) + 1 ) :
        if n % i == 0 :
            res = max ( res , getSum ( i ) )
            res = max ( res , getSum ( n // i ) )
    return res
n = 14
print ( largestDigitSumdivisior ( n ) )


---> console_out:
7
 
MATCHED!! :D
 45%|████▌     | 787/1746 [10:55<1:16:34,  4.79s/it]Traceback (most recent call last):
  File "./junk/1703784341045_4843/main.py", line 14, in <module>
    l = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '3 7'
out1,out2  200


-------------------------------------


---> lineNum: 788
---> probID: codeforces_86_A
---> inputs:
3 7
---> outputs:
20

import math
def power ( a ) :
    res = 0
    while a > 0 :
        res += 1
        a = a // 10
    return res
def mult ( a ) :
    pow = power ( a )
    max = 0
    for j in range ( pow ) :
        max = max * 10 + 9
    return a * ( max - a )
l = int ( input ( ) )
r = int ( input ( ) )
res = 0
maxxes = [ 0 ] * 10
temp = 0
for i in range ( 10 ) :
    temp = temp * 10 + 9
    maxxes [ i ] = temp // 2 * ( temp - temp // 2 )
res = max ( mult ( l ) , res )
res = max ( mult ( r ) , res )
temp = 0
for i in range ( 10 ) :
    temp = temp * 10 + 9
    if l <= temp // 2 <= r :
        res = max ( maxxes [ i ] , res )
print ( res )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 789
---> probID: aizu_p02255_A
---> inputs:
6
5 2 4 6 1 3
---> outputs:
5 2 4 6 1 3
2 5 4 6 1 3
2 4 5 6 1 3
2 4 5 6 1 3
1 2 4 5 6 3
1 2 3 4 5 6

import sys
def printArray ( a ) :
    for i in range ( len ( a ) - 1 ) :
        sys . stdout . write ( str ( a [ i ] ) + " " )
    print ( a [ len ( a ) - 1 ] )
def main ( ) :
    n = int ( input ( ) )
    a = list ( map ( int , input ( ) . split ( ) ) )
    printArray ( a )
    for i in range ( 1 , n ) :
        key = a [ i ]
        j = i - 1
        while j >= 0 and a [ j ] > key :
            a [ j + 1 ] = a [ j ]
            j -= 1
        a [ j + 1 ] = key
        printArray ( a )
if __name__ == "__main__" :
    main ( )


---> console_out:
5 2 4 6 1 3
2 5 4 6 1 3
2 4 5 6 1 3
2 4 5 6 1 3
1 2 4 5 6 3
1 2 3 4 5 6
 
MATCHED!! :D
 45%|████▌     | 789/1746 [10:56<52:00,  3.26s/it]  

-------------------------------------


---> lineNum: 790
---> probID: geeksforgeeks_861_A
---> inputs:

---> outputs:
6 10 14 15 21 22 26 

import math
def isPerfectSquare ( x ) :
    sr = math . sqrt ( x )
    return ( sr - math . floor ( sr ) ) == 0
def isProduct ( num ) :
    cnt = 0
    i = 2
    while cnt < 2 and i * i <= num :
        while num % i == 0 :
            num //= i
            cnt += 1
        i += 1
    if num > 1 :
        cnt += 1
    return cnt == 2
def findNumbers ( N ) :
    vec = [ ]
    for i in range ( 1 , N + 1 ) :
        if isProduct ( i ) and not isPerfectSquare ( i ) :
            vec . append ( i )
    for num in vec :
        print ( num , end = " " )
N = 30
findNumbers ( N )


---> console_out:
6 10 14 15 21 22 26  
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784341241_4612/main.py", line 3, in <module>
    array = np . array ( s . split ( ) ) . reshape ( 40 , 40 )
ValueError: cannot reshape array of size 33 into shape (40,40)
out1,out2  00


-------------------------------------


---> lineNum: 791
---> probID: codeforces_290_B
---> inputs:
1 1
---> outputs:
0

import numpy as np
s
array = np . array ( s . split ( ) ) . reshape ( 40 , 40 )
x = int ( input ( ) )
y = int ( input ( ) )
print ( array [ x ] [ y ] )


---> console_out:
 
DIDN'T MATCH!! :(
 45%|████▌     | 791/1746 [10:56<36:28,  2.29s/it]

-------------------------------------


---> lineNum: 792
---> probID: codeforces_1520_B
---> inputs:
6
1
2
3
4
5
100
---> outputs:
1
2
3
4
5
18

import sys
t = int ( sys . stdin . readline ( ) )
for i in range ( t ) :
    n = int ( sys . stdin . readline ( ) )
    count = 0
    x = n
    if n < 10 :
        print ( n )
        continue
    while x > 0 :
        count += 1
        x //= 10
    first = 0
    while count > 0 :
        first = first * 10 + 1
        count -= 1
    sum = 0
    if first <= n :
        sum += n // first
    first //= 10
    while first > 0 :
        sum += 9
        first //= 10
    print ( sum )


---> console_out:
1
2
3
4
5
18
 
MATCHED!! :D


-------------------------------------


---> lineNum: 793
---> probID: geeksforgeeks_897_A
---> inputs:

---> outputs:
Equivalent


import math
def divSum ( n ) :
    sum = 1
    for i in range ( 2 , int ( math . sqrt ( n ) ) + 1 ) :
        if n % i == 0 :
            sum = sum + i + n // i
    return sum
def areEquivalent ( num1 , num2 ) :
    return divSum ( num1 ) == divSum ( num2 )
num1 = 559
num2 = 703
if areEquivalent ( num1 , num2 ) :
    print ( "Equivalent" )
else :
    print ( "Not Equivalent" )


---> console_out:
Equivalent
 
MATCHED!! :D
 45%|████▌     | 793/1746 [10:56<25:23,  1.60s/it]Traceback (most recent call last):
  File "./junk/1703784341696_2575/main.py", line 1, in <module>
    import java . util
ModuleNotFoundError: No module named 'java'
out1,out2  30


-------------------------------------


---> lineNum: 794
---> probID: geeksforgeeks_516_A
---> inputs:

---> outputs:
3


import java . util
def findY ( x ) :
    if x > 2 :
        return x - 2
    return x + 2
x = 5
print ( findY ( x ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 795
---> probID: geeksforgeeks_4018_A
---> inputs:

---> outputs:
2


MOD = 1000000007
def modFact ( n , m ) :
    result = 1
    for i in range ( 1 , m + 1 ) :
        result = ( result * i ) % MOD
    return result
n , m = 3 , 2
print ( modFact ( n , m ) )


---> console_out:
2
 
MATCHED!! :D
 46%|████▌     | 795/1746 [10:56<17:50,  1.13s/it]

-------------------------------------


---> lineNum: 796
---> probID: aizu_p02260_A
---> inputs:
6
5 6 4 2 1 3
---> outputs:
1 2 3 4 5 6
4

import sys
n = int ( input ( ) )
A = list ( map ( int , input ( ) . split ( ) ) )
minj = 0
count = 0
for i in range ( n - 1 ) :
    minj = i
    c = 0
    for j in range ( i + 1 , n ) :
        if A [ j ] < A [ minj ] :
            minj = j
            c = 1
    if c == 1 :
        x = A [ i ]
        A [ i ] = A [ minj ]
        A [ minj ] = x
        count += 1
for i in range ( n ) :
    sys . stdout . write ( str ( A [ i ] ) )
    if i < n - 1 :
        sys . stdout . write ( " " )
print ( )
print ( count )


---> console_out:
1 2 3 4 5 6
4
 
MATCHED!! :D
  File "./junk/1703784341926_9144/main.py", line 55
    if __name__ ==   ' __
                        ^
SyntaxError: EOL while scanning string literal
out1,out2  640


-------------------------------------


---> lineNum: 797
---> probID: aizu_p00492_A
---> inputs:
8 4
0 1 0 1 0 1 1 1
0 1 1 0 0 1 0 0
1 0 1 0 1 1 1 1
0 1 1 0 1 0 1 0
---> outputs:
64

import sys
class Main :
    def __init__ ( self ) :
        self . h = 0
        self . w = 0
        self . map = [ ]
        self . v = [ ]
        self . dy = [ - 1 , - 1 , 0 , 0 , 1 , 1 ]
        self . dx1 = [ 0 , 1 , - 1 , 1 , 0 , 1 ]
        self . dx2 = [ - 1 , 0 , - 1 , 1 , - 1 , 0 ]
    def main ( self ) :
        self . run ( )
    def run ( self ) :
        scanner = Scanner ( sys . stdin )
        self . w = scanner . nextInt ( )
        self . h = scanner . nextInt ( )
        self . map = [ [ False for j in range ( self . w + 2 ) ] for i in range ( self . h + 2 ) ]
        self . v = [ [ False for j in range ( self . w + 2 ) ] for i in range ( self . h + 2 ) ]
        for i in range ( 1 , self . h + 1 ) :
            for j in range ( 1 , self . w + 1 ) :
                self . map [ i ] [ j ] = scanner . nextInt ( ) == 1
        print ( self . slove ( 0 , 0 ) )
    def slove ( self , y , x ) :
        self . v [ y ] [ x ] = True
        res = 0
        for i in range ( 6 ) :
            ny = y + self . dy [ i ]
            nx = x + ( self . dx1 [ i ] if y % 2 == 1 else self . dx2 [ i ] )
            if not self . isOK ( ny , nx ) :
                continue
            if self . map [ ny ] [ nx ] :
                res += 1
                continue
            if self . v [ ny ] [ nx ] :
                continue
            res += self . slove ( ny , nx )
        return res
    def isOK ( self , ny , nx ) :
        if 0 <= ny <= self . h + 1 and 0 <= nx <= self . w + 1 :
            return True
        return False
class Scanner :
    def __init__ ( self , stream ) :
        self . tokens = stream . readline ( ) . split ( )
        self . current_token_index = 0
    def nextInt ( self ) :
        return int ( self . nextToken ( ) )
    def nextToken ( self ) :
        if self . current_token_index == len ( self . tokens ) :
            self . tokens = input ( ) . split ( )
            self . current_token_index = 0
        token = self . tokens [ self . current_token_index ]
        self . current_token_index += 1
        return token
if __name__ ==   ' __


---> console_out:
 
DIDN'T MATCH!! :(
 46%|████▌     | 797/1746 [10:56<12:46,  1.24it/s]Traceback (most recent call last):
  File "./junk/1703784341991_9091/main.py", line 12, in <module>
    if lists [ hi ] [ - 1 ] > a [ i ] :
IndexError: list index out of range
out1,out2  1030502040


-------------------------------------


---> lineNum: 798
---> probID: codeforces_847_B
---> inputs:
5
1 3 2 5 4
---> outputs:
1 3 5
2 4

import sys
n = int ( sys . stdin . readline ( ) )
lists = [ [ ] for _ in range ( n ) ]
a = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
for i in range ( n ) :
    if i == 0 :
        start = [ a [ i ] ]
        lists [ i ] = start
    else :
        lo = 0
        hi = len ( lists ) - 1
        if lists [ hi ] [ - 1 ] > a [ i ] :
            start = [ a [ i ] ]
            lists . append ( start )
        else :
            while lo != hi :
                mid = ( lo + hi ) // 2
                if lists [ mid ] [ - 1 ] < a [ i ] :
                    hi = mid
                else :
                    lo = mid + 1
            lists [ lo ] . append ( a [ i ] )
for lis in lists :
    for i in range ( len ( lis ) ) :
        print ( lis [ i ] , end = " " )
    print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 799
---> probID: geeksforgeeks_1213_A
---> inputs:

---> outputs:
30.634146341463413


def circlearea ( a , b ) :
    if a < 0 or b < 0 :
        return - 1
    A = ( 3.14 * pow ( a , 2 ) * pow ( b , 2 ) ) / ( 4 * ( pow ( a , 2 ) + pow ( b , 2 ) ) )
    return A
a = 8
b = 10
print ( circlearea ( a , b ) )


---> console_out:
30.634146341463413
 
MATCHED!! :D
 46%|████▌     | 799/1746 [10:57<10:09,  1.55it/s]

-------------------------------------


---> lineNum: 800
---> probID: geeksforgeeks_736_A
---> inputs:

---> outputs:
YES


def find ( arr , length , s ) :
    for i in range ( 1 , int ( 2 ** length ) ) :
        sum = 0
        for j in range ( length ) :
            if ( ( i >> j ) & 1 ) % 2 == 1 :
                sum += arr [ j ]
        if sum == s :
            print ( "YES" )
            return
    print ( "NO" )
if __name__ == '__main__' :
    sum = 5
    array = [ - 1 , 2 , 4 , 121 ]
    length = len ( array )
    find ( array , length , sum )


---> console_out:
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 801
---> probID: geeksforgeeks_1941_A
---> inputs:

---> outputs:
ab


def K_String ( s , k ) :
    n = len ( s )
    fre = [ 0 ] * 26
    for i in range ( n ) :
        fre [ ord ( s [ i ] ) - ord ( 'a' ) ] += 1
    str = ""
    for i in range ( 26 ) :
        if fre [ i ] % k == 0 :
            x = fre [ i ] // k
            while x != 0 :
                str += chr ( i + ord ( 'a' ) )
                x -= 1
        else :
            return "-1"
    return str
s = "aabb"
k = 2
print ( K_String ( s , k ) )


---> console_out:
ab
 
MATCHED!! :D
 46%|████▌     | 801/1746 [10:57<07:21,  2.14it/s]Traceback (most recent call last):
  File "./junk/1703784342650_2381/main.py", line 4, in <module>
    import xml . crypto . Data
ModuleNotFoundError: No module named 'xml.crypto'
out1,out2  101521


-------------------------------------


---> lineNum: 802
---> probID: aizu_p00642_A
---> inputs:
1
2
3
0
---> outputs:
1.00000000
1.50000000
2.12500000

import math
import collections
import heapq
import xml . crypto . Data
if __name__ == '__main__' :
    while True :
        n = int ( input ( ) )
        if n == 0 :
            break
        dp = [ [ 0.0 ] * 25 for _ in range ( n + 1 ) ]
        dp [ 0 ] [ 0 ] = 1.0
        sum = 0
        for i in range ( n ) :
            for j in range ( 24 ) :
                pp = math . pow ( 2.0 , j )
                dp [ i + 1 ] [ j + 1 ] += dp [ i ] [ j ] * 1.0 / pp
                dp [ i + 1 ] [ 0 ] += dp [ i ] [ j ] * ( 1.0 - ( 1.0 / pp ) )
                sum += j * dp [ i ] [ j ] * ( 1.0 - ( 1.0 / pp ) )
        for j in range ( 25 ) :
            sum += j * dp [ n ] [ j ]
        print ( "{:.20f}" . format ( sum ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 803
---> probID: aizu_p00054_A
---> inputs:
1 2 3
2 3 4
5 4 3
4 3 2
---> outputs:
5
24
7
6

import math
while True :
    try :
        a , b , n = map ( int , input ( ) . split ( ) )
    except :
        break
    c = str ( a / b )
    f = [ 0 ] * 200
    idx = c . index ( "." )
    f [ 0 ] = int ( c [ idx - 1 ] )
    for i in range ( 1 , min ( 200 , len ( c [ idx + 1 : ] ) + 1 ) ) :
        f [ i ] = int ( c [ idx + i ] )
    res = sum ( f [ 1 : n + 1 ] )
    print ( res )


---> console_out:
5
24
7
6
 
MATCHED!! :D
 46%|████▌     | 803/1746 [10:57<05:27,  2.88it/s]

-------------------------------------


---> lineNum: 804
---> probID: atcoder_AGC029_C
---> inputs:
1
1
---> outputs:
1

import sys
n = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
nodec = True
for i in range ( 1 , n ) :
    if a [ i ] <= a [ i - 1 ] :
        nodec = False
if nodec :
    print ( 1 )
    sys . exit ( )
m = 500
l , r = 1 , 210000
mid = 2
dec = [ 1 ] * m
while r - l > 1 :
    mid = ( l + r ) // 2
    dec = [ 1 ] * m
    for i in range ( 1 , n ) :
        if a [ i ] <= a [ i - 1 ] and a [ i ] - 1 < m :
            if dec [ a [ i ] - 1 ] < mid :
                dec [ a [ i ] - 1 ] += 1
            else :
                pos = a [ i ] - 1
                while pos > 0 :
                    dec [ pos - 1 ] += 1
                    for j in range ( pos , m ) :
                        dec [ j ] = 1
                    if dec [ pos - 1 ] <= mid :
                        break
                    pos -= 1
                l = mid
                break
        else :
            for j in range ( a [ i ] - 1 , m ) :
                dec [ j ] = 1
    else :
        r = mid
print ( r )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 805
---> probID: aizu_p00605_A
---> inputs:
2 3
5 4 5
1 2 3
3 2 1
3 5
1 2 3 4 5
0 1 0 1 2
0 1 1 2 2
1 0 3 1 1
0 0
---> outputs:
Yes
No

import sys
br = sys . stdin
while True :
    try :
        line = br . readline ( )
        lines = line . split ( )
        N = int ( lines [ 0 ] )
        K = int ( lines [ 1 ] )
        if N == 0 and K == 0 :
            break
        line = br . readline ( )
        lines = line . split ( )
        bloodAmt = [ int ( lines [ i ] ) for i in range ( K ) ]
        for i in range ( N ) :
            line = br . readline ( )
            lines = line . split ( )
            for j in range ( K ) :
                bloodAmt [ j ] -= int ( lines [ j ] )
        for i in range ( K ) :
            if bloodAmt [ i ] < 0 :
                print ( "No" )
                break
            if i == K - 1 :
                print ( "Yes" )
    except :
        pass


---> console_out:
Yes
No
 
MATCHED!! :D
 46%|████▌     | 805/1746 [10:57<04:06,  3.82it/s]  File "./junk/1703784342917_8227/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax
out1,out2  40


-------------------------------------


---> lineNum: 806
---> probID: geeksforgeeks_2779_A
---> inputs:

---> outputs:
4


import java . io . * ;
public class GFG { static int maxFreq ( String s , int a , int b ) { int [ ] fre = new int [ 10 ] ; int n = s . length ( ) ; if ( a > b ) { int temp = a ; a = b ; b = temp ; } for ( int i = 0 ; i < n ; i + + ) { fre [ s . charAt ( i ) - '0' ] + + ; } if ( fre [ a ] == 0 & & fre [ b ] == 0 ) { return - 1 ; } else if ( fre [ a ] >= fre [ b ] ) { return a ; } else { return b ; } } public static void main ( String [ ] args ) { int a = 4 , b = 7 ; String s = "47744" ; System . out . print ( maxFreq ( s , a , b ) ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 807
---> probID: geeksforgeeks_1966_A
---> inputs:

---> outputs:
3


def maxZeros ( n ) :
    if n == 0 or ( n & ( n - 1 ) ) == 0 :
        return - 1
    b = 4
    setBit = 1
    prev = 0
    i = 1
    while i <= b * 8 :
        prev += 1
        if ( n & setBit ) == setBit :
            setBit = setBit << 1
            break
        setBit = setBit << 1
        i += 1
    max0 = float ( '-inf' )
    cur = prev
    for j in range ( i + 1 , b * 8 + 1 ) :
        cur += 1
        if ( n & setBit ) == setBit :
            if max0 < ( cur - prev - 1 ) :
                max0 = cur - prev - 1
            prev = cur
        setBit = setBit << 1
    return max0
if __name__ == '__main__' :
    n = 549
    print ( maxZeros ( n ) )


---> console_out:
3
 
MATCHED!! :D
 46%|████▌     | 807/1746 [10:57<03:09,  4.95it/s]out1,out2 420 420


-------------------------------------


---> lineNum: 808
---> probID: geeksforgeeks_1675_A
---> inputs:

---> outputs:
42.0


import math
def sumPowersK ( n , k ) :
    sum = 0
    num = 1
    while num <= n :
        sum += num
        num *= k
    return sum
def getSum ( n , k ) :
    pwrK = sumPowersK ( n , k )
    sumAll = ( n * ( n + 1 ) ) // 2
    return ( sumAll - pwrK )
n = 10
k = 3
print ( getSum ( n , k ) )


---> console_out:
42
 
MATCHED!! :D
out1,out2 401611 401611


-------------------------------------


---> lineNum: 809
---> probID: geeksforgeeks_817_A
---> inputs:

---> outputs:
[-4.0, -1.6, -1.1428571428571428]


import numpy as np
def XandYandZintercept ( A , B , C , D ) :
    rslt = np . zeros ( 3 )
    x = - D / A
    y = - D / B
    z = - D / C
    rslt [ 0 ] = x
    rslt [ 1 ] = y
    rslt [ 2 ] = z
    return rslt
if __name__ == '__main__' :
    A = 2
    B = 5
    C = 7
    D = 8
    rslt = XandYandZintercept ( A , B , C , D )
    print ( rslt )


---> console_out:
[-4.         -1.6        -1.14285714]
 
MATCHED!! :D
 46%|████▋     | 809/1746 [10:58<02:59,  5.22it/s]

-------------------------------------


---> lineNum: 810
---> probID: geeksforgeeks_5109_A
---> inputs:

---> outputs:
10
2 1 3 2


import math
def maxSum ( a , n ) :
    l = [ ]
    s = 0
    for i in range ( n ) :
        s += abs ( a [ i ] )
        if a [ i ] >= 0 :
            continue
        if i == 0 :
            l . append ( i + 1 )
        else :
            l . append ( i + 1 )
            l . append ( i )
    print ( s )
    for i in range ( len ( l ) ) :
        print ( l [ i ] , end = " " )
n = 4
a = [ 1 , - 2 , - 3 , 4 ]
maxSum ( a , n )


---> console_out:
10
2 1 3 2  
MATCHED!! :D


-------------------------------------


---> lineNum: 811
---> probID: geeksforgeeks_3067_A
---> inputs:

---> outputs:
Mr%20John%20Smith


MAX = 1000
def replaceSpaces ( str ) :
    space_count = 0
    i = 0
    for i in range ( len ( str ) ) :
        if str [ i ] == ' ' :
            space_count += 1
    while str [ i - 1 ] == ' ' :
        space_count -= 1
        i -= 1
    new_length = i + space_count * 2
    if new_length > MAX :
        return str
    index = new_length - 1
    new_str = str
    str = [ '' ] * new_length
    for j in range ( i - 1 , - 1 , - 1 ) :
        if new_str [ j ] == ' ' :
            str [ index ] = '0'
            str [ index - 1 ] = '2'
            str [ index - 2 ] = '%'
            index -= 3
        else :
            str [ index ] = new_str [ j ]
            index -= 1
    return str
str = list ( "Mr John Smith " )
str = replaceSpaces ( str )
for i in range ( len ( str ) ) :
    print ( str [ i ] , end = '' )


---> console_out:
Mr%20John%20Smith 
MATCHED!! :D
 46%|████▋     | 811/1746 [10:58<02:22,  6.54it/s]

-------------------------------------


---> lineNum: 812
---> probID: aizu_p01866_A
---> inputs:
5
00001
3
---> outputs:
11101

import sys
class Main :
    def __init__ ( self ) :
        self . sc = sys . stdin
        self . do_it ( )
    def do_it ( self ) :
        n = int ( self . sc . readline ( ) )
        str = self . sc . readline ( ) . strip ( )
        ctr = list ( str )
        m = int ( self . sc . readline ( ) )
        num = n
        sb = [ ]
        for i in range ( n ) :
            if m == 0 :
                sb . append ( ctr [ i ] )
            elif m < num :
                if ctr [ i ] == '0' :
                    sb . append ( '1' )
                    m -= 1
                else :
                    sb . append ( '1' )
            else :
                if ctr [ i ] == '0' :
                    sb . append ( '1' )
                else :
                    sb . append ( '0' )
            num -= 1
        print ( '' . join ( sb ) )
if __name__ == '__main__' :
    Main ( )


---> console_out:
11101
 
MATCHED!! :D


-------------------------------------


---> lineNum: 813
---> probID: geeksforgeeks_2186_A
---> inputs:

---> outputs:
5


import math
def check ( n ) :
    m = n
    while n != 0 :
        r = n % 10
        if r > 0 :
            if m % r != 0 :
                return False
        n //= 10
    return True
def count ( l , r ) :
    ans = 0
    for i in range ( l , r + 1 ) :
        if check ( i ) :
            ans += 1
    return ans
l , r = 10 , 20
print ( count ( l , r ) )


---> console_out:
5
 
MATCHED!! :D
 47%|████▋     | 813/1746 [10:58<01:57,  7.93it/s]Traceback (most recent call last):
  File "./junk/1703784343631_7875/main.py", line 2, in <module>
    a = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 2'
out1,out2  19902000
out1,out2  1020


-------------------------------------


---> lineNum: 814
---> probID: codeforces_1225_A
---> inputs:
1 2
---> outputs:
['199 200', '1 2\n']

import sys
a = int ( input ( ) )
b = int ( input ( ) )
if a == b :
    print ( str ( a * 10 + 1 ) + " " + str ( a * 10 + 2 ) )
elif a + 1 == b :
    print ( str ( a ) + " " + str ( b ) )
elif a + 1 == b * 10 :
    print ( str ( a ) + " " + str ( b * 10 ) )
else :
    print ( "-1" )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784343695_4635/main.py", line 8, in <module>
    h = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 4 6'
out1,out2  50


-------------------------------------


---> lineNum: 815
---> probID: codeforces_496_A
---> inputs:
3
1 4 6
---> outputs:
5

import sys
num = int ( input ( ) )
arr = [ ]
arra = [ ]
maxdif = 0
maxAll = 1000000000
for i in range ( num ) :
    h = int ( input ( ) )
    arr . append ( h )
    arra . append ( h )
for i in range ( 1 , num - 1 ) :
    for j in range ( len ( arr ) - 1 ) :
        if j == i :
            maxdif = max ( abs ( arr [ j - 1 ] - arr [ j + 1 ] ) , maxdif )
        else :
            maxdif = max ( abs ( arr [ j ] - arr [ j + 1 ] ) , maxdif )
    maxAll = min ( maxAll , maxdif )
    maxdif = 0
print ( maxAll )


---> console_out:
 
DIDN'T MATCH!! :(
 47%|████▋     | 815/1746 [10:58<01:40,  9.31it/s]

-------------------------------------


---> lineNum: 816
---> probID: codeforces_456_B
---> inputs:
4
---> outputs:
4

import sys
inpt = input ( )
i = int ( inpt [ - 1 ] )
if len ( inpt ) > 1 and ( int ( inpt [ - 2 ] ) * 10 + i ) % 4 == 0 :
    print ( 4 )
elif len ( inpt ) == 1 and i % 4 == 0 :
    print ( 4 )
else :
    print ( 0 )


---> console_out:
4
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784343820_1467/main.py", line 40, in <module>
    main ( )
  File "./junk/1703784343820_1467/main.py", line 23, in main
    k = obj . nextInt ( )
  File "./junk/1703784343820_1467/main.py", line 14, in nextInt
    return int ( self . next ( ) )
  File "./junk/1703784343820_1467/main.py", line 7, in next
    while self . st is None or not self . st . hasMoreElements ( ) :
AttributeError: 'list' object has no attribute 'hasMoreElements'
out1,out2  10


-------------------------------------


---> lineNum: 817
---> probID: codeforces_835_B
---> inputs:
3
11
---> outputs:
1

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = input ( ) . split ( )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return input ( )
def main ( ) :
    obj = FastReader ( )
    k = obj . nextInt ( )
    str = list ( obj . next ( ) )
    n = len ( str )
    str . sort ( )
    sum = 0
    for i in range ( n ) :
        sum += int ( str [ i ] )
    idx = 0
    ans = 0
    while idx < n and sum < k :
        sum -= int ( str [ idx ] )
        str [ idx ] = '9'
        sum += 9
        idx += 1
        ans += 1
    print ( ans )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 47%|████▋     | 817/1746 [10:58<01:27, 10.60it/s]Traceback (most recent call last):
  File "./junk/1703784343886_1214/main.py", line 2, in <module>
    N , K , A , B = map ( int , sys . stdin . readline ( ) . split ( ) )
ValueError: not enough values to unpack (expected 4, got 1)
out1,out2  60


-------------------------------------


---> lineNum: 818
---> probID: codeforces_940_B
---> inputs:
9
2
3
1
---> outputs:
6

import sys
N , K , A , B = map ( int , sys . stdin . readline ( ) . split ( ) )
cost = 0
while N != 1 :
    if N < K :
        cost += ( N - 1 ) * A
        break
    r = N % K
    cost += r * A
    N -= r
    if B >= ( N - N // K ) * A :
        cost += ( N - 1 ) * A
        break
    cost += B
    N //= K
print ( cost )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 819
---> probID: geeksforgeeks_858_A
---> inputs:

---> outputs:
1


import math
def digSum ( n ) :
    sum = 0
    while n > 0 or sum > 9 :
        if n == 0 :
            n = sum
            sum = 0
        sum += n % 10
        n //= 10
    return sum
n = 1234
print ( digSum ( n ) )


---> console_out:
1
 
MATCHED!! :D
 47%|████▋     | 819/1746 [10:58<01:20, 11.50it/s]Traceback (most recent call last):
  File "./junk/1703784344025_8192/main.py", line 3, in <module>
    a , b = input ( ) . split ( )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2  50


-------------------------------------


---> lineNum: 820
---> probID: codeforces_1446_B
---> inputs:
4 5
abba
babab
---> outputs:
5

import sys
n , m = map ( int , input ( ) . split ( ) )
a , b = input ( ) . split ( )
dp = [ [ 0 ] * ( m + 1 ) for _ in range ( n + 1 ) ]
for i in range ( 1 , n + 1 ) :
    for j in range ( 1 , m + 1 ) :
        dp [ i ] [ j ] = max ( dp [ i ] [ j ] , max ( dp [ i - 1 ] [ j ] , dp [ i ] [ j - 1 ] ) - 1 )
        if a [ i - 1 ] == b [ j - 1 ] :
            dp [ i ] [ j ] = max ( dp [ i ] [ j ] , dp [ i - 1 ] [ j - 1 ] + 2 )
ans = 0
for i in range ( 1 , n + 1 ) :
    for j in range ( 1 , m + 1 ) :
        ans = max ( ans , dp [ i ] [ j ] )
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
out1,out2 50thcenteredheptagonalnumber710 50thcenteredheptagonalnumber710


-------------------------------------


---> lineNum: 821
---> probID: geeksforgeeks_1729_A
---> inputs:

---> outputs:
5th Centered heptagonal number :  71


import math
def centered_heptagonal_num ( n ) :
    return ( 7 * n * n - 7 * n + 2 ) / 2
n = 5
print ( str ( n ) + "th Centered " + "heptagonal number : " + str ( centered_heptagonal_num ( n ) ) )


---> console_out:
5th Centered heptagonal number : 71.0
 
MATCHED!! :D
 47%|████▋     | 821/1746 [10:59<01:14, 12.48it/s]

-------------------------------------


---> lineNum: 822
---> probID: geeksforgeeks_4441_A
---> inputs:

---> outputs:
14


import numpy as np
def missingNum ( arr , n ) :
    arr = np . array ( arr )
    minvalue = np . min ( arr )
    xornum = 0
    for i in range ( n ) :
        xornum ^= ( minvalue ) ^ arr [ i ]
        minvalue += 1
    return xornum ^ minvalue
arr = [ 13 , 12 , 11 , 15 ]
n = len ( arr )
print ( missingNum ( arr , n ) )


---> console_out:
14
 
MATCHED!! :D


-------------------------------------


---> lineNum: 823
---> probID: geeksforgeeks_5032_A
---> inputs:

---> outputs:
2143675


def smallestPermute ( n ) :
    res = [ '' ] * ( n + 1 )
    if n % 2 == 0 :
        for i in range ( n ) :
            if i % 2 == 0 :
                res [ i ] = chr ( 48 + i + 2 )
            else :
                res [ i ] = chr ( 48 + i )
    else :
        for i in range ( n - 2 ) :
            if i % 2 == 0 :
                res [ i ] = chr ( 48 + i + 2 )
            else :
                res [ i ] = chr ( 48 + i )
        res [ n - 1 ] = chr ( 48 + n - 2 )
        res [ n - 2 ] = chr ( 48 + n )
        res [ n - 3 ] = chr ( 48 + n - 1 )
    res [ n ] = '\0'
    for i in range ( n ) :
        print ( res [ i ] , end = '' )
n = 7
smallestPermute ( n )


---> console_out:
2143675 
MATCHED!! :D
 47%|████▋     | 823/1746 [10:59<01:38,  9.39it/s]

-------------------------------------


---> lineNum: 824
---> probID: geeksforgeeks_1189_A
---> inputs:

---> outputs:
1


import collections
def minOperations ( a , n , K ) :
    map = collections . defaultdict ( bool )
    for i in range ( n ) :
        try :
            if map [ a [ i ] ] :
                return 1
        except :
            pass
        try :
            map [ a [ i ] ] = True
        except :
            pass
    b = [ 0 ] * n
    for i in range ( n ) :
        b [ i ] = a [ i ] & K
    map . clear ( )
    for i in range ( n ) :
        if a [ i ] != b [ i ] :
            try :
                map [ b [ i ] ] = True
            except :
                pass
    for i in range ( n ) :
        try :
            if map [ a [ i ] ] :
                return 1
        except :
            pass
    map . clear ( )
    for i in range ( n ) :
        try :
            if map [ b [ i ] ] :
                return 2
        except :
            pass
        try :
            map [ b [ i ] ] = True
        except :
            pass
    return - 1
if __name__ == '__main__' :
    K = 3
    a = [ 1 , 2 , 3 , 7 ]
    n = len ( a )
    print ( minOperations ( a , n , K ) )


---> console_out:
1
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784344554_8961/main.py", line 53, in <module>
    Main ( ) . solve ( )
  File "./junk/1703784344554_8961/main.py", line 18, in solve
    self . w = int ( line . strip ( ) )
ValueError: invalid literal for int() with base 10: '10 10'
out1,out2  60210120000000


-------------------------------------


---> lineNum: 825
---> probID: aizu_p01139_A
---> inputs:
10 10
.....W....
....W.W...
...W...W..
....W...W.
.....W...W
......W.W.
BBB....W..
..B..BBBBB
..B..B....
..B..B..W.
5 3
...B.
...BB
.....
1 1
.
0 0
---> outputs:
6 21
12 0
0 0

import sys
class Main :
    def __init__ ( self ) :
        self . h = 0
        self . w = 0
        self . grid = [ ]
        self . B = False
        self . W = False
        self . countB = 0
        self . countW = 0
        self . dx = [ 1 , - 1 , 0 , 0 ]
        self . dy = [ 0 , 0 , 1 , - 1 ]
        self . from_ = ''
        self . to = ''
        self . countGrid = 0
    def solve ( self ) :
        for line in sys . stdin :
            self . w = int ( line . strip ( ) )
            if self . w == 0 :
                break
            self . h = int ( sys . stdin . readline ( ) . strip ( ) )
            self . grid = [ ]
            for i in range ( self . h ) :
                self . grid . append ( list ( sys . stdin . readline ( ) . strip ( ) ) )
            self . countB = 0
            self . countW = 0
            for i in range ( self . h ) :
                for j in range ( self . w ) :
                    if self . grid [ i ] [ j ] == '.' :
                        self . B = False
                        self . W = False
                        self . countGrid = 0
                        self . dfs ( j , i )
                        if self . B and not self . W :
                            self . countB += self . countGrid
                        if not self . B and self . W :
                            self . countW += self . countGrid
            print ( self . countB , self . countW )
    def dfs ( self , x , y ) :
        self . grid [ y ] [ x ] = 'x'
        self . countGrid += 1
        for i in range ( 4 ) :
            nx = x + self . dx [ i ]
            ny = y + self . dy [ i ]
            if nx < self . w and nx >= 0 and ny < self . h and ny >= 0 :
                if self . grid [ ny ] [ nx ] == 'B' :
                    self . B = True
                elif self . grid [ ny ] [ nx ] == 'W' :
                    self . W = True
                elif self . grid [ ny ] [ nx ] == '.' :
                    self . dfs ( nx , ny )
if __name__ == '__main__' :
    Main ( ) . solve ( )


---> console_out:
 
DIDN'T MATCH!! :(
 47%|████▋     | 825/1746 [10:59<01:26, 10.60it/s]

-------------------------------------


---> lineNum: 826
---> probID: codeforces_270_A
---> inputs:
3
30
60
90
---> outputs:
NO
YES
YES

import sys
for line in sys . stdin :
    t = int ( line )
    for i in range ( t ) :
        n = int ( input ( ) )
        if 360 % ( 180 - n ) == 0 :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
NO
YES
YES
 
MATCHED!! :D
out1,out2  68


-------------------------------------


---> lineNum: 827
---> probID: projecteuler_p493_A
---> inputs:

---> outputs:
6.818741802

import math
from decimal import Decimal , ROUND_HALF_EVEN
class p493 :
    def __init__ ( self ) :
        self . NUM_COLORS = 7
        self . BALLS_PER_COLOR = 10
        self . NUM_PICKED = 20
        self . numerator = 0
    def run ( self ) :
        self . explore ( self . NUM_PICKED , self . BALLS_PER_COLOR , [ ] )
        denominator = self . binomial ( self . NUM_COLORS * self . BALLS_PER_COLOR , self . NUM_PICKED )
        num = Decimal ( self . numerator )
        den = Decimal ( denominator )
        return str ( num / den . quantize ( Decimal ( '1E-9' ) , rounding = ROUND_HALF_EVEN ) )
    def explore ( self , remain , limit , history ) :
        if remain == 0 :
            hist = [ 0 ] * self . NUM_COLORS
            for i in range ( len ( history ) ) :
                hist [ i ] = history [ i ]
            histogram = [ 0 ] * ( self . BALLS_PER_COLOR + 1 )
            for x in hist :
                histogram [ x ] += 1
            count = math . factorial ( self . NUM_COLORS )
            for x in histogram :
                count = self . divideExactly ( count , math . factorial ( x ) )
            for x in hist :
                count *= self . binomial ( self . BALLS_PER_COLOR , x )
            distinctColors = len ( history )
            self . numerator += count * distinctColors
        elif len ( history ) < self . NUM_COLORS :
            for i in range ( min ( limit , remain ) , 0 , - 1 ) :
                history . append ( i )
                self . explore ( remain - i , i , history )
                history . pop ( )
    @ staticmethod
    def binomial ( n , k ) :
        if k < 0 or k > n :
            return 0
        if k == 0 or k == n :
            return 1
        k = min ( k , n - k )
        result = 1
        for i in range ( k ) :
            result *= n - i
            result //= i + 1
        return result
    @ staticmethod
    def divideExactly ( x , y ) :
        temp = divmod ( x , y )
        if temp [ 1 ] != 0 :
            raise ValueError ( "Not divisible" )
        return temp [ 0 ]


---> console_out:
 
DIDN'T MATCH!! :(
 47%|████▋     | 827/1746 [10:59<01:19, 11.51it/s]Traceback (most recent call last):
  File "./junk/1703784344760_3264/main.py", line 27, in <module>
    main ( sys . argv )
  File "./junk/1703784344760_3264/main.py", line 5, in main
    landings = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '6 60'
out1,out2  6010


-------------------------------------


---> lineNum: 828
---> probID: codeforces_967_A
---> inputs:
6 60
0 0
1 20
3 21
5 0
19 30
23 40
---> outputs:
6 1

import math
from typing import List
import sys
def main ( args : List [ str ] ) :
    landings = int ( input ( ) )
    time = int ( input ( ) )
    minutes = [ ]
    for i in range ( landings ) :
        hours = int ( input ( ) ) * 60
        minute = int ( input ( ) )
        minutes . append ( minute + hours )
    if time + 1 <= minutes [ 0 ] :
        print ( 0 , 0 )
        return
    for i in range ( landings - 1 ) :
        if minutes [ i + 1 ] - minutes [ i ] >= 2 * time + 2 :
            flight = minutes [ i ] + time + 1
            h = flight // 60
            m = flight % 60
            print ( h , m )
            return
    flight = minutes [ landings - 1 ] + time + 1
    h = flight // 60
    m = flight % 60
    print ( h , m )
if __name__ == "__main__" :
    main ( sys . argv )


---> console_out:
 
DIDN'T MATCH!! :(
out1,out2 yes50150200yes130260390yes70770840 yes100500600yes16903902080yes28015401820


-------------------------------------


---> lineNum: 829
---> probID: codeforces_1521_A
---> inputs:
3
5 3
13 2
7 11
---> outputs:
['YES\n10 50 60\nYES\n169 39 208\nYES\n28 154 182', 'YES\n5 15 20\nYES\n13 26 39\nYES\n7 77 84\n']

import sys
for line in sys . stdin :
    k = int ( line )
    for i in range ( k ) :
        line = input ( )
        A , B = map ( int , line . split ( ) )
        if B == 1 :
            print ( "NO" )
        else :
            print ( "YES" )
            print ( A , A * B , ( B + 1 ) * A )


---> console_out:
YES
5 15 20
YES
13 26 39
YES
7 77 84
 
MATCHED!! :D
 47%|████▋     | 829/1746 [10:59<01:19, 11.57it/s]Traceback (most recent call last):
  File "./junk/1703784344931_5551/main.py", line 24, in <module>
    Main ( ) . run ( )
  File "./junk/1703784344931_5551/main.py", line 16, in run
    if t [ j ] == s [ j ] :
IndexError: string index out of range
out1,out2 40003000 00002010400010300030


-------------------------------------


---> lineNum: 830
---> probID: aizu_p00226_A
---> inputs:
1234 5678
1234 1354
1234 1234
1230 1023
0123 1234
0 0
---> outputs:
0 0
2 1
4 0
1 3
0 3

import math
import sys
class Main :
    def __init__ ( self ) :
        self . INF = 1 << 28
        self . EPS = 1e-9
    def run ( self ) :
        while True :
            s = input ( )
            t = input ( )
            if s == "0" :
                break
            hit = 0
            blow = 0
            for j in range ( 4 ) :
                if t [ j ] == s [ j ] :
                    hit += 1
                for i in range ( 4 ) :
                    if t [ j ] == s [ i ] :
                        blow += 1
            blow -= hit
            print ( hit , blow )
if __name__ == '__main__' :
    Main ( ) . run ( )


---> console_out:
4 0
3 0
 
DIDN'T MATCH!! :(
out1,out2 230 230


-------------------------------------


---> lineNum: 831
---> probID: geeksforgeeks_1509_A
---> inputs:

---> outputs:
23


import numpy as np
def findMaxValue ( arr , n ) :
    if n < 4 :
        print ( "The array should have atleast 4 elements" )
    table1 = np . full ( n + 1 , - np . inf )
    table2 = np . full ( n , - np . inf )
    table3 = np . full ( n - 1 , - np . inf )
    table4 = np . full ( n - 2 , - np . inf )
    for i in range ( n - 1 , - 1 , - 1 ) :
        table1 [ i ] = max ( table1 [ i + 1 ] , arr [ i ] )
    for i in range ( n - 2 , - 1 , - 1 ) :
        table2 [ i ] = max ( table2 [ i + 1 ] , table1 [ i + 1 ] - arr [ i ] )
    for i in range ( n - 3 , - 1 , - 1 ) :
        table3 [ i ] = max ( table3 [ i + 1 ] , table2 [ i + 1 ] + arr [ i ] )
    for i in range ( n - 4 , - 1 , - 1 ) :
        table4 [ i ] = max ( table4 [ i + 1 ] , table3 [ i + 1 ] - arr [ i ] )
    return table4 [ 0 ]
arr = [ 4 , 8 , 9 , 2 , 20 ]
n = len ( arr )
print ( findMaxValue ( arr , n ) )


---> console_out:
23.0
 
MATCHED!! :D
 48%|████▊     | 831/1746 [11:00<01:43,  8.84it/s]

-------------------------------------


---> lineNum: 832
---> probID: geeksforgeeks_1726_A
---> inputs:

---> outputs:
1 7 19 37 61 91 127 169 217 271 

import math
def centeredHexagonalSeries ( n ) :
    for i in range ( 1 , n + 1 ) :
        print ( 3 * i * ( i - 1 ) + 1 , end = " " )
if __name__ == "__main__" :
    n = 10
    centeredHexagonalSeries ( n )


---> console_out:
1 7 19 37 61 91 127 169 217 271  
MATCHED!! :D


-------------------------------------


---> lineNum: 833
---> probID: aizu_p01811_A
---> inputs:
ABC
---> outputs:
Yes

import re
ABC = [ "A" , "B" , "C" ]
def main ( ) :
    S = input ( )
    if dfs ( S ) :
        print ( "Yes" )
    else :
        print ( "No" )
def dfs ( S ) :
    if S == "ABC" :
        return True
    cnt = 0
    f = False
    pos = [ False ] * len ( S )
    for j in range ( len ( S ) - 2 ) :
        if S [ j : j + 3 ] == "ABC" :
            pos [ j ] = True
            cnt += 1
    if cnt < 1 :
        return False
    for i in range ( 3 ) :
        for j in range ( len ( S ) ) :
            if S [ j ] == chr ( ord ( 'A' ) + i ) :
                if j - i < 0 or not pos [ j - i ] :
                    break
        else :
            next = re . sub ( "ABC" , ABC [ i ] , S )
            f |= dfs ( next )
    return f
if __name__ == "__main__" :
    main ( )


---> console_out:
Yes
 
MATCHED!! :D
 48%|████▊     | 833/1746 [11:00<01:37,  9.36it/s]

-------------------------------------


---> lineNum: 834
---> probID: codeforces_1028_A
---> inputs:
5 6
WWBBBW
WWBBBW
WWBBBW
WWWWWW
WWWWWW
---> outputs:
2 4

import sys
m , n = map ( int , input ( ) . split ( ) )
arrayOne = [ ]
for i in range ( m ) :
    data = sys . stdin . readline ( ) . strip ( )
    arrayOne . append ( list ( data ) )
sumr = 0
sumc = 0
count1 = 0
count2 = 0
for i in range ( m ) :
    for j in range ( n ) :
        if arrayOne [ i ] [ j ] == 'B' :
            sumr += i + 1
            count1 += 1
for i in range ( m ) :
    for j in range ( n ) :
        if arrayOne [ i ] [ j ] == 'B' :
            sumc += j + 1
            count2 += 1
print ( sumr // count1 , sumc // count2 )


---> console_out:
2 4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 835
---> probID: geeksforgeeks_4333_A
---> inputs:

---> outputs:
Principal Diagonal Smallest Element:  -5
Principal Diagonal Greatest Element :  11
Secondary Diagonal Smallest Element:  4
Secondary Diagonal Greatest Element:  11


def diagonalsMinMax ( mat ) :
    n = len ( mat )
    if n == 0 :
        return
    principalMin = mat [ 0 ] [ 0 ]
    principalMax = mat [ 0 ] [ 0 ]
    secondaryMin = mat [ n - 1 ] [ 0 ]
    secondaryMax = mat [ n - 1 ] [ 0 ]
    for i in range ( 1 , n ) :
        for j in range ( 1 , n ) :
            if i == j :
                if mat [ i ] [ j ] < principalMin :
                    principalMin = mat [ i ] [ j ]
                if mat [ i ] [ j ] > principalMax :
                    principalMax = mat [ i ] [ j ]
            if ( i + j ) == ( n - 1 ) :
                if mat [ i ] [ j ] < secondaryMin :
                    secondaryMin = mat [ i ] [ j ]
                if mat [ i ] [ j ] > secondaryMax :
                    secondaryMax = mat [ i ] [ j ]
    print ( "Principal Diagonal Smallest Element: " , principalMin )
    print ( "Principal Diagonal Greatest Element: " , principalMax )
    print ( "Secondary Diagonal Smallest Element: " , secondaryMin )
    print ( "Secondary Diagonal Greatest Element: " , secondaryMax )
matrix = [ [ 1 , 2 , 3 , 4 , - 10 ] , [ 5 , 6 , 7 , 8 , 6 ] , [ 1 , 2 , 11 , 3 , 4 ] , [ 5 , 6 , 70 , 5 , 8 ] , [ 4 , 9 , 7 , 1 , - 5 ] ]
diagonalsMinMax ( matrix )


---> console_out:
Principal Diagonal Smallest Element:  -5
Principal Diagonal Greatest Element:  11
Secondary Diagonal Smallest Element:  4
Secondary Diagonal Greatest Element:  11
 
MATCHED!! :D
 48%|████▊     | 835/1746 [11:00<01:25, 10.66it/s]

-------------------------------------


---> lineNum: 836
---> probID: geeksforgeeks_4334_A
---> inputs:

---> outputs:
Principal Diagonal Smallest Element:  -5
Principal Diagonal Greatest Element :  11
Secondary Diagonal Smallest Element:  -10
Secondary Diagonal Greatest Element:  11


def diagonalsMinMax ( mat ) :
    n = len ( mat )
    if n == 0 :
        return
    principalMin = mat [ 0 ] [ 0 ]
    principalMax = mat [ 0 ] [ 0 ]
    secondaryMin = mat [ n - 1 ] [ 0 ]
    secondaryMax = mat [ n - 1 ] [ 0 ]
    for i in range ( n ) :
        if mat [ i ] [ i ] < principalMin :
            principalMin = mat [ i ] [ i ]
        if mat [ i ] [ i ] > principalMax :
            principalMax = mat [ i ] [ i ]
        if mat [ n - 1 - i ] [ i ] < secondaryMin :
            secondaryMin = mat [ n - 1 - i ] [ i ]
        if mat [ n - 1 - i ] [ i ] > secondaryMax :
            secondaryMax = mat [ n - 1 - i ] [ i ]
    print ( "Principal Diagonal Smallest Element: " , principalMin )
    print ( "Principal Diagonal Greatest Element: " , principalMax )
    print ( "Secondary Diagonal Smallest Element: " , secondaryMin )
    print ( "Secondary Diagonal Greatest Element: " , secondaryMax )
matrix = [ [ 1 , 2 , 3 , 4 , - 10 ] , [ 5 , 6 , 7 , 8 , 6 ] , [ 1 , 2 , 11 , 3 , 4 ] , [ 5 , 6 , 70 , 5 , 8 ] , [ 4 , 9 , 7 , 1 , - 5 ] ]
diagonalsMinMax ( matrix )


---> console_out:
Principal Diagonal Smallest Element:  -5
Principal Diagonal Greatest Element:  11
Secondary Diagonal Smallest Element:  -10
Secondary Diagonal Greatest Element:  11
 
MATCHED!! :D


-------------------------------------


---> lineNum: 837
---> probID: geeksforgeeks_4783_A
---> inputs:

---> outputs:
8


import math
def averageOdd ( n ) :
    if n % 2 == 0 :
        print ( "Invalid Input" )
        return - 1
    sum = 0
    count = 0
    while n >= 1 :
        count += 1
        sum += n
        n -= 2
    return math . floor ( sum / count )
n = 15
print ( averageOdd ( n ) )


---> console_out:
8
 
MATCHED!! :D
 48%|████▊     | 837/1746 [11:00<01:21, 11.19it/s]

-------------------------------------


---> lineNum: 838
---> probID: geeksforgeeks_4784_A
---> inputs:

---> outputs:
8


import sys
def averageOdd ( n ) :
    if n % 2 == 0 :
        print ( "Invalid Input" )
        return - 1
    return ( n + 1 ) // 2
if __name__ == "__main__" :
    n = 15
    print ( averageOdd ( n ) )


---> console_out:
8
 
MATCHED!! :D


-------------------------------------


---> lineNum: 839
---> probID: geeksforgeeks_4027_A
---> inputs:

---> outputs:
Yes


import numpy as np
def areElementsContiguous ( arr ) :
    us = set ( arr )
    count = 1
    curr_ele = arr [ 0 ] - 1
    while curr_ele in us :
        count += 1
        curr_ele -= 1
    curr_ele = arr [ 0 ] + 1
    while curr_ele in us :
        count += 1
        curr_ele += 1
    return count == len ( us )
arr = np . array ( [ 5 , 2 , 3 , 6 , 4 , 4 , 6 , 6 ] )
if areElementsContiguous ( arr ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
 48%|████▊     | 839/1746 [11:00<01:41,  8.92it/s]

-------------------------------------


---> lineNum: 840
---> probID: geeksforgeeks_3398_A
---> inputs:

---> outputs:
0
1
-1


from queue import Queue
def getLeftMostZero ( zero ) :
    if zero . empty ( ) :
        return - 1
    zero . get ( )
    return 0
def getLeftMostOne ( one ) :
    if one . empty ( ) :
        return - 1
    one . get ( )
    return 1
def getLeftMostElement ( zero , one ) :
    if zero . empty ( ) and one . empty ( ) :
        return - 1
    elif zero . empty ( ) :
        one . get ( )
        return 1
    elif one . empty ( ) :
        zero . get ( )
        return 0
    res = 0 if zero . peek ( ) < one . peek ( ) else 1
    if res == 0 :
        zero . get ( )
    else :
        one . get ( )
    return res
def performQueries ( arr , n , queries , q ) :
    zero = Queue ( )
    one = Queue ( )
    for i in range ( n ) :
        if arr [ i ] == 0 :
            zero . put ( i )
        else :
            one . put ( i )
    for i in range ( q ) :
        type = queries [ i ]
        if type == 1 :
            print ( getLeftMostZero ( zero ) )
        elif type == 2 :
            print ( getLeftMostOne ( one ) )
        elif type == 3 :
            print ( getLeftMostElement ( zero , one ) )
if __name__ == '__main__' :
    arr = [ 1 , 0 , 1 , 1 , 1 ]
    n = len ( arr )
    queries = [ 1 , 3 , 1 ]
    q = len ( queries )
    performQueries ( arr , n , queries , q )


---> console_out:
0
1
-1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 841
---> probID: geeksforgeeks_4079_A
---> inputs:

---> outputs:
6 0 0 6


def Vertices ( x , y ) :
    val = abs ( x ) + abs ( y )
    print ( val * ( - 1 if x < 0 else 1 ) , "0" , end = " " )
    print ( "0" , val * ( - 1 if y < 0 else 1 ) )
if __name__ == "__main__" :
    x , y = 3 , 3
    Vertices ( x , y )


---> console_out:
6 0 0 6
 
MATCHED!! :D
 48%|████▊     | 841/1746 [11:01<01:28, 10.25it/s]

-------------------------------------


---> lineNum: 842
---> probID: geeksforgeeks_1932_A
---> inputs:

---> outputs:
3 4 6 

from typing import List
from collections import defaultdict
def getSum ( a : List [ int ] , n : int ) -> None :
    P = [ 0 ] * n
    P [ 0 ] = a [ 0 ]
    for i in range ( 1 , n ) :
        P [ i ] = a [ i ] + P [ i - 1 ]
    S = P [ n - 1 ]
    hash = defaultdict ( int )
    for i in range ( n ) :
        hash [ P [ i ] ] = 1
    res = set ( )
    for i in range ( 1 , int ( S ** 0.5 ) + 1 ) :
        if S % i == 0 :
            pres = True
            div1 , div2 = i , S // i
            for j in range ( div1 , S + 1 , div1 ) :
                if hash [ j ] != 1 :
                    pres = False
                    break
            if pres and div1 != S :
                res . add ( div1 )
            pres = True
            for j in range ( div2 , S + 1 , div2 ) :
                if hash [ j ] != 1 :
                    pres = False
                    break
            if pres and div2 != S :
                res . add ( div2 )
    if not res :
        print ( "-1" )
        return
    for i in res :
        print ( i , end = " " )
if __name__ == "__main__" :
    a = [ 1 , 2 , 1 , 1 , 1 , 2 , 1 , 3 ]
    n = len ( a )
    getSum ( a , n )


---> console_out:
3 4 6  
MATCHED!! :D


-------------------------------------


---> lineNum: 843
---> probID: geeksforgeeks_4554_A
---> inputs:

---> outputs:
1 4 5 6 7 2 3 

import numpy as np
def originalArray ( greater , n ) :
    temp = list ( range ( n + 1 ) )
    arr = np . zeros ( n , dtype = int )
    for i in range ( n ) :
        k = n - greater [ i ] - i
        arr [ i ] = temp [ k ]
        temp . pop ( k )
    for i in range ( n ) :
        print ( arr [ i ] , end = " " )
Arr = [ 6 , 3 , 2 , 1 , 0 , 1 , 0 ]
n = len ( Arr )
originalArray ( Arr , n )


---> console_out:
1 4 5 6 7 2 3  
MATCHED!! :D
 48%|████▊     | 843/1746 [11:01<01:47,  8.36it/s]

-------------------------------------


---> lineNum: 844
---> probID: codeforces_154_A
---> inputs:
ababa
1
ab
---> outputs:
2

import sys
s = input ( )
k = int ( input ( ) )
x = 0
y = 0
ans = 0
for i in range ( k ) :
    p = input ( )
    for j in range ( len ( s ) ) :
        if s [ j ] == p [ 0 ] :
            x += 1
        elif s [ j ] == p [ 1 ] :
            y += 1
        else :
            ans += min ( x , y )
            x = 0
            y = 0
    ans += min ( x , y )
    x = 0
    y = 0
print ( ans )


---> console_out:
2
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784346614_1278/main.py", line 2, in <module>
    class Solution :
  File "./junk/1703784346614_1278/main.py", line 3, in Solution
    def findRadius ( self , houses : List [ int ] , heaters : List [ int ] ) -> int :
NameError: name 'List' is not defined
out1,out2  10


-------------------------------------


---> lineNum: 845
---> probID: leetcode_475_A
---> inputs:

---> outputs:
1

import bisect
class Solution :
    def findRadius ( self , houses : List [ int ] , heaters : List [ int ] ) -> int :
        heaters . sort ( )
        result = float ( '-inf' )
        for house in houses :
            index = bisect . bisect_left ( heaters , house )
            if index < 0 :
                index = - ( index + 1 )
            dist1 = house - heaters [ index - 1 ] if index - 1 >= 0 else float ( 'inf' )
            dist2 = heaters [ index ] - house if index < len ( heaters ) else float ( 'inf' )
            result = max ( result , min ( dist1 , dist2 ) )
        return result
if __name__ == '__main__' :
    sObj = Solution ( )
    houses = [ 1 , 2 , 3 ]
    heaters = [ 2 ]
    out = sObj . findRadius ( houses , heaters )
    print ( out )


---> console_out:
 
DIDN'T MATCH!! :(
 48%|████▊     | 845/1746 [11:01<01:32,  9.73it/s]out1,out2  1492530


-------------------------------------


---> lineNum: 846
---> probID: projecteuler_p130_A
---> inputs:

---> outputs:
149253

class p130 :
    def main ( ) :
        print ( p130 ( ) . run ( ) )
    def run ( self ) :
        sum = 0
        found = 0
        i = 7
        while found < 25 :
            if i % 5 != 0 and not isPrime ( i ) and ( i - 1 ) % self . findLeastDivisibleRepunit ( i ) == 0 :
                sum += i
                found += 1
            i += 2
        return str ( sum )
    @ staticmethod
    def findLeastDivisibleRepunit ( n ) :
        if n % 2 == 0 or n % 5 == 0 :
            return 0
        if n > sys . maxsize / 10 :
            raise ValueError ( "Arithmetic overflow" )
        sum = 1
        pow = 1
        k = 1
        while sum % n != 0 :
            k += 1
            pow = pow * 10 % n
            sum = ( sum + pow ) % n
        return k


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 847
---> probID: geeksforgeeks_873_A
---> inputs:

---> outputs:
1


import math
res = 0
def checkRecursive ( num , x , k , n ) :
    global res
    if x == 0 :
        res += 1
    r = int ( math . floor ( num ** ( 1.0 / n ) ) )
    for i in range ( k + 1 , r + 1 ) :
        a = x - i ** n
        if a >= 0 :
            checkRecursive ( num , x - i ** n , i , n )
    return res
def check ( x , n ) :
    return checkRecursive ( x , x , 0 , n )
print ( check ( 10 , 2 ) )


---> console_out:
1
 
MATCHED!! :D
 49%|████▊     | 847/1746 [11:01<01:21, 10.98it/s]

-------------------------------------


---> lineNum: 848
---> probID: atcoder_ABC079_C
---> inputs:
1222
---> outputs:
1+2+2+2=7

import sys
def dfs ( chs , idx , cur , opers ) :
    if idx == len ( chs ) :
        if cur == 7 :
            return opers
        else :
            return None
    plus = dfs ( chs , idx + 1 , cur + ( int ( chs [ idx ] ) ) , opers + "+" )
    if plus != None :
        return plus
    nega = dfs ( chs , idx + 1 , cur - ( int ( chs [ idx ] ) ) , opers + "-" )
    if nega != None :
        return nega
    return None
oper = ""
s = input ( )
chs = list ( s )
oper = dfs ( chs , 1 , int ( chs [ 0 ] ) , "" )
sb = ""
for i in range ( len ( chs ) ) :
    sb += chs [ i ]
    if i < len ( chs ) - 1 :
        sb += oper [ i ]
print ( sb + "=7" )


---> console_out:
1+2+2+2=7
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784346869_8849/main.py", line 13, in <module>
    dp [ k + 1 ] [ j + a [ i ] ] = max ( dp [ k + 1 ] [ j + a [ i ] ] , dp [ k ] [ j ] + b [ i ] / 2.0 )
IndexError: list index out of range
out1,out2  70110120


-------------------------------------


---> lineNum: 849
---> probID: codeforces_1458_B
---> inputs:
3
6 5
6 5
10 2
---> outputs:
7.0000000000 11.0000000000 12.0000000000

import sys
n = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
b = list ( map ( float , input ( ) . split ( ) ) )
total = sum ( [ x / 2.0 for x in b ] )
dp = [ [ - 1.0 ] * 10001 for _ in range ( n + 1 ) ]
dp [ 0 ] [ 0 ] = total
for i in range ( n ) :
    for k in range ( n - 1 , - 1 , - 1 ) :
        for j in range ( 10001 ) :
            if dp [ k ] [ j ] == - 1 :
                continue
            dp [ k + 1 ] [ j + a [ i ] ] = max ( dp [ k + 1 ] [ j + a [ i ] ] , dp [ k ] [ j ] + b [ i ] / 2.0 )
out = [ ]
for k in range ( 1 , n + 1 ) :
    max_val = 0.0
    for j in range ( 10001 ) :
        max_val = max ( max_val , min ( dp [ k ] [ j ] , j ) )
    out . append ( str ( max_val ) )
print ( " " . join ( out ) )
sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(
 49%|████▊     | 849/1746 [11:01<01:16, 11.74it/s]out1,out2 00 170


-------------------------------------


---> lineNum: 850
---> probID: codeforces_1060_B
---> inputs:
35
---> outputs:
17

import sys
def solve ( n ) :
    sum = [ int ( i ) for i in str ( n ) ]
    for i in range ( len ( sum ) - 1 ) :
        sum [ i ] -= 1
        sum [ i + 1 ] += 10
    for i in range ( len ( sum ) - 1 , 0 , - 1 ) :
        if sum [ i ] == 19 :
            sum [ i ] -= 10
            sum [ i - 1 ] += 1
    return sum . count ( 0 )
if __name__ == "__main__" :
    n = int ( input ( ) )
    print ( solve ( n ) )


---> console_out:
0
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 851
---> probID: geeksforgeeks_5282_A
---> inputs:

---> outputs:
3


import math
def prime ( n ) :
    for i in range ( 2 , int ( math . sqrt ( n ) ) + 1 ) :
        if n % i == 0 :
            return False
    return True
def thirdNumber ( a , b ) :
    sum = a + b
    temp = 1
    if sum == 0 :
        temp = 2
    while not prime ( sum + temp ) :
        temp += 2
    print ( temp )
if __name__ == '__main__' :
    a , b = 3 , 5
    thirdNumber ( a , b )


---> console_out:
3
 
MATCHED!! :D
 49%|████▊     | 851/1746 [11:01<01:10, 12.66it/s]

-------------------------------------


---> lineNum: 852
---> probID: geeksforgeeks_3153_A
---> inputs:

---> outputs:
4


import math
def Squares ( n , m , a ) :
    return math . ceil ( m / a ) * math . ceil ( n / a )
n = 6
m = 6
a = 4
print ( Squares ( n , m , a ) )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 853
---> probID: codeforces_1312_A
---> inputs:
2
6 3
7 3
---> outputs:
YES
NO

import sys
for line in sys . stdin :
    t = int ( line )
    for i in range ( t ) :
        n , m = map ( int , input ( ) . split ( ) )
        print ( "YES" if n % m == 0 else "NO" )


---> console_out:
YES
NO
 
MATCHED!! :D
 49%|████▉     | 853/1746 [11:02<01:06, 13.47it/s]

-------------------------------------


---> lineNum: 854
---> probID: geeksforgeeks_5067_A
---> inputs:

---> outputs:
Count of Cubes is  2


def countCubes ( a , b ) :
    cnt = 0
    for i in range ( a , b + 1 ) :
        for j in range ( 1 , int ( i ** ( 1 / 3 ) ) + 1 ) :
            if j * j * j == i :
                cnt += 1
    return cnt
a , b = 7 , 30
print ( "Count of Cubes is" , countCubes ( a , b ) )


---> console_out:
Count of Cubes is 2
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784347265_2594/main.py", line 6, in <module>
    v = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '3 1 3 2'
out1,out2  10


-------------------------------------


---> lineNum: 855
---> probID: atcoder_ABC111_C
---> inputs:
4
3 1 3 2
---> outputs:
1

import sys
n = int ( input ( ) )
oddList = [ 0 ] * 100001
evenList = [ 0 ] * 100001
for i in range ( 1 , n + 1 ) :
    v = int ( input ( ) )
    if i % 2 == 1 :
        oddList [ v ] += 1
    if i % 2 == 0 :
        evenList [ v ] += 1
maxOdd = 0
maxEven = 0
secondmaxOdd = 0
secondmaxEven = 0
countOdd = 0
countEven = 0
for i in range ( 1 , 100001 ) :
    maxOdd = max ( oddList [ i ] , maxOdd )
    maxEven = max ( evenList [ i ] , maxEven )
oddnum = 0
evennum = 0
for i in range ( 1 , 100001 ) :
    if oddList [ i ] == maxOdd :
        oddnum = i
        countOdd += 1
    if evenList [ i ] == maxEven :
        evennum = i
        countEven += 1
for i in range ( 1 , 100001 ) :
    if oddList [ i ] != maxOdd :
        secondmaxOdd = max ( oddList [ i ] , secondmaxOdd )
    if evenList [ i ] != maxEven :
        secondmaxEven = max ( evenList [ i ] , secondmaxEven )
if countOdd >= 2 :
    secondmaxOdd = maxOdd
if countEven >= 2 :
    secondmaxEven = maxEven
for i in range ( 1 , 100001 ) :
    if oddList [ i ] == maxOdd :
        oddnum = i
    if evenList [ i ] == maxEven :
        evennum = i
if oddnum == evennum :
    if maxOdd > maxEven :
        maxEven = secondmaxEven
    elif maxOdd < maxEven :
        maxOdd = secondmaxOdd
    else :
        maxEven = max ( secondmaxOdd , secondmaxEven )
ans = n - maxOdd - maxEven
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 49%|████▉     | 855/1746 [11:02<01:03, 14.02it/s]

-------------------------------------


---> lineNum: 856
---> probID: geeksforgeeks_4177_A
---> inputs:

---> outputs:
a
ab
abc
abcd
b
bc
bcd
c
cd
d


def SubString ( str , n ) :
    for i in range ( n ) :
        for j in range ( i + 1 , n + 1 ) :
            print ( str [ i : j ] )
if __name__ == '__main__' :
    str = "abcd"
    SubString ( str , len ( str ) )


---> console_out:
a
ab
abc
abcd
b
bc
bcd
c
cd
d
 
MATCHED!! :D


-------------------------------------


---> lineNum: 857
---> probID: geeksforgeeks_4268_A
---> inputs:

---> outputs:
Number of 0s = 1
Number of 1s = 1


def isPrime ( n ) :
    if n <= 1 :
        return False
    for i in range ( 2 , n ) :
        if n % i == 0 :
            return False
    return True
def countPrimePosition ( arr ) :
    c0 = 0
    c1 = 0
    n = len ( arr )
    for i in range ( n ) :
        if arr [ i ] == 0 and isPrime ( i ) :
            c0 += 1
        if arr [ i ] == 1 and isPrime ( i ) :
            c1 += 1
    print ( "Number of 0s = " + str ( c0 ) )
    print ( "Number of 1s = " + str ( c1 ) )
arr = [ 1 , 0 , 1 , 0 , 1 ]
countPrimePosition ( arr )


---> console_out:
Number of 0s = 1
Number of 1s = 1
 
MATCHED!! :D
 49%|████▉     | 857/1746 [11:02<01:00, 14.62it/s]

-------------------------------------


---> lineNum: 858
---> probID: geeksforgeeks_834_A
---> inputs:

---> outputs:
The exterior angle of thecyclic quadrilateral is 48  degrees


import io
def angleextcycquad ( z ) :
    print ( "The exterior angle of the" + " cyclic quadrilateral is " + str ( z ) + " degrees" )
def main ( ) :
    z = 48
    angleextcycquad ( z )
if __name__ == "__main__" :
    main ( )


---> console_out:
The exterior angle of the cyclic quadrilateral is 48 degrees
 
MATCHED!! :D


-------------------------------------


---> lineNum: 859
---> probID: geeksforgeeks_2767_A
---> inputs:

---> outputs:
Minimum Index Character =  e


def printMinIndexChar ( str , patt ) :
    minIndex = float ( 'inf' )
    m = len ( str )
    n = len ( patt )
    for i in range ( n ) :
        for j in range ( m ) :
            if patt [ i ] == str [ j ] and j < minIndex :
                minIndex = j
                break
    if minIndex != float ( 'inf' ) :
        print ( "Minimum Index Character = " + str [ minIndex ] )
    else :
        print ( "No character present" )
str = "geeksforgeeks"
patt = "set"
printMinIndexChar ( str , patt )


---> console_out:
Minimum Index Character = e
 
MATCHED!! :D
 49%|████▉     | 859/1746 [11:02<00:59, 14.82it/s]

-------------------------------------


---> lineNum: 860
---> probID: codeforces_456_A
---> inputs:
2
1 2
2 1
---> outputs:
Happy Alex

import sys
n = int ( input ( ) )
for i in range ( n ) :
    a , b = map ( int , sys . stdin . readline ( ) . split ( ) )
    if b < a :
        print ( "Happy Alex" )
        sys . exit ( )
print ( "Poor Alex" )


---> console_out:
Happy Alex
 
MATCHED!! :D


-------------------------------------


---> lineNum: 861
---> probID: geeksforgeeks_545_A
---> inputs:

---> outputs:
658


import math
def maxnumber ( n , k ) :
    for j in range ( k ) :
        ans = 0
        i = 1
        while n // i > 0 :
            temp = ( n // ( i * 10 ) ) * i + ( n % i )
            i *= 10
            ans = max ( ans , temp )
        n = ans
    return n
n = 6358
k = 1
print ( maxnumber ( n , k ) )


---> console_out:
658
 
MATCHED!! :D
 49%|████▉     | 861/1746 [11:02<00:59, 14.99it/s]

-------------------------------------


---> lineNum: 862
---> probID: aizu_p01037_A
---> inputs:
5 3
0 1
2 1
3 1
---> outputs:
2 1
1 1

import sys
class Main :
    def __init__ ( self ) :
        self . log = open ( 'log.txt' , 'w' )
        self . result = sys . stdout
        self . sc = sys . stdin
    def main ( self ) :
        N , M = map ( int , self . sc . readline ( ) . split ( ) )
        w = [ 0 ] * N
        for i in range ( M ) :
            a , L = map ( int , self . sc . readline ( ) . split ( ) )
            for j in range ( L ) :
                w [ ( a + j ) % N ] = 1
        t = [ 0 ] * ( N + 1 )
        s = f = s0 = i = 0
        while i < N :
            if f == 0 and w [ i ] == 1 :
                s = i
                f = 1
            elif f == 1 and w [ i ] == 0 :
                f = 0
                if s == 0 :
                    s0 = i
                else :
                    t [ i - s ] += 1
            i += 1
        if f == 1 :
            t [ i - s + s0 ] += 1
        elif s0 != 0 :
            t [ s0 ] += 1
        for i in range ( N , 0 , - 1 ) :
            if t [ i ] > 0 :
                self . result . write ( str ( i ) + " " + str ( t [ i ] ) + "\n" )
if __name__ == '__main__' :
    Main ( ) . main ( )


---> console_out:
2 1
1 1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 863
---> probID: atcoder_ABC059_C
---> inputs:
4
1 -3 1 0
---> outputs:
4

import sys
n = int ( input ( ) )
a = [ int ( x ) for x in input ( ) . split ( ) ]
sum = 0
now = 0
border = 1
end = 0
ans_p = 0
for i in range ( n ) :
    sum += a [ i ]
    end = border - sum
    if border > 0 :
        if now < end :
            ans_p += abs ( now - end )
            now = end
    else :
        if now > end :
            ans_p += abs ( now - end )
            now = end
    border = - border
sum = 0
now = 0
border = - 1
end = 0
ans_m = 0
for i in range ( n ) :
    sum += a [ i ]
    end = border - sum
    if border > 0 :
        if now < end :
            ans_m += abs ( now - end )
            now = end
    else :
        if now > end :
            ans_m += abs ( now - end )
            now = end
    border = - border
print ( min ( ans_p , ans_m ) )


---> console_out:
4
 
MATCHED!! :D
 49%|████▉     | 863/1746 [11:02<00:58, 15.08it/s]

-------------------------------------


---> lineNum: 864
---> probID: geeksforgeeks_2964_A
---> inputs:

---> outputs:
For N =  1 :  1
For N =  2 :  3
For N =  3 :  9
For N =  4 :  33
For N =  5 :  53
For N =  6 :  73
For N =  7 :  13
For N =  8 :  33
For N =  9 :  13
For N =  10 :  13


def get_last_two_digit ( N ) :
    if N <= 10 :
        ans , fac = 0 , 1
        for i in range ( 1 , N + 1 ) :
            fac *= i
            ans += fac
        return int ( ans % 100 )
    else :
        return 13
if __name__ == '__main__' :
    N = 1
    for N in range ( 1 , 11 ) :
        print ( "For N = {}: {}" . format ( N , get_last_two_digit ( N ) ) )


---> console_out:
For N = 1: 1
For N = 2: 3
For N = 3: 9
For N = 4: 33
For N = 5: 53
For N = 6: 73
For N = 7: 13
For N = 8: 33
For N = 9: 13
For N = 10: 13
 
MATCHED!! :D
out1,out2  90


-------------------------------------


---> lineNum: 865
---> probID: geeksforgeeks_2148_A
---> inputs:

---> outputs:
9


class GFG :
    def main ( args ) :
        binaryNumber = "1001"
        print ( int ( binaryNumber , 2 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 50%|████▉     | 865/1746 [11:02<00:57, 15.37it/s]out1,out2 no yes


-------------------------------------


---> lineNum: 866
---> probID: geeksforgeeks_3617_A
---> inputs:

---> outputs:
Yes


import math
def isPossible ( x , y , z ) :
    a = x * x + y * y + z * z
    if math . ceil ( a ) == 1 and math . floor ( a ) == 1 :
        return True
    return False
if __name__ == '__main__' :
    l , m , n = 0.70710678 , 0.5 , 0.5
    if isPossible ( l , m , n ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
No
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 867
---> probID: geeksforgeeks_2541_A
---> inputs:

---> outputs:
288
34560


import math
MAX = 1000000
MOD = 10000007
result = [ 0 ] * ( MAX + 1 )
fact = [ 0 ] * ( MAX + 1 )
def preCompute ( ) :
    fact [ 0 ] = 1
    result [ 0 ] = 1
    for i in range ( 1 , MAX + 1 ) :
        fact [ i ] = ( fact [ i - 1 ] * i ) % MOD
        result [ i ] = ( result [ i - 1 ] * fact [ i ] ) % MOD
def performQueries ( q , n ) :
    preCompute ( )
    for i in range ( n ) :
        print ( result [ q [ i ] ] )
if __name__ == '__main__' :
    q = [ 4 , 5 ]
    n = len ( q )
    performQueries ( q , n )


---> console_out:
288
34560
 
MATCHED!! :D
 50%|████▉     | 867/1746 [11:03<02:14,  6.55it/s]

-------------------------------------


---> lineNum: 868
---> probID: codeforces_1540_A
---> inputs:
3
3
0 2 3
2
0 1000000000
1
0
---> outputs:
-3
0
0

import sys
T = int ( input ( ) )
for _ in range ( T ) :
    n = int ( input ( ) )
    a = list ( map ( int , input ( ) . split ( ) ) )
    a . sort ( )
    mini = 0
    ans = 0
    for i in range ( 1 , n ) :
        diff = a [ i ] - a [ i - 1 ]
        mini += - 1 * diff * i
        ans += mini
    print ( ans + a [ n - 1 ] )


---> console_out:
-3
0
0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 869
---> probID: geeksforgeeks_3171_A
---> inputs:

---> outputs:
The smallest positive missing number is  1


import math
def segregate ( arr , size ) :
    j = 0
    for i in range ( size ) :
        if arr [ i ] <= 0 :
            temp = arr [ i ]
            arr [ i ] = arr [ j ]
            arr [ j ] = temp
            j += 1
    return j
def findMissingPositive ( arr , size ) :
    for i in range ( size ) :
        x = abs ( arr [ i ] )
        if x - 1 < size and arr [ x - 1 ] > 0 :
            arr [ x - 1 ] = - arr [ x - 1 ]
    for i in range ( size ) :
        if arr [ i ] > 0 :
            return i + 1
    return size + 1
def findMissing ( arr , size ) :
    shift = segregate ( arr , size )
    arr2 = [ 0 ] * ( size - shift )
    j = 0
    for i in range ( shift , size ) :
        arr2 [ j ] = arr [ i ]
        j += 1
    return findMissingPositive ( arr2 , j )
arr = [ 0 , 10 , 2 , - 10 , - 20 ]
arr_size = len ( arr )
missing = findMissing ( arr , arr_size )
print ( "The smallest positive missing number is" , missing )


---> console_out:
The smallest positive missing number is 1
 
MATCHED!! :D
 50%|████▉     | 869/1746 [11:03<01:54,  7.69it/s]

-------------------------------------


---> lineNum: 870
---> probID: geeksforgeeks_1382_A
---> inputs:

---> outputs:
648


mod = 1000000007
def digitNumber ( n ) :
    if n == 0 :
        return 1
    if n == 1 :
        return 9
    if n % 2 != 0 :
        temp = digitNumber ( ( n - 1 ) // 2 ) % mod
        return ( 9 * ( temp * temp ) % mod ) % mod
    else :
        temp = digitNumber ( n // 2 ) % mod
        return ( temp * temp ) % mod
def countExcluding ( n , d ) :
    if d == 0 :
        return ( 9 * digitNumber ( n - 1 ) ) % mod
    else :
        return ( 8 * digitNumber ( n - 1 ) ) % mod
d = 9
n = 3
print ( countExcluding ( n , d ) )


---> console_out:
648
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784348903_8853/main.py", line 45, in <module>
    main ( )
  File "./junk/1703784348903_8853/main.py", line 33, in main
    t = sc . read_int ( )
  File "./junk/1703784348903_8853/main.py", line 21, in read_int
    return int ( self . read_token ( ) )
  File "./junk/1703784348903_8853/main.py", line 19, in read_token
    return self . buffer . read ( ) . split ( ) [ self . pos ]
IndexError: list index out of range
out1,out2  20306010102030
out1,out2  10207010102030


-------------------------------------


---> lineNum: 871
---> probID: codeforces_1398_A
---> inputs:
3
7
4 6 11 11 15 18 20
4
10 10 10 11
3
1 1 1000000000
---> outputs:
['2 3 6\n-1\n1 2 3', '1 2 7\n-1\n1 2 3\n']

import sys
import math
from io import StringIO
import os
import time
import itertools
import collections
import bisect
from collections import deque
class FastReader :
    def __init__ ( self ) :
        self . buffer = StringIO ( )
        self . pos = 0
        self . read = sys . stdin . read
        self . readline = sys . stdin . readline
    def read_token ( self ) :
        while not self . buffer :
            self . buffer = StringIO ( self . readline ( ) . strip ( ) )
        return self . buffer . read ( ) . split ( ) [ self . pos ]
    def read_int ( self ) :
        return int ( self . read_token ( ) )
    def read_long ( self ) :
        return int ( self . read_token ( ) )
    def read_float ( self ) :
        return float ( self . read_token ( ) )
    def read_double ( self ) :
        return float ( self . read_token ( ) )
    def read_line ( self ) :
        return self . readline ( ) . strip ( )
def main ( ) :
    sc = FastReader ( )
    ou = sys . stdout
    t = sc . read_int ( )
    for o in range ( t ) :
        n = sc . read_int ( )
        ar = [ 0 ] * n
        for i in range ( n ) :
            ar [ i ] = sc . read_int ( )
        if ar [ 0 ] + ar [ 1 ] > ar [ n - 1 ] :
            ou . write ( str ( - 1 ) + "\n" )
        else :
            ou . write ( str ( 1 ) + " " + str ( 2 ) + " " + str ( n ) + "\n" )
    ou . flush ( )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 50%|████▉     | 871/1746 [11:03<01:36,  9.03it/s]Traceback (most recent call last):
  File "./junk/1703784348972_3185/main.py", line 17, in <module>
    convert12 ( re . sub ( ":" , "" , str ) )
  File "./junk/1703784348972_3185/main.py", line 14, in convert12
    print ( str ( hh ) + str [ 2 : 8 ] )
TypeError: 'str' object is not callable
out1,out2  50350200pm


-------------------------------------


---> lineNum: 872
---> probID: geeksforgeeks_1132_A
---> inputs:

---> outputs:
5:35:20 PM


import re
def convert12 ( str ) :
    h1 = int ( str [ 0 ] )
    h2 = int ( str [ 1 ] )
    hh = h1 * 10 + h2
    if hh < 12 :
        Meridien = "AM"
    else :
        Meridien = "PM"
    hh %= 12
    if hh == 0 :
        print ( "12" + str [ 2 : 8 ] )
    else :
        print ( str ( hh ) + str [ 2 : 8 ] )
    print ( " " + Meridien )
str = "17:35:20"
convert12 ( re . sub ( ":" , "" , str ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 873
---> probID: geeksforgeeks_2662_A
---> inputs:

---> outputs:
2


def check ( s , k ) :
    for i in range ( len ( s ) ) :
        if s [ i ] != s [ i % k ] :
            return False
    return True
def countCommonDivisors ( a , b ) :
    ct = 0
    n , m = len ( a ) , len ( b )
    for i in range ( 1 , min ( n , m ) + 1 ) :
        if n % i == 0 and m % i == 0 :
            if a [ : i ] == b [ : i ] :
                if check ( a , i ) and check ( b , i ) :
                    ct += 1
    return ct
a , b = "xaxa" , "xaxaxaxa"
print ( countCommonDivisors ( a , b ) )


---> console_out:
2
 
MATCHED!! :D
 50%|█████     | 873/1746 [11:03<01:29,  9.79it/s]

-------------------------------------


---> lineNum: 874
---> probID: geeksforgeeks_979_A
---> inputs:

---> outputs:
220
30
20


def max ( a , b ) :
    return a if a > b else b
def printknapSack ( W , wt , val , n ) :
    K = [ [ 0 for x in range ( W + 1 ) ] for x in range ( n + 1 ) ]
    for i in range ( n + 1 ) :
        for w in range ( W + 1 ) :
            if i == 0 or w == 0 :
                K [ i ] [ w ] = 0
            elif wt [ i - 1 ] <= w :
                K [ i ] [ w ] = max ( val [ i - 1 ] + K [ i - 1 ] [ w - wt [ i - 1 ] ] , K [ i - 1 ] [ w ] )
            else :
                K [ i ] [ w ] = K [ i - 1 ] [ w ]
    res = K [ n ] [ W ]
    print ( res )
    w = W
    for i in range ( n , 0 , - 1 ) :
        if res == K [ i - 1 ] [ w ] :
            continue
        else :
            print ( wt [ i - 1 ] , end = " " )
            res = res - val [ i - 1 ]
            w = w - wt [ i - 1 ]
val = [ 60 , 100 , 120 ]
wt = [ 10 , 20 , 30 ]
W = 50
n = len ( val )
printknapSack ( W , wt , val , n )


---> console_out:
220
30 20  
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784349201_1317/main.py", line 9, in <module>
    ff . append ( int ( input ( ) ) )
ValueError: invalid literal for int() with base 10: '1 2'
out1,out2  10


-------------------------------------


---> lineNum: 875
---> probID: codeforces_268_A
---> inputs:
3
1 2
2 4
3 4
---> outputs:
1

import sys
n = int ( input ( ) )
z = n * 2
c = 0
arr = [ 0 ] * z
ff = [ ]
ss = [ ]
for i in range ( n ) :
    ff . append ( int ( input ( ) ) )
    ss . append ( int ( input ( ) ) )
pp = len ( ff )
for i in range ( pp ) :
    for j in range ( pp ) :
        if ff [ i ] == ss [ j ] :
            c += 1
        else :
            continue
sys . stdout . write ( str ( c ) )


---> console_out:
 
DIDN'T MATCH!! :(
 50%|█████     | 875/1746 [11:04<01:20, 10.88it/s]

-------------------------------------


---> lineNum: 876
---> probID: geeksforgeeks_3438_A
---> inputs:

---> outputs:
Found at index 2


import numpy as np
def indexedSequentialSearch ( arr , n , k ) :
    elements = np . zeros ( 20 , dtype = int )
    indices = np . zeros ( 20 , dtype = int )
    temp = 0
    j = 0
    ind = 0
    start = 0
    end = 0
    for i in range ( 0 , n , 3 ) :
        elements [ ind ] = arr [ i ]
        indices [ ind ] = i
        ind += 1
    if k < elements [ 0 ] :
        print ( "Not found" )
        return
    else :
        for i in range ( 1 , ind + 1 ) :
            if k < elements [ i ] :
                start = indices [ i - 1 ]
                end = indices [ i ]
                break
    for i in range ( start , end + 1 ) :
        if k == arr [ i ] :
            j = 1
            break
    if j == 1 :
        print ( "Found at index" , i )
    else :
        print ( "Not found" )
arr = np . array ( [ 6 , 7 , 8 , 9 , 10 ] )
n = len ( arr )
k = 8
indexedSequentialSearch ( arr , n , k )


---> console_out:
Found at index 2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 877
---> probID: geeksforgeeks_3029_A
---> inputs:

---> outputs:
9009


def largestPalindrome ( n ) :
    upper_limit = 0
    for i in range ( 1 , n + 1 ) :
        upper_limit *= 10
        upper_limit += 9
    lower_limit = 1 + upper_limit // 10
    max_product = 0
    for i in range ( upper_limit , lower_limit - 1 , - 1 ) :
        for j in range ( i , lower_limit - 1 , - 1 ) :
            product = i * j
            if product < max_product :
                break
            number = product
            reverse = 0
            while number != 0 :
                reverse = reverse * 10 + number % 10
                number //= 10
            if product == reverse and product > max_product :
                max_product = product
    return max_product
n = 2
print ( largestPalindrome ( n ) )


---> console_out:
9009
 
MATCHED!! :D
 50%|█████     | 877/1746 [11:04<01:39,  8.77it/s]Traceback (most recent call last):
  File "./junk/1703784349604_7654/main.py", line 35, in <module>
    main ( )
  File "./junk/1703784349604_7654/main.py", line 27, in main
    dp [ check ( dp , a [ i ] ) ] = a [ i ]
IndexError: list index out of range
out1,out2  30


-------------------------------------


---> lineNum: 878
---> probID: aizu_p02317_A
---> inputs:
5
5
1
3
2
4
---> outputs:
3

import sys
def check ( dp , a ) :
    start = 0
    end = len ( dp ) - 1
    while True :
        if dp [ start ] >= a :
            return start
        elif dp [ end ] <= a :
            return end
        else :
            if start + 1 == end :
                return end
            else :
                mid = ( start + end ) // 2
                if dp [ mid ] == a :
                    return mid
                elif dp [ mid ] > a :
                    end = mid
                else :
                    start = mid
def main ( ) :
    n = int ( input ( ) )
    a = [ int ( x ) for x in input ( ) . split ( ) ]
    dp = [ 1000000001 ] * n
    dp [ 0 ] = a [ 0 ]
    for i in range ( 1 , n ) :
        dp [ check ( dp , a [ i ] ) ] = a [ i ]
    for i in range ( n ) :
        if dp [ i ] > 1000000000 :
            print ( i )
            break
        if i == n - 1 :
            print ( n )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 879
---> probID: codeforces_1313_A
---> inputs:
7
1 2 1
0 0 0
9 1 7
2 2 3
2 3 2
3 2 2
4 4 4
---> outputs:
3
0
4
5
5
5
7

import sys
test = int ( input ( ) )
for i in range ( test ) :
    a , b , c = map ( int , input ( ) . split ( ) )
    if a == 0 and b == 0 and c == 0 :
        print ( 0 )
    else :
        if b > c and b > a :
            k = a
            a = b
            b = k
        if c > b and c > a :
            k = a
            a = c
            c = k
        res = 0
        if a >= 1 :
            a -= 1
            res += 1
        if b >= 1 :
            b -= 1
            res += 1
        if c >= 1 :
            c -= 1
            res += 1
        if a >= 1 and b >= 1 :
            a -= 1
            b -= 1
            res += 1
        if a >= 1 and c >= 1 :
            a -= 1
            c -= 1
            res += 1
        if c >= 1 and b >= 1 :
            c -= 1
            b -= 1
            res += 1
        if a >= 1 and b >= 1 and c >= 1 :
            res += 1
        print ( res )


---> console_out:
3
0
4
5
5
5
7
 
MATCHED!! :D
 50%|█████     | 879/1746 [11:04<01:25, 10.08it/s]Traceback (most recent call last):
  File "./junk/1703784349733_3593/main.py", line 11, in <module>
    dist [ i ] = abs ( arr [ i ] - arr [ i + 1 ] )
IndexError: list index out of range
out1,out2  30


-------------------------------------


---> lineNum: 880
---> probID: codeforces_788_A
---> inputs:
5
1 4 2 3 1
---> outputs:
3

import sys
n = int ( sys . stdin . readline ( ) )
arr = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
dist = [ 0 ] * n
finalMax = 0
for start in range ( 1 , 3 ) :
    maxVal = 0
    sumVal = 0
    add = True
    for i in range ( start , n ) :
        dist [ i ] = abs ( arr [ i ] - arr [ i + 1 ] )
        if add :
            sumVal += dist [ i ]
            maxVal = max ( sumVal , maxVal )
            add = False
        else :
            sumVal -= dist [ i ]
            add = True
        if sumVal < 0 :
            sumVal = 0
            add = True
    finalMax = max ( maxVal , finalMax )
print ( finalMax )


---> console_out:
 
DIDN'T MATCH!! :(
 50%|█████     | 879/1746 [11:20<01:25, 10.08it/s]out1,out2 timeoutencounteredpy 90


-------------------------------------


---> lineNum: 881
---> probID: geeksforgeeks_910_A
---> inputs:

---> outputs:
9


import queue
def maximumXor ( arr , n ) :
    sForward = queue . LifoQueue ( )
    sBackward = queue . LifoQueue ( )
    ans = - 1
    for i in range ( n ) :
        while not sForward . empty ( ) and arr [ i ] < arr [ sForward . get ( ) ] :
            ans = max ( ans , arr [ i ] ^ arr [ sForward . get ( ) ] )
        sForward . put ( i )
        while not sBackward . empty ( ) and arr [ n - i - 1 ] < arr [ sBackward . get ( ) ] :
            ans = max ( ans , arr [ n - i - 1 ] ^ arr [ sBackward . get ( ) ] )
        sBackward . put ( n - i - 1 )
    return ans
arr = [ 8 , 1 , 2 ]
n = len ( arr )
print ( maximumXor ( arr , n ) )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 50%|█████     | 881/1746 [11:44<1:27:43,  6.09s/it]

-------------------------------------


---> lineNum: 882
---> probID: geeksforgeeks_1247_A
---> inputs:

---> outputs:
9F1

import math
def decToHexa ( n ) :
    hexaDeciNum = [ '' ] * 100
    i = 0
    while n != 0 :
        temp = 0
        temp = n % 16
        if temp < 10 :
            hexaDeciNum [ i ] = chr ( temp + 48 )
            i += 1
        else :
            hexaDeciNum [ i ] = chr ( temp + 55 )
            i += 1
        n = math . floor ( n / 16 )
    for j in range ( i - 1 , - 1 , - 1 ) :
        print ( hexaDeciNum [ j ] , end = '' )
n = 2545
decToHexa ( n )


---> console_out:
9F1 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784389904_2896/main.py", line 17, in <module>
    m = Main ( input ( ) . split ( ) )
  File "./junk/1703784389904_2896/main.py", line 4, in __init__
    self . n = int ( sc . next ( ) )
AttributeError: 'list' object has no attribute 'next'
out1,out2  40


-------------------------------------


---> lineNum: 883
---> probID: atcoder_ABC072_C
---> inputs:
7
3 1 4 1 5 9 2
---> outputs:
4

import collections
class Main :
    def __init__ ( self , sc ) :
        self . n = int ( sc . next ( ) )
        self . map = collections . defaultdict ( int )
        for i in range ( - 1 , int ( 1.0e+5 ) + 2 ) :
            self . map [ i ] = 0
        for i in range ( self . n ) :
            a = int ( sc . next ( ) )
            self . map [ a ] += 1
    def solve ( self ) :
        max_val = float ( '-inf' )
        for x in range ( int ( 1.0e+5 ) + 2 ) :
            max_val = max ( max_val , self . map [ x - 1 ] + self . map [ x ] + self . map [ x + 1 ] )
        print ( max_val )
if __name__ == '__main__' :
    m = Main ( input ( ) . split ( ) )
    m . solve ( )


---> console_out:
 
DIDN'T MATCH!! :(
 51%|█████     | 883/1746 [11:44<1:01:32,  4.28s/it]

-------------------------------------


---> lineNum: 884
---> probID: aizu_p01118_A
---> inputs:
3 9
ABCDEFGHI
JKLMNOPQR
STUVWXYZ_
ICPC
5 11
___________
____A______
________M__
___________
_C_________
ACM
4 21
1_2_3_4_5_6_7_8_9_0_-
QqWwEeRrTtYyUuIiOoPp@
AaSsDdFfGgHhJjKkLl;_:
ZzXxCcVvBbNnMm,_._/__
ICPC2019,AsiaYokohamaRegional,QualificationRound
0 0
---> outputs:
28
23
493

import sys
class Loc :
    def __init__ ( self , i , j ) :
        self . i = i
        self . j = j
for line in sys . stdin :
    R , C = map ( int , line . split ( ) )
    if R == 0 and C == 0 :
        break
    hm = { }
    for i in range ( R ) :
        row = input ( ) . strip ( )
        for j in range ( C ) :
            c = row [ j ]
            if c == '_' :
                continue
            hm [ c ] = Loc ( i , j )
    str = input ( ) . strip ( )
    iPos = 0
    jPos = 0
    count = len ( str )
    for i in range ( len ( str ) ) :
        loc = hm [ str [ i ] ]
        count += abs ( iPos - loc . i ) + abs ( jPos - loc . j )
        iPos = loc . i
        jPos = loc . j
    print ( count )


---> console_out:
28
23
493
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784390031_9143/main.py", line 14, in <module>
    m . run ( )
  File "./junk/1703784390031_9143/main.py", line 10, in run
    a , b = map ( int , self . sc . readline ( ) . strip ( ) . split ( ) )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2  20


-------------------------------------


---> lineNum: 885
---> probID: atcoder_ABC112_A
---> inputs:
2
1
1
---> outputs:
2

import sys
class Main :
    def __init__ ( self ) :
        self . sc = sys . stdin
    def run ( self ) :
        n = int ( self . sc . readline ( ) . strip ( ) )
        if n == 1 :
            print ( "Hello World" )
        else :
            a , b = map ( int , self . sc . readline ( ) . strip ( ) . split ( ) )
            print ( a + b )
if __name__ == "__main__" :
    m = Main ( )
    m . run ( )


---> console_out:
 
DIDN'T MATCH!! :(
 51%|█████     | 885/1746 [11:44<43:17,  3.02s/it]  

-------------------------------------


---> lineNum: 886
---> probID: geeksforgeeks_375_A
---> inputs:

---> outputs:
564


def extractMaximum ( str ) :
    num = 0
    res = 0
    for i in range ( len ( str ) ) :
        if str [ i ] . isdigit ( ) :
            num = num * 10 + int ( str [ i ] )
        else :
            res = max ( res , num )
            num = 0
    return max ( res , num )
if __name__ == '__main__' :
    str = "100klh564abc365bg"
    print ( extractMaximum ( str ) )


---> console_out:
564
 
MATCHED!! :D


-------------------------------------


---> lineNum: 887
---> probID: geeksforgeeks_3204_A
---> inputs:

---> outputs:
0   1   3


max = 50009
def find_Indices ( arr , n ) :
    sum = [ 0 ] * max
    index_1 , index_2 , index_3 , index = 0 , 0 , 0 , 0
    k , i = 0 , 1
    while i <= n :
        sum [ i ] = sum [ i - 1 ] + arr [ k ]
        k += 1
        i += 1
    ans = - 1e15
    index_1 = index_2 = index_3 = - 1
    for l in range ( n + 1 ) :
        index = 0
        vmin = 1e15
        for r in range ( l , n + 1 ) :
            if sum [ r ] < vmin :
                vmin = sum [ r ]
                index = r
            if sum [ l ] + sum [ r ] - vmin > ans :
                ans = sum [ l ] + sum [ r ] - vmin
                index_1 = l
                index_2 = index
                index_3 = r
    print ( index_1 , index_2 , index_3 )
arr = [ - 1 , 2 , 3 ]
n = len ( arr )
find_Indices ( arr , n )


---> console_out:
0 1 3
 
MATCHED!! :D
 51%|█████     | 887/1746 [11:45<30:32,  2.13s/it]

-------------------------------------


---> lineNum: 888
---> probID: geeksforgeeks_481_A
---> inputs:

---> outputs:
3 5 9 

def printElements ( arr , n ) :
    for i in range ( 1 , n - 1 ) :
        if arr [ i ] > arr [ i - 1 ] and arr [ i ] > arr [ i + 1 ] :
            print ( arr [ i ] , end = " " )
arr = [ 2 , 3 , 1 , 5 , 4 , 9 , 8 , 7 , 5 ]
n = len ( arr )
printElements ( arr , n )


---> console_out:
3 5 9  
MATCHED!! :D


-------------------------------------


---> lineNum: 889
---> probID: geeksforgeeks_1405_A
---> inputs:

---> outputs:
5


def valueofX ( ar , n ) :
    sum = 0
    for i in range ( n ) :
        sum += ar [ i ]
    if sum % n == 0 :
        return sum // n
    else :
        A = sum // n
        B = sum // n + 1
        ValueA = 0
        ValueB = 0
        for i in range ( n ) :
            ValueA += ( ar [ i ] - A ) * ( ar [ i ] - A )
            ValueB += ( ar [ i ] - B ) * ( ar [ i ] - B )
        if ValueA < ValueB :
            return A
        else :
            return B
n = 7
arr = [ 6 , 9 , 1 , 6 , 1 , 3 , 7 ]
print ( valueofX ( arr , n ) )


---> console_out:
5
 
MATCHED!! :D
 51%|█████     | 889/1746 [11:45<21:36,  1.51s/it]Traceback (most recent call last):
  File "./junk/1703784390383_3245/main.py", line 8, in <module>
    temp = bin ( int ( input ( ) ) ) [ 2 : ]
ValueError: invalid literal for int() with base 10: '18 9 21'
out1,out2  17018010103900020


-------------------------------------


---> lineNum: 890
---> probID: codeforces_1625_A
---> inputs:
7
3 5
18 9 21
3 5
18 18 18
1 1
1
5 30
1 2 3 4 5
6 10
99 35 85 46 78 55
2 1
0 1
8 8
5 16 42 15 83 65 78 42
---> outputs:
17
18
1
1
39
0
2

import sys
t = int ( input ( ) )
for i in range ( t ) :
    n , l = map ( int , input ( ) . split ( ) )
    s = ""
    arr = [ 0 ] * l
    for j in range ( n ) :
        temp = bin ( int ( input ( ) ) ) [ 2 : ]
        while len ( temp ) < l :
            temp = '0' + temp
        for k in range ( l ) :
            if k < len ( temp ) and temp [ k ] == '1' :
                arr [ k ] += 1
    for j in range ( l ) :
        if n - arr [ j ] >= arr [ j ] :
            s += '0'
        else :
            s += '1'
    print ( int ( s , 2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 891
---> probID: atcoder_ABC066_B
---> inputs:
abaababaab
---> outputs:
6

import sys
s = input ( )
sL = len ( s )
sT = s
for i in range ( sL // 2 ) :
    sL -= 2
    sT = sT [ : sL ]
    if sT [ : sL // 2 ] == sT [ sL // 2 : ] :
        print ( sL )
        sys . exit ( )


---> console_out:
6
 
MATCHED!! :D
 51%|█████     | 891/1746 [11:45<15:21,  1.08s/it]

-------------------------------------


---> lineNum: 892
---> probID: geeksforgeeks_2582_A
---> inputs:

---> outputs:
55


import math
def findNth ( n ) :
    count = 0
    curr = 19
    while True :
        sum = 0
        x = curr
        while x > 0 :
            sum += x % 10
            x = math . floor ( x / 10 )
        if sum == 10 :
            count += 1
        if count == n :
            return curr
        curr += 9
print ( findNth ( 5 ) )


---> console_out:
55
 
MATCHED!! :D


-------------------------------------


---> lineNum: 893
---> probID: geeksforgeeks_2581_A
---> inputs:

---> outputs:
55


import math
def findNth ( n ) :
    count = 0
    curr = 1
    while True :
        sum = 0
        x = curr
        while x > 0 :
            sum = sum + x % 10
            x = x // 10
        if sum == 10 :
            count = count + 1
        if count == n :
            return curr
        curr = curr + 1
print ( findNth ( 5 ) )


---> console_out:
55
 
MATCHED!! :D
 51%|█████     | 893/1746 [11:45<11:00,  1.29it/s]

-------------------------------------


---> lineNum: 894
---> probID: geeksforgeeks_1113_A
---> inputs:

---> outputs:
3


def countNumber ( N , S ) :
    countElements = 0
    currSum = 0
    while currSum <= S :
        currSum += N
        N -= 1
        countElements += 1
    return countElements
if __name__ == '__main__' :
    N = 5
    S = 11
    count = countNumber ( N , S )
    print ( count )


---> console_out:
3
 
MATCHED!! :D
out1,out2 no yes


-------------------------------------


---> lineNum: 895
---> probID: geeksforgeeks_2822_A
---> inputs:

---> outputs:
Yes


import numpy as np
def strmatch ( str , pattern , n , m ) :
    if m == 0 :
        return n == 0
    lookup = np . zeros ( ( n + 1 , m + 1 ) , dtype = bool )
    lookup [ 0 ] [ 0 ] = True
    for i in range ( n + 1 ) :
        lookup [ i ] [ 0 ] = False
    for j in range ( 1 , m + 1 ) :
        if pattern [ j - 1 ] == '*' :
            lookup [ 0 ] [ j ] = lookup [ 0 ] [ j - 1 ]
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , m + 1 ) :
            if pattern [ j - 1 ] == '*' :
                lookup [ i ] [ j ] = lookup [ i ] [ j - 1 ] or lookup [ i - 1 ] [ j ]
            elif pattern [ j - 1 ] == '?' or str [ i - 1 ] == pattern [ j - 1 ] :
                lookup [ i ] [ j ] = lookup [ i - 1 ] [ j - 1 ]
            else :
                lookup [ i ] [ j ] = False
    return lookup [ n ] [ m ]
if __name__ == '__main__' :
    str = "baaabab"
    pattern = "*****ba*****ab"
    if strmatch ( str , pattern , len ( str ) , len ( pattern ) ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
No
 
DIDN'T MATCH!! :(
 51%|█████▏    | 895/1746 [11:45<08:26,  1.68it/s]

-------------------------------------


---> lineNum: 896
---> probID: aizu_p01171_A
---> inputs:
10 15
30 20
0 0
---> outputs:
a
b

import sys
from collections import deque
from bisect import bisect_left , bisect_right
def main ( ) :
    p = [ True ] * 1000001
    p [ 0 ] = p [ 1 ] = False
    for i in range ( 2 , 1000001 ) :
        if p [ i ] :
            for j in range ( i + i , 1000001 , i ) :
                p [ j ] = False
    while True :
        a , b = map ( int , input ( ) . split ( ) )
        if a == b == 0 :
            break
        sa = set ( )
        sb = set ( )
        k = 2
        while a > 1 :
            if p [ k ] and a % k == 0 :
                a //= k
                sa . add ( k )
            else :
                k += 1
        k = 2
        while b > 1 :
            if p [ k ] and b % k == 0 :
                b //= k
                sb . add ( k )
            else :
                k += 1
        pa = max ( sa )
        sa . remove ( pa )
        pb = max ( sb )
        sb . remove ( pb )
        for x in sa :
            pa -= x
        for x in sb :
            pb -= x
        if pa > pb :
            print ( "a" )
        else :
            print ( "b" )
if __name__ == "__main__" :
    main ( )


---> console_out:
a
b
 
MATCHED!! :D
out1,out2 110 110


-------------------------------------


---> lineNum: 897
---> probID: geeksforgeeks_4378_A
---> inputs:

---> outputs:
11.0


import math
def nCr ( n , r ) :
    fac = [ 1 ] * 100
    for i in range ( 1 , n + 1 ) :
        fac [ i ] = fac [ i - 1 ] * i
    ans = fac [ n ] // ( fac [ n - r ] * fac [ r ] )
    return ans
n = 3
k = 3
ans = nCr ( n + k - 1 , k ) + nCr ( k - 1 , n - 1 )
print ( ans )


---> console_out:
11
 
MATCHED!! :D
 51%|█████▏    | 897/1746 [11:46<06:54,  2.05it/s]  File "./junk/1703784391475_8050/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  11060


-------------------------------------


---> lineNum: 898
---> probID: atcoder_ABC094_D
---> inputs:
5
6 9 4 2 11
---> outputs:
11 6

import java . util . Arrays
import java . util . Scanner
def main ( ) :
    sc = Scanner ( System . in )
    n = sc . nextInt ( )
    a = [ 0 ] * n
    for i in range ( n ) :
        a [ i ] = sc . nextInt ( )
    Arrays . sort ( a )
    min_val = float ( 'inf' )
    ans = 0
    for i in range ( n - 1 ) :
        sa = abs ( a [ n - 1 ] - a [ i ] * 2 )
        if sa < min_val :
            min_val = sa
            ans = a [ i ]
    print ( a [ n - 1 ] , ans )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 51%|█████▏    | 898/1746 [11:47<08:58,  1.58it/s]

-------------------------------------


---> lineNum: 899
---> probID: geeksforgeeks_918_A
---> inputs:

---> outputs:
5


import math
def gcd ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )
def powGCD ( a , n , b ) :
    for i in range ( n ) :
        a = a * a
    return gcd ( a , b )
a = 10
b = 5
n = 2
print ( powGCD ( a , n , b ) )


---> console_out:
5
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784392861_8421/main.py", line 14, in <module>
    B [ C [ A [ i ] ] - 1 ] = A [ i ]
IndexError: list assignment index out of range
out1,out2  00102020303050


-------------------------------------


---> lineNum: 900
---> probID: aizu_p02275_A
---> inputs:
7
2 5 1 3 2 3 0
---> outputs:
0 1 2 2 3 3 5

import sys
n = 0
A = [ ]
B = [ ]
C = [ 0 ] * 10000
sb = ""
n = int ( input ( ) )
A = list ( map ( int , input ( ) . split ( ) ) )
for i in range ( n ) :
    C [ A [ i ] ] += 1
for i in range ( 1 , 10000 ) :
    C [ i ] = C [ i - 1 ] + C [ i ]
for i in range ( n - 1 , - 1 , - 1 ) :
    B [ C [ A [ i ] ] - 1 ] = A [ i ]
    C [ A [ i ] ] -= 1
for i in range ( n - 1 ) :
    sb += str ( B [ i ] ) + " "
sb += str ( B [ n - 1 ] )
print ( sb )


---> console_out:
 
DIDN'T MATCH!! :(
 52%|█████▏    | 900/1746 [11:47<06:22,  2.21it/s]

-------------------------------------


---> lineNum: 901
---> probID: codeforces_1060_A
---> inputs:
11
00000000008
---> outputs:
1

import sys
n = int ( input ( ) )
s = input ( )
count = 0
for i in range ( n ) :
    if s [ i ] == '8' :
        count += 1
print ( min ( count , n // 11 ) )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 902
---> probID: geeksforgeeks_1813_A
---> inputs:

---> outputs:
3


def sumOfDigit ( n , b ) :
    unitDigit , sum = 0 , 0
    while n > 0 :
        unitDigit = n % b
        sum += unitDigit
        n = n // b
    return sum
if __name__ == '__main__' :
    n = 50
    b = 2
    print ( sumOfDigit ( n , b ) )


---> console_out:
3
 
MATCHED!! :D
 52%|█████▏    | 902/1746 [11:47<04:36,  3.06it/s]

-------------------------------------


---> lineNum: 903
---> probID: geeksforgeeks_157_A
---> inputs:

---> outputs:
5555555550

import math
def printLargestDivisible ( n , a ) :
    c0 = 0
    c5 = 0
    for i in range ( n ) :
        if a [ i ] == 0 :
            c0 += 1
        else :
            c5 += 1
    c5 = math . floor ( c5 / 9 ) * 9
    if c0 == 0 :
        print ( - 1 )
    elif c5 == 0 :
        print ( 0 )
    else :
        for i in range ( c5 ) :
            print ( 5 , end = '' )
        for i in range ( c0 ) :
            print ( 0 , end = '' )
a = [ 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 0 , 5 , 5 ]
n = len ( a )
printLargestDivisible ( n , a )


---> console_out:
5555555550 
MATCHED!! :D


-------------------------------------


---> lineNum: 904
---> probID: geeksforgeeks_2209_A
---> inputs:

---> outputs:
5


import sys
def countWays ( n ) :
    counter = 0
    for i in range ( 1 , n ) :
        for j in range ( i , n ) :
            for k in range ( j , n ) :
                for l in range ( k , n ) :
                    if i + j + k + l == n :
                        counter += 1
    return counter
if __name__ == "__main__" :
    n = 8
    print ( countWays ( n ) )


---> console_out:
5
 
MATCHED!! :D
 52%|█████▏    | 904/1746 [11:48<03:24,  4.12it/s]

-------------------------------------


---> lineNum: 905
---> probID: geeksforgeeks_2060_A
---> inputs:

---> outputs:
40 min


import math
def numberOfMinutes ( S , S1 ) :
    Min = 0
    Min = int ( ( ( S - S1 ) / math . floor ( S ) ) * 60 )
    return Min
S = 30
S1 = 10
print ( str ( numberOfMinutes ( S , S1 ) ) + " min" )


---> console_out:
40 min
 
MATCHED!! :D


-------------------------------------


---> lineNum: 906
---> probID: codeforces_1110_B
---> inputs:
4 100 2
20 30 75 80
---> outputs:
17

import sys
n , m , k = map ( int , input ( ) . split ( ) )
b = list ( map ( int , input ( ) . split ( ) ) )
if n < k :
    print ( n )
    sys . exit ( )
d = [ b [ i + 1 ] - b [ i ] - 1 for i in range ( n - 1 ) ]
d . sort ( )
sum = b [ - 1 ] - b [ 0 ] + 1
for i in range ( len ( d ) - 1 , len ( d ) - 1 - ( k - 1 ) , - 1 ) :
    sum -= d [ i ]
print ( sum )


---> console_out:
17
 
MATCHED!! :D
 52%|█████▏    | 906/1746 [11:48<02:36,  5.36it/s]Traceback (most recent call last):
  File "./junk/1703784393351_7039/main.py", line 5, in <module>
    print ( onesComplement ( n ) )
  File "./junk/1703784393351_7039/main.py", line 2, in onesComplement
    number_of_bits = int ( math . floor ( math . log ( n ) / math . log ( 2 ) ) ) + 1
NameError: name 'math' is not defined
out1,out2  90


-------------------------------------


---> lineNum: 907
---> probID: geeksforgeeks_1816_A
---> inputs:

---> outputs:
9


def onesComplement ( n ) :
    number_of_bits = int ( math . floor ( math . log ( n ) / math . log ( 2 ) ) ) + 1
    return ( ( 1 << number_of_bits ) - 1 ) ^ n
n = 22
print ( onesComplement ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 908
---> probID: codeforces_1472_A
---> inputs:
5
2 2 3
3 3 2
5 10 2
11 13 1
1 4 4
---> outputs:
YES
NO
YES
YES
YES

import sys
for line in sys . stdin :
    t = int ( line )
    for i in range ( t ) :
        w , h , n = map ( int , input ( ) . split ( ) )
        sheet = 1
        while w % 2 == 0 :
            w //= 2
            sheet *= 2
        while h % 2 == 0 :
            h //= 2
            sheet *= 2
        if sheet >= n :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
YES
NO
YES
YES
YES
 
MATCHED!! :D
 52%|█████▏    | 908/1746 [11:48<02:08,  6.54it/s]

-------------------------------------


---> lineNum: 909
---> probID: geeksforgeeks_4194_A
---> inputs:

---> outputs:
( 2 , 2 )


def findPoint ( x1 , y1 , x2 , y2 ) :
    print ( "(" + str ( int ( 2 * x2 - x1 ) ) + "," + str ( int ( 2 * y2 - y1 ) ) + " )" )
if __name__ == '__main__' :
    x1 , y1 , x2 , y2 = 0 , 0 , 1 , 1
    findPoint ( x1 , y1 , x2 , y2 )


---> console_out:
(2,2 )
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784393569_2429/main.py", line 2, in <module>
    n , i = map ( int , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2  20301030


-------------------------------------


---> lineNum: 910
---> probID: aizu_p00479_A
---> inputs:
11
4
5 2
9 7
4 4
3 9
---> outputs:
2
3
1
3

import sys
n , i = map ( int , input ( ) . split ( ) )
m = n // 2
for _ in range ( i ) :
    a , b = map ( int , input ( ) . split ( ) )
    a = a - m if a > m and n % 2 != 0 else a
    b = b - m if b > m and n % 2 != 0 else b
    print ( ( m - 1 - max ( abs ( a ) , abs ( b ) ) ) % 3 + 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 52%|█████▏    | 910/1746 [11:48<01:45,  7.95it/s]

-------------------------------------


---> lineNum: 911
---> probID: geeksforgeeks_388_A
---> inputs:

---> outputs:
X = 0 ,  Y = 1


import sys
def alter ( x , y ) :
    while True :
        if x == 0 or y == 0 :
            break
        if x >= 2 * y :
            x = x % ( 2 * y )
        elif y >= 2 * x :
            y = y % ( 2 * x )
        else :
            break
    print ( "X = " + str ( x ) + ", " + "Y = " + str ( y ) )
def main ( ) :
    x = 12
    y = 5
    alter ( x , y )
if __name__ == "__main__" :
    main ( )


---> console_out:
X = 0, Y = 1
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784393717_1178/main.py", line 6, in <module>
    swap ( v , random . randint ( 0 , i - 1 ) , i )
NameError: name 'swap' is not defined
out1,out2  40


-------------------------------------


---> lineNum: 912
---> probID: aizu_p00969_A
---> inputs:
6
0 1 3 5 6 9
---> outputs:
4

import random
n = int ( input ( ) )
v = list ( map ( int , input ( ) . split ( ) ) )
set = set ( v )
for i in range ( 1 , n ) :
    swap ( v , random . randint ( 0 , i - 1 ) , i )
v . sort ( )
ans = 2
for i in range ( n ) :
    for j in range ( i + 1 , n ) :
        d = v [ j ] - v [ i ]
        if v [ i ] - d in set :
            continue
        cnt , cur = 2 , v [ j ]
        while cur + d in set :
            cur += d
            cnt += 1
        ans = max ( ans , cnt )
print ( ans )
def swap ( a , x , y ) :
    t = a [ x ]
    a [ x ] = a [ y ]
    a [ y ] = t


---> console_out:
 
DIDN'T MATCH!! :(
 52%|█████▏    | 912/1746 [11:48<01:32,  9.04it/s]out1,out2 1010102010201020 1010106030602050


-------------------------------------


---> lineNum: 913
---> probID: codeforces_1569_A
---> inputs:
4
1
a
6
abbaba
6
abbaba
9
babbabbaa
---> outputs:
['-1 -1\n1 6\n3 6\n2 5', '-1 -1\n1 2\n1 2\n1 2\n']

import sys
flag = False
finals = 0
for line in sys . stdin :
    cases = int ( line )
    for i in range ( cases ) :
        flag = False
        letters = int ( sys . stdin . readline ( ) )
        ab = sys . stdin . readline ( ) . strip ( )
        for j in range ( 1 , letters ) :
            if ab [ j - 1 ] != ab [ j ] :
                flag = True
                print ( j , j + 1 )
                break
        if not flag :
            print ( "-1 -1" )


---> console_out:
-1 -1
1 2
1 2
1 2
 
MATCHED!! :D
out1,out2 8489908390 2526661580


-------------------------------------


---> lineNum: 914
---> probID: geeksforgeeks_4637_A
---> inputs:

---> outputs:
252666158


mod = 1000000007
inv2 = 500000004
def modulo ( num ) :
    res = 0
    for i in range ( len ( num ) ) :
        res = ( res * 10 + int ( num [ i ] ) - ord ( '0' ) ) % mod
    return res
def findSum ( L , R ) :
    a = modulo ( L )
    b = modulo ( R )
    l = ( ( a * ( a - 1 ) ) % mod * inv2 ) % mod
    r = ( ( b * ( b + 1 ) ) % mod * inv2 ) % mod
    ret = ( r % mod - l % mod )
    if ret < 0 :
        ret = ret + mod
    else :
        ret = ret % mod
    return ret
L = "88949273204"
R = "98429729474298592"
print ( findSum ( L , R ) )


---> console_out:
848990839
 
DIDN'T MATCH!! :(
 52%|█████▏    | 914/1746 [11:48<01:20, 10.39it/s]

-------------------------------------


---> lineNum: 915
---> probID: geeksforgeeks_4459_A
---> inputs:

---> outputs:
3  1  4  6  2  8  5  9  10  7  

def unsort ( l , r , a , k ) :
    if k < 1 or l + 1 == r :
        return
    k -= 2
    mid = ( l + r ) // 2
    temp = a [ mid - 1 ]
    a [ mid - 1 ] = a [ mid ]
    a [ mid ] = temp
    unsort ( l , mid , a , k )
    unsort ( mid , r , a , k )
def arrayWithKCalls ( n , k ) :
    if k % 2 == 0 :
        print ( "NO SOLUTION" )
        return
    a = [ 0 ] * ( n + 1 )
    a [ 0 ] = 1
    for i in range ( 1 , n ) :
        a [ i ] = i + 1
    k -= 1
    unsort ( 0 , n , a , k )
    for i in range ( n ) :
        print ( a [ i ] , end = " " )
n , k = 10 , 17
arrayWithKCalls ( n , k )


---> console_out:
3 1 4 6 2 8 5 9 10 7  
MATCHED!! :D


-------------------------------------


---> lineNum: 916
---> probID: geeksforgeeks_3056_A
---> inputs:

---> outputs:
15.756968956847974


import math
def mean ( mid , freq , n ) :
    sum = 0
    freqSum = 0
    for i in range ( n ) :
        sum += mid [ i ] * freq [ i ]
        freqSum += freq [ i ]
    return sum / freqSum
def groupedSD ( lower_limit , upper_limit , freq , n ) :
    mid = [ 0 ] * n
    sum = 0
    freqSum = 0
    for i in range ( n ) :
        mid [ i ] = ( lower_limit [ i ] + upper_limit [ i ] ) / 2
        sum += freq [ i ] * mid [ i ] * mid [ i ]
        freqSum += freq [ i ]
    sd = math . sqrt ( ( sum - freqSum * mean ( mid , freq , n ) * mean ( mid , freq , n ) ) / ( freqSum - 1 ) )
    return sd
lower_limit = [ 50 , 61 , 71 , 86 , 96 ]
upper_limit = [ 60 , 70 , 85 , 95 , 100 ]
freq = [ 9 , 7 , 9 , 12 , 8 ]
n = len ( lower_limit )
print ( groupedSD ( lower_limit , upper_limit , freq , n ) )


---> console_out:
15.756968956847974
 
MATCHED!! :D
 52%|█████▏    | 916/1746 [11:48<01:11, 11.54it/s]

-------------------------------------


---> lineNum: 917
---> probID: geeksforgeeks_886_A
---> inputs:

---> outputs:
2


import math
def gcd ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )
a = 2
b = 4
print ( gcd ( a , b ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 918
---> probID: geeksforgeeks_2458_A
---> inputs:

---> outputs:
160


import math
def rectanglearea ( a , b ) :
    if a < 0 or b < 0 :
        return - 1
    return 2 * a * b
a = 10
b = 8
print ( rectanglearea ( a , b ) )


---> console_out:
160
 
MATCHED!! :D
 53%|█████▎    | 918/1746 [11:49<01:07, 12.25it/s]

-------------------------------------


---> lineNum: 919
---> probID: codeforces_397_B
---> inputs:
2
5 2 3
6 4 5
---> outputs:
Yes
No

import sys
MOD = int ( 1e9 + 7 )
def main ( ) :
    t = int ( input ( ) )
    for _ in range ( t ) :
        n , a , b = map ( int , input ( ) . split ( ) )
        if n < a :
            print ( "No" )
            continue
        if a == b :
            if n % a == 0 :
                print ( "Yes" )
            else :
                print ( "No" )
            continue
        x = b // ( b - a )
        if n > x * a :
            print ( "Yes" )
            continue
        low = 1
        high = x + 1
        ans = 1
        while low <= high :
            mid = ( low + high ) // 2
            if mid * a < n :
                low = mid + 1
            else :
                ans = mid
                high = mid - 1
        if n > ( ans - 1 ) * b and n < ans * a :
            print ( "No" )
        else :
            print ( "Yes" )
if __name__ == "__main__" :
    main ( )


---> console_out:
Yes
No
 
MATCHED!! :D


-------------------------------------


---> lineNum: 920
---> probID: geeksforgeeks_3302_A
---> inputs:

---> outputs:
5


def getsum ( x ) :
    return ( x * ( x + 1 ) ) // 2
def countJumps ( n ) :
    n = abs ( n )
    ans = 0
    while getsum ( ans ) < n or ( ( getsum ( ans ) - n ) & 1 ) > 0 :
        ans += 1
    return ans
if __name__ == '__main__' :
    n = 9
    print ( countJumps ( n ) )


---> console_out:
5
 
MATCHED!! :D
 53%|█████▎    | 920/1746 [11:49<01:05, 12.67it/s]out1,out2 40 30


-------------------------------------


---> lineNum: 921
---> probID: geeksforgeeks_3538_A
---> inputs:

---> outputs:
3


MAX = 10
def lcs ( dp , arr1 , n , arr2 , m , k ) :
    if k < 0 :
        return - 10000000
    if n < 0 or m < 0 :
        return 0
    ans = dp [ n ] [ m ] [ k ]
    if ans != - 1 :
        return ans
    try :
        ans = max ( lcs ( dp , arr1 , n - 1 , arr2 , m , k ) , lcs ( dp , arr1 , n , arr2 , m - 1 , k ) )
        if arr1 [ n - 1 ] == arr2 [ m - 1 ] :
            ans = max ( ans , 1 + lcs ( dp , arr1 , n - 1 , arr2 , m - 1 , k ) )
        ans = max ( ans , 1 + lcs ( dp , arr1 , n - 1 , arr2 , m - 1 , k - 1 ) )
    except :
        pass
    return ans
if __name__ == '__main__' :
    k = 1
    arr1 = [ 1 , 2 , 3 , 4 , 5 ]
    arr2 = [ 5 , 3 , 1 , 4 , 2 ]
    n = len ( arr1 )
    m = len ( arr2 )
    dp = [ [ [ - 1 for _ in range ( MAX ) ] for _ in range ( MAX ) ] for _ in range ( MAX ) ]
    print ( lcs ( dp , arr1 , n , arr2 , m , k ) )


---> console_out:
4
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784394397_6254/main.py", line 3, in <module>
    N = float ( input ( ) )
ValueError: could not convert string to float: '3 75 91'
out1,out2  13108


-------------------------------------


---> lineNum: 922
---> probID: atcoder_AGC007_C
---> inputs:
3 75 91
---> outputs:
1310.833333333333258

import decimal
import math
N = float ( input ( ) )
d = float ( input ( ) )
x = float ( input ( ) )
ans = decimal . Decimal ( "0.0" )
while N > 0.5 :
    adnum = decimal . Decimal ( d + x * ( N - 0.5 ) )
    ans += adnum
    d = ( N + 1.0 ) * d / N + ( 5.0 * x ) / ( 2.0 * N )
    x = ( 1.0 + ( 2.0 / N ) ) * x
    N -= 1
format = "{:.20f}" . format ( ans )
print ( format )


---> console_out:
 
DIDN'T MATCH!! :(
 53%|█████▎    | 922/1746 [11:49<01:02, 13.16it/s]

-------------------------------------


---> lineNum: 923
---> probID: geeksforgeeks_5143_A
---> inputs:

---> outputs:
Prime number in reverse order
23 19 17 13 11 7 5 3 2 

import math
def reverseorder ( n ) :
    prime = [ True ] * ( n + 1 )
    for p in range ( 2 , int ( math . sqrt ( n ) ) + 1 ) :
        if prime [ p ] :
            for i in range ( p * 2 , n + 1 , p ) :
                prime [ i ] = False
    for i in range ( n , 1 , - 1 ) :
        if prime [ i ] :
            print ( i , end = " " )
N = 25
print ( "Prime number in reverse order" )
if N == 1 :
    print ( "No prime no exist in this range" )
else :
    reverseorder ( N )


---> console_out:
Prime number in reverse order
23 19 17 13 11 7 5 3 2  
MATCHED!! :D


-------------------------------------


---> lineNum: 924
---> probID: geeksforgeeks_4501_A
---> inputs:

---> outputs:
    *        *
   ***      ***
  *****    *****
 *******  *******
******************


import sys
def pattern ( min_stars , p_height ) :
    p_space = p_height - 1
    x = 1
    for i in range ( p_height ) :
        for j in range ( p_space , i , - 1 ) :
            sys . stdout . write ( " " )
        for k in range ( min_stars ) :
            sys . stdout . write ( "*" )
        for n in range ( p_height + p_height - 2 , x - 1 , - 1 ) :
            sys . stdout . write ( " " )
        for k in range ( min_stars ) :
            sys . stdout . write ( "*" )
        min_stars += 2
        x += 2
        print ( )
if __name__ == "__main__" :
    min_stars = 1
    p_height = 5
    pattern ( min_stars , p_height )


---> console_out:
    *        *
   ***      ***
  *****    *****
 *******  *******
******************
 
MATCHED!! :D
 53%|█████▎    | 924/1746 [11:49<01:02, 13.21it/s]

-------------------------------------


---> lineNum: 925
---> probID: codeforces_629_B
---> inputs:
4
M 151 307
F 343 352
F 117 145
M 24 128
---> outputs:
2

import sys
n = int ( input ( ) )
FfriendPerDay = [ 0 ] * 367
MfriendPerDay = [ 0 ] * 367
answer = 0
for i in range ( n ) :
    c , a , b = input ( ) . split ( )
    a = int ( a )
    b = int ( b )
    for j in range ( a , b + 1 ) :
        if c == 'M' :
            MfriendPerDay [ j ] += 1
        else :
            FfriendPerDay [ j ] += 1
        if MfriendPerDay [ j ] < FfriendPerDay [ j ] :
            if MfriendPerDay [ j ] > answer :
                answer = MfriendPerDay [ j ]
        else :
            if FfriendPerDay [ j ] > answer :
                answer = FfriendPerDay [ j ]
print ( answer * 2 )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 926
---> probID: geeksforgeeks_3694_A
---> inputs:

---> outputs:
22


import math
def distancesum ( x , y , n ) :
    sum = 0
    for i in range ( n ) :
        for j in range ( i + 1 , n ) :
            sum += ( abs ( x [ i ] - x [ j ] ) + abs ( y [ i ] - y [ j ] ) )
    return sum
x = [ - 1 , 1 , 3 , 2 ]
y = [ 5 , 6 , 5 , 3 ]
n = len ( x )
print ( distancesum ( x , y , n ) )


---> console_out:
22
 
MATCHED!! :D
 53%|█████▎    | 926/1746 [11:49<00:58, 13.91it/s]

-------------------------------------


---> lineNum: 927
---> probID: geeksforgeeks_351_A
---> inputs:

---> outputs:
10


import math
def fib ( n ) :
    phi = ( 1 + math . sqrt ( 5 ) ) / 2
    return int ( round ( math . pow ( phi , n ) / math . sqrt ( 5 ) ) )
def calculateSum ( l , r ) :
    sum = fib ( r + 2 ) - fib ( l + 1 )
    return sum
def sumFibonacci ( k ) :
    l = ( k * ( k - 1 ) ) / 2
    r = l + k
    sum = calculateSum ( l , r - 1 )
    return sum
if __name__ == '__main__' :
    k = 3
    print ( sumFibonacci ( k ) )


---> console_out:
10
 
MATCHED!! :D


-------------------------------------


---> lineNum: 928
---> probID: geeksforgeeks_2646_A
---> inputs:

---> outputs:
50


import math
def fib ( n ) :
    phi = ( 1 + math . sqrt ( 5 ) ) / 2
    return int ( round ( math . pow ( phi , n ) / math . sqrt ( 5 ) ) )
def calculateSum ( l , r ) :
    sum = 0
    for i in range ( l , r + 1 ) :
        sum += fib ( i )
    return sum
if __name__ == '__main__' :
    l , r = 4 , 8
    print ( calculateSum ( l , r ) )


---> console_out:
50
 
MATCHED!! :D
 53%|█████▎    | 928/1746 [11:49<00:56, 14.42it/s]Traceback (most recent call last):
  File "./junk/1703784394867_9553/main.py", line 9, in <module>
    print ( calculateSum ( l , r ) )
  File "./junk/1703784394867_9553/main.py", line 5, in calculateSum
    sum = fib ( r + 2 ) - fib ( l + 1 )
  File "./junk/1703784394867_9553/main.py", line 2, in fib
    phi = ( 1 + math . sqrt ( 5 ) ) / 2
NameError: name 'math' is not defined
out1,out2  500


-------------------------------------


---> lineNum: 929
---> probID: geeksforgeeks_2647_A
---> inputs:

---> outputs:
50


def fib ( n ) :
    phi = ( 1 + math . sqrt ( 5 ) ) / 2
    return int ( round ( math . pow ( phi , n ) / math . sqrt ( 5 ) ) )
def calculateSum ( l , r ) :
    sum = fib ( r + 2 ) - fib ( l + 1 )
    return sum
l = 4
r = 8
print ( calculateSum ( l , r ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 930
---> probID: codeforces_897_A
---> inputs:
3 1
ioi
1 1 i n
---> outputs:
noi

import sys
n , q = map ( int , input ( ) . split ( ) )
s = input ( ) . strip ( )
str = list ( s )
for i in range ( q ) :
    l , r , c1 , c2 = input ( ) . split ( )
    l , r = int ( l ) - 1 , int ( r ) - 1
    start , end = l , r
    while start <= end :
        if str [ start ] == c1 :
            str [ start ] = c2
        start += 1
print ( '' . join ( str ) )


---> console_out:
noi
 
MATCHED!! :D
 53%|█████▎    | 930/1746 [11:50<03:14,  4.19it/s]

-------------------------------------


---> lineNum: 931
---> probID: geeksforgeeks_2672_A
---> inputs:

---> outputs:
10


import math
def compareStrings ( str1 , str2 ) :
    i = 0
    while i < len ( str1 ) - 1 and str1 [ i ] == str2 [ i ] :
        i += 1
    if str1 [ i ] > str2 [ i ] :
        return - 1
    elif str1 [ i ] < str2 [ i ] :
        return 1
    else :
        return 0
def searchStr ( arr , str , first , last ) :
    if first > last :
        return - 1
    mid = math . floor ( ( last + first ) / 2 )
    if arr [ mid ] == "" :
        left = mid - 1
        right = mid + 1
        while True :
            if left < right and right > last :
                return - 1
            if right <= last and arr [ right ] != "" :
                mid = right
                break
            if left >= right and arr [ left ] != "" :
                mid = left
                break
            right += 1
            left -= 1
    if compareStrings ( str , arr [ mid ] ) == 0 :
        return mid
    elif compareStrings ( str , arr [ mid ] ) < 0 :
        return searchStr ( arr , str , mid + 1 , last )
    else :
        return searchStr ( arr , str , first , mid - 1 )
arr = [ "for" , "" , "" , "" , "geeks" , "ide" , "" , "practice" , "" , "" , "quiz" , "" , "" ]
str = "quiz"
n = len ( arr )
print ( searchStr ( arr , str , 0 , n - 1 ) )


---> console_out:
10
 
MATCHED!! :D


-------------------------------------


---> lineNum: 932
---> probID: codeforces_171_A
---> inputs:
3 14
---> outputs:
44

import sys
def getNum ( a , b ) :
    reverseB = 0
    while b > 0 :
        reverseB = reverseB * 10 + b % 10
        b //= 10
    return a + reverseB
if __name__ == "__main__" :
    a , b = map ( int , input ( ) . split ( ) )
    ans = getNum ( a , b )
    print ( ans )


---> console_out:
44
 
MATCHED!! :D
 53%|█████▎    | 932/1746 [11:51<02:36,  5.19it/s]Traceback (most recent call last):
  File "./junk/1703784396304_6166/main.py", line 2, in <module>
    x1 , y1 , x2 , y2 , x3 , y3 = map ( int , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 6, got 2)
out1,out2  30101010101010


-------------------------------------


---> lineNum: 933
---> probID: codeforces_749_B
---> inputs:
0 0
1 0
0 1
---> outputs:
3
1 -1
-1 1
1 1

import math
x1 , y1 , x2 , y2 , x3 , y3 = map ( int , input ( ) . split ( ) )
print ( "3" )
print ( ( x1 + x2 - x3 ) , ( y1 + y2 - y3 ) )
print ( ( x3 + x2 - x1 ) , ( y3 + y2 - y1 ) )
print ( ( x1 + x3 - x2 ) , ( y1 + y3 - y2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 934
---> probID: codeforces_1552_A
---> inputs:
4
3
lol
10
codeforces
5
aaaaa
4
dcba
---> outputs:
2
6
0
4

import sys
t = int ( input ( ) )
for _ in range ( t ) :
    n = int ( input ( ) )
    s = input ( )
    tmp = ""
    freq = [ 0 ] * 26
    for i in range ( n ) :
        freq [ ord ( s [ i ] ) - ord ( 'a' ) ] += 1
    for i in range ( 26 ) :
        tmp += chr ( i + ord ( 'a' ) ) * freq [ i ]
    count = 0
    for i in range ( n ) :
        if s [ i ] != tmp [ i ] :
            count += 1
    print ( count )


---> console_out:
2
6
0
4
 
MATCHED!! :D
 53%|█████▎    | 934/1746 [11:51<02:04,  6.51it/s]

-------------------------------------


---> lineNum: 935
---> probID: geeksforgeeks_2374_A
---> inputs:

---> outputs:
110


def sumAP ( n , d ) :
    n //= d
    return n * ( 1 + n ) * d // 2
def sumMultiples ( n ) :
    n -= 1
    return sumAP ( n , 2 ) + sumAP ( n , 5 ) - sumAP ( n , 10 )
if __name__ == '__main__' :
    n = 20
    print ( sumMultiples ( n ) )


---> console_out:
110
 
MATCHED!! :D


-------------------------------------


---> lineNum: 936
---> probID: aizu_p00238_A
---> inputs:
10
3
6 11
12 15
18 22
14
2
6 11
13 20
0
---> outputs:
OK
2

import sys
for line in sys . stdin :
    t = int ( line )
    while t > 0 :
        n = int ( input ( ) )
        s = 0
        f = 0
        sum = 0
        for i in range ( n ) :
            s , f = map ( int , input ( ) . split ( ) )
            sum += f - s
        if t <= sum :
            print ( "OK" )
        else :
            print ( t - sum )
        t = int ( input ( ) )


---> console_out:
OK
2
 
MATCHED!! :D
 54%|█████▎    | 936/1746 [11:51<01:42,  7.92it/s]

-------------------------------------


---> lineNum: 937
---> probID: geeksforgeeks_124_A
---> inputs:

---> outputs:
14 5 4 5 14 

def fact ( num ) :
    fact = 1
    while num > 1 :
        fact *= num
        num -= 1
    return fact
def catalan ( n ) :
    return fact ( 2 * n ) // ( fact ( n ) * fact ( n + 1 ) )
if __name__ == '__main__' :
    n = 5
    arr = [ 1 , 2 , 3 , 4 , 5 ]
    for k in range ( n ) :
        s = 0
        for i in range ( n ) :
            if arr [ i ] < arr [ k ] :
                s += 1
        catalan_leftBST = catalan ( s )
        catalan_rightBST = catalan ( n - s - 1 )
        totalBST = catalan_rightBST * catalan_leftBST
        print ( totalBST , end = ' ' )


---> console_out:
14 5 4 5 14  
MATCHED!! :D
  File "./junk/1703784396618_7504/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  yesyesyesno


-------------------------------------


---> lineNum: 938
---> probID: codeforces_1238_A
---> inputs:
4
100 98
42 32
1000000000000000000 1
41 40
---> outputs:
YES
YES
YES
NO

import java . util . Scanner
class ques :
    def main ( args ) :
        sc = Scanner ( System . in )
        n = sc . nextInt ( )
        for j in range ( n ) :
            a = sc . nextLong ( )
            b = sc . nextLong ( )
            if abs ( a - b ) == 1 :
                print ( "NO" )
            else :
                print ( "YES" )


---> console_out:
 
DIDN'T MATCH!! :(
 54%|█████▎    | 938/1746 [11:51<01:26,  9.30it/s]  File "./junk/1703784396682_4840/main.py", line 5
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  003010000000001000


-------------------------------------


---> lineNum: 939
---> probID: codeforces_1401_A
---> inputs:
6
4 0
5 8
0 1000000
0 0
1 0
1000000 1000000
---> outputs:
0
3
1000000
0
1
0

import java . util . Scanner
class Codechef :
    def main ( args : Array [ str ] ) :
        try :
            sc = Scanner ( System . in )
            t = sc . nextInt ( )
            while t > 0 :
                a = sc . nextLong ( )
                b = sc . nextLong ( )
                if a < b :
                    print ( b - a )
                else :
                    if a % 2 != b % 2 :
                        print ( 1 )
                    else :
                        print ( 0 )
                t -= 1
        except Exception as e :
            pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 940
---> probID: geeksforgeeks_2252_A
---> inputs:

---> outputs:
5


def countWays ( n , arr , length ) :
    count = [ 0 ] * ( n + 1 )
    count [ 0 ] = 1
    if n == 0 :
        return 1
    for i in range ( 1 , n + 1 ) :
        no_ways = 0
        for j in range ( length ) :
            if i - arr [ j ] >= 0 :
                no_ways += count [ i - arr [ j ] ]
        count [ i ] = no_ways
    return count [ n ]
if __name__ == '__main__' :
    arr = [ 1 , 3 , 5 ]
    length = len ( arr )
    n = 5
    print ( countWays ( n , arr , length ) )


---> console_out:
5
 
MATCHED!! :D
 54%|█████▍    | 940/1746 [11:51<01:17, 10.46it/s]  File "./junk/1703784396818_9482/main.py", line 7
    self . sc = Scanner ( System . in )
                                   ^
SyntaxError: invalid syntax
out1,out2  60na


-------------------------------------


---> lineNum: 941
---> probID: aizu_p00206_A
---> inputs:
10000
5000 3150
5000 5000
0 0
5000 1050
5000 3980
5000 210
5000 5000
5000 5000
0 0
5000 2100
5000 2100
5000 2100
29170
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 70831
0
---> outputs:
6
NA

from typing import List
from math import inf
from java . awt . geom import Line2D , Point2D
import java . util . Scanner
class Main :
    def __init__ ( self ) :
        self . sc = Scanner ( System . in )
    def doit ( self ) :
        while True :
            n = self . sc . nextInt ( )
            if n == 0 :
                break
            data = [ self . sc . nextInt ( ) - self . sc . nextInt ( ) for _ in range ( 12 ) ]
            sum_ = 0
            flg = False
            ans = - 1
            for i in range ( 12 ) :
                sum_ += data [ i ]
                if sum_ >= n :
                    ans = i + 1
                    flg = True
                    break
            if flg :
                print ( ans )
            else :
                print ( "NA" )
if __name__ == "__main__" :
    Main ( ) . doit ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 942
---> probID: codeforces_1272_A
---> inputs:
8
3 3 4
10 20 30
5 5 5
2 4 3
1 1000000000 1000000000
1 1000000000 999999999
3 2 5
3 2 6
---> outputs:
0
36
0
0
1999999994
1999999994
2
4

import sys
t = int ( input ( ) )
for i in range ( t ) :
    a , b , c = map ( int , input ( ) . split ( ) )
    if a == b and c == b :
        print ( 0 )
    else :
        sum = abs ( a - b ) + abs ( b - c ) + abs ( c - a )
        sum -= 4
        print ( max ( sum , 0 ) )


---> console_out:
0
36
0
0
1999999994
1999999994
2
4
 
MATCHED!! :D
 54%|█████▍    | 942/1746 [11:51<01:08, 11.69it/s]Traceback (most recent call last):
  File "./junk/1703784396942_9346/main.py", line 5, in <module>
    a = int ( sys . stdin . readline ( ) )
ValueError: invalid literal for int() with base 10: '5 6'
out1,out2  10


-------------------------------------


---> lineNum: 943
---> probID: codeforces_709_A
---> inputs:
2 7 10
5 6
---> outputs:
1

import sys
n , b , d = map ( int , sys . stdin . readline ( ) . split ( ) )
a , sum_ , count = 0 , 0 , 0
for i in range ( n ) :
    a = int ( sys . stdin . readline ( ) )
    if a <= b :
        sum_ += a
    if sum_ > d :
        sum_ = 0
        count += 1
print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 944
---> probID: geeksforgeeks_1543_A
---> inputs:

---> outputs:
Index: 5


class Main :
    @ staticmethod
    def binarySearch ( arr , low , high , key ) :
        if high < low :
            return - 1
        mid = ( low + high ) // 2
        if key == arr [ mid ] :
            return mid
        if key > arr [ mid ] :
            return Main . binarySearch ( arr , mid + 1 , high , key )
        return Main . binarySearch ( arr , low , mid - 1 , key )
    @ staticmethod
    def main ( args ) :
        arr = [ 5 , 6 , 7 , 8 , 9 , 10 ]
        n = len ( arr )
        key = 10
        print ( "Index: " + str ( Main . binarySearch ( arr , 0 , n , key ) ) )
Main . main ( None )


---> console_out:
Index: 5
 
MATCHED!! :D
 54%|█████▍    | 944/1746 [11:51<01:02, 12.78it/s]

-------------------------------------


---> lineNum: 945
---> probID: geeksforgeeks_1078_A
---> inputs:

---> outputs:
NO


def equal_xor_sum ( arr , n ) :
    Sum = 0
    Xor = 0
    for i in range ( n ) :
        Sum = Sum + arr [ i ]
        Xor = Xor ^ arr [ i ]
    if Sum == Xor :
        print ( "YES" )
    else :
        print ( "NO" )
arr = [ 6 , 3 , 7 , 10 ]
n = len ( arr )
equal_xor_sum ( arr , n )


---> console_out:
NO
 
MATCHED!! :D


-------------------------------------


---> lineNum: 946
---> probID: codeforces_796_B
---> inputs:
7 3 4
3 4 6
1 2
2 5
5 7
7 1
---> outputs:
1

import sys
x = [ False ] * 10000001
def main ( ) :
    n , m , k = map ( int , sys . stdin . readline ( ) . split ( ) )
    global x
    for i in map ( int , sys . stdin . readline ( ) . split ( ) ) :
        x [ i ] = True
    pos = 1
    while k > 0 :
        if x [ pos ] :
            print ( pos )
            return
        a , b = map ( int , sys . stdin . readline ( ) . split ( ) )
        pos = b if pos == a else a if pos == b else pos
        k -= 1
    print ( pos )
if __name__ == '__main__' :
    main ( )


---> console_out:
1
 
MATCHED!! :D
 54%|█████▍    | 946/1746 [11:52<01:17, 10.32it/s]out1,out2 oddpairs60evenpairs40 oddpairs60evenpairs40


-------------------------------------


---> lineNum: 947
---> probID: geeksforgeeks_430_A
---> inputs:

---> outputs:
Odd pairs =  6
Even pairs =  4


def findPairs ( arr , n ) :
    cntEven = 0
    cntOdd = 0
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            cntEven += 1
        else :
            cntOdd += 1
    evenPairs = 0
    evenPairs += ( ( cntEven * ( cntEven - 1 ) ) / 2 )
    evenPairs += ( ( cntOdd * ( cntOdd - 1 ) ) / 2 )
    oddPairs = 0
    oddPairs += ( cntEven * cntOdd )
    print ( "Odd pairs = " + str ( oddPairs ) )
    print ( "Even pairs = " + str ( evenPairs ) )
arr = [ 1 , 2 , 3 , 4 , 5 ]
n = len ( arr )
findPairs ( arr , n )


---> console_out:
Odd pairs = 6
Even pairs = 4.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 948
---> probID: geeksforgeeks_1150_A
---> inputs:

---> outputs:
20


import sys
def minBroadcastRange ( houses , towers ) :
    n = len ( houses )
    m = len ( towers )
    leftTower = - sys . maxsize - 1
    rightTower = towers [ 0 ]
    j = 0
    k = 0
    min_range = 0
    while j < n :
        if houses [ j ] < rightTower :
            left = houses [ j ] - leftTower
            right = rightTower - houses [ j ]
            local_max = left if left < right else right
            if local_max > min_range :
                min_range = local_max
            j += 1
        else :
            leftTower = towers [ k ]
            if k < m - 1 :
                k += 1
                rightTower = towers [ k ]
            else :
                rightTower = sys . maxsize
    return min_range
a = [ 12 , 13 , 11 , 80 ]
b = [ 4 , 6 , 15 , 60 ]
max = minBroadcastRange ( a , b )
print ( max )


---> console_out:
20
 
MATCHED!! :D
 54%|█████▍    | 948/1746 [11:52<01:10, 11.27it/s]

-------------------------------------


---> lineNum: 949
---> probID: geeksforgeeks_1922_A
---> inputs:

---> outputs:
2


import math
def getRemainder ( num , divisor ) :
    return num - divisor * math . floor ( num / divisor )
print ( getRemainder ( 100 , 7 ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 950
---> probID: codeforces_764_A
---> inputs:
1 1 10
---> outputs:
10

import sys
n , m , z = map ( int , sys . stdin . readline ( ) . split ( ) )
res = 0
for i in range ( m , z + 1 , m ) :
    for j in range ( n , z + 1 , n ) :
        if i == j :
            res += 1
print ( res )


---> console_out:
10
 
MATCHED!! :D
 54%|█████▍    | 950/1746 [11:52<01:06, 12.00it/s]Traceback (most recent call last):
  File "./junk/1703784397626_1819/main.py", line 36, in <module>
    main ( )
  File "./junk/1703784397626_1819/main.py", line 34, in main
    aoj0181 . do_it ( )
  File "./junk/1703784397626_1819/main.py", line 26, in do_it
    if self . is_possible ( next ) :
  File "./junk/1703784397626_1819/main.py", line 9, in is_possible
    w += self . books [ i ]
IndexError: list index out of range
out1,out2  1800010000


-------------------------------------


---> lineNum: 951
---> probID: aizu_p00181_A
---> inputs:
3 9
500
300
800
200
100
600
900
700
400
4 3
1000
1000
1000
0 0
---> outputs:
1800
1000

import sys
class AOJ0181 :
    def __init__ ( self , input ) :
        self . input = input
    def is_possible ( self , width ) :
        w = 0
        cnt = 1
        for i in range ( self . n ) :
            w += self . books [ i ]
            if self . books [ i ] > width :
                return False
            if w > width :
                cnt += 1
                w = self . books [ i ]
        return cnt > self . m
    def do_it ( self ) :
        while True :
            self . m , self . n = map ( int , self . input . readline ( ) . split ( ) )
            if self . n + self . m == 0 :
                return
            self . books = list ( map ( int , self . input . readline ( ) . split ( ) ) )
            left = 1
            right = 1500000
            while right - left != 1 :
                next = ( left + right ) // 2
                if self . is_possible ( next ) :
                    right = next
                else :
                    left = next
            print ( right )
def main ( ) :
    input = sys . stdin
    aoj0181 = AOJ0181 ( input )
    aoj0181 . do_it ( )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 952
---> probID: aizu_p02252_A
---> inputs:
3 50
60 10
100 20
120 30
---> outputs:
240

from queue import PriorityQueue
from decimal import Decimal
class Stuff :
    def __init__ ( self , v , w ) :
        self . v = v
        self . w = w
        self . performance = Decimal ( v ) / Decimal ( w )
    def __lt__ ( self , other ) :
        return self . performance > other . performance
def main ( ) :
    n , w = map ( int , input ( ) . split ( ) )
    que = PriorityQueue ( )
    for i in range ( n ) :
        vi , wi = map ( int , input ( ) . split ( ) )
        que . put ( Stuff ( vi , wi ) )
    res = Decimal ( 0 )
    while w > 0 and not que . empty ( ) :
        s = que . get ( )
        if w >= s . w :
            res += s . v
            w -= s . w
        else :
            res += s . performance * w
            w = 0
    print ( res . to_eng_string ( ) )
if __name__ == '__main__' :
    main ( )


---> console_out:
240
 
MATCHED!! :D
 55%|█████▍    | 952/1746 [11:52<01:02, 12.75it/s]

-------------------------------------


---> lineNum: 953
---> probID: geeksforgeeks_1766_A
---> inputs:

---> outputs:
The element with single occurrence is  2


def getSingle ( arr , n ) :
    ones = 0
    twos = 0
    common_bit_mask = 0
    for i in range ( n ) :
        twos = twos | ( ones & arr [ i ] )
        ones = ones ^ arr [ i ]
        common_bit_mask = ~ ( ones & twos )
        ones &= common_bit_mask
        twos &= common_bit_mask
    return ones
if __name__ == '__main__' :
    arr = [ 3 , 3 , 2 , 3 ]
    n = len ( arr )
    print ( "The element with single occurrence is" , getSingle ( arr , n ) )


---> console_out:
The element with single occurrence is 2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 954
---> probID: geeksforgeeks_491_A
---> inputs:

---> outputs:
2


import collections
def maxdiff ( arr , n ) :
    freq = collections . Counter ( arr )
    ans = 0
    for i in range ( n ) :
        for j in range ( n ) :
            if freq [ arr [ i ] ] > freq [ arr [ j ] ] and arr [ i ] > arr [ j ] :
                ans = max ( ans , freq [ arr [ i ] ] - freq [ arr [ j ] ] )
            elif freq [ arr [ i ] ] < freq [ arr [ j ] ] and arr [ i ] < arr [ j ] :
                ans = max ( ans , freq [ arr [ j ] ] - freq [ arr [ i ] ] )
    return ans
arr = [ 3 , 1 , 3 , 2 , 3 , 2 ]
n = len ( arr )
print ( maxdiff ( arr , n ) )


---> console_out:
2
 
MATCHED!! :D
 55%|█████▍    | 954/1746 [11:52<00:58, 13.56it/s]Traceback (most recent call last):
  File "./junk/1703784397885_2079/main.py", line 10, in <module>
    arr [ j ] = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '-1 1'
out1,out2  20300


-------------------------------------


---> lineNum: 955
---> probID: codeforces_1447_B
---> inputs:
2
2 2
-1 1
1 1
3 4
0 -1 -2 -3
-1 -2 -3 -4
-2 -3 -4 -5
---> outputs:
2
30

import sys
count = int ( input ( ) )
for i in range ( count ) :
    n , m = map ( int , input ( ) . split ( ) )
    arr = [ 0 ] * ( n * m )
    negative_times = 0
    min_num = sys . maxsize
    sum_num = 0
    for j in range ( len ( arr ) ) :
        arr [ j ] = int ( input ( ) )
        if arr [ j ] < 0 :
            arr [ j ] = 0 - arr [ j ]
            negative_times += 1
            sum_num += arr [ j ]
            if min_num > arr [ j ] :
                min_num = arr [ j ]
        else :
            sum_num += arr [ j ]
            if min_num > arr [ j ] :
                min_num = arr [ j ]
    if negative_times % 2 == 0 :
        print ( sum_num )
    else :
        print ( sum_num - min_num * 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 956
---> probID: geeksforgeeks_2253_A
---> inputs:

---> outputs:
-1 3 7 


import numpy as np
def makeAP ( arr ) :
    n = len ( arr )
    if n == 3 :
        common_difference = arr [ 2 ] - arr [ 1 ]
        initial_term = arr [ 1 ] - common_difference
    elif ( arr [ 1 ] - arr [ 0 ] ) == ( arr [ 2 ] - arr [ 1 ] ) :
        initial_term = arr [ 0 ]
        common_difference = arr [ 1 ] - arr [ 0 ]
    elif ( arr [ 2 ] - arr [ 1 ] ) == ( arr [ 3 ] - arr [ 2 ] ) :
        common_difference = arr [ 2 ] - arr [ 1 ]
        initial_term = arr [ 1 ] - common_difference
    else :
        common_difference = ( arr [ 3 ] - arr [ 0 ] ) // 3
        initial_term = arr [ 0 ]
    for i in range ( n ) :
        print ( initial_term + ( i * common_difference ) , end = " " )
    print ( )
arr = np . array ( [ 1 , 3 , 7 ] )
makeAP ( arr )


---> console_out:
-1 3 7 
 
MATCHED!! :D
 55%|█████▍    | 956/1746 [11:53<01:25,  9.26it/s]

-------------------------------------


---> lineNum: 957
---> probID: geeksforgeeks_4205_A
---> inputs:

---> outputs:
11


def countPairs ( n ) :
    count = 0
    for x in range ( 1 , n ) :
        for y in range ( x + 1 , n + 1 ) :
            if ( y + x ) % ( y ^ x ) == 0 :
                count += 1
    return count
n = 6
print ( countPairs ( n ) )


---> console_out:
11
 
MATCHED!! :D


-------------------------------------


---> lineNum: 958
---> probID: geeksforgeeks_3030_A
---> inputs:

---> outputs:
4


import math
def countPairs ( n ) :
    count = 0
    for x in range ( 1 , n ) :
        for y in range ( x + 1 , n + 1 ) :
            if ( y * x ) % ( y + x ) == 0 :
                count += 1
    return count
n = 15
print ( countPairs ( n ) )


---> console_out:
4
 
MATCHED!! :D
 55%|█████▍    | 958/1746 [11:53<01:14, 10.60it/s]

-------------------------------------


---> lineNum: 959
---> probID: leetcode_409_A
---> inputs:

---> outputs:
7

class Solution :
    def longestPalindrome ( self , s : str ) -> int :
        count = [ 0 ] * 128
        for c in s :
            count [ ord ( c ) ] += 1
        ans = 0
        for v in count :
            ans += v // 2 * 2
            if ans % 2 == 0 and v % 2 == 1 :
                ans += 1
        return ans
sObj = Solution ( )
s = "abccccdd"
out = sObj . longestPalindrome ( s )
print ( out )


---> console_out:
7
 
MATCHED!! :D


-------------------------------------


---> lineNum: 960
---> probID: geeksforgeeks_2569_A
---> inputs:

---> outputs:
Total possible expressions of length 6 is 5


def binomialCoeff ( n , k ) :
    res = 1
    if k > n - k :
        k = n - k
    for i in range ( k ) :
        res *= ( n - i )
        res //= ( i + 1 )
    return res
def catalan ( n ) :
    c = binomialCoeff ( 2 * n , n )
    return c // ( n + 1 )
def findWays ( n ) :
    if n & 1 != 0 :
        return 0
    return catalan ( n // 2 )
n = 6
print ( "Total possible expressions of length" , n , "is" , findWays ( 6 ) )


---> console_out:
Total possible expressions of length 6 is 5
 
MATCHED!! :D
 55%|█████▍    | 960/1746 [11:53<01:08, 11.45it/s]Traceback (most recent call last):
  File "./junk/1703784398528_3245/main.py", line 10, in <module>
    if s [ q ] == 'X' :
IndexError: string index out of range
out1,out2 4010x12020x6030x4060x206010x12020x6030x4040x3060x20120x1000 3010x12020x6040x304010x12020x6030x4060x206010x12020x6030x4040x3060x20120x1000


-------------------------------------


---> lineNum: 961
---> probID: codeforces_400_A
---> inputs:
4
OXXXOXOOXOOX
OXOXOXOXOXOX
XXXXXXXXXXXX
OOOOOOOOOOOO
---> outputs:
3 1x12 2x6 4x3
4 1x12 2x6 3x4 6x2
6 1x12 2x6 3x4 4x3 6x2 12x1
0

import sys
n = int ( input ( ) )
sys . stdin . readline ( )
count = 0
for i in range ( n ) :
    s = " " + sys . stdin . readline ( )
    res = ""
    count = 0
    for q in range ( 1 , 13 ) :
        if s [ q ] == 'X' :
            res = " 1x12"
            count += 1
            break
    for j in range ( 2 , 7 ) :
        flag = 0
        if 12 % j == 0 :
            for k in range ( 1 , 12 // j + 1 ) :
                flag = 0
                for p in range ( k , 13 , 12 // j ) :
                    if s [ p ] == 'O' :
                        flag = 1
                        break
                if flag == 0 :
                    count += 1
                    res += " " + str ( j ) + "x" + str ( 12 // j )
                    break
    flag = 0
    for l in range ( 1 , 13 ) :
        if s [ l ] == 'O' :
            flag = 1
            break
    if flag == 0 :
        res += " 12x1"
        count += 1
    print ( count , res )


---> console_out:
4  1x12 2x6 3x4 6x2
6  1x12 2x6 3x4 4x3 6x2 12x1
0 
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784398593_7094/main.py", line 55, in <module>
    main ( )
  File "./junk/1703784398593_7094/main.py", line 23, in main
    outpt . close ( )
  File "./junk/1703784398593_7094/main.py", line 44, in close
    self . writer . flush ( )
AttributeError: 'builtin_function_or_method' object has no attribute 'flush'


-------------------------------------


---> lineNum: 962
---> probID: codeforces_203_A
---> inputs:
30 5 20 20 3 5
---> outputs:
YES

import sys
class ATwoProblems :
    def solve ( self , points , t , a , b , ta , tb ) :
        for i in range ( t ) :
            for j in range ( t ) :
                if points == a - i * ta + b - j * tb or points == 0 or points == a - ta * i or points == b - tb * j :
                    print ( "YES" )
                    return
        print ( "NO" )
def main ( ) :
    inputStream = sys . stdin . buffer
    outputStream = sys . stdout . buffer
    inpt = InputReader ( inputStream )
    outpt = OutputWriter ( outputStream )
    solver = ATwoProblems ( )
    points = inpt . nextInt ( )
    t = inpt . nextInt ( )
    a = inpt . nextInt ( )
    b = inpt . nextInt ( )
    ta = inpt . nextInt ( )
    tb = inpt . nextInt ( )
    solver . solve ( points , t , a , b , ta , tb )
    outpt . close ( )
class InputReader :
    def __init__ ( self , stream ) :
        self . reader = stream . readline
        self . tokenizer = None
    def next ( self ) :
        while self . tokenizer is None or not self . tokenizer . hasMoreTokens ( ) :
            self . tokenizer = StringTokenizer ( self . reader ( ) )
        return self . tokenizer . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
class OutputWriter :
    def __init__ ( self , stream ) :
        self . writer = stream . write
    def print ( self , * args , sep = ' ' , end = '\n' ) :
        for i , arg in enumerate ( args ) :
            if i > 0 :
                self . writer ( sep )
            self . writer ( str ( arg ) )
        self . writer ( end )
    def close ( self ) :
        self . writer . flush ( )
class StringTokenizer :
    def __init__ ( self , string ) :
        self . tokens = string . split ( )
        self . pointer = 0
    def hasMoreTokens ( self ) :
        return self . pointer < len ( self . tokens )
    def nextToken ( self ) :
        self . pointer += 1
        return self . tokens [ self . pointer - 1 ]
if __name__ == '__main__' :
    main ( )


---> console_out:
YES
 
MATCHED!! :D
 55%|█████▌    | 962/1746 [11:53<01:06, 11.85it/s]

-------------------------------------


---> lineNum: 963
---> probID: geeksforgeeks_1676_A
---> inputs:

---> outputs:
Yes


def isSumOfPowersOfTwo ( n ) :
    if n % 2 == 1 :
        return False
    else :
        return True
if __name__ == '__main__' :
    n = 10
    if isSumOfPowersOfTwo ( n ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 964
---> probID: geeksforgeeks_4796_A
---> inputs:

---> outputs:
14


import queue
def countNumber ( n ) :
    result = 0
    for i in range ( 1 , 10 ) :
        s = queue . LifoQueue ( )
        if i <= n :
            s . put ( i )
            result += 1
        while not s . empty ( ) :
            tp = s . get ( )
            for j in range ( tp % 10 , 10 ) :
                x = tp * 10 + j
                if x <= n :
                    s . put ( x )
                    result += 1
    return result
n = 15
print ( countNumber ( n ) )


---> console_out:
14
 
MATCHED!! :D
 55%|█████▌    | 964/1746 [11:53<01:01, 12.74it/s]

-------------------------------------


---> lineNum: 965
---> probID: geeksforgeeks_3477_A
---> inputs:

---> outputs:
5.2


def maxAverageOfPath ( cost , N ) :
    dp = [ [ 0 for j in range ( N + 1 ) ] for i in range ( N + 1 ) ]
    dp [ 0 ] [ 0 ] = cost [ 0 ] [ 0 ]
    for i in range ( 1 , N ) :
        dp [ i ] [ 0 ] = dp [ i - 1 ] [ 0 ] + cost [ i ] [ 0 ]
    for j in range ( 1 , N ) :
        dp [ 0 ] [ j ] = dp [ 0 ] [ j - 1 ] + cost [ 0 ] [ j ]
    for i in range ( 1 , N ) :
        for j in range ( 1 , N ) :
            dp [ i ] [ j ] = max ( dp [ i - 1 ] [ j ] , dp [ i ] [ j - 1 ] ) + cost [ i ] [ j ]
    return float ( dp [ N - 1 ] [ N - 1 ] ) / ( 2 * N - 1 )
cost = [ [ 1 , 2 , 3 ] , [ 6 , 5 , 4 ] , [ 7 , 3 , 9 ] ]
print ( maxAverageOfPath ( cost , 3 ) )


---> console_out:
5.2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 966
---> probID: geeksforgeeks_1374_A
---> inputs:

---> outputs:
Count = 500000
Count = 166667


import math
MAX = 1000000
sieve_Prime = [ 0 ] * ( MAX + 4 )
sieve_count = [ 0 ] * ( MAX + 4 )
def form_sieve ( ) :
    sieve_Prime [ 1 ] = 1
    for i in range ( 2 , MAX + 1 ) :
        if sieve_Prime [ i ] == 0 :
            for j in range ( i * 2 , MAX + 1 , i ) :
                if sieve_Prime [ j ] == 0 :
                    sieve_Prime [ j ] = 1
                    sieve_count [ i ] += 1
form_sieve ( )
n = 2
print ( "Count = " , sieve_count [ n ] + 1 )
n = 3
print ( "Count = " , sieve_count [ n ] + 1 )


---> console_out:
Count =  500000
Count =  166667
 
MATCHED!! :D
 55%|█████▌    | 966/1746 [11:54<02:19,  5.58it/s]out1,out2 495 495


-------------------------------------


---> lineNum: 967
---> probID: aizu_p01415_A
---> inputs:
1 1 1 2 3 100
50
---> outputs:
49.500000000

import sys
n , k , t , u , v , l = map ( int , input ( ) . split ( ) )
d = [ int ( x ) for x in input ( ) . split ( ) ]
d . append ( l )
pos , c , nk , tm = 0 , 0 , 0 , 0
while pos < l :
    if pos < d [ c ] :
        if nk > 0 :
            nk -= 1
            x = min ( l , pos + t * v )
            tm += ( x - pos ) / v
            pos = x
        else :
            tm += ( d [ c ] - pos ) / u
            pos = d [ c ]
    else :
        if d [ c ] == pos :
            x = min ( l , pos + t * v )
            tm += ( x - pos ) / v
            pos = x
            c += 1
        else :
            if nk < k :
                c += 1
                nk += 1
            else :
                x = min ( l , d [ c ] + t * v )
                tm += ( x - pos ) / v
                pos = x
print ( tm )


---> console_out:
49.5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 968
---> probID: geeksforgeeks_462_A
---> inputs:

---> outputs:
2


def waysToSplit ( s ) :
    n = len ( s )
    answer = 0
    prefix = [ 0 ] * n
    suffix = [ 0 ] * n
    seen = [ 0 ] * 26
    for i in range ( n ) :
        prev = prefix [ i - 1 ] if i - 1 >= 0 else 0
        if seen [ ord ( s [ i ] ) - ord ( 'a' ) ] == 0 :
            prefix [ i ] += prev + 1
        else :
            prefix [ i ] = prev
        seen [ ord ( s [ i ] ) - ord ( 'a' ) ] = 1
    for i in range ( 26 ) :
        seen [ i ] = 0
    suffix [ n - 1 ] = 0
    for i in range ( n - 1 , 0 , - 1 ) :
        prev = suffix [ i ]
        if seen [ ord ( s [ i ] ) - ord ( 'a' ) ] == 0 :
            suffix [ i - 1 ] += prev + 1
        else :
            suffix [ i - 1 ] = prev
        seen [ ord ( s [ i ] ) - ord ( 'a' ) ] = 1
    for i in range ( n ) :
        if prefix [ i ] == suffix [ i ] :
            answer += 1
    return answer
s = "ababa"
print ( waysToSplit ( s ) )


---> console_out:
2
 
MATCHED!! :D
 55%|█████▌    | 968/1746 [11:54<01:55,  6.74it/s]out1,out2  22690


-------------------------------------


---> lineNum: 969
---> probID: projecteuler_p121_A
---> inputs:

---> outputs:
2269

import math
class p121 :
    def __init__ ( self ) :
        self . TURNS = 15
    def run ( self ) :
        ways = [ [ 1 ] for _ in range ( self . TURNS + 1 ) ]
        for i in range ( 1 , self . TURNS + 1 ) :
            ways [ i ] = [ 0 ] * ( i + 1 )
            for j in range ( i + 1 ) :
                temp = 0
                if j < i :
                    temp = ways [ i - 1 ] [ j ] * i
                if j > 0 :
                    temp += ways [ i - 1 ] [ j - 1 ]
                ways [ i ] [ j ] = temp
        numer = 0
        for i in range ( self . TURNS // 2 + 1 , self . TURNS + 1 ) :
            numer += ways [ self . TURNS ] [ i ]
        denom = math . factorial ( self . TURNS + 1 )
        return str ( denom // numer )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784399859_7423/main.py", line 7, in <module>
    a [ i ] = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '0 0 0 0 1'
out1,out2  501020304050


-------------------------------------


---> lineNum: 970
---> probID: codeforces_350_B
---> inputs:
5
0 0 0 0 1
0 1 2 3 4
---> outputs:
5
1 2 3 4 5

import sys
n = int ( input ( ) )
a = [ 0 ] * ( n + 1 )
b = [ 0 ] * ( n + 1 )
num = [ 0 ] * ( n + 1 )
for i in range ( 1 , n + 1 ) :
    a [ i ] = int ( input ( ) )
for i in range ( 1 , n + 1 ) :
    b [ i ] = int ( input ( ) )
for i in range ( 1 , n + 1 ) :
    num [ b [ i ] ] += 1
ss = ""
ans = 0
st = [ False ] * ( n + 1 )
for i in range ( 1 , n + 1 ) :
    if a [ i ] == 1 :
        st [ i ] = True
        sb = [ ]
        x = b [ i ]
        sss = str ( i ) [ : : - 1 ]
        sb . append ( " " + sss )
        s = 1
        while not st [ x ] and num [ x ] == 1 and x != 0 and a [ x ] != 1 :
            sss = str ( x ) [ : : - 1 ]
            sb . append ( " " + sss )
            st [ x ] = True
            x = b [ x ]
            s += 1
        if s > ans :
            ans = s
            ss = "" . join ( sb [ : : - 1 ] )
print ( ans )
print ( ss )


---> console_out:
 
DIDN'T MATCH!! :(
 56%|█████▌    | 970/1746 [11:54<01:35,  8.12it/s]out1,out2 aftermergingfirstarray102030508090secondarray100130150200 aftermergingfirstarray102030508090secondarray100130150200


-------------------------------------


---> lineNum: 971
---> probID: geeksforgeeks_1469_A
---> inputs:

---> outputs:
After Merging 
First Array: [1, 2, 3, 5, 8, 9]
Second Array: [10, 13, 15, 20]


import numpy as np
arr1 = np . array ( [ 1 , 5 , 9 , 10 , 15 , 20 ] )
arr2 = np . array ( [ 2 , 3 , 8 , 13 ] )
def merge ( m , n ) :
    for i in range ( n - 1 , - 1 , - 1 ) :
        j = m - 2
        last = arr1 [ m - 1 ]
        while j >= 0 and arr1 [ j ] > arr2 [ i ] :
            arr1 [ j + 1 ] = arr1 [ j ]
            j -= 1
        if j != m - 2 or last > arr2 [ i ] :
            arr1 [ j + 1 ] = arr2 [ i ]
            arr2 [ i ] = last
merge ( arr1 . size , arr2 . size )
print ( "After Merging \nFirst Array: " , arr1 )
print ( "Second Array: " , arr2 )


---> console_out:
After Merging 
First Array:  [1 2 3 5 8 9]
Second Array:  [10 13 15 20]
 
MATCHED!! :D


-------------------------------------


---> lineNum: 972
---> probID: geeksforgeeks_1925_A
---> inputs:

---> outputs:
35


def gcd ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )
def sameRemainder ( a , b , c ) :
    a1 = b - a
    b1 = c - b
    c1 = c - a
    return gcd ( a1 , gcd ( b1 , c1 ) )
a = 62
b = 132
c = 237
print ( sameRemainder ( a , b , c ) )


---> console_out:
35
 
MATCHED!! :D
 56%|█████▌    | 972/1746 [11:55<01:44,  7.37it/s]

-------------------------------------


---> lineNum: 973
---> probID: codeforces_1185_A
---> inputs:
5 2 6 3
---> outputs:
2

import math
import sys
INF = 0x3f3f3f3f
LNF = 0x3f3f3f3f3f3f3f3f
def main ( ) :
    a , b , c , d = map ( int , input ( ) . split ( ) )
    an = [ a , b , c ]
    an . sort ( )
    ans = 0
    if an [ 1 ] - an [ 0 ] < d :
        ans += d - an [ 1 ] + an [ 0 ]
    if an [ 2 ] - an [ 1 ] < d :
        ans += d - an [ 2 ] + an [ 1 ]
    print ( ans )
def init_reader ( ) :
    global input
    input = sys . stdin . readline
if __name__ == '__main__' :
    init_reader ( )
    main ( )


---> console_out:
2
 
MATCHED!! :D
 56%|█████▌    | 972/1746 [12:10<01:44,  7.37it/s]out1,out2 timeoutencounteredpy 50


-------------------------------------


---> lineNum: 974
---> probID: geeksforgeeks_2210_A
---> inputs:

---> outputs:
5


dp = [ [ [ - 1 for i in range ( 5 ) ] for j in range ( 5001 ) ] for k in range ( 5001 ) ]
def countWaysUtil ( n , parts , nextPart ) :
    if parts == 0 and n == 0 :
        return 1
    if n <= 0 or parts <= 0 :
        return 0
    if dp [ n ] [ nextPart ] [ parts ] != - 1 :
        return dp [ n ] [ nextPart ] [ parts ]
    ans = 0
    for i in range ( nextPart , n + 1 ) :
        ans += countWaysUtil ( n - i , parts - 1 , i )
    dp [ n ] [ nextPart ] [ parts ] = ans
    return ans
def countWays ( n ) :
    for i in range ( 5001 ) :
        for j in range ( 5001 ) :
            for l in range ( 5 ) :
                dp [ i ] [ j ] [ l ] = - 1
    return countWaysUtil ( n , 4 , 1 )
if __name__ == '__main__' :
    n = 8
    print ( countWays ( n ) )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 56%|█████▌    | 974/1746 [12:35<1:19:12,  6.16s/it]

-------------------------------------


---> lineNum: 975
---> probID: geeksforgeeks_5051_A
---> inputs:

---> outputs:
9


def find_k ( a , b ) :
    if ( a + b ) % 2 == 0 :
        return ( a + b ) // 2
    return - 1
if __name__ == '__main__' :
    a , b = 2 , 16
    print ( find_k ( a , b ) )


---> console_out:
9
 
MATCHED!! :D
out1,out2 36750 36750


-------------------------------------


---> lineNum: 976
---> probID: geeksforgeeks_2045_A
---> inputs:

---> outputs:
3675.0


N = 101
mod = int ( 1e9 + 7 )
exactsum = [ [ [ 0 for k in range ( N ) ] for j in range ( N ) ] for i in range ( N ) ]
exactnum = [ [ [ 0 for k in range ( N ) ] for j in range ( N ) ] for i in range ( N ) ]
def getSum ( x , y , z ) :
    ans = 0
    exactnum [ 0 ] [ 0 ] [ 0 ] = 1
    for i in range ( x + 1 ) :
        for j in range ( y + 1 ) :
            for k in range ( z + 1 ) :
                if i > 0 :
                    exactsum [ i ] [ j ] [ k ] += ( exactsum [ i - 1 ] [ j ] [ k ] * 10 + 4 * exactnum [ i - 1 ] [ j ] [ k ] ) % mod
                    exactnum [ i ] [ j ] [ k ] += exactnum [ i - 1 ] [ j ] [ k ] % mod
                if j > 0 :
                    exactsum [ i ] [ j ] [ k ] += ( exactsum [ i ] [ j - 1 ] [ k ] * 10 + 5 * exactnum [ i ] [ j - 1 ] [ k ] ) % mod
                    exactnum [ i ] [ j ] [ k ] += exactnum [ i ] [ j - 1 ] [ k ] % mod
                if k > 0 :
                    exactsum [ i ] [ j ] [ k ] += ( exactsum [ i ] [ j ] [ k - 1 ] * 10 + 6 * exactnum [ i ] [ j ] [ k - 1 ] ) % mod
                    exactnum [ i ] [ j ] [ k ] += exactnum [ i ] [ j ] [ k - 1 ] % mod
                ans += exactsum [ i ] [ j ] [ k ] % mod
                ans %= mod
    return ans
x , y , z = 1 , 1 , 1
print ( getSum ( x , y , z ) % mod )


---> console_out:
3675
 
MATCHED!! :D
 56%|█████▌    | 976/1746 [12:35<55:53,  4.36s/it]  

-------------------------------------


---> lineNum: 977
---> probID: geeksforgeeks_2704_A
---> inputs:

---> outputs:
YES


CHARS = 26
def isValidString ( str ) :
    freq = [ 0 ] * CHARS
    for i in range ( len ( str ) ) :
        freq [ ord ( str [ i ] ) - ord ( 'a' ) ] += 1
    freq1 , count_freq1 = 0 , 0
    for i in range ( CHARS ) :
        if freq [ i ] != 0 :
            freq1 = freq [ i ]
            count_freq1 = 1
            break
    freq2 , count_freq2 = 0 , 0
    for j in range ( i + 1 , CHARS ) :
        if freq [ j ] != 0 :
            if freq [ j ] == freq1 :
                count_freq1 += 1
            else :
                count_freq2 = 1
                freq2 = freq [ j ]
                break
    for k in range ( j + 1 , CHARS ) :
        if freq [ k ] != 0 :
            if freq [ k ] == freq1 :
                count_freq1 += 1
            if freq [ k ] == freq2 :
                count_freq2 += 1
            else :
                return False
        if count_freq1 > 1 and count_freq2 > 1 :
            return False
    return True
str = "abcbc"
if isValidString ( str ) :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
YES
 
MATCHED!! :D
  File "./junk/1703784441028_9923/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  bazazby


-------------------------------------


---> lineNum: 978
---> probID: codeforces_1480_A
---> inputs:
3
a
bbbb
az
---> outputs:
b
azaz
by

import java . util . * ;
public class Codechef { public static void main ( String [ ] args ) throws Exception { try { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t - - > 0 ) { String s = sc . next ( ) ; char [ ] ch = s . toCharArray ( ) ; for ( int i = 0 ; i < ch . length ; i + + ) { if ( ( i + 1 ) % 2 != 0 ) { if ( ch [ i ] != 'a' ) ch [ i ] = 'a' ; else ch [ i ] = 'b' ; } else if ( ( i + 1 ) % 2 == 0 ) { if ( ch [ i ] != 'z' ) ch [ i ] = 'z' ; else ch [ i ] = 'y' ; } } s = String . valueOf ( ch ) ; System . out . println ( s ) ; } } catch ( Exception e ) { } } }


---> console_out:
 
DIDN'T MATCH!! :(
 56%|█████▌    | 978/1746 [12:35<39:19,  3.07s/it]

-------------------------------------


---> lineNum: 979
---> probID: geeksforgeeks_3321_A
---> inputs:

---> outputs:
3


def findMinimumSubsequences ( A , B ) :
    numberOfSubsequences = 1
    sizeOfB = len ( B )
    sizeOfA = len ( A )
    inf = 1000000
    next = [ [ inf for j in range ( sizeOfB ) ] for i in range ( 26 ) ]
    for i in range ( sizeOfB ) :
        next [ ord ( B [ i ] ) - ord ( 'a' ) ] [ i ] = i
    for i in range ( 26 ) :
        for j in range ( sizeOfB - 2 , - 1 , - 1 ) :
            if next [ i ] [ j ] == inf :
                next [ i ] [ j ] = next [ i ] [ j + 1 ]
    pos = 0
    i = 0
    while i < sizeOfA :
        if pos == 0 and next [ ord ( A [ i ] ) - ord ( 'a' ) ] [ pos ] == inf :
            numberOfSubsequences = - 1
            break
        elif pos < sizeOfB and next [ ord ( A [ i ] ) - ord ( 'a' ) ] [ pos ] < inf :
            nextIndex = next [ ord ( A [ i ] ) - ord ( 'a' ) ] [ pos ] + 1
            pos = nextIndex
            i += 1
        else :
            numberOfSubsequences += 1
            pos = 0
    return numberOfSubsequences
A = "aacbe"
B = "aceab"
print ( findMinimumSubsequences ( A , B ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 980
---> probID: codeforces_1627_B
---> inputs:
2
4 3
1 2
---> outputs:
3 3 4 4 4 4 4 4 5 5 5 5 
1 1

import sys
t = int ( sys . stdin . readline ( ) )
for i in range ( t ) :
    row , col = map ( int , sys . stdin . readline ( ) . split ( ) )
    ans = [ ]
    rowarray = [ 0 , 0 , row - 1 , row - 1 ]
    colarray = [ 0 , col - 1 , 0 , col - 1 ]
    for j in range ( row ) :
        for k in range ( col ) :
            dis = 0
            for l in range ( 4 ) :
                dis = max ( dis , abs ( rowarray [ l ] - j ) + abs ( colarray [ l ] - k ) )
            ans . append ( dis )
    ans . sort ( )
    print ( " " . join ( str ( x ) for x in ans ) )


---> console_out:
3 3 4 4 4 4 4 4 5 5 5 5
1 1
 
MATCHED!! :D
 56%|█████▌    | 980/1746 [12:36<27:41,  2.17s/it]  File "./junk/1703784441247_2222/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  102020304010


-------------------------------------


---> lineNum: 981
---> probID: geeksforgeeks_1555_A
---> inputs:

---> outputs:
1 2 2 3 4 1 

import java . util . * ;
class GFG :
    def FindRank ( arr , length ) :
        print ( "1 " , end = "" )
        for i in range ( 1 , len ( arr ) ) :
            rank = 1
            for j in range ( 0 , i ) :
                if arr [ j ] > arr [ i ] :
                    rank += 1
            print ( rank , end = " " )
    def main ( args ) :
        arr = [ 88 , 14 , 69 , 30 , 29 , 89 ]
        len = len ( arr )
        GFG . FindRank ( arr , len )
GFG . main ( None )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 982
---> probID: atcoder_ABC085_D
---> inputs:
1 10
3 5
---> outputs:
3

import sys
n , h = map ( int , input ( ) . split ( ) )
a = [ ]
b = [ ]
for i in range ( n ) :
    ai , bi = map ( int , input ( ) . split ( ) )
    a . append ( ai )
    b . append ( bi )
a . sort ( )
b . sort ( reverse = True )
ans = sys . maxsize
for i in range ( n + 1 ) :
    if i != 0 :
        h -= b [ i - 1 ]
    cnt = 0
    if h > 0 :
        cnt = ( h + a [ n - 1 ] - 1 ) // a [ n - 1 ]
    ans = min ( ans , cnt + i )
print ( ans )


---> console_out:
3
 
MATCHED!! :D
 56%|█████▌    | 982/1746 [12:36<19:34,  1.54s/it]

-------------------------------------


---> lineNum: 983
---> probID: geeksforgeeks_2324_A
---> inputs:

---> outputs:
4378


def firstkdigits ( n , k ) :
    product = 1
    for i in range ( n ) :
        product *= n
    while int ( product / pow ( 10 , k ) ) != 0 :
        product = int ( product / 10 )
    return product
n = 15
k = 4
print ( firstkdigits ( n , k ) )


---> console_out:
4378
 
MATCHED!! :D


-------------------------------------


---> lineNum: 984
---> probID: aizu_p00595_A
---> inputs:
57 38
60 84
---> outputs:
19
12

import sys
for line in sys . stdin :
    m , n = map ( int , line . split ( ) )
    if m < n :
        t = m
        m = n
        n = t
    while n != 0 :
        t = n
        n = m % n
        m = t
    print ( m )


---> console_out:
19
12
 
MATCHED!! :D
 56%|█████▋    | 984/1746 [12:36<13:54,  1.10s/it]

-------------------------------------


---> lineNum: 985
---> probID: aizu_p01916_A
---> inputs:
hcpc
---> outputs:
1

import sys
s = input ( )
a = [ 0 ] * 26
sum = 0
for i in range ( len ( s ) ) :
    a [ ord ( s [ i ] ) - ord ( 'a' ) ] += 1
for i in range ( 26 ) :
    sum += a [ i ] % 2
print ( sum // 2 )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 986
---> probID: geeksforgeeks_558_A
---> inputs:

---> outputs:
75
544


import math
def complement ( num ) :
    i , len , temp , comp = 0 , 0 , 0 , 0
    temp = num
    while True :
        len += 1
        num = num // 10
        if abs ( num ) == 0 :
            break
    num = temp
    comp = int ( math . pow ( 10 , len ) ) - num
    return comp
print ( complement ( 25 ) )
print ( complement ( 456 ) )


---> console_out:
75
544
 
MATCHED!! :D
 56%|█████▋    | 986/1746 [12:36<09:56,  1.27it/s]

-------------------------------------


---> lineNum: 987
---> probID: geeksforgeeks_4490_A
---> inputs:

---> outputs:
3


def countUnsetBits ( n ) :
    x = n
    n |= n >> 1
    n |= n >> 2
    n |= n >> 4
    n |= n >> 8
    n |= n >> 16
    return bin ( x ^ n ) . count ( '1' )
n = 17
print ( countUnsetBits ( n ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 988
---> probID: geeksforgeeks_1519_A
---> inputs:

---> outputs:
1


import numpy as np
def minOperations ( arr , n ) :
    maxi , result = 0 , 0
    freq = np . zeros ( 1000001 , dtype = int )
    for i in range ( n ) :
        x = arr [ i ]
        freq [ x ] += 1
    maxi = np . max ( arr )
    for i in range ( 1 , maxi + 1 ) :
        if freq [ i ] != 0 :
            for j in range ( i * 2 , maxi + 1 , i ) :
                freq [ j ] = 0
            result += 1
    return result
arr = [ 2 , 4 , 2 , 4 , 4 , 4 ]
n = len ( arr )
print ( minOperations ( arr , n ) )


---> console_out:
1
 
MATCHED!! :D
 57%|█████▋    | 988/1746 [12:36<07:34,  1.67it/s]

-------------------------------------


---> lineNum: 989
---> probID: geeksforgeeks_3277_A
---> inputs:

---> outputs:
3


import math
def totalWays ( N , M , X ) :
    dp = [ [ 0 for j in range ( 2 ) ] for i in range ( N + 1 ) ]
    if X == 1 :
        dp [ 0 ] [ 0 ] = 1
    else :
        dp [ 0 ] [ 1 ] = 0
    if X == 1 :
        dp [ 1 ] [ 0 ] = 0
        dp [ 1 ] [ 1 ] = M - 1
    else :
        dp [ 1 ] [ 0 ] = 1
        dp [ 1 ] [ 1 ] = M - 2
    for i in range ( 2 , N ) :
        dp [ i ] [ 0 ] = dp [ i - 1 ] [ 1 ]
        dp [ i ] [ 1 ] = dp [ i - 1 ] [ 0 ] * ( M - 1 ) + dp [ i - 1 ] [ 1 ] * ( M - 2 )
    return dp [ N - 1 ] [ 0 ]
N = 4
M = 3
X = 2
print ( totalWays ( N , M , X ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 990
---> probID: geeksforgeeks_1984_A
---> inputs:

---> outputs:
8


import math
class GFG :
    def getMinNum ( self , a , b , c ) :
        if c < a or c > b :
            return c
        x = ( ( b // c ) * c ) + c
        return x
if __name__ == '__main__' :
    a = 2
    b = 4
    c = 4
    g = GFG ( )
    print ( g . getMinNum ( a , b , c ) )


---> console_out:
8
 
MATCHED!! :D
 57%|█████▋    | 990/1746 [12:36<05:31,  2.28it/s]

-------------------------------------


---> lineNum: 991
---> probID: atcoder_ABC052_B
---> inputs:
5
IIDID
---> outputs:
2

import sys
n = int ( input ( ) )
s = list ( input ( ) . strip ( ) )
x = 0
max_val = 0
for i in range ( n ) :
    if s [ i ] == 'I' :
        x += 1
    else :
        x -= 1
    max_val = max ( max_val , x )
print ( max_val )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 992
---> probID: aizu_p01144_A
---> inputs:
2 8
5 6
4 5
3 1
5 10
5 10
5 10
0 0
---> outputs:
5
140

import sys
class State :
    def __init__ ( self , d , p ) :
        self . d = d
        self . p = p
    def __lt__ ( self , other ) :
        return self . p > other . p
while True :
    ans = 0
    n , m = map ( int , input ( ) . split ( ) )
    if n == 0 and m == 0 :
        break
    al = [ ]
    for i in range ( n ) :
        al . append ( State ( * map ( int , input ( ) . split ( ) ) ) )
    al . sort ( )
    while al :
        st = al . pop ( 0 )
        m -= st . d
        if m <= 0 :
            ans -= m * st . p
            break
    while al :
        st = al . pop ( 0 )
        ans += st . d * st . p
    print ( ans )


---> console_out:
5
140
 
MATCHED!! :D
 57%|█████▋    | 992/1746 [12:37<04:07,  3.04it/s]Traceback (most recent call last):
  File "./junk/1703784442227_6764/main.py", line 6, in <module>
    arr = list ( map ( int , input ( ) . split ( ) ) )
EOFError: EOF when reading a line
out1,out2  10


-------------------------------------


---> lineNum: 993
---> probID: atcoder_ABC062_D
---> inputs:
2
3 1 4 1 5 9
---> outputs:
1

import queue
n = int ( input ( ) )
sc = input ( ) . split ( )
front = queue . PriorityQueue ( )
back = queue . PriorityQueue ( )
arr = list ( map ( int , input ( ) . split ( ) ) )
frontSum = 0
backSum = 0
for i in range ( n ) :
    x = int ( sc [ i ] )
    frontSum += x
    front . put ( x )
for i in range ( n ) :
    x = int ( input ( ) )
    backSum += x
    back . put ( - x )
values = [ 0 ] * ( n + 1 )
values [ 0 ] = frontSum
values [ n ] = - backSum
for i in range ( n ) :
    frontSum += arr [ i ]
    front . put ( arr [ i ] )
    frontSum -= front . get ( )
    values [ i + 1 ] += frontSum
    backSum += arr [ n - i - 1 ]
    back . put ( - arr [ n - i - 1 ] )
    backSum += - back . get ( )
    values [ n - i - 1 ] -= backSum
max_val = - float ( 'inf' )
for i in range ( n + 1 ) :
    max_val = max ( max_val , values [ i ] )
print ( max_val )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 994
---> probID: geeksforgeeks_4045_A
---> inputs:

---> outputs:
Total number of ways =  6


arr = [ 1 , 5 , 6 ]
def countWays ( N ) :
    count = [ 0 ] * ( N + 1 )
    count [ 0 ] = 1
    for i in range ( 1 , N + 1 ) :
        for j in range ( len ( arr ) ) :
            if i >= arr [ j ] :
                count [ i ] += count [ i - arr [ j ] ]
    return count [ N ]
N = 7
print ( "Total number of ways = " , countWays ( N ) )


---> console_out:
Total number of ways =  6
 
MATCHED!! :D
 57%|█████▋    | 994/1746 [12:37<03:07,  4.02it/s]

-------------------------------------


---> lineNum: 995
---> probID: geeksforgeeks_3702_A
---> inputs:

---> outputs:
4


import math
def numberOfWays ( x ) :
    if x == 0 or x == 1 :
        return 1
    else :
        return numberOfWays ( x - 1 ) + ( x - 1 ) * numberOfWays ( x - 2 )
x = 3
print ( numberOfWays ( x ) )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 996
---> probID: geeksforgeeks_2931_A
---> inputs:

---> outputs:
1 -> 2
3 -> 3
2 -> 5
4 -> 6


def countFreq ( a , n ) :
    hm = [ 0 ] * n
    for i in range ( n ) :
        hm [ a [ i ] ] += 1
    cumul = 0
    for i in range ( n ) :
        cumul += hm [ a [ i ] ]
        if hm [ a [ i ] ] != 0 :
            print ( str ( a [ i ] ) + "->" + str ( cumul ) )
        hm [ a [ i ] ] = 0
if __name__ == '__main__' :
    a = [ 1 , 3 , 2 , 4 , 2 , 1 ]
    n = len ( a )
    countFreq ( a , n )


---> console_out:
1->2
3->3
2->5
4->6
 
MATCHED!! :D
 57%|█████▋    | 996/1746 [12:37<02:24,  5.19it/s]

-------------------------------------


---> lineNum: 997
---> probID: geeksforgeeks_2899_A
---> inputs:

---> outputs:
( 2 , 3 , 4 ) is one such possible triplet between 2 and 10
( 24 , 25 , 26 ) is one such possible triplet between 24 and 46


import math
def possibleTripletInRange ( L , R ) :
    flag = False
    possibleA , possibleB , possibleC = 0 , 0 , 0
    numbersInRange = R - L + 1
    if numbersInRange < 3 :
        flag = False
    elif numbersInRange > 3 :
        flag = True
        if L % 2 > 0 :
            L += 1
        possibleA = L
        possibleB = L + 1
        possibleC = L + 2
    else :
        if not L % 2 > 0 :
            flag = True
            possibleA = L
            possibleB = L + 1
            possibleC = L + 2
        else :
            flag = False
    if flag :
        print ( "({}, {}, {}) is one such possible triplet between {} and {}" . format ( possibleA , possibleB , possibleC , L , R ) )
    else :
        print ( "No Such Triplet exists between {} and {}" . format ( L , R ) )
if __name__ == '__main__' :
    L , R = 2 , 10
    possibleTripletInRange ( L , R )
    L , R = 23 , 46
    possibleTripletInRange ( L , R )


---> console_out:
(2, 3, 4) is one such possible triplet between 2 and 10
(24, 25, 26) is one such possible triplet between 24 and 46
 
MATCHED!! :D


-------------------------------------


---> lineNum: 998
---> probID: geeksforgeeks_2688_A
---> inputs:

---> outputs:
code


alphabets = list ( "abcdefghijklmnopqrstuvwxyz" )
def conversion ( charSet , str1 ) :
    s2 = ""
    for i in str1 :
        s2 += alphabets [ charSet . index ( i ) ]
    return s2
charSet = "qwertyuiopasdfghjklzxcvbnm"
str1 = "egrt"
print ( conversion ( charSet , list ( str1 ) ) )


---> console_out:
code
 
MATCHED!! :D
 57%|█████▋    | 998/1746 [12:37<01:55,  6.50it/s]out1,out2 the100distinctintegersare3406080100110130160200220250 the100distinctintegersare6080100110130160200220250340


-------------------------------------


---> lineNum: 999
---> probID: geeksforgeeks_3206_A
---> inputs:

---> outputs:
The 10 distinct integers are:
6 8 10 11 13 16 20 22 25 34 

import itertools
def generateNumber ( count , a , n , num , k ) :
    if count == k :
        set . add ( num )
        return
    for i in range ( n ) :
        generateNumber ( count + 1 , a , n , num + a [ i ] , k )
def printDistinctIntegers ( k , a , n ) :
    generateNumber ( 0 , a , n , 0 , k )
    print ( "The" , len ( set ) , "distinct integers are:" , end = " " )
    print ( )
    for i in set :
        print ( i , end = " " )
if __name__ == "__main__" :
    arr = [ 3 , 8 , 17 , 5 ]
    n = len ( arr )
    k = 2
    set = set ( )
    printDistinctIntegers ( k , arr , n )


---> console_out:
The 10 distinct integers are: 
34 6 8 10 11 13 16 20 22 25  
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1000
---> probID: geeksforgeeks_2230_A
---> inputs:

---> outputs:
9
59


def product ( x ) :
    prod = 1
    while x > 0 :
        prod *= ( x % 10 )
        x //= 10
    return prod
def findNumber ( l , r ) :
    b = str ( r )
    ans = r
    for i in range ( len ( b ) ) :
        if b [ i ] == '0' :
            continue
        curr = list ( b )
        curr [ i ] = chr ( ord ( curr [ i ] ) - ord ( '0' ) - 1 + ord ( '0' ) )
        for j in range ( i + 1 , len ( curr ) ) :
            curr [ j ] = '9'
        num = 0
        for j in range ( len ( curr ) ) :
            num = num * 10 + ( ord ( curr [ j ] ) - ord ( '0' ) )
        if num >= l and product ( ans ) < product ( num ) :
            ans = num
    return ans
l , r = 1 , 10
print ( findNumber ( l , r ) )
l , r = 51 , 62
print ( findNumber ( l , r ) )


---> console_out:
9
59
 
MATCHED!! :D
 57%|█████▋    | 1000/1746 [12:37<01:33,  7.94it/s]

-------------------------------------


---> lineNum: 1001
---> probID: geeksforgeeks_4265_A
---> inputs:

---> outputs:
5


MAX = 100005
isPrime = [ False ] * MAX
def sieveOfEratostheneses ( ) :
    isPrime [ 1 ] = True
    for i in range ( 2 , int ( MAX ** 0.5 ) + 1 ) :
        if not isPrime [ i ] :
            for j in range ( 2 * i , MAX , i ) :
                isPrime [ j ] = True
def findPrime ( n ) :
    num = n + 1
    while num > 0 :
        if not isPrime [ num ] :
            return num
        num += 1
    return 0
def minNumber ( arr , n ) :
    sieveOfEratostheneses ( )
    s = sum ( arr )
    if not isPrime [ s ] :
        return 0
    num = findPrime ( s )
    return num - s
arr = [ 2 , 4 , 6 , 8 , 12 ]
n = len ( arr )
print ( minNumber ( arr , n ) )


---> console_out:
5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1002
---> probID: geeksforgeeks_3062_A
---> inputs:

---> outputs:
26


MAX = 25
def getMinSum ( arr , n ) :
    bits_count = [ 0 ] * MAX
    max_bit = 0
    sum = 0
    ans = 0
    for d in range ( n ) :
        e = arr [ d ]
        f = 0
        while e > 0 :
            rem = e % 2
            e = e // 2
            if rem == 1 :
                bits_count [ f ] += rem
            f += 1
        max_bit = max ( max_bit , f )
    for d in range ( max_bit ) :
        temp = 2 ** d
        if bits_count [ d ] > n // 2 :
            ans += temp
    for d in range ( n ) :
        arr [ d ] = arr [ d ] ^ ans
        sum += arr [ d ]
    return sum
arr = [ 3 , 5 , 7 , 11 , 15 ]
n = len ( arr )
print ( getMinSum ( arr , n ) )


---> console_out:
26
 
MATCHED!! :D
 57%|█████▋    | 1002/1746 [12:37<01:21,  9.14it/s]

-------------------------------------


---> lineNum: 1003
---> probID: codeforces_70_B
---> inputs:
25
Hello. I am a little walrus.
---> outputs:
2

import sys
class _70B :
    def __init__ ( self ) :
        self . inp = sys . stdin
        self . out = sys . stdout
    def solve ( self ) :
        n = self . next_int ( )
        c = 0
        q = 0
        s = self . next_token ( )
        p = 0
        for i in range ( len ( s ) ) :
            h = s [ i ]
            p += 1
            if h == '.' or h == '!' or h == '?' :
                if p > n :
                    return "Impossible"
                if q == 0 :
                    q = p
                elif q + 1 + p <= n :
                    q += 1 + p
                else :
                    q = p
                    c += 1
                p = 0
                i += 1
        if q > 0 :
            c += 1
        return c
    def run ( self ) :
        try :
            out = self . out
            out . write ( str ( self . solve ( ) ) )
            self . inp . close ( )
        except :
            sys . exit ( 0 )
    def next_token ( self ) :
        return self . inp . readline ( ) . strip ( )
    def next_int ( self ) :
        return int ( self . next_token ( ) )
if __name__ == '__main__' :
    _70B ( ) . run ( )


---> console_out:
2 
MATCHED!! :D


-------------------------------------


---> lineNum: 1004
---> probID: codeforces_689_B
---> inputs:
3
2 2 3
---> outputs:
0 1 2

import sys
from collections import deque
n = int ( sys . stdin . readline ( ) )
a = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
for i in range ( n ) :
    a [ i ] -= 1
g = [ [ ] for _ in range ( n ) ]
for i in range ( n - 1 ) :
    if a [ i ] != i :
        g [ i ] . append ( a [ i ] )
    g [ i ] . append ( i + 1 )
    g [ i + 1 ] . append ( i )
if a [ n - 1 ] != n - 1 :
    g [ n - 1 ] . append ( a [ n - 1 ] )
dist = [ - 1 ] * n
dist [ 0 ] = 0
q = deque ( [ 0 ] )
while q :
    u = q . popleft ( )
    for v in g [ u ] :
        if dist [ v ] == - 1 :
            q . append ( v )
            dist [ v ] = dist [ u ] + 1
print ( ' ' . join ( map ( str , dist ) ) )


---> console_out:
0 1 2
 
MATCHED!! :D
 58%|█████▊    | 1004/1746 [12:37<01:10, 10.52it/s]Traceback (most recent call last):
  File "./junk/1703784442989_5571/main.py", line 39, in <module>
    test = in_ . nextInt ( )
  File "./junk/1703784442989_5571/main.py", line 30, in nextInt
    return int ( self . next ( ) )
  File "./junk/1703784442989_5571/main.py", line 21, in next
    while self . st is None or not self . st . hasMoreTokens ( ) :
AttributeError: 'list_iterator' object has no attribute 'hasMoreTokens'
out1,out2  3001900


-------------------------------------


---> lineNum: 1005
---> probID: codeforces_1470_A
---> inputs:
2
5 4
2 3 4 3 2
3 5 12 20
5 5
5 4 3 2 1
10 40 90 160 250
---> outputs:
30
190

import sys
def helpBirthDayBoy ( n , m ) :
    n . sort ( )
    ans = 0
    j = 0
    for i in range ( len ( n ) - 1 , - 1 , - 1 ) :
        k = n [ i ]
        if k < len ( m ) :
            if m [ k ] > m [ j ] :
                ans += m [ j ]
                j += 1
            else :
                ans += m [ k ]
    print ( ans )
if __name__ == "__main__" :
    class FastReader :
        def __init__ ( self ) :
            self . br = sys . stdin
            self . st = None
        def next ( self ) :
            while self . st is None or not self . st . hasMoreTokens ( ) :
                try :
                    self . st = tokenizer ( input ( ) )
                except EOFError :
                    break
            if self . st is None :
                return None
            return self . st . nextToken ( )
        def nextInt ( self ) :
            return int ( self . next ( ) )
        def nextLong ( self ) :
            return int ( self . next ( ) )
        def nextDouble ( self ) :
            return float ( self . next ( ) )
        def nextLine ( self ) :
            return input ( ) . strip ( )
    tokenizer = lambda line : iter ( line . split ( ) )
    in_ = FastReader ( )
    test = in_ . nextInt ( )
    while test > 0 :
        n = in_ . nextInt ( )
        m = in_ . nextInt ( )
        arr = [ in_ . nextInt ( ) - 1 for _ in range ( n ) ]
        marr = [ in_ . nextInt ( ) for _ in range ( m ) ]
        helpBirthDayBoy ( arr , marr )
        test -= 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1703784443054_4969/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax
out1,out2  30


-------------------------------------


---> lineNum: 1006
---> probID: geeksforgeeks_3217_A
---> inputs:

---> outputs:
3


import java . io . * ;
class GFG { static int findMaximumNum ( int [ ] arr , int n ) { for ( int i = n ; i >= 1 ; i - - ) { int count = 0 ; for ( int j = 0 ; j < n ; j + + ) if ( i <= arr [ j ] ) count + + ; if ( count >= i ) return i ; } return 1 ; } public static void main ( String [ ] args ) { int [ ] arr = { 1 , 2 , 3 , 8 , 10 } ; int n = arr . length ; System . out . println ( findMaximumNum ( arr , n ) ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
 58%|█████▊    | 1006/1746 [12:37<01:05, 11.36it/s]Traceback (most recent call last):
  File "./junk/1703784443132_1679/main.py", line 2, in <module>
    n = int ( input ( ) )
ValueError: invalid literal for int() with base 10: 'abcde'
out1,out2  xaze


-------------------------------------


---> lineNum: 1007
---> probID: aizu_p02422_A
---> inputs:
abcde
3
replace 1 3 xyz
reverse 0 2
print 1 4
---> outputs:
xaze

import sys
n = int ( input ( ) )
sb = input ( )
for i in range ( n ) :
    split_command = input ( ) . split ( )
    a = int ( split_command [ 1 ] )
    b = int ( split_command [ 2 ] )
    if split_command [ 0 ] . startswith ( "p" ) :
        print ( sb [ a : b + 1 ] )
    elif split_command [ 0 ] . startswith ( "rev" ) :
        temp = sb [ a : b + 1 ]
        sb = sb [ : a ] + temp [ : : - 1 ] + sb [ b + 1 : ]
    else :
        p = split_command [ 3 ]
        sb = sb [ : a ] + p + sb [ b + 1 : ]


---> console_out:
 
DIDN'T MATCH!! :(
out1,out2 00 30


-------------------------------------


---> lineNum: 1008
---> probID: geeksforgeeks_3833_A
---> inputs:

---> outputs:
3


def solve ( A , n ) :
    dp = [ [ 0 for i in range ( 2000 ) ] for j in range ( 2000 ) ]
    flag = 1
    sum = 0
    for i in range ( n ) :
        sum += A [ i ]
    for i in range ( - sum , sum + 1 ) :
        try :
            dp [ 0 ] [ i ] = float ( 'inf' )
        except :
            pass
    dp [ 0 ] [ 0 ] = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( sum + 1 ) :
            try :
                dp [ flag ] [ j ] = float ( 'inf' )
                if j - A [ i - 1 ] <= sum and j - A [ i - 1 ] >= - sum :
                    dp [ flag ] [ j ] = dp [ flag ^ 1 ] [ j - A [ i - 1 ] ]
                if j + A [ i - 1 ] <= sum and j + A [ i - 1 ] >= - sum and dp [ flag ^ 1 ] [ j + A [ i - 1 ] ] != float ( 'inf' ) :
                    dp [ flag ] [ j ] = min ( dp [ flag ] [ j ] , dp [ flag ^ 1 ] [ j + A [ i - 1 ] ] + 1 )
            except :
                pass
        flag = flag ^ 1
    for i in range ( sum + 1 ) :
        if dp [ flag ^ 1 ] [ i ] != float ( 'inf' ) :
            return dp [ flag ^ 1 ] [ i ]
    return n - 1
if __name__ == '__main__' :
    arr = [ 10 , 22 , 9 , 33 , 21 , 50 , 41 , 60 ]
    n = len ( arr )
    print ( solve ( arr , n ) )


---> console_out:
0
 
DIDN'T MATCH!! :(
 58%|█████▊    | 1008/1746 [12:38<01:30,  8.15it/s]

-------------------------------------


---> lineNum: 1009
---> probID: aizu_p00058_A
---> inputs:
1.0 1.0 2.0 2.0 0.0 0.0 1.0 -1.0
0.0 0.0 2.0 0.0 -1.0 2.0 2.0 2.0
10.0 6.0 3.4 5.2 6.8 9.5 4.3 2.1
2.5 3.5 2.5 4.5 -3.3 -2.3 6.8 -2.3
---> outputs:
YES
NO
NO
YES

import sys
eps = 1e-10
for line in sys . stdin :
    nums = list ( map ( float , line . split ( ) ) )
    x1 , y1 , x2 , y2 , x3 , y3 , x4 , y4 = nums
    vax , vay = x2 - x1 , y2 - y1
    vbx , vby = x4 - x3 , y4 - y3
    if abs ( vax * vbx + vay * vby ) < eps :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
YES
NO
NO
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1010
---> probID: aizu_p00221_A
---> inputs:
5 7
1
2
Fizz
4
Buzz
6
7
3 5
1
2
3
4
5
0 0
---> outputs:
2 3 4 5
1

import sys
class AOJ0221 :
    def __init__ ( self ) :
        self . person = [ ]
        self . m = 0
        self . n = 0
    def doIt ( self ) :
        while True :
            self . m , self . n = map ( int , input ( ) . split ( ) )
            if self . m + self . n == 0 :
                break
            self . person = [ False ] * self . m
            user = 0
            cnt = 0
            for i in range ( 1 , self . n + 1 ) :
                input_str = input ( )
                talk = self . getTalk ( i )
                if input_str != talk and self . m - cnt > 1 :
                    self . person [ user ] = True
                    cnt += 1
                user = self . getUser ( user )
            for i in range ( self . m ) :
                if not self . person [ i ] :
                    sys . stdout . write ( str ( i + 1 ) )
                    break
            for i in range ( i + 1 , self . m ) :
                if not self . person [ i ] :
                    sys . stdout . write ( " " + str ( i + 1 ) )
            sys . stdout . write ( "\n" )
    def getTalk ( self , num ) :
        if num % 15 == 0 :
            return "FizzBuzz"
        elif num % 3 == 0 :
            return "Fizz"
        elif num % 5 == 0 :
            return "Buzz"
        else :
            return str ( num )
    def getUser ( self , current_user ) :
        for i in range ( 1 , self . m + 1 ) :
            if not self . person [ ( current_user + i ) % self . m ] :
                return ( current_user + i ) % self . m
        return - 1
if __name__ == "__main__" :
    AOJ0221 ( ) . doIt ( )


---> console_out:
2 3 4 5
1
 
MATCHED!! :D
 58%|█████▊    | 1010/1746 [12:38<01:17,  9.56it/s]

-------------------------------------


---> lineNum: 1011
---> probID: geeksforgeeks_2552_A
---> inputs:

---> outputs:
56


l = [ [ 0 ] * 1001 for i in range ( 1001 ) ]
def initialize ( ) :
    l [ 0 ] [ 0 ] = 1
    for i in range ( 1 , 1001 ) :
        l [ i ] [ 0 ] = 1
        for j in range ( 1 , i + 1 ) :
            l [ i ] [ j ] = l [ i - 1 ] [ j - 1 ] + l [ i - 1 ] [ j ]
def nCr ( n , r ) :
    return l [ n ] [ r ]
initialize ( )
n = 8
r = 3
print ( nCr ( n , r ) )


---> console_out:
56
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1012
---> probID: atcoder_ABC070_B
---> inputs:
0 75 25 100
---> outputs:
50

import sys
a , b , c , d = map ( int , sys . stdin . readline ( ) . split ( ) )
array = [ 0 ] * 101
for i in range ( a , b ) :
    array [ i ] += 1
for i in range ( c , d ) :
    array [ i ] += 1
ans = 0
for i in range ( 101 ) :
    if array [ i ] == 2 :
        ans += 1
print ( ans )


---> console_out:
50
 
MATCHED!! :D
 58%|█████▊    | 1012/1746 [12:38<01:43,  7.06it/s]

-------------------------------------


---> lineNum: 1013
---> probID: geeksforgeeks_1125_A
---> inputs:

---> outputs:
0 16 1 

import math
def calculate ( a , b , n , m ) :
    mul = 1
    for i in range ( m ) :
        if b [ i ] != 0 :
            mul = mul * b [ i ]
    for i in range ( n ) :
        x = math . floor ( a [ i ] / mul )
        print ( x , end = " " )
a = [ 5 , 100 , 8 ]
b = [ 2 , 3 ]
n = len ( a )
m = len ( b )
calculate ( a , b , n , m )


---> console_out:
0 16 1  
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784444181_8730/main.py", line 48, in <module>
    main ( )
  File "./junk/1703784444181_8730/main.py", line 25, in main
    a [ i ] = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 5 8 123 7'
out1,out2  801230


-------------------------------------


---> lineNum: 1014
---> probID: codeforces_519_B
---> inputs:
5
1 5 8 123 7
123 7 5 1
5 1 7
---> outputs:
8
123

import sys
def quickSort ( a , d , c ) :
    i = d
    j = c
    mid = a [ ( d + c ) // 2 ]
    while i <= j :
        while a [ i ] < mid :
            i += 1
        while a [ j ] > mid :
            j -= 1
        if i <= j :
            tg = a [ i ]
            a [ i ] = a [ j ]
            a [ j ] = tg
            i += 1
            j -= 1
    if d < j :
        quickSort ( a , d , j )
    if i < c :
        quickSort ( a , i , c )
def main ( ) :
    n = int ( input ( ) )
    a = [ 0 ] * ( n + 5 )
    for i in range ( 1 , n + 1 ) :
        a [ i ] = int ( input ( ) )
    b = [ 0 ] * ( n + 5 )
    for i in range ( 1 , n ) :
        b [ i ] = int ( input ( ) )
    c = [ 0 ] * ( n + 5 )
    for i in range ( 1 , n - 1 ) :
        c [ i ] = int ( input ( ) )
    quickSort ( a , 1 , n )
    quickSort ( b , 1 , n - 1 )
    quickSort ( c , 1 , n - 2 )
    resA = a [ n ]
    for i in range ( 1 , n ) :
        if a [ i ] != b [ i ] :
            resA = a [ i ]
            break
    print ( resA )
    resB = b [ n - 1 ]
    for i in range ( 1 , n - 1 ) :
        if b [ i ] != c [ i ] :
            resB = b [ i ]
            break
    print ( resB )
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 58%|█████▊    | 1014/1746 [12:39<01:26,  8.47it/s]  File "./junk/1703784444247_9390/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  100000


-------------------------------------


---> lineNum: 1015
---> probID: codeforces_1140_B
---> inputs:
3
2
<>
3
><<
1
>
---> outputs:
1
0
0

import java . util . Scanner
class TEST :
    def main ( args : Array [ str ] ) :
        sc = Scanner ( System . in )
        T = sc . nextInt ( )
        while T > 0 :
            n = sc . nextInt ( )
            c = sc . next ( ) . toCharArray ( )
            del_ = n - 1
            for i in range ( n ) :
                if c [ i ] == '>' or c [ n - 1 - i ] == '<' :
                    print ( i )
                    break
            T -= 1


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784444307_5968/main.py", line 1, in <module>
    import java . util . Scanner
ModuleNotFoundError: No module named 'java'
out1,out2  20


-------------------------------------


---> lineNum: 1016
---> probID: codeforces_579_A
---> inputs:
5
---> outputs:
2

import java . util . Scanner
n = int ( input ( ) )
s = ""
while n > 0 :
    x = n % 2
    n //= 2
    s += str ( x )
ans = 0
for i in range ( len ( s ) ) :
    if s [ i ] == '1' :
        ans += 1
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 58%|█████▊    | 1016/1746 [12:39<01:13,  9.90it/s]Traceback (most recent call last):
  File "./junk/1703784444369_8938/main.py", line 2, in <module>
    VP , VD , T , F , C = map ( int , sys . stdin . readline ( ) . split ( ) )
ValueError: not enough values to unpack (expected 5, got 1)
out1,out2  20


-------------------------------------


---> lineNum: 1017
---> probID: codeforces_148_B
---> inputs:
1
2
1
1
10
---> outputs:
2

import sys
VP , VD , T , F , C = map ( int , sys . stdin . readline ( ) . split ( ) )
if VD <= VP :
    print ( 0 )
    sys . exit ( )
answer = 0
start = T
while True :
    x = start * VP / ( VD - VP )
    if ( start + x ) * VP >= C :
        break
    start += 2 * x + F
    answer += 1
print ( answer )


---> console_out:
 
DIDN'T MATCH!! :(
out1,out2 006000 0060


-------------------------------------


---> lineNum: 1018
---> probID: codeforces_387_A
---> inputs:
05:50
05:44
---> outputs:
00:06

import datetime
s = input ( ) . split ( ":" )
t = input ( ) . split ( ":" )
x = datetime . time ( int ( s [ 0 ] ) , int ( s [ 1 ] ) )
y = datetime . time ( int ( t [ 0 ] ) , int ( t [ 1 ] ) )
print ( datetime . datetime . combine ( datetime . date . today ( ) , x ) - datetime . datetime . combine ( datetime . date . today ( ) , y ) )


---> console_out:
0:06:00
 
DIDN'T MATCH!! :(
 58%|█████▊    | 1018/1746 [12:39<01:05, 11.11it/s]

-------------------------------------


---> lineNum: 1019
---> probID: geeksforgeeks_316_A
---> inputs:

---> outputs:
3


def longestAlternatingSubarray ( a , n ) :
    longest = 1
    cnt = 1
    for i in range ( 1 , n ) :
        if a [ i ] * a [ i - 1 ] < 0 :
            cnt += 1
            longest = max ( longest , cnt )
        else :
            cnt = 1
    return longest
if __name__ == '__main__' :
    a = [ - 5 , - 1 , - 1 , 2 , - 2 , - 3 ]
    n = len ( a )
    print ( longestAlternatingSubarray ( a , n ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1020
---> probID: geeksforgeeks_443_A
---> inputs:

---> outputs:
Acute-angled Triangle


import math
def checkTypeOfTriangle ( a , b , c ) :
    sqa = int ( math . pow ( a , 2 ) )
    sqb = int ( math . pow ( b , 2 ) )
    sqc = int ( math . pow ( c , 2 ) )
    if sqa == sqa + sqb or sqb == sqa + sqc or sqc == sqa + sqb :
        print ( "Right-angled Triangle" )
    elif sqa > sqc + sqb or sqb > sqa + sqc or sqc > sqa + sqb :
        print ( "Obtuse-angled Triangle" )
    else :
        print ( "Acute-angled Triangle" )
a , b , c = 2 , 2 , 2
checkTypeOfTriangle ( a , b , c )


---> console_out:
Acute-angled Triangle
 
MATCHED!! :D
 58%|█████▊    | 1020/1746 [12:39<00:59, 12.29it/s]

-------------------------------------


---> lineNum: 1021
---> probID: geeksforgeeks_1569_A
---> inputs:

---> outputs:
4


max = 100
def countSubsequence ( s , n ) :
    cntG = 0
    cntF = 0
    result = 0
    C = 0
    for i in range ( n ) :
        if s [ i ] == 'G' :
            cntG += 1
            result += C
        elif s [ i ] == 'F' :
            cntF += 1
            C += cntG
        else :
            continue
    print ( result )
s = "GFGFG"
n = len ( s )
countSubsequence ( s , n )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1022
---> probID: atcoder_ABC112_C
---> inputs:
2
0 0 180291302
20 20 180291262
---> outputs:
0 0 180291302

import sys
MAX = 100
def check ( n , x , y , h , cx , cy ) :
    ch = - 1
    for i in range ( n ) :
        if h [ i ] > 0 :
            ch = abs ( x [ i ] - cx ) + abs ( y [ i ] - cy ) + h [ i ]
            break
    for i in range ( n ) :
        if h [ i ] != max ( ch - abs ( x [ i ] - cx ) - abs ( y [ i ] - cy ) , 0 ) :
            return - 1
    return ch
if __name__ == '__main__' :
    with sys . stdin as scanner :
        n = int ( scanner . readline ( ) )
        x , y , h = [ ] , [ ] , [ ]
        for i in range ( n ) :
            xi , yi , hi = map ( int , scanner . readline ( ) . split ( ) )
            x . append ( xi )
            y . append ( yi )
            h . append ( hi )
        for i in range ( MAX + 1 ) :
            for j in range ( MAX + 1 ) :
                ch = check ( n , x , y , h , i , j )
                if ch > 0 :
                    print ( i , j , ch )


---> console_out:
0 0 180291302
 
MATCHED!! :D
 59%|█████▊    | 1022/1746 [12:39<00:57, 12.54it/s]

-------------------------------------


---> lineNum: 1023
---> probID: geeksforgeeks_1262_A
---> inputs:

---> outputs:
5


def countSteps ( n ) :
    steps = 0
    while n > 0 :
        largest = int ( n ** ( 1 / 3 ) )
        n -= ( largest ** 3 )
        steps += 1
    return steps
n = 150
print ( countSteps ( n ) )


---> console_out:
5
 
MATCHED!! :D
  File "./junk/1703784444847_1812/main.py", line 12
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  5022930230130220140229240219200222170225120229


-------------------------------------


---> lineNum: 1024
---> probID: aizu_p00138_A
---> inputs:
18 25.46
16 26.23
3 23.00
10 24.79
5 22.88
11 23.87
19 23.90
1 25.11
23 23.88
4 23.46
7 24.12
12 22.91
13 21.99
14 22.86
21 23.12
9 24.09
17 22.51
22 23.49
6 23.02
20 22.23
24 21.89
15 24.14
8 23.77
2 23.42
---> outputs:
5 22.88
3 23.00
13 21.99
14 22.86
24 21.89
20 22.23
17 22.51
12 22.91

import java . util . Arrays
import java . util . Scanner
class Main :
    class AOJ_0138 :
        def __init__ ( self ) :
            self . num = None
            self . time = None
        def __lt__ ( self , other ) :
            return self . time < other . time
    def doIt ( self ) :
        m = 0
        sc = Scanner ( System . in )
        data = [ self . AOJ_0138 ( ) for _ in range ( 8 ) ]
        sub = [ self . AOJ_0138 ( ) for _ in range ( 18 ) ]
        for i in range ( 3 ) :
            for k in range ( 8 ) :
                data [ k ] . num = int ( sc . nextInt ( ) )
                data [ k ] . time = float ( sc . nextDouble ( ) )
            data . sort ( )
            print ( f"{data[0].num} {data[0].time:.2f}" )
            print ( f"{data[1].num} {data[1].time:.2f}" )
            for k in range ( 2 , 8 ) :
                sub [ m ] = data [ k ]
                m += 1
        sub . sort ( )
        print ( f"{sub[0].num} {sub[0].time:.2f}" )
        print ( f"{sub[1].num} {sub[1].time:.2f}" )
if __name__ == "__main__" :
    Main ( ) . doIt ( )


---> console_out:
 
DIDN'T MATCH!! :(
 59%|█████▊    | 1024/1746 [12:39<00:55, 13.11it/s]

-------------------------------------


---> lineNum: 1025
---> probID: codeforces_459_B
---> inputs:
2
1 2
---> outputs:
1 1

import sys
n = int ( input ( ) )
arr = list ( map ( int , input ( ) . split ( ) ) )
mx = max ( arr )
mn = min ( arr )
mxCount = arr . count ( mx )
mnCount = arr . count ( mn )
if mx != mn :
    print ( mx - mn , mxCount * mnCount )
else :
    print ( mx - mn , mxCount * ( mxCount - 1 ) // 2 )


---> console_out:
1 1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1026
---> probID: geeksforgeeks_855_A
---> inputs:

---> outputs:
4


def find_count ( arr ) :
    ans = 0
    for i in arr :
        x = bin ( i ) . count ( '1' )
        if i % x == 0 :
            ans += 1
    return ans
arr = [ 1 , 2 , 3 , 4 , 5 , 6 ]
print ( find_count ( arr ) )


---> console_out:
4
 
MATCHED!! :D
 59%|█████▉    | 1026/1746 [12:39<00:53, 13.43it/s]

-------------------------------------


---> lineNum: 1027
---> probID: atcoder_AGC010_B
---> inputs:
1
1
---> outputs:
YES

import sys
def check ( A ) :
    N = len ( A )
    sum = 0
    for i in range ( N ) :
        sum += A [ i ]
    if sum % ( ( N * ( N + 1 ) ) // 2 ) != 0 :
        return False
    op = sum // ( ( N * ( N + 1 ) ) // 2 )
    for i in range ( N ) :
        diff = A [ ( i + 1 ) % N ] - A [ i ]
        if diff > op :
            return False
        if ( op - diff ) % N != 0 :
            return False
    return True
def main ( ) :
    N = int ( input ( ) )
    A = list ( map ( int , input ( ) . split ( ) ) )
    print ( "YES" if check ( A ) else "NO" )
if __name__ == "__main__" :
    main ( )


---> console_out:
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1028
---> probID: geeksforgeeks_2304_A
---> inputs:

---> outputs:
216


import math
def maxProd ( N ) :
    if N == 0 :
        return 1
    if N < 10 :
        return N
    return max ( maxProd ( N // 10 ) * ( N % 10 ) , maxProd ( N // 10 - 1 ) * 9 )
N = 390
print ( maxProd ( N ) )


---> console_out:
216
 
MATCHED!! :D
 59%|█████▉    | 1028/1746 [12:40<00:55, 12.86it/s]Traceback (most recent call last):
  File "./junk/1703784445220_3589/main.py", line 21, in <module>
    main ( )
  File "./junk/1703784445220_3589/main.py", line 18, in main
    inputSugoroku ( )
  File "./junk/1703784445220_3589/main.py", line 8, in inputSugoroku
    sb += input ( )
EOFError: EOF when reading a line
out1,out2  20


-------------------------------------


---> lineNum: 1029
---> probID: aizu_p00565_A
---> inputs:
5
0 1 0 0 0
---> outputs:
2

import sys
n = int ( input ( ) )
sugoroku = ""
def inputSugoroku ( ) :
    global sugoroku
    sb = ""
    for i in range ( n ) :
        sb += input ( )
    sugoroku = sb
def solveSugoroku ( ) :
    global sugoroku
    dice = 0
    safes = sugoroku . split ( "0" )
    for i in range ( len ( safes ) ) :
        dice = max ( dice , len ( safes [ i ] ) )
    print ( dice + 1 )
def main ( ) :
    inputSugoroku ( )
    solveSugoroku ( )
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784445283_6411/main.py", line 26, in <module>
    main ( )
  File "./junk/1703784445283_6411/main.py", line 3, in main
    sc = Scanner ( )
NameError: name 'Scanner' is not defined
out1,out2  37181321


-------------------------------------


---> lineNum: 1030
---> probID: codeforces_1495_A
---> inputs:
3
2
0 1
1 0
0 -1
-2 0
4
1 0
3 0
-5 0
6 0
0 3
0 1
0 2
0 4
5
3 0
0 4
0 -3
4 0
2 0
1 0
-3 0
0 -10
0 -2
0 -10
---> outputs:
3.650281539872885
18.061819283610362
32.052255376143336

import array
def main ( ) :
    sc = Scanner ( )
    t = sc . nextInt ( )
    while t > 0 :
        n = sc . nextInt ( )
        x = array . array ( 'l' , [ 0 ] * n )
        y = array . array ( 'l' , [ 0 ] * n )
        t1 , t2 = 0 , 0
        for i in range ( 2 * n ) :
            x1 , y1 = sc . nextInt ( ) , sc . nextInt ( )
            if x1 == 0 :
                y [ t2 ] = y1 * y1
                t2 += 1
            else :
                x [ t1 ] = x1 * x1
                t1 += 1
        x = sorted ( x )
        y = sorted ( y )
        sum = 0
        for i in range ( n - 1 , - 1 , - 1 ) :
            sum += math . sqrt ( x [ i ] + y [ i ] )
        print ( sum )
        t -= 1
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 59%|█████▉    | 1030/1746 [12:40<00:52, 13.52it/s]

-------------------------------------


---> lineNum: 1031
---> probID: geeksforgeeks_1711_A
---> inputs:

---> outputs:
220


def countNonDecreasing ( n ) :
    N = 10
    count = 1
    for i in range ( 1 , n + 1 ) :
        count *= ( N + i - 1 )
        count //= i
    return count
n = 3
print ( countNonDecreasing ( n ) )


---> console_out:
220
 
MATCHED!! :D
  File "./junk/1703784445413_8939/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax
out1,out2  20


-------------------------------------


---> lineNum: 1032
---> probID: geeksforgeeks_4675_A
---> inputs:

---> outputs:
2


import java . io . * ;
import java . util . * ;
import java . lang . * ;
class GFG { static int reduceString ( String s , int l ) { int count = 1 , steps = 0 ; for ( int i = 1 ; i < l ; i + + ) { if ( s . charAt ( i ) == s . charAt ( i - 1 ) ) count += 1 ; else { steps += ( count / 2 ) ; count = 1 ; } } steps += count / 2 ; return steps ; } public static void main ( String [ ] args ) { String s = "geeksforgeeks" ; int l = s . length ( ) ; System . out . println ( reduceString ( s , l ) ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
 59%|█████▉    | 1032/1746 [12:40<00:50, 14.22it/s]

-------------------------------------


---> lineNum: 1033
---> probID: atcoder_ARC070_D
---> inputs:
3 6
1 4 3
---> outputs:
Impossible


import queue
a , b , n = 0 , 0 , 0
read = None
def main ( ) :
    global a , b , n , read
    read = input ( ) . split ( )
    a = int ( read [ 0 ] )
    b = int ( read [ 1 ] )
    n = a + b
    if b >= a :
        print ( "Impossible" )
    else :
        ans = ""
        honest = getHonest ( )
        for i in range ( n ) :
            ans += '1' if q ( honest , i ) else '0'
        print ( "! " + ans )
def getHonest ( ) :
    global b , n , read
    dis = b + 1
    list = queue . Queue ( )
    for i in range ( n ) :
        if list . empty ( ) :
            list . put ( i )
        else :
            if q ( list . queue [ 0 ] , i ) :
                list . put ( i )
            else :
                list . get ( )
                dis -= 1
        if list . qsize ( ) >= dis :
            return list . get ( )
    return - 1
def q ( a , b ) :
    global read
    print ( "? " + str ( a ) + " " + str ( b ) )
    return read [ input ( ) ] == "Y"
if __name__ == "__main__" :
    main ( )


---> console_out:
Impossible
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1034
---> probID: codeforces_242_A
---> inputs:
3 2 1 1
---> outputs:
3
2 1
3 1
3 2

import sys
x , y , a , b = map ( int , input ( ) . split ( ) )
res = [ ]
for i in range ( a , x + 1 ) :
    for j in range ( b , y + 1 ) :
        if i <= j :
            continue
        res . append ( str ( i ) + " " + str ( j ) )
print ( len ( res ) )
for s in res :
    print ( s )
sys . stdout . flush ( )


---> console_out:
3
2 1
3 1
3 2
 
MATCHED!! :D
 59%|█████▉    | 1034/1746 [12:40<00:48, 14.64it/s]

-------------------------------------


---> lineNum: 1035
---> probID: geeksforgeeks_215_A
---> inputs:

---> outputs:
8


mod = 1000000007
def mult ( a , b ) :
    return ( ( a % mod ) * ( b % mod ) ) % mod
def calculate_factors ( n ) :
    ans = 1
    cnt = 0
    while n % 2 == 0 :
        cnt += 1
        n //= 2
    if cnt % 2 == 1 :
        ans = mult ( ans , cnt + 1 )
    i = 3
    while i <= int ( n ** 0.5 ) + 1 :
        cnt = 0
        while n % i == 0 :
            cnt += 1
            n //= i
        if cnt % 2 == 1 :
            ans = mult ( ans , cnt + 1 )
        i += 2
    if n > 2 :
        ans = mult ( ans , 2 )
    return ans % mod
n = 193748576239475639
mod = 17
print ( calculate_factors ( n ) )


---> console_out:
8
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784447281_7993/main.py", line 9, in <module>
    if s [ i ] == '-' and s [ i + 1 ] == '.' :
IndexError: string index out of range
out1,out2  120


-------------------------------------


---> lineNum: 1036
---> probID: codeforces_32_B
---> inputs:
.-.--
---> outputs:
012

import sys
s = input ( )
str = ""
i = 0
while i < len ( s ) :
    if s [ i ] == '.' :
        str += '0'
    else :
        if s [ i ] == '-' and s [ i + 1 ] == '.' :
            str += '1'
            i += 1
        else :
            str += '2'
    i += 1
print ( str )


---> console_out:
 
DIDN'T MATCH!! :(
 59%|█████▉    | 1036/1746 [12:42<03:39,  3.23it/s]

-------------------------------------


---> lineNum: 1037
---> probID: geeksforgeeks_756_A
---> inputs:

---> outputs:
4


def maxAbsDiff ( arr , n ) :
    minEle = arr [ 0 ]
    maxEle = arr [ 0 ]
    for i in range ( 1 , n ) :
        minEle = min ( minEle , arr [ i ] )
        maxEle = max ( maxEle , arr [ i ] )
    return ( maxEle - minEle )
if __name__ == '__main__' :
    arr = [ 2 , 1 , 5 , 3 ]
    n = len ( arr )
    print ( maxAbsDiff ( arr , n ) )


---> console_out:
4
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784447439_5960/main.py", line 3, in <module>
    a , b , c , N = map ( int , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 4, got 3)
out1,out2  201010001000


-------------------------------------


---> lineNum: 1038
---> probID: aizu_p00437_A
---> inputs:
2 2 2
4
2 4 5 0
2 3 6 0
1 4 5 0
2 3 5 1
0 0 0
---> outputs:
2
1
1
0
1
0

import sys
while True :
    a , b , c , N = map ( int , input ( ) . split ( ) )
    if a == 0 and b == 0 and c == 0 :
        sys . exit ( 0 )
    checking = [ 0 ] * ( a + b + c )
    temp = [ ]
    for j in range ( 2 ) :
        for i in range ( N ) :
            if j == 0 :
                a1 , b1 , c1 , check = map ( int , input ( ) . split ( ) )
                if check == 1 :
                    checking [ a1 - 1 ] = 1
                    checking [ b1 - 1 ] = 1
                    checking [ c1 - 1 ] = 1
                else :
                    temp . extend ( [ a1 , b1 , c1 ] )
            else :
                if not temp :
                    break
                a2 = temp . pop ( 0 )
                b2 = temp . pop ( 0 )
                c2 = temp . pop ( 0 )
                if checking [ a2 - 1 ] + checking [ b2 - 1 ] + checking [ c2 - 1 ] == 2 :
                    if checking [ a2 - 1 ] != 1 :
                        checking [ a2 - 1 ] = 3
                    elif checking [ b2 - 1 ] != 1 :
                        checking [ b2 - 1 ] = 3
                    else :
                        checking [ c2 - 1 ] = 3
    for contents in checking :
        if contents == 3 :
            result = 0
        elif contents == 0 :
            result = 2
        else :
            result = 1
        print ( result )


---> console_out:
 
DIDN'T MATCH!! :(
 59%|█████▉    | 1038/1746 [12:42<02:50,  4.16it/s]

-------------------------------------


---> lineNum: 1039
---> probID: geeksforgeeks_1903_A
---> inputs:

---> outputs:
3


import collections
def minRemove ( a , b , n , m ) :
    countA = collections . Counter ( a )
    countB = collections . Counter ( b )
    res = 0
    for x in countA :
        if x in countB :
            res += min ( countB [ x ] , countA [ x ] )
    return res
a = [ 1 , 2 , 3 , 4 ]
b = [ 2 , 3 , 4 , 5 , 8 ]
n = len ( a )
m = len ( b )
print ( minRemove ( a , b , n , m ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1040
---> probID: geeksforgeeks_798_A
---> inputs:

---> outputs:
13
108


import numpy as np
def count ( pos , firstD , lastD , tight , num , dp ) :
    if pos == len ( num ) :
        if firstD == lastD :
            return 1
        return 0
    if dp [ pos ] [ firstD ] [ lastD ] [ tight ] != - 1 :
        return dp [ pos ] [ firstD ] [ lastD ] [ tight ]
    ans = 0
    limit = 9 if tight == 1 else num [ pos ]
    for dig in range ( limit + 1 ) :
        currFirst = firstD
        if pos == 0 :
            currFirst = dig
        if currFirst == 0 and dig != 0 :
            currFirst = dig
        currTight = tight
        if dig < num [ pos ] :
            currTight = 1
        ans += count ( pos + 1 , currFirst , dig , currTight , num , dp )
    dp [ pos ] [ firstD ] [ lastD ] [ tight ] = ans
    return ans
def solve ( x ) :
    M = 20
    num = [ int ( d ) for d in str ( x ) ]
    dp = np . full ( ( M , M , M , 2 ) , - 1 )
    return count ( 0 , 0 , 0 , 0 , num , dp )
if __name__ == '__main__' :
    L , R = 2 , 60
    print ( solve ( R ) - solve ( L - 1 ) )
    L , R = 1 , 1000
    print ( solve ( R ) - solve ( L - 1 ) )


---> console_out:
13
108
 
MATCHED!! :D
 60%|█████▉    | 1040/1746 [12:42<02:34,  4.58it/s]Traceback (most recent call last):
  File "./junk/1703784447836_9785/main.py", line 6, in <module>
    s = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '0 1 0'
out1,out2  10


-------------------------------------


---> lineNum: 1041
---> probID: codeforces_617_B
---> inputs:
3
0 1 0
---> outputs:
1

import sys
num = int ( input ( ) )
old = - 1
ans = 0
for i in range ( num ) :
    s = int ( input ( ) )
    if s == 1 :
        if old >= 0 :
            ans *= ( i - old )
        else :
            ans = 1
        old = i
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1042
---> probID: geeksforgeeks_1347_A
---> inputs:

---> outputs:
4


import math
def bit ( x ) :
    ans = 0
    while x > 0 :
        x //= 2
        ans += 1
    return ans
def check ( d , x ) :
    if bit ( x // d ) <= bit ( d ) :
        return True
    return False
def bs ( n ) :
    l = 1
    r = int ( math . sqrt ( n ) )
    while l < r :
        m = ( l + r ) // 2
        if check ( m , n ) :
            r = m
        else :
            l = m + 1
    if not check ( l , n ) :
        return l + 1
    else :
        return l
def countDivisor ( n ) :
    return n - bs ( n ) + 1
n = 5
print ( countDivisor ( n ) )


---> console_out:
4
 
MATCHED!! :D
 60%|█████▉    | 1042/1746 [12:42<02:00,  5.82it/s]out1,out2 20 40


-------------------------------------


---> lineNum: 1043
---> probID: geeksforgeeks_4102_A
---> inputs:

---> outputs:
4


import sys
def minimalSteps ( s , n ) :
    dp = [ sys . maxsize ] * n
    s1 , s2 = "" , ""
    dp [ 0 ] = 1
    s1 += s [ 0 ]
    for i in range ( 1 , n ) :
        s1 += s [ i ]
        s2 = s [ i + 1 : ]
        dp [ i ] = min ( dp [ i ] , dp [ i - 1 ] + 1 )
        if s1 == s2 :
            dp [ i * 2 + 1 ] = min ( dp [ i ] + 1 , dp [ i * 2 + 1 ] )
    return dp [ n - 1 ]
if __name__ == "__main__" :
    s = "aaaaaaaa"
    n = len ( s )
    print ( minimalSteps ( s , n ) // 2 )


---> console_out:
2
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1044
---> probID: geeksforgeeks_2399_A
---> inputs:

---> outputs:
No


def checkUtil ( num , dig , base ) :
    if dig == 1 and num < base :
        return True
    if dig > 1 and num >= base :
        return checkUtil ( num // base , dig - 1 , base )
    return False
def check ( num , dig ) :
    for base in range ( 2 , 33 ) :
        if checkUtil ( num , dig , base ) :
            return True
    return False
num = 8
dig = 3
if check ( num , dig ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
No
 
MATCHED!! :D
 60%|█████▉    | 1044/1746 [12:42<01:37,  7.23it/s]

-------------------------------------


---> lineNum: 1045
---> probID: geeksforgeeks_3847_A
---> inputs:

---> outputs:
5 3 3 2 1 

def printArray ( arr , n ) :
    for i in range ( n ) :
        print ( arr [ i ] , end = " " )
def getMin ( arr , i , j ) :
    minVal = arr [ i ]
    i += 1
    while i <= j :
        minVal = min ( minVal , arr [ i ] )
        i += 1
    return minVal
def getMax ( arr , i , j ) :
    maxVal = arr [ i ]
    i += 1
    while i <= j :
        maxVal = max ( maxVal , arr [ i ] )
        i += 1
    return maxVal
def generateArr ( arr , n ) :
    if n == 0 :
        return
    if n == 1 :
        print ( arr [ 0 ] )
        return
    tmpArr = [ 0 ] * n
    tmpArr [ 0 ] = getMax ( arr , 1 , n - 1 )
    for i in range ( 1 , n - 1 ) :
        tmpArr [ i ] = abs ( getMax ( arr , i + 1 , n - 1 ) - getMin ( arr , 0 , i - 1 ) )
    tmpArr [ n - 1 ] = getMin ( arr , 0 , n - 2 )
    printArray ( tmpArr , n )
arr = [ 1 , 5 , 2 , 4 , 3 ]
n = len ( arr )
generateArr ( arr , n )


---> console_out:
5 3 3 2 1  
MATCHED!! :D


-------------------------------------


---> lineNum: 1046
---> probID: codeforces_632_B
---> inputs:
5
1 2 3 4 5
ABABA
---> outputs:
11

import sys
n = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
s = input ( )
sum = 0
for i in range ( len ( s ) ) :
    if s [ i ] == 'B' :
        sum += a [ i ]
ans = sum
sum1 = sum
for i in range ( len ( s ) ) :
    if s [ i ] == 'A' :
        sum1 += a [ i ]
    else :
        sum1 -= a [ i ]
    ans = max ( ans , sum1 )
sum1 = sum
for i in range ( len ( s ) - 1 , - 1 , - 1 ) :
    if s [ i ] == 'A' :
        sum1 += a [ i ]
    else :
        sum1 -= a [ i ]
    ans = max ( ans , sum1 )
print ( ans )


---> console_out:
11
 
MATCHED!! :D
 60%|█████▉    | 1046/1746 [12:43<01:20,  8.65it/s]

-------------------------------------


---> lineNum: 1047
---> probID: aizu_p00021_A
---> inputs:
2
0.0 0.0 1.0 1.0 1.0 0.0 2.0 1.0
3.0 2.0 9.0 6.0 13.0 5.0 7.0 9.0
---> outputs:
YES
NO

import sys
for line in sys . stdin :
    n = int ( line )
    for i in range ( n ) :
        xa , ya , xb , yb , xc , yc , xd , yd = map ( float , input ( ) . split ( ) )
        katamukiab = ( yb - ya ) / ( xb - xa )
        katamukicd = ( yd - yc ) / ( xd - xc )
        if katamukiab == katamukicd :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
YES
NO
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1048
---> probID: geeksforgeeks_643_A
---> inputs:

---> outputs:
2


def nthXorFib ( n , a , b ) :
    if n == 0 :
        return a
    if n == 1 :
        return b
    if n == 2 :
        return a ^ b
    return nthXorFib ( n % 3 , a , b )
a , b , n = 1 , 2 , 10
print ( nthXorFib ( n , a , b ) )


---> console_out:
2
 
MATCHED!! :D
 60%|██████    | 1048/1746 [12:43<01:09, 10.05it/s]

-------------------------------------


---> lineNum: 1049
---> probID: aizu_p02421_A
---> inputs:
3
cat dog
fish fish
lion tiger
---> outputs:
1 7

import sys
n = int ( input ( ) )
player1 = 0
player2 = 0
for i in range ( n ) :
    card1 , card2 = input ( ) . split ( )
    if card1 > card2 :
        player1 += 3
    elif card1 < card2 :
        player2 += 3
    else :
        player1 += 1
        player2 += 1
print ( player1 , player2 )


---> console_out:
1 7
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1050
---> probID: geeksforgeeks_2313_A
---> inputs:

---> outputs:
28.328653012


import math
def Area ( a ) :
    if a < 0 :
        return - 1
    h = 1.268 * a
    A = 0.70477 * math . pow ( h , 2 )
    return A
a = 5
print ( Area ( a ) )


---> console_out:
28.328653012
 
MATCHED!! :D
 60%|██████    | 1050/1746 [12:43<01:01, 11.32it/s]Traceback (most recent call last):
  File "./junk/1703784448458_4553/main.py", line 16, in <module>
    p . main ( )
  File "./junk/1703784448458_4553/main.py", line 5, in main
    print ( self . run ( ) )
  File "./junk/1703784448458_4553/main.py", line 7, in run
    return str ( self . sternBrocotCount ( 1 , 3 , 1 , 2 ) )
  File "./junk/1703784448458_4553/main.py", line 14, in sternBrocotCount
    return 1 + self . sternBrocotCount ( leftN , leftD , n , d ) + self . sternBrocotCount ( n , d , rightN , rightD )
  File "./junk/1703784448458_4553/main.py", line 14, in sternBrocotCount
    return 1 + self . sternBrocotCount ( leftN , leftD , n , d ) + self . sternBrocotCount ( n , d , rightN , rightD )
  File "./junk/1703784448458_4553/main.py", line 14, in sternBrocotCount
    return 1 + self . sternBrocotCount ( leftN , leftD , n , d ) + self . sternBrocotCount ( n , d , rightN , rightD )
  [Previous line repeated 993 more times]
  File "./junk/1703784448458_4553/main.py", line 11, in sternBrocotCount
    if d > 12000 :
RecursionError: maximum recursion depth exceeded in comparison
out1,out2  72953720


-------------------------------------


---> lineNum: 1051
---> probID: projecteuler_p073_A
---> inputs:

---> outputs:
7295372

class p073 :
    def __init__ ( self ) :
        pass
    def main ( self ) :
        print ( self . run ( ) )
    def run ( self ) :
        return str ( self . sternBrocotCount ( 1 , 3 , 1 , 2 ) )
    def sternBrocotCount ( self , leftN , leftD , rightN , rightD ) :
        n = leftN + rightN
        d = leftD + rightD
        if d > 12000 :
            return 0
        else :
            return 1 + self . sternBrocotCount ( leftN , leftD , n , d ) + self . sternBrocotCount ( n , d , rightN , rightD )
p = p073 ( )
p . main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1052
---> probID: codeforces_1182_A
---> inputs:
4
---> outputs:
4

import sys
n = int ( input ( ) )
if n % 2 == 1 :
    print ( 0 )
else :
    print ( 2 ** ( n // 2 ) )
def find ( n ) :
    arr = [ 0 ] * ( 60 + 1 )
    arr [ 1 ] = 0
    arr [ 2 ] = 2
    for i in range ( 3 , n + 1 ) :
        arr [ i ] = arr [ i - 2 ] * 2
    return arr [ n ]


---> console_out:
4
 
MATCHED!! :D
 60%|██████    | 1052/1746 [12:43<00:57, 12.12it/s]

-------------------------------------


---> lineNum: 1053
---> probID: geeksforgeeks_1373_A
---> inputs:

---> outputs:
76127


def sieve ( prime , n ) :
    prime [ 0 ] = False
    prime [ 1 ] = False
    p = 2
    while p * p <= n :
        if prime [ p ] == True :
            i = p * p
            while i <= n :
                prime [ i ] = False
                i += p
        p += 1
def sumPrime ( d ) :
    maxVal = 10 ** d - 1
    prime = [ True ] * ( maxVal + 1 )
    sieve ( prime , maxVal )
    sum = 0
    for i in range ( 2 , maxVal + 1 ) :
        if prime [ i ] :
            sum += i
    return sum
d = 3
print ( sumPrime ( d ) )


---> console_out:
76127
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1054
---> probID: geeksforgeeks_515_A
---> inputs:

---> outputs:
6081


import math
def sieve ( prime , n ) :
    prime [ 0 ] = False
    prime [ 1 ] = False
    for p in range ( 2 , int ( math . sqrt ( n ) ) + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * p , n + 1 , p ) :
                prime [ i ] = False
def sumPrime ( d ) :
    maxVal = int ( math . pow ( 2 , d ) - 1 )
    prime = [ True ] * ( maxVal + 1 )
    sieve ( prime , maxVal )
    sum = 0
    for i in range ( 2 , maxVal + 1 ) :
        if prime [ i ] :
            sum += i
    return sum
d = 8
print ( sumPrime ( d ) )


---> console_out:
6081
 
MATCHED!! :D
 60%|██████    | 1054/1746 [12:43<00:53, 13.04it/s]

-------------------------------------


---> lineNum: 1055
---> probID: codeforces_1334_B
---> inputs:
4
4 3
5 1 2 1
4 10
11 9 11 9
2 5
4 3
3 7
9 4 9
---> outputs:
2
4
0
3

import sys
test = int ( input ( ) )
for t in range ( test ) :
    n , k = map ( int , input ( ) . split ( ) )
    lst = list ( map ( int , input ( ) . split ( ) ) )
    lst . sort ( )
    div = 1
    count = 0
    sm = 0
    for i in range ( n - 1 , - 1 , - 1 ) :
        sm += lst [ i ]
        if sm / div >= k :
            count += 1
            div += 1
        else :
            break
    print ( count )


---> console_out:
2
4
0
3
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784448805_4607/main.py", line 12, in <module>
    age_difference ( )
  File "./junk/1703784448805_4607/main.py", line 5, in age_difference
    d2 = date ( d [ 3 ] , d [ 4 ] , d [ 5 ] )
IndexError: list index out of range
out1,out2  30


-------------------------------------


---> lineNum: 1056
---> probID: aizu_p00365_A
---> inputs:
1999 9 9
2001 11 3
---> outputs:
3

from datetime import date
def age_difference ( ) :
    d = list ( map ( int , input ( ) . split ( ) ) )
    d1 = date ( d [ 0 ] , d [ 1 ] , d [ 2 ] )
    d2 = date ( d [ 3 ] , d [ 4 ] , d [ 5 ] )
    age_diff = abs ( ( d2 - d1 ) . days // 365 )
    if d [ 1 ] == d [ 4 ] and d [ 2 ] == d [ 5 ] :
        print ( age_diff )
    else :
        print ( age_diff + 1 )
if __name__ == '__main__' :
    age_difference ( )


---> console_out:
 
DIDN'T MATCH!! :(
 60%|██████    | 1056/1746 [12:43<00:52, 13.16it/s]

-------------------------------------


---> lineNum: 1057
---> probID: geeksforgeeks_3326_A
---> inputs:

---> outputs:
4


import math
def maxPartitions ( arr , n ) :
    ans = 0
    max_so_far = 0
    for i in range ( n ) :
        max_so_far = max ( max_so_far , arr [ i ] )
        if max_so_far == i :
            ans += 1
    return ans
if __name__ == '__main__' :
    arr = [ 1 , 0 , 2 , 3 , 4 ]
    n = len ( arr )
    print ( maxPartitions ( arr , n ) )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1058
---> probID: geeksforgeeks_3583_A
---> inputs:

---> outputs:
3


import math
def countMaxContiguous ( arr , n ) :
    current_max = 0
    max_so_far = 0
    for i in range ( n ) :
        if arr [ i ] % 2 != 0 :
            current_max = 0
        else :
            current_max += 1
            max_so_far = max ( current_max , max_so_far )
    return max_so_far
arr = [ 1 , 0 , 2 , 4 , 3 , 8 , 9 ]
n = len ( arr )
print ( countMaxContiguous ( arr , n ) )


---> console_out:
3
 
MATCHED!! :D
 61%|██████    | 1058/1746 [12:43<00:49, 13.95it/s]

-------------------------------------


---> lineNum: 1059
---> probID: geeksforgeeks_1420_A
---> inputs:

---> outputs:
3.1461269285965052 



import math
def cube ( h , r ) :
    if h < 0 and r < 0 :
        return - 1
    a = ( h * r * math . sqrt ( 2 ) ) / ( h + math . sqrt ( 2 ) * r )
    return a
h = 5
r = 6
print ( cube ( h , r ) )


---> console_out:
3.1461269285965052
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1060
---> probID: geeksforgeeks_4310_A
---> inputs:

---> outputs:
1 2 3 4 5 6 7 
 2 3 4 5 6 7 
  3 4 5 6 7 
   4 5 6 7 
    5 6 7 
     6 7 
      7 
     6 7 
    5 6 7 
   4 5 6 7 
  3 4 5 6 7 
 2 3 4 5 6 7 
1 2 3 4 5 6 7 


import sys
def pattern ( rows_no ) :
    for i in range ( 1 , rows_no + 1 ) :
        for k in range ( 1 , i ) :
            sys . stdout . write ( " " )
        for j in range ( i , rows_no + 1 ) :
            sys . stdout . write ( str ( j ) + " " )
        sys . stdout . write ( "\n" )
    for i in range ( rows_no - 1 , 0 , - 1 ) :
        for k in range ( 1 , i ) :
            sys . stdout . write ( " " )
        for j in range ( i , rows_no + 1 ) :
            sys . stdout . write ( str ( j ) + " " )
        sys . stdout . write ( "\n" )
if __name__ == "__main__" :
    rows_no = 7
    pattern ( rows_no )


---> console_out:
1 2 3 4 5 6 7 
 2 3 4 5 6 7 
  3 4 5 6 7 
   4 5 6 7 
    5 6 7 
     6 7 
      7 
     6 7 
    5 6 7 
   4 5 6 7 
  3 4 5 6 7 
 2 3 4 5 6 7 
1 2 3 4 5 6 7 
 
MATCHED!! :D
 61%|██████    | 1060/1746 [12:43<00:47, 14.42it/s]

-------------------------------------


---> lineNum: 1061
---> probID: atcoder_AGC025_A
---> inputs:
7392
---> outputs:
21

import sys
n = input ( )
for i in range ( 1 , len ( n ) ) :
    if n [ i ] != '0' :
        sum = 0
        for j in range ( len ( n ) ) :
            sum += int ( n [ j ] )
        print ( sum )
        sys . exit ( )
if n [ 0 ] == '1' :
    print ( 10 )
    sys . exit ( )
print ( n [ 0 ] )


---> console_out:
21
 
MATCHED!! :D
out1,out2  31110


-------------------------------------


---> lineNum: 1062
---> probID: geeksforgeeks_2232_A
---> inputs:

---> outputs:
3111


class Geeks :
    @ staticmethod
    def check_digits ( n ) :
        while n > 0 :
            if ( n % 10 ) % 2 == 0 :
                return 0
            n //= 10
        return 1
    @ staticmethod
    def smallest_number ( n ) :
        i = n
        while True :
            if Geeks . check_digits ( i ) > 0 :
                return i
            i += 1
    @ staticmethod
    def main ( args ) :
        N = 2397
        print ( Geeks . smallest_number ( N ) )


---> console_out:
 
DIDN'T MATCH!! :(
 61%|██████    | 1062/1746 [12:44<00:47, 14.47it/s]

-------------------------------------


---> lineNum: 1063
---> probID: geeksforgeeks_2030_A
---> inputs:

---> outputs:
2400


def check_digits ( n ) :
    while n != 0 :
        if ( n % 10 ) % 2 != 0 :
            return 0
        n //= 10
    return 1
def smallest_number ( n ) :
    i = n
    while True :
        if check_digits ( i ) != 0 :
            return i
        i += 1
N = 2397
print ( smallest_number ( N ) )


---> console_out:
2400
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1064
---> probID: geeksforgeeks_5127_A
---> inputs:

---> outputs:
1 3 6 10 15 

import math
def triangular_series ( n ) :
    j = 1
    k = 1
    for i in range ( 1 , n + 1 ) :
        print ( k , end = " " )
        j += 1
        k += j
n = 5
triangular_series ( n )


---> console_out:
1 3 6 10 15  
MATCHED!! :D
 61%|██████    | 1064/1746 [12:44<00:45, 14.90it/s]

-------------------------------------


---> lineNum: 1065
---> probID: codeforces_609_B
---> inputs:
4 3
2 1 3 1
---> outputs:
5

import sys
def getNumberOfWays1 ( arr , n ) :
    count = 0
    for i in range ( len ( arr ) ) :
        count += arr [ i ] * ( n - arr [ i ] )
    return count // 2
def sumNatual ( n ) :
    return ( n * ( n + 1 ) ) // 2
def getNumberOfWays2 ( arr , n ) :
    t = sumNatual ( n )
    for x in arr :
        t -= sumNatual ( x )
    return t
if __name__ == "__main__" :
    str = input ( ) . split ( )
    n = int ( str [ 0 ] )
    m = int ( str [ 1 ] )
    arr = [ 0 ] * m
    str = input ( ) . split ( )
    for i in range ( n ) :
        arr [ int ( str [ i ] ) - 1 ] += 1
    print ( getNumberOfWays2 ( arr , n ) )


---> console_out:
5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1066
---> probID: geeksforgeeks_4474_A
---> inputs:

---> outputs:
Position of n'th multiple of k in Fibonacci Series is 30


def findPosition ( k , n ) :
    f1 , f2 = 0 , 1
    i = 2
    while i != 0 :
        f3 = f1 + f2
        f1 = f2
        f2 = f3
        if f2 % k == 0 :
            return n * i
        i += 1
    return 0
if __name__ == '__main__' :
    n = 5
    k = 4
    print ( "Position of n'th multiple of k in Fibonacci Series is " , findPosition ( k , n ) )


---> console_out:
Position of n'th multiple of k in Fibonacci Series is  30
 
MATCHED!! :D
 61%|██████    | 1066/1746 [12:44<00:44, 15.26it/s]

-------------------------------------


---> lineNum: 1067
---> probID: atcoder_ABC048_D
---> inputs:
aba
---> outputs:
Second

import sys
s = input ( )
len_s = len ( s )
n = 0
c = 0
ans = ""
e = [ False ] * 26
for i in range ( len_s ) :
    if not e [ ord ( s [ i ] ) - 97 ] :
        n += 1
    e [ ord ( s [ i ] ) - 97 ] = True
if n == 2 :
    c = 0
else :
    c = len_s - 2
    if s [ 0 ] == s [ len_s - 1 ] :
        c -= 1
if c % 2 == 0 :
    ans = "Second"
else :
    ans = "First"
print ( ans )


---> console_out:
Second
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1068
---> probID: geeksforgeeks_5091_A
---> inputs:

---> outputs:
3


import sys
def countMinimumMoves ( arr , n , k ) :
    for i in range ( k - 1 , n ) :
        if arr [ i ] != arr [ k - 1 ] :
            return - 1
    for i in range ( k - 1 , - 1 , - 1 ) :
        if arr [ i ] != arr [ k - 1 ] :
            return i + 1
    return 0
if __name__ == "__main__" :
    arr = [ 1 , 2 , 3 , 4 ]
    K = 4
    n = len ( arr )
    print ( countMinimumMoves ( arr , n , K ) )


---> console_out:
3
 
MATCHED!! :D
 61%|██████    | 1068/1746 [12:44<00:45, 14.98it/s]

-------------------------------------


---> lineNum: 1069
---> probID: geeksforgeeks_919_A
---> inputs:

---> outputs:
1


import math
def power ( x , y , p ) :
    res = 1
    x = x % p
    while y > 0 :
        if y & 1 != 0 :
            res = ( res * x ) % p
        y = y >> 1
        x = ( x * x ) % p
    return res
def gcd ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )
def powerGCD ( a , b , n ) :
    e = power ( a , n , b )
    return gcd ( e , b )
a = 5
b = 4
n = 2
print ( powerGCD ( a , b , n ) )


---> console_out:
1
 
MATCHED!! :D
out1,out2  20


-------------------------------------


---> lineNum: 1070
---> probID: codeforces_569_A
---> inputs:
5 2 2
---> outputs:
2

import sys
import math
class Main :
    def main ( ) :
        inputStream = sys . stdin . buffer
        outputStream = sys . stdout . buffer
        in_ = InputReader ( inputStream )
        out = OutputWriter ( outputStream )
        solver = TaskA ( )
        solver . solve ( 1 , in_ , out )
        out . close ( )
    class TaskA :
        def solve ( self , testNumber , in_ , out ) :
            t = in_ . nextInt ( )
            s = in_ . nextInt ( )
            q = in_ . nextInt ( )
            sum_ = 0
            while s < t :
                s *= q
                sum_ += 1
            out . println ( sum_ )
    class InputReader :
        def __init__ ( self , stream ) :
            self . reader = stream . readline
            self . tokenizer = None
        def hasNext ( self ) :
            while self . tokenizer is None or not self . tokenizer . hasMoreTokens ( ) :
                self . tokenizer = self . reader ( ) . split ( )
            return True
        def next ( self ) :
            while self . tokenizer is None or not self . tokenizer . hasMoreTokens ( ) :
                self . tokenizer = self . reader ( ) . split ( )
            return self . tokenizer . pop ( 0 )
        def nextInt ( self ) :
            return int ( self . next ( ) )
        def nextDouble ( self ) :
            return float ( self . next ( ) )
        def nextLong ( self ) :
            return int ( self . next ( ) )
        def nextBigInteger ( self ) :
            return int ( self . next ( ) )
        def nextBigDecimal ( self ) :
            return float ( self . next ( ) )
    class OutputWriter :
        def __init__ ( self , stream ) :
            self . writer = stream . write
        def print ( self , * args , ** kwargs ) :
            sep = kwargs . get ( 'sep' , ' ' )
            end = kwargs . get ( 'end' , '\n' )
            for i , x in enumerate ( args ) :
                if i > 0 :
                    self . writer ( sep )
                self . writer ( str ( x ) )
            self . writer ( end )
        def println ( self , * args , ** kwargs ) :
            sep = kwargs . get ( 'sep' , ' ' )
            end = kwargs . get ( 'end' , '\n' )
            for i , x in enumerate ( args ) :
                if i > 0 :
                    self . writer ( sep )
                self . writer ( str ( x ) )
            self . writer ( end )
        def flush ( self ) :
            self . writer . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(
 61%|██████▏   | 1070/1746 [12:44<00:44, 15.05it/s]

-------------------------------------


---> lineNum: 1071
---> probID: codeforces_592_B
---> inputs:
5
---> outputs:
9

import sys
n = int ( sys . stdin . readline ( ) )
s = n - 2
print ( s * s )


---> console_out:
9
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1072
---> probID: geeksforgeeks_451_A
---> inputs:

---> outputs:
2


from typing import List
def countIdenticalRows ( mat : List [ List [ int ] ] ) -> int :
    count = 0
    for i in range ( len ( mat ) ) :
        hs = set ( )
        for j in range ( len ( mat [ i ] ) ) :
            hs . add ( mat [ i ] [ j ] )
        if len ( hs ) == 1 :
            count += 1
    return count
if __name__ == '__main__' :
    mat = [ [ 1 , 1 , 1 ] , [ 1 , 2 , 3 ] , [ 5 , 5 , 5 ] ]
    print ( countIdenticalRows ( mat ) )


---> console_out:
2
 
MATCHED!! :D
 61%|██████▏   | 1072/1746 [12:44<00:45, 14.85it/s]

-------------------------------------


---> lineNum: 1073
---> probID: geeksforgeeks_1533_A
---> inputs:

---> outputs:
2 4 5 8 9 

import bisect
def createSorted ( a , n ) :
    b = [ ]
    for j in range ( n ) :
        if not b :
            b . append ( a [ j ] )
        else :
            pos = bisect . bisect_left ( b , a [ j ] )
            if pos < len ( b ) and b [ pos ] == a [ j ] :
                b . insert ( pos + 1 , a [ j ] )
            else :
                b . insert ( pos , a [ j ] )
    for i in range ( n ) :
        print ( b [ i ] , end = " " )
if __name__ == "__main__" :
    a = [ 2 , 5 , 4 , 9 , 8 ]
    n = len ( a )
    createSorted ( a , n )


---> console_out:
2 4 5 8 9  
MATCHED!! :D


-------------------------------------


---> lineNum: 1074
---> probID: geeksforgeeks_2734_A
---> inputs:

---> outputs:
18


from collections import defaultdict
def countTotalDistinct ( str ) :
    cnt = 0
    items = set ( )
    for i in range ( len ( str ) ) :
        temp = ""
        ans = set ( )
        for j in range ( i , len ( str ) ) :
            temp += str [ j ]
            ans . add ( str [ j ] )
            if temp not in items :
                items . add ( temp )
                cnt += len ( ans )
    return cnt
str = "ABCA"
print ( countTotalDistinct ( str ) )


---> console_out:
18
 
MATCHED!! :D
 62%|██████▏   | 1074/1746 [12:44<00:44, 15.20it/s]

-------------------------------------


---> lineNum: 1075
---> probID: geeksforgeeks_3049_A
---> inputs:

---> outputs:
9 2


import math
def firstDigit ( n ) :
    digits = int ( math . log10 ( n ) )
    n = int ( n / ( 10 ** digits ) )
    return n
def lastDigit ( n ) :
    return n % 10
n = 98562
print ( firstDigit ( n ) , lastDigit ( n ) )


---> console_out:
9 2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1076
---> probID: geeksforgeeks_5147_A
---> inputs:

---> outputs:
1 2 0 3 

import numpy as np
def removeZeros ( a , n ) :
    ind = - 1
    for i in range ( n ) :
        if a [ i ] != 0 :
            ind = i
            break
    if ind == - 1 :
        print ( "Array has leading zeros only" )
        return
    b = np . zeros ( n - ind , dtype = int )
    for i in range ( n - ind ) :
        b [ i ] = a [ ind + i ]
    for i in range ( n - ind ) :
        print ( b [ i ] , end = " " )
a = np . array ( [ 0 , 0 , 0 , 1 , 2 , 0 , 3 ] )
n = len ( a )
removeZeros ( a , n )


---> console_out:
1 2 0 3  
MATCHED!! :D
 62%|██████▏   | 1076/1746 [12:45<01:03, 10.56it/s]

-------------------------------------


---> lineNum: 1077
---> probID: geeksforgeeks_2409_A
---> inputs:

---> outputs:
3


import collections
def find_maxm ( arr , n ) :
    mp = collections . defaultdict ( int )
    for i in range ( n ) :
        if arr [ i ] in mp :
            mp [ arr [ i ] ] += 1
        else :
            mp [ arr [ i ] ] = 1
    ans = 0
    for value , freq in mp . items ( ) :
        if value == freq :
            ans = max ( ans , value )
    return ans
if __name__ == '__main__' :
    arr = [ 3 , 2 , 2 , 3 , 4 , 3 ]
    n = len ( arr )
    print ( find_maxm ( arr , n ) )


---> console_out:
3
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784450432_3975/main.py", line 31, in <module>
    print ( solve ( arr ) )
  File "./junk/1703784450432_3975/main.py", line 14, in solve
    for x in range ( n + 1 , len ( bit ) , x & - x ) :
UnboundLocalError: local variable 'x' referenced before assignment
out1,out2  300


-------------------------------------


---> lineNum: 1078
---> probID: atcoder_ABC107_D
---> inputs:
3
10 30 20
---> outputs:
30

import sys
from bisect import bisect_left
def solve ( arr ) :
    n = len ( arr )
    sorted_arr = sorted ( arr )
    total = n * ( n + 1 ) // 2
    l , r = 0 , n - 1
    while l < r :
        mid = l + ( r - l ) // 2
        target = sorted_arr [ mid ]
        cur = 0
        cnt = 0
        bit = [ 0 ] * ( 2 * n + 2 )
        for x in range ( n + 1 , len ( bit ) , x & - x ) :
            bit [ x ] += 1
        for i in range ( n ) :
            cur += 1 if arr [ i ] <= target else - 1
            for x in range ( cur + n + 1 , len ( bit ) , x & - x ) :
                bit [ x ] += 1
            for x in range ( cur + n , 0 , x & - x ) :
                cnt += bit [ x ]
        if cnt >= total // 2 + 1 :
            r = mid
        else :
            l = mid + 1
    return sorted_arr [ l ]
if __name__ == "__main__" :
    input = sys . stdin . readline
    n = int ( input ( ) )
    arr = list ( map ( int , input ( ) . split ( ) ) )
    print ( solve ( arr ) )


---> console_out:
 
DIDN'T MATCH!! :(
 62%|██████▏   | 1078/1746 [12:45<00:57, 11.65it/s]

-------------------------------------


---> lineNum: 1079
---> probID: geeksforgeeks_1800_A
---> inputs:

---> outputs:
17


import math
def sumOfDigitsSingle ( x ) :
    ans = 0
    while x != 0 :
        ans += x % 10
        x //= 10
    return ans
def closest ( x ) :
    ans = 0
    while ans * 10 + 9 <= x :
        ans = ans * 10 + 9
    return ans
def sumOfDigitsTwoParts ( N ) :
    A = closest ( N )
    return sumOfDigitsSingle ( A ) + sumOfDigitsSingle ( N - A )
if __name__ == '__main__' :
    N = 35
    print ( sumOfDigitsTwoParts ( N ) )


---> console_out:
17
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1080
---> probID: aizu_p00123_A
---> inputs:
40.0 70.0
72.5 140.51
---> outputs:
B
NA

import sys
ca = [ 35.5 , 37.5 , 40 , 43 , 50 , 55 , 70 ]
cb = [ 71 , 77 , 83 , 89 , 105 , 116 , 148 ]
c = [ "AAA" , "AA" , "A" , "B" , "C" , "D" , "E" , "NA" ]
for line in sys . stdin :
    a , b = map ( float , line . split ( ) )
    ar = 100
    br = 100
    for i in range ( len ( ca ) ) :
        if ca [ i ] > a :
            ar = i
            break
    for i in range ( len ( cb ) ) :
        if cb [ i ] > b :
            br = i
            break
    ans = max ( ar , br )
    if ans == 100 :
        ans = len ( c ) - 1
    print ( c [ ans ] )


---> console_out:
B
NA
 
MATCHED!! :D
 62%|██████▏   | 1080/1746 [12:45<00:52, 12.73it/s]

-------------------------------------


---> lineNum: 1081
---> probID: codeforces_1415_A
---> inputs:
3
10 10 1 1
3 5 2 4
10 2 5 1
---> outputs:
18
4
6

import sys
for line in sys . stdin :
    t = int ( line )
    for i in range ( t ) :
        a , b , c , d = map ( int , input ( ) . split ( ) )
        res = max ( c - 1 , a - c ) + max ( d - 1 , b - d )
        print ( res )


---> console_out:
18
4
6
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1082
---> probID: codeforces_1399_A
---> inputs:
5
3
1 2 2
4
5 5 5 5
3
1 2 4
4
1 3 4 4
1
100
---> outputs:
YES
YES
NO
NO
YES

import numpy as np
t = int ( input ( ) )
for _ in range ( t ) :
    n = int ( input ( ) )
    arr = np . array ( input ( ) . split ( ) , dtype = int )
    arr . sort ( )
    i = 0
    while i < n - 1 :
        if arr [ i + 1 ] - arr [ i ] <= 1 :
            i += 1
        else :
            break
    if i == n - 1 :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
YES
YES
NO
NO
YES
 
MATCHED!! :D
 62%|██████▏   | 1082/1746 [12:45<01:11,  9.33it/s]out1,out2 10 10


-------------------------------------


---> lineNum: 1083
---> probID: geeksforgeeks_342_A
---> inputs:

---> outputs:
1


from math import sin
def cal_sin ( n ) :
    accuracy = 0.0001
    denominator = 0.0
    sinx = 0.0
    sinval = 0.0
    n = n * ( 3.142 / 180.0 )
    x1 = n
    sinx = n
    sinval = sin ( n )
    i = 1
    while accuracy <= abs ( sinval - sinx ) :
        denominator = 2 * i * ( 2 * i + 1 )
        x1 = - x1 * n * n / denominator
        sinx = sinx + x1
        i = i + 1
    print ( sinx )
if __name__ == '__main__' :
    n = 90
    cal_sin ( n )


---> console_out:
1.000003526884475
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1084
---> probID: geeksforgeeks_4319_A
---> inputs:

---> outputs:
720


arr = [ 1 , 2 , 3 , 4 , 5 , 6 ]
def multiply ( ) :
    pro = 1
    for i in range ( len ( arr ) ) :
        pro = pro * arr [ i ]
    return pro
print ( multiply ( ) )


---> console_out:
720
 
MATCHED!! :D
 62%|██████▏   | 1084/1746 [12:45<01:03, 10.37it/s]Traceback (most recent call last):
  File "./junk/1703784451109_2279/main.py", line 5, in <module>
    order_num = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 0'
out1,out2  1000100000100030130


-------------------------------------


---> lineNum: 1085
---> probID: aizu_p02425_A
---> inputs:
14
1 0
1 1
1 2
2 1
0 0
0 1
0 2
0 3
3 3
4
5
6
7
8
---> outputs:
1
0
1
0
0
1
0
3
13

import decimal
flag = [ False ] * 64
q = int ( input ( ) )
for j in range ( q ) :
    order_num = int ( input ( ) )
    if order_num <= 3 :
        n = int ( input ( ) )
    if order_num == 0 :
        print ( 1 if flag [ n ] else 0 )
    elif order_num == 1 :
        flag [ n ] = True
    elif order_num == 2 :
        flag [ n ] = False
    elif order_num == 3 :
        flag [ n ] = not flag [ n ]
    elif order_num == 4 :
        counter = 1
        for i in range ( 64 ) :
            if not flag [ i ] :
                counter = 0
                break
        print ( counter )
    elif order_num == 5 :
        counter = 0
        for i in range ( 64 ) :
            if flag [ i ] :
                counter = 1
                break
        print ( counter )
    elif order_num == 6 :
        counter = 1
        for i in range ( 64 ) :
            if flag [ i ] :
                counter = 0
                break
        print ( counter )
    elif order_num == 7 :
        counter = 0
        for i in range ( 64 ) :
            if flag [ i ] :
                counter += 1
        print ( counter )
    elif order_num == 8 :
        sum = decimal . Decimal ( 0 )
        big = decimal . Decimal ( 2 )
        for i in range ( 64 ) :
            if flag [ i ] :
                sum += big ** i
        print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1086
---> probID: geeksforgeeks_653_A
---> inputs:

---> outputs:
9


import math
def bit ( n ) :
    count = 0
    while n > 0 :
        count += 1
        n = n & ( n - 1 )
    return count
def maxSumOfBits ( arr , n ) :
    for i in range ( n ) :
        arr [ i ] = bit ( arr [ i ] )
    incl = arr [ 0 ]
    excl = 0
    excl_new = 0
    for i in range ( 1 , n ) :
        excl_new = max ( incl , excl )
        incl = excl + arr [ i ]
        excl = excl_new
    return max ( incl , excl )
arr = [ 1 , 2 , 4 , 5 , 6 , 7 , 20 , 25 ]
n = len ( arr )
print ( maxSumOfBits ( arr , n ) )


---> console_out:
9
 
MATCHED!! :D
 62%|██████▏   | 1086/1746 [12:46<01:01, 10.80it/s]  File "./junk/1703784451276_7963/main.py", line 6
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  40


-------------------------------------


---> lineNum: 1087
---> probID: codeforces_629_A
---> inputs:
3
.CC
C..
C.C
---> outputs:
4

import java . util . ArrayList
import java . util . Scanner
class JavaApplication70 :
    @ staticmethod
    def main ( args : Array [ str ] ) :
        sc = Scanner ( System . in )
        num = sc . nextInt ( )
        counter = 0
        fine = 0
        arr = ArrayList ( )
        for i in range ( num ) :
            s = sc . next ( )
            arr . add ( s )
        for i in range ( num ) :
            for k in range ( num ) :
                if arr . get ( k ) . charAt ( i ) == 'C' :
                    counter += 1
            fine += ( counter * ( counter - 1 ) ) / 2
            counter = 0
        for i in range ( num ) :
            for k in range ( num ) :
                if arr . get ( i ) . charAt ( k ) == 'C' :
                    counter += 1
            fine += ( counter * ( counter - 1 ) ) / 2
            counter = 0
        print ( fine )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1088
---> probID: geeksforgeeks_1539_A
---> inputs:

---> outputs:
Count = 6


def findMinIndex ( arr , low , high ) :
    if high < low :
        return 0
    if high == low :
        return low
    mid = ( low + high ) // 2
    if mid < high and arr [ mid + 1 ] < arr [ mid ] :
        return mid + 1
    if mid > low and arr [ mid ] < arr [ mid - 1 ] :
        return mid
    if arr [ high ] > arr [ mid ] :
        return findMinIndex ( arr , low , mid - 1 )
    return findMinIndex ( arr , mid + 1 , high )
def binary_search ( arr , l , h , x ) :
    while l <= h :
        mid = ( l + h ) // 2
        if arr [ mid ] <= x :
            l = mid + 1
        else :
            h = mid - 1
    return h
def countEleLessThanOrEqual ( arr , n , x ) :
    min_index = findMinIndex ( arr , 0 , n - 1 )
    if x <= arr [ n - 1 ] :
        return binary_search ( arr , min_index , n - 1 , x ) + 1 - min_index
    if min_index - 1 >= 0 and x <= arr [ min_index - 1 ] :
        return n - min_index + binary_search ( arr , 0 , min_index - 1 , x ) + 1
    return n
arr = [ 6 , 10 , 12 , 15 , 2 , 4 , 5 ]
n = len ( arr )
x = 14
print ( "Count =" , countEleLessThanOrEqual ( arr , n , x ) )


---> console_out:
Count = 6
 
MATCHED!! :D
 62%|██████▏   | 1088/1746 [12:46<00:55, 11.87it/s]

-------------------------------------


---> lineNum: 1089
---> probID: geeksforgeeks_2312_A
---> inputs:

---> outputs:
The final value of y at x = 1 is : 2.1839


import math
def f ( x , y ) :
    v = y - 2 * x * x + 1
    return v
def predict ( x , y , h ) :
    y1p = y + h * f ( x , y )
    return y1p
def correct ( x , y , x1 , y1 , h ) :
    e = 0.00001
    y1c = y1
    while abs ( y1c - y1 ) > e :
        y1 = y1c
        y1c = y + 0.5 * h * ( f ( x , y ) + f ( x1 , y1 ) )
    return y1c
def printFinalValues ( x , xn , y , h ) :
    while x < xn :
        x1 = x + h
        y1p = predict ( x , y , h )
        y1c = correct ( x , y , x1 , y1p , h )
        x = x1
        y = y1c
    print ( "The final value of y at x = {} is: {:.4f}" . format ( int ( x ) , y ) )
x = 0
y = 0.5
xn = 1
h = 0.2
printFinalValues ( x , xn , y , h )


---> console_out:
The final value of y at x = 1 is: 2.1839
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1090
---> probID: geeksforgeeks_4300_A
---> inputs:

---> outputs:
 ******  
 *     * 
 *     * 
 *     * 
 *     * 
 *     * 
 *     * 
 *     * 
 ******  



import math
def D_Pattern ( n ) :
    for i in range ( n ) :
        for j in range ( n + 1 ) :
            if j == 1 or ( ( i == 0 or i == n - 1 ) and ( j > 1 and j < n - 2 ) ) or ( j == n - 2 and i != 0 and i != n - 1 ) :
                print ( "*" , end = "" )
            else :
                print ( " " , end = "" )
        print ( )
n = 9
D_Pattern ( n )


---> console_out:
 ******   
 *     *  
 *     *  
 *     *  
 *     *  
 *     *  
 *     *  
 *     *  
 ******   
 
MATCHED!! :D
 62%|██████▏   | 1090/1746 [12:46<00:50, 12.90it/s]

-------------------------------------


---> lineNum: 1091
---> probID: geeksforgeeks_3859_A
---> inputs:

---> outputs:
xyxxy

def kthString ( n , k ) :
    total = 0
    i = 1
    while total < k :
        total = total + n - i
        i += 1
    first_y_position = i - 1
    second_y_position = k - ( total - n + first_y_position )
    for j in range ( 1 , first_y_position ) :
        print ( "x" , end = "" )
    print ( "y" , end = "" )
    j = first_y_position + 1
    while second_y_position > 1 :
        print ( "x" , end = "" )
        second_y_position -= 1
        j += 1
    print ( "y" , end = "" )
    while j < n :
        print ( "x" , end = "" )
        j += 1
n = 5
k = 7
kthString ( n , k )


---> console_out:
xyxxy 
MATCHED!! :D


-------------------------------------


---> lineNum: 1092
---> probID: geeksforgeeks_136_A
---> inputs:

---> outputs:
10


def binomialCoeff ( n , k ) :
    C = [ 0 ] * ( k + 1 )
    C [ 0 ] = 1
    for i in range ( 1 , n + 1 ) :
        for j in range ( min ( i , k ) , 0 , - 1 ) :
            C [ j ] = C [ j ] + C [ j - 1 ]
    return C [ k ]
def count_of_subarrays ( N ) :
    count = binomialCoeff ( 2 * N - 1 , N )
    return count
if __name__ == '__main__' :
    N = 3
    print ( count_of_subarrays ( N ) )


---> console_out:
10
 
MATCHED!! :D
 63%|██████▎   | 1092/1746 [12:46<00:47, 13.79it/s]Traceback (most recent call last):
  File "./junk/1703784451651_2452/main.py", line 2, in <module>
    class Solution :
  File "./junk/1703784451651_2452/main.py", line 3, in Solution
    def productExceptSelf ( self , nums : List [ int ] ) -> List [ int ] :
NameError: name 'List' is not defined
out1,out2  2401208060


-------------------------------------


---> lineNum: 1093
---> probID: leetcode_238_A
---> inputs:

---> outputs:
[24,12,8,6]

import numpy as np
class Solution :
    def productExceptSelf ( self , nums : List [ int ] ) -> List [ int ] :
        n = len ( nums )
        res = np . zeros ( n , dtype = int )
        res [ 0 ] = 1
        for i in range ( 1 , n ) :
            res [ i ] = res [ i - 1 ] * nums [ i - 1 ]
        right = 1
        for i in range ( n - 1 , - 1 , - 1 ) :
            res [ i ] *= right
            right *= nums [ i ]
        return res
if __name__ == '__main__' :
    sObj = Solution ( )
    nums = [ 1 , 2 , 3 , 4 ]
    out = sObj . productExceptSelf ( nums )
    print ( out )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1094
---> probID: geeksforgeeks_5261_A
---> inputs:

---> outputs:
For
sFo


def getSmallestAndLargest ( s , k ) :
    currStr = s [ : k ]
    lexMin = currStr
    lexMax = currStr
    for i in range ( k , len ( s ) ) :
        currStr = currStr [ 1 : k ] + s [ i ]
        if lexMax < currStr :
            lexMax = currStr
        if lexMin > currStr :
            lexMin = currStr
    print ( lexMin )
    print ( lexMax )
str = "GeeksForGeeks"
k = 3
getSmallestAndLargest ( str , k )


---> console_out:
For
sFo
 
MATCHED!! :D
 63%|██████▎   | 1094/1746 [12:46<01:05,  9.91it/s]out1,out2 5070304030 4070305030


-------------------------------------


---> lineNum: 1095
---> probID: codeforces_840_A
---> inputs:
5
7 3 5 3 4
2 1 3 2 3
---> outputs:
['4 7 3 5 3', '5 7 3 4 3 ']

import sys
n = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
b = [ [ int ( x ) , i ] for i , x in enumerate ( input ( ) . split ( ) ) ]
a . sort ( reverse = True )
b . sort ( key = lambda x : ( x [ 0 ] , x [ 1 ] ) )
res = [ 0 ] * n
for i in range ( n ) :
    e = b [ i ]
    res [ e [ 1 ] ] = a [ i ]
print ( * res )


---> console_out:
5 7 3 4 3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1096
---> probID: geeksforgeeks_3525_A
---> inputs:

---> outputs:
Max subset XOR is 13


import sys
INT_BITS = 32
def maxSubarrayXOR ( set , n ) :
    index = 0
    for i in range ( INT_BITS - 1 , - 1 , - 1 ) :
        maxInd = index
        maxEle = - sys . maxsize - 1
        for j in range ( index , n ) :
            if set [ j ] & ( 1 << i ) != 0 and set [ j ] > maxEle :
                maxEle = set [ j ]
                maxInd = j
        if maxEle == - sys . maxsize - 1 :
            continue
        temp = set [ index ]
        set [ index ] = set [ maxInd ]
        set [ maxInd ] = temp
        maxInd = index
        for j in range ( n ) :
            if j != maxInd and set [ j ] & ( 1 << i ) != 0 :
                set [ j ] = set [ j ] ^ set [ maxInd ]
        index += 1
    res = 0
    for i in range ( n ) :
        res ^= set [ i ]
    return res
set = [ 9 , 8 , 5 ]
n = len ( set )
print ( "Max subset XOR is" , maxSubarrayXOR ( set , n ) )


---> console_out:
Max subset XOR is 13
 
MATCHED!! :D
 63%|██████▎   | 1096/1746 [12:46<00:59, 10.90it/s]

-------------------------------------


---> lineNum: 1097
---> probID: codeforces_37_A
---> inputs:
3
1 2 3
---> outputs:
1 3

import sys
number = int ( input ( ) )
wooden = list ( map ( int , input ( ) . split ( ) ) )
height = [ 0 ] * len ( wooden )
count = 0
for i in range ( len ( wooden ) ) :
    if wooden [ i ] == 0 :
        continue
    else :
        count = 1
        for j in range ( i + 1 , len ( wooden ) ) :
            if wooden [ i ] == wooden [ j ] :
                wooden [ j ] = 0
                count += 1
        height [ i ] = count
index = 0
max_height = height [ 0 ]
for i in range ( len ( height ) ) :
    if height [ i ] != 0 :
        index += 1
    if max_height < height [ i ] :
        max_height = height [ i ]
print ( max_height , index )


---> console_out:
1 3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1098
---> probID: geeksforgeeks_5192_A
---> inputs:

---> outputs:
The two elements whose sum is minimum are -80 and 85


import math
def minAbsSumPair ( arr , n ) :
    sum , min_sum = 999999 , 999999
    l , r = 0 , n - 1
    min_l , min_r = l , n - 1
    if n < 2 :
        print ( "Invalid Input" )
        return
    arr = sorted ( arr )
    while l < r :
        sum = arr [ l ] + arr [ r ]
        if abs ( sum ) < abs ( min_sum ) :
            min_sum = sum
            min_l = l
            min_r = r
        if sum < 0 :
            l += 1
        else :
            r -= 1
    print ( " The two elements whose sum is minimum are " + str ( arr [ min_l ] ) + " and " + str ( arr [ min_r ] ) )
if __name__ == "__main__" :
    arr = [ 1 , 60 , - 10 , 70 , - 80 , 85 ]
    n = len ( arr )
    minAbsSumPair ( arr , n )
def partition ( arr , low , high ) :
    pivot = arr [ high ]
    i = low - 1
    for j in range ( low , high ) :
        if arr [ j ] <= pivot :
            i += 1
            temp = arr [ i ]
            arr [ i ] = arr [ j ]
            arr [ j ] = temp
    temp = arr [ i + 1 ]
    arr [ i + 1 ] = arr [ high ]
    arr [ high ] = temp
    return i + 1
def sort ( arr , low , high ) :
    if low < high :
        pi = partition ( arr , low , high )
        sort ( arr , low , pi - 1 )
        sort ( arr , pi + 1 , high )


---> console_out:
 The two elements whose sum is minimum are -80 and 85
 
MATCHED!! :D
 63%|██████▎   | 1098/1746 [12:47<00:53, 12.04it/s]

-------------------------------------


---> lineNum: 1099
---> probID: leetcode_387_A
---> inputs:

---> outputs:
0

class Solution :
    def firstUniqChar ( self , s : str ) -> int :
        freq = [ 0 ] * 26
        for i in range ( len ( s ) ) :
            freq [ ord ( s [ i ] ) - ord ( 'a' ) ] += 1
        for i in range ( len ( s ) ) :
            if freq [ ord ( s [ i ] ) - ord ( 'a' ) ] == 1 :
                return i
        return - 1
sObj = Solution ( )
s = "leetcode"
out = sObj . firstUniqChar ( s )
print ( out )


---> console_out:
0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1100
---> probID: geeksforgeeks_3128_A
---> inputs:

---> outputs:
Yes


from queue import Queue
class GFG :
    @ staticmethod
    def checkStackPermutation ( ip , op , n ) :
        input_queue = Queue ( )
        for i in range ( n ) :
            input_queue . put ( ip [ i ] )
        output_queue = Queue ( )
        for i in range ( n ) :
            output_queue . put ( op [ i ] )
        temp_stack = [ ]
        while not input_queue . empty ( ) :
            ele = input_queue . get ( )
            if ele == output_queue . queue [ 0 ] :
                output_queue . get ( )
                while len ( temp_stack ) > 0 :
                    if temp_stack [ - 1 ] == output_queue . queue [ 0 ] :
                        temp_stack . pop ( )
                        output_queue . get ( )
                    else :
                        break
            else :
                temp_stack . append ( ele )
        return input_queue . empty ( ) and len ( temp_stack ) == 0
    @ staticmethod
    def main ( ) :
        input_arr = [ 1 , 2 , 3 ]
        output_arr = [ 2 , 1 , 3 ]
        n = 3
        if GFG . checkStackPermutation ( input_arr , output_arr , n ) :
            print ( "Yes" )
        else :
            print ( "Not Possible" )
GFG . main ( )


---> console_out:
Yes
 
MATCHED!! :D
 63%|██████▎   | 1100/1746 [12:47<00:52, 12.20it/s]

-------------------------------------


---> lineNum: 1101
---> probID: atcoder_ABC110_C
---> inputs:
x
z
---> outputs:
Yes

import sys
s = input ( )
t = input ( )
l = len ( s )
ans = True
for i in range ( l ) :
    if s . find ( s [ i ] , i + 1 ) != t . find ( t [ i ] , i + 1 ) :
        ans = False
        break
print ( "Yes" if ans else "No" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1102
---> probID: geeksforgeeks_790_A
---> inputs:

---> outputs:
39


def getSum ( n , d ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        if i % 10 == d :
            sum += i
    return sum
n , d = 30 , 3
print ( getSum ( n , d ) )


---> console_out:
39
 
MATCHED!! :D
 63%|██████▎   | 1102/1746 [12:47<00:49, 13.05it/s]

-------------------------------------


---> lineNum: 1103
---> probID: codeforces_1282_A
---> inputs:
9
1 10 7 1
3 3 3 0
8 2 10 4
8 2 10 100
-10 20 -17 2
-3 2 2 0
-3 1 2 0
2 3 2 3
-1 3 -2 2
---> outputs:
7
0
4
0
30
5
4
0
3

import sys
t = int ( input ( ) )
for i in range ( t ) :
    st , end , n , m = map ( int , input ( ) . split ( ) )
    sum = 0
    if st > end :
        temp = end
        end = st
        st = temp
    if n + m <= st :
        sum = end - st
    elif n + m >= st and n - m < st :
        sum = end - n - m
    elif n - m >= st and n <= end - m :
        sum = end - st - 2 * m
    elif n - m < end and n + m >= end :
        sum = n - m - st
    else :
        sum = end - st
    if sum < 0 :
        sum = 0
    print ( sum )


---> console_out:
7
0
4
0
30
5
4
0
3
 
MATCHED!! :D
  File "./junk/1703784452602_9797/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  601020


-------------------------------------


---> lineNum: 1104
---> probID: codeforces_1187_A
---> inputs:
3
10 5 7
10 10 10
2 1 1
---> outputs:
6
1
2

import java . util . * ;
public class Codechef { public static void main ( String [ ] args ) throws Exception { try { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; while ( n - - > 0 ) { int e = sc . nextInt ( ) ; int s = sc . nextInt ( ) ; int t = sc . nextInt ( ) ; int temp = Math . max ( e - s , e - t ) ; System . out . println ( temp + 1 ) ; } } catch ( Exception e ) { } } }


---> console_out:
 
DIDN'T MATCH!! :(
 63%|██████▎   | 1104/1746 [12:47<00:46, 13.88it/s]

-------------------------------------


---> lineNum: 1105
---> probID: geeksforgeeks_1588_A
---> inputs:

---> outputs:
5


import math
def findSum ( N , K ) :
    ans = 0
    for i in range ( 1 , N + 1 ) :
        ans += ( i % K )
    return ans
if __name__ == '__main__' :
    N = 10
    K = 2
    print ( findSum ( N , K ) )


---> console_out:
5
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784452736_9728/main.py", line 9, in <module>
    n = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '4 8 100'
out1,out2  1703304010


-------------------------------------


---> lineNum: 1106
---> probID: codeforces_194_B
---> inputs:
3
4 8 100
---> outputs:
17
33
401

import math
def gcd ( a , b ) :
    if b == 0 :
        return a
    else :
        return gcd ( b , a % b )
t = int ( input ( ) )
for i in range ( t ) :
    n = int ( input ( ) )
    ans = 1 + ( ( 4 * n ) // gcd ( 4 * n , n + 1 ) )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 63%|██████▎   | 1106/1746 [12:47<00:47, 13.49it/s]

-------------------------------------


---> lineNum: 1107
---> probID: geeksforgeeks_1219_A
---> inputs:

---> outputs:
55.24


class GFG :
    PI = 3.14
    @ staticmethod
    def find_area ( r , d ) :
        R = d / GFG . PI
        R += pow ( r , 2 )
        R = pow ( R , 0.5 )
        area = GFG . PI * pow ( R , 2 )
        return area
    @ staticmethod
    def main ( ) :
        r , d = 4 , 5
        print ( GFG . find_area ( r , d ) )
GFG . main ( )


---> console_out:
55.24
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1108
---> probID: geeksforgeeks_3565_A
---> inputs:

---> outputs:
3


import math
def minimumNumbers ( n , s ) :
    if ( s % n ) > 0 :
        return s // n + 1
    else :
        return s // n
n = 5
s = 11
print ( minimumNumbers ( n , s ) )


---> console_out:
3
 
MATCHED!! :D
 63%|██████▎   | 1108/1746 [12:47<00:46, 13.67it/s]Traceback (most recent call last):
  File "./junk/1703784452962_1013/main.py", line 24, in <module>
    print ( countTriplets ( arr , n , m ) )
  File "./junk/1703784452962_1013/main.py", line 4, in countTriplets
    arr . sort ( )
AttributeError: 'array.array' object has no attribute 'sort'
out1,out2  60


-------------------------------------


---> lineNum: 1109
---> probID: geeksforgeeks_4238_A
---> inputs:

---> outputs:
6


import array
def countTriplets ( arr , n , m ) :
    count = 0
    arr . sort ( )
    end = n - 1
    while end >= 2 :
        start = 0
        mid = end - 1
        while start < mid :
            prod = arr [ end ] * arr [ start ] * arr [ mid ]
            if prod > m :
                mid -= 1
            elif prod < m :
                start += 1
            elif prod == m :
                count += 1
                mid -= 1
                start += 1
        end -= 1
    return count
arr = array . array ( 'i' , [ 1 , 1 , 1 , 1 , 1 , 1 ] )
n = len ( arr )
m = 1
print ( countTriplets ( arr , n , m ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1110
---> probID: geeksforgeeks_600_A
---> inputs:

---> outputs:
8


import math
def findIndex ( n ) :
    if n <= 1 :
        return n
    a , b , c = 0 , 1 , 1
    res = 1
    while c < n :
        c = a + b
        res += 1
        a = b
        b = c
    return res
result = findIndex ( 21 )
print ( result )


---> console_out:
8
 
MATCHED!! :D
 64%|██████▎   | 1110/1746 [12:47<00:46, 13.78it/s]

-------------------------------------


---> lineNum: 1111
---> probID: geeksforgeeks_723_A
---> inputs:

---> outputs:
No


def isVowel ( ch ) :
    if ch in [ 'a' , 'e' , 'i' , 'o' , 'u' ] :
        return True
    return False
def isSatisfied ( str , n ) :
    for i in range ( 1 , n ) :
        if not isVowel ( str [ i ] ) and not isVowel ( str [ i - 1 ] ) :
            return False
    for i in range ( 1 , n - 1 ) :
        if isVowel ( str [ i ] ) and not isVowel ( str [ i - 1 ] ) and not isVowel ( str [ i + 1 ] ) :
            return False
    return True
str = "acaba"
n = len ( str )
if isSatisfied ( list ( str ) , n ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
No
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1112
---> probID: geeksforgeeks_848_A
---> inputs:

---> outputs:
9


def countWays ( n ) :
    dp = [ 0 ] * ( n + 1 )
    dp [ 0 ] = 0
    dp [ 1 ] = 1
    dp [ 2 ] = 1
    for i in range ( 3 , n + 1 ) :
        dp [ i ] = dp [ i - 1 ] + dp [ i - 3 ] + 1
    return dp [ n ]
if __name__ == '__main__' :
    n = 6
    print ( countWays ( n ) )


---> console_out:
9
 
MATCHED!! :D
 64%|██████▎   | 1112/1746 [12:48<00:43, 14.49it/s]out1,out2 50 50


-------------------------------------


---> lineNum: 1113
---> probID: geeksforgeeks_378_A
---> inputs:

---> outputs:
4.958333333333334


def expect ( m , n ) :
    ans = 0.0
    for i in range ( m , 0 , - 1 ) :
        ans += ( ( i / m ) ** n - ( ( i - 1 ) / m ) ** n ) * i
    return ans
m = 6
n = 3
print ( "{:.5f}" . format ( expect ( m , n ) ) )


---> console_out:
4.95833
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1114
---> probID: geeksforgeeks_925_A
---> inputs:

---> outputs:
210


import numpy as np
def ProdOfPrimes ( n ) :
    prime = np . ones ( n + 1 , dtype = bool )
    for p in range ( 2 , int ( np . sqrt ( n ) ) + 1 ) :
        if prime [ p ] :
            for i in range ( p * 2 , n + 1 , p ) :
                prime [ i ] = False
    prod = 1
    for i in range ( 2 , n + 1 ) :
        if prime [ i ] :
            prod *= i
    return prod
n = 10
print ( ProdOfPrimes ( n ) )


---> console_out:
210
 
MATCHED!! :D
 64%|██████▍   | 1114/1746 [12:48<01:00, 10.36it/s]out1,out2  1710


-------------------------------------


---> lineNum: 1115
---> probID: projecteuler_p019_A
---> inputs:

---> outputs:
171

class p019 :
    def main ( self ) :
        print ( self . run ( ) )
    def run ( self ) :
        count = 0
        for y in range ( 1901 , 2001 ) :
            for m in range ( 1 , 13 ) :
                if self . dayOfWeek ( y , m , 1 ) == 0 :
                    count += 1
        return str ( count )
    @ staticmethod
    def dayOfWeek ( year , month , day ) :
        if year < 0 or year > 10000 or month < 1 or month > 12 or day < 1 or day > 31 :
            raise ValueError ( )
        m = ( month - 3 + 4800 ) % 4800
        y = ( year + m // 12 ) % 400
        m %= 12
        return ( y + y // 4 - y // 100 + ( 13 * m + 2 ) // 5 + day + 2 ) % 7


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784453624_4990/main.py", line 1, in <module>
    class GFG :
  File "./junk/1703784453624_4990/main.py", line 26, in GFG
    dt1 = GFG . Date ( 1 , 2 , 2000 )
NameError: name 'GFG' is not defined
out1,out2  differencebetweentwodatesis14610


-------------------------------------


---> lineNum: 1116
---> probID: geeksforgeeks_4465_A
---> inputs:

---> outputs:
Difference between two dates is 1461


class GFG :
    class Date :
        def __init__ ( self , d , m , y ) :
            self . d = d
            self . m = m
            self . y = y
    monthDays = [ 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 ]
    @ staticmethod
    def countLeapYears ( d ) :
        years = d . y
        if d . m <= 2 :
            years -= 1
        return years // 4 - years // 100 + years // 400
    @ staticmethod
    def getDifference ( dt1 , dt2 ) :
        n1 = dt1 . y * 365 + dt1 . d
        for i in range ( dt1 . m - 1 ) :
            n1 += GFG . monthDays [ i ]
        n1 += GFG . countLeapYears ( dt1 )
        n2 = dt2 . y * 365 + dt2 . d
        for i in range ( dt2 . m - 1 ) :
            n2 += GFG . monthDays [ i ]
        n2 += GFG . countLeapYears ( dt2 )
        return n2 - n1
    if __name__ == '__main__' :
        dt1 = GFG . Date ( 1 , 2 , 2000 )
        dt2 = GFG . Date ( 1 , 2 , 2004 )
        print ( "Difference between two dates is" , GFG . getDifference ( dt1 , dt2 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 64%|██████▍   | 1116/1746 [12:48<00:55, 11.32it/s]out1,out2 thenumbersare102030405060708090100110 thenumbersare102030405060708090100110


-------------------------------------


---> lineNum: 1117
---> probID: geeksforgeeks_663_A
---> inputs:

---> outputs:
The numbers are: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]


import itertools
def generateNumbers ( n , num , a , b , st ) :
    if num > 0 and num < n :
        st . add ( num )
    if num >= n :
        return
    if num * 10 + a > num :
        generateNumbers ( n , num * 10 + a , a , b , st )
    generateNumbers ( n , num * 10 + b , a , b , st )
def printNumbers ( n ) :
    st = set ( )
    for i in range ( 10 ) :
        for j in range ( i + 1 , 10 ) :
            generateNumbers ( n , 0 , i , j , st )
    print ( "The numbers are:" , st )
    st . clear ( )
if __name__ == '__main__' :
    n = 12
    printNumbers ( n )


---> console_out:
The numbers are: {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1118
---> probID: codeforces_71_B
---> inputs:
10 10 54
---> outputs:
10 10 10 10 10 4 0 0 0 0

import sys
n , k , t = map ( int , sys . stdin . readline ( ) . split ( ) )
temp = ( t * k * n ) / 100.0
x = 0
while temp - k >= 0 :
    temp -= k
    x += 1
for i in range ( x ) :
    print ( k , end = " " )
if temp != 0 :
    print ( int ( temp ) , end = " " )
    x += 1
for i in range ( x , n ) :
    print ( 0 , end = " " )
print ( )


---> console_out:
10 10 10 10 10 4 0 0 0 0 
 
MATCHED!! :D
 64%|██████▍   | 1118/1746 [12:48<00:52, 11.94it/s]  File "./junk/1703784453832_9930/main.py", line 8
    self . sc = Scanner ( System . in )
                                   ^
SyntaxError: invalid syntax
out1,out2  40500020


-------------------------------------


---> lineNum: 1119
---> probID: aizu_p00705_A
---> inputs:
3 2
2 1 4
0
3 3 4 8
3 2
4 1 5 8 9
3 2 5 9
5 2 4 5 7 9
3 3
2 1 4
3 2 5 9
2 2 4
3 3
2 1 2
3 1 2 9
2 2 4
0 0
---> outputs:
4
5
0
2

import java . util . ArrayList
import java . util . Arrays
import java . util . HashMap
import java . util . Map
import java . util . Scanner
class Main :
    def __init__ ( self ) :
        self . sc = Scanner ( System . in )
    def run ( self ) :
        while True :
            N = self . ni ( )
            Q = self . ni ( )
            if ( N | Q ) == 0 :
                break
            list = [ [ 0 ] * 0 for i in range ( N ) ]
            map = { }
            for i in range ( 1 , 100 ) :
                map [ i ] = 0
            for i in range ( N ) :
                M = self . ni ( )
                list [ i ] = [ 0 ] * M
                for j in range ( M ) :
                    d = self . ni ( )
                    list [ i ] [ j ] = d
                    map [ d ] = map . get ( d , 0 ) + 1
            max = 0
            idx = 0
            for key in map :
                n = map [ key ]
                if n >= Q :
                    if max < n :
                        idx = key
                        max = n
            print ( idx )
    def ni ( self ) :
        return int ( self . sc . next ( ) )
if __name__ == '__main__' :
    Main ( ) . run ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1120
---> probID: geeksforgeeks_3728_A
---> inputs:

---> outputs:
5


class OddOccurance :
    def getOddOccurrence ( self , ar , ar_size ) :
        res = 0
        for i in range ( ar_size ) :
            res = res ^ ar [ i ]
        return res
    def main ( self ) :
        occur = OddOccurance ( )
        ar = [ 2 , 3 , 5 , 4 , 5 , 2 , 4 , 3 , 5 , 2 , 4 , 4 , 2 ]
        n = len ( ar )
        print ( occur . getOddOccurrence ( ar , n ) )
OddOccurance ( ) . main ( )


---> console_out:
5
 
MATCHED!! :D
 64%|██████▍   | 1120/1746 [12:48<00:48, 12.84it/s]

-------------------------------------


---> lineNum: 1121
---> probID: geeksforgeeks_1823_A
---> inputs:

---> outputs:
1
1


def isKthBitSet ( x , k ) :
    rslt = 1 if ( x & ( 1 << ( k - 1 ) ) ) != 0 else 0
    return rslt
def isPalindrome ( x ) :
    l = 1
    r = ( 32 // 8 ) * 8
    while l < r :
        if isKthBitSet ( x , l ) != isKthBitSet ( x , r ) :
            return 0
        l += 1
        r -= 1
    return 1
x = ( 1 << 15 ) + ( 1 << 16 )
print ( isPalindrome ( x ) )
x = ( 1 << 31 ) + 1
print ( isPalindrome ( x ) )


---> console_out:
1
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1122
---> probID: geeksforgeeks_862_A
---> inputs:

---> outputs:
3 13


def SieveOfEratosthenes ( n , isPrime ) :
    isPrime [ 0 ] = isPrime [ 1 ] = False
    for i in range ( 2 , n + 1 ) :
        isPrime [ i ] = True
    p = 2
    while p * p <= n :
        if isPrime [ p ] == True :
            for i in range ( p * 2 , n + 1 , p ) :
                isPrime [ i ] = False
        p += 1
def findPrimePair ( n ) :
    flag = 0
    isPrime = [ False ] * ( n + 1 )
    SieveOfEratosthenes ( n , isPrime )
    for i in range ( 2 , n ) :
        x = n // i
        if isPrime [ i ] and isPrime [ x ] and x != i and x * i == n :
            print ( i , x )
            flag = 1
            return
    if flag == 0 :
        print ( "No such pair found" )
n = 39
findPrimePair ( n )


---> console_out:
3 13
 
MATCHED!! :D
 64%|██████▍   | 1122/1746 [12:48<00:45, 13.66it/s]

-------------------------------------


---> lineNum: 1123
---> probID: geeksforgeeks_2065_A
---> inputs:

---> outputs:
GCD( 10 , 15 ) = 5
GCD( 35 , 10 ) = 5
GCD( 31 , 2 ) = 1


import math
def gcd ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )
a , b , g = 10 , 15 , 0
g = gcd ( a , b )
print ( "GCD(" + str ( a ) + " , " + str ( b ) + ") = " + str ( g ) )
a , b = 35 , 10
g = gcd ( a , b )
print ( "GCD(" + str ( a ) + " , " + str ( b ) + ") = " + str ( g ) )
a , b = 31 , 2
g = gcd ( a , b )
print ( "GCD(" + str ( a ) + " , " + str ( b ) + ") = " + str ( g ) )


---> console_out:
GCD(10 , 15) = 5
GCD(35 , 10) = 5
GCD(31 , 2) = 1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1124
---> probID: geeksforgeeks_785_A
---> inputs:

---> outputs:
GCD( 10 , 15 ) = 5
GCD( 35 , 10 ) = 5
GCD( 31 , 2 ) = 1


import math
def gcd ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )
a , b , g = 10 , 15 , 0
g = gcd ( a , b )
print ( "GCD(" + str ( a ) + " , " + str ( b ) + ") = " + str ( g ) )
a , b = 35 , 10
g = gcd ( a , b )
print ( "GCD(" + str ( a ) + " , " + str ( b ) + ") = " + str ( g ) )
a , b = 31 , 2
g = gcd ( a , b )
print ( "GCD(" + str ( a ) + " , " + str ( b ) + ") = " + str ( g ) )


---> console_out:
GCD(10 , 15) = 5
GCD(35 , 10) = 5
GCD(31 , 2) = 1
 
MATCHED!! :D
 64%|██████▍   | 1124/1746 [12:49<00:45, 13.70it/s]

-------------------------------------


---> lineNum: 1125
---> probID: projecteuler_p174_A
---> inputs:

---> outputs:
209566

class p174 :
    SIZE_LIMIT = 1000000
    TYPE_LIMIT = 10
    def __init__ ( self ) :
        pass
    def run ( self ) :
        type = [ 0 ] * ( self . SIZE_LIMIT + 1 )
        for n in range ( 3 , ( self . SIZE_LIMIT // 4 ) + 2 ) :
            for m in range ( n - 2 , 0 , - 2 ) :
                tiles = n * n - m * m
                if tiles > self . SIZE_LIMIT :
                    break
                type [ tiles ] += 1
        count = sum ( 1 for t in type if 1 <= t <= self . TYPE_LIMIT )
        return str ( count )
if __name__ == '__main__' :
    print ( p174 ( ) . run ( ) )


---> console_out:
209566
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784455193_6606/main.py", line 35, in <module>
    test = in_ . nextInt ( )
  File "./junk/1703784455193_6606/main.py", line 11, in nextInt
    return int ( self . next ( ) )
  File "./junk/1703784455193_6606/main.py", line 8, in next
    self . st = StringTokenizer ( self . br ( ) . strip ( ) )
NameError: name 'StringTokenizer' is not defined
out1,out2  yesyesyesyesno


-------------------------------------


---> lineNum: 1126
---> probID: codeforces_1499_B
---> inputs:
5
10101011011
0000
11111
110
1100
---> outputs:
YES
YES
YES
YES
NO

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreTokens ( ) :
            self . st = StringTokenizer ( self . br ( ) . strip ( ) )
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return self . br ( ) . strip ( )
class binary_removal :
    @ staticmethod
    def remove ( s ) :
        one = 0
        zero = 0
        for i in range ( 1 , len ( s ) ) :
            if s [ i ] == '1' :
                if s [ i - 1 ] == '1' :
                    one += 1
            else :
                if s [ i - 1 ] == '0' and one > 0 :
                    print ( "No" )
                    return
        print ( "YES" )
if __name__ == '__main__' :
    in_ = FastReader ( )
    out = sys . stdout
    test = in_ . nextInt ( )
    while test > 0 :
        s = in_ . nextLine ( )
        binary_removal . remove ( s )
        test -= 1
class StringTokenizer :
    def __init__ ( self , s ) :
        self . tokens = s . split ( )
        self . index = 0
    def hasMoreTokens ( self ) :
        return self . index < len ( self . tokens )
    def nextToken ( self ) :
        if self . hasMoreTokens ( ) :
            token = self . tokens [ self . index ]
            self . index += 1
            return token
        else :
            return None


---> console_out:
 
DIDN'T MATCH!! :(
 64%|██████▍   | 1126/1746 [12:50<02:07,  4.88it/s]

-------------------------------------


---> lineNum: 1127
---> probID: geeksforgeeks_1914_A
---> inputs:

---> outputs:
1


def maxZeros ( N ) :
    maxm = - 1
    cnt = 0
    while N != 0 :
        if N & 1 == 0 :
            cnt += 1
            N >>= 1
            maxm = max ( maxm , cnt )
        else :
            maxm = max ( maxm , cnt )
            cnt = 0
            N >>= 1
    return maxm
if __name__ == '__main__' :
    N = 14
    print ( maxZeros ( N ) )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1128
---> probID: geeksforgeeks_1463_A
---> inputs:

---> outputs:
Index : 7  ,Length : 5


import sys
def getLongestSeq ( a , n ) :
    maxIdx = 0
    maxLen = 0
    currLen = 0
    currIdx = 0
    for k in range ( n ) :
        if a [ k ] > 0 :
            currLen += 1
            if currLen == 1 :
                currIdx = k
        else :
            if currLen > maxLen :
                maxLen = currLen
                maxIdx = currIdx
            currLen = 0
    if maxLen > 0 :
        print ( "Index : " + str ( maxIdx ) )
        print ( " ,Length : " + str ( maxLen ) )
    else :
        print ( "No positive sequence detected." )
def main ( ) :
    arr = [ 1 , 2 , - 3 , 2 , 3 , 4 , - 6 , 1 , 2 , 3 , 4 , 5 , - 8 , 5 , 6 ]
    n = len ( arr )
    getLongestSeq ( arr , n )
if __name__ == "__main__" :
    main ( )


---> console_out:
Index : 7
 ,Length : 5
 
MATCHED!! :D
 65%|██████▍   | 1128/1746 [12:50<01:41,  6.08it/s]

-------------------------------------


---> lineNum: 1129
---> probID: geeksforgeeks_1617_A
---> inputs:

---> outputs:
1 2 3 
4 5 6 
7 8 9 


class Node :
    def __init__ ( self ) :
        self . data = None
        self . right = None
        self . down = None
def construct ( arr , i , j , m , n ) :
    if i > n - 1 or j > m - 1 :
        return None
    temp = Node ( )
    temp . data = arr [ i ] [ j ]
    temp . right = construct ( arr , i , j + 1 , m , n )
    temp . down = construct ( arr , i + 1 , j , m , n )
    return temp
def display ( head ) :
    Rp = None
    Dp = head
    while Dp is not None :
        Rp = Dp
        while Rp is not None :
            print ( Rp . data , end = " " )
            Rp = Rp . right
        print ( )
        Dp = Dp . down
if __name__ == "__main__" :
    arr = [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ]
    m = 3
    n = 3
    head = construct ( arr , 0 , 0 , m , n )
    display ( head )


---> console_out:
1 2 3 
4 5 6 
7 8 9 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1130
---> probID: aizu_p02257_A
---> inputs:
5
2
3
4
5
6
---> outputs:
3

import sys
def isPrime ( x ) :
    if x < 2 :
        return False
    if x <= 3 :
        return True
    if x % 2 == 0 or x % 3 == 0 :
        return False
    i = 5
    while i * i <= x :
        if x % i == 0 or x % ( i + 2 ) == 0 :
            return False
        i += 6
    return True
if __name__ == "__main__" :
    n = int ( sys . stdin . readline ( ) )
    ans = 0
    for i in range ( n ) :
        if isPrime ( int ( sys . stdin . readline ( ) ) ) :
            ans += 1
    print ( ans )


---> console_out:
3
 
MATCHED!! :D
 65%|██████▍   | 1130/1746 [12:50<01:22,  7.46it/s]

-------------------------------------


---> lineNum: 1131
---> probID: geeksforgeeks_2623_A
---> inputs:

---> outputs:
14


def findNthTerm ( N ) :
    if N % 2 == 0 :
        ans = ( N // 2 ) * 6 + ( N // 2 ) * 2
    else :
        ans = ( N // 2 + 1 ) * 6 + ( N // 2 ) * 2
    print ( ans )
if __name__ == '__main__' :
    N = 3
    findNthTerm ( N )


---> console_out:
14
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1132
---> probID: geeksforgeeks_4028_A
---> inputs:

---> outputs:
No


def isRectangle ( a , b , c , d ) :
    if a == b and a == c and a == d and c == d and b == c and b == d :
        return True
    elif a == b and c == d :
        return True
    elif a == d and c == b :
        return True
    elif a == c and d == b :
        return True
    else :
        return False
a , b , c , d = 1 , 2 , 3 , 4
if isRectangle ( a , b , c , d ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
No
 
MATCHED!! :D
 65%|██████▍   | 1132/1746 [12:50<01:08,  8.94it/s]Traceback (most recent call last):
  File "./junk/1703784455641_1639/main.py", line 20, in <module>
    print ( discreteLogarithm ( a , b , m ) )
  File "./junk/1703784455641_1639/main.py", line 2, in discreteLogarithm
    n = int ( math . sqrt ( m ) + 1 )
NameError: name 'math' is not defined
out1,out2  3010


-------------------------------------


---> lineNum: 1133
---> probID: geeksforgeeks_4597_A
---> inputs:

---> outputs:
3
-1


def discreteLogarithm ( a , b , m ) :
    n = int ( math . sqrt ( m ) + 1 )
    an = 1
    for i in range ( n ) :
        an = ( an * a ) % m
    value = [ 0 ] * m
    for i in range ( 1 , n + 1 ) :
        if value [ an ] == 0 :
            value [ an ] = i
        an = ( an * an ) % m
    cur = b
    for i in range ( n + 1 ) :
        if value [ cur ] > 0 :
            ans = value [ cur ] * n - i
            if ans < m :
                return ans
        cur = ( cur * a ) % m
    return - 1
a , b , m = 2 , 3 , 5
print ( discreteLogarithm ( a , b , m ) )
a , b , m = 3 , 7 , 11
print ( discreteLogarithm ( a , b , m ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1134
---> probID: geeksforgeeks_3584_A
---> inputs:

---> outputs:
30


import sys
def FindMinimumCost ( ind , a , n , k , dp ) :
    if ind == ( n - 1 ) :
        return 0
    elif dp [ ind ] != - 1 :
        return dp [ ind ]
    else :
        ans = sys . maxsize
        for i in range ( 1 , k + 1 ) :
            if ind + i < n :
                ans = min ( ans , abs ( a [ ind + i ] - a [ ind ] ) + FindMinimumCost ( ind + i , a , n , k , dp ) )
            else :
                break
        dp [ ind ] = ans
        return ans
if __name__ == "__main__" :
    a = [ 10 , 30 , 40 , 50 , 20 ]
    k = 3
    n = len ( a )
    dp = [ - 1 ] * n
    print ( FindMinimumCost ( 0 , a , n , k , dp ) )


---> console_out:
30
 
MATCHED!! :D
 65%|██████▍   | 1134/1746 [12:50<00:59, 10.35it/s]

-------------------------------------


---> lineNum: 1135
---> probID: geeksforgeeks_3453_A
---> inputs:

---> outputs:
1 / 279936


import math
def gcd ( a , b ) :
    if a == 0 :
        return b
    if b == 0 :
        return a
    if a == b :
        return a
    if a > b :
        return gcd ( a - b , b )
    return gcd ( a , b - a )
def probability ( sum , times ) :
    favorable = 0
    total = 36
    probability = 0
    for i in range ( 1 , 7 ) :
        for j in range ( 1 , 7 ) :
            if i + j == sum :
                favorable += 1
    gcd1 = gcd ( int ( favorable ) , int ( total ) )
    favorable = favorable / gcd1
    total = total / gcd1
    probability = int ( math . pow ( total , times ) )
    return probability
sum = 7
times = 7
print ( "1" + "/" + str ( probability ( sum , times ) ) )


---> console_out:
1/279936
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1136
---> probID: atcoder_ARC102_C
---> inputs:
200 1
---> outputs:
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200


import numpy as np
mod = 998244353
nchoosek = np . zeros ( ( 4001 , 4001 ) , dtype = np . int64 )
for i in range ( nchoosek . shape [ 0 ] ) :
    nchoosek [ i , 0 ] = nchoosek [ i , i ] = 1
for i in range ( 2 , nchoosek . shape [ 0 ] ) :
    for j in range ( 1 , i ) :
        nchoosek [ i , j ] = ( nchoosek [ i - 1 , j ] + nchoosek [ i - 1 , j - 1 ] ) % mod
k , n = map ( int , input ( ) . split ( ) )
for i in range ( 2 , 2 * k + 1 ) :
    if i > k :
        pairs = k - i // 2
    else :
        pairs = ( i - 1 ) // 2
    active = k - 2 * pairs
    if i % 2 == 0 :
        active -= 1
    times2 = 1
    total = 0
    for j in range ( pairs + 1 ) :
        choice = times2 * nchoosek [ pairs , j ] % mod
        times2 = times2 * 2 % mod
        if active + j - 1 < 0 :
            continue
        total += choice * nchoosek [ n + active - 1 , active + j - 1 ]
        if i % 2 == 0 :
            total += choice * nchoosek [ n + active - 2 , active + j - 1 ]
        total %= mod
    print ( total )


---> console_out:
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
 
MATCHED!! :D
 65%|██████▌   | 1136/1746 [12:59<14:45,  1.45s/it]Traceback (most recent call last):
  File "./junk/1703784464996_8863/main.py", line 1, in <module>
    import java . util . Scanner
ModuleNotFoundError: No module named 'java'
out1,out2  480000


-------------------------------------


---> lineNum: 1137
---> probID: atcoder_ABC119_B
---> inputs:
2
10000 JPY
0.10000000 BTC
---> outputs:
48000.0

import java . util . Scanner
N = int ( input ( ) )
total = 0
for i in range ( N ) :
    money = float ( input ( ) )
    A = input ( )
    B = "JPY"
    if A == B :
        total += money
    else :
        total += money * 380000
print ( total )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1138
---> probID: geeksforgeeks_1012_A
---> inputs:

---> outputs:
5


import numpy as np
def getCount ( arr , n , num1 , num2 ) :
    i = 0
    for i in range ( n ) :
        if arr [ i ] == num1 :
            break
    if i >= n - 1 :
        return 0
    j = n - 1
    while j >= i + 1 :
        if arr [ j ] == num2 :
            break
        j -= 1
    if j == i :
        return 0
    return j - i - 1
arr = np . array ( [ 3 , 5 , 7 , 6 , 4 , 9 , 12 , 4 , 8 ] )
n = arr . size
num1 = 5
num2 = 4
print ( getCount ( arr , n , num1 , num2 ) )


---> console_out:
5
 
MATCHED!! :D
 65%|██████▌   | 1138/1746 [13:00<10:47,  1.07s/it]

-------------------------------------


---> lineNum: 1139
---> probID: aizu_p01093_A
---> inputs:
5
10 10 10 10 10
5
1 5 8 9 11
7
11 34 83 47 59 29 70
0
---> outputs:
0
1
5

import sys
while True :
    n = int ( input ( ) )
    if n == 0 :
        break
    arr = list ( map ( int , input ( ) . split ( ) ) )
    arr . sort ( )
    min_diff = sys . maxsize
    for i in range ( 1 , n ) :
        min_diff = min ( min_diff , arr [ i ] - arr [ i - 1 ] )
    print ( min_diff )


---> console_out:
0
1
5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1140
---> probID: geeksforgeeks_4829_A
---> inputs:

---> outputs:
9


import math
def countSetBits ( n ) :
    cnt = 0
    setBits = [ 0 ] * ( n + 1 )
    setBits [ 0 ] = 0
    setBits [ 1 ] = 1
    for i in range ( 2 , n + 1 ) :
        if i % 2 == 0 :
            setBits [ i ] = setBits [ i // 2 ]
        else :
            setBits [ i ] = setBits [ i - 1 ] + 1
    for i in range ( n + 1 ) :
        cnt = cnt + setBits [ i ]
    return cnt
n = 6
print ( countSetBits ( n ) )


---> console_out:
9
 
MATCHED!! :D
 65%|██████▌   | 1140/1746 [13:00<07:43,  1.31it/s]

-------------------------------------


---> lineNum: 1141
---> probID: geeksforgeeks_1388_A
---> inputs:

---> outputs:
4


def gcd ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )
def largestGCD1Subset ( A , n ) :
    currentGCD = A [ 0 ]
    for i in range ( 1 , n ) :
        currentGCD = gcd ( currentGCD , A [ i ] )
        if currentGCD == 1 :
            return n
    return 0
A = [ 2 , 18 , 6 , 3 ]
n = len ( A )
print ( largestGCD1Subset ( A , n ) )


---> console_out:
4
 
MATCHED!! :D
 65%|██████▌   | 1140/1746 [13:20<07:43,  1.31it/s]

-------------------------------------


---> lineNum: 1142
---> probID: projecteuler_p179_A
---> inputs:

---> outputs:
986262

import math
class p179 :
    def __init__ ( self ) :
        pass
    def run ( self ) :
        LIMIT = int ( math . pow ( 10 , 7 ) )
        numDivisors = [ 2 ] * ( LIMIT + 1 )
        for i in range ( 2 , len ( numDivisors ) ) :
            for j in range ( i * 2 , len ( numDivisors ) , i ) :
                numDivisors [ j ] += 1
        count = 0
        for i in range ( 2 , len ( numDivisors ) - 1 ) :
            if numDivisors [ i ] == numDivisors [ i + 1 ] :
                count += 1
        return str ( count )
print ( p179 ( ) . run ( ) )


---> console_out:
986262
 
MATCHED!! :D
 65%|██████▌   | 1142/1746 [13:32<53:46,  5.34s/it]

-------------------------------------


---> lineNum: 1143
---> probID: geeksforgeeks_3873_A
---> inputs:

---> outputs:
-1 5 1 3 2 

def updateArray ( arr , n ) :
    for i in range ( n - 1 , 0 , - 1 ) :
        arr [ i ] = arr [ i - 1 ]
    arr [ 0 ] = - 1
    for i in range ( n ) :
        print ( arr [ i ] , end = " " )
if __name__ == "__main__" :
    arr = [ 5 , 1 , 3 , 2 , 4 ]
    N = len ( arr )
    updateArray ( arr , N )


---> console_out:
-1 5 1 3 2  
MATCHED!! :D


-------------------------------------


---> lineNum: 1144
---> probID: geeksforgeeks_3878_A
---> inputs:

---> outputs:
10 14 12 13 11 

def findEncryptedArray ( arr , n ) :
    sum = 0
    for i in range ( n ) :
        sum += arr [ i ]
    for i in range ( n ) :
        print ( sum - arr [ i ] , end = " " )
if __name__ == "__main__" :
    arr = [ 5 , 1 , 3 , 2 , 4 ]
    N = len ( arr )
    findEncryptedArray ( arr , N )


---> console_out:
10 14 12 13 11  
MATCHED!! :D
 66%|██████▌   | 1144/1746 [13:32<37:42,  3.76s/it]

-------------------------------------


---> lineNum: 1145
---> probID: geeksforgeeks_3874_A
---> inputs:

---> outputs:
1 3 2 4 -1 

def updateArray ( arr , n ) :
    for i in range ( n - 1 ) :
        arr [ i ] = arr [ i + 1 ]
    arr [ n - 1 ] = - 1
    for i in range ( n ) :
        print ( arr [ i ] , end = " " )
if __name__ == "__main__" :
    arr = [ 5 , 1 , 3 , 2 , 4 ]
    N = len ( arr )
    updateArray ( arr , N )


---> console_out:
1 3 2 4 -1  
MATCHED!! :D
out1,out2 30 20


-------------------------------------


---> lineNum: 1146
---> probID: geeksforgeeks_649_A
---> inputs:

---> outputs:
2


def findMinDifference ( arr , n ) :
    min_val = second_min_val = min ( arr [ 0 ] , arr [ 1 ] )
    max_val = second_max_val = max ( arr [ 0 ] , arr [ 1 ] )
    for i in range ( 2 , n ) :
        if arr [ i ] > max_val :
            second_max_val = max_val
            max_val = arr [ i ]
        elif arr [ i ] > second_max_val :
            second_max_val = arr [ i ]
        elif arr [ i ] < min_val :
            second_min_val = min_val
            min_val = arr [ i ]
        elif arr [ i ] < second_min_val :
            second_min_val = arr [ i ]
    diff = min ( max_val - second_min_val , second_max_val - min_val )
    return diff
if __name__ == '__main__' :
    arr = [ 1 , 2 , 4 , 3 , 4 ]
    n = len ( arr )
    print ( findMinDifference ( arr , n ) )


---> console_out:
3
 
DIDN'T MATCH!! :(
 66%|██████▌   | 1146/1746 [13:32<26:29,  2.65s/it]out1,out2 20 60


-------------------------------------


---> lineNum: 1147
---> probID: codeforces_1025_B
---> inputs:
3
17 18
15 24
12 15
---> outputs:
['6', '2\n']

import math
num = int ( input ( ) )
pairs = [ ]
for i in range ( num ) :
    pairs . append ( list ( map ( int , input ( ) . split ( ) ) ) )
commonFactors = set ( )
for i in range ( 2 ) :
    X = pairs [ 0 ] [ i ]
    for k in range ( 2 , math . ceil ( math . sqrt ( X ) ) + 1 ) :
        if X % k == 0 :
            while X % k == 0 :
                X //= k
            commonFactors . add ( k )
    if X != 1 :
        commonFactors . add ( X )
for val in commonFactors :
    works = True
    for i in range ( len ( pairs ) ) :
        if pairs [ i ] [ 0 ] % val > 0 and pairs [ i ] [ 1 ] % val > 0 :
            works = False
            break
    if works :
        print ( val )
        break
else :
    print ( - 1 )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1148
---> probID: aizu_p00594_A
---> inputs:
8
3 1 2 3 3 1 5 3
7
5 2 5 3 4 5 5
0
---> outputs:
NO COLOR
5

import sys
from collections import Counter
for line in sys . stdin :
    n = int ( line . strip ( ) )
    if n == 0 :
        break
    a = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
    counts = Counter ( a )
    majority = max ( counts , key = counts . get )
    if counts [ majority ] > n // 2 :
        print ( majority )
    else :
        print ( "NO COLOR" )


---> console_out:
NO COLOR
5
 
MATCHED!! :D
 66%|██████▌   | 1148/1746 [13:32<18:44,  1.88s/it]

-------------------------------------


---> lineNum: 1149
---> probID: geeksforgeeks_3996_A
---> inputs:

---> outputs:
Factorial of 5 is 120


class Factorial :
    def factorial ( self , n ) :
        return 1 if n == 1 or n == 0 else n * self . factorial ( n - 1 )
    def main ( self ) :
        obj = Factorial ( )
        num = 5
        print ( "Factorial of" , num , "is" , obj . factorial ( num ) )
Factorial ( ) . main ( )


---> console_out:
Factorial of 5 is 120
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1150
---> probID: aizu_p01719_A
---> inputs:
2 2 5
3 2
5 4
---> outputs:
9

import sys
line = sys . stdin . readline ( ) . strip ( )
words = line . split ( )
n , d , x = map ( int , words )
price = [ ]
for i in range ( d ) :
    line = sys . stdin . readline ( ) . strip ( )
    words = line . split ( )
    row = [ int ( word ) for word in words ]
    price . append ( row )
for i in range ( d - 1 ) :
    dp = [ j for j in range ( x + 1 ) ]
    for j in range ( n ) :
        for k in range ( x + 1 ) :
            if k >= price [ i ] [ j ] :
                dp [ k ] = max ( dp [ k ] , dp [ k - price [ i ] [ j ] ] + price [ i + 1 ] [ j ] )
    x = dp [ x ]
print ( x )


---> console_out:
9
 
MATCHED!! :D
 66%|██████▌   | 1150/1746 [13:32<13:20,  1.34s/it]

-------------------------------------


---> lineNum: 1151
---> probID: codeforces_433_B
---> inputs:
6
6 4 2 7 2 7
3
2 3 6
1 3 4
1 1 6
---> outputs:
24
9
28

import sys
n = int ( sys . stdin . readline ( ) )
a = [ 0 ] * ( n + 1 )
sumA = [ 0 ] * ( n + 1 )
sumB = [ 0 ] * ( n + 1 )
a [ 0 ] = sumA [ 0 ] = sumB [ 0 ] = 0
line = sys . stdin . readline ( ) . split ( )
for i in range ( 1 , n + 1 ) :
    a [ i ] = int ( line [ i - 1 ] )
    sumA [ i ] = sumA [ i - 1 ] + a [ i ]
a . sort ( )
for i in range ( 1 , n + 1 ) :
    sumB [ i ] = sumB [ i - 1 ] + a [ i ]
m = int ( sys . stdin . readline ( ) )
for i in range ( m ) :
    line = sys . stdin . readline ( ) . split ( )
    type = int ( line [ 0 ] )
    l = int ( line [ 1 ] )
    r = int ( line [ 2 ] )
    if type == 1 :
        print ( sumA [ r ] - sumA [ l - 1 ] )
    else :
        print ( sumB [ r ] - sumB [ l - 1 ] )


---> console_out:
24
9
28
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1152
---> probID: geeksforgeeks_2513_A
---> inputs:

---> outputs:
3


import numpy as np
def findMinimumX ( a ) :
    st = set ( a )
    if len ( st ) == 1 :
        return 0
    elif len ( st ) == 2 :
        el1 , el2 = sorted ( st )
        if ( el2 - el1 ) % 2 == 0 :
            return ( el2 - el1 ) // 2
        else :
            return ( el2 - el1 )
    elif len ( st ) == 3 :
        el1 , el2 , el3 = sorted ( st )
        if ( el2 - el1 ) == ( el3 - el2 ) :
            return el2 - el1
        else :
            return - 1
    else :
        return - 1
a = np . array ( [ 1 , 4 , 4 , 7 , 4 , 1 ] )
print ( findMinimumX ( a ) )


---> console_out:
3
 
MATCHED!! :D
 66%|██████▌   | 1152/1746 [13:33<09:47,  1.01it/s]

-------------------------------------


---> lineNum: 1153
---> probID: geeksforgeeks_2612_A
---> inputs:

---> outputs:
3


import math
def findX ( n , k ) :
    r = n
    m = int ( math . sqrt ( k ) ) + 1
    for i in range ( 2 , m + 1 ) :
        if i == m :
            i = k
        u = v = 0
        while k % i == 0 :
            k //= i
            v += 1
        if v > 0 :
            t = n
            while t > 0 :
                t //= i
                u += t
            r = min ( r , u // v )
    return r
if __name__ == '__main__' :
    n = 5
    k = 2
    print ( findX ( n , k ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1154
---> probID: geeksforgeeks_3673_A
---> inputs:

---> outputs:
Given point lies inside the rectangle


def LiesInsideRectangle ( a , b , x , y ) :
    if x - y - b <= 0 and x - y + b >= 0 and x + y - 2 * a + b <= 0 and x + y - b >= 0 :
        return True
    return False
if __name__ == '__main__' :
    a , b , x , y = 7 , 2 , 4 , 5
    if LiesInsideRectangle ( a , b , x , y ) :
        print ( "Given point lies inside the rectangle" )
    else :
        print ( "Given point does not lie on the rectangle" )


---> console_out:
Given point lies inside the rectangle
 
MATCHED!! :D
 66%|██████▌   | 1154/1746 [13:33<07:01,  1.41it/s]

-------------------------------------


---> lineNum: 1155
---> probID: geeksforgeeks_1008_A
---> inputs:

---> outputs:
7


N = 1000
def countPairs ( arr , n ) :
    size = ( 2 * N ) + 1
    freq = [ 0 ] * size
    for i in range ( n ) :
        x = arr [ i ]
        freq [ x + N ] += 1
    ans = 0
    for i in range ( size ) :
        if freq [ i ] > 0 :
            ans += ( ( freq [ i ] ) * ( freq [ i ] - 1 ) ) // 2
            for j in range ( i + 2 , 2001 , 2 ) :
                if freq [ j ] > 0 and freq [ ( i + j ) // 2 ] > 0 :
                    ans += ( freq [ i ] * freq [ j ] )
    return ans
arr = [ 4 , 2 , 5 , 1 , 3 , 5 ]
n = len ( arr )
print ( countPairs ( arr , n ) )


---> console_out:
7
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1156
---> probID: geeksforgeeks_1753_A
---> inputs:

---> outputs:
Average of 1 numbers is 10.0
Average of 2 numbers is 15.0
Average of 3 numbers is 20.0
Average of 4 numbers is 25.0
Average of 5 numbers is 30.0
Average of 6 numbers is 35.0


class GFG :
    sum = 0
    n = 0
    @ staticmethod
    def getAvg ( x ) :
        GFG . sum += x
        GFG . n += 1
        return float ( GFG . sum ) / GFG . n
    @ staticmethod
    def streamAvg ( arr , n ) :
        avg = 0
        for i in range ( n ) :
            avg = GFG . getAvg ( int ( arr [ i ] ) )
            print ( "Average of {} numbers is {}" . format ( i + 1 , avg ) )
    @ staticmethod
    def main ( ) :
        arr = [ 10 , 20 , 30 , 40 , 50 , 60 ]
        n = len ( arr )
        GFG . streamAvg ( arr , n )
GFG . main ( )


---> console_out:
Average of 1 numbers is 10.0
Average of 2 numbers is 15.0
Average of 3 numbers is 20.0
Average of 4 numbers is 25.0
Average of 5 numbers is 30.0
Average of 6 numbers is 35.0
 
MATCHED!! :D
 66%|██████▌   | 1156/1746 [13:33<05:09,  1.91it/s]

-------------------------------------


---> lineNum: 1157
---> probID: geeksforgeeks_1327_A
---> inputs:

---> outputs:
YES
NO


import math
MAX = 10000
s = set ( )
def SieveOfEratosthenes ( ) :
    prime = [ True ] * MAX
    prime [ 0 ] = False
    prime [ 1 ] = False
    for p in range ( 2 , int ( math . sqrt ( MAX ) ) + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , MAX , p ) :
                prime [ i ] = False
    product = 1
    for p in range ( 2 , MAX ) :
        if prime [ p ] :
            product *= p
            s . add ( product + 1 )
def isEuclid ( n ) :
    if n in s :
        return True
    else :
        return False
SieveOfEratosthenes ( )
n = 31
if isEuclid ( n ) :
    print ( "YES" )
else :
    print ( "NO" )
n = 42
if isEuclid ( n ) :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
YES
NO
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1158
---> probID: codeforces_998_B
---> inputs:
6 4
1 2 5 10 15 20
---> outputs:
1

import math
n , b = map ( int , input ( ) . split ( ) )
arr = list ( map ( int , input ( ) . split ( ) ) )
v = [ ]
odd , even , count = 0 , 0 , 0
for i in range ( len ( arr ) ) :
    if i != 0 and odd == even :
        v . append ( abs ( arr [ i ] - arr [ i - 1 ] ) )
    if arr [ i ] % 2 == 0 :
        even += 1
    else :
        odd += 1
v . sort ( )
for i in range ( len ( v ) ) :
    if b >= v [ i ] :
        count += 1
        b -= v [ i ]
print ( count )


---> console_out:
1
 
MATCHED!! :D
 66%|██████▋   | 1158/1746 [13:33<03:47,  2.58it/s]

-------------------------------------


---> lineNum: 1159
---> probID: geeksforgeeks_1892_A
---> inputs:

---> outputs:
1


def maxOperations ( str ) :
    i , g , gk , gks = 0 , 0 , 0 , 0
    for i in range ( len ( str ) ) :
        if str [ i ] == 'g' :
            g += 1
        elif str [ i ] == 'k' :
            if g > 0 :
                g -= 1
                gk += 1
        elif str [ i ] == 's' :
            if gk > 0 :
                gk -= 1
                gks += 1
    return gks
if __name__ == '__main__' :
    a = "ggkssk"
    print ( maxOperations ( a ) )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1160
---> probID: codeforces_1041_A
---> inputs:
4
10 13 12 8
---> outputs:
2

import sys
n = int ( sys . stdin . readline ( ) )
a = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
a . sort ( )
min_val = a [ 0 ]
max_val = a [ - 1 ]
res = max_val - min_val + 1 - n
print ( res )


---> console_out:
2
 
MATCHED!! :D
 66%|██████▋   | 1160/1746 [13:33<02:49,  3.46it/s]

-------------------------------------


---> lineNum: 1161
---> probID: codeforces_216_B
---> inputs:
5 4
1 2
2 4
5 3
1 4
---> outputs:
1

import collections
class Forming_Teams :
    def __init__ ( self ) :
        self . count = 0
        self . seen = [ ]
        self . path = 0
        self . cycle = 1
        self . graph = collections . defaultdict ( list )
    def dfs ( self , child , par ) :
        if self . seen [ child ] :
            return self . cycle
        self . seen [ child ] = True
        for i in self . graph [ child ] :
            if i != par :
                self . count += 1
                if self . dfs ( i , child ) == self . cycle :
                    return self . cycle
        return self . path
if __name__ == '__main__' :
    m , n = map ( int , input ( ) . split ( ) )
    ft = Forming_Teams ( )
    ft . seen = [ False ] * ( m + 1 )
    for i in range ( n ) :
        x , y = map ( int , input ( ) . split ( ) )
        ft . graph [ x ] . append ( y )
        ft . graph [ y ] . append ( x )
    toremove = 0
    for i in range ( 1 , m + 1 ) :
        if not ft . seen [ i ] :
            ft . count = 0
            if ft . dfs ( i , 0 ) == ft . cycle :
                if ft . count % 2 == 1 :
                    toremove += 1
    if ( m - toremove ) % 2 == 1 :
        toremove += 1
    print ( toremove )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1162
---> probID: geeksforgeeks_3971_A
---> inputs:

---> outputs:
K'th smallest element is 5


import numpy as np
def kthSmallest ( arr , k ) :
    arr = np . sort ( arr )
    return arr [ k - 1 ]
arr = np . array ( [ 12 , 3 , 5 , 7 , 19 ] )
k = 2
print ( "K'th smallest element is" , kthSmallest ( arr , k ) )


---> console_out:
K'th smallest element is 5
 
MATCHED!! :D
 67%|██████▋   | 1162/1746 [13:34<02:26,  3.98it/s]out1,out2 20301010203040501020403010 20301010203040501020403010


-------------------------------------


---> lineNum: 1163
---> probID: codeforces_1689_B
---> inputs:
4
3
1 2 3
5
2 3 4 5 1
4
2 3 1 4
1
1
---> outputs:
2 3 1
1 2 3 4 5
1 2 4 3
-1

import sys
t = int ( input ( ) )
for i in range ( t ) :
    n = int ( input ( ) )
    arr = list ( map ( int , input ( ) . split ( ) ) )
    arr2 = list ( range ( 1 , n + 1 ) )
    try :
        for j in range ( n - 1 ) :
            if arr2 [ j ] == arr [ j ] :
                arr2 [ j ] , arr2 [ j + 1 ] = arr2 [ j + 1 ] , arr2 [ j ]
        if arr2 [ n - 1 ] == arr [ n - 1 ] :
            arr2 [ n - 1 ] , arr2 [ n - 2 ] = arr2 [ n - 2 ] , arr2 [ n - 1 ]
        for j in range ( n ) :
            sys . stdout . write ( str ( arr2 [ j ] ) + " " )
        sys . stdout . write ( "\n" )
    except :
        sys . stdout . write ( "-1\n" )


---> console_out:
2 3 1 
1 2 3 4 5 
1 2 4 3 
1 
 
MATCHED!! :D
out1,out2  1997403530293865615360000


-------------------------------------


---> lineNum: 1164
---> probID: projecteuler_p329_A
---> inputs:

---> outputs:
199740353/29386561536000

import math
class p329 :
    def __init__ ( self ) :
        self . START_NUM = 1
        self . END_NUM = 500
        self . CROAK_SEQ = "PPPPNNPPPNPPNPN"
        assert 0 <= self . START_NUM and self . START_NUM < self . END_NUM and self . END_NUM < math . inf
        assert 1 <= len ( self . CROAK_SEQ ) and len ( self . CROAK_SEQ ) <= 31
        self . NUM_JUMPS = len ( self . CROAK_SEQ ) - 1
        self . NUM_TRIALS = 1 << self . NUM_JUMPS
    def run ( self ) :
        globalNumerator = 0
        isPrime = Library . listPrimality ( self . END_NUM )
        for i in range ( self . START_NUM , self . END_NUM + 1 ) :
            for j in range ( self . NUM_TRIALS ) :
                pos = i
                trialNumerator = 1
                if isPrime [ pos ] == ( self . CROAK_SEQ [ 0 ] == 'P' ) :
                    trialNumerator *= 2
                for k in range ( self . NUM_JUMPS ) :
                    if pos <= self . START_NUM :
                        pos += 1
                    elif pos >= self . END_NUM :
                        pos -= 1
                    elif ( ( j >> k ) & 1 ) == 0 :
                        pos += 1
                    else :
                        pos -= 1
                    if isPrime [ pos ] == ( self . CROAK_SEQ [ k + 1 ] == 'P' ) :
                        trialNumerator *= 2
                globalNumerator += trialNumerator
        globalDenominator = ( self . END_NUM + 1 - self . START_NUM ) << self . NUM_JUMPS * 3 ** len ( self . CROAK_SEQ )
        return str ( globalNumerator / globalDenominator )


---> console_out:
 
DIDN'T MATCH!! :(
 67%|██████▋   | 1164/1746 [13:34<01:55,  5.03it/s]

-------------------------------------


---> lineNum: 1165
---> probID: geeksforgeeks_3653_A
---> inputs:

---> outputs:
2.0043678382716137 K.M


import math
def distance ( lat1 , lat2 , lon1 , lon2 ) :
    lon1 = math . radians ( lon1 )
    lon2 = math . radians ( lon2 )
    lat1 = math . radians ( lat1 )
    lat2 = math . radians ( lat2 )
    dlon = lon2 - lon1
    dlat = lat2 - lat1
    a = math . pow ( math . sin ( dlat / 2 ) , 2 ) + math . cos ( lat1 ) * math . cos ( lat2 ) * math . pow ( math . sin ( dlon / 2 ) , 2 )
    c = 2 * math . asin ( math . sqrt ( a ) )
    r = 6371
    return ( c * r )
lat1 = 53.32055555555556
lat2 = 53.31861111111111
lon1 = - 1.7297222222222221
lon2 = - 1.6997222222222223
print ( distance ( lat1 , lat2 , lon1 , lon2 ) , "K.M" )


---> console_out:
2.0043678382716137 K.M
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1166
---> probID: geeksforgeeks_1730_A
---> inputs:

---> outputs:
63
1159


import math
def centeredOctahedral ( n ) :
    return ( 2 * n + 1 ) * ( 2 * n * n + 2 * n + 3 ) // 3
n = 3
print ( centeredOctahedral ( n ) )
n = 9
print ( centeredOctahedral ( n ) )


---> console_out:
63
1159
 
MATCHED!! :D
 67%|██████▋   | 1166/1746 [13:34<01:32,  6.29it/s]Traceback (most recent call last):
  File "./junk/1703784499587_1153/main.py", line 2, in <module>
    N = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '5 4 0'
out1,out2  4000


-------------------------------------


---> lineNum: 1167
---> probID: aizu_p00294_A
---> inputs:
5 4 0
1
2
3
4
---> outputs:
400

import numpy as np
N = int ( input ( ) )
M = int ( input ( ) )
p = int ( input ( ) )
INF = 1 << 24
isDist = np . zeros ( N , dtype = bool )
Limit = N * 50
for i in range ( M ) :
    d = int ( input ( ) )
    isDist [ d ] = True
isDist2 = np . copy ( isDist )
min_cost = INF
def solv ( vec , now , coun , cos , alC , isDist ) :
    global min_cost
    nowp = now
    cost = cos
    count = coun
    while True :
        if min_cost <= cost :
            return
        if nowp == N :
            nowp = 0
        elif nowp == - 1 :
            nowp = N - 1
        if count == M :
            if min_cost > cost :
                min_cost = cost
            return
        if isDist [ nowp ] :
            isDist [ nowp ] = False
            count += 1
            if not alC and cost < Limit :
                isDist2 = np . copy ( isDist )
                solv ( vec * - 1 , nowp + vec * - 1 , count , cost + 100 , True , isDist2 )
        if count == M :
            if min_cost > cost :
                min_cost = cost
            return
        while True :
            if nowp == N :
                nowp = 0
            elif nowp == - 1 :
                nowp = N - 1
            if not isDist [ nowp ] :
                nowp += vec
                cost += 100
            else :
                break
solv ( 1 , p , 0 , 0 , False , isDist )
solv ( - 1 , p , 0 , 0 , False , isDist2 )
print ( min_cost )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1168
---> probID: geeksforgeeks_90_A
---> inputs:

---> outputs:
YES


class Solution :
    @ staticmethod
    def max_element ( A ) :
        max_val = float ( '-inf' )
        for i in range ( len ( A ) ) :
            if max_val < A [ i ] :
                max_val = A [ i ]
        return max_val
    @ staticmethod
    def SumDivPrime ( A , n ) :
        max_val = Solution . max_element ( A ) + 1
        prime = [ True ] * ( max_val + 1 )
        prime [ 0 ] = False
        prime [ 1 ] = False
        p = 2
        while p * p <= max_val :
            if prime [ p ] :
                for i in range ( p * 2 , max_val + 1 , p ) :
                    prime [ i ] = False
            p += 1
        sum_val = 0
        for i in range ( n ) :
            if prime [ A [ i ] ] :
                sum_val += A [ i ]
        for i in range ( n ) :
            if prime [ A [ i ] ] and sum_val % A [ i ] == 0 :
                print ( "YES" )
                return
        print ( "NO" )
    @ staticmethod
    def main ( ) :
        A = [ 1 , 2 , 3 , 4 , 5 ]
        n = len ( A )
        Solution . SumDivPrime ( A , n )
Solution . main ( )


---> console_out:
YES
 
MATCHED!! :D
 67%|██████▋   | 1168/1746 [13:34<01:33,  6.21it/s]

-------------------------------------


---> lineNum: 1169
---> probID: geeksforgeeks_4231_A
---> inputs:

---> outputs:
5 7 9 1 3 
7 9 1 3 5 
9 1 3 5 7 


import numpy as np
def leftRotate ( arr , n , k ) :
    for i in range ( k , k + n ) :
        print ( arr [ i % n ] , end = " " )
arr = np . array ( [ 1 , 3 , 5 , 7 , 9 ] )
n = len ( arr )
k = 2
leftRotate ( arr , n , k )
print ( )
k = 3
leftRotate ( arr , n , k )
print ( )
k = 4
leftRotate ( arr , n , k )
print ( )


---> console_out:
5 7 9 1 3 
7 9 1 3 5 
9 1 3 5 7 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1170
---> probID: geeksforgeeks_4568_A
---> inputs:

---> outputs:
56295


import math
def closestMultiple ( n , x ) :
    if x > n :
        return x
    n = n + x // 2
    n = n - ( n % x )
    return n
n = 56287
x = 27
print ( closestMultiple ( n , x ) )


---> console_out:
56295
 
MATCHED!! :D
 67%|██████▋   | 1170/1746 [13:35<01:33,  6.14it/s]

-------------------------------------


---> lineNum: 1171
---> probID: codeforces_1266_A
---> inputs:
6
603
006
205
228
1053
0000000000000000000000000000000000000000000000
---> outputs:
red
red
cyan
cyan
cyan
red

import sys
t = int ( input ( ) )
for _ in range ( t ) :
    s = input ( ) . strip ( )
    zero = 0
    sum = 0
    even = 0
    for i in range ( len ( s ) ) :
        sum += int ( s [ i ] )
        if s [ i ] == '0' :
            zero += 1
        if int ( s [ i ] ) % 2 == 0 and s [ i ] != '0' :
            even += 1
    if zero != len ( s ) and ( ( even == 0 and zero == 1 ) or zero == 0 or sum % 3 != 0 ) :
        print ( "cyan" )
    else :
        print ( "red" )


---> console_out:
red
red
cyan
cyan
cyan
red
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1172
---> probID: geeksforgeeks_2258_A
---> inputs:

---> outputs:
99

import numpy as np
dp = np . full ( ( 901 , 8101 ) , - 1 , dtype = int )
def minimumNumberOfDigits ( a , b ) :
    if a > b or a < 0 or b < 0 or a > 900 or b > 8100 :
        return - 1
    if a == 0 and b == 0 :
        return 0
    if dp [ a ] [ b ] != - 1 :
        return dp [ a ] [ b ]
    ans = 101
    for i in range ( 9 , 0 , - 1 ) :
        k = minimumNumberOfDigits ( a - i , b - ( i * i ) )
        if k != - 1 :
            ans = min ( ans , k + 1 )
    dp [ a ] [ b ] = ans
    return ans
def printSmallestNumber ( a , b ) :
    global dp
    dp = np . full ( ( 901 , 8101 ) , - 1 , dtype = int )
    dp [ 0 ] [ 0 ] = 0
    k = minimumNumberOfDigits ( a , b )
    if k == - 1 or k > 100 :
        print ( "-1" )
    else :
        while a > 0 and b > 0 :
            for i in range ( 1 , 10 ) :
                if a >= i and b >= i * i and 1 + dp [ a - i ] [ b - i * i ] == dp [ a ] [ b ] :
                    print ( i , end = "" )
                    a -= i
                    b -= i * i
                    break
a , b = 18 , 162
printSmallestNumber ( a , b )


---> console_out:
99 
MATCHED!! :D
 67%|██████▋   | 1172/1746 [13:35<01:36,  5.93it/s]

-------------------------------------


---> lineNum: 1173
---> probID: geeksforgeeks_4844_A
---> inputs:

---> outputs:
4


import collections
N = 5005
n , k = 0 , 0
gr = [ [ ] for _ in range ( N ) ]
d = [ [ 0 ] * 505 for _ in range ( N ) ]
ans = 0
def Add_edge ( x , y ) :
    gr [ x ] . append ( y )
    gr [ y ] . append ( x )
def dfs ( v , par ) :
    d [ v ] [ 0 ] = 1
    for i in gr [ v ] :
        if i != par :
            dfs ( i , v )
            for j in range ( 1 , k + 1 ) :
                global ans
                ans += d [ i ] [ j - 1 ] * d [ v ] [ k - j ]
            for j in range ( 1 , k + 1 ) :
                d [ v ] [ j ] += d [ i ] [ j - 1 ]
n = 5
k = 2
Add_edge ( 1 , 2 )
Add_edge ( 2 , 3 )
Add_edge ( 3 , 4 )
Add_edge ( 2 , 5 )
dfs ( 1 , 0 )
print ( ans )


---> console_out:
4
 
MATCHED!! :D
 67%|██████▋   | 1173/1746 [13:35<01:33,  6.14it/s]

-------------------------------------


---> lineNum: 1174
---> probID: geeksforgeeks_2115_A
---> inputs:

---> outputs:
5


import numpy as np
def findSubsequence ( arr , n ) :
    len = 1
    tmp = 0
    i = 0
    j = 0
    d = 0
    dp = np . zeros ( 10 , dtype = int )
    cnt = np . zeros ( 10 , dtype = int )
    locMax = 0
    tmp = arr [ 0 ]
    while tmp > 0 :
        dp [ tmp % 10 ] = 1
        tmp //= 10
    for i in range ( 1 , n ) :
        tmp = arr [ i ]
        locMax = 1
        cnt . fill ( 0 )
        while tmp > 0 :
            cnt [ tmp % 10 ] = 1
            tmp //= 10
        for d in range ( 10 ) :
            if cnt [ d ] == 1 :
                dp [ d ] += 1
                locMax = max ( locMax , dp [ d ] )
        for d in range ( 10 ) :
            if cnt [ d ] == 1 :
                dp [ d ] = locMax
        len = max ( len , locMax )
    return len
arr = [ 1 , 12 , 44 , 29 , 33 , 96 , 89 ]
n = len ( arr )
print ( findSubsequence ( arr , n ) )


---> console_out:
5
 
MATCHED!! :D
 67%|██████▋   | 1174/1746 [13:35<01:44,  5.45it/s]Traceback (most recent call last):
  File "./junk/1703784501018_4560/main.py", line 8, in <module>
    if int ( input ( ) ) in set :
ValueError: invalid literal for int() with base 10: '3 4'
out1,out2  001030


-------------------------------------


---> lineNum: 1175
---> probID: codeforces_1453_A
---> inputs:
3
1 2
1
3 4
3 2
1 3 4
2 4
9 14
2 7 16 28 33 57 59 86 99
3 9 14 19 25 26 28 35 41 59 85 87 99 100
---> outputs:
0
1
3

import sys
t = int ( input ( ) )
for i in range ( t ) :
    n , m = map ( int , input ( ) . split ( ) )
    set = set ( map ( int , input ( ) . split ( ) ) )
    count = 0
    for j in range ( m ) :
        if int ( input ( ) ) in set :
            count += 1
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1176
---> probID: geeksforgeeks_1336_A
---> inputs:

---> outputs:
Total possible pair with GCD 2 & LCM 12 = 4


def totalPrimeFactors ( n ) :
    count = 0
    if n % 2 == 0 :
        count += 1
        while n % 2 == 0 :
            n //= 2
    i = 3
    while i * i <= n :
        if n % i == 0 :
            count += 1
        while n % i == 0 :
            n //= i
        i += 2
    if n > 2 :
        count += 1
    return count
def countPairs ( G , L ) :
    if L % G != 0 :
        return 0
    div = L // G
    return 1 << totalPrimeFactors ( div )
if __name__ == '__main__' :
    G , L = 2 , 12
    print ( "Total possible pair with GCD" , G , "& LCM" , L , "=" , countPairs ( G , L ) )


---> console_out:
Total possible pair with GCD 2 & LCM 12 = 4
 
MATCHED!! :D
 67%|██████▋   | 1176/1746 [13:35<01:19,  7.21it/s]out1,out2 sumofmultiplesof70upto4901960 sumofmultiplesof70upto4901960


-------------------------------------


---> lineNum: 1177
---> probID: geeksforgeeks_2376_A
---> inputs:

---> outputs:
Sum of multiples of  7  up to  49  =  196.0


def calculate_sum ( a , N ) :
    m = N // a
    sum = m * ( m + 1 ) // 2
    ans = a * sum
    return ans
if __name__ == '__main__' :
    a = 7
    N = 49
    print ( "Sum of multiples of" , a , "up to" , N , "=" , calculate_sum ( a , N ) )


---> console_out:
Sum of multiples of 7 up to 49 = 196
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784501200_7680/main.py", line 3, in <module>
    n , m , k = map ( int , input ( ) . split ( ) )
ValueError: invalid literal for int() with base 10: '0.75'
out1,out2  60axe2620heal00impaler2250magicboost1650megafire00shield00


-------------------------------------


---> lineNum: 1178
---> probID: codeforces_105_A
---> inputs:
5 4 0.75
axe 350
impaler 300
ionize 80
megafire 120
magicboost 220
heal
megafire
shield
magicboost
---> outputs:
6
axe 262
heal 0
impaler 225
magicboost 165
megafire 0
shield 0

import sys
from collections import OrderedDict
n , m , k = map ( int , input ( ) . split ( ) )
skills = OrderedDict ( )
for i in range ( n ) :
    skill_name , skill_score = input ( ) . split ( )
    new_skill_score = int ( skill_score ) * k // 100
    if new_skill_score < 100 :
        continue
    skills [ skill_name ] = new_skill_score
for i in range ( m ) :
    skill_name = input ( ) . strip ( )
    if skill_name in skills :
        continue
    skills [ skill_name ] = 0
print ( len ( skills ) )
for skill_name , skill_score in skills . items ( ) :
    print ( skill_name , skill_score )
sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(
 67%|██████▋   | 1178/1746 [13:36<01:03,  8.91it/s]

-------------------------------------


---> lineNum: 1179
---> probID: geeksforgeeks_3737_A
---> inputs:

---> outputs:
4


import math
def countSolutions ( a ) :
    count = 0
    for i in range ( a + 1 ) :
        if a == ( i + ( a ^ i ) ) :
            count += 1
    return count
a = 3
print ( countSolutions ( a ) )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1180
---> probID: geeksforgeeks_3581_A
---> inputs:

---> outputs:
5


def next ( arr , target ) :
    start = 0
    end = len ( arr ) - 1
    ans = - 1
    while start <= end :
        mid = ( start + end ) // 2
        if arr [ mid ] <= target :
            start = mid + 1
        else :
            ans = mid
            end = mid - 1
    return ans
arr = [ 1 , 2 , 3 , 5 , 8 , 12 ]
print ( next ( arr , 8 ) )


---> console_out:
5
 
MATCHED!! :D
 68%|██████▊   | 1180/1746 [13:36<00:54, 10.48it/s]

-------------------------------------


---> lineNum: 1181
---> probID: geeksforgeeks_5090_A
---> inputs:

---> outputs:
three five zero 

word = [ "zero" , "one" , "two" , "three" , "four" , "five" , "six" , "seven" , "eight" , "nine" ]
def printWordsWithoutIfSwitch ( n ) :
    digits = [ 0 ] * 10
    dc = 0
    while n != 0 :
        digits [ dc ] = n % 10
        n = n // 10
        dc += 1
    for i in range ( dc - 1 , - 1 , - 1 ) :
        print ( word [ digits [ i ] ] , end = " " )
n = 350
printWordsWithoutIfSwitch ( n )


---> console_out:
three five zero  
MATCHED!! :D


-------------------------------------


---> lineNum: 1182
---> probID: codeforces_1111_B
---> inputs:
2 4 6
4 7
---> outputs:
11.00000000000000000000

import sys
n , k , m = map ( int , sys . stdin . readline ( ) . split ( ) )
a = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
a . sort ( )
sum_a = sum ( a )
max_avg = ( sum_a + min ( m , n * k ) ) / n
for i in range ( 1 , min ( n , m + 1 ) ) :
    sum_a -= a [ i - 1 ]
    max_avg = max ( max_avg , ( sum_a + min ( m - i , ( n - i ) * k ) ) / ( n - i ) )
print ( "{:.20f}" . format ( max_avg ) )


---> console_out:
11.00000000000000000000
 
MATCHED!! :D
 68%|██████▊   | 1182/1746 [13:36<00:48, 11.57it/s]

-------------------------------------


---> lineNum: 1183
---> probID: geeksforgeeks_4704_A
---> inputs:

---> outputs:
4


def solve ( a , b ) :
    l = len ( a )
    min_val = 0
    max_val = 0
    for i in range ( l ) :
        if a [ i ] == '+' or b [ i ] == '+' or a [ i ] != b [ i ] :
            max_val += 1
        if a [ i ] != '+' and b [ i ] != '+' and a [ i ] != b [ i ] :
            min_val += 1
    print ( min_val + max_val )
s1 = "a+c"
s2 = "++b"
solve ( list ( s1 ) , list ( s2 ) )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1184
---> probID: geeksforgeeks_464_A
---> inputs:

---> outputs:
Total Ways =  3


def TotalWays ( n , s , k ) :
    dp = [ 0 ] * n
    dp [ s - 1 ] = 1
    for i in range ( s , n ) :
        idx = max ( s - 1 , i - k )
        for j in range ( idx , i ) :
            dp [ i ] += dp [ j ]
    return dp [ n - 1 ]
if __name__ == '__main__' :
    n = 5
    k = 2
    s = 2
    print ( "Total Ways = " , TotalWays ( n , s , k ) )


---> console_out:
Total Ways =  3
 
MATCHED!! :D
 68%|██████▊   | 1184/1746 [13:36<00:45, 12.31it/s]

-------------------------------------


---> lineNum: 1185
---> probID: geeksforgeeks_5132_A
---> inputs:

---> outputs:
Even count :  2

Odd count :  5
YES


import math
def countEvenOdd ( n ) :
    even_count = 0
    odd_count = 0
    while n > 0 :
        rem = n % 10
        if rem % 2 == 0 :
            even_count += 1
        else :
            odd_count += 1
        n = math . floor ( n / 10 )
    print ( "Even count : " + str ( even_count ) )
    print ( "Odd count : " + str ( odd_count ) )
    if even_count % 2 == 0 and odd_count % 2 != 0 :
        return 1
    else :
        return 0
n = 2335453
t = countEvenOdd ( n )
if t == 1 :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
Even count : 2
Odd count : 5
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1186
---> probID: aizu_p00484_A
---> inputs:
7 4
14 1
13 2
12 3
14 2
8 2
16 3
11 2
---> outputs:
60

import sys
n , k = map ( int , input ( ) . split ( ) )
lists = [ [ ] for _ in range ( 10 ) ]
for i in range ( n ) :
    c , g = map ( int , input ( ) . split ( ) )
    lists [ g - 1 ] . append ( c )
dp = [ - 1 ] * ( k + 1 )
dp [ 0 ] = 0
for i in range ( 10 ) :
    lists [ i ] . sort ( reverse = True )
    for j in range ( k - 1 , - 1 , - 1 ) :
        if dp [ j ] == - 1 :
            continue
        s = 0
        for l in range ( len ( lists [ i ] ) ) :
            if j + l >= k :
                break
            s += lists [ i ] [ l ]
            dp [ j + l + 1 ] = max ( dp [ j + l + 1 ] , dp [ j ] + s + ( l + 1 ) * l )
print ( dp [ k ] )


---> console_out:
60
 
MATCHED!! :D
 68%|██████▊   | 1186/1746 [13:36<00:42, 13.25it/s]

-------------------------------------


---> lineNum: 1187
---> probID: geeksforgeeks_3634_A
---> inputs:

---> outputs:
1


import math
class GFG :
    class Point :
        def __init__ ( self , x , y ) :
            self . x = x
            self . y = y
    @ staticmethod
    def findmin ( p , n ) :
        a , b , c , d = 0 , 0 , 0 , 0
        for i in range ( n ) :
            if p [ i ] . x <= 0 :
                a += 1
            elif p [ i ] . x >= 0 :
                b += 1
            if p [ i ] . y >= 0 :
                c += 1
            elif p [ i ] . y <= 0 :
                d += 1
        return min ( min ( a , b ) , min ( c , d ) )
    @ staticmethod
    def main ( ) :
        p = [ GFG . Point ( 1 , 1 ) , GFG . Point ( 2 , 2 ) , GFG . Point ( - 1 , - 1 ) , GFG . Point ( - 2 , 2 ) ]
        n = len ( p )
        print ( GFG . findmin ( p , n ) )
GFG . main ( )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1188
---> probID: geeksforgeeks_5072_A
---> inputs:

---> outputs:
2


import math
def maxGCD ( N , P ) :
    ans = 1
    prime_factors = { }
    for i in range ( 2 , int ( math . sqrt ( P ) ) + 1 ) :
        while P % i == 0 :
            if i not in prime_factors :
                prime_factors [ i ] = 1
            else :
                prime_factors [ i ] += 1
            P //= i
    if P != 1 :
        if P not in prime_factors :
            prime_factors [ P ] = 1
        else :
            prime_factors [ P ] += 1
    for key , value in prime_factors . items ( ) :
        ans *= key ** ( value // N )
    return ans
N = 3
P = 24
print ( maxGCD ( N , P ) )


---> console_out:
2
 
MATCHED!! :D
 68%|██████▊   | 1188/1746 [13:36<00:40, 13.71it/s]Traceback (most recent call last):
  File "./junk/1703784501919_9051/main.py", line 2, in <module>
    n , k = map ( int , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2  0010004020500020


-------------------------------------


---> lineNum: 1189
---> probID: aizu_p02429_A
---> inputs:
4
2 0 2
---> outputs:
0:
1: 0
4: 2
5: 0 2

import math
n , k = map ( int , input ( ) . split ( ) )
mask = list ( map ( int , input ( ) . split ( ) ) )
for i in range ( int ( math . pow ( 2 , k ) ) ) :
    bitArray = [ 0 ] * n
    temp = i
    index = 0
    for j in range ( k ) :
        if temp % 2 == 1 :
            bitArray [ mask [ j ] ] = 1
            index += int ( math . pow ( 2 , mask [ j ] ) )
        temp //= 2
    print ( index , end = ":" )
    for j in range ( k ) :
        if bitArray [ mask [ j ] ] == 1 :
            print ( " " + str ( mask [ j ] ) , end = "" )
    print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1190
---> probID: geeksforgeeks_9_A
---> inputs:

---> outputs:
1 3 2 6 

import math
class GFG :
    class primeFactorization :
        def __init__ ( self , countOfPf , primeFactor ) :
            self . countOfPf = countOfPf
            self . primeFactor = primeFactor
    @ staticmethod
    def generateDivisors ( curIndex , curDivisor , arr ) :
        if curIndex == len ( arr ) :
            print ( curDivisor , end = " " )
            return
        for i in range ( arr [ curIndex ] . countOfPf + 1 ) :
            GFG . generateDivisors ( curIndex + 1 , curDivisor , arr )
            curDivisor *= arr [ curIndex ] . primeFactor
    @ staticmethod
    def findDivisors ( n ) :
        arr = [ ]
        for i in range ( 2 , int ( math . sqrt ( n ) ) + 1 ) :
            if n % i == 0 :
                count = 0
                while n % i == 0 :
                    n //= i
                    count += 1
                arr . append ( GFG . primeFactorization ( count , i ) )
        if n > 1 :
            arr . append ( GFG . primeFactorization ( 1 , n ) )
        curIndex = 0
        curDivisor = 1
        GFG . generateDivisors ( curIndex , curDivisor , arr )
    @ staticmethod
    def main ( ) :
        n = 6
        GFG . findDivisors ( n )
GFG . main ( )


---> console_out:
1 3 2 6  
MATCHED!! :D
 68%|██████▊   | 1190/1746 [13:36<00:40, 13.84it/s]

-------------------------------------


---> lineNum: 1191
---> probID: codeforces_607_A
---> inputs:
4
1 9
3 1
6 1
7 4
---> outputs:
1

import sys
n = int ( input ( ) )
beacon = [ 0 ] * 1000001
dp = [ 0 ] * 1000001
for i in range ( n ) :
    a , b = map ( int , input ( ) . split ( ) )
    beacon [ a ] = b
if beacon [ 0 ] != 0 :
    dp [ 0 ] = 1
max_val = 0
for i in range ( 1 , 1000001 ) :
    if beacon [ i ] != 0 and beacon [ i ] < i :
        dp [ i ] = dp [ i - beacon [ i ] - 1 ] + 1
    elif beacon [ i ] != 0 :
        dp [ i ] = 1
    else :
        dp [ i ] = dp [ i - 1 ]
    max_val = max ( max_val , dp [ i ] )
print ( n - max_val )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1192
---> probID: geeksforgeeks_2850_A
---> inputs:

---> outputs:
ss


def largestPalinSub ( s ) :
    res = ""
    mx = s [ 0 ]
    for i in range ( 1 , len ( s ) ) :
        mx = max ( mx , s [ i ] )
    for i in range ( len ( s ) ) :
        if s [ i ] == mx :
            res += s [ i ]
    return res
s = "geeksforgeeks"
print ( largestPalinSub ( s ) )


---> console_out:
ss
 
MATCHED!! :D
 68%|██████▊   | 1192/1746 [13:37<01:45,  5.23it/s]

-------------------------------------


---> lineNum: 1193
---> probID: aizu_p00429_A
---> inputs:
5
11
5
11
0
---> outputs:
13112221
13112221

import sys
while True :
    n = int ( input ( ) )
    if n == 0 :
        break
    s = input ( ) . strip ( )
    t = 0
    u = ""
    for k in range ( n ) :
        i = 0
        while i < len ( s ) :
            count = 1
            t = ord ( s [ i ] )
            while i < len ( s ) - 1 and ord ( s [ i + 1 ] ) == t :
                i += 1
                count += 1
            u += str ( count )
            u += chr ( t )
            i += 1
        s = u
        u = ""
    print ( s )


---> console_out:
13112221
13112221
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1194
---> probID: codeforces_264_B
---> inputs:
5
2 3 4 6 9
---> outputs:
4

import sys
dp = [ 0 ] * 100001
def factoriseopt ( n ) :
    ans = [ ]
    if n == 1 :
        ans . append ( 1 )
        return ans
    i = 2
    while i * i <= n :
        if n % i == 0 :
            cnt = 0
            while n % i == 0 :
                cnt += 1
                n //= i
            ans . append ( i )
        i += 1
    if n != 1 :
        ans . append ( n )
    return ans
n = int ( input ( ) )
arr = list ( map ( int , input ( ) . split ( ) ) )
for i in range ( n ) :
    ansArrayList = factoriseopt ( arr [ i ] )
    best = 0
    for x in ansArrayList :
        best = max ( best , dp [ x ] )
    for x in ansArrayList :
        dp [ x ] = best + 1
maxsofar = 0
for x in dp :
    maxsofar = max ( maxsofar , x )
print ( maxsofar )


---> console_out:
4
 
MATCHED!! :D
 68%|██████▊   | 1194/1746 [13:37<01:26,  6.36it/s]

-------------------------------------


---> lineNum: 1195
---> probID: geeksforgeeks_3577_A
---> inputs:

---> outputs:
20 15 20 40 
20 35 70 60 


def initializeDiffArray ( A , D ) :
    n = len ( A )
    D [ 0 ] = A [ 0 ]
    D [ n ] = 0
    for i in range ( 1 , n ) :
        D [ i ] = A [ i ] - A [ i - 1 ]
def update ( D , l , r , x ) :
    D [ l ] += x
    D [ r + 1 ] -= x
def printArray ( A , D ) :
    for i in range ( len ( A ) ) :
        if i == 0 :
            A [ i ] = D [ i ]
        else :
            A [ i ] = D [ i ] + A [ i - 1 ]
        print ( A [ i ] , end = " " )
    print ( )
A = [ 10 , 5 , 20 , 40 ]
n = len ( A )
D = [ 0 ] * ( n + 1 )
initializeDiffArray ( A , D )
update ( D , 0 , 1 , 10 )
printArray ( A , D )
update ( D , 1 , 3 , 20 )
update ( D , 2 , 2 , 30 )
printArray ( A , D )


---> console_out:
20 15 20 40 
20 35 70 60 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1196
---> probID: geeksforgeeks_1559_A
---> inputs:

---> outputs:
Maximum Number of Guests = 3 at time 5


import numpy as np
def findMaxGuests ( arrl , exit , n ) :
    arrl = np . sort ( arrl )
    exit = np . sort ( exit )
    guests_in = 1
    max_guests = 1
    time = arrl [ 0 ]
    i = 1
    j = 0
    while i < n and j < n :
        if arrl [ i ] <= exit [ j ] :
            guests_in += 1
            if guests_in > max_guests :
                max_guests = guests_in
                time = arrl [ i ]
            i += 1
        else :
            guests_in -= 1
            j += 1
    print ( "Maximum Number of Guests = " + str ( max_guests ) + " at time " + str ( time ) )
arrl = np . array ( [ 1 , 2 , 10 , 5 , 5 ] )
exit = np . array ( [ 4 , 5 , 12 , 9 , 12 ] )
n = len ( arrl )
findMaxGuests ( arrl , exit , n )


---> console_out:
Maximum Number of Guests = 3 at time 5
 
MATCHED!! :D
 68%|██████▊   | 1196/1746 [13:38<01:27,  6.30it/s]

-------------------------------------


---> lineNum: 1197
---> probID: aizu_p01213_A
---> inputs:
ABCABCABAB
ZZZZZZZZZZZZ
#END
---> outputs:
ABAB
ZZZZZZ

import sys
class Main :
    def __init__ ( self ) :
        self . sc = sys . stdin
    def run ( self ) :
        while True :
            in_str = self . sc . readline ( ) . strip ( )
            if in_str == "#END" :
                return
            ans = ""
            for i in range ( 1 , len ( in_str ) ) :
                lcs_str = self . lcs ( in_str [ : i ] , in_str [ i : ] )
                if len ( lcs_str ) > len ( ans ) :
                    ans = lcs_str
            print ( ans )
    def lcs ( self , s , t ) :
        n = len ( s )
        m = len ( t )
        dp = [ [ 0 ] * ( m + 1 ) for _ in range ( n + 1 ) ]
        for i in range ( n ) :
            for j in range ( m ) :
                if s [ i ] == t [ j ] :
                    dp [ i + 1 ] [ j + 1 ] = dp [ i ] [ j ] + 1
                else :
                    dp [ i + 1 ] [ j + 1 ] = max ( dp [ i + 1 ] [ j ] , dp [ i ] [ j + 1 ] )
        res = [ "" ] * dp [ n ] [ m ]
        while n > 0 and m > 0 :
            if dp [ n ] [ m ] == dp [ n - 1 ] [ m ] :
                n -= 1
            elif dp [ n ] [ m ] == dp [ n ] [ m - 1 ] :
                m -= 1
            else :
                res [ dp [ n - 1 ] [ m - 1 ] ] = s [ n - 1 ]
                n -= 1
                m -= 1
        return "" . join ( res )
if __name__ == "__main__" :
    Main ( ) . run ( )


---> console_out:
ABAB
ZZZZZZ
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1198
---> probID: geeksforgeeks_5193_A
---> inputs:

---> outputs:
1/36450000


def calcFunction ( n , r ) :
    finalDenominator = 1
    mx = max ( r , n - r )
    for i in range ( mx + 1 , n + 1 ) :
        denominator = i ** i
        numerator = ( i - mx ) ** ( i - mx )
        finalDenominator = ( finalDenominator * denominator ) // numerator
    return finalDenominator
if __name__ == '__main__' :
    n , r = 6 , 2
    print ( "1/" + str ( calcFunction ( n , r ) ) )


---> console_out:
1/36450000
 
MATCHED!! :D
 69%|██████▊   | 1198/1746 [13:38<01:11,  7.63it/s]

-------------------------------------


---> lineNum: 1199
---> probID: geeksforgeeks_3412_A
---> inputs:

---> outputs:
Yes


import math
def isPerfectSquare ( x ) :
    sr = int ( math . sqrt ( x ) )
    if sr * sr == x :
        print ( "Yes" )
    else :
        print ( "No" )
n = 7
k = 2
isPerfectSquare ( n + k )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1200
---> probID: atcoder_AGC003_C
---> inputs:
1
114
---> outputs:
0

import heapq
NUM = int ( 1e5 + 2 )
N = int ( input ( ) )
map = { }
nums = [ ]
for i in range ( N ) :
    tmp = int ( input ( ) )
    heapq . heappush ( nums , tmp )
    map [ tmp ] = i
bin = 0
diff = 0
while nums :
    num = heapq . heappop ( nums )
    idx = map [ num ]
    if ( bin % 2 ) != ( idx % 2 ) :
        diff += 1
    bin += 1
    bin %= 2
ans = diff // 2
print ( ans )


---> console_out:
0
 
MATCHED!! :D
 69%|██████▊   | 1200/1746 [13:38<01:00,  9.08it/s]Traceback (most recent call last):
  File "./junk/1703784503729_2430/main.py", line 5, in <module>
    value = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '18 55 16 17'
out1,out2  yes


-------------------------------------


---> lineNum: 1201
---> probID: codeforces_653_A
---> inputs:
4
18 55 16 17
---> outputs:
YES

import sys
n = int ( input ( ) )
a = [ ]
for i in range ( n ) :
    value = int ( input ( ) )
    a . append ( value )
a = sorted ( list ( set ( a ) ) )
found = False
for i in range ( len ( a ) ) :
    if i + 1 < len ( a ) and i + 2 < len ( a ) :
        if a [ i ] + 1 == a [ i + 1 ] and a [ i + 1 ] + 1 == a [ i + 2 ] :
            found = True
print ( "YES" if found else "NO" )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784503789_6868/main.py", line 27, in <module>
    list . append ( int ( input ( ) ) )
ValueError: invalid literal for int() with base 10: '1 4 1 3 2 4'
out1,out2  24000100104805049010


-------------------------------------


---> lineNum: 1202
---> probID: aizu_p00262_A
---> inputs:
6
1 4 1 3 2 4
5
1 2 3 4 5
10
1 1 1 1 1 1 1 1 1 1
9
1 1 1 1 1 1 1 1 1
12
1 4 1 3 2 4 3 3 2 1 2 2
1
5050
3
10000 10000 100
0
---> outputs:
24
0
10
-1
48
5049
-1

import sys
def check ( b ) :
    if b [ 0 ] != 1 :
        return False
    for i in range ( 1 , len ( b ) ) :
        if b [ i - 1 ] != b [ i ] - 1 :
            return False
    return True
def gap ( b ) :
    for i in range ( len ( b ) ) :
        if b [ i ] <= 0 :
            return False
    return True
def removeGap ( b ) :
    i = 0
    while i < len ( b ) :
        if b [ i ] <= 0 :
            b . pop ( i )
            i -= 1
        i += 1
while True :
    N = int ( input ( ) )
    if N == 0 :
        break
    list = [ ]
    for i in range ( N ) :
        list . append ( int ( input ( ) ) )
    c = 0
    while not check ( list ) and c < 10000 :
        c += 1
        if gap ( list ) :
            size = len ( list )
            for i in range ( len ( list ) ) :
                list [ i ] -= 1
            list . append ( size )
        removeGap ( list )
    print ( c if check ( list ) else - 1 )
    list . clear ( )
    del list [ : ]
    del sys . modules [ __name__ ] . __dict__ [ 'list' ]
    del sys . modules [ __name__ ] . __dict__ [ 'check' ]
    del sys . modules [ __name__ ] . __dict__ [ 'gap' ]
    del sys . modules [ __name__ ] . __dict__ [ 'removeGap' ]


---> console_out:
 
DIDN'T MATCH!! :(
 69%|██████▉   | 1202/1746 [13:38<00:52, 10.43it/s]

-------------------------------------


---> lineNum: 1203
---> probID: geeksforgeeks_2677_A
---> inputs:

---> outputs:
No
Yes


import math
def isDivisible ( S ) :
    n = len ( S )
    if S [ n - 1 ] != '5' and S [ n - 1 ] != '0' :
        return False
    sum = 0
    for i in range ( n ) :
        sum += int ( S [ i ] )
    if sum % 3 == 0 :
        return True
    else :
        return False
S = "15645746327462384723984023940239"
if isDivisible ( S ) == True :
    print ( "Yes" )
else :
    print ( "No" )
S1 = "15645746327462384723984023940235"
if isDivisible ( S1 ) == True :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
No
Yes
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784503916_4040/main.py", line 42, in <module>
    p . main ( )
  File "./junk/1703784503916_4040/main.py", line 5, in main
    print ( self . run ( ) )
  File "./junk/1703784503916_4040/main.py", line 19, in run
    sum = self . findSum ( sumLimit )
  File "./junk/1703784503916_4040/main.py", line 24, in findSum
    for a in range ( 1 , limit ) :
TypeError: 'NoneType' object cannot be interpreted as an integer
out1,out2  10061930


-------------------------------------


---> lineNum: 1204
---> probID: projecteuler_p142_A
---> inputs:

---> outputs:
1006193

class p142 :
    def __init__ ( self ) :
        self . isSquare = None
    def main ( self ) :
        print ( self . run ( ) )
    def run ( self ) :
        sumLimit = 10
        while True :
            self . isSquare = [ False ] * sumLimit
            for i in range ( sumLimit ) :
                if i * i < sumLimit :
                    self . isSquare [ i * i ] = True
            sum = self . findSum ( sumLimit )
            if sum != - 1 :
                sum = sumLimit
                break
            sumLimit *= 10
        while True :
            sum = self . findSum ( sumLimit )
            if sum == - 1 :
                return str ( sumLimit )
            sumLimit = sum
    def findSum ( self , limit ) :
        for a in range ( 1 , limit ) :
            if a * a >= limit :
                break
            for b in range ( a - 1 , 0 , - 1 ) :
                if ( a + b ) % 2 != 0 :
                    continue
                x = ( a * a + b * b ) // 2
                y = ( a * a - b * b ) // 2
                if x + y + 1 >= limit :
                    continue
                zlimit = min ( y , limit - x - y )
                for c in range ( int ( y ** 0.5 ) + 1 , limit ) :
                    if c * c - y >= zlimit :
                        break
                    z = c * c - y
                    if self . isSquare [ x + z ] and self . isSquare [ x - z ] and self . isSquare [ y - z ] :
                        return x + y + z
p = p142 ( )
p . main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 69%|██████▉   | 1204/1746 [13:38<00:47, 11.42it/s]

-------------------------------------


---> lineNum: 1205
---> probID: geeksforgeeks_2775_A
---> inputs:

---> outputs:
1101


def isVowel ( c ) :
    return c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u'
def encryptString ( s , n , k ) :
    countVowels = 0
    countConsonants = 0
    ans = ""
    for l in range ( n - k + 1 ) :
        countVowels = 0
        countConsonants = 0
        for r in range ( l , l + k ) :
            if isVowel ( s [ r ] ) :
                countVowels += 1
            else :
                countConsonants += 1
        ans += str ( countVowels * countConsonants )
    return ans
s = "hello"
n = len ( s )
k = 2
print ( encryptString ( s , n , k ) )


---> console_out:
1101
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784504080_4125/main.py", line 6, in <module>
    N , M , S , T = int ( line [ 0 ] ) , int ( line [ 1 ] ) , line [ 2 ] , line [ 3 ]
IndexError: list index out of range
out1,out2  60


-------------------------------------


---> lineNum: 1206
---> probID: atcoder_AGC028_A
---> inputs:
3 2
acp
ae
---> outputs:
6

import sys
def gcd ( a , b ) :
    return a if b == 0 else gcd ( b , a % b )
for line in sys . stdin :
    line = line . strip ( ) . split ( )
    N , M , S , T = int ( line [ 0 ] ) , int ( line [ 1 ] ) , line [ 2 ] , line [ 3 ]
    gcdNM = gcd ( N , M )
    lcmNM = ( N // gcdNM ) * M
    stepS = M // gcdNM
    stepT = N // gcdNM
    curS = 0
    curT = 0
    isExisted = True
    while curS < len ( S ) and curT < len ( T ) :
        idxXS = curS * stepS + 1
        idxXT = curT * stepT + 1
        if idxXS == idxXT :
            if S [ curS ] != T [ curT ] :
                isExisted = False
                break
            else :
                curS += 1
                curT += 1
        elif idxXS < idxXT :
            curS += 1
        elif idxXT < idxXS :
            curT += 1
    if isExisted :
        print ( lcmNM )
    else :
        print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 69%|██████▉   | 1206/1746 [13:38<00:45, 11.88it/s]

-------------------------------------


---> lineNum: 1207
---> probID: codeforces_203_B
---> inputs:
4 11
1 1
1 2
1 3
2 2
2 3
1 4
2 4
3 4
3 2
3 3
4 1
---> outputs:
10

import sys
N , M = map ( int , input ( ) . split ( ) )
black = [ [ 0 ] * ( N + 2 ) for _ in range ( N + 2 ) ]
for m in range ( 1 , M + 1 ) :
    x , y = map ( int , input ( ) . split ( ) )
    for xx in range ( x - 1 , x + 2 ) :
        for yy in range ( y - 1 , y + 2 ) :
            black [ xx ] [ yy ] += 1
            if black [ xx ] [ yy ] == 9 :
                print ( m )
                sys . exit ( )
print ( "-1" )


---> console_out:
10
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1208
---> probID: aizu_p00151_A
---> inputs:
5
00011
00101
01000
10101
00010
8
11000001
10110111
01100111
01111010
11111111
01011010
10100010
10000001
2
01
00
3
000
000
000
0
---> outputs:
4
8
1
0

import sys
dx = [ 1 , 1 , 0 , - 1 ]
dy = [ 0 , 1 , 1 , 1 ]
for line in sys . stdin :
    n = int ( line . strip ( ) )
    if n == 0 :
        break
    a = [ [ 0 for _ in range ( n ) ] for _ in range ( n ) ]
    ans = 0
    for i in range ( n ) :
        s = input ( ) . strip ( )
        for j in range ( n ) :
            a [ i ] [ j ] = int ( s [ j ] )
    for i in range ( n ) :
        for j in range ( n ) :
            for k in range ( 4 ) :
                cnt = 0
                sy = i
                sx = j
                while 0 <= sx < n and sy < n and a [ sy ] [ sx ] == 1 :
                    cnt += 1
                    sx += dx [ k ]
                    sy += dy [ k ]
                ans = max ( ans , cnt )
    print ( ans )


---> console_out:
4
8
1
0
 
MATCHED!! :D
 69%|██████▉   | 1208/1746 [13:39<00:41, 12.86it/s]

-------------------------------------


---> lineNum: 1209
---> probID: geeksforgeeks_3044_A
---> inputs:

---> outputs:
2275.0


import math
def fourthPowerSum ( n ) :
    return ( ( 6 * math . pow ( n , 5 ) ) + ( 15 * math . pow ( n , 4 ) ) + ( 10 * math . pow ( n , 3 ) ) - n ) / 30
n = 6
print ( fourthPowerSum ( n ) )


---> console_out:
2275.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1210
---> probID: geeksforgeeks_2831_A
---> inputs:

---> outputs:
Maximum length subsequence = 5


from collections import defaultdict
def maxLengthSub ( arr ) :
    max_val = 0
    start = 0
    map = defaultdict ( int )
    for i in range ( len ( arr ) ) :
        temp = 0
        if arr [ i ] - 1 in map :
            temp = map [ arr [ i ] - 1 ]
        if arr [ i ] in map :
            temp = max ( temp , map [ arr [ i ] ] )
        if arr [ i ] + 1 in map :
            temp = max ( temp , map [ arr [ i ] + 1 ] )
        temp += 1
        if temp > max_val :
            max_val = temp
        map [ arr [ i ] ] = temp
    return max_val
arr = [ 2 , 5 , 6 , 3 , 7 , 6 , 5 , 8 ]
print ( "Maximum length subsequence =" , maxLengthSub ( arr ) )


---> console_out:
Maximum length subsequence = 5
 
MATCHED!! :D
 69%|██████▉   | 1210/1746 [13:39<00:38, 13.76it/s]

-------------------------------------


---> lineNum: 1211
---> probID: geeksforgeeks_1474_A
---> inputs:

---> outputs:
1 2 3 4 5 6 

import math
def rearrange ( arr ) :
    if arr is None or len ( arr ) % 2 == 1 :
        return
    currIdx = ( len ( arr ) - 1 ) // 2
    while currIdx > 0 :
        count = currIdx
        swapIdx = currIdx
        while count > 0 :
            temp = arr [ swapIdx + 1 ]
            arr [ swapIdx + 1 ] = arr [ swapIdx ]
            arr [ swapIdx ] = temp
            swapIdx += 1
            count -= 1
        currIdx -= 1
if __name__ == '__main__' :
    arr = [ 1 , 3 , 5 , 2 , 4 , 6 ]
    rearrange ( arr )
    for i in range ( len ( arr ) ) :
        print ( " " + str ( arr [ i ] ) , end = '' )


---> console_out:
 1 2 3 4 5 6 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784504452_5133/main.py", line 11, in <module>
    init = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 3 1 10'
out1,out2  10150120595502143109298016392024774088400


-------------------------------------


---> lineNum: 1212
---> probID: aizu_p00449_A
---> inputs:
3 8
1 3 1 10
0 2 3
1 2 3 20
1 1 2 5
0 3 2
1 1 3 7
1 2 1 9
0 2 3
5 16
1 1 2 343750
1 1 3 3343
1 1 4 347392
1 1 5 5497
1 2 3 123394
1 2 4 545492
1 2 5 458
1 3 4 343983
1 3 5 843468
1 4 5 15934
0 2 1
0 4 1
0 3 2
0 4 2
0 4 3
0 5 3
0 0
---> outputs:
-1
15
12
5955
21431
9298
16392
24774
8840

import sys
INF = 1 << 58
while True :
    n , k = map ( int , input ( ) . split ( ) )
    if n == 0 and k == 0 :
        break
    fare = [ [ INF ] * n for _ in range ( n ) ]
    for i in range ( n ) :
        fare [ i ] [ i ] = 0
    for i in range ( k ) :
        init = int ( input ( ) )
        if init == 1 :
            c , d , e = map ( int , input ( ) . split ( ) )
            c -= 1
            d -= 1
            if e < fare [ c ] [ d ] :
                fare [ c ] [ d ] = fare [ d ] [ c ] = e
                for p in range ( n ) :
                    for q in range ( n ) :
                        fare [ p ] [ q ] = min ( fare [ p ] [ q ] , fare [ p ] [ c ] + fare [ c ] [ d ] + fare [ d ] [ q ] )
                        fare [ p ] [ q ] = min ( fare [ p ] [ q ] , fare [ p ] [ d ] + fare [ c ] [ d ] + fare [ c ] [ q ] )
        else :
            a , b = map ( int , input ( ) . split ( ) )
            a -= 1
            b -= 1
            print ( fare [ a ] [ b ] if fare [ a ] [ b ] != INF else - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 69%|██████▉   | 1212/1746 [13:39<00:37, 14.41it/s]

-------------------------------------


---> lineNum: 1213
---> probID: geeksforgeeks_1157_A
---> inputs:

---> outputs:
Vowels: 5
Consonant: 8
Digit: 3
Special Character: 2


def countCharacterType ( str ) :
    vowels = 0
    consonant = 0
    specialChar = 0
    digit = 0
    for i in range ( len ( str ) ) :
        ch = str [ i ]
        if ( ch >= 'a' and ch <= 'z' ) or ( ch >= 'A' and ch <= 'Z' ) :
            ch = ch . lower ( )
            if ch == 'a' or ch == 'e' or ch == 'i' or ch == 'o' or ch == 'u' :
                vowels += 1
            else :
                consonant += 1
        elif ch >= '0' and ch <= '9' :
            digit += 1
        else :
            specialChar += 1
    print ( "Vowels:" , vowels )
    print ( "Consonant:" , consonant )
    print ( "Digit:" , digit )
    print ( "Special Character:" , specialChar )
str = "geeks for geeks121"
countCharacterType ( str )


---> console_out:
Vowels: 5
Consonant: 8
Digit: 3
Special Character: 2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1214
---> probID: geeksforgeeks_3734_A
---> inputs:

---> outputs:
98.0 %


def increaseInVol ( l , b , h ) :
    percentInc = ( 1 + ( l / 100 ) ) * ( 1 + ( b / 100 ) ) * ( 1 + ( h / 100 ) )
    percentInc -= 1
    percentInc *= 100
    return percentInc
l , b , h = 50 , 20 , 10
print ( str ( increaseInVol ( l , b , h ) ) + "%" )


---> console_out:
98.0%
 
MATCHED!! :D
 70%|██████▉   | 1214/1746 [13:39<00:35, 14.99it/s]Traceback (most recent call last):
  File "./junk/1703784504635_8365/main.py", line 19, in <module>
    print ( MaxTotalRectangleArea ( a , n ) )
  File "./junk/1703784504635_8365/main.py", line 8, in MaxTotalRectangleArea
    if ( a [ i ] == a [ i + 1 ] or a [ i ] - a [ i + 1 ] == 1 ) and not flag :
IndexError: index 12 is out of bounds for axis 0 with size 12
out1,out2  2820


-------------------------------------


---> lineNum: 1215
---> probID: geeksforgeeks_4679_A
---> inputs:

---> outputs:
282


import numpy as np
def MaxTotalRectangleArea ( a , n ) :
    a = np . sort ( a )
    sum = 0
    flag = False
    len = 0
    for i in range ( n ) :
        if ( a [ i ] == a [ i + 1 ] or a [ i ] - a [ i + 1 ] == 1 ) and not flag :
            flag = True
            len = a [ i + 1 ]
            i += 1
        elif ( a [ i ] == a [ i + 1 ] or a [ i ] - a [ i + 1 ] == 1 ) and flag :
            sum += a [ i + 1 ] * len
            flag = False
            i += 1
    return sum
a = np . array ( [ 10 , 10 , 10 , 10 , 11 , 10 , 11 , 10 , 9 , 9 , 8 , 8 ] )
n = len ( a )
print ( MaxTotalRectangleArea ( a , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1216
---> probID: geeksforgeeks_2484_A
---> inputs:

---> outputs:
Current list:
Forward direction: 1 2 3 4 5
Backward direction: 5 4 3 2 1

Reversed list:
Forward direction: 5 4 3 2 1
Backward direction: 1 2 3 4 5


class GFG :
    class Node :
        def __init__ ( self , data ) :
            self . data = data
            self . next = None
            self . prev = None
    @ staticmethod
    def getNode ( data ) :
        newNode = GFG . Node ( data )
        return newNode
    @ staticmethod
    def insertEnd ( head , new_node ) :
        if head is None :
            new_node . next = new_node . prev = new_node
            head = new_node
            return head
        last = head . prev
        new_node . next = head
        head . prev = new_node
        new_node . prev = last
        last . next = new_node
        return head
    @ staticmethod
    def reverse ( head ) :
        if head is None :
            return None
        new_head = None
        last = head . prev
        curr = last
        while curr . prev != last :
            prev = curr . prev
            new_head = GFG . insertEnd ( new_head , curr )
            curr = prev
        new_head = GFG . insertEnd ( new_head , curr )
        return new_head
    @ staticmethod
    def display ( head ) :
        if head is None :
            return
        temp = head
        print ( "Forward direction: " , end = "" )
        while temp . next != head :
            print ( temp . data , end = " " )
            temp = temp . next
        print ( temp . data , end = " " )
        last = head . prev
        temp = last
        print ( "\nBackward direction: " , end = "" )
        while temp . prev != last :
            print ( temp . data , end = " " )
            temp = temp . prev
        print ( temp . data , end = " " )
    @ staticmethod
    def main ( ) :
        head = None
        head = GFG . insertEnd ( head , GFG . getNode ( 1 ) )
        head = GFG . insertEnd ( head , GFG . getNode ( 2 ) )
        head = GFG . insertEnd ( head , GFG . getNode ( 3 ) )
        head = GFG . insertEnd ( head , GFG . getNode ( 4 ) )
        head = GFG . insertEnd ( head , GFG . getNode ( 5 ) )
        print ( "Current list:" )
        GFG . display ( head )
        head = GFG . reverse ( head )
        print ( "\n\nReversed list:" )
        GFG . display ( head )
if __name__ == "__main__" :
    GFG . main ( )


---> console_out:
Current list:
Forward direction: 1 2 3 4 5 
Backward direction: 5 4 3 2 1 

Reversed list:
Forward direction: 5 4 3 2 1 
Backward direction: 1 2 3 4 5  
MATCHED!! :D
 70%|██████▉   | 1216/1746 [13:39<00:52, 10.00it/s]

-------------------------------------


---> lineNum: 1217
---> probID: geeksforgeeks_915_A
---> inputs:

---> outputs:
71232


def lastFiveDigits ( n ) :
    n = ( n // 10000 ) * 10000 + ( ( n // 100 ) % 10 ) * 1000 + ( n % 10 ) * 100 + ( ( n // 10 ) % 10 ) * 10 + ( n // 1000 ) % 10
    ans = 1
    for i in range ( 5 ) :
        ans *= n
        ans %= 100000
    print ( ans )
n = 12345
lastFiveDigits ( n )


---> console_out:
71232
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784505050_3187/main.py", line 14, in <module>
    print ( run ( ) )
  File "./junk/1703784505050_3187/main.py", line 12, in run
    sum += int ( s [ j ] )
ValueError: invalid literal for int() with base 10: 'e'
out1,out2  408860


-------------------------------------


---> lineNum: 1218
---> probID: projecteuler_p080_A
---> inputs:

---> outputs:
40886

from math import sqrt
from decimal import Decimal
def run ( ) :
    sum = 0
    for i in range ( 1 , 101 ) :
        x = Decimal ( i )
        x = x * ( 10 ** ( 100 * 2 ) )
        y = sqrt ( x )
        if y * y != x :
            s = str ( y ) [ : 100 ]
            for j in range ( len ( s ) ) :
                sum += int ( s [ j ] )
    return str ( sum )
print ( run ( ) )


---> console_out:
 
DIDN'T MATCH!! :(
 70%|██████▉   | 1218/1746 [13:39<00:46, 11.27it/s]

-------------------------------------


---> lineNum: 1219
---> probID: geeksforgeeks_2887_A
---> inputs:

---> outputs:
Pythagoras Triplets exist i.e. 22   120   122


import math
def evaluate ( n ) :
    if n == 1 or n == 2 :
        print ( "No Pythagoras Triplet exists" )
    elif n % 2 == 0 :
        var = 1 * n * n // 4
        print ( "Pythagoras Triplets exist i.e." , end = " " )
        print ( n , var - 1 , var + 1 )
    elif n % 2 != 0 :
        var = 1 * n * n + 1
        print ( "Pythagoras Triplets exist i.e." , end = " " )
        print ( n , var // 2 - 1 , var // 2 )
n = 22
evaluate ( n )


---> console_out:
Pythagoras Triplets exist i.e. 22 120 122
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1220
---> probID: atcoder_ABC048_B
---> inputs:
4 8 2
---> outputs:
3

import sys
a , b , x = map ( int , sys . stdin . readline ( ) . split ( ) )
count = 0
count += b // x + 1
if a != 0 :
    count -= ( a - 1 ) // x + 1
print ( count )


---> console_out:
3
 
MATCHED!! :D
 70%|██████▉   | 1220/1746 [13:40<00:43, 11.97it/s]

-------------------------------------


---> lineNum: 1221
---> probID: geeksforgeeks_602_A
---> inputs:

---> outputs:
2


import math
def gcd ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )
def findNumber ( arr , n ) :
    ans = arr [ 0 ]
    for i in range ( n ) :
        ans = gcd ( ans , arr [ i ] )
    for i in range ( n ) :
        if arr [ i ] == ans :
            return ans
    return - 1
arr = [ 2 , 2 , 4 ]
n = len ( arr )
print ( findNumber ( arr , n ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1222
---> probID: geeksforgeeks_427_A
---> inputs:

---> outputs:
5


def countKdivPairs ( A , n , K ) :
    freq = [ 0 ] * K
    ans = 0
    for i in range ( n ) :
        rem = A [ i ] % K
        if rem != 0 :
            ans += freq [ K - rem ]
        else :
            ans += freq [ 0 ]
        freq [ rem ] += 1
    return ans
if __name__ == '__main__' :
    A = [ 2 , 2 , 1 , 7 , 5 , 3 ]
    n = len ( A )
    K = 4
    print ( countKdivPairs ( A , n , K ) )


---> console_out:
5
 
MATCHED!! :D
 70%|██████▉   | 1222/1746 [13:40<00:40, 13.04it/s]

-------------------------------------


---> lineNum: 1223
---> probID: atcoder_ABC051_A
---> inputs:
happy,newyear,enjoy
---> outputs:
happy newyear enjoy

import sys
a , b , c = input ( ) . split ( "," )
print ( a + " " + b + " " + c )


---> console_out:
happy newyear enjoy
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1224
---> probID: codeforces_1119_A
---> inputs:
5
1 2 3 2 3
---> outputs:
4

import sys
n = int ( input ( ) )
nums = list ( map ( int , input ( ) . split ( ) ) )
l , r = 0 , 0
for i in range ( n ) :
    if l == 0 and nums [ n - i - 1 ] != nums [ 0 ] :
        l = n - i - 1
    if r == 0 and nums [ i ] != nums [ n - 1 ] :
        r = n - i - 1
print ( max ( l , r ) )


---> console_out:
4
 
MATCHED!! :D
 70%|███████   | 1224/1746 [13:40<00:39, 13.32it/s]

-------------------------------------


---> lineNum: 1225
---> probID: geeksforgeeks_670_A
---> inputs:

---> outputs:
Total Number of Even-Odd subarrays are 7


def countSubarrays ( arr , n ) :
    difference = 0
    ans = 0
    hash_positive = [ 0 ] * ( n + 1 )
    hash_negative = [ 0 ] * ( n + 1 )
    hash_positive [ 0 ] = 1
    for i in range ( n ) :
        if arr [ i ] % 2 == 1 :
            difference += 1
        else :
            difference -= 1
        if difference < 0 :
            ans += hash_negative [ - difference ]
            hash_negative [ - difference ] += 1
        else :
            ans += hash_positive [ difference ]
            hash_positive [ difference ] += 1
    return ans
arr = [ 3 , 4 , 6 , 8 , 1 , 10 , 5 , 7 ]
n = len ( arr )
print ( "Total Number of Even-Odd subarrays are" , countSubarrays ( arr , n ) )


---> console_out:
Total Number of Even-Odd subarrays are 7
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1226
---> probID: geeksforgeeks_4910_A
---> inputs:

---> outputs:
geeksgeeks

import string
SIZE = 26
def printChar ( str , n ) :
    freq = [ 0 ] * SIZE
    for i in range ( n ) :
        freq [ ord ( str [ i ] ) - ord ( 'a' ) ] += 1
    for i in range ( n ) :
        if freq [ ord ( str [ i ] ) - ord ( 'a' ) ] % 2 == 0 :
            print ( str [ i ] , end = '' )
if __name__ == '__main__' :
    str = "geeksforgeeks"
    n = len ( str )
    printChar ( str , n )


---> console_out:
geeksgeeks 
MATCHED!! :D
 70%|███████   | 1226/1746 [13:40<00:37, 13.92it/s]

-------------------------------------


---> lineNum: 1227
---> probID: geeksforgeeks_3597_A
---> inputs:

---> outputs:
for

def printChar ( str , n ) :
    freq = [ 0 ] * 26
    for i in range ( n ) :
        freq [ ord ( str [ i ] ) - ord ( 'a' ) ] += 1
    for i in range ( n ) :
        if freq [ ord ( str [ i ] ) - ord ( 'a' ) ] % 2 == 1 :
            print ( str [ i ] , end = '' )
str = "geeksforgeeks"
n = len ( str )
printChar ( str , n )


---> console_out:
for 
MATCHED!! :D


-------------------------------------


---> lineNum: 1228
---> probID: geeksforgeeks_1056_A
---> inputs:

---> outputs:
3


def countGreater ( arr , n , k ) :
    l = 0
    r = n - 1
    leftGreater = n
    while l <= r :
        m = l + ( r - l ) // 2
        if arr [ m ] > k :
            leftGreater = m
            r = m - 1
        else :
            l = m + 1
    return n - leftGreater
if __name__ == '__main__' :
    arr = [ 3 , 3 , 4 , 7 , 7 , 7 , 11 , 13 , 13 ]
    n = len ( arr )
    k = 7
    print ( countGreater ( arr , n , k ) )


---> console_out:
3
 
MATCHED!! :D
 70%|███████   | 1228/1746 [13:40<00:35, 14.65it/s]

-------------------------------------


---> lineNum: 1229
---> probID: aizu_p01619_A
---> inputs:
1 1
---> outputs:
2

import math
es = [ [ 0 , 1 , 2 , 3 ] , [ 0 , 1 , 2 ] , [ 0 , 1 , 2 , 4 ] , [ 2 , 3 ] , [ 0 , 4 ] ]
len_es = 5
class Main :
    def __init__ ( self ) :
        self . INF = 1 << 28
        self . EPS = 1e-10
        self . MOD = 1000000
    def run ( self ) :
        h , w = map ( int , input ( ) . split ( ) )
        if w == 1 :
            ret = 1
            for i in range ( h ) :
                ret = ret * 2 % self . MOD
            print ( ret )
            return
        cnt = [ [ 0 ] * len_es for _ in range ( 2 ) ]
        cnt [ 0 ] [ 0 ] = 1
        p = 1
        for i in range ( h + 1 ) :
            for j in range ( len_es ) :
                cnt [ p ] [ j ] = 0
                for k in range ( len ( es [ j ] ) ) :
                    cnt [ p ] [ es [ j ] [ k ] ] = ( cnt [ p ] [ es [ j ] [ k ] ] + cnt [ 1 - p ] [ j ] ) % self . MOD
            p = 1 - p
        print ( cnt [ 1 - p ] [ 2 ] )
    def debug ( self , * args ) :
        print ( args )
if __name__ == '__main__' :
    Main ( ) . run ( )


---> console_out:
2
 
MATCHED!! :D
out1,out2 a680b10 a680b10


-------------------------------------


---> lineNum: 1230
---> probID: geeksforgeeks_2542_A
---> inputs:

---> outputs:
a = 67.9851
b = 1.01493


def findAandB ( N ) :
    val = N * N - 4.0 * N
    if val < 0 :
        print ( "NO" )
        return
    a = ( N + math . sqrt ( val ) ) / 2.0
    b = ( N - math . sqrt ( val ) ) / 2.0
    print ( "a = " + str ( a ) )
    print ( "b = " + str ( b ) )
if __name__ == '__main__' :
    import math
    N = 69.0
    findAandB ( N )


---> console_out:
a = 67.98507130050643
b = 1.0149286994935593
 
MATCHED!! :D
 70%|███████   | 1230/1746 [13:40<00:34, 15.09it/s]

-------------------------------------


---> lineNum: 1231
---> probID: codeforces_1227_A
---> inputs:
4
3
4 5
5 9
7 7
5
11 19
4 17
16 16
3 12
14 17
1
1 10
1
1 1
---> outputs:
2
4
0
0

import sys
t = int ( input ( ) )
for _ in range ( t ) :
    n = int ( input ( ) )
    temp1 = - sys . maxsize
    temp2 = sys . maxsize
    for i in range ( n ) :
        x , y = map ( int , input ( ) . split ( ) )
        temp1 = max ( temp1 , x )
        temp2 = min ( temp2 , y )
    print ( max ( 0 , temp1 - temp2 ) )


---> console_out:
2
4
0
0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1232
---> probID: codeforces_745_B
---> inputs:
2 3
XXX
XXX
---> outputs:
YES

import sys
set = set ( )
n , m = map ( int , sys . stdin . readline ( ) . split ( ) )
for i in range ( n ) :
    str = sys . stdin . readline ( ) . strip ( )
    if "X" in str :
        set . add ( str )
if len ( set ) == 1 :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
YES
 
MATCHED!! :D
 71%|███████   | 1232/1746 [13:40<00:33, 15.43it/s]

-------------------------------------


---> lineNum: 1233
---> probID: aizu_p01678_A
---> inputs:
3?4
12?
5?6
?2?4
5?7?
?9?2
?????
?????
?????
0
---> outputs:
2
40
200039979

import sys
MOD = 1000000007
for line in sys . stdin :
    aa = line . strip ( )
    if aa == '0' :
        break
    bb = sys . stdin . readline ( ) . strip ( )
    cc = sys . stdin . readline ( ) . strip ( )
    n = len ( aa )
    dp = [ [ 0 for _ in range ( 2 ) ] for _ in range ( n + 1 ) ]
    dp [ 0 ] [ 0 ] = 1
    for i in range ( 1 , n + 1 ) :
        da = - 1 if aa [ n - i ] == '?' else int ( aa [ n - i ] )
        db = - 1 if bb [ n - i ] == '?' else int ( bb [ n - i ] )
        dc = - 1 if cc [ n - i ] == '?' else int ( cc [ n - i ] )
        for j in range ( 2 ) :
            for carry in range ( 2 ) :
                patterns = 0
                for a in range ( 10 ) :
                    if da != - 1 and da != a :
                        continue
                    for b in range ( 10 ) :
                        if db != - 1 and db != b :
                            continue
                        c = a + b + carry
                        if ( j == 0 and c >= 10 ) or ( j == 1 and c < 10 ) :
                            continue
                        if i == n and a * b * c == 0 :
                            continue
                        if dc == - 1 or dc == c % 10 :
                            patterns += 1
                dp [ i ] [ j ] += dp [ i - 1 ] [ carry ] * patterns % MOD
                dp [ i ] [ j ] %= MOD
    print ( dp [ n ] [ 0 ] )


---> console_out:
2
40
200039979
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1234
---> probID: codeforces_1374_B
---> inputs:
7
1
2
3
12
12345
15116544
387420489
---> outputs:
0
-1
2
-1
-1
12
36

import sys
t = int ( input ( ) )
for i in range ( t ) :
    a = int ( input ( ) )
    two = 0
    three = 0
    while a % 2 == 0 :
        a = a // 2
        two += 1
    while a % 3 == 0 :
        a = a // 3
        three += 1
    if a == 1 :
        if three >= two :
            temp = two
            three -= two
            temp += three * 2
            print ( temp )
        else :
            print ( "-1" )
    else :
        print ( "-1" )


---> console_out:
0
-1
2
-1
-1
12
36
 
MATCHED!! :D
 71%|███████   | 1234/1746 [13:41<00:34, 14.95it/s]

-------------------------------------


---> lineNum: 1235
---> probID: geeksforgeeks_290_A
---> inputs:

---> outputs:
6


import collections
def minIncrementForUnique ( A ) :
    mpp = collections . defaultdict ( int )
    for i in A :
        mpp [ i ] += 1
    taken = [ ]
    ans = 0
    for x in range ( 100000 ) :
        if x in mpp and mpp [ x ] >= 2 :
            taken . append ( x * ( mpp [ x ] - 1 ) )
        elif taken and ( ( x in mpp and mpp [ x ] == 0 ) or x not in mpp ) :
            ans += x - taken . pop ( )
    return ans
A = [ 3 , 2 , 1 , 2 , 1 , 7 ]
print ( minIncrementForUnique ( A ) )


---> console_out:
6
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1236
---> probID: codeforces_70_A
---> inputs:
3
---> outputs:
9

import sys
MOD = 1000003
def pow ( a , p , m ) :
    if p == 0 :
        return 1 % m
    if p == 1 :
        return a % m
    v = pow ( a , p // 2 , m )
    ans = v * v % m
    if p % 2 == 1 :
        ans = ans * a % m
    return ans
n = int ( sys . stdin . readline ( ) )
ans = 1 if n == 0 else pow ( 3 , n - 1 , MOD )
print ( ans )


---> console_out:
9
 
MATCHED!! :D
 71%|███████   | 1236/1746 [13:41<00:34, 14.99it/s]

-------------------------------------


---> lineNum: 1237
---> probID: geeksforgeeks_1203_A
---> inputs:

---> outputs:
1


MOD = int ( 1e9 + 7 )
def modulo_13 ( s , n ) :
    dp = [ [ 0 for _ in range ( 13 ) ] for _ in range ( n + 1 ) ]
    dp [ 0 ] [ 0 ] = 1
    for i in range ( n ) :
        for j in range ( 10 ) :
            nxt = int ( s [ i ] ) if s [ i ] != '?' else j
            for k in range ( 13 ) :
                rem = ( 10 * k + nxt ) % 13
                dp [ i + 1 ] [ rem ] += dp [ i ] [ k ]
                dp [ i + 1 ] [ rem ] %= MOD
            if s [ i ] != '?' :
                break
    return int ( dp [ n ] [ 5 ] )
if __name__ == '__main__' :
    s = "?44"
    n = len ( s )
    print ( modulo_13 ( s , n ) )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1238
---> probID: geeksforgeeks_3271_A
---> inputs:

---> outputs:
28


def gcd ( a , b ) :
    if b == 0 :
        return a
    return gcd ( b , a % b )
def countNums ( a , b , c , d ) :
    x = b // c - ( a - 1 ) // c
    y = b // d - ( a - 1 ) // d
    k = ( c * d ) // gcd ( c , d )
    z = b // k - ( a - 1 ) // k
    return b - a + 1 - x - y + z
a , b , c , d = 10 , 50 , 4 , 6
print ( countNums ( a , b , c , d ) )


---> console_out:
28
 
MATCHED!! :D
 71%|███████   | 1238/1746 [13:41<00:35, 14.47it/s]

-------------------------------------


---> lineNum: 1239
---> probID: geeksforgeeks_1817_A
---> inputs:

---> outputs:
1
12
123
2
23
3


import math
def printSubstrings ( n ) :
    s = int ( math . log10 ( n ) )
    d = int ( math . pow ( 10 , s ) + 0.5 )
    k = d
    while n > 0 :
        while d > 0 :
            print ( n // d )
            d = d // 10
        n = n % k
        k = k // 10
        d = k
n = 123
printSubstrings ( n )


---> console_out:
1
12
123
2
23
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1240
---> probID: geeksforgeeks_4144_A
---> inputs:

---> outputs:
0


def NthCharacter ( n ) :
    s = ""
    c = 1
    i = 1
    while True :
        if c < 10 :
            s += str ( c )
        else :
            s1 = ""
            dup = c
            while dup > 0 :
                s1 += str ( dup % 10 )
                dup //= 10
            temp = s1 [ : : - 1 ]
            s += temp
        c += 1
        if len ( s ) >= n :
            return s [ n - 1 ]
        i += 1
n = 11
print ( NthCharacter ( n ) )


---> console_out:
0
 
MATCHED!! :D
 71%|███████   | 1240/1746 [13:41<00:33, 14.95it/s]

-------------------------------------


---> lineNum: 1241
---> probID: aizu_p00760_A
---> inputs:
8
1 1 1
344 3 1
696 5 1
182 9 5
998 8 7
344 2 19
696 4 19
999 10 20
---> outputs:
196470
128976
59710
160715
252
128977
59712
1

import sys
n = int ( input ( ) )
tosi = [ 0 ] * n
M = [ 0 ] * n
D = [ 0 ] * n
for k in range ( n ) :
    total = 0
    day = 0
    tosi [ k ] , M [ k ] , D [ k ] = map ( int , input ( ) . split ( ) )
    for i in range ( tosi [ k ] + 1 , 1001 ) :
        if i % 3 == 0 :
            total += 200
        else :
            total += 195
    if tosi [ k ] % 3 == 0 :
        tuki = ( M [ k ] - 1 ) * 20
        day = tuki + D [ k ] - 6
    else :
        if ( M [ k ] - 1 ) % 2 == 0 :
            day = ( ( M [ k ] - 1 ) // 2 ) * 20 + ( ( M [ k ] - 1 ) // 2 ) * 19 + D [ k ] - 1
        else :
            day = ( ( M [ k ] ) // 2 ) * 20 + ( ( M [ k ] - 1 ) // 2 ) * 19 + D [ k ] - 1
    total = total - day
    print ( total )


---> console_out:
196470
128976
59710
160715
252
128977
59712
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1242
---> probID: geeksforgeeks_1071_A
---> inputs:

---> outputs:
3


import math
def check_prime ( n ) :
    if n <= 1 :
        return False
    if n <= 3 :
        return True
    if n % 2 == 0 or n % 3 == 0 :
        return False
    for i in range ( 5 , int ( math . sqrt ( n ) ) + 1 , 6 ) :
        if n % i == 0 or n % ( i + 2 ) == 0 :
            return False
    return True
def countPrimeFrequent ( s ) :
    count = 0
    mp = { }
    for i in range ( len ( s ) ) :
        if s [ i ] in mp :
            mp [ s [ i ] ] += 1
        else :
            mp [ s [ i ] ] = 1
    for key , value in mp . items ( ) :
        if check_prime ( value ) :
            count += 1
    return count
s = "geeksforgeeks"
print ( countPrimeFrequent ( s ) )


---> console_out:
3
 
MATCHED!! :D
 71%|███████   | 1242/1746 [13:41<00:34, 14.64it/s]

-------------------------------------


---> lineNum: 1243
---> probID: codeforces_387_B
---> inputs:
3 5
1 2 3
1 2 2 3 3
---> outputs:
0

import sys
n , m = map ( int , input ( ) . split ( ) )
req = list ( map ( int , input ( ) . split ( ) ) )
pre = list ( map ( int , input ( ) . split ( ) ) )
i , j = n - 1 , m - 1
ans = 0
while i >= 0 and j >= 0 :
    if req [ i ] > pre [ j ] :
        ans += 1
    else :
        j -= 1
    i -= 1
print ( ans + i + 1 )


---> console_out:
0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1244
---> probID: geeksforgeeks_3998_A
---> inputs:

---> outputs:
1 1 2 5 14 42 132 429 1430 4862 

def catalanDP ( n ) :
    catalan = [ 0 ] * ( n + 2 )
    catalan [ 0 ] = 1
    catalan [ 1 ] = 1
    for i in range ( 2 , n + 1 ) :
        catalan [ i ] = 0
        for j in range ( i ) :
            catalan [ i ] += catalan [ j ] * catalan [ i - j - 1 ]
    return catalan [ n ]
if __name__ == '__main__' :
    for i in range ( 10 ) :
        print ( catalanDP ( i ) , end = ' ' )


---> console_out:
1 1 2 5 14 42 132 429 1430 4862  
MATCHED!! :D
 71%|███████   | 1244/1746 [13:41<00:33, 15.15it/s]

-------------------------------------


---> lineNum: 1245
---> probID: projecteuler_p243_A
---> inputs:

---> outputs:
892371480

from fractions import Fraction
from math import isqrt
class p243 :
    def __init__ ( self ) :
        self . TARGET = Fraction ( 15499 , 94744 )
    def run ( self ) :
        totient = 1
        denominator = 1
        p = 2
        while True :
            totient *= p - 1
            denominator *= p
            p = self . next_prime ( p )
            if Fraction ( totient , denominator ) < self . TARGET :
                for i in range ( 1 , p ) :
                    numer = i * totient
                    denom = i * denominator
                    if Fraction ( numer , denom - 1 ) < self . TARGET :
                        return str ( denom )
    def next_prime ( self , n ) :
        if n == 2 :
            return 3
        elif n == 3 :
            return 5
        else :
            n += 2
            while not self . is_prime ( n ) :
                n += 2
            return n
    def is_prime ( self , n ) :
        if n <= 1 :
            return False
        elif n <= 3 :
            return True
        elif n % 2 == 0 or n % 3 == 0 :
            return False
        else :
            for i in range ( 5 , isqrt ( n ) + 1 , 6 ) :
                if n % i == 0 or n % ( i + 2 ) == 0 :
                    return False
            return True
if __name__ == '__main__' :
    print ( p243 ( ) . run ( ) )


---> console_out:
892371480
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1246
---> probID: codeforces_8_B
---> inputs:
LLUUUR
---> outputs:
OK

import sys
s = input ( )
ch = list ( s )
co = [ [ 0 ] * 101 for i in range ( 2 ) ]
k = 0
x = y = 0
flag = True
co [ 0 ] [ k ] = x
co [ 1 ] [ k ] = y
k += 1
for i in range ( len ( s ) ) :
    if ch [ i ] == 'L' :
        x -= 1
    elif ch [ i ] == 'R' :
        x += 1
    elif ch [ i ] == 'U' :
        y += 1
    elif ch [ i ] == 'D' :
        y -= 1
    co [ 0 ] [ k ] = x
    co [ 1 ] [ k ] = y
    k += 1
for i in range ( k - 3 ) :
    for j in range ( i + 3 , k ) :
        dx = co [ 0 ] [ i ] - co [ 0 ] [ j ]
        dy = co [ 1 ] [ i ] - co [ 1 ] [ j ]
        if dx < 0 :
            dx *= - 1
        if dy < 0 :
            dy *= - 1
        if ( dx <= 1 and dy == 0 ) or ( dy <= 1 and dx == 0 ) :
            flag = False
            break
    if not flag :
        break
if flag :
    print ( "OK" )
else :
    print ( "BUG" )


---> console_out:
OK
 
MATCHED!! :D
 71%|███████▏  | 1246/1746 [13:41<00:33, 15.00it/s]

-------------------------------------


---> lineNum: 1247
---> probID: geeksforgeeks_10_A
---> inputs:

---> outputs:
Yes


def isPrime ( n ) :
    if n <= 1 :
        return False
    for i in range ( 2 , int ( n ** 0.5 ) + 1 ) :
        if n % i == 0 :
            return False
    return True
def isPossible ( N ) :
    if isPrime ( N ) and isPrime ( N - 2 ) :
        return True
    else :
        return False
if __name__ == '__main__' :
    n = 13
    if isPossible ( n ) == True :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1248
---> probID: geeksforgeeks_1371_A
---> inputs:

---> outputs:
Number of Dyck Paths is  14


def countDyckPaths ( n ) :
    res = 1
    for i in range ( n ) :
        res *= ( 2 * n - i )
        res //= ( i + 1 )
    return res // ( n + 1 )
if __name__ == '__main__' :
    n = 4
    print ( "Number of Dyck Paths is" , countDyckPaths ( n ) )


---> console_out:
Number of Dyck Paths is 14
 
MATCHED!! :D
 71%|███████▏  | 1248/1746 [13:41<00:33, 14.71it/s]out1,out2 nonoyes6010014010yes6010015050yes60100150130yes60100140700yes601001402280 nonoyes1401006010yes5060100150yes6070100210yes20100330550yes100210221060


-------------------------------------


---> lineNum: 1249
---> probID: codeforces_1388_A
---> inputs:
7
7
23
31
36
44
100
258
---> outputs:
['NO\nNO\nYES\n14 10 6 1\nYES\n5 6 10 15\nYES\n6 7 10 21\nYES\n2 10 33 55\nYES\n10 21 221 6', 'NO\nNO\nYES\n6 10 14 1\nYES\n6 10 15  5\nYES\n6 10 15  13\nYES\n6 10 14 70\nYES\n6 10 14 228\n']

import sys
def solve ( n ) :
    if n <= 30 :
        return "NO"
    elif n == 36 or n == 40 or n == 44 :
        return "YES\n6 10 15 {}" . format ( n - 31 )
    else :
        return "YES\n6 10 14 {}" . format ( n - 30 )
if __name__ == "__main__" :
    t = int ( input ( ) )
    for tc in range ( t ) :
        n = int ( input ( ) )
        print ( solve ( n ) )


---> console_out:
NO
NO
YES
6 10 14 1
YES
6 10 15 5
YES
6 10 15 13
YES
6 10 14 70
YES
6 10 14 228
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1250
---> probID: atcoder_ABC118_C
---> inputs:
2
956199757 202955748
---> outputs:
1

import sys
def gcd ( a , b ) :
    if b == 0 :
        return a
    return gcd ( b , a % b )
if __name__ == "__main__" :
    n = int ( input ( ) )
    a = list ( map ( int , input ( ) . split ( ) ) )
    ans = a [ 0 ]
    for i in range ( 1 , n ) :
        ans = gcd ( ans , a [ i ] )
    print ( ans )


---> console_out:
1
 
MATCHED!! :D
 72%|███████▏  | 1250/1746 [13:42<00:32, 15.15it/s]

-------------------------------------


---> lineNum: 1251
---> probID: codeforces_975_B
---> inputs:
0 1 1 0 0 0 0 0 0 7 0 0 0 0
---> outputs:
4

import sys
a = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
max_score = 0
for from_idx in range ( 14 ) :
    stones = a [ from_idx ]
    remainder = stones // 14
    score = remainder if remainder % 2 == 0 else 0
    for i in range ( 1 , 14 ) :
        count = a [ ( from_idx + i ) % 14 ] + ( stones + 14 - i ) // 14
        if count % 2 == 0 :
            score += count
    max_score = max ( max_score , score )
print ( max_score )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1252
---> probID: geeksforgeeks_4585_A
---> inputs:

---> outputs:
7.32


def pentdiagonal ( a ) :
    if a < 0 :
        return - 1
    d = 1.22 * a
    return d
if __name__ == '__main__' :
    a = 6
    print ( pentdiagonal ( a ) )


---> console_out:
7.32
 
MATCHED!! :D
 72%|███████▏  | 1252/1746 [13:42<00:32, 15.03it/s]

-------------------------------------


---> lineNum: 1253
---> probID: geeksforgeeks_4586_A
---> inputs:

---> outputs:
15.57


def hexDiagonal ( a ) :
    if a < 0 :
        return - 1
    d = 1.73 * a
    return d
if __name__ == '__main__' :
    a = 9
    print ( hexDiagonal ( a ) )


---> console_out:
15.57
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784507428_5662/main.py", line 24, in <module>
    translate ( str )
  File "./junk/1703784507428_5662/main.py", line 3, in translate
    len = len ( str )
UnboundLocalError: local variable 'len' referenced before assignment
out1,out2  themodifiedstringishellocworldcgfg


-------------------------------------


---> lineNum: 1254
---> probID: geeksforgeeks_200_A
---> inputs:

---> outputs:
The modified string is :
helloCworldCGfG  


import re
def translate ( str ) :
    len = len ( str )
    if len < 2 :
        return
    i = 0
    j = 0
    while j < len - 1 :
        if str [ j ] == 'A' and str [ j + 1 ] == 'B' :
            j = j + 2
            str [ i ] = 'C'
            i += 1
            continue
        str [ i ] = str [ j ]
        i += 1
        j += 1
    if j == len - 1 :
        str [ i ] = str [ j ]
        i += 1
    str [ i ] = ' '
    str [ len - 1 ] = ' '
st = "helloABworldABGfG"
str = list ( st )
translate ( str )
print ( "The modified string is :" )
print ( '' . join ( str ) )


---> console_out:
 
DIDN'T MATCH!! :(
 72%|███████▏  | 1254/1746 [13:42<00:32, 15.17it/s]

-------------------------------------


---> lineNum: 1255
---> probID: geeksforgeeks_199_A
---> inputs:

---> outputs:
The modified string is :
helloCworldCGfG  


import re
def translate ( str ) :
    str = re . sub ( 'AB' , 'C' , str )
    return str
st = "helloABworldABGfG"
str = translate ( st )
print ( "The modified string is :" )
print ( str )


---> console_out:
The modified string is :
helloCworldCGfG
 
MATCHED!! :D
out1,out2  145168242200


-------------------------------------


---> lineNum: 1256
---> probID: projecteuler_p128_A
---> inputs:

---> outputs:
14516824220

class p128 :
    TARGET = 2000
    @ staticmethod
    def main ( args ) :
        print ( p128 ( ) . run ( ) )
    def run ( self ) :
        count = 2
        ring = 2
        while True :
            if ring * 12 + 5 > 2 ** 31 - 1 :
                raise ArithmeticError ( )
            if Library . isPrime ( ring * 6 - 1 ) and Library . isPrime ( ring * 6 + 1 ) and Library . isPrime ( ring * 12 + 5 ) :
                count += 1
                if count == p128 . TARGET :
                    return str ( ( ring * ( ring - 1 ) * 3 ) + 2 )
            if Library . isPrime ( ring * 6 - 1 ) and Library . isPrime ( ring * 6 + 5 ) and Library . isPrime ( ring * 12 - 7 ) :
                count += 1
                if count == p128 . TARGET :
                    return str ( ( ring * ( ring + 1 ) * 3 ) + 1 )
            ring += 1


---> console_out:
 
DIDN'T MATCH!! :(
 72%|███████▏  | 1256/1746 [13:42<00:33, 14.69it/s]

-------------------------------------


---> lineNum: 1257
---> probID: codeforces_214_A
---> inputs:
9 3
---> outputs:
1

import math
n , m = map ( int , input ( ) . split ( ) )
c = 0
for i in range ( max ( n , m ) + 1 ) :
    for j in range ( max ( n , m ) + 1 ) :
        if i * i + j == n and i + j * j == m :
            c += 1
print ( c )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1258
---> probID: geeksforgeeks_2193_A
---> inputs:

---> outputs:
6 2


import math
def Digits ( n ) :
    largest = 0
    smallest = 9
    while n != 0 :
        r = n % 10
        largest = max ( r , largest )
        smallest = min ( r , smallest )
        n = n // 10
    print ( largest , smallest )
n = 2346
Digits ( n )


---> console_out:
6 2
 
MATCHED!! :D
 72%|███████▏  | 1258/1746 [13:42<00:32, 15.08it/s]

-------------------------------------


---> lineNum: 1259
---> probID: geeksforgeeks_3696_A
---> inputs:

---> outputs:
( 0 , 0 ), ( 3 , 0 ) and ( 1 , 3 )


import math
def solve ( d1 , d2 , d3 ) :
    maxx = max ( d1 , max ( d2 , d3 ) )
    sum = d1 + d2 + d3
    if 2 * maxx > sum or sum % 2 == 1 :
        print ( "-1" )
        return
    x1 , y1 = 0 , 0
    x2 , y2 = d1 , 0
    x3 , y3 = ( d1 + d2 - d3 ) // 2 , ( d2 + d3 - d1 ) // 2
    print ( "({}, {}), ({}, {}) and ({}, {})" . format ( x1 , y1 , x2 , y2 , x3 , y3 ) )
d1 , d2 , d3 = 3 , 4 , 5
solve ( d1 , d2 , d3 )


---> console_out:
(0, 0), (3, 0) and (1, 3)
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1260
---> probID: geeksforgeeks_5246_A
---> inputs:

---> outputs:
NO


import string
MAX_CHAR = 26
def distributingBalls ( k , n , s ) :
    a = [ 0 ] * MAX_CHAR
    for i in range ( n ) :
        a [ ord ( s [ i ] ) - ord ( 'a' ) ] += 1
    for i in range ( MAX_CHAR ) :
        if a [ i ] > k :
            return False
    return True
if __name__ == '__main__' :
    n , k = 6 , 3
    s = "aacaab"
    if distributingBalls ( k , n , s ) :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
NO
 
MATCHED!! :D
 72%|███████▏  | 1260/1746 [13:42<00:33, 14.59it/s]

-------------------------------------


---> lineNum: 1261
---> probID: codeforces_1509_B
---> inputs:
5
3
TMT
3
MTT
6
TMTMTT
6
TMTTTT
6
TTMMTT
---> outputs:
YES
NO
YES
NO
YES

import datetime
def check ( sb ) :
    t = 0
    for i in range ( len ( sb ) ) :
        if sb [ i ] == "T" :
            t += 1
        elif sb [ i ] == "M" :
            if t <= 0 :
                return False
            t -= 1
    return True
t = int ( input ( ) )
for _ in range ( t ) :
    n = int ( input ( ) )
    sb = input ( )
    if "M" not in sb :
        print ( "NO" )
        continue
    T = sb . count ( "T" )
    m = sb . count ( "M" )
    if T // 2 != m :
        print ( "NO" )
        continue
    if check ( sb ) and check ( sb [ : : - 1 ] ) :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
YES
NO
YES
NO
YES
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784507978_9158/main.py", line 5, in <module>
    e [ i ] = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 1 3 4 8 9 7 3 4 5 5 5'
out1,out2  no


-------------------------------------


---> lineNum: 1262
---> probID: aizu_p00341_A
---> inputs:
1 1 3 4 8 9 7 3 4 5 5 5
---> outputs:
no

import sys
e = [ 0 ] * 13
p = 0
for i in range ( 12 ) :
    e [ i ] = int ( input ( ) )
for i in range ( 12 ) :
    for j in range ( 12 - i ) :
        if e [ j ] < e [ j + 1 ] :
            y = e [ j ]
            e [ j ] = e [ j + 1 ]
            e [ j + 1 ] = y
for u in range ( 3 ) :
    for k in range ( 4 ) :
        i = u * 4
        if e [ i ] == e [ i + 1 ] and e [ i + 2 ] == e [ i + 3 ] and e [ i ] == e [ i + 2 ] and e [ i + 1 ] == e [ i + 3 ] and e [ i ] == e [ i + 3 ] and e [ i + 1 ] == e [ i + 2 ] :
            p += 1
        else :
            p += 0
if p == 12 :
    print ( "yes" )
else :
    print ( "no" )


---> console_out:
 
DIDN'T MATCH!! :(
 72%|███████▏  | 1262/1746 [13:42<00:34, 14.13it/s]

-------------------------------------


---> lineNum: 1263
---> probID: geeksforgeeks_4580_A
---> inputs:

---> outputs:
Row with min 0s: 3
Row with max 0s: 4


import sys
def first ( arr , low , high ) :
    if high >= low :
        mid = low + ( high - low ) // 2
        if ( mid == 0 or arr [ mid - 1 ] == 0 ) and arr [ mid ] == 1 :
            return mid
        elif arr [ mid ] == 0 :
            return first ( arr , mid + 1 , high )
        else :
            return first ( arr , low , mid - 1 )
    return - 1
def rowWith0s ( mat ) :
    R = 4
    C = 4
    max_row_index = 0
    max_val = - sys . maxsize
    min_row_index = 0
    min_val = sys . maxsize
    for i in range ( R ) :
        index = first ( mat [ i ] , 0 , C - 1 )
        cntZeroes = 0
        if index == - 1 :
            cntZeroes = C
        else :
            cntZeroes = index
        if max_val < cntZeroes :
            max_val = cntZeroes
            max_row_index = i
        if min_val > cntZeroes :
            min_val = cntZeroes
            min_row_index = i
    print ( "Row with min 0s:" , min_row_index + 1 )
    print ( "Row with max 0s:" , max_row_index + 1 )
mat = [ [ 0 , 0 , 0 , 1 ] , [ 0 , 1 , 1 , 1 ] , [ 1 , 1 , 1 , 1 ] , [ 0 , 0 , 0 , 0 ] ]
rowWith0s ( mat )


---> console_out:
Row with min 0s: 3
Row with max 0s: 4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1264
---> probID: geeksforgeeks_4527_A
---> inputs:

---> outputs:
Set


import math
def bitAtGivenPosSetOrUnset ( n , k ) :
    new_num = n >> ( k - 1 )
    return ( new_num & 1 )
if __name__ == '__main__' :
    n = 10
    k = 2
    if bitAtGivenPosSetOrUnset ( n , k ) == 1 :
        print ( "Set" )
    else :
        print ( "Unset" )


---> console_out:
Set
 
MATCHED!! :D
 72%|███████▏  | 1264/1746 [13:43<00:33, 14.41it/s]

-------------------------------------


---> lineNum: 1265
---> probID: codeforces_747_B
---> inputs:
8
AG?C??CT
---> outputs:
AGACGTCT

import sys
n = int ( sys . stdin . readline ( ) . strip ( ) )
if n % 4 != 0 :
    print ( "===" )
    sys . exit ( )
themost = n // 4
numA = 0
numG = 0
numC = 0
numT = 0
numQM = 0
sb = sys . stdin . readline ( ) . strip ( )
for i in range ( len ( sb ) ) :
    if sb [ i ] == 'A' :
        numA += 1
    elif sb [ i ] == 'G' :
        numG += 1
    elif sb [ i ] == 'C' :
        numC += 1
    elif sb [ i ] == 'T' :
        numT += 1
    else :
        numQM += 1
if numA > themost or numC > themost or numG > themost or numT > themost :
    print ( "===" )
    sys . exit ( )
for j in range ( numQM ) :
    for i in range ( len ( sb ) ) :
        if sb [ i ] == '?' :
            if numA < themost :
                sb = sb [ : i ] + 'A' + sb [ i + 1 : ]
                numA += 1
            elif numC < themost :
                sb = sb [ : i ] + 'C' + sb [ i + 1 : ]
                numC += 1
            elif numG < themost :
                sb = sb [ : i ] + 'G' + sb [ i + 1 : ]
                numG += 1
            elif numT < themost :
                sb = sb [ : i ] + 'T' + sb [ i + 1 : ]
                numT += 1
print ( sb )


---> console_out:
AGACGTCT
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784508262_5319/main.py", line 7, in <module>
    start = ord ( input ( ) ) - ord ( 'A' )
TypeError: ord() expected a character, but string of length 5 found
out1,out2  000201


-------------------------------------


---> lineNum: 1266
---> probID: aizu_p00606_A
---> inputs:
1
E A C
1
E B C
2
E A B
0
---> outputs:
0.00000000
0.25000000
0.06250000

import math
while True :
    n = int ( input ( ) )
    if n == 0 :
        break
    pos = [ 0 ] * 9
    start = ord ( input ( ) ) - ord ( 'A' )
    end = ord ( input ( ) ) - ord ( 'A' )
    not_allowed = ord ( input ( ) ) - ord ( 'A' )
    pos [ start ] = 1
    next_pos = [ 0 ] * 9
    for i in range ( n ) :
        for j in range ( 9 ) :
            next_pos [ j ] = 0
        for j in range ( 9 ) :
            if j % 3 != 0 and not_allowed != j - 1 :
                next_pos [ j - 1 ] += pos [ j ] / 4
            else :
                next_pos [ j ] += pos [ j ] / 4
            if j % 3 != 2 and not_allowed != j + 1 :
                next_pos [ j + 1 ] += pos [ j ] / 4
            else :
                next_pos [ j ] += pos [ j ] / 4
            if j // 3 != 0 and not_allowed != j - 3 :
                next_pos [ j - 3 ] += pos [ j ] / 4
            else :
                next_pos [ j ] += pos [ j ] / 4
            if j // 3 != 2 and not_allowed != j + 3 :
                next_pos [ j + 3 ] += pos [ j ] / 4
            else :
                next_pos [ j ] += pos [ j ] / 4
        tmp = next_pos
        next_pos = pos
        pos = tmp
    print ( "{:.8f}" . format ( pos [ end ] ) )


---> console_out:
 
DIDN'T MATCH!! :(
 73%|███████▎  | 1266/1746 [13:43<00:32, 14.76it/s]

-------------------------------------


---> lineNum: 1267
---> probID: codeforces_926_A
---> inputs:
1 10
---> outputs:
7

import sys
l , r = map ( int , sys . stdin . readline ( ) . split ( ) )
ans = 0
i = 1
while i <= r :
    j = 1
    while j * i <= r :
        if i * j >= l :
            ans += 1
        j *= 3
    i *= 2
print ( ans )


---> console_out:
7
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784508388_3983/main.py", line 2, in <module>
    N , K = map ( int , sys . stdin . readline ( ) . split ( ) )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2  100


-------------------------------------


---> lineNum: 1268
---> probID: atcoder_ABC076_B
---> inputs:
4
3
---> outputs:
10

import sys
N , K = map ( int , sys . stdin . readline ( ) . split ( ) )
t = 1
for i in range ( N ) :
    t = min ( 2 * t , t + K )
print ( t )


---> console_out:
 
DIDN'T MATCH!! :(
 73%|███████▎  | 1268/1746 [13:43<00:32, 14.75it/s]

-------------------------------------


---> lineNum: 1269
---> probID: geeksforgeeks_4806_A
---> inputs:

---> outputs:
Yes


import numpy as np
def arePermutations ( a , b , n , m ) :
    sum1 = np . sum ( a )
    sum2 = np . sum ( b )
    mul1 = np . prod ( a )
    mul2 = np . prod ( b )
    return ( sum1 == sum2 ) and ( mul1 == mul2 )
if __name__ == '__main__' :
    a = [ 1 , 3 , 2 ]
    b = [ 3 , 1 , 2 ]
    n = len ( a )
    m = len ( b )
    if arePermutations ( a , b , n , m ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1270
---> probID: geeksforgeeks_3105_A
---> inputs:

---> outputs:
b c l p r 

MAX_CHAR = 26
def findAndPrintUncommonChars ( str1 , str2 ) :
    present = [ 0 ] * MAX_CHAR
    l1 = len ( str1 )
    l2 = len ( str2 )
    for i in range ( l1 ) :
        present [ ord ( str1 [ i ] ) - ord ( 'a' ) ] = 1
    for i in range ( l2 ) :
        if present [ ord ( str2 [ i ] ) - ord ( 'a' ) ] == 1 or present [ ord ( str2 [ i ] ) - ord ( 'a' ) ] == - 1 :
            present [ ord ( str2 [ i ] ) - ord ( 'a' ) ] = - 1
        else :
            present [ ord ( str2 [ i ] ) - ord ( 'a' ) ] = 2
    for i in range ( MAX_CHAR ) :
        if present [ i ] == 1 or present [ i ] == 2 :
            print ( chr ( i + ord ( 'a' ) ) , end = " " )
str1 = "characters"
str2 = "alphabets"
findAndPrintUncommonChars ( str1 , str2 )


---> console_out:
b c l p r  
MATCHED!! :D
 73%|███████▎  | 1270/1746 [13:43<00:47, 10.13it/s]

-------------------------------------


---> lineNum: 1271
---> probID: geeksforgeeks_3679_A
---> inputs:

---> outputs:
Inside


def isInside ( circle_x , circle_y , rad , x , y ) :
    if ( ( x - circle_x ) * ( x - circle_x ) + ( y - circle_y ) * ( y - circle_y ) <= rad * rad ) :
        return True
    else :
        return False
if __name__ == '__main__' :
    x , y = 1 , 1
    circle_x , circle_y , rad = 0 , 1 , 2
    if isInside ( circle_x , circle_y , rad , x , y ) :
        print ( "Inside" )
    else :
        print ( "Outside" )


---> console_out:
Inside
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1272
---> probID: geeksforgeeks_3247_A
---> inputs:

---> outputs:
26


def minSum ( arr , n , x ) :
    sum = 0
    largestDivisible = - 1
    minimum = arr [ 0 ]
    for i in range ( n ) :
        sum += arr [ i ]
        if arr [ i ] % x == 0 and largestDivisible < arr [ i ] :
            largestDivisible = arr [ i ]
        if arr [ i ] < minimum :
            minimum = arr [ i ]
    if largestDivisible == - 1 :
        return sum
    sumAfterOperation = sum - minimum - largestDivisible + ( x * minimum ) + ( largestDivisible // x )
    return min ( sum , sumAfterOperation )
arr = [ 5 , 5 , 5 , 5 , 6 ]
n = len ( arr )
x = 3
print ( minSum ( arr , n , x ) )


---> console_out:
26
 
MATCHED!! :D
 73%|███████▎  | 1272/1746 [13:43<00:41, 11.35it/s]

-------------------------------------


---> lineNum: 1273
---> probID: geeksforgeeks_1828_A
---> inputs:

---> outputs:
45
1225
1249999950000000
125000006750000091


def nthTerm ( n ) :
    if n % 2 == 0 :
        nth = 2 * ( ( n * n ) - n )
    else :
        nth = ( 2 * n * n ) - n
    return nth
n = 5
print ( nthTerm ( n ) )
n = 25
print ( nthTerm ( n ) )
n = 25000000
print ( nthTerm ( n ) )
n = 250000007
print ( nthTerm ( n ) )


---> console_out:
45
1225
1249999950000000
125000006750000091
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784508990_2532/main.py", line 8, in <module>
    lst . insert ( cmd [ 1 ] , cmd [ 2 ] )
IndexError: list index out of range
out1,out2  3010


-------------------------------------


---> lineNum: 1274
---> probID: aizu_p02433_A
---> inputs:
5
0 1
0 2
0 3
1 1
2
---> outputs:
3
1

from collections import deque
if __name__ == '__main__' :
    lst = deque ( )
    n = int ( input ( ) )
    for i in range ( n ) :
        cmd = list ( map ( int , input ( ) . split ( ) ) )
        if cmd [ 0 ] == 0 :
            lst . insert ( cmd [ 1 ] , cmd [ 2 ] )
        elif cmd [ 0 ] == 1 :
            if cmd [ 1 ] > 0 :
                for j in range ( cmd [ 1 ] ) :
                    lst . append ( lst . popleft ( ) )
            else :
                for j in range ( abs ( cmd [ 1 ] ) ) :
                    lst . appendleft ( lst . pop ( ) )
        elif cmd [ 0 ] == 2 :
            lst . popleft ( )
    for i in lst :
        print ( i )


---> console_out:
 
DIDN'T MATCH!! :(
 73%|███████▎  | 1274/1746 [13:43<00:37, 12.49it/s]

-------------------------------------


---> lineNum: 1275
---> probID: codeforces_1029_A
---> inputs:
3 4
aba
---> outputs:
ababababa

import sys
n , k = map ( int , input ( ) . split ( ) )
s = input ( ) . strip ( )
ans = 0
for i in range ( 1 , len ( s ) ) :
    if s [ : i ] == s [ - i : ] :
        ans = i
sb = s [ - ans : ]
for i in range ( k ) :
    sb += s [ ans : ]
print ( sb )


---> console_out:
ababababa
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1276
---> probID: geeksforgeeks_3091_A
---> inputs:

---> outputs:
4 2 5 1 6 3 7 

class GFG :
    class Node :
        def __init__ ( self ) :
            self . data = None
            self . left = None
            self . right = None
    class INT :
        def __init__ ( self , a ) :
            self . a = a
    @ staticmethod
    def newNode ( data ) :
        temp = GFG . Node ( )
        temp . data = data
        temp . left = None
        temp . right = None
        return temp
    @ staticmethod
    def printInorder ( node ) :
        if node is None :
            return
        GFG . printInorder ( node . left )
        print ( node . data , end = " " )
        GFG . printInorder ( node . right )
    @ staticmethod
    def conBinaryTreeUtil ( pre , preM , preIndex , l , h , size ) :
        if preIndex . a >= size or l > h :
            return None
        root = GFG . newNode ( pre [ preIndex . a ] )
        preIndex . a += 1
        if l == h :
            return root
        i = l
        while i <= h :
            if pre [ preIndex . a ] == preM [ i ] :
                break
            i += 1
        if i <= h :
            root . left = GFG . conBinaryTreeUtil ( pre , preM , preIndex , i , h , size )
            root . right = GFG . conBinaryTreeUtil ( pre , preM , preIndex , l + 1 , i - 1 , size )
        return root
    @ staticmethod
    def conBinaryTree ( root , pre , preMirror , size ) :
        preIndex = GFG . INT ( 0 )
        preMIndex = 0
        root = GFG . conBinaryTreeUtil ( pre , preMirror , preIndex , 0 , size - 1 , size )
        GFG . printInorder ( root )
    @ staticmethod
    def main ( ) :
        preOrder = [ 1 , 2 , 4 , 5 , 3 , 6 , 7 ]
        preOrderMirror = [ 1 , 3 , 7 , 6 , 2 , 5 , 4 ]
        size = len ( preOrder )
        root = GFG . Node ( )
        GFG . conBinaryTree ( root , preOrder , preOrderMirror , size )
if __name__ == "__main__" :
    GFG . main ( )


---> console_out:
4 2 5 1 6 3 7  
MATCHED!! :D
 73%|███████▎  | 1276/1746 [13:44<00:35, 13.27it/s]

-------------------------------------


---> lineNum: 1277
---> probID: geeksforgeeks_1450_A
---> inputs:

---> outputs:
Smallest window is : 
t stri


no_of_chars = 256
def findSubString ( str , pat ) :
    len1 = len ( str )
    len2 = len ( pat )
    if len1 < len2 :
        print ( "No such window exists" )
        return ""
    hash_pat = [ 0 ] * no_of_chars
    hash_str = [ 0 ] * no_of_chars
    for i in range ( len2 ) :
        hash_pat [ ord ( pat [ i ] ) ] += 1
    start = 0
    start_index = - 1
    min_len = float ( 'inf' )
    count = 0
    for j in range ( len1 ) :
        hash_str [ ord ( str [ j ] ) ] += 1
        if hash_pat [ ord ( str [ j ] ) ] != 0 and hash_str [ ord ( str [ j ] ) ] <= hash_pat [ ord ( str [ j ] ) ] :
            count += 1
        if count == len2 :
            while hash_str [ ord ( str [ start ] ) ] > hash_pat [ ord ( str [ start ] ) ] or hash_pat [ ord ( str [ start ] ) ] == 0 :
                if hash_str [ ord ( str [ start ] ) ] > hash_pat [ ord ( str [ start ] ) ] :
                    hash_str [ ord ( str [ start ] ) ] -= 1
                start += 1
            len_window = j - start + 1
            if min_len > len_window :
                min_len = len_window
                start_index = start
    if start_index == - 1 :
        print ( "No such window exists" )
        return ""
    return str [ start_index : start_index + min_len ]
str = "this is a test string"
pat = "tist"
print ( "Smallest window is:\n" , findSubString ( str , pat ) )


---> console_out:
Smallest window is:
 t stri
 
MATCHED!! :D
out1,out2  yesno


-------------------------------------


---> lineNum: 1278
---> probID: aizu_p00012_A
---> inputs:
0.0 0.0 2.0 0.0 2.0 2.0 1.5 0.5
0.0 0.0 1.0 4.0 5.0 3.0 -1.0 3.0
---> outputs:
YES
NO

import math
class Point2 :
    def __init__ ( self , x , y ) :
        self . x = x
        self . y = y
def ccw ( p1 , p2 , p3 ) :
    return ( p2 . y - p1 . y ) * ( p3 . x - p1 . x ) - ( p3 . y - p1 . y ) * ( p2 . x - p1 . x )
while True :
    try :
        p = [ Point2 ( float ( input ( ) ) , float ( input ( ) ) ) for i in range ( 4 ) ]
        judge = False
        if ( ccw ( p [ 0 ] , p [ 3 ] , p [ 1 ] ) > 0 and ccw ( p [ 1 ] , p [ 3 ] , p [ 2 ] ) > 0 and ccw ( p [ 2 ] , p [ 3 ] , p [ 0 ] ) > 0 ) or ( ccw ( p [ 0 ] , p [ 3 ] , p [ 1 ] ) < 0 and ccw ( p [ 1 ] , p [ 3 ] , p [ 2 ] ) < 0 and ccw ( p [ 2 ] , p [ 3 ] , p [ 0 ] ) < 0 ) :
            judge = True
        print ( "YES" if judge else "NO" )
    except :
        break


---> console_out:
 
DIDN'T MATCH!! :(
 73%|███████▎  | 1278/1746 [13:44<00:34, 13.42it/s]

-------------------------------------


---> lineNum: 1279
---> probID: codeforces_755_B
---> inputs:
5 1
polandball
is
a
cool
character
nope
---> outputs:
YES

import collections
n , m = map ( int , input ( ) . split ( ) )
if n > m :
    print ( "YES" )
elif m > n :
    print ( "NO" )
else :
    words = collections . defaultdict ( int )
    for _ in range ( n ) :
        word = input ( )
        words [ word ] = 1
    count = 0
    for _ in range ( m ) :
        word = input ( )
        if word in words :
            count += 1
    if count % 2 == 0 :
        print ( "NO" )
    else :
        print ( "YES" )


---> console_out:
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1280
---> probID: geeksforgeeks_2071_A
---> inputs:

---> outputs:
252


import math
MAX = 100005
def addPrimes ( ) :
    n = MAX
    prime = [ True ] * ( n + 1 )
    for p in range ( 2 , int ( math . sqrt ( n ) ) + 1 ) :
        if prime [ p ] :
            for i in range ( p * p , n + 1 , p ) :
                prime [ i ] = False
    ans = [ ]
    for p in range ( 2 , n + 1 ) :
        if prime [ p ] :
            ans . append ( p )
    return ans
def is_prime ( n ) :
    return n == 3 or n == 5 or n == 7
def find_Sum ( n ) :
    sum = 0
    v = addPrimes ( )
    for i in range ( len ( v ) ) :
        if n > 0 :
            flag = 1
            a = v [ i ]
            while a != 0 :
                d = a % 10
                a = a // 10
                if is_prime ( d ) :
                    flag = 0
                    break
            if flag == 1 :
                n -= 1
                sum += v [ i ]
    return sum
n = 7
print ( find_Sum ( n ) )


---> console_out:
252
 
MATCHED!! :D
 73%|███████▎  | 1280/1746 [13:44<00:34, 13.35it/s]

-------------------------------------


---> lineNum: 1281
---> probID: aizu_p00542_A
---> inputs:
100
34
76
42
10
0
---> outputs:
228

import sys
science = [ 0 ] * 4
minsc = 100
sumsc = 0
for i in range ( 4 ) :
    science [ i ] = int ( input ( ) )
    minsc = min ( minsc , science [ i ] )
    sumsc += science [ i ]
sumsc -= minsc
sumso = int ( input ( ) )
x = int ( input ( ) )
if sumso < x :
    sumso = x
print ( sumsc + sumso )


---> console_out:
228
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784509540_6734/main.py", line 30, in <module>
    BearAndGame1 . main ( sys . argv )
  File "./junk/1703784509540_6734/main.py", line 15, in main
    n = sc . nextInt ( )
  File "./junk/1703784509540_6734/main.py", line 11, in nextInt
    return int ( self . next ( ) )
  File "./junk/1703784509540_6734/main.py", line 8, in next
    self . tokenizer = StringTokenizer ( self . reader ( ) )
NameError: name 'StringTokenizer' is not defined
out1,out2  350


-------------------------------------


---> lineNum: 1282
---> probID: codeforces_673_A
---> inputs:
3
7 20 88
---> outputs:
35

import sys
class InputReader :
    def __init__ ( self , stream ) :
        self . reader = stream . readline
        self . tokenizer = None
    def next ( self ) :
        while not self . tokenizer or not self . tokenizer . hasMoreTokens ( ) :
            self . tokenizer = StringTokenizer ( self . reader ( ) )
        return self . tokenizer . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
class BearAndGame1 :
    def main ( args ) :
        sc = InputReader ( sys . stdin )
        n = sc . nextInt ( )
        array = [ 0 ] * 100
        for i in range ( n ) :
            array [ i ] = sc . nextInt ( )
        flag = 15
        for i in range ( n ) :
            if array [ i ] <= flag :
                flag = array [ i ] + 15
            else :
                break
        result = min ( flag , 90 )
        out = sys . stdout
        out . write ( str ( result ) + "\n" )
        out . close ( )
if __name__ == "__main__" :
    BearAndGame1 . main ( sys . argv )


---> console_out:
 
DIDN'T MATCH!! :(
 73%|███████▎  | 1282/1746 [13:44<00:34, 13.59it/s]

-------------------------------------


---> lineNum: 1283
---> probID: geeksforgeeks_665_A
---> inputs:

---> outputs:
4


import collections
v = [ ]
dp = [ [ [ [ - 1 for _ in range ( 2 ) ] for _ in range ( 180 ) ] for _ in range ( 180 ) ] for _ in range ( 18 ) ]
def memo ( index , evenSum , oddSum , tight ) :
    if index == len ( v ) :
        if evenSum > oddSum :
            return 1
        else :
            return 0
    if dp [ index ] [ evenSum ] [ oddSum ] [ tight ] != - 1 :
        return dp [ index ] [ evenSum ] [ oddSum ] [ tight ]
    limit = v [ index ] if tight > 0 else 9
    ans = 0
    for d in range ( limit + 1 ) :
        currTight = 0
        if d == v [ index ] :
            currTight = tight
        if d % 2 != 0 :
            ans += memo ( index + 1 , evenSum , oddSum + d , currTight )
        else :
            ans += memo ( index + 1 , evenSum + d , oddSum , currTight )
    dp [ index ] [ evenSum ] [ oddSum ] [ tight ] = ans
    return ans
def count_num ( n ) :
    global v , dp
    v = [ ]
    while n > 0 :
        v . append ( n % 10 )
        n //= 10
    v . reverse ( )
    for i in range ( 18 ) :
        for j in range ( 180 ) :
            for k in range ( 180 ) :
                for l in range ( 2 ) :
                    dp [ i ] [ j ] [ k ] [ l ] = - 1
    return memo ( 0 , 0 , 0 , 1 )
if __name__ == '__main__' :
    L , R = 2 , 10
    print ( count_num ( R ) - count_num ( L - 1 ) )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1284
---> probID: atcoder_ABC088_C
---> inputs:
1 0 1
2 1 2
1 0 1
---> outputs:
Yes

import sys
c = [ [ 0 for j in range ( 3 ) ] for i in range ( 3 ) ]
b = True
for i in range ( 3 ) :
    row = input ( ) . split ( )
    for j in range ( 3 ) :
        c [ i ] [ j ] = int ( row [ j ] )
for i in range ( 2 ) :
    for j in range ( i + 1 , 3 ) :
        if c [ i ] [ 0 ] - c [ j ] [ 0 ] == c [ i ] [ 1 ] - c [ j ] [ 1 ] and c [ i ] [ 1 ] - c [ j ] [ 1 ] == c [ i ] [ 2 ] - c [ j ] [ 2 ] :
            pass
        else :
            b = False
            break
if b :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
 74%|███████▎  | 1284/1746 [13:46<02:33,  3.01it/s]

-------------------------------------


---> lineNum: 1285
---> probID: codeforces_1739_B
---> inputs:
3
4
1 0 2 5
3
2 6 3
5
0 0 0 0 0
---> outputs:
1 1 3 8
-1
0 0 0 0 0

import sys
t = int ( input ( ) )
for _ in range ( t ) :
    n = int ( input ( ) )
    a = list ( map ( int , input ( ) . split ( ) ) )
    b = [ 0 ] * n
    flag = True
    b [ 0 ] = a [ 0 ]
    for i in range ( 1 , n ) :
        if a [ i ] != 0 and b [ i - 1 ] - a [ i ] >= 0 :
            flag = False
            break
        else :
            b [ i ] = b [ i - 1 ] + a [ i ]
    if not flag :
        print ( - 1 )
    else :
        for i in range ( n ) :
            sys . stdout . write ( str ( b [ i ] ) + " " )
        print ( )


---> console_out:
1 1 3 8 
-1
0 0 0 0 0 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1286
---> probID: projecteuler_p218_A
---> inputs:

---> outputs:
0

class p218 :
    def __init__ ( self ) :
        pass
    def run ( self ) :
        return "0"
if __name__ == "__main__" :
    print ( p218 ( ) . run ( ) )


---> console_out:
0
 
MATCHED!! :D
 74%|███████▎  | 1286/1746 [13:46<01:55,  3.99it/s]

-------------------------------------


---> lineNum: 1287
---> probID: geeksforgeeks_1547_A
---> inputs:

---> outputs:
Element is present at index 3


def search ( arr , x ) :
    n = len ( arr )
    for i in range ( n ) :
        if arr [ i ] == x :
            return i
    return - 1
arr = [ 2 , 3 , 4 , 10 , 40 ]
x = 10
result = search ( arr , x )
if result == - 1 :
    print ( "Element is not present in array" )
else :
    print ( "Element is present at index" , result )


---> console_out:
Element is present at index 3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1288
---> probID: atcoder_ABC095_D
---> inputs:
3 20
2 80
9 120
16 1
---> outputs:
191

import sys
n , c = map ( int , input ( ) . split ( ) )
forwardMax = [ 0 ] * ( n + 1 )
backwardMax = [ 0 ] * ( n + 1 )
positions = [ 0 ] * ( n + 1 )
values = [ 0 ] * ( n + 1 )
positions [ 0 ] = 0
values [ 0 ] = 0
for i in range ( 1 , n + 1 ) :
    positions [ i ] , values [ i ] = map ( int , input ( ) . split ( ) )
max_val = 0
sum_val = 0
for i in range ( n + 1 ) :
    sum_val += values [ i ]
    max_val = max ( max_val , sum_val - positions [ i ] )
    forwardMax [ i ] = max_val
max_val = 0
sum_val = 0
for i in range ( n , - 1 , - 1 ) :
    sum_val += values [ i ]
    max_val = max ( max_val , sum_val - ( c - positions [ i ] ) )
    backwardMax [ i ] = max_val
res = 0
for i in range ( n + 1 ) :
    res = max ( res , forwardMax [ i ] )
    if i != n :
        res = max ( res , forwardMax [ i ] - positions [ i ] + backwardMax [ i + 1 ] )
    res = max ( res , backwardMax [ i ] )
    if i != 0 :
        res = max ( res , backwardMax [ i ] - ( c - positions [ i ] ) + forwardMax [ i - 1 ] )
print ( res )


---> console_out:
191
 
MATCHED!! :D
 74%|███████▍  | 1288/1746 [13:46<01:28,  5.15it/s]

-------------------------------------


---> lineNum: 1289
---> probID: geeksforgeeks_1848_A
---> inputs:

---> outputs:
32


import math
def toggleBitsFromLToR ( n , l , r ) :
    num = ( ( 1 << r ) - 1 ) ^ ( ( 1 << ( l - 1 ) ) - 1 )
    return ( n ^ num )
def unsetBitsInGivenRange ( n , l , r ) :
    num = ( 1 << ( 4 * 8 - 1 ) ) - 1
    num = toggleBitsFromLToR ( num , l , r )
    return ( n & num )
if __name__ == '__main__' :
    n = 42
    l , r = 2 , 5
    print ( unsetBitsInGivenRange ( n , l , r ) )


---> console_out:
32
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1290
---> probID: geeksforgeeks_3387_A
---> inputs:

---> outputs:
7


def MinStep ( a , n ) :
    positive = 0
    negative = 0
    zero = 0
    step = 0
    for i in range ( n ) :
        if a [ i ] == 0 :
            zero += 1
        elif a [ i ] < 0 :
            negative += 1
            step += ( - 1 - a [ i ] )
        else :
            positive += 1
            step += ( a [ i ] - 1 )
    if negative % 2 == 0 :
        step += zero
    else :
        if zero > 0 :
            step += zero
        else :
            step += 2
    return step
a = [ 0 , - 2 , - 1 , - 3 , 4 ]
n = len ( a )
print ( MinStep ( a , n ) )


---> console_out:
7
 
MATCHED!! :D
 74%|███████▍  | 1290/1746 [13:46<01:10,  6.50it/s]

-------------------------------------


---> lineNum: 1291
---> probID: codeforces_743_A
---> inputs:
4 1 4
1010
---> outputs:
1

import sys
number , start , end = map ( int , input ( ) . split ( ) )
arr = [ 0 ] * ( number + 1 )
str = input ( ) . strip ( )
for i in range ( len ( str ) ) :
    arr [ i + 1 ] = int ( str [ i ] )
if arr [ start ] == arr [ end ] :
    print ( 0 )
else :
    print ( abs ( arr [ start ] - arr [ end ] ) )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1292
---> probID: codeforces_1654_A
---> inputs:
5
6
5 2 1 4 7 3
3
32 78 78
3
69 54 91
8
999021 999021 999021 999021 999652 999021 999021 999021
2
1000000000 1000000000
---> outputs:
12
156
160
1998673
2000000000

import sys
for line in sys . stdin :
    t = int ( line )
    for i in range ( t ) :
        n = int ( input ( ) )
        num = list ( map ( int , input ( ) . split ( ) ) )
        num . sort ( )
        print ( num [ n - 1 ] + num [ n - 2 ] )


---> console_out:
12
156
160
1998673
2000000000
 
MATCHED!! :D
 74%|███████▍  | 1292/1746 [13:46<00:57,  7.95it/s]

-------------------------------------


---> lineNum: 1293
---> probID: geeksforgeeks_3154_A
---> inputs:

---> outputs:
4


def gcd ( a , b ) :
    if b == 0 :
        return a
    return gcd ( b , a % b )
def no_of_squares ( x1 , y1 , x2 , y2 ) :
    dx = abs ( x2 - x1 )
    dy = abs ( y2 - y1 )
    ans = dx + dy - gcd ( dx , dy )
    print ( ans )
if __name__ == '__main__' :
    x1 , y1 , x2 , y2 = 1 , 1 , 4 , 3
    no_of_squares ( x1 , y1 , x2 , y2 )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1294
---> probID: geeksforgeeks_2238_A
---> inputs:

---> outputs:
1557


def get_maximum ( s , a ) :
    n = len ( s )
    for i in range ( n ) :
        if int ( s [ i ] ) < a [ int ( s [ i ] ) ] :
            j = i
            while j < n and int ( s [ j ] ) <= a [ int ( s [ j ] ) ] :
                s [ j ] = str ( a [ int ( s [ j ] ) ] )
                j += 1
            return '' . join ( s )
    return '' . join ( s )
s = "1337"
a = [ 0 , 1 , 2 , 5 , 4 , 6 , 6 , 3 , 1 , 9 ]
print ( get_maximum ( list ( s ) , a ) )


---> console_out:
1557
 
MATCHED!! :D
 74%|███████▍  | 1294/1746 [13:46<00:47,  9.44it/s]

-------------------------------------


---> lineNum: 1295
---> probID: geeksforgeeks_1820_A
---> inputs:

---> outputs:
Yes


import math
MAX_DIGITS = 20
def isOctal ( n ) :
    while n > 0 :
        if n % 10 >= 8 :
            return 0
        else :
            n = n // 10
    return 1
def isPalindrome ( n ) :
    divide = 8 if isOctal ( n ) == 0 else 10
    octal = [ 0 ] * MAX_DIGITS
    i = 0
    while n != 0 :
        octal [ i ] = n % divide
        i += 1
        n = n // divide
    for j in range ( i - 1 , - 1 , - 1 ) :
        if octal [ j ] != octal [ i - 1 - j ] :
            return 0
    return 1
n = 97
if isPalindrome ( n ) > 0 :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1296
---> probID: codeforces_146_A
---> inputs:
2
47
---> outputs:
NO

import math
n = int ( input ( ) )
str = input ( )
l = list ( str )
x = 0
y = 0
t = 0
for i in range ( n ) :
    if l [ i ] != '4' and l [ i ] != '7' :
        t = 1
if t == 1 :
    print ( "NO" )
else :
    for i in range ( n // 2 ) :
        x += int ( l [ i ] )
    for i in range ( n - 1 , n // 2 - 1 , - 1 ) :
        y += int ( l [ i ] )
    if x == y :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
NO
 
MATCHED!! :D
 74%|███████▍  | 1296/1746 [13:47<00:46,  9.77it/s]

-------------------------------------


---> lineNum: 1297
---> probID: geeksforgeeks_4040_A
---> inputs:

---> outputs:
Fixed Point is 2
Fixed Point is 3


def binarySearch ( arr , low , high ) :
    if high < low :
        return - 1
    mid = ( low + high ) // 2
    midValue = arr [ mid ]
    if mid == arr [ mid ] :
        return mid
    leftindex = min ( mid - 1 , midValue )
    left = binarySearch ( arr , low , leftindex )
    if left >= 0 :
        return left
    rightindex = max ( mid + 1 , midValue )
    right = binarySearch ( arr , rightindex , high )
    return right
arr = [ - 10 , - 5 , 2 , 2 , 2 , 3 , 4 , 7 , 9 , 12 , 13 ]
print ( "Fixed Point is" , binarySearch ( arr , 0 , len ( arr ) - 1 ) )
arr1 = [ - 10 , - 1 , 3 , 3 , 10 , 30 , 30 , 50 , 100 ]
print ( "Fixed Point is" , binarySearch ( arr1 , 0 , len ( arr1 ) - 1 ) )


---> console_out:
Fixed Point is 2
Fixed Point is 3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1298
---> probID: geeksforgeeks_4563_A
---> inputs:

---> outputs:
23 

import math
MAX = 10000
prodDig = [ 0 ] * MAX
def getDigitProduct ( x ) :
    if x < 10 :
        return x
    if prodDig [ x ] != 0 :
        return prodDig [ x ]
    prod = ( x % 10 ) * getDigitProduct ( x // 10 )
    prodDig [ x ] = prod
    return prod
def findSeed ( n ) :
    res = [ ]
    for i in range ( 1 , n // 2 + 1 ) :
        if i * getDigitProduct ( i ) == n :
            res . append ( i )
    if len ( res ) == 0 :
        print ( "NO seed exists" )
        return
    for i in range ( len ( res ) ) :
        print ( res [ i ] , end = " " )
n = 138
findSeed ( n )


---> console_out:
23  
MATCHED!! :D
 74%|███████▍  | 1298/1746 [13:47<00:40, 11.10it/s]

-------------------------------------


---> lineNum: 1299
---> probID: atcoder_ABC107_C
---> inputs:
5 3
-30 -10 10 20 50
---> outputs:
40

import sys
n , k = map ( int , sys . stdin . readline ( ) . split ( ) )
x = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
ans = float ( 'inf' )
for i in range ( n - k + 1 ) :
    left = x [ i ]
    right = x [ i + k - 1 ]
    ans = min ( ans , min ( abs ( left ) , abs ( right ) ) + right - left )
print ( ans )


---> console_out:
40
 
MATCHED!! :D
out1,out2 cubicrootof30is14 cubicrootof30is14


-------------------------------------


---> lineNum: 1300
---> probID: geeksforgeeks_4414_A
---> inputs:

---> outputs:
Cubic root of 3 is 1.44225


import math
def diff ( n , mid ) :
    if n > ( mid * mid * mid ) :
        return n - ( mid * mid * mid )
    else :
        return ( mid * mid * mid ) - n
def cubicRoot ( n ) :
    start = 0
    end = n
    e = 0.0000001
    while True :
        mid = ( start + end ) / 2
        error = diff ( n , mid )
        if error <= e :
            return mid
        if ( mid * mid * mid ) > n :
            end = mid
        else :
            start = mid
n = 3
print ( "Cubic root of" , n , "is" , cubicRoot ( n ) )


---> console_out:
Cubic root of 3 is 1.4422495812177658
 
MATCHED!! :D
 74%|███████▍  | 1300/1746 [13:47<00:36, 12.34it/s]Traceback (most recent call last):
  File "./junk/1703784512525_8271/main.py", line 2, in <module>
    n , m = map ( int , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2  3070


-------------------------------------


---> lineNum: 1301
---> probID: codeforces_1042_A
---> inputs:
4
6
1
1
1
1
---> outputs:
3 7

import sys
n , m = map ( int , input ( ) . split ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
max_index = a . index ( max ( a ) )
ansmax = a [ max_index ] + m
for i in range ( m ) :
    min_index = a . index ( min ( a ) )
    a [ min_index ] += 1
max_index = a . index ( max ( a ) )
ansmin = a [ max_index ]
print ( ansmin , ansmax )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1302
---> probID: geeksforgeeks_4197_A
---> inputs:

---> outputs:
x is  11


import math
def inv ( a , m ) :
    m0 = m
    t = 0
    q = 0
    x0 = 0
    x1 = 1
    if m == 1 :
        return 0
    while a > 1 :
        q = a // m
        t = m
        m = a % m
        a = t
        t = x0
        x0 = x1 - q * x0
        x1 = t
    if x1 < 0 :
        x1 += m0
    return x1
def findMinX ( num , rem , k ) :
    prod = 1
    for i in range ( k ) :
        prod *= num [ i ]
    result = 0
    for i in range ( k ) :
        pp = prod // num [ i ]
        result += rem [ i ] * inv ( pp , num [ i ] ) * pp
    return result % prod
num = [ 3 , 4 , 5 ]
rem = [ 2 , 3 , 1 ]
k = len ( num )
print ( "x is" , findMinX ( num , rem , k ) )


---> console_out:
x is 11
 
MATCHED!! :D
 75%|███████▍  | 1302/1746 [13:47<00:35, 12.38it/s]Traceback (most recent call last):
  File "./junk/1703784512685_3047/main.py", line 1, in <module>
    class Solution :
  File "./junk/1703784512685_3047/main.py", line 22, in Solution
    print ( Solution . findMaxOR ( arr , n ) )
NameError: name 'Solution' is not defined
out1,out2  20


-------------------------------------


---> lineNum: 1303
---> probID: geeksforgeeks_721_A
---> inputs:

---> outputs:
2


class Solution :
    def compare ( self , a , b ) :
        return a > b
    @ staticmethod
    def findMaxOR ( arr , n ) :
        for i in range ( n ) :
            for j in range ( i + 1 , n ) :
                if arr [ i ] < arr [ j ] :
                    temp = arr [ i ]
                    arr [ i ] = arr [ j ]
                    arr [ j ] = temp
        maxOR = arr [ 0 ]
        count = 1
        for i in range ( 1 , n ) :
            if ( maxOR | arr [ i ] ) > maxOR :
                maxOR = maxOR | arr [ i ]
                count += 1
        return count
    if __name__ == '__main__' :
        arr = [ 5 , 1 , 3 , 4 , 2 ]
        n = len ( arr )
        print ( Solution . findMaxOR ( arr , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1304
---> probID: geeksforgeeks_3181_A
---> inputs:

---> outputs:
20.0


import math
def seriesSum ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += i * ( i + 1 ) / 2
    return sum
n = 4
print ( seriesSum ( n ) )


---> console_out:
20.0
 
MATCHED!! :D
 75%|███████▍  | 1304/1746 [13:47<00:33, 13.37it/s]

-------------------------------------


---> lineNum: 1305
---> probID: geeksforgeeks_2275_A
---> inputs:

---> outputs:
16


import math
def aliquotSum ( n ) :
    sum = 0
    for i in range ( 1 , n ) :
        if n % i == 0 :
            sum += i
    return sum
n = 12
print ( aliquotSum ( n ) )


---> console_out:
16
 
MATCHED!! :D
out1,out2 400 400


-------------------------------------


---> lineNum: 1306
---> probID: geeksforgeeks_1714_A
---> inputs:

---> outputs:
40


import math
def pentagon_pyramidal ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        p = ( 3 * i * i - i ) / 2
        sum = sum + p
    return sum
n = 4
print ( pentagon_pyramidal ( n ) )


---> console_out:
40.0
 
MATCHED!! :D
 75%|███████▍  | 1306/1746 [13:47<00:32, 13.61it/s]out1,out2 122010 122010


-------------------------------------


---> lineNum: 1307
---> probID: geeksforgeeks_1672_A
---> inputs:

---> outputs:
12201


import math
def fifthPowerSum ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += math . pow ( i , 5 )
    return sum
n = 6
print ( fifthPowerSum ( n ) )


---> console_out:
12201.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1308
---> probID: geeksforgeeks_4067_A
---> inputs:

---> outputs:
30


import math
def squaresum ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += ( i * i )
    return sum
n = 4
print ( squaresum ( n ) )


---> console_out:
30
 
MATCHED!! :D
 75%|███████▍  | 1308/1746 [13:47<00:30, 14.30it/s]

-------------------------------------


---> lineNum: 1309
---> probID: geeksforgeeks_3046_A
---> inputs:

---> outputs:
20.0


import math
def seriesSum ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += i * ( i + 1 ) / 2
    return sum
n = 4
print ( seriesSum ( n ) )


---> console_out:
20.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1310
---> probID: geeksforgeeks_4057_A
---> inputs:

---> outputs:
1330


import math
def sumOfSeries ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum = sum + ( 2 * i - 1 ) ** 2
    return sum
n = 10
print ( sumOfSeries ( n ) )


---> console_out:
1330
 
MATCHED!! :D
 75%|███████▌  | 1310/1746 [13:48<00:29, 14.75it/s]out1,out2 200 200


-------------------------------------


---> lineNum: 1311
---> probID: geeksforgeeks_4824_A
---> inputs:

---> outputs:
20


def findSum ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += ( ( i * ( i + 1 ) * ( 2 * i + 1 ) ) / 6 )
    return sum
if __name__ == '__main__' :
    n = 3
    print ( findSum ( n ) )


---> console_out:
20.0
 
MATCHED!! :D
out1,out2 22750 22750


-------------------------------------


---> lineNum: 1312
---> probID: geeksforgeeks_3043_A
---> inputs:

---> outputs:
2275


import math
def fourthPowerSum ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += math . pow ( i , 4 )
    return sum
n = 6
print ( fourthPowerSum ( n ) )


---> console_out:
2275.0
 
MATCHED!! :D
 75%|███████▌  | 1312/1746 [13:48<00:30, 14.10it/s]

-------------------------------------


---> lineNum: 1313
---> probID: geeksforgeeks_2336_A
---> inputs:

---> outputs:
816


import math
def squareSum ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += ( 2 * i ) ** 2
    return sum
print ( squareSum ( 8 ) )


---> console_out:
816
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1314
---> probID: geeksforgeeks_4689_A
---> inputs:

---> outputs:
2.5


import math
def AvgofSquareN ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += ( i * i )
    return sum / n
if __name__ == '__main__' :
    n = 2
    print ( AvgofSquareN ( n ) )


---> console_out:
2.5
 
MATCHED!! :D
 75%|███████▌  | 1314/1746 [13:48<00:29, 14.68it/s]

-------------------------------------


---> lineNum: 1315
---> probID: geeksforgeeks_1613_A
---> inputs:

---> outputs:
8


import math
def findSum ( n ) :
    sum = 0
    for i in range ( n ) :
        sum += i * ( n - i )
    return 2 * sum
n = 3
print ( findSum ( n ) )


---> console_out:
8
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1316
---> probID: geeksforgeeks_4020_A
---> inputs:

---> outputs:
7


import math
def solve ( n , base ) :
    sum = 0
    while n > 0 :
        remainder = n % base
        sum += remainder
        n = n // base
    return sum
def SumsOfDigits ( n ) :
    sum = 0
    for base in range ( 2 , math . floor ( n / 2 ) + 1 ) :
        sum += solve ( n , base )
    print ( sum )
if __name__ == '__main__' :
    n = 8
    SumsOfDigits ( n )


---> console_out:
7
 
MATCHED!! :D
 75%|███████▌  | 1316/1746 [13:48<00:28, 15.19it/s]  File "./junk/1703784513598_4070/main.py", line 9
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  501000


-------------------------------------


---> lineNum: 1317
---> probID: aizu_p00053_A
---> inputs:
2
9
0
---> outputs:
5
100

import java . util . ArrayList
import java . util . Arrays
import java . util . Scanner
class Main :
    N = 10000
    def main ( self , args ) :
        self . solve ( )
    def solve ( self ) :
        sc = Scanner ( System . in )
        p = ArrayList ( )
        i = 2
        while p . size ( ) <= self . N :
            f = True
            for j in range ( p . size ( ) ) :
                f &= i % p . get ( j ) != 0
                if not f :
                    break
            if f :
                p . add ( i )
            i += 1
        while True :
            n = sc . nextInt ( )
            if n == 0 :
                break
            sum = 0
            for i in range ( n ) :
                sum += p . get ( i )
            print ( sum )
        sc . close ( )
    def debug ( self , * os ) :
        print ( Arrays . deepToString ( os ) )


---> console_out:
 
DIDN'T MATCH!! :(
out1,out2  1040


-------------------------------------


---> lineNum: 1318
---> probID: geeksforgeeks_1878_A
---> inputs:

---> outputs:
1
4


import math
class GFG :
    def main ( args ) :
        print ( bin ( 4 ) . count ( '1' ) )
        print ( bin ( 15 ) . count ( '1' ) )


---> console_out:
 
DIDN'T MATCH!! :(
 75%|███████▌  | 1318/1746 [13:48<00:27, 15.55it/s]Traceback (most recent call last):
  File "./junk/1703784513719_2815/main.py", line 24, in <module>
    print ( "Cost of Optimal BST is" , optimalSearchTree ( keys , freq , n ) )
  File "./junk/1703784513719_2815/main.py", line 10, in optimalSearchTree
    c = ( ( cost [ i ] [ r - 1 ] if r > i else 0 ) + ( cost [ r + 1 ] [ j ] if r < j else 0 ) + sum ( freq [ i : j + 1 ] ) )
TypeError: sum() missing 2 required positional arguments: 'i' and 'j'
out1,out2  costofoptimalbstis1420


-------------------------------------


---> lineNum: 1319
---> probID: geeksforgeeks_4891_A
---> inputs:

---> outputs:
Cost of Optimal BST is 142


def optimalSearchTree ( keys , freq , n ) :
    cost = [ [ 0 for j in range ( n + 1 ) ] for i in range ( n + 1 ) ]
    for i in range ( n ) :
        cost [ i ] [ i ] = freq [ i ]
    for L in range ( 2 , n + 1 ) :
        for i in range ( n - L + 1 ) :
            j = i + L - 1
            cost [ i ] [ j ] = float ( 'inf' )
            for r in range ( i , j + 1 ) :
                c = ( ( cost [ i ] [ r - 1 ] if r > i else 0 ) + ( cost [ r + 1 ] [ j ] if r < j else 0 ) + sum ( freq [ i : j + 1 ] ) )
                if c < cost [ i ] [ j ] :
                    cost [ i ] [ j ] = c
    return cost [ 0 ] [ n - 1 ]
def sum ( freq , i , j ) :
    s = 0
    for k in range ( i , j + 1 ) :
        if k >= len ( freq ) :
            continue
        s += freq [ k ]
    return s
keys = [ 10 , 12 , 20 ]
freq = [ 34 , 8 , 50 ]
n = len ( keys )
print ( "Cost of Optimal BST is" , optimalSearchTree ( keys , freq , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1320
---> probID: geeksforgeeks_1139_A
---> inputs:

---> outputs:
6


def get ( x , y , z ) :
    if x > z :
        return - 1
    val = z - x
    div = ( z - x ) // y
    ans = div * y + x
    return ans
if __name__ == '__main__' :
    x , y , z = 1 , 5 , 8
    print ( get ( x , y , z ) )


---> console_out:
6
 
MATCHED!! :D
 76%|███████▌  | 1320/1746 [13:48<00:26, 15.84it/s]Traceback (most recent call last):
  File "./junk/1703784513840_9679/main.py", line 21, in <module>
    main ( )
  File "./junk/1703784513840_9679/main.py", line 19, in main
    solve ( )
  File "./junk/1703784513840_9679/main.py", line 10, in solve
    map [ int ( sc ( ) ) ] = i
ValueError: invalid literal for int() with base 10: '3 1 2'
out1,out2  30


-------------------------------------


---> lineNum: 1321
---> probID: codeforces_612_B
---> inputs:
3
3 1 2
---> outputs:
3

import sys
from collections import defaultdict
BUFFERSIZE = 512000
sc = sys . stdin . readline
out = sys . stdout . write
def solve ( ) :
    n = int ( sc ( ) )
    map = defaultdict ( int )
    for i in range ( n ) :
        map [ int ( sc ( ) ) ] = i
    lastLoc = map [ 1 ]
    ans = 0
    for i in range ( 1 , n + 1 ) :
        newLoc = map [ i ]
        ans += abs ( lastLoc - newLoc )
        lastLoc = newLoc
    out ( str ( ans ) + '\n' )
def main ( ) :
    solve ( )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1322
---> probID: geeksforgeeks_2993_A
---> inputs:

---> outputs:
6


import math
def binomialCoeff ( n , k ) :
    C = [ [ 0 for x in range ( k + 1 ) ] for x in range ( n + 1 ) ]
    for i in range ( n + 1 ) :
        for j in range ( min ( i , k ) + 1 ) :
            if j == 0 or j == i :
                C [ i ] [ j ] = 1
            else :
                C [ i ] [ j ] = C [ i - 1 ] [ j - 1 ] + C [ i - 1 ] [ j ]
    return C [ n ] [ k ]
def maxcoefficientvalue ( n ) :
    if n % 2 == 0 :
        return binomialCoeff ( n , n // 2 )
    else :
        return binomialCoeff ( n , ( n + 1 ) // 2 )
n = 4
print ( maxcoefficientvalue ( n ) )


---> console_out:
6
 
MATCHED!! :D
 76%|███████▌  | 1322/1746 [13:48<00:26, 15.98it/s]

-------------------------------------


---> lineNum: 1323
---> probID: geeksforgeeks_1163_A
---> inputs:

---> outputs:
2


def isVowel ( ch ) :
    return ch in [ 'a' , 'e' , 'i' , 'o' , 'u' ]
def vowelPairs ( s , n ) :
    cnt = 0
    for i in range ( n - 1 ) :
        if isVowel ( s [ i ] ) and isVowel ( s [ i + 1 ] ) :
            cnt += 1
    return cnt
s = "abaebio"
n = len ( s )
print ( vowelPairs ( s , n ) )


---> console_out:
2
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784514021_8758/main.py", line 25, in <module>
    main ( )
  File "./junk/1703784514021_8758/main.py", line 23, in main
    solve ( )
  File "./junk/1703784514021_8758/main.py", line 4, in solve
    N , W , H = map ( int , input ( ) . split ( ) )
UnboundLocalError: local variable 'map' referenced before assignment
out1,out2  4030


-------------------------------------


---> lineNum: 1324
---> probID: aizu_p00706_A
---> inputs:
16
10 8
2 2
2 5
2 7
3 3
3 8
4 2
4 5
4 8
6 4
6 7
7 5
7 8
8 1
8 4
9 6
10 3
4 3
8
6 4
1 2
2 1
2 4
3 4
4 2
5 3
6 1
6 2
3 2
0
---> outputs:
4
3

import sys
def solve ( ) :
    while True :
        N , W , H = map ( int , input ( ) . split ( ) )
        if N == 0 :
            break
        map = [ [ 0 for j in range ( H + 1 ) ] for i in range ( W + 1 ) ]
        for i in range ( N ) :
            x , y = map ( int , input ( ) . split ( ) )
            map [ x ] [ y ] += 1
        S , T = map ( int , input ( ) . split ( ) )
        max_count = 0
        for s in range ( 1 , W - S + 2 ) :
            for t in range ( 1 , H - T + 2 ) :
                count = 0
                for a in range ( s , s + S ) :
                    for b in range ( t , t + T ) :
                        count += map [ a ] [ b ]
                if count > max_count :
                    max_count = count
        print ( max_count )
def main ( ) :
    solve ( )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 76%|███████▌  | 1324/1746 [13:48<00:26, 16.15it/s]

-------------------------------------


---> lineNum: 1325
---> probID: geeksforgeeks_2780_A
---> inputs:

---> outputs:
Present at index 5


def isSubstring ( s1 , s2 ) :
    M = len ( s1 )
    N = len ( s2 )
    for i in range ( N - M + 1 ) :
        j = 0
        while j < M :
            if s2 [ i + j ] != s1 [ j ] :
                break
            j += 1
        if j == M :
            return i
    return - 1
s1 = "for"
s2 = "geeksforgeeks"
res = isSubstring ( s1 , s2 )
if res == - 1 :
    print ( "Not present" )
else :
    print ( "Present at index" , res )


---> console_out:
Present at index 5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1326
---> probID: geeksforgeeks_836_A
---> inputs:

---> outputs:
The angle is 32.5 degrees


def angleOncirCumference ( z ) :
    return ( z / 2 )
if __name__ == '__main__' :
    angle = 65
    z = angleOncirCumference ( angle )
    print ( "The angle is " + str ( z ) + " degrees" )


---> console_out:
The angle is 32.5 degrees
 
MATCHED!! :D
 76%|███████▌  | 1326/1746 [13:49<00:25, 16.31it/s]out1,out2 countofsubarraysof00only50countofsubarraysof10only150 countofsubarraysof00only50countofsubarraysof10only150


-------------------------------------


---> lineNum: 1327
---> probID: geeksforgeeks_416_A
---> inputs:

---> outputs:
Count of subarrays of 0 only: 5
Count of subarrays of 1 only: 15


import math
def countSubarraysof1and0 ( a , n ) :
    count1 = 0
    count0 = 0
    number1 = 0
    number0 = 0
    for i in range ( n ) :
        if a [ i ] == 1 :
            count1 += 1
        else :
            number1 += ( count1 ) * ( count1 + 1 ) / 2
            count1 = 0
    for i in range ( n ) :
        if a [ i ] == 0 :
            count0 += 1
        else :
            number0 += ( count0 ) * ( count0 + 1 ) / 2
            count0 = 0
    if count1 > 0 :
        number1 += ( count1 ) * ( count1 + 1 ) / 2
    if count0 > 0 :
        number0 += ( count0 ) * ( count0 + 1 ) / 2
    print ( "Count of subarrays of 0 only: " , number0 )
    print ( "\nCount of subarrays of 1 only: " , number1 )
a = [ 1 , 1 , 0 , 0 , 1 , 0 , 1 , 0 , 1 , 1 , 1 , 1 ]
n = len ( a )
countSubarraysof1and0 ( a , n )


---> console_out:
Count of subarrays of 0 only:  5.0

Count of subarrays of 1 only:  15.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1328
---> probID: geeksforgeeks_5089_A
---> inputs:

---> outputs:
13 11 3 1 

def printNumbers ( N ) :
    flag = 1
    x = N
    if N > 0 :
        while x > 0 and flag == 1 :
            digit = x % 10
            if digit != 1 and digit != 3 :
                flag = 0
            x = x // 10
        if flag == 1 :
            print ( N , end = " " )
        printNumbers ( N - 1 )
N = 20
printNumbers ( N )


---> console_out:
13 11 3 1  
MATCHED!! :D
 76%|███████▌  | 1328/1746 [13:49<00:25, 16.34it/s]

-------------------------------------


---> lineNum: 1329
---> probID: geeksforgeeks_4831_A
---> inputs:

---> outputs:
5 4 3 1 2 

import sys
def printPermutation ( n , k ) :
    mx = n
    for i in range ( 1 , k + 1 ) :
        sys . stdout . write ( str ( mx ) + " " )
        mx -= 1
    for i in range ( 1 , mx + 1 ) :
        sys . stdout . write ( str ( i ) + " " )
if __name__ == "__main__" :
    N = 5
    K = 3
    if K >= N - 1 :
        sys . stdout . write ( "Not Possible" )
    else :
        printPermutation ( N , K )


---> console_out:
5 4 3 1 2  
MATCHED!! :D


-------------------------------------


---> lineNum: 1330
---> probID: codeforces_1017_A
---> inputs:
5
100 98 100 100
100 100 100 100
100 100 99 99
90 99 90 100
100 98 60 99
---> outputs:
2

import sys
n = int ( input ( ) )
ans = 0
rank = 1
arr = [ ]
for i in range ( n ) :
    a , b , c , d = map ( int , input ( ) . split ( ) )
    sum = a + b + c + d
    arr . append ( sum )
for j in arr :
    if arr [ 0 ] < j :
        rank += 1
print ( rank )


---> console_out:
2
 
MATCHED!! :D
 76%|███████▌  | 1330/1746 [13:49<00:25, 16.24it/s]

-------------------------------------


---> lineNum: 1331
---> probID: geeksforgeeks_2666_A
---> inputs:

---> outputs:
Yes


import collections
def check ( s1 , s2 ) :
    mp = collections . defaultdict ( int )
    for i in range ( len ( s1 ) ) :
        mp [ s1 [ i ] ] += 1
    for i in range ( len ( s2 ) ) :
        if mp [ s2 [ i ] ] > 0 :
            return True
    return False
s1 = "geeksforgeeks"
s2 = "geeks"
yes_or_no = check ( s1 , s2 )
if yes_or_no == True :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
out1,out2 yesnoyesnoyes yesnoyesnoyes


-------------------------------------


---> lineNum: 1332
---> probID: codeforces_1341_A
---> inputs:
5
7 20 3 101 18
11 11 10 234 2
8 9 7 250 122
19 41 21 321 10
3 10 8 6 1
---> outputs:
Yes
No
Yes
No
Yes

import sys
for line in sys . stdin :
    t = int ( line )
    for i in range ( t ) :
        n , a , b , c , d = map ( int , input ( ) . split ( ) )
        flag = False
        k = n * ( a - b )
        m = n * ( a + b )
        if k > ( c + d ) or m < ( c - d ) :
            print ( "NO" )
        else :
            print ( "YES" )


---> console_out:
YES
NO
YES
NO
YES
 
MATCHED!! :D
 76%|███████▋  | 1332/1746 [13:49<00:25, 16.36it/s]  File "./junk/1703784514570_4619/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  206010


-------------------------------------


---> lineNum: 1333
---> probID: geeksforgeeks_1483_A
---> inputs:

---> outputs:
2 -6 1 

import java . util . * ;
public class GFG { static void findElements ( int [ ] arr , int n ) { for ( int i = 0 ; i < n ; i + + ) { int count = 0 ; for ( int j = 0 ; j < n ; j + + ) { if ( arr [ j ] > arr [ i ] ) { count + + ; } } if ( count >= 2 ) { System . out . print ( arr [ i ] + " " ) ; } } } public static void main ( String [ ] args ) { int [ ] arr = { 2 , - 6 , 3 , 5 , 1 } ; int n = arr . length ; findElements ( arr , n ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1334
---> probID: geeksforgeeks_3478_A
---> inputs:

---> outputs:
14


import numpy as np
def maxPathSum ( tri , m , n ) :
    for i in range ( m - 1 , - 1 , - 1 ) :
        for j in range ( i + 1 ) :
            if tri [ i + 1 ] [ j ] > tri [ i + 1 ] [ j + 1 ] :
                tri [ i ] [ j ] += tri [ i + 1 ] [ j ]
            else :
                tri [ i ] [ j ] += tri [ i + 1 ] [ j + 1 ]
    return tri [ 0 ] [ 0 ]
tri = np . array ( [ [ 1 , 0 , 0 ] , [ 4 , 8 , 0 ] , [ 1 , 5 , 3 ] ] )
print ( maxPathSum ( tri , 2 , 2 ) )


---> console_out:
14
 
MATCHED!! :D
 76%|███████▋  | 1334/1746 [13:49<00:41,  9.82it/s]

-------------------------------------


---> lineNum: 1335
---> probID: geeksforgeeks_3197_A
---> inputs:

---> outputs:
Yes


def isHeap ( arr , n ) :
    for i in range ( 0 , ( n - 2 ) // 2 + 1 ) :
        if arr [ 2 * i + 1 ] > arr [ i ] :
            return False
        if 2 * i + 2 < n and arr [ 2 * i + 2 ] > arr [ i ] :
            return False
    return True
if __name__ == '__main__' :
    arr = [ 90 , 15 , 10 , 7 , 12 , 2 , 7 , 3 ]
    n = len ( arr )
    if isHeap ( arr , n ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1336
---> probID: geeksforgeeks_3196_A
---> inputs:

---> outputs:
Yes


def isHeap ( arr , i , n ) :
    if i > ( n - 2 ) // 2 :
        return True
    if arr [ i ] >= arr [ 2 * i + 1 ] and arr [ i ] >= arr [ 2 * i + 2 ] and isHeap ( arr , 2 * i + 1 , n ) and isHeap ( arr , 2 * i + 2 , n ) :
        return True
    return False
if __name__ == '__main__' :
    arr = [ 90 , 15 , 10 , 7 , 12 , 2 , 7 , 3 ]
    n = len ( arr ) - 1
    if isHeap ( arr , 0 , n ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
 77%|███████▋  | 1336/1746 [13:49<00:39, 10.29it/s]  File "./junk/1703784515136_3832/main.py", line 1
    0ERROR
     ^
SyntaxError: invalid syntax
out1,out2  yes


-------------------------------------


---> lineNum: 1337
---> probID: codeforces_851_B
---> inputs:
0 1 1 1 1 0
---> outputs:
Yes

0ERROR

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1338
---> probID: geeksforgeeks_1515_A
---> inputs:

---> outputs:
2


def findMinDel ( arr , n ) :
    min_num = float ( 'inf' )
    for i in range ( n ) :
        min_num = min ( arr [ i ] , min_num )
    cnt = 0
    for i in range ( n ) :
        if arr [ i ] == min_num :
            cnt += 1
    return n - cnt
if __name__ == '__main__' :
    arr = [ 3 , 3 , 2 ]
    n = len ( arr )
    print ( findMinDel ( arr , n ) )


---> console_out:
2
 
MATCHED!! :D
 77%|███████▋  | 1338/1746 [13:50<00:37, 11.02it/s]

-------------------------------------


---> lineNum: 1339
---> probID: geeksforgeeks_563_A
---> inputs:

---> outputs:
1
INF
1


import collections
def count ( x , y ) :
    ans = 0
    m = { }
    while x % y != 0 :
        x = x % y
        ans += 1
        if x in m :
            return - 1
        m [ x ] = 1
        x = x * 10
    return ans
res = count ( 1 , 2 )
if res == - 1 :
    print ( "INF" )
else :
    print ( res )
res = count ( 5 , 3 )
if res == - 1 :
    print ( "INF" )
else :
    print ( res )
res = count ( 3 , 5 )
if res == - 1 :
    print ( "INF" )
else :
    print ( res )


---> console_out:
1
INF
1
 
MATCHED!! :D
  File "./junk/1703784515349_1633/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax
out1,out2  yes


-------------------------------------


---> lineNum: 1340
---> probID: geeksforgeeks_2307_A
---> inputs:

---> outputs:
Yes


import java . io . * ;
import java . util . * ;
public class GFG :
    def isPossibleToMakeDivisible ( arr : List [ int ] , n : int ) -> bool :
        remainder = 0
        for i in range ( n ) :
            remainder = ( remainder + arr [ i ] ) % 3
        return remainder == 0
    public static void main ( String [ ] args ) :
        arr = [ 40 , 50 , 90 ]
        n = 3
        if isPossibleToMakeDivisible ( arr , n ) :
            System . out . print ( "Yes\n" )
        else :
            System . out . print ( "No\n" )


---> console_out:
 
DIDN'T MATCH!! :(
 77%|███████▋  | 1340/1746 [13:50<00:33, 12.22it/s]Traceback (most recent call last):
  File "./junk/1703784515410_1058/main.py", line 31, in <module>
    threading . stack_size ( 1 << 27 )
NameError: name 'threading' is not defined
out1,out2  20


-------------------------------------


---> lineNum: 1341
---> probID: atcoder_AGC004_D
---> inputs:
3 1
2 3 1
---> outputs:
2

import sys
N , K = 0 , 0
vec = [ ]
ans = 0
def main ( ) :
    global N , K , vec , ans
    N , K = map ( int , input ( ) . split ( ) )
    ans = 0
    vec = [ [ ] for _ in range ( N ) ]
    for i in range ( N ) :
        a = int ( input ( ) ) - 1
        if i != 0 :
            vec [ a ] . append ( i )
        else :
            if a != 0 :
                ans += 1
    dfs ( 0 , 0 )
    print ( ans )
def dfs ( v , pre ) :
    global ans
    hight = 0
    for j in range ( len ( vec [ v ] ) ) :
        hight = max ( hight , dfs ( vec [ v ] [ j ] , v ) )
    if pre != 0 and hight == K - 1 :
        hight = 0
        ans += 1
    else :
        hight += 1
    return hight
sys . setrecursionlimit ( 10 ** 6 )
threading . stack_size ( 1 << 27 )
threading . Thread ( target = main ) . start ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1342
---> probID: geeksforgeeks_269_A
---> inputs:

---> outputs:
Perfect cubes in given range: 
1 8 27 64 

def printCubes ( a , b ) :
    for i in range ( a , b + 1 ) :
        for j in range ( 1 , i + 1 ) :
            if j * j * j == i :
                print ( j * j * j , end = " " )
                break
a , b = 1 , 100
print ( "Perfect cubes in given range:" )
printCubes ( a , b )


---> console_out:
Perfect cubes in given range:
1 8 27 64  
MATCHED!! :D
 77%|███████▋  | 1342/1746 [13:50<00:30, 13.22it/s]

-------------------------------------


---> lineNum: 1343
---> probID: geeksforgeeks_2053_A
---> inputs:

---> outputs:
6 moduo 4 is 2


def getModulo ( n , d ) :
    return n & ( d - 1 )
n = 6
d = 4
print ( str ( n ) + " moduo " + str ( d ) + " is " + str ( getModulo ( n , d ) ) )


---> console_out:
6 moduo 4 is 2
 
MATCHED!! :D
 77%|███████▋  | 1342/1746 [14:10<00:30, 13.22it/s]out1,out2 timeoutencounteredpy 10


-------------------------------------


---> lineNum: 1344
---> probID: codeforces_940_A
---> inputs:
3 1
2 1 4
---> outputs:
1

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = StringTokenizer ( self . br ( ) . strip ( ) )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return self . br ( ) . strip ( )
def main ( ) :
    obj = FastReader ( )
    n , d = obj . nextInt ( ) , obj . nextInt ( )
    arr = [ 0 ] * n
    for i in range ( n ) :
        arr [ i ] = obj . nextInt ( )
    arr . sort ( )
    max_val = - sys . maxsize
    for i in range ( n ) :
        count = 0
        l = arr [ i ] + d
        for j in range ( i , n ) :
            if l < arr [ j ] :
                break
            count += 1
        max_val = max ( max_val , count )
    print ( n - max_val )
if __name__ == '__main__' :
    main ( )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 77%|███████▋  | 1344/1746 [14:30<40:44,  6.08s/it]

-------------------------------------


---> lineNum: 1345
---> probID: codeforces_725_B
---> inputs:
1f
---> outputs:
1

import math
import sys
sr = input ( )
ss = sr [ : - 1 ]
ch = sr [ - 1 ]
list = [ 'f' , 'e' , 'd' , 'a' , 'b' , 'c' ]
x = int ( ss )
m = x % 2
k = ( x - 1 ) // 4
re = x - k
total = 0
total = 16 * k
if m == 0 :
    total += 7 + list . index ( ch ) + 1
if m == 1 :
    total += list . index ( ch ) + 1
print ( total )


---> console_out:
1
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784555788_6334/main.py", line 12, in <module>
    canBePerfectCube ( N , K )
  File "./junk/1703784555788_6334/main.py", line 6, in canBePerfectCube
    if isPerfectCube ( N + K ) or isPerfectCube ( N - K ) :
  File "./junk/1703784555788_6334/main.py", line 3, in isPerfectCube
    cr = int ( math . cbrt ( x ) )
AttributeError: module 'math' has no attribute 'cbrt'
out1,out2  yesyesno


-------------------------------------


---> lineNum: 1346
---> probID: geeksforgeeks_1256_A
---> inputs:

---> outputs:
Yes
Yes
No


import math
def isPerfectCube ( x ) :
    cr = int ( math . cbrt ( x ) )
    return ( cr * cr * cr == x )
def canBePerfectCube ( N , K ) :
    if isPerfectCube ( N + K ) or isPerfectCube ( N - K ) :
        print ( "Yes" )
    else :
        print ( "No" )
N = 7
K = 1
canBePerfectCube ( N , K )
N = 5
K = 4
canBePerfectCube ( N , K )
N = 7
K = 2
canBePerfectCube ( N , K )


---> console_out:
 
DIDN'T MATCH!! :(
 77%|███████▋  | 1346/1746 [14:30<28:30,  4.28s/it]

-------------------------------------


---> lineNum: 1347
---> probID: atcoder_AGC006_A
---> inputs:
3
abc
cde
---> outputs:
5

import sys
n = int ( input ( ) )
s = input ( )
t = input ( )
result = 2 * n
for i in range ( n ) :
    foot = t [ : n - i ]
    if s . endswith ( foot ) :
        result -= len ( foot )
        break
print ( result )


---> console_out:
5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1348
---> probID: geeksforgeeks_3900_A
---> inputs:

---> outputs:
Following is Depth First Traversal (starting from vertex 2)
2 0 1 3 

import collections
class Graph :
    def __init__ ( self , v ) :
        self . V = v
        self . adj = [ collections . deque ( ) for i in range ( v ) ]
    def addEdge ( self , v , w ) :
        self . adj [ v ] . append ( w )
    def DFSUtil ( self , v , visited ) :
        visited [ v ] = True
        print ( v , end = " " )
        for n in self . adj [ v ] :
            if not visited [ n ] :
                self . DFSUtil ( n , visited )
    def DFS ( self , v ) :
        visited = [ False ] * self . V
        self . DFSUtil ( v , visited )
if __name__ == "__main__" :
    g = Graph ( 4 )
    g . addEdge ( 0 , 1 )
    g . addEdge ( 0 , 2 )
    g . addEdge ( 1 , 2 )
    g . addEdge ( 2 , 0 )
    g . addEdge ( 2 , 3 )
    g . addEdge ( 3 , 3 )
    print ( "Following is Depth First Traversal (starting from vertex 2)" )
    g . DFS ( 2 )


---> console_out:
Following is Depth First Traversal (starting from vertex 2)
2 0 1 3  
MATCHED!! :D
 77%|███████▋  | 1348/1746 [14:30<20:00,  3.02s/it]

-------------------------------------


---> lineNum: 1349
---> probID: geeksforgeeks_2332_A
---> inputs:

---> outputs:
0 1 2 2 0 3 0 1 0 0 

import math
def countDigits ( val , arr ) :
    while int ( val ) > 0 :
        digit = int ( val ) % 10
        arr [ digit ] += 1
        val = int ( val ) / 10
def countFrequency ( x , n ) :
    freq_count = [ 0 ] * 10
    for i in range ( 1 , n + 1 ) :
        val = math . pow ( x , i )
        countDigits ( val , freq_count )
    for i in range ( 10 ) :
        print ( freq_count [ i ] , end = " " )
x , n = 15 , 3
countFrequency ( x , n )


---> console_out:
0 1 2 2 0 3 0 1 0 0  
MATCHED!! :D


-------------------------------------


---> lineNum: 1350
---> probID: codeforces_108_B
---> inputs:
3
64 16 32
---> outputs:
NO

import math
n = 0
str = ""
a = [ ]
def solve ( ) :
    global str
    a . sort ( )
    cur = a [ 0 ] * 2
    for i in range ( 1 , n ) :
        if a [ i ] == a [ i - 1 ] :
            continue
        if a [ i ] < cur :
            str += "YES\n"
            return
        cur = a [ i ] * 2
    str += "NO\n"
if __name__ == "__main__" :
    lenv = False
    if lenv :
        with open ( "./junk/1703784556089_5427/input.txt" , "r" ) as f :
            n = int ( f . readline ( ) . strip ( ) )
            a = list ( map ( int , f . readline ( ) . strip ( ) . split ( ) ) )
    else :
        n = int ( input ( ) . strip ( ) )
        a = list ( map ( int , input ( ) . strip ( ) . split ( ) ) )
    solve ( )
    print ( str )


---> console_out:
NO

 
MATCHED!! :D
 77%|███████▋  | 1350/1746 [14:31<14:05,  2.13s/it]

-------------------------------------


---> lineNum: 1351
---> probID: codeforces_23_B
---> inputs:
1
3
---> outputs:
1

import sys
def maxLeft ( n ) :
    return n - 2 if n > 2 else 0
if __name__ == "__main__" :
    t = int ( input ( ) )
    for i in range ( t ) :
        n = int ( input ( ) )
        print ( maxLeft ( n ) )


---> console_out:
1
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784556223_9139/main.py", line 4, in <module>
    a = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '3 1 2 3'
out1,out2  ibecometheguy


-------------------------------------


---> lineNum: 1352
---> probID: codeforces_469_A
---> inputs:
4
3 1 2 3
2 2 4
---> outputs:
I become the guy.

import sys
n = int ( input ( ) )
hs = set ( )
a = int ( input ( ) )
for i in range ( a ) :
    hs . add ( int ( input ( ) ) )
b = int ( input ( ) )
for i in range ( b ) :
    hs . add ( int ( input ( ) ) )
if len ( hs ) == n :
    print ( "I become the guy." )
else :
    print ( "Oh, my keyboard!" )


---> console_out:
 
DIDN'T MATCH!! :(
 77%|███████▋  | 1352/1746 [14:31<09:57,  1.52s/it]

-------------------------------------


---> lineNum: 1353
---> probID: geeksforgeeks_4977_A
---> inputs:

---> outputs:
2


import numpy as np
def linearCheck ( ar , arr ) :
    m , n = ar . shape
    for i in range ( m ) :
        matched = True
        for j in range ( n ) :
            if ar [ i ] [ j ] != arr [ j ] :
                matched = False
                break
        if matched :
            return i + 1
    return - 1
mat = np . array ( [ [ 0 , 0 , 1 , 0 ] , [ 10 , 9 , 22 , 23 ] , [ 40 , 40 , 40 , 40 ] , [ 43 , 44 , 55 , 68 ] , [ 81 , 73 , 100 , 132 ] , [ 100 , 75 , 125 , 133 ] ] )
row = np . array ( [ 10 , 9 , 22 , 23 ] )
print ( linearCheck ( mat , row ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1354
---> probID: codeforces_1538_B
---> inputs:
5
4
4 5 2 5
2
0 4
5
10 8 5 1 4
1
10000
7
1 1 1 1 1 1 1
---> outputs:
2
1
-1
0
0

import sys
t = int ( input ( ) )
for _ in range ( t ) :
    n = int ( input ( ) )
    a = list ( map ( int , input ( ) . split ( ) ) )
    sum = 0
    count = 0
    for i in range ( n ) :
        sum += a [ i ]
    if sum % n == 0 :
        div = sum // n
        for i in range ( n ) :
            if a [ i ] > div :
                count += 1
        print ( count )
    else :
        print ( - 1 )


---> console_out:
2
1
-1
0
0
 
MATCHED!! :D
 78%|███████▊  | 1354/1746 [14:31<07:16,  1.11s/it]out1,out2 21000 21000


-------------------------------------


---> lineNum: 1355
---> probID: atcoder_ABC076_D
---> inputs:
1
100
30
---> outputs:
2100.000000000000000

import sys
class Main :
    def main ( self ) :
        self . solveD ( )
    def solveD ( self ) :
        sc = sys . stdin
        N = int ( sc . readline ( ) )
        t = [ 0 ] * N
        sum_t = 0
        for i in range ( N ) :
            t [ i ] = int ( sc . readline ( ) ) * 2
            sum_t += t [ i ]
        v = [ 0 ] * N
        for i in range ( N ) :
            v [ i ] = int ( sc . readline ( ) ) * 2
        tmp_v = 0
        tmp_t = 0
        max_v = [ 0 ] * ( sum_t + 1 )
        for i in range ( N ) :
            max_v [ tmp_t ] = v [ i ] if v [ i ] < tmp_v else tmp_v
            tmp_v = max_v [ tmp_t ]
            for t_ind in range ( t [ i ] ) :
                max_v [ tmp_t + 1 ] = v [ i ] if v [ i ] < tmp_v + 1 else tmp_v + 1
                tmp_t += 1
                tmp_v = max_v [ tmp_t ]
        tmp_v = 0
        for i in range ( N - 1 , - 1 , - 1 ) :
            max_v [ tmp_t ] = v [ i ] if v [ i ] < tmp_v else tmp_v
            tmp_v = max_v [ tmp_t ]
            for t_ind in range ( t [ i ] ) :
                back_v = v [ i ] if v [ i ] < tmp_v + 1 else tmp_v + 1
                tmp_t -= 1
                max_v [ tmp_t ] = max_v [ tmp_t ] if max_v [ tmp_t ] < back_v else back_v
                tmp_v = max_v [ tmp_t ]
        answer = 0
        for i in range ( sum_t ) :
            answer += ( max_v [ i ] + max_v [ i + 1 ] )
        print ( answer * 0.125 )
if __name__ == '__main__' :
    main = Main ( )
    main . main ( )


---> console_out:
2100.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1356
---> probID: geeksforgeeks_5016_A
---> inputs:

---> outputs:
46


import math
def nthTerm ( n ) :
    return 2 * int ( math . pow ( n , 2 ) ) + 4 * n - 2
N = 4
print ( nthTerm ( N ) )


---> console_out:
46
 
MATCHED!! :D
 78%|███████▊  | 1356/1746 [14:31<05:11,  1.25it/s]

-------------------------------------


---> lineNum: 1357
---> probID: geeksforgeeks_5023_A
---> inputs:

---> outputs:
91


import math
def nthTerm ( n ) :
    return 7 * int ( math . pow ( n , 2 ) ) - 7 * n + 7
N = 4
print ( nthTerm ( N ) )


---> console_out:
91
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1358
---> probID: geeksforgeeks_3741_A
---> inputs:

---> outputs:
60


import math
def nthTerm ( n ) :
    return 5 * int ( math . pow ( n , 2 ) ) - 5 * n
N = 4
print ( nthTerm ( N ) )


---> console_out:
60
 
MATCHED!! :D
 78%|███████▊  | 1358/1746 [14:31<03:44,  1.73it/s]out1,out2 260 260


-------------------------------------


---> lineNum: 1359
---> probID: geeksforgeeks_5019_A
---> inputs:

---> outputs:
26.0


import math
def nthTerm ( n ) :
    return int ( math . pow ( n , 2 ) + 2 * n + 2 )
N = 4
print ( nthTerm ( N ) )


---> console_out:
26
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1360
---> probID: geeksforgeeks_5022_A
---> inputs:

---> outputs:
63


import math
def nthTerm ( n ) :
    return 2 * int ( math . pow ( n , 3 ) ) + int ( math . pow ( n , 2 ) )
N = 3
print ( nthTerm ( N ) )


---> console_out:
63
 
MATCHED!! :D
 78%|███████▊  | 1360/1746 [14:31<02:43,  2.36it/s]

-------------------------------------


---> lineNum: 1361
---> probID: geeksforgeeks_5020_A
---> inputs:

---> outputs:
27


import math
def nthTerm ( n ) :
    return 2 * int ( math . pow ( n , 2 ) ) - n - 1
N = 4
print ( nthTerm ( N ) )


---> console_out:
27
 
MATCHED!! :D
out1,out2 100 100


-------------------------------------


---> lineNum: 1362
---> probID: geeksforgeeks_5021_A
---> inputs:

---> outputs:
10.0


import math
def nthTerm ( n ) :
    return int ( math . pow ( n , 2 ) - 2 * n + 2 )
N = 4
print ( nthTerm ( N ) )


---> console_out:
10
 
MATCHED!! :D
 78%|███████▊  | 1362/1746 [14:31<02:00,  3.18it/s]

-------------------------------------


---> lineNum: 1363
---> probID: geeksforgeeks_3742_A
---> inputs:

---> outputs:
50


import math
def nthTerm ( n ) :
    return 3 * int ( math . pow ( n , 2 ) ) + n - 2
N = 4
print ( nthTerm ( N ) )


---> console_out:
50
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784557210_2703/main.py", line 2, in <module>
    n1 = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '10 5'
out1,out2  0015015000


-------------------------------------


---> lineNum: 1364
---> probID: codeforces_336_A
---> inputs:
10 5
---> outputs:
0 15 15 0

import math
n1 = int ( input ( ) )
n2 = int ( input ( ) )
x = abs ( n1 ) + abs ( n2 )
if n1 >= 0 and n2 >= 0 :
    print ( "0 " + str ( x ) + " " + str ( x ) + " 0" )
elif n1 < 0 and n2 >= 0 :
    print ( "-" + str ( x ) + " 0 0 " + str ( x ) )
elif n1 < 0 and n2 < 0 :
    print ( "-" + str ( x ) + " 0 0 -" + str ( x ) )
else :
    print ( "0 -" + str ( x ) + " " + str ( x ) + " 0" )


---> console_out:
 
DIDN'T MATCH!! :(
 78%|███████▊  | 1364/1746 [14:32<01:31,  4.18it/s]

-------------------------------------


---> lineNum: 1365
---> probID: atcoder_ABC097_C
---> inputs:
aba
4
---> outputs:
b

import collections
s = input ( )
K = int ( input ( ) )
subs = set ( )
for i in range ( len ( s ) ) :
    index = i
    for j in range ( K ) :
        if index + 1 + j <= len ( s ) :
            subs . add ( s [ index : index + 1 + j ] )
subs2 = list ( subs )
subs2 . sort ( )
print ( subs2 [ K - 1 ] )


---> console_out:
b
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784557355_7254/main.py", line 1, in <module>
    import java . util . ArrayList
ModuleNotFoundError: No module named 'java'
out1,out2  10


-------------------------------------


---> lineNum: 1366
---> probID: leetcode_509_A
---> inputs:

---> outputs:
1

import java . util . ArrayList
class Solution :
    def __init__ ( self ) :
        self . memo = [ 0 , 1 ]
    def fib ( self , N : int ) -> int :
        if N < len ( self . memo ) :
            return self . memo [ N ]
        for i in range ( len ( self . memo ) , N + 1 ) :
            self . memo . append ( self . memo [ i - 1 ] + self . memo [ i - 2 ] )
        return self . memo [ N ]
if __name__ == '__main__' :
    sObj = Solution ( )
    N = 2
    out = sObj . fib ( N )
    print ( out )


---> console_out:
 
DIDN'T MATCH!! :(
 78%|███████▊  | 1366/1746 [14:32<01:11,  5.29it/s]

-------------------------------------


---> lineNum: 1367
---> probID: codeforces_1617_A
---> inputs:
7
abacaba
abc
cccba
acb
dbsic
bac
abracadabra
abc
dddddddddddd
cba
bbc
abc
ac
abc
---> outputs:
aaaacbb
abccc
bcdis
aaaaacbbdrr
dddddddddddd
bbc
ac

import sys
t = int ( input ( ) )
for _ in range ( t ) :
    alph = [ 0 ] * 26
    s = input ( )
    abc = input ( )
    for c in s :
        alph [ ord ( c ) - ord ( 'a' ) ] += 1
    if abc == "abc" and alph [ 0 ] > 0 and alph [ 1 ] > 0 and alph [ 2 ] > 0 :
        res = [ ]
        for i in range ( 26 ) :
            if i == 1 :
                while alph [ 2 ] > 0 :
                    res . append ( chr ( 2 + ord ( 'a' ) ) )
                    alph [ 2 ] -= 1
                while alph [ 1 ] > 0 :
                    res . append ( chr ( 1 + ord ( 'a' ) ) )
                    alph [ 1 ] -= 1
                i += 1
            else :
                while alph [ i ] > 0 :
                    res . append ( chr ( i + ord ( 'a' ) ) )
                    alph [ i ] -= 1
        print ( "" . join ( res ) )
    else :
        res = [ ]
        for i in range ( 26 ) :
            while alph [ i ] > 0 :
                res . append ( chr ( i + ord ( 'a' ) ) )
                alph [ i ] -= 1
        print ( "" . join ( res ) )
    sys . stdout . flush ( )


---> console_out:
aaaacbb
abccc
bcdis
aaaaacbbdrr
dddddddddddd
bbc
ac
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1368
---> probID: geeksforgeeks_4351_A
---> inputs:

---> outputs:
0.642701


import math
class GFG :
    PI = 3.142
    @ staticmethod
    def cosXSertiesSum ( x , n ) :
        x = x * ( GFG . PI / 180.0 )
        res = 1
        sign = 1
        fact = 1
        pow = 1
        for i in range ( 1 , 5 ) :
            sign = sign * - 1
            fact = fact * ( 2 * i - 1 ) * ( 2 * i )
            pow = pow * x * x
            res = res + sign * pow / fact
        return res
if __name__ == '__main__' :
    x = 50
    n = 5
    print ( round ( GFG . cosXSertiesSum ( x , n ) * 1000000 ) / 1000000.00 )


---> console_out:
0.642701
 
MATCHED!! :D
 78%|███████▊  | 1368/1746 [14:32<00:57,  6.62it/s]

-------------------------------------


---> lineNum: 1369
---> probID: geeksforgeeks_4019_A
---> inputs:

---> outputs:
Yes: 3 , 4
No


def findNumber ( N , S ) :
    i = ( ( float ( N ) * float ( N + 1 ) ) / 4 ) - ( float ( S + 1 ) / 2 )
    return i
def check ( N , S ) :
    i = findNumber ( N , S )
    integerI = int ( i )
    if i - integerI == 0 :
        print ( "Yes: " + str ( integerI ) + ", " + str ( integerI + 1 ) )
    else :
        print ( "No" )
if __name__ == '__main__' :
    N = 4
    S = 3
    check ( N , S )
    N = 5
    S = 3
    check ( N , S )


---> console_out:
Yes: 3, 4
No
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1370
---> probID: geeksforgeeks_4592_A
---> inputs:

---> outputs:
No


import math
def multipleOfThree ( K , dig0 , dig1 ) :
    sum = 0
    temp = ( dig0 + dig1 ) % 10
    sum = dig0 + dig1
    if K == 2 :
        if sum % 3 == 0 :
            return True
        else :
            return False
    sum += temp
    numberofGroups = ( K - 3 ) // 4
    remNumberofDigits = ( K - 3 ) % 4
    sum += ( numberofGroups * 20 )
    for i in range ( remNumberofDigits ) :
        temp = ( 2 * temp ) % 10
        sum += temp
    if sum % 3 == 0 :
        return True
    else :
        return False
K = 5
dig0 = 3
dig1 = 4
if multipleOfThree ( K , dig0 , dig1 ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
No
 
MATCHED!! :D
 78%|███████▊  | 1370/1746 [14:32<00:46,  8.04it/s]

-------------------------------------


---> lineNum: 1371
---> probID: codeforces_892_A
---> inputs:
2
3 5
3 6
---> outputs:
YES

import math
n = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
b = list ( map ( int , input ( ) . split ( ) ) )
sum = 0
for i in range ( n ) :
    sum += a [ i ]
b . sort ( )
ans = b [ n - 1 ] + b [ n - 2 ]
if sum <= ans :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1372
---> probID: geeksforgeeks_3106_A
---> inputs:

---> outputs:
2


def countOcc ( s ) :
    cnt = 0
    for i in range ( len ( s ) - 3 ) :
        c , l , a , p = 0 , 0 , 0 , 0
        for j in range ( i , i + 4 ) :
            if s [ j ] == 'c' :
                c += 1
            elif s [ j ] == 'l' :
                l += 1
            elif s [ j ] == 'a' :
                a += 1
            elif s [ j ] == 'p' :
                p += 1
        if c == 1 and l == 1 and a == 1 and p == 1 :
            cnt += 1
    return cnt
s = "clapc"
print ( countOcc ( s . lower ( ) ) )


---> console_out:
2
 
MATCHED!! :D
 79%|███████▊  | 1372/1746 [14:32<00:39,  9.48it/s]

-------------------------------------


---> lineNum: 1373
---> probID: geeksforgeeks_1422_A
---> inputs:

---> outputs:
13


import math
def countSteps ( x , y ) :
    if x % y == 0 :
        return x // y
    return x // y + countSteps ( y , x % y )
x = 100
y = 19
print ( countSteps ( x , y ) )


---> console_out:
13
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1374
---> probID: geeksforgeeks_2347_A
---> inputs:

---> outputs:
Yes


import math
def isPerfectSquare ( x ) :
    sr = math . sqrt ( x )
    return ( sr - math . floor ( sr ) ) == 0
def isSunnyNum ( n ) :
    if isPerfectSquare ( n + 1 ) :
        return True
    return False
if __name__ == '__main__' :
    n = 3
    if isSunnyNum ( n ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
 79%|███████▊  | 1374/1746 [14:32<00:34, 10.85it/s]out1,out2 31 31


-------------------------------------


---> lineNum: 1375
---> probID: geeksforgeeks_806_A
---> inputs:

---> outputs:
3.14159265


import math
class GFG :
    PI = 3.14159265
    @ staticmethod
    def area_inscribed ( P , B , H ) :
        return ( ( P + B - H ) * ( P + B - H ) * ( math . pi / 4 ) )
if __name__ == '__main__' :
    P , B , H = 3 , 4 , 5
    print ( GFG . area_inscribed ( P , B , H ) )


---> console_out:
3.141592653589793
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784557972_9081/main.py", line 3, in <module>
    N = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '\t'
out1,out2 abc50 abc51440abaabc51440aba


-------------------------------------


---> lineNum: 1376
---> probID: aizu_p00424_A
---> inputs:
3	
A a	
0 5	
5 4	
10	
A	
B	
C	
0	
1	
4	
5	
a	
b	
A
3	
A a	
0 5	
5 4	
10	
A	
B	
C	
0	
1	
4	
5	
a	
b	
A
0
---> outputs:
aBC5144aba
aBC5144aba

import sys
while True :
    N = int ( input ( ) )
    if N == 0 :
        break
    replaces = [ 0 ] * 256
    for i in range ( N ) :
        char1 , char2 = input ( ) . split ( )
        replaces [ ord ( char1 ) ] = char2
    M = int ( input ( ) )
    for i in range ( M ) :
        c = sys . stdin . read ( 1 )
        sys . stdout . write ( replaces [ ord ( c ) ] if replaces [ ord ( c ) ] != 0 else c )
    sys . stdout . write ( '\n' )


---> console_out:
a	
B	
C	
5
 
DIDN'T MATCH!! :(
 79%|███████▉  | 1376/1746 [14:32<00:30, 12.05it/s]

-------------------------------------


---> lineNum: 1377
---> probID: geeksforgeeks_5274_A
---> inputs:

---> outputs:
1


import bisect
def getCount ( v , n ) :
    v . sort ( )
    cnt = 0
    for i in range ( n ) :
        tmp = n - 1 - bisect . bisect_right ( v , v [ i ] - 1 )
        if tmp == v [ i ] :
            cnt += 1
    return cnt
n = 4
v = [ 1 , 2 , 3 , 4 ]
print ( getCount ( v , n ) )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1378
---> probID: geeksforgeeks_3987_A
---> inputs:

---> outputs:
15


def trailing_zeros ( N ) :
    count_of_two = 0
    count_of_five = 0
    for i in range ( 1 , N + 1 ) :
        val = i
        while val % 2 == 0 and val > 0 :
            val //= 2
            count_of_two += i
        while val % 5 == 0 and val > 0 :
            val //= 5
            count_of_five += i
    ans = min ( count_of_two , count_of_five )
    return ans
N = 12
print ( trailing_zeros ( N ) )


---> console_out:
15
 
MATCHED!! :D
 79%|███████▉  | 1378/1746 [14:33<00:28, 13.11it/s]

-------------------------------------


---> lineNum: 1379
---> probID: geeksforgeeks_3424_A
---> inputs:

---> outputs:
No


def removeZero ( n ) :
    res = 0
    d = 1
    while n > 0 :
        if n % 10 != 0 :
            res += ( n % 10 ) * d
            d *= 10
        n //= 10
    return res
def isEqual ( a , b ) :
    if removeZero ( a ) + removeZero ( b ) == removeZero ( a + b ) :
        return True
    return False
if __name__ == '__main__' :
    a , b = 105 , 106
    if isEqual ( a , b ) == True :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
No
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784558215_3833/main.py", line 47, in <module>
    Main ( ) . main ( )
  File "./junk/1703784558215_3833/main.py", line 15, in main
    self . mainrun ( )
  File "./junk/1703784558215_3833/main.py", line 23, in mainrun
    self . node [ int ( self . scan . readline ( ) ) - 1 ] . child . append ( int ( self . scan . readline ( ) ) - 1 )
ValueError: invalid literal for int() with base 10: '1 2\n'
out1,out2  110


-------------------------------------


---> lineNum: 1380
---> probID: aizu_p00304_A
---> inputs:
12
A
E
E
E
R?
E?
E?
E
E
E
E?
E
1 2
1 3
1 4
2 5
4 6
4 7
5 8
5 9
7 10
7 11
11 12
---> outputs:
11

import sys
class Node :
    def __init__ ( self , string ) :
        sp = string . split ( )
        self . type = sp [ 0 ]
        self . isOption = len ( sp ) == 2
        self . child = [ ]
class Main :
    def __init__ ( self ) :
        self . scan = None
        self . N = None
        self . MOD = 1000000007
        self . node = None
    def main ( self ) :
        self . mainrun ( )
    def mainrun ( self ) :
        self . scan = sys . stdin
        self . N = int ( self . scan . readline ( ) )
        self . node = [ None ] * self . N
        for i in range ( self . N ) :
            self . node [ i ] = Node ( self . scan . readline ( ) )
        for i in range ( self . N - 1 ) :
            self . node [ int ( self . scan . readline ( ) ) - 1 ] . child . append ( int ( self . scan . readline ( ) ) - 1 )
        print ( self . looprun ( self . node [ 0 ] ) % self . MOD )
        self . scan . close ( )
    def looprun ( self , n ) :
        ans = 1
        if n . type == "E" :
            for no in n . child :
                ans *= self . looprun ( self . node [ no ] )
                ans %= self . MOD
            if n . isOption :
                ans += 1
        elif n . type == "R" :
            for no in n . child :
                ans *= self . looprun ( self . node [ no ] ) + 1
                ans %= self . MOD
            if not n . isOption :
                ans -= 1
        elif n . type == "A" :
            for no in n . child :
                ans += self . looprun ( self . node [ no ] )
            if not n . isOption :
                ans -= 1
        return ans
if __name__ == "__main__" :
    Main ( ) . main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 79%|███████▉  | 1380/1746 [14:33<00:26, 13.82it/s]  File "./junk/1703784558282_2499/main.py", line 7
    scn = Scanner ( System . in )
                             ^
SyntaxError: invalid syntax
out1,out2  20150


-------------------------------------


---> lineNum: 1381
---> probID: codeforces_769_A
---> inputs:
3
2014 2016 2015
---> outputs:
2015

import java . util . Arrays
import java . util . Scanner
def asd ( arr ) :
    arr . sort ( )
    return arr [ len ( arr ) // 2 ]
if __name__ == '__main__' :
    scn = Scanner ( System . in )
    size = scn . nextInt ( )
    arr = [ 0 ] * size
    for i in range ( size ) :
        arr [ i ] = scn . nextInt ( )
    print ( asd ( arr ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1382
---> probID: codeforces_581_A
---> inputs:
3 1
---> outputs:
1 1

import sys
a , b = map ( int , sys . stdin . readline ( ) . split ( ) )
count = 0
while True :
    if a > 0 and b > 0 :
        count += 1
        a -= 1
        b -= 1
    else :
        break
ans = a // 2 + b // 2
print ( count , ans )


---> console_out:
1 1
 
MATCHED!! :D
 79%|███████▉  | 1382/1746 [14:33<00:25, 14.51it/s]Traceback (most recent call last):
  File "./junk/1703784558404_6627/main.py", line 38, in <module>
    Main . main ( )
  File "./junk/1703784558404_6627/main.py", line 31, in main
    n , m = map ( float , ( fr . nextDouble ( ) , fr . nextDouble ( ) ) )
  File "./junk/1703784558404_6627/main.py", line 18, in nextDouble
    return float ( self . next ( ) )
  File "./junk/1703784558404_6627/main.py", line 8, in next
    while self . st is None or not self . st . hasMoreTokens ( ) :
AttributeError: 'list' object has no attribute 'hasMoreTokens'
out1,out2  404040


-------------------------------------


---> lineNum: 1383
---> probID: codeforces_306_A
---> inputs:
12 3
---> outputs:
4 4 4

import sys
import math
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreTokens ( ) :
            self . st = input ( ) . split ( )
        return self . st . nextToken ( )
    def nextLine ( self ) :
        return input ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def intArray ( self , size ) :
        arr = [ ]
        for i in range ( size ) :
            arr . append ( self . nextInt ( ) )
        return arr
    def charArray ( self ) :
        return list ( self . nextLine ( ) )
class Main :
    def main ( ) :
        osr = sys . stdout
        o = osr . write
        fr = FastReader ( )
        n , m = map ( float , ( fr . nextDouble ( ) , fr . nextDouble ( ) ) )
        for i in range ( int ( m - ( n % m ) ) ) :
            o ( str ( int ( n / m ) ) + " " )
        for i in range ( int ( m - ( n % m ) ) , int ( m ) ) :
            o ( str ( math . ceil ( n / m ) ) + " " )
        osr . flush ( )
if __name__ == "__main__" :
    Main . main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1384
---> probID: geeksforgeeks_4137_A
---> inputs:

---> outputs:
17


def totalPairs ( s1 , s2 ) :
    count = 0
    arr1 = [ 0 ] * 7
    arr2 = [ 0 ] * 7
    for i in range ( len ( s1 ) ) :
        set_bits = bin ( ord ( s1 [ i ] ) ) . count ( '1' )
        arr1 [ set_bits ] += 1
    for i in range ( len ( s2 ) ) :
        set_bits = bin ( ord ( s2 [ i ] ) ) . count ( '1' )
        arr2 [ set_bits ] += 1
    for i in range ( 1 , 7 ) :
        count += ( arr1 [ i ] * arr2 [ i ] )
    return count
s1 = "geeks"
s2 = "forgeeks"
print ( totalPairs ( s1 , s2 ) )


---> console_out:
17
 
MATCHED!! :D
 79%|███████▉  | 1384/1746 [14:33<00:24, 14.86it/s]

-------------------------------------


---> lineNum: 1385
---> probID: geeksforgeeks_532_A
---> inputs:

---> outputs:
3


def countSubSeq ( i , sum , cnt , a , n ) :
    if i == n :
        if sum == 0 and cnt > 0 :
            return 1
        else :
            return 0
    ans = 0
    ans += countSubSeq ( i + 1 , sum , cnt , a , n )
    ans += countSubSeq ( i + 1 , sum + a [ i ] , cnt + 1 , a , n )
    return ans
if __name__ == '__main__' :
    a = [ - 1 , 2 , - 2 , 1 ]
    n = len ( a )
    print ( countSubSeq ( 0 , 0 , 0 , a , n ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1386
---> probID: codeforces_746_B
---> inputs:
5
logva
---> outputs:
volga

import sys
n = int ( input ( ) )
s = list ( input ( ) )
newS = [ '' ] * n
mid = ( n - 1 ) // 2
counter = 0
for i in range ( n ) :
    temp = i + 1
    if n % 2 == 0 :
        newS [ mid - counter ] = s [ i ]
    else :
        newS [ mid + counter ] = s [ i ]
    if counter >= 0 :
        counter -= temp
    else :
        counter += temp
print ( '' . join ( newS ) )


---> console_out:
volga
 
MATCHED!! :D
 79%|███████▉  | 1386/1746 [14:33<00:24, 14.73it/s]

-------------------------------------


---> lineNum: 1387
---> probID: aizu_p00379_A
---> inputs:
16 2 1000
---> outputs:
2

import math
def getCount ( x ) :
    count = 0
    while x > 0 :
        count += x % 10
        x //= 10
    return count
a , n , m = map ( int , input ( ) . split ( ) )
count = 0
for i in range ( 1 , m ) :
    if math . pow ( i + a , n ) > m :
        break
    x = int ( math . pow ( i + a , n ) )
    y = getCount ( x )
    if y == i :
        count += 1
print ( count )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1388
---> probID: geeksforgeeks_1529_A
---> inputs:

---> outputs:
Index of the element is :  8


class Main :
    @ staticmethod
    def pivotedBinarySearch ( arr , n , key ) :
        pivot = Main . findPivot ( arr , 0 , n - 1 )
        if pivot == - 1 :
            return Main . binarySearch ( arr , 0 , n - 1 , key )
        if arr [ pivot ] == key :
            return pivot
        if arr [ 0 ] <= key :
            return Main . binarySearch ( arr , 0 , pivot - 1 , key )
        return Main . binarySearch ( arr , pivot + 1 , n - 1 , key )
    @ staticmethod
    def findPivot ( arr , low , high ) :
        if high < low :
            return - 1
        if high == low :
            return low
        mid = ( low + high ) // 2
        if mid < high and arr [ mid ] > arr [ mid + 1 ] :
            return mid
        if mid > low and arr [ mid ] < arr [ mid - 1 ] :
            return mid - 1
        if arr [ low ] >= arr [ mid ] :
            return Main . findPivot ( arr , low , mid - 1 )
        return Main . findPivot ( arr , mid + 1 , high )
    @ staticmethod
    def binarySearch ( arr , low , high , key ) :
        if high < low :
            return - 1
        mid = ( low + high ) // 2
        if key == arr [ mid ] :
            return mid
        if key > arr [ mid ] :
            return Main . binarySearch ( arr , mid + 1 , high , key )
        return Main . binarySearch ( arr , low , mid - 1 , key )
    @ staticmethod
    def main ( args ) :
        arr1 = [ 5 , 6 , 7 , 8 , 9 , 10 , 1 , 2 , 3 ]
        n = len ( arr1 )
        key = 3
        print ( "Index of the element is : " + str ( Main . pivotedBinarySearch ( arr1 , n , key ) ) )
Main . main ( None )


---> console_out:
Index of the element is : 8
 
MATCHED!! :D
 79%|███████▉  | 1388/1746 [14:33<00:23, 15.08it/s]

-------------------------------------


---> lineNum: 1389
---> probID: codeforces_568_B
---> inputs:
1
---> outputs:
1

import sys
n = int ( input ( ) )
mod = 1000000007
res = 0
c = [ [ 0 for j in range ( 4050 ) ] for i in range ( 4050 ) ]
dp = [ 0 for i in range ( 4050 ) ]
for i in range ( 1 , n + 1 ) :
    c [ i ] [ 0 ] = 1
    for j in range ( 1 , i ) :
        c [ i ] [ j ] = ( c [ i - 1 ] [ j - 1 ] + c [ i - 1 ] [ j ] ) % mod
    c [ i ] [ i ] = 1
dp [ 0 ] = 1
dp [ 1 ] = 1
for i in range ( 2 , n ) :
    for j in range ( i ) :
        dp [ i ] = ( dp [ i ] + dp [ j ] * c [ i - 1 ] [ j ] ) % mod
for i in range ( n ) :
    g = dp [ i ] * c [ n ] [ i ] % mod
    res = ( res + g ) % mod
print ( res )


---> console_out:
1
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784560052_7351/main.py", line 28, in <module>
    main ( )
  File "./junk/1703784560052_7351/main.py", line 8, in main
    P . append ( Point ( n , int ( input ( ) ) ) )
ValueError: invalid literal for int() with base 10: '3 2 1 6 5 4'
out1,out2  4020103010202040601050


-------------------------------------


---> lineNum: 1390
---> probID: codeforces_843_A
---> inputs:
6
3 2 1 6 5 4
---> outputs:
4
2 1 3
1 2
2 4 6
1 5

from typing import List
from collections import namedtuple
Point = namedtuple ( 'Point' , [ 'x' , 'y' ] )
def main ( ) -> None :
    N = int ( input ( ) )
    P : List [ Point ] = [ ]
    for n in range ( N ) :
        P . append ( Point ( n , int ( input ( ) ) ) )
    P . sort ( key = lambda p : p . y )
    output = [ ]
    lineCount = 0
    used = [ False ] * N
    for n in range ( N ) :
        if not used [ n ] :
            lineCount += 1
            count = 0
            pos = n
            line = [ ]
            while not used [ pos ] :
                count += 1
                used [ pos ] = True
                line . append ( str ( pos + 1 ) )
                pos = P [ pos ] . x
            output . append ( str ( count ) + ' ' + ' ' . join ( line ) )
    print ( lineCount )
    print ( '\n' . join ( output ) )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 80%|███████▉  | 1390/1746 [14:34<01:28,  4.03it/s]  File "./junk/1703784560138_3535/main.py", line 4
    stdin = Scanner ( System . in )
                               ^
SyntaxError: invalid syntax
out1,out2  


-------------------------------------


---> lineNum: 1391
---> probID: aizu_p00141_A
---> inputs:
2
5
6
---> outputs:
#####
#   #
# # #
# # #
# ###

######
#    #
# ## #
# #  #
# #  #
# ####

import java . util . Arrays
import java . util . Scanner
def main ( ) :
    stdin = Scanner ( System . in )
    d = stdin . nextInt ( )
    dx = [ 0 , 1 , 0 , - 1 ]
    dy = [ - 1 , 0 , 1 , 0 ]
    UP = 0
    RIGHT = 1
    DOWN = 2
    LEFT = 3
    for t in range ( d ) :
        n = stdin . nextInt ( )
        map = [ [ ' ' for i in range ( n ) ] for j in range ( n ) ]
        x = 0
        y = n
        dir = UP
        move = getMoveDistance ( n )
        for i in range ( n ) :
            for j in range ( move [ i ] ) :
                x += dx [ dir ]
                y += dy [ dir ]
                map [ y ] [ x ] = '#'
            dir = ( dir + 1 ) % 4
        for array in map :
            print ( '' . join ( array ) )
        if t < d - 1 :
            print ( )
def getMoveDistance ( n ) :
    if n == 1 :
        return [ 1 ]
    else :
        ans = [ 0 ] * n
        ans [ 0 ] = n
        rest = n - 1
        index = 1
        while index < n :
            ans [ index ] = rest
            index += 1
            if index >= n :
                break
            ans [ index ] = rest
            index += 1
            rest -= 2
        return ans
if __name__ == '__main__' :
    main ( )


---> console_out:
 
MATCHED!! :D
out1,out2  12170


-------------------------------------


---> lineNum: 1392
---> probID: projecteuler_p090_A
---> inputs:

---> outputs:
1217

class p090 :
    def main ( self ) :
        return self . run ( )
    def run ( self ) :
        count = 0
        for i in range ( 1 << 10 ) :
            for j in range ( i , 1 << 10 ) :
                if bin ( i ) . count ( '1' ) == 6 and bin ( j ) . count ( '1' ) == 6 and self . isArrangementValid ( i , j ) :
                    count += 1
        return str ( count )
    SQUARES = [ [ 0 , 1 ] , [ 0 , 4 ] , [ 0 , 9 ] , [ 1 , 6 ] , [ 2 , 5 ] , [ 3 , 6 ] , [ 4 , 9 ] , [ 6 , 4 ] , [ 8 , 1 ] ]
    def isArrangementValid ( self , a , b ) :
        if self . testBit ( a , 6 ) or self . testBit ( a , 9 ) :
            a |= ( 1 << 6 ) | ( 1 << 9 )
        if self . testBit ( b , 6 ) or self . testBit ( b , 9 ) :
            b |= ( 1 << 6 ) | ( 1 << 9 )
        for sqr in self . SQUARES :
            if not ( ( self . testBit ( a , sqr [ 0 ] ) and self . testBit ( b , sqr [ 1 ] ) ) or ( self . testBit ( a , sqr [ 1 ] ) and self . testBit ( b , sqr [ 0 ] ) ) ) :
                return False
        return True
    def testBit ( self , x , i ) :
        return ( x >> i ) & 1 != 0


---> console_out:
 
DIDN'T MATCH!! :(
 80%|███████▉  | 1392/1746 [14:36<02:23,  2.47it/s]

-------------------------------------


---> lineNum: 1393
---> probID: aizu_p02237_A
---> inputs:
4
1 2 2 4
2 1 4
3 0
4 1 3
---> outputs:
0 1 0 1
0 0 0 1
0 0 0 0
0 0 1 0

from collections import deque
class Graph :
    def __init__ ( self ) :
        self . totalVertex = 0
        self . adjList = [ ]
    def loadAdjList ( self ) :
        self . totalVertex = int ( input ( ) )
        self . adjList = [ [ ] for _ in range ( self . totalVertex ) ]
        for i in range ( self . totalVertex ) :
            idx1 , degree , * vertices = map ( int , input ( ) . split ( ) )
            for j in range ( degree ) :
                idx2 = vertices [ j ] - 1
                self . adjList [ idx1 - 1 ] . append ( idx2 )
    def printAdjMatrix ( self ) :
        adjMatrix = [ [ 0 ] * self . totalVertex for _ in range ( self . totalVertex ) ]
        for i in range ( self . totalVertex ) :
            vertexes = self . adjList [ i ]
            for j in range ( self . totalVertex ) :
                if j in vertexes :
                    adjMatrix [ i ] [ j ] = 1
                    print ( "1" , end = " " )
                else :
                    adjMatrix [ i ] [ j ] = 0
                    print ( "0" , end = " " )
            print ( )
if __name__ == "__main__" :
    g = Graph ( )
    g . loadAdjList ( )
    g . printAdjMatrix ( )


---> console_out:
0 1 0 1 
0 0 0 1 
0 0 0 0 
0 0 1 0 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1394
---> probID: codeforces_549_A
---> inputs:
4 4
xxxx
xfax
xcex
xxxx
---> outputs:
1

import numpy as np
n , m = map ( int , input ( ) . split ( ) )
pic = np . empty ( ( n , m ) , dtype = str )
for i in range ( n ) :
    temp = input ( )
    for j in range ( m ) :
        pic [ i ] [ j ] = temp [ j ]
inc = 0
inc1 = 0
comeIn = [ False ] * 4
if n > 1 or m > 1 :
    for x in range ( n - 1 ) :
        for y in range ( m - 1 ) :
            for i in range ( x , x + 2 ) :
                for j in range ( y , y + 2 ) :
                    if pic [ i ] [ j ] == 'f' and not comeIn [ 0 ] :
                        inc += 1
                        comeIn [ 0 ] = True
                    elif pic [ i ] [ j ] == 'a' and not comeIn [ 1 ] :
                        inc += 1
                        comeIn [ 1 ] = True
                    elif pic [ i ] [ j ] == 'c' and not comeIn [ 2 ] :
                        inc += 1
                        comeIn [ 2 ] = True
                    elif pic [ i ] [ j ] == 'e' and not comeIn [ 3 ] :
                        inc += 1
                        comeIn [ 3 ] = True
            if inc == 4 :
                inc1 += 1
            inc = 0
            comeIn = [ False ] * 4
    print ( inc1 )
else :
    print ( "0" )


---> console_out:
1
 
MATCHED!! :D
 80%|███████▉  | 1394/1746 [14:36<01:56,  3.01it/s]  File "./junk/1703784562006_8522/main.py", line 2
    in = sys . stdin . readline ( ) . strip ( )
    ^
SyntaxError: invalid syntax
out1,out2  yes


-------------------------------------


---> lineNum: 1395
---> probID: codeforces_343_B
---> inputs:
-++-
---> outputs:
Yes

import sys
in = sys . stdin . readline ( ) . strip ( )
stk = [ ]
for c in in :
    if not stk :
        stk . append ( c )
        continue
    top = stk [ - 1 ]
    if top == c :
        stk . pop ( )
    else :
        stk . append ( c )
if not stk :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1396
---> probID: aizu_p02378_A
---> inputs:
3 4 6
0 0
0 2
0 3
1 1
2 1
2 3
---> outputs:
3

import sys
X , Y , E = map ( int , input ( ) . split ( ) )
x = [ 0 ] * E
y = [ 0 ] * E
g = [ [ ] for _ in range ( X + Y ) ]
vis = [ False ] * ( X + Y )
matchTo = [ - 1 ] * ( X + Y )
for i in range ( E ) :
    x [ i ] , y [ i ] = map ( int , input ( ) . split ( ) )
    y [ i ] += X
    g [ x [ i ] ] . append ( y [ i ] )
    g [ y [ i ] ] . append ( x [ i ] )
def dfs ( v ) :
    if v < 0 :
        return True
    for u in g [ v ] :
        if vis [ u ] :
            continue
        vis [ u ] = True
        if dfs ( matchTo [ u ] ) :
            matchTo [ u ] = v
            matchTo [ v ] = u
            return True
    return False
match = 0
for i in range ( X ) :
    vis = [ False ] * ( X + Y )
    if dfs ( i ) :
        match += 1
print ( match )


---> console_out:
3
 
MATCHED!! :D
 80%|███████▉  | 1396/1746 [14:36<01:27,  3.99it/s]

-------------------------------------


---> lineNum: 1397
---> probID: geeksforgeeks_35_A
---> inputs:

---> outputs:
1


import numpy as np
def countMountains ( a , n ) :
    A = np . zeros ( ( n + 2 , n + 2 ) )
    count = 0
    for i in range ( n + 2 ) :
        for j in range ( n + 2 ) :
            if i == 0 or j == 0 or i == n + 1 or j == n + 1 :
                A [ i ] [ j ] = - np . inf
            else :
                A [ i ] [ j ] = a [ i - 1 ] [ j - 1 ]
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , n + 1 ) :
            if ( A [ i ] [ j ] > A [ i - 1 ] [ j ] and A [ i ] [ j ] > A [ i + 1 ] [ j ] and A [ i ] [ j ] > A [ i ] [ j - 1 ] and A [ i ] [ j ] > A [ i ] [ j + 1 ] and A [ i ] [ j ] > A [ i - 1 ] [ j - 1 ] and A [ i ] [ j ] > A [ i + 1 ] [ j + 1 ] and A [ i ] [ j ] > A [ i - 1 ] [ j + 1 ] and A [ i ] [ j ] > A [ i + 1 ] [ j - 1 ] ) :
                count += 1
    return count
a = [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ]
n = 3
print ( countMountains ( a , n ) )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1398
---> probID: geeksforgeeks_100_A
---> inputs:

---> outputs:
2


N = 100005
d = [ 0 ] * N
pre = [ 0 ] * N
def Positive_Divisors ( ) :
    global d , pre
    for i in range ( 1 , N ) :
        for j in range ( 1 , int ( i ** 0.5 ) + 1 ) :
            if i % j == 0 :
                if j * j == i :
                    d [ i ] += 1
                else :
                    d [ i ] += 2
    ans = 0
    for i in range ( 2 , N ) :
        if d [ i ] == d [ i - 1 ] :
            ans += 1
        pre [ i ] = ans
Positive_Divisors ( )
n = 15
print ( pre [ n ] )


---> console_out:
2
 
MATCHED!! :D
 80%|████████  | 1398/1746 [14:39<02:51,  2.03it/s]

-------------------------------------


---> lineNum: 1399
---> probID: codeforces_7_B
---> inputs:
6 10
alloc 5
alloc 3
erase 1
alloc 6
defragment
alloc 6
---> outputs:
1
2
NULL
3

import sys
t , m = map ( int , input ( ) . split ( ) )
memory = [ 0 ] * m
allocIdx = 0
for j in range ( t ) :
    command = input ( ) . split ( )
    if command [ 0 ] == "alloc" :
        n = int ( command [ 1 ] )
        len = 0
        canAlloc = False
        for i in range ( m ) :
            if memory [ i ] == 0 :
                len += 1
            else :
                len = 0
            if len == n :
                canAlloc = True
                len = i - n + 1
                break
        if canAlloc :
            allocIdx += 1
            for i in range ( len , len + n ) :
                memory [ i ] = allocIdx
            print ( allocIdx )
        else :
            print ( "NULL" )
    elif command [ 0 ] == "erase" :
        x = int ( command [ 1 ] )
        if x <= 0 :
            print ( "ILLEGAL_ERASE_ARGUMENT" )
        else :
            hasErased = False
            for i in range ( m ) :
                if memory [ i ] == x :
                    memory [ i ] = 0
                    hasErased = True
            if not hasErased :
                print ( "ILLEGAL_ERASE_ARGUMENT" )
    elif command [ 0 ] == "defragment" :
        d = 0
        for i in range ( m ) :
            if memory [ i ] == 0 :
                d += 1
            else :
                memory [ i - d ] = memory [ i ]
        for i in range ( m - d , m ) :
            memory [ i ] = 0
    else :
        print ( "h" )
sys . stdin . close ( )


---> console_out:
1
2
NULL
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1400
---> probID: geeksforgeeks_3685_A
---> inputs:

---> outputs:
129.904


import math
def area_of_regular_polygon ( n , len ) :
    P = len * n
    A = len / ( 2 * math . tan ( ( 180 / n ) * 3.14159 / 180 ) )
    area = ( P * A ) / 2
    return area
def area_of_triangle_inscribed ( n , len ) :
    area = area_of_regular_polygon ( n , len )
    triangle = area / n
    ins_tri = triangle * 3
    return ins_tri
n = 6
len = 10
print ( "{:.3f}" . format ( area_of_triangle_inscribed ( n , len ) ) )


---> console_out:
129.904
 
MATCHED!! :D
 80%|████████  | 1400/1746 [14:39<02:07,  2.72it/s]

-------------------------------------


---> lineNum: 1401
---> probID: geeksforgeeks_4158_A
---> inputs:

---> outputs:
r


MAX = 256
def lastNonRepeating ( str , n ) :
    freq = [ 0 ] * MAX
    for i in range ( n ) :
        freq [ ord ( str [ i ] ) ] += 1
    for i in range ( n - 1 , - 1 , - 1 ) :
        ch = str [ i ]
        if freq [ ord ( ch ) ] == 1 :
            return ch
    return "-1"
str = "GeeksForGeeks"
n = len ( str )
print ( lastNonRepeating ( str , n ) )


---> console_out:
r
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1402
---> probID: codeforces_242_B
---> inputs:
3
1 1
2 2
3 3
---> outputs:
-1

import sys
n = int ( input ( ) )
a = [ ]
b = [ ]
left = sys . maxsize
right = - sys . maxsize
for i in range ( n ) :
    ai , bi = map ( int , input ( ) . split ( ) )
    a . append ( ai )
    b . append ( bi )
    left = min ( left , ai )
    right = max ( right , bi )
ans = - 1
for i in range ( n ) :
    if a [ i ] == left and b [ i ] == right :
        ans = i + 1
        break
print ( ans )


---> console_out:
-1
 
MATCHED!! :D
 80%|████████  | 1402/1746 [14:39<01:35,  3.60it/s]

-------------------------------------


---> lineNum: 1403
---> probID: geeksforgeeks_1954_A
---> inputs:

---> outputs:
f(x) = 1.6178


def y ( x ) :
    return 1 / ( 1 + x )
def BooleRule ( a , b ) :
    n = 4
    h = int ( ( b - a ) / n )
    sum = 0
    bl = ( 7 * y ( a ) + 32 * y ( a + h ) + 12 * y ( a + 2 * h ) + 32 * y ( a + 3 * h ) + 7 * y ( a + 4 * h ) ) * 2 * h / 45
    sum = sum + bl
    return sum
print ( "f(x) = {:.4f}" . format ( BooleRule ( 0 , 4 ) ) )


---> console_out:
f(x) = 1.6178
 
MATCHED!! :D
  File "./junk/1703784564593_3423/main.py", line 1
    Unfortunately , I cannot translate Java to Python as the code uses bitwise operators and Python 's bitwise operators work differently than Java' s . It would require a significant amount of rewriting and understanding of the original code to properly translate it .
                      ^
SyntaxError: invalid syntax
out1,out2  30


-------------------------------------


---> lineNum: 1404
---> probID: geeksforgeeks_995_A
---> inputs:

---> outputs:
3.0


Unfortunately , I cannot translate Java to Python as the code uses bitwise operators and Python 's bitwise operators work differently than Java' s . It would require a significant amount of rewriting and understanding of the original code to properly translate it .


---> console_out:
 
DIDN'T MATCH!! :(
 80%|████████  | 1404/1746 [14:39<01:12,  4.70it/s]out1,out2 30 30


-------------------------------------


---> lineNum: 1405
---> probID: geeksforgeeks_3309_A
---> inputs:

---> outputs:
3.0


maxN = 20
maxM = 64
dp = [ [ 0 for j in range ( maxM ) ] for i in range ( maxN ) ]
v = [ [ False for j in range ( maxM ) ] for i in range ( maxN ) ]
def findLen ( arr , i , curr , n , m ) :
    if i == n :
        if curr == m :
            return 0
        else :
            return - 1
    if v [ i ] [ curr ] :
        return dp [ i ] [ curr ]
    v [ i ] [ curr ] = True
    l = findLen ( arr , i + 1 , curr , n , m )
    r = findLen ( arr , i + 1 , curr | arr [ i ] , n , m )
    dp [ i ] [ curr ] = l
    if r != - 1 :
        dp [ i ] [ curr ] = max ( dp [ i ] [ curr ] , r + 1 )
    return dp [ i ] [ curr ]
arr = [ 3 , 7 , 2 , 3 ]
n = len ( arr )
m = 3
ans = findLen ( arr , 0 , 0 , n , m )
if ans == - 1 :
    print ( 0 )
else :
    print ( ans )


---> console_out:
3
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784564776_4791/main.py", line 36, in <module>
    main ( )
  File "./junk/1703784564776_4791/main.py", line 26, in main
    print ( ans - max ( 1 ) )
  File "./junk/1703784564776_4791/main.py", line 33, in max
    cut = max ( cut , cost [ m ] [ i ] + max ( i ) )
  File "./junk/1703784564776_4791/main.py", line 33, in max
    cut = max ( cut , cost [ m ] [ i ] + max ( i ) )
TypeError: max() takes 1 positional argument but 2 were given
out1,out2  120


-------------------------------------


---> lineNum: 1406
---> probID: aizu_p00235_A
---> inputs:
7
1 2 5
2 3 2
3 4 3
2 5 3
5 6 3
5 7 8
0
---> outputs:
12

import sys
n = 0
cost = [ ]
def main ( ) :
    global n , cost
    while True :
        n = int ( input ( ) )
        if n == 0 :
            return
        cost = [ [ 0 ] * ( n + 1 ) for _ in range ( n + 1 ) ]
        ans = 0
        for i in range ( n - 1 ) :
            a , b , c = map ( int , input ( ) . split ( ) )
            cost [ a ] [ b ] = cost [ b ] [ a ] = c
            ans += cost [ a ] [ b ] * 2
        for i in range ( 1 , n + 1 ) :
            reaf = 0
            ii , jj = 0 , 0
            for j in range ( 1 , n + 1 ) :
                if cost [ i ] [ j ] > 0 or cost [ i ] [ j ] == - 1 :
                    reaf += 1
                    ii , jj = i , j
            if i != 1 and reaf == 1 :
                ans -= cost [ ii ] [ jj ] * 2
                cost [ ii ] [ jj ] = cost [ jj ] [ ii ] = - 1
        print ( ans - max ( 1 ) )
def max ( m ) :
    global cost
    cut = 0
    for i in range ( 2 , n + 1 ) :
        if cost [ m ] [ i ] > 0 :
            cost [ i ] [ m ] = 0
            cut = max ( cut , cost [ m ] [ i ] + max ( i ) )
    return cut
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 81%|████████  | 1406/1746 [14:39<01:00,  5.60it/s]Traceback (most recent call last):
  File "./junk/1703784564852_1461/main.py", line 7, in <module>
    ans += f ( 3 * int ( math . pow ( 10 , len ( S ) - 1 ) ) , len ( S ) - 2 )
NameError: name 'f' is not defined
out1,out2  40


-------------------------------------


---> lineNum: 1407
---> probID: atcoder_ABC114_C
---> inputs:
575
---> outputs:
4

import math
N = int ( input ( ) )
S = str ( N )
ans = 0
for i in range ( 3 , len ( S ) ) :
    ans += int ( math . pow ( 3 , i ) ) - 3 * int ( math . pow ( 2 , i ) ) + 3
ans += f ( 3 * int ( math . pow ( 10 , len ( S ) - 1 ) ) , len ( S ) - 2 )
ans += f ( 5 * int ( math . pow ( 10 , len ( S ) - 1 ) ) , len ( S ) - 2 )
ans += f ( 7 * int ( math . pow ( 10 , len ( S ) - 1 ) ) , len ( S ) - 2 )
print ( ans )
def f ( a , m ) :
    if m >= 0 :
        return f ( a + 3 * int ( math . pow ( 10 , m ) ) , m - 1 ) + f ( a + 5 * int ( math . pow ( 10 , m ) ) , m - 1 ) + f ( a + 7 * int ( math . pow ( 10 , m ) ) , m - 1 )
    else :
        s = str ( a )
        if '3' in s and '5' in s and '7' in s and a <= N :
            return 1
        else :
            return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1408
---> probID: geeksforgeeks_748_A
---> inputs:

---> outputs:
20


import sys
def minDiff ( arr , n , k ) :
    result = sys . maxsize
    arr . sort ( )
    for i in range ( n - k + 1 ) :
        result = min ( result , arr [ i + k - 1 ] - arr [ i ] )
    return result
if __name__ == '__main__' :
    arr = [ 10 , 100 , 300 , 200 , 1000 , 20 , 30 ]
    n = len ( arr )
    k = 3
    print ( minDiff ( arr , n , k ) )


---> console_out:
20
 
MATCHED!! :D
 81%|████████  | 1408/1746 [14:39<00:49,  6.85it/s]Traceback (most recent call last):
  File "./junk/1703784564990_2364/main.py", line 24, in <module>
    Main ( )
  File "./junk/1703784564990_2364/main.py", line 6, in __init__
    self . solve ( )
  File "./junk/1703784564990_2364/main.py", line 11, in solve
    self . t [ j ] = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '3 1 4 2 5 6 7 8 9 10'
out1,out2  yesno


-------------------------------------


---> lineNum: 1409
---> probID: aizu_p00033_A
---> inputs:
2
3 1 4 2 5 6 7 8 9 10
10 9 8 7 6 5 4 3 2 1
---> outputs:
YES
NO

import sys
class Main :
    def __init__ ( self ) :
        self . n = 0
        self . t = [ 0 ] * 10
        self . solve ( )
    def solve ( self ) :
        for i in range ( int ( input ( ) ) ) :
            self . n -= 1
            for j in range ( 10 ) :
                self . t [ j ] = int ( input ( ) )
            print ( self . check ( ) )
    def check ( self ) :
        L , R = 0 , 0
        for i in range ( 10 ) :
            if L < self . t [ i ] :
                L = self . t [ i ]
            elif R < self . t [ i ] :
                R = self . t [ i ]
            else :
                return "NO"
        return "YES"
if __name__ == "__main__" :
    Main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1410
---> probID: codeforces_1455_B
---> inputs:
5
1
2
3
4
5
---> outputs:
1
3
2
3
4

import sys
t = int ( input ( ) )
for i in range ( t ) :
    x = int ( input ( ) )
    val = 0
    turn = 0
    while val < x :
        val += turn + 1
        turn += 1
    if val == x :
        print ( turn )
    elif val == x + 1 :
        print ( turn + 1 )
    else :
        print ( turn )


---> console_out:
1
3
2
3
4
 
MATCHED!! :D
 81%|████████  | 1410/1746 [14:39<00:40,  8.25it/s]

-------------------------------------


---> lineNum: 1411
---> probID: geeksforgeeks_5131_A
---> inputs:

---> outputs:
2.6666666666666665


import math
def Mean ( arr , n ) :
    sum = 0
    for i in range ( n ) :
        sum = sum + arr [ i ]
    return sum / n
def meanAbsDevtion ( arr , n ) :
    absSum = 0
    for i in range ( n ) :
        absSum = absSum + abs ( arr [ i ] - Mean ( arr , n ) )
    return absSum / n
arr = [ 10 , 15 , 15 , 17 , 18 , 21 ]
n = len ( arr )
print ( meanAbsDevtion ( arr , n ) )


---> console_out:
2.6666666666666665
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784565185_5360/main.py", line 18, in <module>
    p = p204 ( )
  File "./junk/1703784565185_5360/main.py", line 3, in __init__
    self . LIMIT = Library . pow ( 10 , 9 )
NameError: name 'Library' is not defined
out1,out2  29447300


-------------------------------------


---> lineNum: 1412
---> probID: projecteuler_p204_A
---> inputs:

---> outputs:
2944730

class p204 :
    def __init__ ( self ) :
        self . LIMIT = Library . pow ( 10 , 9 )
        self . primes = Library . listPrimes ( 100 )
    def main ( self ) :
        print ( self . run ( ) )
    def run ( self ) :
        return str ( self . count ( 0 , 1 ) )
    def count ( self , primeIndex , product ) :
        if primeIndex == len ( self . primes ) :
            return 1 if product <= self . LIMIT else 0
        else :
            count = 0
            while product <= self . LIMIT :
                count += self . count ( primeIndex + 1 , product )
                product *= self . primes [ primeIndex ]
            return count
p = p204 ( )
p . main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 81%|████████  | 1412/1746 [14:40<00:34,  9.63it/s]

-------------------------------------


---> lineNum: 1413
---> probID: geeksforgeeks_880_A
---> inputs:

---> outputs:
The output is 23


import math
def maximumXOR ( n , l , r ) :
    x = 0
    for i in range ( int ( math . log ( r , 2 ) ) , - 1 , - 1 ) :
        if ( n & ( 1 << i ) ) > 0 :
            if ( x > r ) or ( x + ( 1 << i ) - 1 < l ) :
                x ^= ( 1 << i )
        else :
            if ( x ^ ( 1 << i ) ) <= r :
                x ^= ( 1 << i )
    return n ^ x
n , l , r = 7 , 2 , 23
print ( "The output is" , maximumXOR ( n , l , r ) )


---> console_out:
The output is 23
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1414
---> probID: geeksforgeeks_1338_A
---> inputs:

---> outputs:
30


import math
def maxPrimefactorNum ( N ) :
    arr = [ False ] * ( N + 5 )
    for i in range ( 3 , int ( math . sqrt ( N ) ) + 1 , 2 ) :
        if not arr [ i ] :
            for j in range ( i * i , N + 1 , i ) :
                arr [ j ] = True
    prime = [ 2 ]
    for i in range ( 3 , N + 1 , 2 ) :
        if not arr [ i ] :
            prime . append ( i )
    i , ans = 0 , 1
    while i < len ( prime ) and ans * prime [ i ] <= N :
        ans *= prime [ i ]
        i += 1
    return ans
N = 40
print ( maxPrimefactorNum ( N ) )


---> console_out:
30
 
MATCHED!! :D
 81%|████████  | 1414/1746 [14:40<00:30, 10.99it/s]

-------------------------------------


---> lineNum: 1415
---> probID: geeksforgeeks_217_A
---> inputs:

---> outputs:
2


import math
def CountTrailingZeros ( n ) :
    bit = bin ( n ) [ 2 : ]
    bit1 = bit [ : : - 1 ]
    zero = 0
    for i in range ( 64 ) :
        if i < len ( bit1 ) and bit1 [ i ] == '0' :
            zero += 1
        else :
            break
    return zero
if __name__ == '__main__' :
    n = 4
    ans = CountTrailingZeros ( n )
    print ( ans )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1416
---> probID: codeforces_599_A
---> inputs:
10 20 30
---> outputs:
60

import math
class Shopping :
    def input ( self , numberOne , numberTwo , numberThree ) :
        one = numberOne + numberTwo + numberThree
        two = 2 * ( numberOne + numberTwo )
        three = 2 * ( numberOne + numberThree )
        four = 2 * ( numberTwo + numberThree )
        print ( min ( one , two , three , four ) )
if __name__ == '__main__' :
    input = input ( ) . split ( )
    instance = Shopping ( )
    numOne = int ( input [ 0 ] )
    numTwo = int ( input [ 1 ] )
    numThree = int ( input [ 2 ] )
    instance . input ( numOne , numTwo , numThree )


---> console_out:
60
 
MATCHED!! :D
 81%|████████  | 1416/1746 [14:40<00:27, 12.19it/s]

-------------------------------------


---> lineNum: 1417
---> probID: codeforces_1686_B
---> inputs:
5
3
1 2 3
4
4 3 2 1
2
1 2
2
2 1
6
4 5 6 1 2 3
---> outputs:
0
2
0
1
1

import sys
class FastScanner :
    def __init__ ( self ) :
        self . br = sys . stdin
        self . st = ""
    def next ( self ) :
        while not self . st :
            self . st = self . br . readline ( ) . split ( )
        res = self . st [ 0 ]
        self . st = self . st [ 1 : ]
        return res
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return self . br . readline ( )
def main ( ) :
    input = FastScanner ( )
    tc = input . nextInt ( )
    while tc > 0 :
        n = input . nextInt ( )
        a = [ 0 ] * n
        for i in range ( n ) :
            a [ i ] = input . nextLong ( )
        count = 0
        i = 0
        while i < n - 1 :
            if a [ i ] > a [ i + 1 ] :
                count += 1
                i += 2
            else :
                i += 1
        print ( count )
        tc -= 1
if __name__ == "__main__" :
    main ( )


---> console_out:
0
2
0
1
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1418
---> probID: geeksforgeeks_632_A
---> inputs:

---> outputs:
7


import string
def distinctSubString ( P , Q , K , N ) :
    S = set ( )
    for i in range ( N ) :
        sum = 0
        s = ""
        for j in range ( i , N ) :
            pos = string . ascii_lowercase . index ( P [ j ] )
            sum += int ( Q [ pos ] )
            s += P [ j ]
            if sum <= K :
                S . add ( s )
            else :
                break
    return len ( S )
P = "abcde"
Q = "12345678912345678912345678"
K = 5
N = len ( P )
print ( distinctSubString ( P , Q , K , N ) )


---> console_out:
7
 
MATCHED!! :D
 81%|████████  | 1418/1746 [14:40<00:28, 11.44it/s]

-------------------------------------


---> lineNum: 1419
---> probID: geeksforgeeks_5241_A
---> inputs:

---> outputs:
1356524


def makeEven ( string ) :
    str = list ( string )
    n = len ( str )
    even = float ( 'inf' )
    index = 0
    for i in range ( n - 1 ) :
        if int ( str [ i ] ) % 2 == 0 :
            even = int ( str [ i ] )
            index = i
        if even <= int ( str [ n - 1 ] ) :
            break
    if even == float ( 'inf' ) :
        return str
    swap ( str , index , n - 1 )
    return str
def swap ( str , index1 , index2 ) :
    temp = str [ index1 ]
    str [ index1 ] = str [ index2 ]
    str [ index2 ] = temp
str = "1356425"
print ( '' . join ( makeEven ( str ) ) )


---> console_out:
1356524
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1420
---> probID: geeksforgeeks_1304_A
---> inputs:

---> outputs:
1 2 2 3 2 4 2 4 3 4 

def findDivisors ( n ) :
    div = [ 0 ] * ( n + 1 )
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , n // i + 1 ) :
            div [ i * j ] += 1
    for i in range ( 1 , n + 1 ) :
        print ( div [ i ] , end = " " )
if __name__ == "__main__" :
    n = 10
    findDivisors ( n )


---> console_out:
1 2 2 3 2 4 2 4 3 4  
MATCHED!! :D
 81%|████████▏ | 1420/1746 [14:40<00:26, 12.53it/s]

-------------------------------------


---> lineNum: 1421
---> probID: codeforces_608_B
---> inputs:
01
00111
---> outputs:
3

import sys
a , b = 0 , 0
ans = 0
ss = ""
aa , bb = [ ] , [ ]
mm = [ 0 ] * 200005
ss = input ( )
aa = list ( ss )
a = len ( ss )
ss = input ( )
bb = list ( ss )
b = len ( ss )
for i in range ( 1 , b + 1 ) :
    mm [ i ] = mm [ i - 1 ] + int ( bb [ i - 1 ] )
for i in range ( a ) :
    if aa [ i ] == '0' :
        ans += mm [ b - a + i + 1 ] - mm [ i ]
    else :
        ans += b - a + 1 - ( mm [ b - a + i + 1 ] - mm [ i ] )
print ( ans )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1422
---> probID: geeksforgeeks_2847_A
---> inputs:

---> outputs:
for

import sys
MAX_CHAR = 256
def printDistinct ( str ) :
    n = len ( str )
    count = [ 0 ] * MAX_CHAR
    index = [ n ] * MAX_CHAR
    for i in range ( MAX_CHAR ) :
        count [ i ] = 0
        index [ i ] = n
    for i in range ( n ) :
        x = str [ i ]
        count [ ord ( x ) ] += 1
        if count [ ord ( x ) ] == 1 and x != ' ' :
            index [ ord ( x ) ] = i
        if count [ ord ( x ) ] == 2 :
            index [ ord ( x ) ] = n
    index . sort ( )
    for i in range ( MAX_CHAR ) :
        if index [ i ] != n :
            sys . stdout . write ( str [ index [ i ] ] )
if __name__ == '__main__' :
    str = "GeeksforGeeks"
    printDistinct ( str )


---> console_out:
for 
MATCHED!! :D
 81%|████████▏ | 1422/1746 [14:40<00:24, 13.40it/s]

-------------------------------------


---> lineNum: 1423
---> probID: geeksforgeeks_2040_A
---> inputs:

---> outputs:
2


def calculate ( x , k , m ) :
    result = x
    k -= 1
    while k > 0 :
        result = result ** x
        if result > m :
            result %= m
        k -= 1
    return result
x , k , m = 5 , 2 , 3
print ( calculate ( x , k , m ) )


---> console_out:
2
 
MATCHED!! :D
  File "./junk/1703784565997_5032/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  170


-------------------------------------


---> lineNum: 1424
---> probID: geeksforgeeks_2083_A
---> inputs:

---> outputs:
17


import java . util . * ;
class Main { static void converthenumber ( int n ) { String s = Integer . toString ( n ) ; String res = "" ; for ( int i = 0 ; i < s . length ( ) ; i + + ) { if ( s . charAt ( i ) == '1' | | s . charAt ( i ) == '3' | | s . charAt ( i ) == '5' | | s . charAt ( i ) == '7' | | s . charAt ( i ) == '9' ) { res += s . charAt ( i ) ; } if ( res . length ( ) == 2 ) { break ; } } if ( res . length ( ) == 2 ) { System . out . println ( res ) ; } else { System . out . println ( - 1 ) ; } } public static void main ( String [ ] args ) { int n = 18720 ; converthenumber ( n ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
 82%|████████▏ | 1424/1746 [14:40<00:25, 12.76it/s]  File "./junk/1703784566112_4150/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  acfb


-------------------------------------


---> lineNum: 1425
---> probID: codeforces_1536_B
---> inputs:
3
28
qaabzwsxedcrfvtgbyhnujmiklop
13
cleanairactbd
10
aannttoonn
---> outputs:
ac
f
b

import java . util . * ;
public class Main { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; List < String > chk = new ArrayList < > ( ) ; for ( char c1 = 'a' ; c1 <= 'z' ; c1 + + ) { chk . add ( c1 + "" ) ; } for ( char c1 = 'a' ; c1 <= 'z' ; c1 + + ) { for ( char c2 = 'a' ; c2 <= 'z' ; c2 + + ) { chk . add ( c1 + "" + c2 ) ; } } for ( char c1 = 'a' ; c1 <= 'z' ; c1 + + ) { for ( char c2 = 'a' ; c2 <= 'z' ; c2 + + ) { for ( char c3 = 'a' ; c3 <= 'z' ; c3 + + ) { chk . add ( c1 + "" + c2 + "" + c3 ) ; } } } int t = sc . nextInt ( ) ; while ( t - - > 0 ) { int n = sc . nextInt ( ) ; String s = sc . next ( ) ; for ( String str : chk ) { if ( s . contains ( str ) ) continue ; System . out . println ( str ) ; break ; } } } public static boolean isPowerOfTen ( long input ) { if ( input % 10 != 0 | | input == 0 ) { return false ; } if ( input == 10 ) { return true ; } return isPowerOfTen ( input / 10 ) ; } static boolean isPrime ( long n ) { if ( n <= 1 ) return false ; if ( n <= 3 ) return true ; if ( n % 2 == 0 | | n % 3 == 0 ) return false ; for ( int i = 5 ; i * i <= n ; i = i + 6 ) if ( n % i == 0 | | n % ( i + 2 ) == 0 ) return false ; return true ; } static long gcd ( long a , long b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } static long lcm ( long a , long b ) { return ( a / gcd ( a , b ) ) * b ; } }


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784566174_2994/main.py", line 33, in <module>
    main ( )
  File "./junk/1703784566174_2994/main.py", line 22, in main
    TT = sc . nextInt ( )
  File "./junk/1703784566174_2994/main.py", line 12, in nextInt
    return int ( self . next ( ) )
  File "./junk/1703784566174_2994/main.py", line 10, in next
    return next ( self . tokenizer )
StopIteration
out1,out2  202030404040405060


-------------------------------------


---> lineNum: 1426
---> probID: codeforces_1642_B
---> inputs:
2
3
1 1 2
6
5 1 2 2 2 4
---> outputs:
2 2 3 
4 4 4 4 5 6

import sys
from collections import defaultdict
class Reader :
    def __init__ ( self ) :
        self . reader = sys . stdin . readline
        self . tokenizer = iter ( [ ] )
    def next ( self ) :
        while not self . tokenizer :
            self . tokenizer = iter ( self . reader ( ) . split ( ) )
        return next ( self . tokenizer )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def close ( self ) :
        pass
def main ( ) :
    sc = Reader ( )
    out = sys . stdout
    TT = sc . nextInt ( )
    while TT > 0 :
        TT -= 1
        set = set ( )
        n = sc . nextInt ( )
        for i in range ( n ) :
            set . add ( sc . nextInt ( ) )
        for i in range ( n ) :
            out . write ( str ( max ( i + 1 , len ( set ) ) ) + " " )
    out . flush ( )
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 82%|████████▏ | 1426/1746 [14:41<00:23, 13.59it/s]

-------------------------------------


---> lineNum: 1427
---> probID: geeksforgeeks_448_A
---> inputs:

---> outputs:
30


import math
def sn ( n , an ) :
    return ( n * ( 1 + an ) ) // 2
def trace ( n , m ) :
    an = 1 + ( n - 1 ) * ( m + 1 )
    rowmajorSum = sn ( n , an )
    an = 1 + ( n - 1 ) * ( n + 1 )
    colmajorSum = sn ( n , an )
    return rowmajorSum + colmajorSum
if __name__ == '__main__' :
    N = 3
    M = 3
    print ( trace ( N , M ) )


---> console_out:
30
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1428
---> probID: aizu_p00581_A
---> inputs:
3 4
JOIJ
JIOO
IIII
---> outputs:
3

import sys
h , w = map ( int , input ( ) . split ( ) )
field = [ list ( input ( ) . strip ( ) ) for _ in range ( h ) ]
orbs = [ [ 0 ] * ( w + 1 ) for _ in range ( h ) ]
ingots = [ [ 0 ] * ( w + 1 ) for _ in range ( h + 1 ) ]
for i in range ( h ) :
    for j in range ( w - 1 , - 1 , - 1 ) :
        orbs [ i ] [ j ] = orbs [ i ] [ j + 1 ]
        if field [ i ] [ j ] == 'O' :
            orbs [ i ] [ j ] += 1
for j in range ( w ) :
    for i in range ( h - 1 , - 1 , - 1 ) :
        ingots [ i ] [ j ] = ingots [ i + 1 ] [ j ]
        if field [ i ] [ j ] == 'I' :
            ingots [ i ] [ j ] += 1
total = 0
for i in range ( h ) :
    for j in range ( w ) :
        if field [ i ] [ j ] == 'J' :
            total += orbs [ i ] [ j ] * ingots [ i ] [ j ]
print ( total )


---> console_out:
3
 
MATCHED!! :D
 82%|████████▏ | 1428/1746 [14:41<00:22, 14.19it/s]

-------------------------------------


---> lineNum: 1429
---> probID: geeksforgeeks_6_A
---> inputs:

---> outputs:
3


import math
def countDivisors ( n , k ) :
    count = 0
    for i in range ( 1 , int ( math . sqrt ( n ) ) + 1 ) :
        if n % i == 0 :
            if i % k == 0 :
                count += 1
            if ( n // i ) % k == 0 :
                count += 1
    if i * i == n and i % k == 0 :
        count -= 1
    return count
n = 12
k = 3
print ( countDivisors ( n , k ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1430
---> probID: geeksforgeeks_5_A
---> inputs:

---> outputs:
3


import math
def countDivisors ( n , k ) :
    count = 0
    for i in range ( 1 , n + 1 ) :
        if n % i == 0 and i % k == 0 :
            count += 1
    return count
n = 12
k = 3
print ( countDivisors ( n , k ) )


---> console_out:
3
 
MATCHED!! :D
 82%|████████▏ | 1430/1746 [14:41<00:21, 14.78it/s]

-------------------------------------


---> lineNum: 1431
---> probID: geeksforgeeks_4728_A
---> inputs:

---> outputs:
3


def power ( x , y , p ) :
    res = 1
    x = x % p
    while y > 0 :
        if y % 2 == 1 :
            res = ( res * x ) % p
        y = y >> 1
        x = ( x * x ) % p
    return res
def findModuloByM ( X , N , M ) :
    if N < 6 :
        temp = ""
        for i in range ( N ) :
            temp = temp + str ( X )
        res = int ( temp ) % M
        return res
    if N % 2 == 0 :
        half = findModuloByM ( X , N // 2 , M ) % M
        res = ( half * power ( 10 , N // 2 , M ) + half ) % M
        return res
    else :
        half = findModuloByM ( X , N // 2 , M ) % M
        res = ( half * power ( 10 , N // 2 + 1 , M ) + half * 10 + X ) % M
        return res
X = 6
N = 14
M = 9
print ( findModuloByM ( X , N , M ) )


---> console_out:
3
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784566548_3501/main.py", line 8, in <module>
    p2 += ( int ( input ( ) ) % 2 + 1 ) % 2
ValueError: invalid literal for int() with base 10: '1 3 2'
out1,out2  301000


-------------------------------------


---> lineNum: 1432
---> probID: codeforces_1248_A
---> inputs:
3
3
1 3 2
2
0 3
1
1
1
1
1
2
1
1
---> outputs:
3
1
0

import sys
t = int ( input ( ) )
out = [ ]
for i in range ( t ) :
    n = int ( input ( ) )
    p2 = 0
    for j in range ( n ) :
        p2 += ( int ( input ( ) ) % 2 + 1 ) % 2
    m = int ( input ( ) )
    q2 = 0
    for j in range ( m ) :
        q2 += ( int ( input ( ) ) % 2 + 1 ) % 2
    out . append ( p2 * q2 + ( n - p2 ) * ( m - q2 ) )
for i in range ( t ) :
    print ( out [ i ] )


---> console_out:
 
DIDN'T MATCH!! :(
 82%|████████▏ | 1432/1746 [14:45<03:12,  1.63it/s]

-------------------------------------


---> lineNum: 1433
---> probID: geeksforgeeks_1511_A
---> inputs:

---> outputs:
12


import sys
def findMaxDiff ( arr , n ) :
    if n < 2 :
        print ( "Invalid" )
        return 0
    min_val = sys . maxsize
    max_val = - sys . maxsize
    for i in range ( n ) :
        if arr [ i ] - i > max_val :
            max_val = arr [ i ] - i
        if arr [ i ] - i < min_val :
            min_val = arr [ i ] - i
    return max_val - min_val
if __name__ == "__main__" :
    arr = [ 9 , 15 , 4 , 12 , 13 ]
    n = len ( arr )
    print ( findMaxDiff ( arr , n ) )


---> console_out:
12
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1434
---> probID: codeforces_1150_B
---> inputs:
3
#.#
...
#.#
---> outputs:
YES

import sys
n = int ( input ( ) )
arr = [ ]
for i in range ( n ) :
    line = input ( )
    arr . append ( list ( line ) )
def solve ( arr , n ) :
    for i in range ( n ) :
        for k in range ( n ) :
            if arr [ i ] [ k ] == "." :
                if i + 2 < n and k + 1 < n and k - 1 >= 0 :
                    if arr [ i ] [ k ] == "." and arr [ i + 1 ] [ k ] == "." and arr [ i + 1 ] [ k - 1 ] == "." and arr [ i + 1 ] [ k + 1 ] == "." and arr [ i + 2 ] [ k ] == "." :
                        arr [ i ] [ k ] = "#"
                        arr [ i + 1 ] [ k ] = "#"
                        arr [ i + 1 ] [ k - 1 ] = "#"
                        arr [ i + 1 ] [ k + 1 ] = "#"
                        arr [ i + 2 ] [ k ] = "#"
                    else :
                        return "NO"
                else :
                    return "NO"
    return "YES"
print ( solve ( arr , n ) )


---> console_out:
YES
 
MATCHED!! :D
 82%|████████▏ | 1434/1746 [14:45<02:19,  2.24it/s]

-------------------------------------


---> lineNum: 1435
---> probID: geeksforgeeks_458_A
---> inputs:

---> outputs:
6


def numberOfPaths ( m , n ) :
    count = [ [ 0 for j in range ( n ) ] for i in range ( m ) ]
    for i in range ( m ) :
        count [ i ] [ 0 ] = 1
    for j in range ( n ) :
        count [ 0 ] [ j ] = 1
    for i in range ( 1 , m ) :
        for j in range ( 1 , n ) :
            count [ i ] [ j ] = count [ i - 1 ] [ j ] + count [ i ] [ j - 1 ]
    return count [ m - 1 ] [ n - 1 ]
print ( numberOfPaths ( 3 , 3 ) )


---> console_out:
6
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1436
---> probID: codeforces_1686_A
---> inputs:
4
3
42 42 42
5
1 2 3 4 5
4
4 3 2 1
3
24 2 22
---> outputs:
YES
YES
NO
NO

import sys
t = int ( sys . stdin . readline ( ) )
for _ in range ( t ) :
    n = int ( sys . stdin . readline ( ) )
    a = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
    total = sum ( a )
    if total % n != 0 :
        print ( "NO" )
    else :
        avg = total // n
        if avg in a :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
YES
YES
NO
NO
 
MATCHED!! :D
 82%|████████▏ | 1436/1746 [14:45<01:42,  3.01it/s]

-------------------------------------


---> lineNum: 1437
---> probID: geeksforgeeks_4525_A
---> inputs:

---> outputs:
Yes


def isKthBitSet ( n , k ) :
    if ( ( n >> ( k - 1 ) ) == 1 ) :
        return True
    return False
def setKthBit ( n , k ) :
    return ( ( 1 << ( k - 1 ) ) | n )
def allBitsAreSet ( n ) :
    if ( ( ( n + 1 ) & n ) == 0 ) :
        return True
    return False
def bitsAreInAltOrder ( n ) :
    num = n ^ ( n >> 1 )
    return allBitsAreSet ( num )
def bitsAreInAltPatrnInGivenRange ( n , l , r ) :
    if ( isKthBitSet ( n , r ) ) :
        num = n
        left_shift = r
    else :
        num = setKthBit ( n , ( r + 1 ) )
        left_shift = r + 1
    num = num & ( ( 1 << left_shift ) - 1 )
    num = num >> ( l - 1 )
    return bitsAreInAltOrder ( num )
n = 18
l = 1
r = 3
if ( bitsAreInAltPatrnInGivenRange ( n , l , r ) ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1438
---> probID: geeksforgeeks_843_A
---> inputs:

---> outputs:
57600


import math
def factorial ( n ) :
    if n <= 1 :
        return 1
    return n * factorial ( n - 1 )
def nCr ( n , r ) :
    return factorial ( n ) // ( factorial ( n - r ) * factorial ( r ) )
def NumberOfWays ( n , x , y ) :
    return nCr ( 2 * n - x - y , n - x ) * factorial ( n ) * factorial ( n )
if __name__ == '__main__' :
    n , x , y = 5 , 4 , 2
    print ( NumberOfWays ( n , x , y ) )


---> console_out:
57600
 
MATCHED!! :D
 82%|████████▏ | 1438/1746 [14:45<01:18,  3.91it/s]

-------------------------------------


---> lineNum: 1439
---> probID: geeksforgeeks_2825_A
---> inputs:

---> outputs:
gee


import numpy as np
def commonPrefixUtil ( str1 , str2 ) :
    result = ""
    n1 , n2 = len ( str1 ) , len ( str2 )
    for i in range ( n1 ) :
        for j in range ( n2 ) :
            if i == j and str1 [ i ] == str2 [ j ] :
                result += str1 [ i ]
    return result
def commonPrefix ( arr ) :
    arr = np . sort ( arr )
    print ( commonPrefixUtil ( arr [ 0 ] , arr [ - 1 ] ) )
if __name__ == '__main__' :
    arr = [ "geeksforgeeks" , "geeks" , "geek" , "geezer" ]
    commonPrefix ( arr )


---> console_out:
gee
 
MATCHED!! :D
  File "./junk/1703784570922_9063/main.py", line 5
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  100


-------------------------------------


---> lineNum: 1440
---> probID: atcoder_AGC012_A
---> inputs:
2
5 2 8 5 1 5
---> outputs:
10

import java . util . Arrays
import java . util . Scanner
class Main :
    def main ( args : Array [ str ] ) :
        sc = Scanner ( System . in )
        N = sc . nextInt ( )
        a = [ 0 ] * ( N * 3 )
        for i in range ( N * 3 ) :
            a [ i ] = sc . nextLong ( )
        Arrays . sort ( a )
        sum = 0
        for i in range ( N , 3 * N , 2 ) :
            sum += a [ i ]
        print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(
 82%|████████▏ | 1440/1746 [14:45<01:10,  4.34it/s]

-------------------------------------


---> lineNum: 1441
---> probID: atcoder_ABC065_B
---> inputs:
3
3
1
2
---> outputs:
2

import sys
N = int ( input ( ) )
a = [ 0 ] * ( N + 1 )
for i in range ( 1 , N + 1 ) :
    a [ i ] = int ( input ( ) )
count = 0
valid = True
current = 1
while valid :
    count += 1
    current = a [ current ]
    if current == 2 :
        valid = False
    if count == N :
        count = 0
        valid = False
if count == 0 :
    print ( - 1 )
else :
    print ( count )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1442
---> probID: projecteuler_p301_A
---> inputs:

---> outputs:
2178309

class p301 :
    def __init__ ( self ) :
        pass
    def run ( self ) :
        a = 0
        b = 1
        for i in range ( 32 ) :
            c = a + b
            a = b
            b = c
        return str ( a )
if __name__ == "__main__" :
    print ( p301 ( ) . run ( ) )


---> console_out:
2178309
 
MATCHED!! :D
 83%|████████▎ | 1442/1746 [14:45<00:54,  5.57it/s]

-------------------------------------


---> lineNum: 1443
---> probID: geeksforgeeks_3216_A
---> inputs:

---> outputs:
Element 1 occurs 3 times
Element 2 occurs 1 times
Element 3 occurs 2 times
Element 5 occurs 2 times
Element 8 occurs 3 times
Element 9 occurs 2 times
Element 10 occurs 1 times


import numpy as np
def findFrequencyUtil ( arr , low , high , freq ) :
    if arr [ low ] == arr [ high ] :
        freq [ arr [ low ] ] += high - low + 1
    else :
        mid = ( low + high ) // 2
        findFrequencyUtil ( arr , low , mid , freq )
        findFrequencyUtil ( arr , mid + 1 , high , freq )
def findFrequency ( arr , n ) :
    freq = np . zeros ( arr [ n - 1 ] + 1 , dtype = int )
    findFrequencyUtil ( arr , 0 , n - 1 , freq )
    for i in range ( arr [ n - 1 ] + 1 ) :
        if freq [ i ] != 0 :
            print ( "Element" , i , "occurs" , freq [ i ] , "times" )
if __name__ == '__main__' :
    arr = [ 1 , 1 , 1 , 2 , 3 , 3 , 5 , 5 , 8 , 8 , 8 , 9 , 9 , 10 ]
    n = len ( arr )
    findFrequency ( arr , n )


---> console_out:
Element 1 occurs 3 times
Element 2 occurs 1 times
Element 3 occurs 2 times
Element 5 occurs 2 times
Element 8 occurs 3 times
Element 9 occurs 2 times
Element 10 occurs 1 times
 
MATCHED!! :D
 83%|████████▎ | 1442/1746 [15:00<00:54,  5.57it/s]

-------------------------------------


---> lineNum: 1444
---> probID: projecteuler_p070_A
---> inputs:

---> outputs:
8319823

import math
class p070 :
    def __init__ ( self ) :
        pass
    def main ( self ) :
        print ( self . run ( ) )
    LIMIT = int ( math . pow ( 10 , 7 ) )
    def run ( self ) :
        minNumer = 1
        minDenom = 0
        totients = self . listTotients ( self . LIMIT - 1 )
        for n in range ( 2 , len ( totients ) ) :
            tot = totients [ n ]
            if n * minDenom < minNumer * tot and self . hasSameDigits ( n , tot ) :
                minNumer = n
                minDenom = tot
        if minDenom == 0 :
            raise Exception ( "Not found" )
        return str ( minNumer )
    def hasSameDigits ( self , x , y ) :
        xdigits = sorted ( str ( x ) )
        ydigits = sorted ( str ( y ) )
        return xdigits == ydigits
    def listTotients ( self , n ) :
        totients = [ i for i in range ( n + 1 ) ]
        for i in range ( 2 , n + 1 ) :
            if totients [ i ] == i :
                for j in range ( i , n + 1 , i ) :
                    totients [ j ] = totients [ j ] // i * ( i - 1 )
        return totients
p = p070 ( )
p . main ( )


---> console_out:
8319823
 
MATCHED!! :D
 83%|████████▎ | 1444/1746 [15:05<15:40,  3.11s/it]

-------------------------------------


---> lineNum: 1445
---> probID: geeksforgeeks_1762_A
---> inputs:

---> outputs:
3 3 5 

import numpy as np
def intersection ( a , b , n , m ) :
    i = 0
    j = 0
    while i < n and j < m :
        if a [ i ] > b [ j ] :
            j += 1
        elif b [ j ] > a [ i ] :
            i += 1
        else :
            print ( a [ i ] , end = " " )
            i += 1
            j += 1
a = np . array ( [ 1 , 2 , 3 , 3 , 4 , 5 , 5 , 6 ] )
b = np . array ( [ 3 , 3 , 5 ] )
n = len ( a )
m = len ( b )
intersection ( a , b , n , m )


---> console_out:
3 3 5  
MATCHED!! :D
 83%|████████▎ | 1445/1746 [15:06<13:06,  2.61s/it]

-------------------------------------


---> lineNum: 1446
---> probID: geeksforgeeks_2929_A
---> inputs:

---> outputs:
3


import math
def findMin ( a , n ) :
    sum = 0
    for i in range ( n ) :
        sum += math . log ( a [ i ] )
    x = int ( math . exp ( sum / n ) )
    return x + 1
if __name__ == '__main__' :
    a = [ 3 , 2 , 1 , 4 ]
    n = len ( a )
    print ( findMin ( a , n ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1447
---> probID: geeksforgeeks_1092_A
---> inputs:

---> outputs:
44100


import math
def gcd ( a , b ) :
    if b == 0 :
        return a
    else :
        return gcd ( b , a % b )
def lcmOfArray ( arr , n ) :
    if n < 1 :
        return 0
    lcm = arr [ 0 ]
    for i in range ( 1 , n ) :
        lcm = ( lcm * arr [ i ] ) // gcd ( lcm , arr [ i ] )
    return lcm
def minPerfectSquare ( arr , n ) :
    minPerfectSq = 0
    lcm = lcmOfArray ( arr , n )
    minPerfectSq = int ( lcm )
    cnt = 0
    while lcm > 1 and lcm % 2 == 0 :
        cnt += 1
        lcm //= 2
    if cnt % 2 != 0 :
        minPerfectSq *= 2
    i = 3
    while lcm > 1 :
        cnt = 0
        while lcm % i == 0 :
            cnt += 1
            lcm //= i
        if cnt % 2 != 0 :
            minPerfectSq *= i
        i += 2
    return minPerfectSq
arr = [ 2 , 3 , 4 , 5 , 7 ]
n = len ( arr )
print ( minPerfectSquare ( arr , n ) )


---> console_out:
44100
 
MATCHED!! :D
 83%|████████▎ | 1447/1746 [15:06<08:46,  1.76s/it]

-------------------------------------


---> lineNum: 1448
---> probID: geeksforgeeks_950_A
---> inputs:

---> outputs:
6


class cfg :
    @ staticmethod
    def subarrayCount ( arr , n ) :
        result = 0
        fast , slow = 0 , 0
        for i in range ( 1 , n ) :
            if arr [ i ] - arr [ i - 1 ] == 1 :
                fast += 1
            else :
                len = fast - slow + 1
                result += len * ( len - 1 ) // 2
                fast = i
                slow = i
        if fast != slow :
            len = fast - slow + 1
            result += len * ( len - 1 ) // 2
        return result
    @ staticmethod
    def main ( args ) :
        arr = [ 1 , 2 , 3 , 5 , 6 , 7 ]
        n = len ( arr )
        print ( cfg . subarrayCount ( arr , n ) )
cfg . main ( None )


---> console_out:
6
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1449
---> probID: codeforces_1425_A
---> inputs:
2
5
6
---> outputs:
2
4

import sys
t = int ( input ( ) )
for i in range ( t ) :
    n = int ( input ( ) )
    ans = 0
    flag = 0
    while n > 0 :
        x = 0
        if n % 2 == 0 :
            temp = n // 2
            if n % 4 == 0 and n > 8 :
                temp = n - 1
                x += 1
            n = temp
            if flag == 0 :
                flag = 1
                if x > 0 :
                    ans += 1
                else :
                    ans += temp
            else :
                flag = 0
        else :
            if flag == 0 :
                n -= 1
                ans += 1
                flag = 1
            else :
                n -= 1
                flag = 0
    print ( ans )


---> console_out:
2
4
 
MATCHED!! :D
 83%|████████▎ | 1449/1746 [15:06<06:00,  1.21s/it]

-------------------------------------


---> lineNum: 1450
---> probID: aizu_p02402_A
---> inputs:
5
10 1 5 4 17
---> outputs:
1 17 37

import sys
n = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
sum = 0
max = - 1000000
min = 1000000
for i in range ( n ) :
    sum += a [ i ]
    if max <= a [ i ] :
        max = a [ i ]
    if min >= a [ i ] :
        min = a [ i ]
print ( min , max , sum )


---> console_out:
1 17 37
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1451
---> probID: geeksforgeeks_1447_A
---> inputs:

---> outputs:
Smallest window containing all distinct characters is: dbca


import sys
MAX_CHARS = 256
def findSubString ( str ) :
    n = len ( str )
    dist_count = 0
    visited = [ False ] * MAX_CHARS
    for i in range ( n ) :
        if visited [ ord ( str [ i ] ) ] == False :
            visited [ ord ( str [ i ] ) ] = True
            dist_count += 1
    start = 0
    start_index = - 1
    min_len = sys . maxsize
    count = 0
    curr_count = [ 0 ] * MAX_CHARS
    for j in range ( n ) :
        curr_count [ ord ( str [ j ] ) ] += 1
        if curr_count [ ord ( str [ j ] ) ] == 1 :
            count += 1
        if count == dist_count :
            while curr_count [ ord ( str [ start ] ) ] > 1 :
                if curr_count [ ord ( str [ start ] ) ] > 1 :
                    curr_count [ ord ( str [ start ] ) ] -= 1
                start += 1
            len_window = j - start + 1
            if min_len > len_window :
                min_len = len_window
                start_index = start
    return str [ start_index : start_index + min_len ]
str = "aabcbcdbca"
print ( "Smallest window containing all distinct characters is: " + findSubString ( str ) )


---> console_out:
Smallest window containing all distinct characters is: dbca
 
MATCHED!! :D
 83%|████████▎ | 1451/1746 [15:06<04:10,  1.18it/s]

-------------------------------------


---> lineNum: 1452
---> probID: atcoder_ABC074_C
---> inputs:
1 2 10 20 15 200
---> outputs:
110 10

import sys
A , B , C , D , E , F = map ( int , sys . stdin . readline ( ) . split ( ) )
water = 0
suger = 0
watmax = 0
sugmax = 0
maxnodo = 100 * E / ( 100 + E )
nodo = 0
nodomax = 0
for a in range ( 0 , F // 100 + 1 , A ) :
    for b in range ( 0 , F // 100 + 1 , B ) :
        for c in range ( 0 , F + 1 , C ) :
            for d in range ( 0 , F + 1 , D ) :
                water = 100 * a + 100 * b
                suger = c + d
                if water == 0 or water + suger > F :
                    break
                nodo = 100 * suger / ( water + suger )
                if nodo >= nodomax and nodo <= maxnodo :
                    watmax = water
                    sugmax = suger
                    nodomax = nodo
print ( int ( watmax + sugmax ) , int ( sugmax ) )


---> console_out:
110 10
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1453
---> probID: aizu_p00089_A
---> inputs:
7
3,8
8,1,0
2,7,4,4
4,5,2,6,5
2,7,4,4
8,1,0
3,8
7
---> outputs:
55

import sys
before = None
for line in sys . stdin :
    line = line . strip ( )
    if not line :
        break
    inner = [ int ( x ) for x in line . split ( "," ) ]
    if before is None :
        before = inner
    else :
        tmp = [ 0 ] * len ( inner )
        for i in range ( len ( before ) ) :
            if i < len ( tmp ) :
                if tmp [ i ] < before [ i ] + inner [ i ] :
                    tmp [ i ] = before [ i ] + inner [ i ]
            if len ( before ) > len ( tmp ) :
                if i - 1 < len ( tmp ) and i - 1 >= 0 :
                    if tmp [ i - 1 ] < before [ i ] + inner [ i - 1 ] :
                        tmp [ i - 1 ] = before [ i ] + inner [ i - 1 ]
            else :
                if i + 1 < len ( tmp ) :
                    if tmp [ i + 1 ] < before [ i ] + inner [ i + 1 ] :
                        tmp [ i + 1 ] = before [ i ] + inner [ i + 1 ]
        before = tmp
print ( before [ 0 ] )


---> console_out:
55
 
MATCHED!! :D
 83%|████████▎ | 1453/1746 [15:06<02:56,  1.66it/s]

-------------------------------------


---> lineNum: 1454
---> probID: geeksforgeeks_431_A
---> inputs:

---> outputs:
6
6


def countPairs ( arr , n ) :
    even = 0
    odd = 0
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            even += 1
        else :
            odd += 1
    print ( ( even ) * ( n - 1 ) )
    print ( ( odd ) * ( n - 1 ) )
if __name__ == '__main__' :
    arr = [ 2 , 3 , 4 , 5 ]
    n = len ( arr )
    countPairs ( arr , n )


---> console_out:
6
6
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784591908_1375/main.py", line 38, in <module>
    main ( )
  File "./junk/1703784591908_1375/main.py", line 6, in main
    x1 , p1 , x2 , p2 = map ( int , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 4, got 2)
out1,out2  


-------------------------------------


---> lineNum: 1455
---> probID: codeforces_1613_A
---> inputs:
5
2 1
19 0
10 2
100 1
1999 0
2 3
1 0
1 0
99 0
1 2
---> outputs:
>
=
<
=
<

import math
POWER = [ 1 , 10 , 100 , 1000 , 10000 , 100000 ]
def main ( ) :
    noOfComparison = int ( input ( ) )
    for i in range ( noOfComparison ) :
        x1 , p1 , x2 , p2 = map ( int , input ( ) . split ( ) )
        compare ( x1 , p1 , x2 , p2 )
def compare ( x1 , p1 , x2 , p2 ) :
    if p1 == p2 :
        directCompare ( x1 , x2 )
    else :
        xx1 = x1
        xx2 = x2
        while xx1 % 10 == 0 :
            xx1 /= 10
            p1 += 1
        while xx2 % 10 == 0 :
            xx2 /= 10
            p2 += 1
        if p1 > p2 :
            xx1 *= cachedPower ( p1 - p2 )
        elif p2 > p1 :
            xx2 *= cachedPower ( p2 - p1 )
        directCompare ( xx1 , xx2 )
def cachedPower ( p ) :
    if p < 6 :
        return POWER [ p ]
    else :
        return math . pow ( 10 , p )
def directCompare ( x1 , x2 ) :
    if x1 > x2 :
        print ( ">" )
    elif x2 > x1 :
        print ( "<" )
    else :
        print ( "=" )
if __name__ == "__main__" :
    main ( )


---> console_out:
 
MATCHED!! :D
 83%|████████▎ | 1455/1746 [15:06<02:07,  2.28it/s]

-------------------------------------


---> lineNum: 1456
---> probID: codeforces_400_B
---> inputs:
3 4
*G*S
G**S
*G*S
---> outputs:
2

import collections
n , m = map ( int , input ( ) . split ( ) )
arrs = [ input ( ) for _ in range ( n ) ]
length = [ ]
returnDex = 0
for tmp in arrs :
    dexG = tmp . find ( "G" )
    dexS = tmp . find ( "S" )
    if dexG > dexS :
        returnDex = - 1
    length . append ( dexS - dexG )
if returnDex == - 1 :
    print ( returnDex )
else :
    print ( len ( set ( length ) ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1457
---> probID: geeksforgeeks_3974_A
---> inputs:

---> outputs:
Yes


def search ( arr , n , x ) :
    front = 0
    back = n - 1
    while front <= back :
        if arr [ front ] == x or arr [ back ] == x :
            return True
        front += 1
        back -= 1
    return False
if __name__ == '__main__' :
    arr = [ 10 , 20 , 80 , 30 , 60 , 50 , 110 , 100 , 130 , 170 ]
    x = 130
    n = len ( arr )
    if search ( arr , n , x ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
 83%|████████▎ | 1457/1746 [15:06<01:33,  3.10it/s]

-------------------------------------


---> lineNum: 1458
---> probID: geeksforgeeks_494_A
---> inputs:

---> outputs:
10 3
20 4
5 1


import collections
def countFreq ( arr , n ) :
    mp = collections . defaultdict ( int )
    for i in range ( n ) :
        mp [ arr [ i ] ] += 1
    for i in range ( n ) :
        if mp [ arr [ i ] ] != - 1 :
            print ( arr [ i ] , mp [ arr [ i ] ] )
            mp [ arr [ i ] ] = - 1
if __name__ == '__main__' :
    arr = [ 10 , 20 , 20 , 10 , 10 , 20 , 5 , 20 ]
    n = len ( arr )
    countFreq ( arr , n )


---> console_out:
10 3
20 4
5 1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1459
---> probID: geeksforgeeks_3096_A
---> inputs:

---> outputs:
21


import math
def MinCostTree ( arr , n ) :
    ans = 0
    st = [ float ( 'inf' ) ]
    for i in range ( n ) :
        while st [ - 1 ] <= arr [ i ] :
            x = st . pop ( )
            ans += x * min ( st [ - 1 ] , arr [ i ] )
        st . append ( arr [ i ] )
    for i in range ( 2 , len ( st ) ) :
        ans += st [ i ] * st [ i - 1 ]
    return ans
arr = [ 5 , 2 , 3 ]
n = len ( arr )
print ( MinCostTree ( arr , n ) )


---> console_out:
21
 
MATCHED!! :D
 84%|████████▎ | 1459/1746 [15:07<01:09,  4.12it/s]  File "./junk/1703784592213_9557/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  4030504050


-------------------------------------


---> lineNum: 1460
---> probID: codeforces_1015_B
---> inputs:
6
abcdef
abdfec
---> outputs:
4
3 5 4 5

import java . util . * ;
public class Main { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = sc . next ( ) ; String t = sc . next ( ) ; int [ ] cache1 = new int [ 26 ] ; int [ ] cache2 = new int [ 26 ] ; for ( int i = 0 ; i < n ; i + + ) { cache1 [ s . charAt ( i ) - 'a' ] + + ; cache2 [ t . charAt ( i ) - 'a' ] + + ; } int flag = 0 ; for ( int i = 0 ; i < 26 ; i + + ) { if ( cache1 [ i ] != cache2 [ i ] ) { flag = 1 ; break ; } } if ( flag == 1 ) { System . out . println ( "-1" ) ; System . exit ( 0 ) ; } char [ ] s1 = s . toCharArray ( ) ; char [ ] s2 = t . toCharArray ( ) ; List < Integer > l = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i + + ) { if ( s1 [ i ] == s2 [ i ] ) continue ; int pos = - 1 ; for ( int j = i + 1 ; j < n ; j + + ) { if ( s1 [ j ] == s2 [ i ] ) { pos = j ; break ; } } for ( int j = pos - 1 ; j >= i ; j - - ) { l . add ( j ) ; char temp = s1 [ j + 1 ] ; s1 [ j + 1 ] = s1 [ j ] ; s1 [ j ] = temp ; } s1 [ i ] = s2 [ i ] ; } System . out . println ( l . size ( ) ) ; for ( int x : l ) { System . out . print ( ( x + 1 ) + " " ) ; } System . out . println ( ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1461
---> probID: geeksforgeeks_4615_A
---> inputs:

---> outputs:
x^2 - ( 5 x) + ( 6 ) = 0


def findEquation ( a , b ) :
    sum = a + b
    product = a * b
    print ( "x^2 - (" + str ( sum ) + "x) + (" + str ( product ) + ") = 0" )
if __name__ == '__main__' :
    a = 2
    b = 3
    findEquation ( a , b )


---> console_out:
x^2 - (5x) + (6) = 0
 
MATCHED!! :D
 84%|████████▎ | 1461/1746 [15:07<00:53,  5.30it/s]

-------------------------------------


---> lineNum: 1462
---> probID: geeksforgeeks_2160_A
---> inputs:

---> outputs:
x^2 + ( -4 x) + y^2 + ( 6 y) = 51 .


import math
def circle_equation ( x1 , y1 , r ) :
    a = - 2 * x1
    b = - 2 * y1
    c = r ** 2 - x1 ** 2 - y1 ** 2
    print ( f"x^2 + ({a}x) + y^2 + ({b}y) = {c}." )
x1 , y1 , r = 2 , - 3 , 8
circle_equation ( x1 , y1 , r )


---> console_out:
x^2 + (-4x) + y^2 + (6y) = 51.
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1463
---> probID: geeksforgeeks_5130_A
---> inputs:

---> outputs:
{1,  1,  6}
{1,  2,  5}
{1,  7}
{2,  6}


import itertools
def unique_combination ( l , sum , K , local , A ) :
    if sum == K :
        print ( "{" + ", " . join ( str ( x ) for x in local ) + "}" )
        return
    for i in range ( l , len ( A ) ) :
        if sum + A [ i ] > K :
            continue
        if i == 1 and A [ i ] == A [ i - 1 ] and i > l :
            continue
        local . append ( A [ i ] )
        unique_combination ( i + 1 , sum + A [ i ] , K , local , A )
        local . pop ( )
def Combination ( A , K ) :
    A . sort ( )
    local = [ ]
    unique_combination ( 0 , 0 , K , local , A )
if __name__ == "__main__" :
    arr = [ 10 , 1 , 2 , 7 , 6 , 1 , 5 ]
    A = list ( arr )
    K = 8
    Combination ( A , K )


---> console_out:
{1, 1, 6}
{1, 2, 5}
{1, 7}
{2, 6}
 
MATCHED!! :D
 84%|████████▍ | 1463/1746 [15:07<00:42,  6.66it/s]

-------------------------------------


---> lineNum: 1464
---> probID: codeforces_706_B
---> inputs:
5
3 10 8 6 11
4
1
10
3
11
---> outputs:
0
4
1
5

import sys
n = int ( input ( ) )
arr = list ( map ( int , input ( ) . split ( ) ) )
arr . sort ( )
q = int ( input ( ) )
for j in range ( q ) :
    x = int ( input ( ) )
    l = 0
    r = n - 1
    m = 0
    while l <= r :
        m = ( l + r ) // 2
        if x >= arr [ m ] :
            l = m + 1
        else :
            r = m - 1
    print ( l )


---> console_out:
0
4
1
5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1465
---> probID: aizu_p00040_A
---> inputs:
1
y eazqyp pnop pngtg ye obmpngt xmybp mr lygw
---> outputs:
i submit that there is another point of view

import re
def rep ( a , i , j ) :
    chs = [ ]
    for k in range ( len ( a ) ) :
        if 'a' <= a [ k ] <= 'z' :
            b = ord ( a [ k ] ) - 97
            chs . append ( chr ( ( b * i + j ) % 26 + 97 ) )
        else :
            chs . append ( a [ k ] )
    return '' . join ( chs )
if __name__ == '__main__' :
    n = int ( input ( ) )
    pattern = re . compile ( "that|this" )
    builder = [ ]
    for _ in range ( n ) :
        result = input ( )
        a = result
        for i in range ( 1 , 26 , 2 ) :
            for j in range ( 26 ) :
                a = rep ( result , i , j )
                if pattern . search ( a ) :
                    builder . append ( a + '\n' )
                    break
    print ( '' . join ( builder ) )


---> console_out:
i submit that there is another point of view

 
MATCHED!! :D
 84%|████████▍ | 1465/1746 [15:07<00:35,  7.91it/s]

-------------------------------------


---> lineNum: 1466
---> probID: geeksforgeeks_506_A
---> inputs:

---> outputs:
Even 

def findNature ( a , b , n ) :
    if n == 0 :
        return True if a & 1 == 1 else False
    if n == 1 :
        return True if b & 1 == 1 else False
    if a & 1 == 0 :
        if b & 1 == 0 :
            return False
        else :
            return n % 3 != 0
    else :
        if b & 1 == 0 :
            return ( n - 1 ) % 3 != 0
        else :
            return ( n + 1 ) % 3 != 0
if __name__ == '__main__' :
    a , b , n = 2 , 4 , 3
    if findNature ( a , b , n ) :
        print ( "Odd" )
    else :
        print ( "Even" )


---> console_out:
Even
 
MATCHED!! :D
out1,out2 04000100487330 04000100487330


-------------------------------------


---> lineNum: 1467
---> probID: aizu_p01802_A
---> inputs:
2 1
7 5
7 6
7 7
76 5
8 41
0 0
---> outputs:
0.4142135624
0
0.0827625303
0
48.7401153702
33

import math
while True :
    a , b = map ( int , input ( ) . split ( ) )
    if a == 0 :
        break
    print ( min ( abs ( b - math . hypot ( i , a - i ) ) for i in range ( a // 2 + 1 ) ) )


---> console_out:
0.41421356237309515
0.0
0.08276253029821845
0.0
48.74011537017761
33.0
 
MATCHED!! :D
 84%|████████▍ | 1467/1746 [15:07<00:30,  9.14it/s]

-------------------------------------


---> lineNum: 1468
---> probID: geeksforgeeks_4768_A
---> inputs:

---> outputs:
5


def max_sum ( a , n ) :
    dp = [ 0 ] * n
    if n == 1 :
        dp [ 0 ] = max ( 0 , a [ 0 ] )
    elif n == 2 :
        dp [ 0 ] = max ( 0 , a [ 0 ] )
        dp [ 1 ] = max ( a [ 1 ] , dp [ 0 ] )
    elif n >= 3 :
        dp [ 0 ] = max ( 0 , a [ 0 ] )
        dp [ 1 ] = max ( a [ 1 ] , max ( 0 , a [ 0 ] ) )
        dp [ 2 ] = max ( a [ 2 ] , max ( a [ 1 ] , max ( 0 , a [ 0 ] ) ) )
        i = 3
        while i < n :
            dp [ i ] = max ( dp [ i - 1 ] , a [ i ] + dp [ i - 3 ] )
            i += 1
    return dp [ n - 1 ]
arr = [ 1 , 2 , - 2 , 4 , 3 ]
n = len ( arr )
print ( max_sum ( arr , n ) )


---> console_out:
5
 
MATCHED!! :D
  File "./junk/1703784592806_3794/main.py", line 7
    scanner = Scanner ( System . in )
                                 ^
SyntaxError: invalid syntax
out1,out2  no


-------------------------------------


---> lineNum: 1469
---> probID: codeforces_49_A
---> inputs:
Is it a melon?
---> outputs:
NO

import java . util . Arrays
import java . util . Locale
import java . util . Scanner
class Sleuth :
    @ staticmethod
    def main ( args ) :
        scanner = Scanner ( System . in )
        question = scanner . nextLine ( ) . strip ( )
        originalQ = question [ : - 1 ] . strip ( )
        ch = originalQ [ - 1 ]
        vowels = [ "A" , "E" , "I" , "O" , "U" , "Y" ]
        b = any ( e . equalsIgnoreCase ( ch ) or e . lower ( Locale . US ) . equalsIgnoreCase ( ch ) for e in vowels )
        print ( "YES" if b else "NO" )


---> console_out:
 
DIDN'T MATCH!! :(
 84%|████████▍ | 1469/1746 [15:07<00:26, 10.50it/s]

-------------------------------------


---> lineNum: 1470
---> probID: geeksforgeeks_3835_A
---> inputs:

---> outputs:
10
26


import math
def minimumX ( n , k ) :
    mini = math . inf
    for i in range ( 1 , int ( n ** 0.5 ) + 1 ) :
        if n % i == 0 :
            fir = i
            sec = n // i
            num1 = fir * k + sec
            res = ( num1 // k ) * ( num1 % k )
            if res == n :
                mini = min ( num1 , mini )
            num2 = sec * k + fir
            res = ( num2 // k ) * ( num2 % k )
            if res == n :
                mini = min ( num2 , mini )
    return mini
n = 4
k = 6
print ( minimumX ( n , k ) )
n = 5
k = 5
print ( minimumX ( n , k ) )


---> console_out:
10
26
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1471
---> probID: codejam_16_13
---> inputs:
4
4
2 3 4 1
4
3 3 4 1
4
3 3 4 3
10
7 8 10 10 9 2 9 6 3 3

---> outputs:
Case #1: 4
Case #2: 3
Case #3: 3
Case #4: 6


import sys
def largestCircle ( ) :
    N = int ( input ( ) )
    bff = list ( map ( int , input ( ) . split ( ) ) )
    status = [ - 2 ] * N
    chainLength = [ 0 ] * N
    for i in range ( N ) :
        bff [ i ] -= 1
        if bff [ bff [ i ] ] == i :
            status [ i ] = - 1
    maxLoopSize = 0
    for i in range ( N ) :
        if status [ i ] != - 1 :
            current = bff [ i ]
            status [ i ] = i
            steps = 1
            done = False
            while not done :
                if current == i :
                    if steps > maxLoopSize :
                        maxLoopSize = steps
                    done = True
                elif status [ current ] == i :
                    done = True
                elif status [ current ] == - 1 :
                    if steps > chainLength [ current ] :
                        chainLength [ current ] = steps
                    done = True
                else :
                    steps += 1
                    status [ current ] = i
                    current = bff [ current ]
    frankenCircle = 0
    for i in range ( N ) :
        if status [ i ] == - 1 :
            frankenCircle += ( chainLength [ i ] + 1 )
    return max ( frankenCircle , maxLoopSize )
if __name__ == "__main__" :
    C = int ( input ( ) )
    for thisCase in range ( 1 , C + 1 ) :
        print ( "Case #%d: %d" % ( thisCase , largestCircle ( ) ) )


---> console_out:
Case #1: 4
Case #2: 3
Case #3: 3
Case #4: 6
 
MATCHED!! :D
 84%|████████▍ | 1471/1746 [15:07<00:24, 11.43it/s]

-------------------------------------


---> lineNum: 1472
---> probID: geeksforgeeks_371_A
---> inputs:

---> outputs:
813.5999999999999


import math
def SellingPrice ( CP , PP ) :
    P_decimal = 1 + ( PP / 100 )
    res = P_decimal * CP
    return res
C = 720
P = 13
print ( SellingPrice ( C , P ) )


---> console_out:
813.5999999999999
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784593086_9889/main.py", line 7, in <module>
    p [ int ( input ( ) ) ] = i
ValueError: invalid literal for int() with base 10: '4 5 1 3 2 6'
out1,out2  101011011111010010


-------------------------------------


---> lineNum: 1473
---> probID: codeforces_1265_B
---> inputs:
3
6
4 5 1 3 2 6
5
5 3 1 2 4
4
1 4 3 2
---> outputs:
101011
11111
1001

import sys
t = int ( input ( ) )
for j in range ( 1 , t + 1 ) :
    n = int ( input ( ) )
    p = [ 0 ] * ( n + 5 )
    for i in range ( n ) :
        p [ int ( input ( ) ) ] = i
    p1 = p2 = p [ 1 ]
    sys . stdout . write ( '1' )
    for i in range ( 2 , n + 1 ) :
        c = p [ i ]
        if c > p2 :
            p2 = c
        elif c < p1 :
            p1 = c
        if p2 - p1 == i - 1 :
            sys . stdout . write ( '1' )
        else :
            sys . stdout . write ( '0' )
    sys . stdout . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(
 84%|████████▍ | 1473/1746 [15:08<00:22, 12.15it/s]Traceback (most recent call last):
  File "./junk/1703784593149_3885/main.py", line 2, in <module>
    n , s = map ( int , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2  100


-------------------------------------


---> lineNum: 1474
---> probID: atcoder_ABC044_D
---> inputs:
87654
30
---> outputs:
10

import math
n , s = map ( int , input ( ) . split ( ) )
if n < s :
    print ( - 1 )
else :
    for d in range ( 39 , 1 , - 1 ) :
        b = lowerBound ( d , n )
        while d * math . log ( b ) <= math . log ( n ) :
            if test ( b , n , s ) :
                print ( b )
                exit ( )
            b += 1
    for a1 in range ( int ( math . sqrt ( n - s ) ) , 0 , - 1 ) :
        if ( n - s ) % a1 == 0 :
            b = ( n - s ) // a1 + 1
            a0 = n - a1 * b
            if 0 <= a0 < b and a0 + a1 == s :
                print ( b )
                exit ( )
    if n == s :
        print ( n + 1 )
    else :
        print ( - 1 )
def test ( b , n , s ) :
    if b < 2 :
        return False
    sum = 0
    while n > 0 :
        sum += n % b
        n //= b
    return sum == s
def lowerBound ( d , n ) :
    left = 1
    right = n
    logn = math . log ( n )
    while right - left > 1 :
        mid = ( left + right ) // 2
        logm = ( d + 1 ) * math . log ( mid )
        if logm > logn :
            right = mid
        else :
            left = mid
    return right


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1475
---> probID: codeforces_821_B
---> inputs:
1 5
---> outputs:
30

import math
import sys
def main ( ) :
    m , b = map ( int , input ( ) . split ( ) )
    result = 0
    for x in range ( 1 , m * b + 1 ) :
        y = - 1.0 * x / m + b
        y = math . floor ( y )
        result = max ( result , 1 * ( x + 1 ) * y * ( y + 1 ) // 2 + 1 * ( y + 1 ) * x * ( x + 1 ) // 2 )
    print ( result )
if __name__ == '__main__' :
    main ( )


---> console_out:
30
 
MATCHED!! :D
 84%|████████▍ | 1475/1746 [15:08<00:20, 12.97it/s]

-------------------------------------


---> lineNum: 1476
---> probID: geeksforgeeks_442_A
---> inputs:

---> outputs:
YES


def check ( n , m ) :
    if m % n == 0 :
        print ( "YES" )
    else :
        print ( "NO" )
    return 0
if __name__ == '__main__' :
    n = 5
    m = 10
    check ( n , m )


---> console_out:
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1477
---> probID: codeforces_1324_B
---> inputs:
5
3
1 2 1
5
1 2 2 3 2
3
1 1 2
4
1 2 2 1
10
1 1 2 2 3 3 4 4 5 5
---> outputs:
YES
YES
NO
YES
NO

import sys
cantidad = input ( )
solucion = [ None ] * int ( cantidad )
for i in range ( int ( cantidad ) ) :
    cantidadfor = input ( )
    cantidadelementos = int ( cantidadfor )
    elementosS = input ( ) . split ( " " )
    elementos = [ int ( x ) for x in elementosS ]
    for j in range ( cantidadelementos ) :
        centinela = False
        for k in range ( cantidadelementos - 1 , - 1 , - 1 ) :
            if elementos [ j ] == elementos [ k ] and k - j >= 2 :
                solucion [ i ] = "YES"
                break
        if centinela :
            break
for i in range ( len ( solucion ) ) :
    if solucion [ i ] is None :
        solucion [ i ] = "NO"
for i in range ( len ( solucion ) ) :
    print ( solucion [ i ] )


---> console_out:
YES
YES
NO
YES
NO
 
MATCHED!! :D
 85%|████████▍ | 1477/1746 [15:08<00:21, 12.61it/s]Traceback (most recent call last):
  File "./junk/1703784593448_2685/main.py", line 2, in <module>
    a = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '20 30'
out1,out2  100


-------------------------------------


---> lineNum: 1478
---> probID: aizu_p00376_A
---> inputs:
20 30
---> outputs:
10

import sys
a = int ( input ( ) )
b = int ( input ( ) )
if a <= b :
    print ( b - a )
else :
    print ( a - b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1479
---> probID: codeforces_591_B
---> inputs:
6 1
police
p m
---> outputs:
molice

import sys
a , b = map ( int , input ( ) . split ( ) )
s = input ( ) . strip ( )
c = list ( s )
ch = [ chr ( i ) for i in range ( ord ( 'a' ) , ord ( 'a' ) + 26 ) ]
for i in range ( b ) :
    m , n = input ( ) . split ( )
    mm = m [ 0 ]
    nn = n [ 0 ]
    flag = 1
    for j in range ( 26 ) :
        if ch [ j ] == mm and flag == 1 :
            ch [ j ] = nn
            flag = 0
        if ch [ j ] == nn and flag == 1 :
            ch [ j ] = mm
            flag = 0
        flag = 1
for i in range ( a ) :
    c [ i ] = ch [ ord ( c [ i ] ) - 97 ]
print ( '' . join ( c ) )


---> console_out:
molice
 
MATCHED!! :D
 85%|████████▍ | 1479/1746 [15:08<00:19, 13.51it/s]

-------------------------------------


---> lineNum: 1480
---> probID: geeksforgeeks_4156_A
---> inputs:

---> outputs:
2


import re
def findNthOccur ( str , ch , N ) :
    occur = 0
    for i in range ( len ( str ) ) :
        if str [ i ] == ch :
            occur += 1
        if occur == N :
            return i
    return - 1
str = "geeks"
ch = 'e'
N = 2
print ( findNthOccur ( str , ch , N ) )


---> console_out:
2
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784593639_5363/main.py", line 4, in <module>
    sticks [ int ( sys . stdin . readline ( ) . strip ( ) ) - 1 ] += 1
ValueError: invalid literal for int() with base 10: '4 2 5 4 4 4'
out1,out2  bear


-------------------------------------


---> lineNum: 1481
---> probID: codeforces_471_A
---> inputs:
4 2 5 4 4 4
---> outputs:
Bear

import sys
sticks = [ 0 ] * 9
for i in range ( 6 ) :
    sticks [ int ( sys . stdin . readline ( ) . strip ( ) ) - 1 ] += 1
legs = False
headbody = False
for i in range ( 9 ) :
    if sticks [ i ] >= 4 :
        legs = True
    if sticks [ i ] >= 6 :
        headbody = True
    if sticks [ i ] == 2 :
        headbody = True
if legs and headbody :
    print ( "Elephant" )
elif legs :
    print ( "Bear" )
else :
    print ( "Alien" )


---> console_out:
 
DIDN'T MATCH!! :(
 85%|████████▍ | 1481/1746 [15:08<00:18, 14.03it/s]out1,out2  2816326210


-------------------------------------


---> lineNum: 1482
---> probID: projecteuler_p401_A
---> inputs:

---> outputs:
281632621

import math
from typing import List
class p401 :
    def __init__ ( self ) :
        self . LIMIT = 1000000000000000
        self . MODULUS = pow ( 10 , 9 )
        self . MODULUS_BI = int ( self . MODULUS )
        self . SIX_BI = 6
    def main ( self , args : List [ str ] ) -> str :
        return self . run ( )
    def run ( self ) -> str :
        splitCount = int ( math . sqrt ( self . LIMIT ) )
        splitCount = max ( splitCount // 3 , 1 )
        splitAt = int ( self . LIMIT / ( splitCount + 1 ) )
        sum = 0
        for i in range ( 1 , splitAt + 1 ) :
            count = self . LIMIT // i % self . MODULUS
            term = ( i * i ) % self . MODULUS
            term = ( term * count ) % self . MODULUS
            sum = ( sum + term ) % self . MODULUS
        for i in range ( splitCount , 0 , - 1 ) :
            start = self . LIMIT // ( i + 1 )
            end = self . LIMIT // i
            sumSquares = self . sumSquaresMod ( end ) - self . sumSquaresMod ( start )
            sumSquares = ( sumSquares + self . MODULUS ) % self . MODULUS
            sum = ( sum + i * sumSquares % self . MODULUS ) % self . MODULUS
        return str ( sum )
    def sumSquaresMod ( self , n : int ) -> int :
        x = int ( n )
        y = x * ( x + 1 )
        y = y * ( x << 1 | 1 )
        y = y // self . SIX_BI
        y = y % self . MODULUS_BI
        return int ( y )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1483
---> probID: codeforces_1389_B
---> inputs:
4
5 4 0
1 5 4 3 2
5 4 1
1 5 4 3 2
5 4 4
10 20 30 40 50
10 7 3
4 6 8 2 9 9 7 4 10 9
---> outputs:
15
19
150
56

import sys
t = int ( input ( ) )
for i in range ( t ) :
    n , k , z = map ( int , input ( ) . split ( ) )
    a = list ( map ( int , input ( ) . split ( ) ) )
    res = 0
    for zz in range ( z + 1 ) :
        dist = k - 2 * zz
        if dist < 0 :
            break
        max_val , score = 0 , 0
        for j in range ( dist + 1 ) :
            if j < n - 1 :
                max_val = max ( max_val , a [ j ] + a [ j + 1 ] )
            score += a [ j ]
        res = max ( res , score + max_val * zz )
    print ( res )


---> console_out:
15
19
150
56
 
MATCHED!! :D
 85%|████████▍ | 1483/1746 [15:08<00:18, 14.27it/s]out1,out2 0000 2060


-------------------------------------


---> lineNum: 1484
---> probID: codeforces_56_B
---> inputs:
8
1 6 5 4 3 2 7 8
---> outputs:
2 6

import math
len = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
l = 0
r = 0
flag = False
isTrue = False
for i in range ( len ) :
    if a [ i ] != i + 1 and not flag :
        l = i + 1
        flag = True
        continue
    if a [ i ] != i + 1 and flag :
        r = i + 1
        if a [ r - 1 ] - a [ r - 2 ] > 0 :
            isTrue = True
print ( str ( l ) + " " + str ( r ) if isTrue else "0 0" )


---> console_out:
0 0
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784593901_1537/main.py", line 7, in <module>
    h , m = map ( int , input ( ) . split ( ) )
ValueError: too many values to unpack (expected 2)
out1,out2  30


-------------------------------------


---> lineNum: 1485
---> probID: aizu_p00367_A
---> inputs:
5
1 0 2 0 3 30 4 30 6 0 7 0
2 30 3 0 4 0 5 0 5 30 6 30
1 30 2 30 4 30 5 0 6 30 7 0
2 30 3 0 5 0 6 0 6 30 7 0
1 0 2 0 3 0 3 30 4 0 5 0
---> outputs:
3

import sys
n = int ( input ( ) )
b = [ [ [ 0 for _ in range ( 2 ) ] for _ in range ( 3 ) ] for _ in range ( n ) ]
for i in range ( n ) :
    for j in range ( 3 ) :
        for k in range ( 2 ) :
            h , m = map ( int , input ( ) . split ( ) )
            b [ i ] [ j ] [ k ] = h * 60 + m
ans = 0
for i in range ( n ) :
    for j in range ( n ) :
        for k in range ( n ) :
            res = 0
            for p in range ( n ) :
                if b [ p ] [ 0 ] [ 0 ] <= b [ i ] [ 0 ] [ 1 ] and b [ i ] [ 0 ] [ 1 ] <= b [ p ] [ 0 ] [ 1 ] and b [ p ] [ 1 ] [ 0 ] <= b [ j ] [ 1 ] [ 1 ] and b [ j ] [ 1 ] [ 1 ] <= b [ p ] [ 1 ] [ 1 ] and b [ p ] [ 2 ] [ 0 ] <= b [ k ] [ 2 ] [ 1 ] and b [ k ] [ 2 ] [ 1 ] <= b [ p ] [ 2 ] [ 1 ] :
                    res += 1
            ans = max ( ans , res )
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 85%|████████▌ | 1485/1746 [15:08<00:18, 14.45it/s]

-------------------------------------


---> lineNum: 1486
---> probID: aizu_p00740_A
---> inputs:
3 2
3 3
3 50
10 29
31 32
50 2
50 50
0 0
---> outputs:
1
0
1
5
30
1
13

import sys
class AOJ1159 :
    def solve ( self ) :
        person = [ 0 ] * self . n
        wan = self . p
        ban = 0
        result = - 1
        while True :
            if wan == 0 :
                wan = person [ ban ]
                person [ ban ] = 0
            else :
                wan -= 1
                person [ ban ] += 1
            if person [ ban ] == self . p :
                result = ban
                break
            ban = ( ban + 1 ) % self . n
        print ( result )
    def doIt ( self ) :
        for line in sys . stdin :
            n , p = map ( int , line . split ( ) )
            self . n = n
            self . p = p
            if n + p == 0 :
                break
            self . solve ( )
if __name__ == '__main__' :
    AOJ1159 ( ) . doIt ( )


---> console_out:
1
0
1
5
30
1
13
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784594379_6436/main.py", line 40, in <module>
    main ( )
  File "./junk/1703784594379_6436/main.py", line 16, in main
    n = sc . nextInt ( )
  File "./junk/1703784594379_6436/main.py", line 11, in nextInt
    return int ( self . next ( ) )
  File "./junk/1703784594379_6436/main.py", line 7, in next
    while self . tokenizer is None or not self . tokenizer . hasMoreTokens ( ) :
AttributeError: 'list' object has no attribute 'hasMoreTokens'
out1,out2  90120150210180


-------------------------------------


---> lineNum: 1487
---> probID: aizu_p02356_A
---> inputs:
6 5
1 2 3 4 5 6
6 9 12 21 15
---> outputs:
9
12
15
21
18

import sys
class MyScanner :
    def __init__ ( self ) :
        self . reader = sys . stdin . buffer
        self . tokenizer = None
    def next ( self ) :
        while self . tokenizer is None or not self . tokenizer . hasMoreTokens ( ) :
            self . tokenizer = self . reader . readline ( ) . split ( )
        return self . tokenizer . pop ( 0 ) . decode ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
def main ( ) :
    sc = MyScanner ( )
    n = sc . nextInt ( )
    q = sc . nextInt ( )
    a = [ 0 ] * n
    a [ 0 ] = sc . nextInt ( )
    for i in range ( 1 , n ) :
        a [ i ] = sc . nextInt ( )
    pw = sys . stdout . buffer
    for i in range ( q ) :
        x = sc . nextLong ( )
        cnt = 0
        right = 0
        sum = 0
        for left in range ( n ) :
            while right < n and sum + a [ right ] <= x :
                sum += a [ right ]
                right += 1
            cnt += right - left
            if right == left :
                right += 1
            else :
                sum -= a [ left ]
        pw . write ( str ( cnt ) . encode ( ) + b'\n' )
    pw . flush ( )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 85%|████████▌ | 1487/1746 [15:09<00:30,  8.37it/s]

-------------------------------------


---> lineNum: 1488
---> probID: codeforces_1409_A
---> inputs:
6
5 5
13 42
18 4
1337 420
123456789 1000000000
100500 9000
---> outputs:
0
3
2
92
87654322
9150

import sys
t = int ( sys . stdin . readline ( ) )
for i in range ( t ) :
    a , b = map ( int , sys . stdin . readline ( ) . split ( ) )
    counter = 0
    if a < b :
        counter = ( b - a ) // 10
    elif a > b :
        counter = ( a - b ) // 10
    if a % 10 != b % 10 :
        counter += 1
    print ( counter )


---> console_out:
0
3
2
92
87654322
9150
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1489
---> probID: geeksforgeeks_743_A
---> inputs:

---> outputs:
3
2
5


import numpy as np
maxSize = int ( 1e5 + 5 )
isFib = np . zeros ( maxSize , dtype = bool )
prefix = np . zeros ( maxSize , dtype = int )
def digitSum ( num ) :
    s = 0
    while num != 0 :
        s = s + num % 10
        num = num // 10
    return s
def generateFibonacci ( ) :
    global isFib
    isFib = np . zeros ( maxSize , dtype = bool )
    prev = 0
    curr = 1
    isFib [ prev ] = isFib [ curr ] = True
    while curr < maxSize :
        temp = curr + prev
        if temp < maxSize :
            isFib [ temp ] = True
        prev = curr
        curr = temp
def precompute ( k ) :
    generateFibonacci ( )
    for i in range ( 1 , maxSize ) :
        sum = digitSum ( i )
        if isFib [ sum ] and sum % k == 0 :
            prefix [ i ] += 1
    for i in range ( 1 , maxSize ) :
        prefix [ i ] = prefix [ i ] + prefix [ i - 1 ]
def performQueries ( k , q , query ) :
    precompute ( k )
    for i in range ( q ) :
        l = query [ i ] [ 0 ]
        r = query [ i ] [ 1 ]
        cnt = prefix [ r ] - prefix [ l - 1 ]
        print ( cnt )
query = np . array ( [ [ 1 , 11 ] , [ 5 , 15 ] , [ 2 , 24 ] ] )
k = 2
q = query . shape [ 0 ]
performQueries ( k , q , query )


---> console_out:
3
2
5
 
MATCHED!! :D
 85%|████████▌ | 1489/1746 [15:09<00:40,  6.38it/s]out1,out2 0000200010 0000200010


-------------------------------------


---> lineNum: 1490
---> probID: codeforces_1642_A
---> inputs:
5
8 10
10 4
6 2
4 6
0 1
4 2
14 1
11 2
13 2
0 0
4 0
2 4
0 1
1 1
0 0
---> outputs:
0.0000000
0
2.0000
0.00
1

import sys
T = int ( input ( ) )
for t in range ( T ) :
    X = [ 0 ] * 3
    Y = [ 0 ] * 3
    for i in range ( 3 ) :
        X [ i ] , Y [ i ] = map ( int , input ( ) . split ( ) )
    answer = 0
    for i in range ( 3 ) :
        if Y [ i ] == Y [ ( i + 1 ) % 3 ] and Y [ i ] > Y [ ( i + 2 ) % 3 ] :
            answer += abs ( X [ ( i + 1 ) % 3 ] - X [ i ] )
    print ( answer )


---> console_out:
0
0
2
0
1
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784595006_5929/main.py", line 24, in <module>
    if createStringAndCheckPalindrome ( N ) :
  File "./junk/1703784595006_5929/main.py", line 19, in createStringAndCheckPalindrome
    if isPalindrome ( res_str ) :
  File "./junk/1703784595006_5929/main.py", line 2, in isPalindrome
    len = len ( str )
UnboundLocalError: local variable 'len' referenced before assignment
out1,out2  yes


-------------------------------------


---> lineNum: 1491
---> probID: geeksforgeeks_2417_A
---> inputs:

---> outputs:
Yes


def isPalindrome ( str ) :
    len = len ( str )
    for i in range ( 0 , len // 2 ) :
        if str [ i ] != str [ len - 1 - i ] :
            return False
    return True
def createStringAndCheckPalindrome ( N ) :
    sub = str ( N )
    res_str = ""
    sum = 0
    while N > 0 :
        digit = N % 10
        sum += digit
        N = N // 10
    while len ( res_str ) < sum :
        res_str += sub
    if len ( res_str ) > sum :
        res_str = res_str [ : sum ]
    if isPalindrome ( res_str ) :
        return True
    return False
if __name__ == "__main__" :
    N = 10101
    if createStringAndCheckPalindrome ( N ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(
 85%|████████▌ | 1491/1746 [15:09<00:33,  7.70it/s]

-------------------------------------


---> lineNum: 1492
---> probID: aizu_p02408_A
---> inputs:
47
S 10
S 11
S 12
S 13
H 1
H 2
S 6
S 7
S 8
S 9
H 6
H 8
H 9
H 10
H 11
H 4
H 5
S 2
S 3
S 4
S 5
H 12
H 13
C 1
C 2
D 1
D 2
D 3
D 4
D 5
D 6
D 7
C 3
C 4
C 5
C 6
C 7
C 8
C 9
C 10
C 11
C 13
D 9
D 10
D 11
D 12
D 13
---> outputs:
S 1
H 3
H 7
C 12
D 8

import sys
n = int ( input ( ) )
array = [ [ 0 for j in range ( 13 ) ] for i in range ( 4 ) ]
for i in range ( n ) :
    s , a = input ( ) . split ( )
    a = int ( a )
    if s == "S" :
        array [ 0 ] [ a - 1 ] = 1
    elif s == "H" :
        array [ 1 ] [ a - 1 ] = 1
    elif s == "C" :
        array [ 2 ] [ a - 1 ] = 1
    elif s == "D" :
        array [ 3 ] [ a - 1 ] = 1
for i in range ( len ( array ) ) :
    for j in range ( len ( array [ 0 ] ) ) :
        if array [ i ] [ j ] == 0 and i == 0 :
            print ( "S" , j + 1 )
        elif array [ i ] [ j ] == 0 and i == 1 :
            print ( "H" , j + 1 )
        elif array [ i ] [ j ] == 0 and i == 2 :
            print ( "C" , j + 1 )
        elif array [ i ] [ j ] == 0 and i == 3 :
            print ( "D" , j + 1 )


---> console_out:
S 1
H 3
H 7
C 12
D 8
 
MATCHED!! :D
  File "./junk/1703784595147_3739/main.py", line 1
    import java . io . * ;
                       ^
SyntaxError: invalid syntax
out1,out2  sumofevennumbersatevenindicesis300


-------------------------------------


---> lineNum: 1493
---> probID: geeksforgeeks_3434_A
---> inputs:

---> outputs:
Sum of even numbers at  even indices is  30


import java . io . * ;
class GFG :
    def sum_even_and_even_index ( arr , n ) :
        i = 0
        sum = 0
        while i < n :
            if arr [ i ] % 2 == 0 :
                sum += arr [ i ]
            i += 2
        return sum
    def main ( args ) :
        arr = [ 5 , 6 , 12 , 1 , 18 , 8 ]
        n = len ( arr )
        print ( "Sum of even numbers at even indices is " + str ( sum_even_and_even_index ( arr , n ) ) )
GFG . main ( None )


---> console_out:
 
DIDN'T MATCH!! :(
 86%|████████▌ | 1493/1746 [15:10<00:28,  8.92it/s]  File "./junk/1703784595206_8039/main.py", line 4
    scan = Scanner ( System . in )
                              ^
SyntaxError: invalid syntax
out1,out2  yesyesyesnonononoyes


-------------------------------------


---> lineNum: 1494
---> probID: codeforces_1671_A
---> inputs:
8
aaaabbb
bbaaaaabbb
aaaaaa
abab
a
b
aaaab
bbaaa
---> outputs:
YES
YES
YES
NO
NO
NO
NO
YES

import java . util . Scanner
class Codechef :
    def main ( args : list ) -> None :
        scan = Scanner ( System . in )
        T = scan . nextInt ( )
        for i in range ( T ) :
            s = scan . next ( )
            length = len ( s )
            if length == 1 :
                print ( "NO" )
                continue
            count = 1
            a = True
            for j in range ( length - 1 ) :
                if s [ j ] == s [ j + 1 ] :
                    count += 1
                else :
                    if count == 1 :
                        a = False
                        break
                    elif j == length - 2 :
                        a = False
                    else :
                        count = 1
            if a :
                print ( "YES" )
            else :
                print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1495
---> probID: geeksforgeeks_1479_A
---> inputs:

---> outputs:
1 3 6 

import sys
def printDuplicates ( arr , n ) :
    fl = 0
    for i in range ( n ) :
        if arr [ arr [ i ] % n ] >= n :
            if arr [ arr [ i ] % n ] < 2 * n :
                sys . stdout . write ( str ( arr [ i ] % n ) + " " )
                fl = 1
        arr [ arr [ i ] % n ] += n
    if not ( fl > 0 ) :
        sys . stdout . write ( "-1\n" )
if __name__ == "__main__" :
    arr = [ 1 , 6 , 3 , 1 , 3 , 6 , 6 ]
    arr_size = len ( arr )
    printDuplicates ( arr , arr_size )


---> console_out:
1 3 6  
MATCHED!! :D
 86%|████████▌ | 1495/1746 [15:10<00:24, 10.26it/s]out1,out2 10 10


-------------------------------------


---> lineNum: 1496
---> probID: codeforces_1293_B
---> inputs:
1
---> outputs:
1.000000000000

import sys
n = int ( input ( ) )
res = 0
for i in range ( n ) :
    res += ( 1.0 / float ( n - i ) )
print ( res )


---> console_out:
1.0
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1497
---> probID: geeksforgeeks_2020_A
---> inputs:

---> outputs:
8


def sum ( n ) :
    return n * ( n + 1 ) * ( n + 2 ) // 3
n = 2
print ( sum ( n ) )


---> console_out:
8
 
MATCHED!! :D
 86%|████████▌ | 1497/1746 [15:10<00:22, 11.17it/s]

-------------------------------------


---> lineNum: 1498
---> probID: geeksforgeeks_2615_A
---> inputs:

---> outputs:
45


def maxHandshake ( n ) :
    return ( n * ( n - 1 ) ) // 2
if __name__ == '__main__' :
    n = 10
    print ( maxHandshake ( n ) )


---> console_out:
45
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1499
---> probID: geeksforgeeks_4781_A
---> inputs:

---> outputs:
15


def grayCode ( n ) :
    return n ^ ( n >> 1 )
if __name__ == '__main__' :
    n = 10
    print ( grayCode ( n ) )


---> console_out:
15
 
MATCHED!! :D
 86%|████████▌ | 1499/1746 [15:10<00:19, 12.47it/s]

-------------------------------------


---> lineNum: 1500
---> probID: geeksforgeeks_3803_A
---> inputs:

---> outputs:
28


def Max_Sum ( n ) :
    return ( n * ( n - 1 ) ) // 2
if __name__ == '__main__' :
    n = 8
    print ( Max_Sum ( n ) )


---> console_out:
28
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1501
---> probID: geeksforgeeks_2214_A
---> inputs:

---> outputs:
4


def possibleways ( n ) :
    if n % 2 == 1 :
        return 0
    elif n % 4 == 0 :
        return n // 4 - 1
    else :
        return n // 4
n = 20
print ( possibleways ( n ) )


---> console_out:
4
 
MATCHED!! :D
 86%|████████▌ | 1501/1746 [15:10<00:18, 13.42it/s]

-------------------------------------


---> lineNum: 1502
---> probID: geeksforgeeks_4734_A
---> inputs:

---> outputs:
3


def CountSetBits ( n ) :
    if n == 0 :
        return 0
    if n & 1 == 1 :
        return 1 + CountSetBits ( n >> 1 )
    else :
        return CountSetBits ( n >> 1 )
if __name__ == '__main__' :
    n = 21
    print ( CountSetBits ( n ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1503
---> probID: geeksforgeeks_5233_A
---> inputs:

---> outputs:
22


def sum ( m , n ) :
    return 8 * m * n - 6 * m - 6 * n + 4
m = 3
n = 2
print ( sum ( m , n ) )


---> console_out:
22
 
MATCHED!! :D
 86%|████████▌ | 1503/1746 [15:10<00:17, 13.91it/s]

-------------------------------------


---> lineNum: 1504
---> probID: geeksforgeeks_1793_A
---> inputs:

---> outputs:
SUM( 5 ,  3 ): 7260


def SUM ( n , m ) :
    if m == 1 :
        return ( n * ( n + 1 ) // 2 )
    sum = SUM ( n , m - 1 )
    return ( sum * ( sum + 1 ) // 2 )
n = 5
m = 3
print ( "SUM(" + str ( n ) + ", " + str ( m ) + "): " + str ( SUM ( n , m ) ) )


---> console_out:
SUM(5, 3): 7260
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1505
---> probID: geeksforgeeks_4715_A
---> inputs:

---> outputs:
6


def maxLCM ( n ) :
    return ( n * ( n - 1 ) )
n = 3
print ( maxLCM ( n ) )


---> console_out:
6
 
MATCHED!! :D
 86%|████████▌ | 1505/1746 [15:10<00:16, 14.70it/s]

-------------------------------------


---> lineNum: 1506
---> probID: geeksforgeeks_4825_A
---> inputs:

---> outputs:
20


def findSum ( n ) :
    return ( n * ( n + 1 ) * ( n + 1 ) * ( n + 2 ) ) // 12
n = 3
print ( findSum ( n ) )


---> console_out:
20
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1507
---> probID: geeksforgeeks_2240_A
---> inputs:

---> outputs:
4


def cntWays ( n ) :
    if n % 2 == 1 :
        return 0
    else :
        return ( n - 2 ) // 4
n = 18
print ( cntWays ( n ) )


---> console_out:
4
 
MATCHED!! :D
 86%|████████▋ | 1507/1746 [15:10<00:15, 15.40it/s]

-------------------------------------


---> lineNum: 1508
---> probID: geeksforgeeks_3669_A
---> inputs:

---> outputs:
36 32


def find_composite_nos ( n ) :
    print ( 9 * n , 8 * n )
if __name__ == '__main__' :
    n = 4
    find_composite_nos ( n )


---> console_out:
36 32
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1509
---> probID: geeksforgeeks_3562_A
---> inputs:

---> outputs:
1


def findThirdDigit ( n ) :
    if n < 3 :
        return 0
    return 1 if n & 1 else 6
if __name__ == '__main__' :
    n = 7
    print ( findThirdDigit ( n ) )


---> console_out:
1
 
MATCHED!! :D
 86%|████████▋ | 1509/1746 [15:11<00:16, 14.74it/s]

-------------------------------------


---> lineNum: 1510
---> probID: geeksforgeeks_3637_A
---> inputs:

---> outputs:
28


def countMaxIntersect ( n ) :
    return ( n ) * ( n - 1 ) // 2
if __name__ == '__main__' :
    n = 8
    print ( countMaxIntersect ( n ) )


---> console_out:
28
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1511
---> probID: geeksforgeeks_2019_A
---> inputs:

---> outputs:
8


def sum ( n ) :
    if n == 1 :
        return 2
    else :
        return n * ( n + 1 ) + sum ( n - 1 )
n = 2
print ( sum ( n ) )


---> console_out:
8
 
MATCHED!! :D
 87%|████████▋ | 1511/1746 [15:11<00:15, 15.47it/s]

-------------------------------------


---> lineNum: 1512
---> probID: geeksforgeeks_2936_A
---> inputs:

---> outputs:
16


def highestPowerOf2 ( n ) :
    return ( n & ( ~ ( n - 1 ) ) )
n = 48
print ( highestPowerOf2 ( n ) )


---> console_out:
16
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1513
---> probID: geeksforgeeks_3117_A
---> inputs:

---> outputs:
3


def countIntersections ( n ) :
    return n * ( n - 1 ) // 2
if __name__ == '__main__' :
    n = 3
    print ( countIntersections ( n ) )


---> console_out:
3
 
MATCHED!! :D
 87%|████████▋ | 1513/1746 [15:11<00:16, 14.19it/s]

-------------------------------------


---> lineNum: 1514
---> probID: atcoder_ABC071_B
---> inputs:
atcoderregularcontest
---> outputs:
b

import sys
s = input ( )
c = "None"
for i in range ( ord ( 'a' ) , ord ( 'z' ) + 1 ) :
    if chr ( i ) not in s :
        c = chr ( i )
        break
print ( c )


---> console_out:
b
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1515
---> probID: codeforces_299_A
---> inputs:
3
2 2 4
---> outputs:
2

import sys
n = int ( input ( ) )
arr = list ( map ( int , input ( ) . split ( ) ) )
arr . sort ( )
if arr [ 0 ] == 1 :
    print ( 1 )
    sys . exit ( )
elif n == 1 :
    print ( arr [ 0 ] )
    sys . exit ( )
yes = True
for i in range ( 1 , n ) :
    if arr [ i ] % arr [ 0 ] != 0 :
        yes = False
        break
if yes :
    print ( arr [ 0 ] )
else :
    print ( - 1 )


---> console_out:
2
 
MATCHED!! :D
 87%|████████▋ | 1515/1746 [15:11<00:15, 14.79it/s]

-------------------------------------


---> lineNum: 1516
---> probID: atcoder_ABC053_A
---> inputs:
1000
---> outputs:
ABC

import sys
def main ( ) :
    input = sys . stdin . readline
    n = int ( input ( ) )
    print ( "ABC" if n < 1200 else "ARC" )
if __name__ == '__main__' :
    main ( )


---> console_out:
ABC
 
MATCHED!! :D
out1,out2 10000000010 201000100000102030


-------------------------------------


---> lineNum: 1517
---> probID: codeforces_803_B
---> inputs:
9
2 1 0 3 0 0 3 2 4
---> outputs:
2 1 0 1 0 0 1 2 3

import sys
maxElementValue = 10 ** 9
def main ( ) :
    elements = list ( map ( int , sys . stdin . readline ( ) . strip ( ) . split ( ) ) )
    rightDistance = [ 0 ] * ( len ( elements ) + 1 )
    rightDistance [ - 1 ] = maxElementValue
    leftDistance = [ 0 ] * ( len ( elements ) + 1 )
    leftDistance [ 0 ] = maxElementValue
    for i in range ( len ( elements ) - 1 , - 1 , - 1 ) :
        if elements [ i ] == 0 :
            rightDistance [ i ] = 0
        else :
            rightDistance [ i ] = rightDistance [ i + 1 ] + 1
    for j in range ( 1 , len ( elements ) + 1 ) :
        if elements [ j - 1 ] == 0 :
            leftDistance [ j ] = 0
        else :
            leftDistance [ j ] = leftDistance [ j - 1 ] + 1
    for i in range ( len ( elements ) ) :
        print ( min ( rightDistance [ i ] , leftDistance [ i + 1 ] ) , end = "" )
        if i + 1 < len ( elements ) :
            print ( " " , end = "" )
    print ( )
if __name__ == "__main__" :
    main ( )


---> console_out:
1000000001
 
DIDN'T MATCH!! :(
 87%|████████▋ | 1517/1746 [15:11<00:15, 14.98it/s]

-------------------------------------


---> lineNum: 1518
---> probID: geeksforgeeks_4744_A
---> inputs:

---> outputs:
Minimum of 3 numbers is 5


def smallest ( x , y , z ) :
    c = 0
    while x != 0 and y != 0 and z != 0 :
        x -= 1
        y -= 1
        z -= 1
        c += 1
    return c
x , y , z = 12 , 15 , 5
print ( "Minimum of 3 numbers is" , smallest ( x , y , z ) )


---> console_out:
Minimum of 3 numbers is 5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1519
---> probID: aizu_p00291_A
---> inputs:
3 1 4 0 4 1
---> outputs:
0

import sys
c1 , c5 , c10 , c50 , c100 , c500 = map ( int , sys . stdin . readline ( ) . split ( ) )
if c1 + c5 * 5 + c10 * 10 + c50 * 50 + c100 * 100 + c500 * 500 < 1000 :
    print ( "0" )
else :
    print ( "1" )


---> console_out:
0
 
MATCHED!! :D
 87%|████████▋ | 1519/1746 [15:11<00:15, 14.91it/s]Traceback (most recent call last):
  File "./junk/1703784596899_7304/main.py", line 34, in <module>
    main ( )
  File "./junk/1703784596899_7304/main.py", line 29, in main
    m = in_ . nextLong ( )
  File "./junk/1703784596899_7304/main.py", line 22, in nextLong
    return int ( self . next ( ) )
  File "./junk/1703784596899_7304/main.py", line 9, in next
    self . st = StringTokenizer ( self . br . readline ( ) )
NameError: name 'StringTokenizer' is not defined
out1,out2  20


-------------------------------------


---> lineNum: 1520
---> probID: codeforces_336_B
---> inputs:
1 1
---> outputs:
2.0000000000

import sys
from math import sqrt
class FastReader :
    def __init__ ( self ) :
        self . st = None
        self . br = sys . stdin
    def next ( self ) :
        if self . st is None or not self . st . hasMoreTokens ( ) :
            self . st = StringTokenizer ( self . br . readline ( ) )
        return self . st . nextToken ( )
    def hasNext ( self ) :
        if self . st is not None and self . st . hasMoreTokens ( ) :
            return True
        s = self . br . readline ( )
        if s is None or s == '' :
            return False
        self . st = StringTokenizer ( s )
        return True
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return self . br . readline ( )
def main ( ) :
    in_ = FastReader ( )
    m = in_ . nextLong ( )
    R = in_ . nextLong ( )
    result = ( 2 + 2. * ( m - 1 ) * m * ( m + 1 ) / 3 / m / m - 2 * ( 2 - sqrt ( 2 ) ) + ( 2 - sqrt ( 2 ) ) * ( 2 * m + 2 * ( m - 1 ) ) / m / m ) * R
    print ( "{:.12f}" . format ( result ) )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1521
---> probID: geeksforgeeks_5068_A
---> inputs:

---> outputs:
Count of cubes is 2


import math
def countCubes ( a , b ) :
    return int ( math . floor ( math . pow ( b , 1 / 3 ) ) - math . ceil ( math . pow ( a , 1 / 3 ) ) + 1 )
a = 7
b = 28
print ( "Count of cubes is" , countCubes ( a , b ) )


---> console_out:
Count of cubes is 2
 
MATCHED!! :D
 87%|████████▋ | 1521/1746 [15:11<00:14, 15.20it/s]

-------------------------------------


---> lineNum: 1522
---> probID: aizu_p00283_A
---> inputs:
15 4
1 1 0
1 2 2
5 10 5
8 1 15
60 4
5 2 0
8 8 2
3 5 0
49 0 18
100 1
1 1 1
0 0
---> outputs:
6
4
NA

import sys
INF = 1 << 30
def main ( ) :
    while True :
        D , N = map ( int , sys . stdin . readline ( ) . split ( ) )
        if D == 0 and N == 0 :
            break
        a = [ 0 ] * N
        e = [ 0 ] * N
        r = [ 0 ] * N
        for i in range ( N ) :
            aa , ee , rr = map ( int , sys . stdin . readline ( ) . split ( ) )
            a [ i ] = aa
            e [ i ] = ee
            r [ i ] = rr
        dp = [ [ INF ] * 101 for _ in range ( D + 1 ) ]
        dp [ D ] [ 0 ] = 0
        for i in range ( D , 0 , - 1 ) :
            for j in range ( 101 ) :
                if dp [ i ] [ j ] == INF :
                    continue
                for k in range ( N ) :
                    if j < r [ k ] :
                        continue
                    dp [ max ( 0 , i - a [ k ] ) ] [ min ( 100 , j + e [ k ] ) ] = min ( dp [ max ( 0 , i - a [ k ] ) ] [ min ( 100 , j + e [ k ] ) ] , dp [ i ] [ j ] + 1 )
        ret = INF
        for i in range ( 101 ) :
            ret = min ( ret , dp [ 0 ] [ i ] )
        print ( "NA" if ret == INF else ret )
if __name__ == "__main__" :
    main ( )


---> console_out:
6
4
NA
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1523
---> probID: projecteuler_p012_A
---> inputs:

---> outputs:
76576500

class p012 :
    def main ( self ) :
        print ( self . run ( ) )
    def run ( self ) :
        triangle = 0
        i = 1
        while True :
            if ( 2147483647 - triangle ) < i :
                raise ArithmeticError ( "Overflow" )
            triangle += i
            if self . countDivisors ( triangle ) > 500 :
                return str ( triangle )
            i += 1
    @ staticmethod
    def countDivisors ( n ) :
        count = 0
        end = int ( n ** 0.5 )
        for i in range ( 1 , end ) :
            if n % i == 0 :
                count += 2
        if end * end == n :
            count += 1
        return count
p = p012 ( )
p . main ( )


---> console_out:
76576500
 
MATCHED!! :D
 87%|████████▋ | 1523/1746 [15:17<03:32,  1.05it/s]

-------------------------------------


---> lineNum: 1524
---> probID: geeksforgeeks_1739_A
---> inputs:

---> outputs:
ΔX = 6


import math
def findDelta ( a , b , c , d ) :
    return ( b * c - a * d ) // ( d - c )
a , b , c , d = 3 , 9 , 3 , 5
print ( "\u0394X = " , findDelta ( a , b , c , d ) )


---> console_out:
ΔX =  6
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1525
---> probID: geeksforgeeks_2005_A
---> inputs:

---> outputs:
3 71


def SieveOfEratosthenes ( n , isPrime ) :
    isPrime [ 0 ] = isPrime [ 1 ] = False
    for i in range ( 2 , n + 1 ) :
        isPrime [ i ] = True
    p = 2
    while p * p <= n :
        if isPrime [ p ] :
            for i in range ( p * p , n + 1 , p ) :
                isPrime [ i ] = False
        p += 1
def findPrimePair ( n ) :
    isPrime = [ False ] * ( n + 1 )
    SieveOfEratosthenes ( n , isPrime )
    for i in range ( n ) :
        if isPrime [ i ] and isPrime [ n - i ] :
            print ( i , n - i )
            return
n = 74
findPrimePair ( n )


---> console_out:
3 71
 
MATCHED!! :D
 87%|████████▋ | 1525/1746 [15:18<02:32,  1.45it/s]

-------------------------------------


---> lineNum: 1526
---> probID: geeksforgeeks_194_A
---> inputs:

---> outputs:
545


def replaceDigit ( x , d1 , d2 ) :
    result , multiply = 0 , 1
    while x % 10 > 0 :
        remainder = x % 10
        if remainder == d1 :
            result = result + d2 * multiply
        else :
            result = result + remainder * multiply
        multiply *= 10
        x = x // 10
    return result
if __name__ == '__main__' :
    x , d1 , d2 = 645 , 6 , 5
    print ( replaceDigit ( x , d1 , d2 ) )


---> console_out:
545
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1527
---> probID: geeksforgeeks_1140_A
---> inputs:

---> outputs:
\*******/
*\*****/*
**\***/**
***\*/***
****/****
***/*\***
**/***\**
*/*****\*
/*******\


def printPattern ( i , j , n ) :
    if j >= n :
        return 0
    if i >= n :
        return 1
    if j == i or j == n - 1 - i :
        if i == n - 1 - j :
            print ( "/" )
        else :
            print ( "\\" )
    else :
        print ( "*" )
    if printPattern ( i , j + 1 , n ) == 1 :
        return 1
    print ( )
    return printPattern ( i + 1 , 0 , n )
N = 9
printPattern ( 0 , 0 , N )


---> console_out:
\
*
*
*
*
*
*
*
/

*
\
*
*
*
*
*
/
*

*
*
\
*
*
*
/
*
*

*
*
*
\
*
/
*
*
*

*
*
*
*
/
*
*
*
*

*
*
*
/
*
\
*
*
*

*
*
/
*
*
*
\
*
*

*
/
*
*
*
*
*
\
*

/
*
*
*
*
*
*
*
\

 
MATCHED!! :D
 87%|████████▋ | 1527/1746 [15:18<01:49,  2.00it/s]

-------------------------------------


---> lineNum: 1528
---> probID: geeksforgeeks_4201_A
---> inputs:

---> outputs:
Count of pairs is 3


from collections import defaultdict
arr = [ 1 , 5 , 7 , - 1 , 5 ]
def getPairsCount ( n , sum ) :
    hm = defaultdict ( int )
    for i in range ( n ) :
        hm [ arr [ i ] ] += 1
    twice_count = 0
    for i in range ( n ) :
        if hm [ sum - arr [ i ] ] != 0 :
            twice_count += hm [ sum - arr [ i ] ]
        if sum - arr [ i ] == arr [ i ] :
            twice_count -= 1
    return twice_count // 2
sum = 6
print ( "Count of pairs is" , getPairsCount ( len ( arr ) , sum ) )


---> console_out:
Count of pairs is 3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1529
---> probID: geeksforgeeks_2910_A
---> inputs:

---> outputs:
5


import numpy as np
def Count_subarray ( arr , n ) :
    count = 0
    for i in range ( n ) :
        for j in range ( i , n ) :
            subarray_sum = np . sum ( arr [ i : j + 1 ] )
            remaining_sum = np . sum ( arr [ : i ] ) + np . sum ( arr [ j + 1 : ] )
            if subarray_sum > remaining_sum :
                count += 1
    return count
arr = [ 10 , 9 , 12 , 6 ]
n = len ( arr )
print ( Count_subarray ( arr , n ) )


---> console_out:
5
 
MATCHED!! :D
 88%|████████▊ | 1529/1746 [15:18<01:26,  2.50it/s]

-------------------------------------


---> lineNum: 1530
---> probID: codeforces_1257_A
---> inputs:
3
5 1 3 2
100 33 100 1
6 0 2 3
---> outputs:
2
99
1

import sys
t = int ( input ( ) )
for i in range ( t ) :
    n , x , a , b = map ( int , input ( ) . split ( ) )
    times = min ( a , b ) - 1 + n - max ( a , b )
    if times > x :
        print ( n - 1 - ( times - x ) )
    else :
        print ( n - 1 )


---> console_out:
2
99
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1531
---> probID: atcoder_ARC075_A
---> inputs:
6
1
2
3
4
5
6
---> outputs:
21


import sys
N = int ( input ( ) )
sum = 0
a = [ ]
for i in range ( N ) :
    tmp = int ( input ( ) )
    sum += tmp
    if tmp % 10 != 0 :
        a . append ( tmp )
a . sort ( )
i = 0
while sum % 10 == 0 and i < len ( a ) :
    sum -= a [ i ]
    i += 1
if sum % 10 == 0 :
    sum = 0
print ( sum )


---> console_out:
21
 
MATCHED!! :D
 88%|████████▊ | 1531/1746 [15:18<01:04,  3.36it/s]  File "./junk/1703784603782_7245/main.py", line 5
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  306020


-------------------------------------


---> lineNum: 1532
---> probID: codeforces_1415_B
---> inputs:
3
10 2
1 1 2 2 1 1 2 2 2 1
7 1
1 2 3 4 5 6 7
10 3
1 3 3 3 3 1 2 1 3 3
---> outputs:
3
6
2

import java . util . Scanner
from java . util import ArrayList
class RepaintingStreet :
    def main ( args : list ) :
        sc = Scanner ( System . in )
        t = sc . nextInt ( )
        while t > 0 :
            n = sc . nextInt ( )
            k = sc . nextInt ( )
            a = [ 0 ] * n
            l = ArrayList ( )
            for i in range ( n ) :
                a [ i ] = sc . nextInt ( )
                if a [ i ] not in l :
                    l . add ( a [ i ] )
            ans = float ( 'inf' )
            for j in range ( l . size ( ) ) :
                moves = 0
                big = l . get ( j )
                i = 0
                while i < n :
                    if a [ i ] == big :
                        i += 1
                        continue
                    moves += 1
                    i += k
                ans = min ( moves , ans )
            print ( ans )
            t -= 1
RepaintingStreet . main ( None )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784603844_3299/main.py", line 22, in <module>
    print ( "One of the numbers repeated in the array is:" , findRepeatingNumber ( arr , n ) )
  File "./junk/1703784603844_3299/main.py", line 6, in findRepeatingNumber
    for i in range ( n + 1 ) :
TypeError: 'int' object is not callable
out1,out2  oneofthenumbersrepeatedinthearrayis10


-------------------------------------


---> lineNum: 1533
---> probID: geeksforgeeks_1980_A
---> inputs:

---> outputs:
One of the numbers repeated in the array is: 1


import math
def findRepeatingNumber ( arr , n ) :
    sq = int ( math . sqrt ( n ) )
    range = ( n // sq ) + 1
    count = [ 0 ] * range
    for i in range ( n + 1 ) :
        count [ ( arr [ i ] - 1 ) // sq ] += 1
    selected_block = range - 1
    for i in range ( range - 1 ) :
        if count [ i ] > sq :
            selected_block = i
            break
    m = { }
    for i in range ( n + 1 ) :
        if ( selected_block * sq ) < arr [ i ] <= ( ( selected_block + 1 ) * sq ) :
            m [ arr [ i ] ] = 1
            if m . get ( arr [ i ] ) == 1 :
                return arr [ i ]
    return - 1
arr = [ 1 , 1 , 2 , 3 , 5 , 4 ]
n = 5
print ( "One of the numbers repeated in the array is:" , findRepeatingNumber ( arr , n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 88%|████████▊ | 1533/1746 [15:18<00:48,  4.40it/s]

-------------------------------------


---> lineNum: 1534
---> probID: geeksforgeeks_520_A
---> inputs:

---> outputs:
5
328513


import math
def maxPrimeFactors ( n ) :
    maxPrime = - 1
    while n % 2 == 0 :
        maxPrime = 2
        n >>= 1
    for i in range ( 3 , int ( math . sqrt ( n ) ) + 1 , 2 ) :
        while n % i == 0 :
            maxPrime = i
            n //= i
    if n > 2 :
        maxPrime = n
    return maxPrime
n = 15
print ( maxPrimeFactors ( n ) )
n = 25698751364526
print ( maxPrimeFactors ( n ) )


---> console_out:
5
328513
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784604140_9141/main.py", line 24, in <module>
    n = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '2 4 3 6 8'
out1,out2  1000


-------------------------------------


---> lineNum: 1535
---> probID: codeforces_1691_A
---> inputs:
2
5
2 4 3 6 8
6
3 5 9 7 1 3
---> outputs:
1
0

import math
class Beat :
    def __init__ ( self , number ) :
        self . number = number
    def getNumber ( self ) :
        return self . number
    numberEven = 0
    numberOdd = 0
    def input ( self , number ) :
        if number % 2 == 0 :
            Beat . numberEven += 1
        else :
            Beat . numberOdd += 1
    def printResult ( self ) :
        print ( min ( Beat . numberEven , Beat . numberOdd ) )
        Beat . numberEven = 0
        Beat . numberOdd = 0
if __name__ == '__main__' :
    number = int ( input ( ) )
    instance = Beat ( number )
    for i in range ( instance . getNumber ( ) ) :
        num = int ( input ( ) )
        for k in range ( num ) :
            n = int ( input ( ) )
            instance . input ( n )
        instance . printResult ( )


---> console_out:
 
DIDN'T MATCH!! :(
 88%|████████▊ | 1535/1746 [15:19<00:42,  4.92it/s]

-------------------------------------


---> lineNum: 1536
---> probID: atcoder_ABC120_C
---> inputs:
0
---> outputs:
0

import sys
s1 = input ( )
ans = 0
c1 = 0
c0 = 0
for i in range ( len ( s1 ) ) :
    if s1 [ i ] == '1' :
        if c0 > 0 :
            c0 -= 1
            ans += 1
        else :
            c1 += 1
    else :
        if c1 > 0 :
            c1 -= 1
            ans += 1
        else :
            c0 += 1
print ( ans * 2 )


---> console_out:
0
 
MATCHED!! :D
out1,out2 304050 304050


-------------------------------------


---> lineNum: 1537
---> probID: geeksforgeeks_5215_A
---> inputs:

---> outputs:
3, 4, 5


def pythagoreanTriplet ( n ) :
    for i in range ( 1 , n // 3 + 1 ) :
        for j in range ( i + 1 , n // 2 + 1 ) :
            k = n - i - j
            if i * i + j * j == k * k :
                print ( i , j , k )
                return
    print ( "No Triplet" )
n = 12
pythagoreanTriplet ( n )


---> console_out:
3 4 5
 
MATCHED!! :D
 88%|████████▊ | 1537/1746 [15:19<00:33,  6.24it/s]Traceback (most recent call last):
  File "./junk/1703784604322_2969/main.py", line 7, in <module>
    print ( countDigits ( a , b ) )
  File "./junk/1703784604322_2969/main.py", line 4, in countDigits
    return int ( math . floor ( math . log10 ( abs ( a ) ) + math . log10 ( abs ( b ) ) ) + 1 )
NameError: name 'math' is not defined
out1,out2  30


-------------------------------------


---> lineNum: 1538
---> probID: geeksforgeeks_2224_A
---> inputs:

---> outputs:
3


def countDigits ( a , b ) :
    if a == 0 or b == 0 :
        return 1
    return int ( math . floor ( math . log10 ( abs ( a ) ) + math . log10 ( abs ( b ) ) ) + 1 )
a = 33
b = - 24
print ( countDigits ( a , b ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1539
---> probID: geeksforgeeks_5039_A
---> inputs:

---> outputs:
Index =  2


import math
def indexOfFirstOne ( arr , low , high ) :
    mid = 0
    while low <= high :
        mid = math . floor ( ( low + high ) / 2 )
        if arr [ mid ] == 1 and ( mid == 0 or arr [ mid - 1 ] == 0 ) :
            break
        elif arr [ mid ] == 1 :
            high = mid - 1
        else :
            low = mid + 1
    return mid
def posOfFirstOne ( arr ) :
    l = 0
    h = 1
    while arr [ h ] == 0 :
        l = h
        h = 2 * h
    return indexOfFirstOne ( arr , l , h )
arr = [ 0 , 0 , 1 , 1 , 1 , 1 ]
print ( "Index = " , posOfFirstOne ( arr ) )


---> console_out:
Index =  2
 
MATCHED!! :D
 88%|████████▊ | 1539/1746 [15:19<00:26,  7.68it/s]

-------------------------------------


---> lineNum: 1540
---> probID: codeforces_669_A
---> inputs:
1
---> outputs:
1

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = ""
    def next ( self ) :
        while not self . st or len ( self . st . split ( ) ) == 0 :
            self . st = self . br ( ) . strip ( )
        ret = self . st . split ( ) [ 0 ]
        self . st = " " . join ( self . st . split ( ) [ 1 : ] )
        return ret
    def read_array ( self , n ) :
        a = [ ]
        for i in range ( n ) :
            a . append ( self . next_int ( ) )
        return a
    def next_int ( self ) :
        return int ( self . next ( ) )
    def next_long ( self ) :
        return int ( self . next ( ) )
def main ( ) :
    fr = FastReader ( )
    n = fr . next_int ( )
    sum = 0
    total = 0
    i = 1
    if n == 2 :
        print ( 1 )
        return
    while n > 0 :
        n -= 1
        if n > 0 :
            if n >= 2 :
                total += 1
            n -= 2
        total += 1
    print ( total )
if __name__ == "__main__" :
    main ( )


---> console_out:
1
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784604503_8507/main.py", line 62, in <module>
    Main . main ( )
  File "./junk/1703784604503_8507/main.py", line 11, in main
    d = Doctor ( num )
NameError: name 'Doctor' is not defined
out1,out2  101111na


-------------------------------------


---> lineNum: 1541
---> probID: aizu_p00220_A
---> inputs:
23.5
158.1
-1.0
---> outputs:
00010111.1000
NA

import math
class Main :
    def main ( ) :
        num = 0
        sc = Scanner ( )
        d = None
        while True :
            num = sc . nextDouble ( )
            if num < 0 :
                break
            d = Doctor ( num )
            if d . judge ( ) :
                print ( d . getBD ( ) )
            else :
                print ( "NA" )
    class Doctor :
        def __init__ ( self , num ) :
            self . num = num
            self . bd = ""
            self . integers = int ( num )
            self . decimals = round ( num - self . integers , 4 )
        def judge ( self ) :
            if self . integers > 255 or self . decimals > 0.9375 :
                return False
            return True
        def toBinaryDigits ( self ) :
            tmp = ""
            count = 1
            i = self . integers
            while i > 0 :
                tmp += str ( i % 2 )
                i //= 2
            sb = tmp [ : : - 1 ]
            for i in range ( 8 - len ( tmp ) ) :
                self . bd += "0"
            self . bd += sb + "."
            while True :
                if self . decimals == 0 :
                    self . bd += "0000"
                    break
                if count > 4 :
                    return False
                self . decimals *= 2
                if self . decimals >= 1 :
                    self . decimals -= 1
                    self . bd += "1"
                    if self . decimals == 0 :
                        for i in range ( 4 - count ) :
                            self . bd += "0"
                        break
                else :
                    self . bd += "0"
                count += 1
            return True
        def getBD ( self ) :
            if self . toBinaryDigits ( ) :
                return self . bd
            return "NA"
class Scanner :
    def nextDouble ( self ) :
        return float ( input ( ) )
Main . main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 88%|████████▊ | 1541/1746 [15:19<00:22,  9.09it/s]

-------------------------------------


---> lineNum: 1542
---> probID: geeksforgeeks_233_A
---> inputs:

---> outputs:
x =  35


def digSum ( n ) :
    sum = 0
    rem = 0
    while n > 0 :
        rem = n % 10
        sum += rem
        n //= 10
    return sum
def findX ( n ) :
    for i in range ( n + 1 ) :
        if i + digSum ( i ) == n :
            return i
    return - 1
n = 43
print ( "x =" , findX ( n ) )


---> console_out:
x = 35
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1543
---> probID: atcoder_AGC024_B
---> inputs:
1
1
---> outputs:
0

import math
mod = int ( math . pow ( 10 , 9 ) + 7 )
N = int ( input ( ) )
a = [ 0 ] * N
for i in range ( N ) :
    a [ int ( input ( ) ) - 1 ] = i
ans = 1
cnt = 1
for i in range ( N ) :
    if i != N - 1 and a [ i ] < a [ i + 1 ] :
        cnt += 1
    else :
        ans = max ( ans , cnt )
        cnt = 1
ans = max ( ans , cnt )
ans = N - ans
print ( ans )


---> console_out:
0
 
MATCHED!! :D
 88%|████████▊ | 1543/1746 [15:19<00:19, 10.23it/s]  File "./junk/1703784604706_7485/main.py", line 4
    scanner = Scanner ( System . in )
                                 ^
SyntaxError: invalid syntax
out1,out2  110190105010130200


-------------------------------------


---> lineNum: 1544
---> probID: aizu_p00271_A
---> inputs:
30 19
39 20
19 18
25 20
22 21
23 10
10 -10
---> outputs:
11
19
1
5
1
13
20

import java . util . Scanner
class Main :
    def compute ( self ) :
        scanner = Scanner ( System . in )
        for i in range ( 7 ) :
            nHigh = scanner . nextInt ( )
            nLow = scanner . nextInt ( )
            print ( nHigh - nLow )
    def main ( self ) :
        Main ( ) . compute ( )
if __name__ == "__main__" :
    Main ( ) . main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1545
---> probID: geeksforgeeks_3731_A
---> inputs:

---> outputs:
No
Yes
Yes


import numpy as np
class GFG :
    class pair :
        def __init__ ( self , first , second ) :
            self . first = first
            self . second = second
    @ staticmethod
    def performQueries ( A , q ) :
        n = len ( A )
        pref_xor = np . zeros ( n + 1 , dtype = int )
        for i in range ( 1 , n + 1 ) :
            pref_xor [ i ] = pref_xor [ i - 1 ] ^ A [ i - 1 ]
        for i in q :
            L , R = i . first , i . second
            if L > R :
                L , R = R , L
            if L != R and pref_xor [ R ] == pref_xor [ L - 1 ] :
                print ( "Yes" )
            else :
                print ( "No" )
    @ staticmethod
    def main ( ) :
        Arr = np . array ( [ 1 , 1 , 2 , 2 , 1 ] )
        q = [ GFG . pair ( 1 , 5 ) , GFG . pair ( 1 , 4 ) , GFG . pair ( 3 , 4 ) ]
        GFG . performQueries ( Arr , q )
GFG . main ( )


---> console_out:
No
Yes
Yes
 
MATCHED!! :D
 88%|████████▊ | 1545/1746 [15:19<00:23,  8.56it/s]

-------------------------------------


---> lineNum: 1546
---> probID: codeforces_682_B
---> inputs:
5
1 3 3 3 6
---> outputs:
5

import sys
n = int ( input ( ) )
lst = list ( map ( int , input ( ) . split ( ) ) )
lst . sort ( )
c = 1
for i in range ( n ) :
    if lst [ i ] >= c :
        c += 1
print ( c )


---> console_out:
5
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784605090_5803/main.py", line 2, in <module>
    N = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '3 1 2 3'
out1,out2  27


-------------------------------------


---> lineNum: 1547
---> probID: codeforces_215_B
---> inputs:
3 1 2 3
1 2
3 3 2 1
1 2
---> outputs:
2.683281573000

import math
N = int ( input ( ) )
R1 = list ( map ( int , input ( ) . split ( ) ) )
M = int ( input ( ) )
P1 = list ( map ( int , input ( ) . split ( ) ) )
K = int ( input ( ) )
P2 = list ( map ( int , input ( ) . split ( ) ) )
A , B = map ( int , input ( ) . split ( ) )
maxR1 = max ( R1 )
maxP1 = max ( P1 )
minP2 = min ( P2 )
r2 = math . sqrt ( maxR1 * maxR1 * B * maxP1 / ( A * minP2 + B * maxP1 ) )
print ( r2 )


---> console_out:
 
DIDN'T MATCH!! :(
 89%|████████▊ | 1547/1746 [15:20<00:19,  9.96it/s]Traceback (most recent call last):
  File "./junk/1703784605153_1538/main.py", line 24, in <module>
    main ( )
  File "./junk/1703784605153_1538/main.py", line 22, in main
    trapeziumPattern ( 3 )
  File "./junk/1703784605153_1538/main.py", line 13, in trapeziumPattern
    print ( ( firsthalf ) + "*" , end = "" )
TypeError: unsupported operand type(s) for +: 'int' and 'str'
out1,out2  102030100110120405080906070


-------------------------------------


---> lineNum: 1548
---> probID: geeksforgeeks_4317_A
---> inputs:

---> outputs:
 1*2*3*10*11*12
  4*5*8*9
   6*7
    


def trapeziumPattern ( num ) :
    firsthalf = 1
    secondhalf = ( num * num ) + 1
    numOfSpaces = 0
    for numOfLines in range ( num , 0 , - 1 ) :
        for numOfSpacesCounter in range ( numOfSpaces , 0 , - 1 ) :
            print ( " " , end = "" )
        for firstHalfCounter in range ( 1 , numOfLines + 1 ) :
            if firstHalfCounter == numOfLines :
                print ( ( firsthalf ) , end = "" )
                firsthalf += 1
            else :
                print ( ( firsthalf ) + "*" , end = "" )
                firsthalf += 1
        for secondHalfCounter in range ( 1 , numOfLines + 1 ) :
            print ( "*" + str ( secondhalf ) , end = "" )
            secondhalf += 1
        print ( )
        numOfSpaces += 2
        secondhalf = ( secondhalf - 1 ) - ( ( numOfLines - 1 ) * 2 )
def main ( ) :
    trapeziumPattern ( 3 )
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1549
---> probID: geeksforgeeks_4964_A
---> inputs:

---> outputs:
2 4 1 3 


import collections
def findPerm ( n , differences ) :
    ans = [ 0 ]
    x = 0
    for i in range ( n - 1 ) :
        diff = differences [ i ]
        x += diff
        ans . append ( x )
    anss = ans [ : ]
    ans . sort ( )
    flag = - 1
    for i in range ( 1 , n ) :
        res = ans [ i ] - ans [ i - 1 ]
        if res != 1 :
            flag = 0
    if flag == 0 :
        print ( - 1 )
        return
    else :
        mpp = { }
        j = 1
        value_at_index = [ ]
        for x1 in ans :
            mpp [ x1 ] = j
            j += 1
        for x2 in anss :
            value_at_index . append ( mpp [ x2 ] )
        for x3 in value_at_index :
            print ( x3 , end = " " )
        print ( )
if __name__ == '__main__' :
    differences = [ 2 , - 3 , 2 ]
    n = len ( differences ) + 1
    findPerm ( n , differences )


---> console_out:
2 4 1 3 
 
MATCHED!! :D
 89%|████████▊ | 1549/1746 [15:20<00:18, 10.80it/s]

-------------------------------------


---> lineNum: 1550
---> probID: geeksforgeeks_2161_A
---> inputs:

---> outputs:
First 10 2-almost prime numbers:
4 6 9 10 14 15 21 22 25 26 

import math
def countPrimeFactors ( n ) :
    count = 0
    while n % 2 == 0 :
        n = n / 2
        count += 1
    for i in range ( 3 , int ( math . sqrt ( n ) ) + 1 , 2 ) :
        while n % i == 0 :
            n = n / i
            count += 1
    if n > 2 :
        count += 1
    return count
def printKAlmostPrimes ( k , n ) :
    i = 1
    num = 2
    while i <= n :
        if countPrimeFactors ( num ) == k :
            print ( num , end = " " )
            i += 1
        num += 1
n = 10
k = 2
print ( "First" , n , k , "-almost prime numbers:" )
printKAlmostPrimes ( k , n )


---> console_out:
First 10 2 -almost prime numbers:
4 6 9 10 14 15 21 22 25 26  
MATCHED!! :D


-------------------------------------


---> lineNum: 1551
---> probID: geeksforgeeks_589_A
---> inputs:

---> outputs:
603


def solve ( N , K ) :
    combo = [ 0 ] * 50
    combo [ 0 ] = 1
    for i in range ( 1 , K + 1 ) :
        for j in range ( N + 1 ) :
            if j >= i :
                combo [ j ] += combo [ j - i ]
    return combo [ N ]
if __name__ == '__main__' :
    N = 29
    K = 5
    print ( solve ( N , K ) )
    solve ( N , K )


---> console_out:
603
 
MATCHED!! :D
 89%|████████▉ | 1551/1746 [15:20<00:17, 11.43it/s]

-------------------------------------


---> lineNum: 1552
---> probID: aizu_p00233_A
---> inputs:
9
10
-10
-1944
-305432133
0
---> outputs:
9
190
10
2156
1715573947

import sys
class Main :
    def main ( self ) :
        self . run ( )
    def run ( self ) :
        scanner = sys . stdin
        while True :
            x = int ( scanner . readline ( ) )
            if x == 0 :
                break
            sign = x > 0
            builder = [ ]
            x = abs ( x )
            while x > 0 :
                t = x % 10
                if not sign and t != 0 :
                    t = 10 - t
                    x += 10
                builder . insert ( 0 , str ( t ) )
                sign = not sign
                x //= 10
            print ( '' . join ( builder ) )
if __name__ == '__main__' :
    Main ( ) . main ( )


---> console_out:
9
190
10
2156
1715573947
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1553
---> probID: geeksforgeeks_3656_A
---> inputs:

---> outputs:
2.5724787771376323


def normal ( m , n ) :
    N = abs ( m ) * abs ( n ) / ( ( abs ( m ) ** 2 + abs ( n ) ** 2 ) ** 0.5 )
    return N
m , n = - 5 , 3
print ( normal ( m , n ) )


---> console_out:
2.5724787771376323
 
MATCHED!! :D
 89%|████████▉ | 1553/1746 [15:20<00:15, 12.24it/s]out1,out2 1216 1216


-------------------------------------


---> lineNum: 1554
---> probID: codeforces_794_B
---> inputs:
3 2
---> outputs:
1.154700538379 1.632993161855

import sys
str = input ( )
num = str . split ( " " )
n = float ( num [ 0 ] )
h = float ( num [ 1 ] )
for i in range ( 1 , int ( n ) ) :
    ans = h * ( i / n ) ** 0.5
    sys . stdout . write ( "{:.6f} " . format ( ans ) )
    if i == n - 1 :
        sys . stdout . write ( "\n" )


---> console_out:
1.154701 1.632993 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1555
---> probID: geeksforgeeks_4736_A
---> inputs:

---> outputs:
7


def countBits ( n ) :
    count = 0
    while n != 0 :
        count += 1
        n >>= 1
    return count
i = 65
print ( countBits ( i ) )


---> console_out:
7
 
MATCHED!! :D
 89%|████████▉ | 1555/1746 [15:20<00:15, 12.56it/s]Traceback (most recent call last):
  File "./junk/1703784605739_7047/main.py", line 2, in <module>
    h , w , a , b = map ( int , sys . stdin . readline ( ) . split ( ) )
ValueError: not enough values to unpack (expected 4, got 2)
out1,out2  80


-------------------------------------


---> lineNum: 1556
---> probID: aizu_p02037_A
---> inputs:
5 8
2 2
---> outputs:
8

import sys
h , w , a , b = map ( int , sys . stdin . readline ( ) . split ( ) )
print ( h * w - ( h // a * a ) * ( w // b * b ) )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784605819_4831/main.py", line 8, in <module>
    max = max ( max , t )
TypeError: 'int' object is not callable
out1,out2  30


-------------------------------------


---> lineNum: 1557
---> probID: aizu_p00366_A
---> inputs:
3
3
6
8
---> outputs:
3

import math
n = int ( input ( ) )
max = 0
ans = 0
l = [ ]
for i in range ( n ) :
    t = int ( input ( ) )
    max = max ( max , t )
for i in range ( 1 , max + 1 ) :
    if max % i == 0 :
        l . append ( i )
for i in range ( n ) :
    for j in range ( len ( l ) ) :
        if l [ j ] >= t :
            ans += l [ j ] - t
            break
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 89%|████████▉ | 1557/1746 [15:20<00:14, 12.89it/s]

-------------------------------------


---> lineNum: 1558
---> probID: geeksforgeeks_2117_A
---> inputs:

---> outputs:
3


import math
def LongestSubarray ( arr , n , k ) :
    arr2 = [ 0 ] * n
    for i in range ( n ) :
        arr2 [ i ] = arr [ i ] % k
    current_length , max_length = 0 , 0
    j = 0
    i = 0
    while i < n :
        current_length = 1
        j = i + 1
        while j < n :
            if arr2 [ j ] == arr2 [ i ] :
                current_length += 1
            else :
                break
            j += 1
        max_length = max ( max_length , current_length )
        i = j
    return max_length
arr = [ 4 , 9 , 7 , 18 , 29 , 11 ]
n = len ( arr )
k = 11
print ( LongestSubarray ( arr , n , k ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1559
---> probID: codeforces_570_B
---> inputs:
3 1
---> outputs:
2

import sys
import random
class FastScanner :
    def __init__ ( self ) :
        self . br = sys . stdin
        self . st = ""
    def next ( self ) :
        while not self . st or len ( self . st . split ( ) ) == 0 :
            self . st = self . br . readline ( )
        ret = self . st . split ( ) [ 0 ]
        self . st = " " . join ( self . st . split ( ) [ 1 : ] )
        return ret
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def readArray ( self , n ) :
        return [ self . nextInt ( ) for _ in range ( n ) ]
    def nextLong ( self ) :
        return int ( self . next ( ) )
def main ( ) :
    fs = FastScanner ( )
    T = 1
    for tt in range ( T ) :
        n = fs . nextLong ( )
        m = fs . nextLong ( )
        if n == 1 :
            print ( 1 )
            return
        if n - m > m - 1 :
            print ( m + 1 )
        else :
            print ( m - 1 )
def ruffleSort ( a ) :
    n = len ( a )
    for i in range ( n ) :
        oi = random . randint ( 0 , n - 1 )
        temp = a [ oi ]
        a [ oi ] = a [ i ]
        a [ i ] = temp
    a . sort ( )
if __name__ == "__main__" :
    main ( )


---> console_out:
2
 
MATCHED!! :D
 89%|████████▉ | 1559/1746 [15:20<00:13, 13.55it/s]

-------------------------------------


---> lineNum: 1560
---> probID: geeksforgeeks_5149_A
---> inputs:

---> outputs:
YES


def isHeterogram ( s , n ) :
    hash = [ 0 ] * 26
    for i in range ( n ) :
        if s [ i ] != ' ' :
            if hash [ ord ( s [ i ] ) - ord ( 'a' ) ] == 0 :
                hash [ ord ( s [ i ] ) - ord ( 'a' ) ] = 1
            else :
                return False
    return True
s = "the big dwarf only jumps"
n = len ( s )
if isHeterogram ( s , n ) :
    print ( "YES" )
else :
    print ( "NO" )


---> console_out:
YES
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1561
---> probID: projecteuler_p024_A
---> inputs:

---> outputs:
2783915460

class p024 :
    def main ( self ) :
        print ( self . run ( ) )
    def run ( self ) :
        array = [ i for i in range ( 10 ) ]
        for i in range ( 999999 ) :
            if not self . next_permutation ( array ) :
                raise AssertionError ( )
        ans = ""
        for i in range ( len ( array ) ) :
            ans += str ( array [ i ] )
        return ans
    def next_permutation ( self , array ) :
        i = len ( array ) - 2
        while i >= 0 and array [ i ] >= array [ i + 1 ] :
            i -= 1
        if i < 0 :
            return False
        j = len ( array ) - 1
        while array [ j ] <= array [ i ] :
            j -= 1
        array [ i ] , array [ j ] = array [ j ] , array [ i ]
        array [ i + 1 : ] = reversed ( array [ i + 1 : ] )
        return True
p = p024 ( )
p . main ( )


---> console_out:
2783915460
 
MATCHED!! :D
 89%|████████▉ | 1561/1746 [15:22<00:58,  3.14it/s]

-------------------------------------


---> lineNum: 1562
---> probID: geeksforgeeks_3674_A
---> inputs:

---> outputs:
Yes


def FindPoint ( x1 , y1 , x2 , y2 , x , y ) :
    if x > x1 and x < x2 and y > y1 and y < y2 :
        return True
    return False
if __name__ == '__main__' :
    x1 , y1 , x2 , y2 = 0 , 0 , 10 , 8
    x , y = 1 , 5
    if FindPoint ( x1 , y1 , x2 , y2 , x , y ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1563
---> probID: geeksforgeeks_3676_A
---> inputs:

---> outputs:
1


import numpy as np
MX = 2001
OFF = 1000
class point :
    def __init__ ( self , x , y ) :
        self . x = x
        self . y = y
def countPoints ( n , points ) :
    minx = np . full ( MX , np . iinfo ( np . int32 ) . max )
    miny = np . full ( MX , np . iinfo ( np . int32 ) . max )
    maxx = np . zeros ( MX , dtype = int )
    maxy = np . zeros ( MX , dtype = int )
    for i in range ( n ) :
        minx [ i ] = np . iinfo ( np . int32 ) . max
        miny [ i ] = np . iinfo ( np . int32 ) . max
    for i in range ( n ) :
        points [ i ] . x += OFF
        points [ i ] . y += OFF
        x = points [ i ] . x
        y = points [ i ] . y
        minx [ y ] = min ( minx [ y ] , x )
        maxx [ y ] = max ( maxx [ y ] , x )
        miny [ x ] = min ( miny [ x ] , y )
        maxy [ x ] = max ( maxy [ x ] , y )
    count = 0
    for i in range ( n ) :
        x = points [ i ] . x
        y = points [ i ] . y
        if x > minx [ y ] and x < maxx [ y ] :
            if y > miny [ x ] and y < maxy [ x ] :
                count += 1
    return count
if __name__ == '__main__' :
    points = [ point ( 0 , 0 ) , point ( 0 , 1 ) , point ( 1 , 0 ) , point ( 0 , - 1 ) , point ( - 1 , 0 ) ]
    n = len ( points )
    print ( countPoints ( n , points ) )


---> console_out:
1
 
MATCHED!! :D
 90%|████████▉ | 1563/1746 [15:22<00:50,  3.65it/s]Traceback (most recent call last):
  File "./junk/1703784608135_2169/main.py", line 21, in <module>
    main ( )
  File "./junk/1703784608135_2169/main.py", line 3, in main
    solve ( )
  File "./junk/1703784608135_2169/main.py", line 6, in solve
    X = int ( scan ( ) )
ValueError: invalid literal for int() with base 10: '3 20'
out1,out2  30


-------------------------------------


---> lineNum: 1564
---> probID: atcoder_ABC083_C
---> inputs:
3 20
---> outputs:
3

import sys
def main ( ) :
    solve ( )
def solve ( ) :
    scan = sys . stdin . readline
    X = int ( scan ( ) )
    Y = int ( scan ( ) )
    Z = Y // X
    answer = f ( Z ) + 1
    print ( answer )
def f ( Z ) :
    t = 1
    result = 0
    while t < Z :
        t *= 2
        result += 1
    if t == Z :
        return result
    return result - 1
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1703784608203_5474/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  110


-------------------------------------


---> lineNum: 1565
---> probID: geeksforgeeks_1298_A
---> inputs:

---> outputs:
11


import java . util . * ;
class GFG :
    sticks = [ 6 , 2 , 5 , 5 , 4 , 5 , 6 , 3 , 7 , 6 ]
    @ staticmethod
    def countSticks ( str , n ) :
        cnt = 0
        for i in range ( n ) :
            cnt += sticks [ int ( str [ i ] ) ]
        return cnt
    def main ( args ) :
        str = "56"
        n = len ( str )
        print ( GFG . countSticks ( str , n ) )
GFG . main ( None )


---> console_out:
 
DIDN'T MATCH!! :(
 90%|████████▉ | 1565/1746 [15:23<00:38,  4.73it/s]out1,out2 0020102010102030301010202020102010203030203030201020201030303010303030 0020102010103030101010202020102010203030203030201020201030303010101030


-------------------------------------


---> lineNum: 1566
---> probID: codeforces_1635_B
---> inputs:
5
3
2 1 2
4
1 2 3 1
5
1 2 1 2 1
9
1 2 1 3 2 3 1 2 1
9
2 1 3 1 3 1 3 1 3
---> outputs:
['0\n2 1 2\n1\n1 3 3 1\n1\n1 2 2 2 1\n2\n1 2 3 3 2 3 3 2 1\n2\n2 1 3 3 3 1 1 1 3', '0\n2 1 2 \n1\n1 2 3 3 \n1\n1 2 2 2 1 \n2\n1 2 3 3 2 3 3 2 1 \n2\n2 1 3 3 3 1 3 3 3 \n']

import sys
t = int ( sys . stdin . readline ( ) )
for _ in range ( t ) :
    n = int ( sys . stdin . readline ( ) )
    a = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
    replaceNext = False
    ans = 0
    for i in range ( 1 , n - 1 ) :
        if replaceNext :
            a [ i ] = max ( a [ i - 1 ] , a [ i + 1 ] )
            ans += 1
            replaceNext = False
        if a [ i ] > a [ i - 1 ] and a [ i ] > a [ i + 1 ] :
            replaceNext = True
    if replaceNext :
        a [ n - 1 ] = a [ n - 2 ]
        ans += 1
        replaceNext = False
    print ( ans )
    print ( " " . join ( str ( x ) for x in a ) )


---> console_out:
0
2 1 2
1
1 2 3 3
1
1 2 2 2 1
2
1 2 3 3 2 3 3 2 1
2
2 1 3 3 3 1 3 3 3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1567
---> probID: geeksforgeeks_4993_A
---> inputs:

---> outputs:
1 0 1 1 1 

def command ( arr , a , b ) :
    arr [ a ] ^= True
    arr [ b + 1 ] ^= True
def process ( arr , n ) :
    for k in range ( 1 , n + 1 ) :
        arr [ k ] ^= arr [ k - 1 ]
def result ( arr , n ) :
    for k in range ( 1 , n + 1 ) :
        if arr [ k ] :
            print ( "1 " , end = "" )
        else :
            print ( "0 " , end = "" )
n , m = 5 , 3
arr = [ False ] * ( n + 2 )
command ( arr , 1 , 5 )
command ( arr , 2 , 5 )
command ( arr , 3 , 5 )
process ( arr , n )
result ( arr , n )


---> console_out:
1 0 1 1 1  
MATCHED!! :D
 90%|████████▉ | 1567/1746 [15:23<00:30,  5.96it/s]

-------------------------------------


---> lineNum: 1568
---> probID: geeksforgeeks_2979_A
---> inputs:

---> outputs:
1


import numpy as np
def mostFrequent ( arr , n ) :
    arr = np . sort ( arr )
    max_count = 1
    res = arr [ 0 ]
    curr_count = 1
    for i in range ( 1 , n ) :
        if arr [ i ] == arr [ i - 1 ] :
            curr_count += 1
        else :
            if curr_count > max_count :
                max_count = curr_count
                res = arr [ i - 1 ]
            curr_count = 1
    if curr_count > max_count :
        max_count = curr_count
        res = arr [ n - 1 ]
    return res
arr = np . array ( [ 1 , 5 , 2 , 1 , 3 , 2 , 1 ] )
n = len ( arr )
print ( mostFrequent ( arr , n ) )


---> console_out:
1
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1569
---> probID: geeksforgeeks_69_A
---> inputs:

---> outputs:
12


MAX = 26
def maxLength ( str , len ) :
    res = 0
    lastPos = [ - 1 ] * MAX
    for i in range ( len ) :
        C = ord ( str [ i ] ) - ord ( 'a' )
        if lastPos [ C ] != - 1 :
            res = max ( len - ( i - lastPos [ C ] - 1 ) - 1 , res )
        lastPos [ C ] = i
    return res
str = "geeksforgeeks"
len = len ( str )
print ( maxLength ( str , len ) )


---> console_out:
12
 
MATCHED!! :D
 90%|████████▉ | 1569/1746 [15:23<00:29,  6.02it/s]out1,out2 10 20


-------------------------------------


---> lineNum: 1570
---> probID: geeksforgeeks_5070_A
---> inputs:

---> outputs:
2


MAX = 1000000
def ksmallest ( arr , n , k ) :
    b = [ 0 ] * MAX
    for i in range ( n ) :
        b [ arr [ i ] ] = 1
    for j in range ( 1 , MAX ) :
        if b [ j ] != 1 :
            k -= 1
        if k == 1 :
            return j
    return float ( 'inf' )
if __name__ == '__main__' :
    k = 1
    arr = [ 1 ]
    n = len ( arr )
    print ( ksmallest ( arr , n , k ) )


---> console_out:
1
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1571
---> probID: geeksforgeeks_13_A
---> inputs:

---> outputs:
Yes


def isDivisible ( n ) :
    while n // 100 > 0 :
        d = n % 10
        n //= 10
        n = abs ( n + ( d * 13 ) )
    return n % 43 == 0
N = 2795
if isDivisible ( N ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
 90%|████████▉ | 1571/1746 [15:23<00:23,  7.36it/s]

-------------------------------------


---> lineNum: 1572
---> probID: geeksforgeeks_15_A
---> inputs:

---> outputs:
Yes


import math
def isDivisible ( n ) :
    while n // 100 > 0 :
        d = n % 10
        n //= 10
        n = abs ( n - ( d * 14 ) )
    return n % 47 == 0
if __name__ == '__main__' :
    N = 59173
    if isDivisible ( N ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1573
---> probID: geeksforgeeks_16_A
---> inputs:

---> outputs:
Yes


import math
def isDivisible ( n ) :
    while n // 100 > 0 :
        d = n % 10
        n //= 10
        n = abs ( n - ( d * 3 ) )
    return n % 31 == 0
N = 1922
if isDivisible ( N ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
 90%|█████████ | 1573/1746 [15:23<00:19,  8.81it/s]

-------------------------------------


---> lineNum: 1574
---> probID: geeksforgeeks_18_A
---> inputs:

---> outputs:
Yes


import math
def isDivisible ( n ) :
    while ( n // 100 ) > 0 :
        d = n % 10
        n //= 10
        n = abs ( n - ( d * 7 ) )
    return ( n % 71 == 0 )
if __name__ == '__main__' :
    N = 5041
    if isDivisible ( N ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1575
---> probID: geeksforgeeks_1127_A
---> inputs:

---> outputs:
-3


import math
def Odd_Sum ( n ) :
    total = ( n + 1 ) // 2
    odd = total * total
    return odd
def Even_Sum ( n ) :
    total = n // 2
    even = total * ( total + 1 )
    return even
def sumLtoR ( L , R ) :
    odd_sum = Odd_Sum ( R ) - Odd_Sum ( L - 1 )
    even_sum = Even_Sum ( R ) - Even_Sum ( L - 1 )
    return even_sum - odd_sum
L = 1
R = 5
print ( sumLtoR ( L , R ) )


---> console_out:
-3
 
MATCHED!! :D
 90%|█████████ | 1575/1746 [15:23<00:16, 10.16it/s]

-------------------------------------


---> lineNum: 1576
---> probID: geeksforgeeks_4618_A
---> inputs:

---> outputs:
No


import math
def isRatioPossible ( lowCost , upCost , lowQuant , upQuant , r ) :
    for i in range ( lowQuant , upQuant + 1 ) :
        ans = i * r
        if lowCost <= ans <= upCost :
            return True
    return False
if __name__ == "__main__" :
    lowCost , upCost , lowQuant , upQuant , r = 14 , 30 , 5 , 12 , 9
    if isRatioPossible ( lowCost , upCost , lowQuant , upQuant , r ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
No
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784609175_1357/main.py", line 5, in <module>
    if isPowerOfTwo ( 31 ) :
  File "./junk/1703784609175_1357/main.py", line 4, in isPowerOfTwo
    return int ( math . ceil ( ( math . log ( n ) / math . log ( 2 ) ) ) ) == int ( math . floor ( ( ( math . log ( n ) / math . log ( 2 ) ) ) ) )
NameError: name 'math' is not defined
out1,out2  noyes


-------------------------------------


---> lineNum: 1577
---> probID: geeksforgeeks_1328_A
---> inputs:

---> outputs:
No
Yes


def isPowerOfTwo ( n ) :
    if n == 0 :
        return False
    return int ( math . ceil ( ( math . log ( n ) / math . log ( 2 ) ) ) ) == int ( math . floor ( ( ( math . log ( n ) / math . log ( 2 ) ) ) ) )
if isPowerOfTwo ( 31 ) :
    print ( "Yes" )
else :
    print ( "No" )
if isPowerOfTwo ( 64 ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(
 90%|█████████ | 1577/1746 [15:24<00:15, 11.22it/s]

-------------------------------------


---> lineNum: 1578
---> probID: projecteuler_p087_A
---> inputs:

---> outputs:
1097343

from math import sqrt
class p087 :
    def __init__ ( self ) :
        self . LIMIT = 50000000
    def run ( self ) :
        primes = self . listPrimes ( int ( sqrt ( self . LIMIT ) ) )
        sums = set ( [ 0 ] )
        for i in range ( 2 , 5 ) :
            newsums = set ( )
            for p in primes :
                q = 1
                for j in range ( i ) :
                    q *= p
                if q > self . LIMIT :
                    break
                r = int ( q )
                for x in sums :
                    if x + r <= self . LIMIT :
                        newsums . add ( x + r )
            sums = newsums
        return str ( len ( sums ) )
    def listPrimes ( self , n ) :
        is_prime = [ True ] * ( n + 1 )
        primes = [ ]
        for i in range ( 2 , n + 1 ) :
            if is_prime [ i ] :
                primes . append ( i )
                for j in range ( i * i , n + 1 , i ) :
                    is_prime [ j ] = False
        return primes
if __name__ == '__main__' :
    print ( p087 ( ) . run ( ) )


---> console_out:
1097343
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1579
---> probID: geeksforgeeks_1554_A
---> inputs:

---> outputs:
Longest length subsequence = 6


import collections
def longLenSub ( arr , n ) :
    um = collections . defaultdict ( int )
    longLen = 0
    for i in range ( n ) :
        len = 0
        if arr [ i ] - 1 in um and len < um [ arr [ i ] - 1 ] :
            len = um [ arr [ i ] - 1 ]
        if arr [ i ] + 1 in um and len < um [ arr [ i ] + 1 ] :
            len = um [ arr [ i ] + 1 ]
        um [ arr [ i ] ] = len + 1
        if longLen < um [ arr [ i ] ] :
            longLen = um [ arr [ i ] ]
    return longLen
arr = [ 1 , 2 , 3 , 4 , 5 , 3 , 2 ]
n = len ( arr )
print ( "Longest length subsequence =" , longLenSub ( arr , n ) )


---> console_out:
Longest length subsequence = 6
 
MATCHED!! :D
 90%|█████████ | 1579/1746 [15:24<00:29,  5.71it/s]

-------------------------------------


---> lineNum: 1580
---> probID: codeforces_1351_A
---> inputs:
4
1 5
314 15
-99 99
123 987
---> outputs:
6
329
0
1110

import sys
t = int ( input ( ) )
for i in range ( t ) :
    a , b = map ( int , sys . stdin . readline ( ) . split ( ) )
    print ( a + b )


---> console_out:
6
329
0
1110
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1581
---> probID: geeksforgeeks_3002_A
---> inputs:

---> outputs:
Sum of all elements: 1023


import math
def calculateSum ( n ) :
    sum = 0
    sum = 1 << n
    return ( sum - 1 )
n = 10
print ( "Sum of all elements:" , calculateSum ( n ) )


---> console_out:
Sum of all elements: 1023
 
MATCHED!! :D
 91%|█████████ | 1581/1746 [15:24<00:23,  7.08it/s]

-------------------------------------


---> lineNum: 1582
---> probID: geeksforgeeks_3001_A
---> inputs:

---> outputs:
Sum of all elements: 1023


import math
def calculateSum ( n ) :
    sum = 0
    for row in range ( n ) :
        sum = sum + int ( math . pow ( 2 , row ) )
    return sum
if __name__ == '__main__' :
    n = 10
    print ( "Sum of all elements:" , calculateSum ( n ) )


---> console_out:
Sum of all elements: 1023
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1583
---> probID: geeksforgeeks_4905_A
---> inputs:

---> outputs:
Maximum difference is 98


def maxDiff ( arr , n ) :
    diff = arr [ 1 ] - arr [ 0 ]
    curr_sum = diff
    max_sum = curr_sum
    for i in range ( 1 , n - 1 ) :
        diff = arr [ i + 1 ] - arr [ i ]
        if curr_sum > 0 :
            curr_sum += diff
        else :
            curr_sum = diff
        if curr_sum > max_sum :
            max_sum = curr_sum
    return max_sum
arr = [ 80 , 2 , 6 , 3 , 100 ]
n = len ( arr )
print ( "Maximum difference is" , maxDiff ( arr , n ) )


---> console_out:
Maximum difference is 98
 
MATCHED!! :D
 91%|█████████ | 1583/1746 [15:25<00:19,  8.22it/s]

-------------------------------------


---> lineNum: 1584
---> probID: aizu_p00667_A
---> inputs:
1
11
111111
111111111111
12345
11111111119999999999
11111111113333333333
11111111118888888888
11111111112222222222111111111
11111111110000000000444444444
11224111122411
888888888888999999999999888888888888999999999999999999
666666666666666777333333333338888888888
1111114444441111111444499999931111111222222222222888111111115555
#
---> outputs:
1
2
32
1856
1
230400
230400
156480
56217600
38181120
128
26681431
61684293
40046720

import sys
MOD = 100000007
def solve ( len , loop ) :
    ret = 0
    dp = [ 0 ] * ( len + 1 )
    dp [ 0 ] = 1
    for i in range ( 1 , len + 1 ) :
        for j in range ( 1 , min ( loop , i ) + 1 ) :
            dp [ i ] += dp [ i - j ]
        dp [ i ] %= MOD
        if ( len - i ) % loop == 0 :
            ret += dp [ i ]
            ret %= MOD
    return ret
def solve_main ( ) :
    ans = 1
    prev = 0
    for i in range ( 1 , len ( line ) ) :
        if line [ i ] != line [ i - 1 ] :
            ans *= solve ( i - prev , loop ( line [ prev ] ) )
            ans %= MOD
            prev = i
    ans *= solve ( len ( line ) - prev , loop ( line [ prev ] ) )
    ans %= MOD
    return int ( ans )
def loop ( c ) :
    return 3 if c == '8' or c == '0' else 5
for line in sys . stdin :
    line = line . strip ( )
    if line == "#" :
        break
    print ( solve_main ( ) )


---> console_out:
1
2
32
1856
1
230400
230400
156480
56217600
38181120
128
26681431
61684293
40046720
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1585
---> probID: geeksforgeeks_3592_A
---> inputs:

---> outputs:
3


def countPairs ( n ) :
    num = ( ( n // 2 ) + 1 )
    max_val = n % num
    count = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , n + 1 ) :
            val = ( ( n % i ) % j ) % n
            if val == max_val :
                count += 1
    return count
if __name__ == '__main__' :
    n = 5
    print ( countPairs ( n ) )


---> console_out:
3
 
MATCHED!! :D
 91%|█████████ | 1585/1746 [15:25<00:16,  9.56it/s]

-------------------------------------


---> lineNum: 1586
---> probID: codeforces_313_B
---> inputs:
......
4
3 4
2 3
1 6
2 6
---> outputs:
1
1
5
4

import sys
class Fast :
    def sol ( self , br , pw ) :
        s = br . readline ( ) . strip ( )
        cum = [ 0 ] * ( len ( s ) + 1 )
        for i in range ( 1 , len ( s ) ) :
            if s [ i ] == s [ i - 1 ] :
                cum [ i ] = cum [ i - 1 ] + 1
            else :
                cum [ i ] = cum [ i - 1 ]
        q = int ( br . readline ( ) . strip ( ) )
        for _ in range ( q ) :
            l , r = map ( int , br . readline ( ) . split ( ) )
            pw . write ( str ( cum [ r - 1 ] - cum [ l - 1 ] ) + '\n' )
def main ( ) :
    br = sys . stdin
    pw = sys . stdout
    f = Fast ( )
    f . sol ( br , pw )
    pw . close ( )
if __name__ == '__main__' :
    main ( )


---> console_out:
1
1
5
4
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784610455_6414/main.py", line 32, in <module>
    run ( )
  File "./junk/1703784610455_6414/main.py", line 13, in run
    a = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 1'
out1,out2  90300010


-------------------------------------


---> lineNum: 1587
---> probID: aizu_p00426_A
---> inputs:
3 10
0
1 1
2 2 3
4 20
2 1 2
1 3
1 4
2 5
2 1 2
0
0
3 3
0
1 1
2 2 3
0 0
---> outputs:
9
3
0
-1

import sys
def run ( ) :
    while True :
        n , m = map ( int , input ( ) . split ( ) )
        if n == 0 and m == 0 :
            break
        pow3 = [ 0 ] * ( n + 1 )
        pow3 [ 0 ] = 1
        for i in range ( 1 , n + 1 ) :
            pow3 [ i ] = pow3 [ i - 1 ] * 3
        c = [ 0 ] * n
        for i in range ( 3 ) :
            a = int ( input ( ) )
            for j in range ( a ) :
                k = int ( input ( ) )
                c [ n - k ] = i
        p = 0
        x = 0
        for i in range ( n - 1 , - 1 , - 1 ) :
            d = abs ( p - c [ i ] )
            x += pow3 [ i ] * d
            if d == 1 :
                p = 2 - p
        y = pow3 [ n ] - 1 - x
        if x > y :
            x = y
        if x > m :
            print ( - 1 )
        else :
            print ( x )
if __name__ == '__main__' :
    run ( )


---> console_out:
 
DIDN'T MATCH!! :(
 91%|█████████ | 1587/1746 [15:25<00:14, 10.87it/s]

-------------------------------------


---> lineNum: 1588
---> probID: geeksforgeeks_1352_A
---> inputs:

---> outputs:
1 2 9 and 3 4 5 
1 2 4 5 and 3 9 
3 9 and 1 2 4 5 
3 4 5 and 1 2 9 


import sys
MAX = 100000
def print_groups ( g1 , a , g2 , b ) :
    for i in range ( a ) :
        sys . stdout . write ( str ( g1 [ i ] ) + " " )
    sys . stdout . write ( "and " )
    for i in range ( b ) :
        sys . stdout . write ( str ( g2 [ i ] ) + " " )
    sys . stdout . write ( "\n" )
def checksum ( g1 , a , g2 , b ) :
    x = sum ( g1 [ : a ] ) - sum ( g2 [ : b ] )
    return x == 0
def form_groups ( arr , x , g1 , a , g2 , b , n ) :
    if x == n :
        if checksum ( g1 , a , g2 , b ) :
            print_groups ( g1 , a , g2 , b )
        return
    g1 [ a ] = arr [ x ]
    form_groups ( arr , x + 1 , g1 , a + 1 , g2 , b , n )
    g2 [ b ] = arr [ x ]
    form_groups ( arr , x + 1 , g1 , a , g2 , b + 1 , n )
if __name__ == "__main__" :
    arr = [ 1 , 2 , 3 , 9 , 4 , 5 ]
    n = len ( arr )
    g1 = [ 0 ] * MAX
    g2 = [ 0 ] * MAX
    form_groups ( arr , 0 , g1 , 0 , g2 , 0 , n )


---> console_out:
1 2 9 and 3 4 5 
1 2 4 5 and 3 9 
3 9 and 1 2 4 5 
3 4 5 and 1 2 9 
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784610598_5659/main.py", line 2, in <module>
    n = int ( sys . stdin . readline ( ) )
ValueError: invalid literal for int() with base 10: '5 5 3 2'
out1,out2  20


-------------------------------------


---> lineNum: 1589
---> probID: codeforces_189_A
---> inputs:
5 5 3 2
---> outputs:
2

import sys
n = int ( sys . stdin . readline ( ) )
a = list ( map ( int , sys . stdin . readline ( ) . split ( ) ) )
a . sort ( )
max_val = 0
d = [ - 500 ] * ( n + 1 )
d [ 0 ] = 0
for i in range ( n + 1 ) :
    for j in range ( 3 ) :
        if i - a [ j ] >= 0 and d [ i - a [ j ] ] != - 1 :
            d [ i ] = max ( d [ i ] , d [ i - a [ j ] ] + 1 )
print ( d [ n ] )


---> console_out:
 
DIDN'T MATCH!! :(
 91%|█████████ | 1589/1746 [15:25<00:13, 11.65it/s]

-------------------------------------


---> lineNum: 1590
---> probID: geeksforgeeks_993_A
---> inputs:

---> outputs:
4


import math
def maxSubseq ( vec , n ) :
    suffix = 0
    for i in range ( n - 1 , - 1 , - 1 ) :
        if vec [ i ] == 1 :
            suffix += 1
            vec [ i ] = suffix
    res = 0
    zero = 0
    for i in range ( n ) :
        if vec [ i ] == 0 :
            zero += 1
        if vec [ i ] > 0 :
            res = max ( res , zero + vec [ i ] )
    return max ( res , zero )
input = [ 0 , 1 , 0 , 0 , 1 , 0 ]
n = len ( input )
print ( maxSubseq ( input , n ) )


---> console_out:
4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1591
---> probID: geeksforgeeks_587_A
---> inputs:

---> outputs:
4


import numpy as np
def countPaths ( maze ) :
    R = maze . shape [ 0 ]
    C = maze . shape [ 1 ]
    if maze [ 0 ] [ 0 ] == - 1 :
        return 0
    for i in range ( R ) :
        if maze [ i ] [ 0 ] == 0 :
            maze [ i ] [ 0 ] = 1
        else :
            break
    for i in range ( 1 , C ) :
        if maze [ 0 ] [ i ] == 0 :
            maze [ 0 ] [ i ] = 1
        else :
            break
    for i in range ( 1 , R ) :
        for j in range ( 1 , C ) :
            if maze [ i ] [ j ] == - 1 :
                continue
            if maze [ i - 1 ] [ j ] > 0 :
                maze [ i ] [ j ] += maze [ i - 1 ] [ j ]
            if maze [ i ] [ j - 1 ] > 0 :
                maze [ i ] [ j ] += maze [ i ] [ j - 1 ]
    return maze [ R - 1 ] [ C - 1 ] if maze [ R - 1 ] [ C - 1 ] > 0 else 0
maze = np . array ( [ [ 0 , 0 , 0 , 0 ] , [ 0 , - 1 , 0 , 0 ] , [ - 1 , 0 , 0 , 0 ] , [ 0 , 0 , 0 , 0 ] ] )
print ( countPaths ( maze ) )


---> console_out:
4
 
MATCHED!! :D
 91%|█████████ | 1591/1746 [15:25<00:17,  9.07it/s]

-------------------------------------


---> lineNum: 1592
---> probID: geeksforgeeks_2139_A
---> inputs:

---> outputs:
Not a Prime Number


import math
def isPrime ( N ) :
    isPrime = True
    arr = [ 7 , 11 , 13 , 17 , 19 , 23 , 29 , 31 ]
    if N < 2 :
        isPrime = False
    if N % 2 == 0 or N % 3 == 0 or N % 5 == 0 :
        isPrime = False
    for i in range ( 0 , int ( math . sqrt ( N ) ) + 1 , 30 ) :
        for c in arr :
            if c > math . sqrt ( N ) :
                break
            else :
                if N % ( c + i ) == 0 :
                    isPrime = False
                    break
        if not isPrime :
            break
    if isPrime :
        print ( "Prime Number" )
    else :
        print ( "Not a Prime Number" )
N = 121
isPrime ( N )


---> console_out:
Not a Prime Number
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1593
---> probID: atcoder_ABC108_B
---> inputs:
0 1 1 0
---> outputs:
2 1 1 2

import sys
x1 , y1 , x2 , y2 = map ( int , sys . stdin . readline ( ) . split ( ) )
x3 = x2 + ( y1 - y2 )
y3 = y2 - ( x1 - x2 )
x4 = x1 - ( y2 - y1 )
y4 = y1 + ( x2 - x1 )
print ( x3 , y3 , x4 , y4 )


---> console_out:
2 1 1 2
 
MATCHED!! :D
 91%|█████████ | 1593/1746 [15:26<00:15,  9.68it/s]

-------------------------------------


---> lineNum: 1594
---> probID: geeksforgeeks_3934_A
---> inputs:

---> outputs:
The length of the LPS is 5


def max ( x , y ) :
    return x if x > y else y
def lps ( seq , i , j ) :
    if i == j :
        return 1
    if seq [ i ] == seq [ j ] and i + 1 == j :
        return 2
    if seq [ i ] == seq [ j ] :
        return lps ( seq , i + 1 , j - 1 ) + 2
    return max ( lps ( seq , i , j - 1 ) , lps ( seq , i + 1 , j ) )
seq = "GEEKSFORGEEKS"
n = len ( seq )
print ( "The length of the LPS is" , lps ( list ( seq ) , 0 , n - 1 ) )


---> console_out:
The length of the LPS is 5
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1595
---> probID: geeksforgeeks_3911_A
---> inputs:

---> outputs:
Length of the substring is 6


def findLength ( str , n ) :
    ans = 0
    for i in range ( n - 1 ) :
        l = i
        r = i + 1
        lsum = 0
        rsum = 0
        while r < n and l >= 0 :
            lsum += int ( str [ l ] )
            rsum += int ( str [ r ] )
            if lsum == rsum :
                ans = max ( ans , r - l + 1 )
            l -= 1
            r += 1
    return ans
if __name__ == '__main__' :
    str = "123123"
    print ( "Length of the substring is" , findLength ( str , len ( str ) ) )


---> console_out:
Length of the substring is 6
 
MATCHED!! :D
 91%|█████████▏| 1595/1746 [15:26<00:13, 11.01it/s]Traceback (most recent call last):
  File "./junk/1703784611293_6429/main.py", line 1, in <module>
    import java . util
ModuleNotFoundError: No module named 'java'
out1,out2  defabc


-------------------------------------


---> lineNum: 1596
---> probID: geeksforgeeks_3192_A
---> inputs:

---> outputs:
D E F A B C 

import java . util
class GfG :
    @ staticmethod
    def print ( a , n , ind ) :
        for i in range ( ind , n + ind ) :
            print ( a [ i % n ] , end = " " )
    @ staticmethod
    def main ( argc ) :
        a = [ 'A' , 'B' , 'C' , 'D' , 'E' , 'F' ]
        n = 6
        GfG . print ( a , n , 3 )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784611354_8975/main.py", line 1, in <module>
    import java . util
ModuleNotFoundError: No module named 'java'
out1,out2  defabc


-------------------------------------


---> lineNum: 1597
---> probID: geeksforgeeks_3191_A
---> inputs:

---> outputs:
D E F A B C 

import java . util
class GfG :
    @ staticmethod
    def print ( a , n , ind ) :
        b = [ '' ] * ( 2 * n )
        for i in range ( n ) :
            b [ i ] = b [ n + i ] = a [ i ]
        for i in range ( ind , n + ind ) :
            print ( b [ i ] , end = ' ' )
    @ staticmethod
    def main ( argc ) :
        a = [ 'A' , 'B' , 'C' , 'D' , 'E' , 'F' ]
        n = 6
        GfG . print ( a , n , 3 )


---> console_out:
 
DIDN'T MATCH!! :(
 91%|█████████▏| 1597/1746 [15:26<00:12, 12.18it/s]

-------------------------------------


---> lineNum: 1598
---> probID: codeforces_962_B
---> inputs:
5 1 1
*...*
---> outputs:
2

import sys
n , a , b = map ( int , input ( ) . split ( ) )
s = input ( )
ans = a + b
flip = 1 if a > b else - 1
for i in range ( n ) :
    if a == 0 and b == 0 :
        break
    if s [ i ] == '*' :
        flip = 1 if a > b else - 1
    else :
        if flip == 1 :
            a = 0 if a == 0 else a - 1
        else :
            b = 0 if b == 0 else b - 1
        flip *= - 1
print ( ans - a - b )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1599
---> probID: aizu_p01731_A
---> inputs:
1
0
icpc
---> outputs:
icpc

import sys
class Node :
    def __init__ ( self , i , d , c ) :
        self . id = i
        self . depth = d
        self . contents = c
        self . children = [ ]
    def findNode ( self , id ) :
        if id == self . id :
            return self
        for child in self . children :
            target = child . findNode ( id )
            if target is not None :
                return target
        return None
    def printContents ( self ) :
        for i in range ( self . depth ) :
            sys . stdout . write ( '.' )
        print ( self . contents )
        for child in self . children :
            child . printContents ( )
if __name__ == '__main__' :
    n = int ( input ( ) )
    id = int ( input ( ) )
    root = Node ( id + 1 , 0 , input ( ) )
    for i in range ( 1 , n ) :
        targetId = int ( input ( ) )
        parent = root . findNode ( targetId )
        parent . children . append ( Node ( id + 1 , parent . depth + 1 , input ( ) ) )
        id += 1
    root . printContents ( )


---> console_out:
icpc
 
MATCHED!! :D
 92%|█████████▏| 1599/1746 [15:26<00:11, 13.18it/s]Traceback (most recent call last):
  File "./junk/1703784611539_3305/main.py", line 39, in <module>
    main ( )
  File "./junk/1703784611539_3305/main.py", line 9, in main
    v1 = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '5 6'
out1,out2  260


-------------------------------------


---> lineNum: 1600
---> probID: codeforces_534_B
---> inputs:
5 6
4 2
---> outputs:
26

import numpy as np
v1 = 0
v2 = 0
t = 0
d = 0
dp = np . zeros ( ( 0 , 0 ) )
def main ( ) :
    global v1 , v2 , t , d , dp
    v1 = int ( input ( ) )
    v2 = int ( input ( ) )
    t = int ( input ( ) )
    d = int ( input ( ) )
    dp = np . full ( ( t , 1200 ) , - 1 )
    for x in dp :
        x . fill ( - 1 )
    ans = - 1
    if t == 2 :
        print ( v1 + v2 )
    else :
        print ( v1 + v2 + calculate ( 1 , v1 , v1 ) )
def calculate ( currentTime , currentSpeed , prev ) :
    global dp
    if currentSpeed < 0 :
        return - int ( 1e8 )
    if currentTime == t - 1 :
        if abs ( currentSpeed - v2 ) <= d :
            return 0
        return - int ( 1e8 )
    if dp [ currentTime ] [ currentSpeed ] != - 1 :
        return dp [ currentTime ] [ currentSpeed ]
    bestAns = - int ( 1e8 )
    for i in range ( d + 1 ) :
        ans = currentSpeed + i + calculate ( currentTime + 1 , currentSpeed + i , currentSpeed )
        ans2 = currentSpeed - i + calculate ( currentTime + 1 , currentSpeed - i , currentSpeed )
        bestAns = max ( bestAns , max ( ans , ans2 ) )
    dp [ currentTime ] [ currentSpeed ] = bestAns
    return bestAns
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1601
---> probID: codeforces_777_B
---> inputs:
3
123
321
---> outputs:
0
2

import sys
n = int ( input ( ) )
a = sorted ( input ( ) )
b = sorted ( input ( ) )
j = n - 1
for i in range ( n - 1 , - 1 , - 1 ) :
    if b [ j ] >= a [ i ] :
        j -= 1
print ( j + 1 )
j = 0
for i in range ( n ) :
    if b [ i ] > a [ j ] :
        j += 1
print ( j )


---> console_out:
0
2
 
MATCHED!! :D
 92%|█████████▏| 1601/1746 [15:26<00:15,  9.31it/s]  File "./junk/1703784611902_8174/main.py", line 4
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  200


-------------------------------------


---> lineNum: 1602
---> probID: atcoder_ARC094_A
---> inputs:
10 34 21
---> outputs:
20


import java . util . Scanner
import java . util . Arrays
num = [ 0 , 0 , 0 ]
sc = Scanner ( System . in )
num [ 0 ] = int ( sc . next ( ) )
num [ 1 ] = int ( sc . next ( ) )
num [ 2 ] = int ( sc . next ( ) )
num . sort ( )
dis1 = num [ 2 ] - num [ 0 ]
dis2 = num [ 2 ] - num [ 1 ]
ans = 0
if dis1 % 2 == 0 and dis2 % 2 == 0 :
    ans = dis1 // 2 + dis2 // 2
elif dis1 % 2 != 0 and dis2 % 2 != 0 :
    ans = dis1 // 2 + dis2 // 2 + 1
else :
    ans = dis1 // 2 + dis2 // 2 + 2
print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1603
---> probID: codeforces_1734_B
---> inputs:
3
1
2
3
---> outputs:
1 
1 
1 1 
1 
1 1 
1 0 1

import sys
T = int ( input ( ) )
for _ in range ( T ) :
    n = int ( input ( ) )
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , i + 1 ) :
            if j == 1 or i == j :
                sys . stdout . write ( "1 " )
            else :
                sys . stdout . write ( "0 " )
        sys . stdout . write ( "\n" )


---> console_out:
1 
1 
1 1 
1 
1 1 
1 0 1 
 
MATCHED!! :D
 92%|█████████▏| 1603/1746 [15:26<00:13, 10.69it/s]

-------------------------------------


---> lineNum: 1604
---> probID: geeksforgeeks_2442_A
---> inputs:

---> outputs:
10000011
11

def bin ( n ) :
    if n > 1 :
        bin ( n >> 1 )
    print ( n & 1 , end = '' )
bin ( 131 )
print ( )
bin ( 3 )


---> console_out:
10000011
11 
MATCHED!! :D
out1,out2  2331680


-------------------------------------


---> lineNum: 1605
---> probID: projecteuler_p001_A
---> inputs:

---> outputs:
233168

class p001 :
    def main ( self ) :
        print ( self . run ( ) )
    def run ( self ) :
        sum = 0
        for i in range ( 1000 ) :
            if i % 3 == 0 or i % 5 == 0 :
                sum += i
        return str ( sum )


---> console_out:
 
DIDN'T MATCH!! :(
 92%|█████████▏| 1605/1746 [15:27<00:12, 11.54it/s]

-------------------------------------


---> lineNum: 1606
---> probID: codeforces_1220_A
---> inputs:
4
ezor
---> outputs:
0

import sys
n = int ( input ( ) )
str = input ( )
s = ""
s1 = ""
for i in range ( len ( str ) ) :
    if str [ i ] == 'n' :
        s += "1 "
    if str [ i ] == 'z' :
        s1 += "0 "
print ( s + s1 )


---> console_out:
0 
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784612228_7543/main.py", line 8, in <module>
    main ( )
  File "./junk/1703784612228_7543/main.py", line 6, in main
    solve ( )
  File "./junk/1703784612228_7543/main.py", line 3, in solve
    R , G = map ( int , sys . stdin . readline ( ) . split ( ) )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2  20320


-------------------------------------


---> lineNum: 1607
---> probID: atcoder_ABC076_A
---> inputs:
2002
2017
---> outputs:
2032

import sys
def solve ( ) :
    R , G = map ( int , sys . stdin . readline ( ) . split ( ) )
    print ( ( 2 * G ) - R )
def main ( ) :
    solve ( )
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 92%|█████████▏| 1607/1746 [15:27<00:11, 12.44it/s]

-------------------------------------


---> lineNum: 1608
---> probID: geeksforgeeks_193_A
---> inputs:

---> outputs:
6


import math
def Circular ( n ) :
    Result = 1
    while n > 0 :
        Result = Result * n
        n -= 1
    return Result
n = 4
print ( Circular ( n - 1 ) )


---> console_out:
6
 
MATCHED!! :D
  File "./junk/1703784612358_1999/main.py", line 1
    N / A ( This is already in Java and not in need of translation to Python )
                                            ^
SyntaxError: invalid syntax
out1,out2  940805120


-------------------------------------


---> lineNum: 1609
---> probID: geeksforgeeks_4321_A
---> inputs:

---> outputs:
9408
512


N / A ( This is already in Java and not in need of translation to Python )


---> console_out:
 
DIDN'T MATCH!! :(
 92%|█████████▏| 1609/1746 [15:27<00:10, 13.37it/s]

-------------------------------------


---> lineNum: 1610
---> probID: aizu_p00219_A
---> inputs:
15
2
6
7
0
1
9
8
7
3
8
9
4
8
2
2
3
9
1
5
0
---> outputs:
*
*
***
*
*
-
*
**
***
**
-
*
-
-
-
*
-
-
-
*

import math
class Main :
    def run ( self ) :
        while True :
            n = int ( input ( ) )
            if n == 0 :
                break
            map = [ 0 ] * 10
            for i in range ( n ) :
                map [ int ( input ( ) ) ] += 1
            for i in range ( 10 ) :
                ans = "-"
                if map [ i ] != 0 :
                    ch = [ '*' ] * map [ i ]
                    ans = '' . join ( ch )
                print ( ans )
if __name__ == '__main__' :
    m = Main ( )
    m . run ( )


---> console_out:
*
*
***
*
*
-
*
**
***
**
-
*
-
-
-
*
-
-
-
*
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1611
---> probID: geeksforgeeks_4166_A
---> inputs:

---> outputs:
Second most frequent char is g


NO_OF_CHARS = 256
def getSecondMostFreq ( str ) :
    count = [ 0 ] * NO_OF_CHARS
    for i in range ( len ( str ) ) :
        count [ ord ( str [ i ] ) ] += 1
    first = second = 0
    for i in range ( NO_OF_CHARS ) :
        if count [ i ] > count [ first ] :
            second = first
            first = i
        elif count [ i ] > count [ second ] and count [ i ] != count [ first ] :
            second = i
    return chr ( second )
if __name__ == '__main__' :
    str = "geeksforgeeks"
    res = getSecondMostFreq ( str )
    if res != '\0' :
        print ( "Second most frequent char is" , res )
    else :
        print ( "No second most frequent character" )


---> console_out:
Second most frequent char is g
 
MATCHED!! :D
 92%|█████████▏| 1611/1746 [15:27<00:09, 13.95it/s]

-------------------------------------


---> lineNum: 1612
---> probID: aizu_p00096_A
---> inputs:
2
3
35
---> outputs:
10
20
8436

import sys
class Main :
    def run ( self ) :
        dp = [ [ 0 for j in range ( 4001 ) ] for i in range ( 5 ) ]
        dp [ 0 ] [ 0 ] = 1
        for i in range ( 1 , 5 ) :
            for ii in range ( 1000 * i + 1 ) :
                for iii in range ( max ( 0 , ii - 1000 ) , ii + 1 ) :
                    dp [ i ] [ ii ] += dp [ i - 1 ] [ iii ]
        for line in sys . stdin :
            print ( dp [ 4 ] [ int ( line ) ] )
if __name__ == '__main__' :
    Main ( ) . run ( )


---> console_out:
10
20
8436
 
MATCHED!! :D
  File "./junk/1703784614674_8319/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  modifiedarray204050609080703010


-------------------------------------


---> lineNum: 1613
---> probID: geeksforgeeks_1627_A
---> inputs:

---> outputs:
Modified Array : 
[2, 4, 5, 6, 9, 8, 7, 3, 1]


import java . util . * ;
public class SortExample { static void mySort ( Integer [ ] arr ) { int n = arr . length ; Arrays . sort ( arr , 0 , n / 2 ) ; Arrays . sort ( arr , n / 2 , n , Collections . reverseOrder ( ) ) ; } public static void main ( String [ ] args ) { Integer [ ] arr = { 5 , 4 , 6 , 2 , 1 , 3 , 8 , 9 , 7 } ; mySort ( arr ) ; System . out . printf ( "Modified Array: %s" , Arrays . toString ( arr ) ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
 92%|█████████▏| 1613/1746 [15:29<00:50,  2.64it/s]

-------------------------------------


---> lineNum: 1614
---> probID: geeksforgeeks_2360_A
---> inputs:

---> outputs:
3


import numpy as np
def minflip ( arr1 , arr2 , arr3 , p , q , n ) :
    flip = 0
    for i in range ( n ) :
        if ( arr1 [ i ] > 0 ) ^ ( arr2 [ i ] > 0 ) != ( arr3 [ i ] > 0 ) :
            flip += 1
    return flip if flip <= p + q else - 1
arr1 = np . array ( [ 1 , 0 , 1 , 1 , 1 , 1 , 1 ] )
arr2 = np . array ( [ 0 , 1 , 1 , 1 , 1 , 0 , 0 ] )
arr3 = np . array ( [ 1 , 1 , 1 , 1 , 0 , 0 , 1 ] )
n = len ( arr1 )
p , q = 2 , 4
print ( minflip ( arr1 , arr2 , arr3 , p , q , n ) )


---> console_out:
3
 
MATCHED!! :D
out1,out2 sumis23 sumis23


-------------------------------------


---> lineNum: 1615
---> probID: geeksforgeeks_5010_A
---> inputs:

---> outputs:
Sum is 2.283333


import math
def sum ( n ) :
    s = 0.0
    for i in range ( 1 , n + 1 ) :
        s = s + 1 / i
    return s
n = 5
print ( "Sum is" , sum ( n ) )


---> console_out:
Sum is 2.283333333333333
 
MATCHED!! :D
 92%|█████████▏| 1615/1746 [15:29<00:41,  3.18it/s]

-------------------------------------


---> lineNum: 1616
---> probID: geeksforgeeks_4866_A
---> inputs:

---> outputs:
1 2 3 6 8 9 7 5 4 0 

import numpy as np
def bitonicGenerator ( arr ) :
    evenArr = [ ]
    oddArr = [ ]
    for i in range ( len ( arr ) ) :
        if i % 2 == 0 :
            evenArr . append ( arr [ i ] )
        else :
            oddArr . append ( arr [ i ] )
    evenArr = sorted ( evenArr )
    oddArr = sorted ( oddArr , reverse = True )
    i = 0
    for j in range ( len ( evenArr ) ) :
        arr [ i ] = evenArr [ j ]
        i += 1
    for j in range ( len ( oddArr ) ) :
        arr [ i ] = oddArr [ j ]
        i += 1
arr = np . array ( [ 1 , 5 , 8 , 9 , 6 , 7 , 3 , 4 , 2 , 0 ] )
bitonicGenerator ( arr )
for i in range ( len ( arr ) ) :
    print ( arr [ i ] , end = " " )


---> console_out:
1 2 3 6 8 9 7 5 4 0  
MATCHED!! :D
 93%|█████████▎| 1616/1746 [15:30<00:39,  3.27it/s]

-------------------------------------


---> lineNum: 1617
---> probID: geeksforgeeks_542_A
---> inputs:

---> outputs:
8


def countPairs ( arr , n ) :
    count = 0
    right = 0
    left = 0
    visited = [ False ] * n
    while right < n :
        while right < n and not visited [ arr [ right ] ] :
            count += ( right - left )
            visited [ arr [ right ] ] = True
            right += 1
        while left < right and ( right != n and visited [ arr [ right ] ] ) :
            visited [ arr [ left ] ] = False
            left += 1
    return count
arr = [ 1 , 4 , 2 , 4 , 3 , 2 ]
n = len ( arr )
print ( countPairs ( arr , n ) )


---> console_out:
8
 
MATCHED!! :D
out1,out2 true true


-------------------------------------


---> lineNum: 1618
---> probID: leetcode_572_A
---> inputs:

---> outputs:
true

class TreeNode :
    def __init__ ( self , rootData ) :
        self . val = rootData
        self . left = None
        self . right = None
class Solution :
    def __init__ ( self ) :
        self . trees = set ( )
    def isSubtree ( self , s : TreeNode , t : TreeNode ) -> bool :
        tree1 = self . preorder ( s , True )
        tree2 = self . preorder ( t , True )
        return tree1 . find ( tree2 ) >= 0
    def preorder ( self , t : TreeNode , left : bool ) -> str :
        if not t :
            if left :
                return "lnull"
            else :
                return "rnull"
        return "#" + str ( t . val ) + " " + self . preorder ( t . left , True ) + " " + self . preorder ( t . right , False )
if __name__ == "__main__" :
    sObj = Solution ( )
    root = TreeNode ( 3 )
    root . left = TreeNode ( 4 )
    root . right = TreeNode ( 5 )
    root . left . left = TreeNode ( 1 )
    root . left . right = TreeNode ( 2 )
    subRoot = TreeNode ( 4 )
    subRoot . left = TreeNode ( 1 )
    subRoot . right = TreeNode ( 2 )
    out = sObj . isSubtree ( root , subRoot )
    print ( out )


---> console_out:
True
 
MATCHED!! :D
 93%|█████████▎| 1618/1746 [15:30<00:28,  4.47it/s]

-------------------------------------


---> lineNum: 1619
---> probID: geeksforgeeks_3925_A
---> inputs:

---> outputs:
3


M = 1001
MOD = 998244353
dp = [ [ - 1 for j in range ( M ) ] for i in range ( M ) ]
def solve ( idx , diff , N , M , K ) :
    if idx > N :
        if diff == K :
            return 1
        return 0
    if dp [ idx ] [ diff ] != - 1 :
        return dp [ idx ] [ diff ]
    ans = solve ( idx + 1 , diff , N , M , K )
    ans += ( M - 1 ) * solve ( idx + 1 , diff + 1 , N , M , K )
    dp [ idx ] [ diff ] = ans % MOD
    return dp [ idx ] [ diff ]
N , M , K = 3 , 3 , 0
for i in range ( M + 1 ) :
    for j in range ( M + 1 ) :
        dp [ i ] [ j ] = - 1
print ( M * solve ( 2 , 0 , N , M , K ) )


---> console_out:
3
 
MATCHED!! :D
out1,out2  15909330


-------------------------------------


---> lineNum: 1620
---> probID: projecteuler_p222_A
---> inputs:

---> outputs:
1590933

class p222 :
    def __init__ ( self ) :
        pass
    def main ( self ) :
        print ( self . run ( ) )
    def run ( self ) :
        self . sphereRadii = [ 0.0 ] * 21
        for i in range ( len ( self . sphereRadii ) ) :
            self . sphereRadii [ i ] = ( i + 30 ) * 1000
        self . minLength = [ [ 0.0 ] * ( 1 << len ( self . sphereRadii ) ) for _ in range ( len ( self . sphereRadii ) ) ]
        min_val = float ( 'inf' )
        for i in range ( len ( self . sphereRadii ) ) :
            min_val = min ( self . findMinimumLength ( i , ( 1 << len ( self . sphereRadii ) ) - 1 ) + self . sphereRadii [ i ] , min_val )
        return str ( round ( min_val ) )
    def findMinimumLength ( self , currentSphereIndex , setOfSpheres ) :
        if ( setOfSpheres & ( 1 << currentSphereIndex ) ) == 0 :
            raise ValueError ( )
        if self . minLength [ currentSphereIndex ] [ setOfSpheres ] == 0 :
            result = 0.0
            if bin ( setOfSpheres ) . count ( '1' ) == 1 :
                result = self . sphereRadii [ currentSphereIndex ]
            else :
                result = float ( 'inf' )
                newSetOfSpheres = setOfSpheres ^ ( 1 << currentSphereIndex )
                for i in range ( len ( self . sphereRadii ) ) :
                    if ( newSetOfSpheres & ( 1 << i ) ) == 0 :
                        continue
                    temp = ( ( self . sphereRadii [ i ] + self . sphereRadii [ currentSphereIndex ] - 50000 ) * 200000 ) ** 0.5
                    temp += self . findMinimumLength ( i , newSetOfSpheres )
                    result = min ( temp , result )
            self . minLength [ currentSphereIndex ] [ setOfSpheres ] = result
        return self . minLength [ currentSphereIndex ] [ setOfSpheres ]


---> console_out:
 
DIDN'T MATCH!! :(
 93%|█████████▎| 1620/1746 [15:30<00:23,  5.40it/s]

-------------------------------------


---> lineNum: 1621
---> probID: aizu_p00003_A
---> inputs:
3
4 3 5
4 3 6
8 8 8
---> outputs:
YES
NO
NO

import sys
def answer ( j ) :
    if j :
        print ( "YES" )
    else :
        print ( "NO" )
n = 0
sides = [ 0 , 0 , 0 ]
judge = False
line = ""
tmp = [ ]
try :
    line = input ( )
    n = int ( line )
    for i in range ( n ) :
        line = input ( )
        tmp = line . split ( " " )
        for j in range ( len ( sides ) ) :
            sides [ j ] = int ( tmp [ j ] )
            sides [ j ] *= sides [ j ]
        for j in range ( len ( sides ) ) :
            if sides [ j % 3 ] == sides [ ( j + 1 ) % 3 ] + sides [ ( j + 2 ) % 3 ] :
                judge = True
                break
            else :
                judge = False
        answer ( judge )
except :
    sys . exit ( 0 )


---> console_out:
YES
NO
NO
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1622
---> probID: geeksforgeeks_1436_A
---> inputs:

---> outputs:
7


import numpy as np
def getTotalXorOfSubarrayXors ( arr , N ) :
    if N % 2 == 0 :
        return 0
    res = 0
    for i in range ( 0 , N , 2 ) :
        res ^= arr [ i ]
    return res
arr = np . array ( [ 3 , 5 , 2 , 4 , 6 ] )
N = arr . size
print ( getTotalXorOfSubarrayXors ( arr , N ) )


---> console_out:
7
 
MATCHED!! :D
 93%|█████████▎| 1622/1746 [15:30<00:22,  5.53it/s]

-------------------------------------


---> lineNum: 1623
---> probID: geeksforgeeks_4575_A
---> inputs:

---> outputs:
7


import numpy as np
def getTotalXorOfSubarrayXors ( arr , N ) :
    res = 0
    for i in range ( N ) :
        freq = ( i + 1 ) * ( N - i )
        if freq % 2 == 1 :
            res = res ^ arr [ i ]
    return res
arr = np . array ( [ 3 , 5 , 2 , 4 , 6 ] )
N = arr . size
print ( getTotalXorOfSubarrayXors ( arr , N ) )


---> console_out:
7
 
MATCHED!! :D
 93%|█████████▎| 1623/1746 [15:31<00:24,  4.99it/s]Traceback (most recent call last):
  File "./junk/1703784616293_1395/main.py", line 2, in <module>
    l , p , q = map ( float , sys . stdin . readline ( ) . split ( ) )
ValueError: not enough values to unpack (expected 3, got 1)
out1,out2  500


-------------------------------------


---> lineNum: 1624
---> probID: codeforces_591_A
---> inputs:
100
50
50
---> outputs:
50

import sys
l , p , q = map ( float , sys . stdin . readline ( ) . split ( ) )
print ( ( p * l ) / ( p + q ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1625
---> probID: codeforces_1300_B
---> inputs:
3
1
1 1
3
6 5 4 1 2 3
5
13 4 20 13 2 5 8 3 17 16
---> outputs:
0
1
5

import sys
t = int ( input ( ) )
for _ in range ( t ) :
    n = int ( input ( ) )
    arr = list ( map ( int , input ( ) . split ( ) ) )
    arr . sort ( )
    print ( abs ( arr [ n ] - arr [ n - 1 ] ) )


---> console_out:
0
1
5
 
MATCHED!! :D
 93%|█████████▎| 1625/1746 [15:31<00:18,  6.43it/s]Traceback (most recent call last):
  File "./junk/1703784616433_6989/main.py", line 7, in <module>
    a = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '-3 3 0 0 3'
out1,out2  30


-------------------------------------


---> lineNum: 1626
---> probID: codeforces_131_B
---> inputs:
5
-3 3 0 0 3
---> outputs:
3

import sys
n = int ( input ( ) )
cntp = [ 0 ] * 11
cntn = [ 0 ] * 11
cnt = 0
for i in range ( n ) :
    a = int ( input ( ) )
    if a == 0 :
        cnt += 1
    elif a > 0 :
        cntp [ a ] += 1
    else :
        cntn [ abs ( a ) ] += 1
res = 0
for i in range ( 1 , 11 ) :
    res += cntp [ i ] * cntn [ i ]
res += ( cnt * ( cnt - 1 ) ) // 2
sys . stdout . write ( str ( res ) )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784616494_9500/main.py", line 41, in <module>
    CF95A ( ) . main ( )
  File "./junk/1703784616494_9500/main.py", line 4, in __init__
    super ( ) . __init__ ( sys . stdout . buffer , True )
TypeError: object.__init__() takes exactly one argument (the instance to initialize)
out1,out2  petrlovttttttnumtttt


-------------------------------------


---> lineNum: 1627
---> probID: codeforces_95_A
---> inputs:
3
bers
ucky
elu
PetrLoveLuckyNumbers
t
---> outputs:
PetrLovtTttttNumtttt

import sys
class CF95A :
    def __init__ ( self ) :
        super ( ) . __init__ ( sys . stdout . buffer , True )
        self . sc = sys . stdin . buffer
    def compare ( self , aa , i , bb , j , m ) :
        while m > 0 :
            a = chr ( aa [ i ] ) . upper ( )
            b = chr ( bb [ j ] ) . upper ( )
            if a != b :
                return ord ( a ) - ord ( b )
            i += 1
            j += 1
            m -= 1
        return 0
    def main ( self ) :
        n = int ( self . sc . readline ( ) )
        ss = [ self . sc . readline ( ) . strip ( ) for _ in range ( n ) ]
        cc = self . sc . readline ( ) . strip ( )
        m = len ( cc )
        c = chr ( self . sc . read ( 1 ) [ 0 ] )
        c_ = c . upper ( )
        a = 'b' if c == b'a' else 'a'
        a_ = a . upper ( )
        lucky = [ False ] * m
        for j in range ( m ) :
            for i in range ( n ) :
                l = len ( ss [ i ] )
                if m - j >= l and self . compare ( cc , j , ss [ i ] . encode ( ) , 0 , l ) == 0 :
                    for h in range ( l ) :
                        lucky [ j + h ] = True
        cc = bytearray ( cc )
        for j in range ( m ) :
            if lucky [ j ] :
                if cc [ j : j + 1 ] . lower ( ) == c :
                    cc [ j : j + 1 ] = a_ if cc [ j : j + 1 ] . isupper ( ) else a . encode ( )
                else :
                    cc [ j : j + 1 ] = c_ if cc [ j : j + 1 ] . isupper ( ) else c . encode ( )
        self . write ( cc )
if __name__ == '__main__' :
    CF95A ( ) . main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 93%|█████████▎| 1627/1746 [15:31<00:14,  7.98it/s]

-------------------------------------


---> lineNum: 1628
---> probID: atcoder_ABC098_C
---> inputs:
5
WEEWW
---> outputs:
1

import sys
a = int ( input ( ) )
c = input ( ) . strip ( )
w = [ 0 ] * ( a + 1 )
e = [ 0 ] * ( a + 1 )
min_val = a
for i in range ( 1 , a + 1 ) :
    if c [ i - 1 ] == 'W' :
        w [ i ] += 1
    else :
        e [ i ] += 1
    w [ i ] += w [ i - 1 ]
    e [ i ] += e [ i - 1 ]
for i in range ( 1 , a + 1 ) :
    min_val = min ( min_val , w [ i - 1 ] + e [ a ] - e [ i ] )
print ( min_val )


---> console_out:
1
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784616624_6506/main.py", line 6, in <module>
    num1 = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '1 2 3'
out1,out2  10


-------------------------------------


---> lineNum: 1629
---> probID: codeforces_1213_A
---> inputs:
3
1 2 3
---> outputs:
1

import sys
n = int ( input ( ) )
even = 0
odd = 0
for i in range ( n ) :
    num1 = int ( input ( ) )
    if num1 % 2 == 0 :
        even += 1
    else :
        odd += 1
if even > odd :
    print ( odd )
else :
    print ( even )


---> console_out:
 
DIDN'T MATCH!! :(
 93%|█████████▎| 1629/1746 [15:31<00:12,  9.50it/s]

-------------------------------------


---> lineNum: 1630
---> probID: aizu_p00222_A
---> inputs:
13
14
15
16
17
18
19
20
10000
0
---> outputs:
13
13
13
13
13
13
19
19
9439

import sys
class Main :
    def doIt ( self ) :
        MAX = 10000000
        prime = [ False ] * ( MAX + 1 )
        for i in range ( 3 , MAX + 1 , 2 ) :
            prime [ i ] = True
        for i in range ( 3 , int ( MAX ** 0.5 ) + 1 , 2 ) :
            if prime [ i ] :
                for j in range ( i * 3 , MAX + 1 , i * 2 ) :
                    prime [ j ] = False
        n = int ( sys . stdin . readline ( ) )
        while n != 0 :
            if n % 2 == 0 :
                n -= 1
            for i in range ( n , 12 , - 2 ) :
                if prime [ i ] and prime [ i - 2 ] and prime [ i - 6 ] and prime [ i - 8 ] :
                    print ( i )
                    break
            n = int ( sys . stdin . readline ( ) )
obj = Main ( )
obj . doIt ( )


---> console_out:
13
13
13
13
13
13
19
19
9439
 
MATCHED!! :D
 93%|█████████▎| 1629/1746 [15:50<00:12,  9.50it/s]out1,out2 timeoutencounteredpy 201010


-------------------------------------


---> lineNum: 1631
---> probID: codeforces_705_B
---> inputs:
3
1 2 3
---> outputs:
2
1
1

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = StringTokenizer ( self . br ( ) . strip ( ) )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return self . br ( ) . strip ( )
scan = FastReader ( )
def solve ( ) :
    t = scan . nextInt ( )
    arr = [ 0 ] * t
    for i in range ( t ) :
        arr [ i ] = scan . nextInt ( )
    prevWinner = 0
    for i in range ( t ) :
        if arr [ i ] == 1 :
            if prevWinner == 0 :
                prevWinner = 2
        if prevWinner == 2 or prevWinner == 0 :
            if ( arr [ i ] - 1 ) % 2 == 0 :
                print ( 2 )
                prevWinner = 2
            else :
                print ( 1 )
                prevWinner = 1
        else :
            if ( arr [ i ] - 1 ) % 2 == 0 :
                print ( 1 )
                prevWinner = 1
            else :
                print ( 2 )
                prevWinner = 2
def main ( ) :
    t = 1
    while t > 0 :
        solve ( )
        t -= 1
if __name__ == '__main__' :
    main ( )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 93%|█████████▎| 1631/1746 [16:13<12:39,  6.60s/it]

-------------------------------------


---> lineNum: 1632
---> probID: geeksforgeeks_4496_A
---> inputs:

---> outputs:
Yes


import math
def powerOfTwo ( n ) :
    return ( n & ( n - 1 ) ) == 0
def onlyFirstAndLastAreSet ( n ) :
    if n == 1 :
        return True
    return powerOfTwo ( n - 1 )
if __name__ == '__main__' :
    n = int ( "9" )
    if onlyFirstAndLastAreSet ( n ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
Yes
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784658354_3310/main.py", line 35, in <module>
    print ( minimumCostOfBreaking ( X , Y , m , n ) )
  File "./junk/1703784658354_3310/main.py", line 11, in minimumCostOfBreaking
    if X [ i ] > Y [ j ] :
IndexError: index 3 is out of bounds for axis 0 with size 3
out1,out2  420


-------------------------------------


---> lineNum: 1633
---> probID: geeksforgeeks_961_A
---> inputs:

---> outputs:
42


import numpy as np
def minimumCostOfBreaking ( X , Y , m , n ) :
    res = 0
    X = np . sort ( X ) [ : : - 1 ]
    Y = np . sort ( Y ) [ : : - 1 ]
    hzntl = 1
    vert = 1
    i = 0
    j = 0
    while i < m and j < n :
        if X [ i ] > Y [ j ] :
            res += X [ i ] * vert
            hzntl += 1
            i += 1
        else :
            res += Y [ j ] * hzntl
            vert += 1
            j += 1
    total = 0
    while i < m :
        total += X [ i ]
        i += 1
    res += total * vert
    total = 0
    while j < n :
        total += Y [ j ]
        j += 1
    res += total * hzntl
    return res
if __name__ == '__main__' :
    m = 6
    n = 4
    X = np . array ( [ 2 , 1 , 3 , 1 , 4 ] )
    Y = np . array ( [ 4 , 1 , 2 ] )
    print ( minimumCostOfBreaking ( X , Y , m , n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 94%|█████████▎| 1633/1746 [16:13<08:41,  4.61s/it]

-------------------------------------


---> lineNum: 1634
---> probID: geeksforgeeks_1335_A
---> inputs:

---> outputs:
Total possible pair with GCD  2 & LCM  12 =  4


def gcd ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )
def countPairs ( G , L ) :
    count = 0
    p = G * L
    for a in range ( 1 , L + 1 ) :
        if p % a == 0 and gcd ( a , p // a ) == G :
            count += 1
    return count
if __name__ == "__main__" :
    G , L = 2 , 12
    print ( "Total possible pair with GCD" , G , "& LCM" , L , "=" , countPairs ( G , L ) )


---> console_out:
Total possible pair with GCD 2 & LCM 12 = 4
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1635
---> probID: geeksforgeeks_2113_A
---> inputs:

---> outputs:
F(5) is 7


import numpy as np
def multiply ( a , b ) :
    mul = np . zeros ( ( 3 , 3 ) , dtype = int )
    for i in range ( 3 ) :
        for j in range ( 3 ) :
            mul [ i ] [ j ] = 0
            for k in range ( 3 ) :
                mul [ i ] [ j ] += a [ i ] [ k ] * b [ k ] [ j ]
    for i in range ( 3 ) :
        for j in range ( 3 ) :
            a [ i ] [ j ] = mul [ i ] [ j ]
def power ( F , n ) :
    M = np . array ( [ [ 1 , 1 , 1 ] , [ 1 , 0 , 0 ] , [ 0 , 1 , 0 ] ] , dtype = int )
    if n == 1 :
        return F [ 0 ] [ 0 ] + F [ 0 ] [ 1 ]
    power ( F , n // 2 )
    multiply ( F , F )
    if n % 2 != 0 :
        multiply ( F , M )
    return F [ 0 ] [ 0 ] + F [ 0 ] [ 1 ]
def findNthTerm ( n ) :
    F = np . array ( [ [ 1 , 1 , 1 ] , [ 1 , 0 , 0 ] , [ 0 , 1 , 0 ] ] , dtype = int )
    return power ( F , n - 2 )
n = 5
print ( "F(5) is" , findNthTerm ( n ) )


---> console_out:
F(5) is 7
 
MATCHED!! :D
 94%|█████████▎| 1635/1746 [16:13<06:00,  3.25s/it]

-------------------------------------


---> lineNum: 1636
---> probID: geeksforgeeks_5007_A
---> inputs:

---> outputs:
1 12 111


import sys
def MinimumValue ( x , y ) :
    if x > y :
        temp = x
        x = y
        y = temp
    a = 1
    b = x - 1
    c = y - b
    print ( a , b , c )
def main ( ) :
    x = 123
    y = 13
    MinimumValue ( x , y )
if __name__ == "__main__" :
    main ( )


---> console_out:
1 12 111
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784659051_5923/main.py", line 1, in <module>
    class Solution :
  File "./junk/1703784659051_5923/main.py", line 2, in Solution
    def checkPossibility ( self , nums : List [ int ] ) -> bool :
NameError: name 'List' is not defined
out1,out2  true


-------------------------------------


---> lineNum: 1637
---> probID: leetcode_665_A
---> inputs:

---> outputs:
true

class Solution :
    def checkPossibility ( self , nums : List [ int ] ) -> bool :
        brokenPoint = 0
        for i in range ( len ( nums ) - 1 ) :
            if nums [ i ] > nums [ i + 1 ] :
                brokenPoint += 1
                if brokenPoint >= 2 :
                    return False
                if i - 1 < 0 or nums [ i - 1 ] <= nums [ i + 1 ] :
                    nums [ i ] = nums [ i + 1 ]
                else :
                    nums [ i + 1 ] = nums [ i ]
        return True
sObj = Solution ( )
nums = [ 4 , 2 , 3 ]
out = sObj . checkPossibility ( nums )
print ( out )


---> console_out:
 
DIDN'T MATCH!! :(
 94%|█████████▍| 1637/1746 [16:13<04:08,  2.28s/it]

-------------------------------------


---> lineNum: 1638
---> probID: geeksforgeeks_3476_A
---> inputs:

---> outputs:
4


def check ( mid , array , n , K ) :
    count = 0
    sum = 0
    for i in range ( n ) :
        if array [ i ] > mid :
            return False
        sum += array [ i ]
        if sum > mid :
            count += 1
            sum = array [ i ]
    count += 1
    if count <= K :
        return True
    return False
def solve ( array , n , K ) :
    start = 1
    end = 0
    for i in range ( n ) :
        end += array [ i ]
    answer = 0
    while start <= end :
        mid = ( start + end ) // 2
        if check ( mid , array , n , K ) :
            answer = mid
            end = mid - 1
        else :
            start = mid + 1
    return answer
if __name__ == '__main__' :
    array = [ 1 , 2 , 3 , 4 ]
    n = len ( array )
    K = 3
    print ( solve ( array , n , K ) )


---> console_out:
4
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784659171_9074/main.py", line 26, in <module>
    M , N = map ( int , line . split ( ) )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2 0000 00204011090


-------------------------------------


---> lineNum: 1639
---> probID: aizu_p00881_A
---> inputs:
8 1
11010101
11 4
00111001100
01001101011
01010000011
01100110001
11 16
01000101111
01011000000
01011111001
01101101001
01110010111
01110100111
10000001010
10010001000
10010110100
10100010100
10101010110
10110100010
11001010011
11011001001
11111000111
11111011101
11 12
10000000000
01000000000
00100000000
00010000000
00001000000
00000100000
00000010000
00000001000
00000000100
00000000010
00000000001
00000000000
9 32
001000000
000100000
000010000
000001000
000000100
000000010
000000001
000000000
011000000
010100000
010010000
010001000
010000100
010000010
010000001
010000000
101000000
100100000
100010000
100001000
100000100
100000010
100000001
100000000
111000000
110100000
110010000
110001000
110000100
110000010
110000001
110000000
0 0
---> outputs:
0
2
4
11
9

import sys
M = 0
memo = [ - 1 ] * ( 1 << 22 )
def rec ( used , lst ) :
    if len ( lst ) <= 1 :
        return 0
    if memo [ used ] >= 0 :
        return memo [ used ]
    ret = 99
    for i in range ( M ) :
        if used & ( 3 << ( 2 * i ) ) :
            continue
        on = [ ]
        off = [ ]
        for v in lst :
            if v & ( 1 << i ) :
                on . append ( v )
            else :
                off . append ( v )
        if not on or not off :
            continue
        ret = min ( ret , max ( rec ( used | ( 1 << ( 2 * i ) ) , on ) , rec ( used | ( 2 << ( 2 * i ) ) , off ) ) )
    memo [ used ] = ret + 1
    return ret + 1
for line in sys . stdin :
    M , N = map ( int , line . split ( ) )
    if M == 0 :
        break
    lst = [ int ( x , 2 ) for x in sys . stdin . readline ( ) . split ( ) ]
    memo = [ - 1 ] * ( 1 << 22 )
    print ( rec ( 0 , lst ) )


---> console_out:
0
0
 
DIDN'T MATCH!! :(
 94%|█████████▍| 1639/1746 [16:14<02:53,  1.62s/it]

-------------------------------------


---> lineNum: 1640
---> probID: codeforces_1360_A
---> inputs:
8
3 2
4 2
1 1
3 1
4 7
1 3
7 4
100 100
---> outputs:
16
16
4
9
64
9
64
40000

import sys
def solve ( a , b ) :
    return min ( computeSquareArea ( a + a , b ) , computeSquareArea ( a + b , max ( a , b ) ) , computeSquareArea ( a , b + b ) )
def computeSquareArea ( side1 , side2 ) :
    size = max ( side1 , side2 )
    return size * size
if __name__ == "__main__" :
    t = int ( input ( ) )
    for tc in range ( t ) :
        a , b = map ( int , input ( ) . split ( ) )
        print ( solve ( a , b ) )


---> console_out:
16
16
4
9
64
9
64
40000
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1641
---> probID: codeforces_1690_B
---> inputs:
6
4
3 5 4 1
1 3 2 0
3
1 2 1
0 1 0
4
5 3 7 2
1 1 1 1
5
1 2 3 4 5
1 2 3 4 6
1
8
0
1
4
6
---> outputs:
YES
YES
NO
NO
YES
NO

import sys
def solve ( a , b , n ) :
    ans = [ 0 ] * n
    max_val = - sys . maxsize
    for i in range ( n ) :
        max_val = max ( max_val , a [ i ] - b [ i ] )
    if max_val < 0 :
        return False
    for i in range ( n ) :
        temp = a [ i ] - max_val
        if temp <= 0 :
            ans [ i ] = 0
        else :
            ans [ i ] = temp
    for i in range ( n ) :
        if ans [ i ] != b [ i ] :
            return False
    return True
if __name__ == '__main__' :
    t = int ( input ( ) )
    for _ in range ( t ) :
        n = int ( input ( ) )
        a = list ( map ( int , input ( ) . split ( ) ) )
        b = list ( map ( int , input ( ) . split ( ) ) )
        if solve ( a , b , n ) :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
YES
YES
NO
NO
YES
NO
 
MATCHED!! :D
 94%|█████████▍| 1641/1746 [16:14<02:00,  1.15s/it]Traceback (most recent call last):
  File "./junk/1703784659467_9764/main.py", line 8, in <module>
    print ( even_or_odd ( N ) )
  File "./junk/1703784659467_9764/main.py", line 2, in even_or_odd
    len = len ( N )
UnboundLocalError: local variable 'len' referenced before assignment
out1,out2  odd


-------------------------------------


---> lineNum: 1642
---> probID: geeksforgeeks_1819_A
---> inputs:

---> outputs:
Odd


def even_or_odd ( N ) :
    len = len ( N )
    if N [ len - 1 ] == '0' or N [ len - 1 ] == '2' or N [ len - 1 ] == '4' or N [ len - 1 ] == '6' :
        return "Even"
    else :
        return "Odd"
N = "735"
print ( even_or_odd ( N ) )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1703784659528_7832/main.py", line 23
    sc = Scanner ( System . in )
                            ^
SyntaxError: invalid syntax
out1,out2  1020301040501020304050


-------------------------------------


---> lineNum: 1643
---> probID: aizu_p02434_A
---> inputs:
3 13
0 0 1
0 0 2
0 0 3
0 1 -1
0 2 4
0 2 5
1 0
1 1
1 2
2 1
1 0
1 1
1 2
---> outputs:
1 2 3
-1
4 5
1 2 3

4 5

import java . util . Arrays
import java . util . Scanner
class Vector :
    def __init__ ( self ) :
        self . A = [ 0 ] * 20
        self . length = 0
    def add ( self , x ) :
        if self . length == len ( self . A ) :
            self . A = Arrays . copyOf ( self . A , self . length * 2 )
        self . A [ self . length ] = x
        self . length += 1
    def deleteBack ( self ) :
        self . length -= 1
    def __str__ ( self ) :
        sb = ""
        if self . length > 0 :
            sb += str ( self . A [ 0 ] )
        for i in range ( 1 , self . length ) :
            sb += " "
            sb += str ( self . A [ i ] )
        return sb
if __name__ == "__main__" :
    sc = Scanner ( System . in )
    n , q = map ( int , sc . nextLine ( ) . split ( ) )
    v = [ Vector ( ) for _ in range ( n ) ]
    active = [ False ] * n
    for i in range ( q ) :
        req , t = map ( int , sc . nextLine ( ) . split ( ) )
        if req == 0 :
            if not active [ t ] :
                v [ t ] = Vector ( )
                active [ t ] = True
            v [ t ] . add ( int ( sc . nextLine ( ) ) )
        elif req == 1 :
            if active [ t ] :
                print ( v [ t ] )
            else :
                print ( )
        elif req == 2 :
            active [ t ] = False


---> console_out:
 
DIDN'T MATCH!! :(
 94%|█████████▍| 1643/1746 [16:14<01:24,  1.21it/s]Traceback (most recent call last):
  File "./junk/1703784659599_6107/main.py", line 1, in <module>
    import java . util . Scanner
ModuleNotFoundError: No module named 'java'
out1,out2  30


-------------------------------------


---> lineNum: 1644
---> probID: codeforces_25_A
---> inputs:
5
2 4 7 8 10
---> outputs:
3

import java . util . Scanner
n = int ( input ( ) )
k1 , k2 , w1 , w2 = 0 , 0 , 0 , 0
a = [ 0 ] * n
for i in range ( n ) :
    a [ i ] = int ( input ( ) )
    if a [ i ] % 2 == 0 :
        w1 += 1
        k1 = i + 1
    else :
        w2 += 1
        k2 = i + 1
print ( k1 if w1 == 1 else k2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1645
---> probID: geeksforgeeks_4124_A
---> inputs:

---> outputs:
3


def solve ( X , Y , N , K ) :
    count = [ 0 ] * ( N + 1 )
    sol = 0
    count [ 0 ] = 0
    for i in range ( 1 , N + 1 ) :
        count [ i ] = count [ i - 1 ] + abs ( ord ( X [ i - 1 ] ) - ord ( Y [ i - 1 ] ) )
    j = 0
    for i in range ( 1 , N + 1 ) :
        while ( count [ i ] - count [ j ] ) > K :
            j += 1
        sol = max ( sol , i - j )
    return sol
if __name__ == '__main__' :
    N = 4
    X = "abcd"
    Y = "bcde"
    K = 3
    print ( solve ( X , Y , N , K ) )


---> console_out:
3
 
MATCHED!! :D
 94%|█████████▍| 1645/1746 [16:14<01:00,  1.68it/s]Traceback (most recent call last):
  File "./junk/1703784659724_2746/main.py", line 21, in <module>
    Main ( ) . run ( )
  File "./junk/1703784659724_2746/main.py", line 14, in run
    self . solve ( )
  File "./junk/1703784659724_2746/main.py", line 18, in solve
    gcd = math . gcd ( gcd , self . a [ i ] )
IndexError: list index out of range
out1,out2  yes


-------------------------------------


---> lineNum: 1646
---> probID: aizu_p01574_A
---> inputs:
6 2
2
5
---> outputs:
Yes

import math
import sys
class Main :
    def __init__ ( self ) :
        self . INF = 1 << 28
        self . EPS = 1e-9
        self . sc = sys . stdin
        self . n = 0
        self . m = 0
        self . a = [ ]
    def run ( self ) :
        self . n , self . m = map ( int , self . sc . readline ( ) . split ( ) )
        self . a = list ( map ( int , self . sc . readline ( ) . split ( ) ) )
        self . solve ( )
    def solve ( self ) :
        gcd = self . a [ 0 ]
        for i in range ( 1 , self . m ) :
            gcd = math . gcd ( gcd , self . a [ i ] )
        print ( "Yes" if math . gcd ( gcd , self . n ) == 1 else "No" )
if __name__ == '__main__' :
    Main ( ) . run ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1647
---> probID: geeksforgeeks_597_A
---> inputs:

---> outputs:
No


import math
def isPrime ( n , i ) :
    if n <= 2 :
        return n == 2
    if n % i == 0 :
        return False
    if i * i > n :
        return True
    return isPrime ( n , i + 1 )
if __name__ == '__main__' :
    n = 15
    if isPrime ( n , 2 ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
No
 
MATCHED!! :D
 94%|█████████▍| 1647/1746 [16:14<00:43,  2.30it/s]

-------------------------------------


---> lineNum: 1648
---> probID: geeksforgeeks_2219_A
---> inputs:

---> outputs:
3


import math
def isPrime ( n ) :
    i = 2
    while i * i <= n :
        if n % i == 0 :
            return False
        i += 1
    return True
def minimumSum ( n ) :
    if isPrime ( n ) :
        return 1
    if n % 2 == 0 :
        return 2
    if isPrime ( n - 2 ) :
        return 2
    return 3
n = 27
print ( minimumSum ( n ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1649
---> probID: geeksforgeeks_4767_A
---> inputs:

---> outputs:
2


import math
def isPrime ( x ) :
    for i in range ( 2 , int ( math . sqrt ( x ) ) + 1 ) :
        if x % i == 0 :
            return False
    return True
def minimumCost ( n ) :
    if isPrime ( n ) :
        return 1
    if n % 2 == 1 and isPrime ( n - 2 ) :
        return 2
    if n % 2 == 0 :
        return 2
    return 3
n = 6
print ( minimumCost ( n ) )


---> console_out:
2
 
MATCHED!! :D
 94%|█████████▍| 1649/1746 [16:14<00:31,  3.10it/s]

-------------------------------------


---> lineNum: 1650
---> probID: geeksforgeeks_4507_A
---> inputs:

---> outputs:
Next higher number with same number of set bits is 163


def snoob ( x ) :
    rightOne = 0
    nextHigherOneBit = 0
    rightOnesPattern = 0
    next = 0
    if x > 0 :
        rightOne = x & - x
        nextHigherOneBit = x + rightOne
        rightOnesPattern = x ^ nextHigherOneBit
        rightOnesPattern = rightOnesPattern // rightOne
        rightOnesPattern >>= 2
        next = nextHigherOneBit | rightOnesPattern
    return next
if __name__ == '__main__' :
    x = 156
    print ( "Next higher number with same number of set bits is" , snoob ( x ) )


---> console_out:
Next higher number with same number of set bits is 163
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1651
---> probID: geeksforgeeks_1666_A
---> inputs:

---> outputs:
5
6


def properDivisorSum ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , int ( i ** 0.5 ) + 1 ) :
            if i % j == 0 :
                if i // j == j :
                    sum += j
                else :
                    sum += j + i // j
        sum = sum - i
    return sum
n = 4
print ( properDivisorSum ( n ) )
n = 5
print ( properDivisorSum ( n ) )


---> console_out:
5
6
 
MATCHED!! :D
 95%|█████████▍| 1651/1746 [16:14<00:23,  4.00it/s]

-------------------------------------


---> lineNum: 1652
---> probID: geeksforgeeks_2359_A
---> inputs:

---> outputs:
2


import math
def getMinLength ( arr , n ) :
    count = 0
    result = math . inf
    for i in range ( n ) :
        if arr [ i ] == 1 :
            count += 1
        else :
            if count != 0 :
                result = min ( result , count )
            count = 0
    return result
if __name__ == '__main__' :
    arr = [ 1 , 1 , 0 , 0 , 1 , 1 , 1 , 0 , 1 , 1 , 1 , 1 ]
    n = len ( arr )
    print ( getMinLength ( arr , n ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1653
---> probID: geeksforgeeks_2858_A
---> inputs:

---> outputs:
12


import math
def getLevenstein ( input ) :
    revInput = input [ : : - 1 ]
    n = len ( input )
    dp = [ [ 0 for i in range ( n + 1 ) ] for j in range ( n + 1 ) ]
    for i in range ( n + 1 ) :
        dp [ 0 ] [ i ] = i
        dp [ i ] [ 0 ] = i
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , n + 1 ) :
            if input [ i - 1 ] == revInput [ j - 1 ] :
                dp [ i ] [ j ] = dp [ i - 1 ] [ j - 1 ]
            else :
                dp [ i ] [ j ] = 1 + min ( dp [ i - 1 ] [ j ] , dp [ i ] [ j - 1 ] )
    res = math . inf
    for i in range ( n , - 1 , - 1 ) :
        j = n - i
        res = min ( res , dp [ i ] [ j ] )
        if i < n :
            res = min ( res , dp [ i + 1 ] [ j ] )
        if i > 0 :
            res = min ( res , dp [ i - 1 ] [ j ] )
    return res
input = "myfirstgeekarticle"
print ( getLevenstein ( input ) )


---> console_out:
12
 
MATCHED!! :D
 95%|█████████▍| 1653/1746 [16:15<00:18,  5.16it/s] 95%|█████████▍| 1653/1746 [16:30<00:18,  5.16it/s]out1,out2 timeoutencounteredpy 75874570


-------------------------------------


---> lineNum: 1654
---> probID: projecteuler_p088_A
---> inputs:

---> outputs:
7587457

import math
LIMIT = 12000
class P088 :
    def __init__ ( self ) :
        self . minSumProduct = [ math . inf ] * ( LIMIT + 1 )
    def run ( self ) :
        for i in range ( 2 , LIMIT * 2 + 1 ) :
            self . factorize ( i , i , i , 0 , 0 )
        items = set ( self . minSumProduct [ 2 : ] )
        return str ( sum ( items ) )
    def factorize ( self , n , remain , maxFactor , sum , terms ) :
        if remain == 1 :
            if sum > n :
                raise AssertionError ( )
            terms += n - sum
            if terms <= LIMIT and n < self . minSumProduct [ terms ] :
                self . minSumProduct [ terms ] = n
        else :
            for i in range ( 2 , maxFactor + 1 ) :
                if remain % i == 0 :
                    factor = i
                    self . factorize ( n , remain // factor , min ( factor , maxFactor ) , sum + factor , terms + 1 )
if __name__ == '__main__' :
    print ( P088 ( ) . run ( ) )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 95%|█████████▍| 1654/1746 [16:55<11:06,  7.24s/it]

-------------------------------------


---> lineNum: 1655
---> probID: atcoder_AGC028_B
---> inputs:
2
1 2
---> outputs:
9

import sys
def modinv ( a , m ) :
    b = m
    u = 1
    v = 0
    while b > 0 :
        t = a // b
        a -= t * b
        tmp = a
        a = b
        b = tmp
        u -= t * v
        tmp = u
        u = v
        v = tmp
    u %= m
    if u < 0 :
        u += m
    return u
if __name__ == '__main__' :
    n = int ( sys . stdin . readline ( ) )
    sa = sys . stdin . readline ( ) . split ( )
    a = [ int ( x ) for x in sa ]
    mod = 1000000007
    p = 1
    for i in range ( 2 , n + 1 ) :
        p = p * i % mod
    q = [ 0 ] * n
    q [ 0 ] = 1
    for i in range ( 1 , n ) :
        q [ i ] = ( q [ i - 1 ] + modinv ( i + 1 , mod ) ) % mod
    ans = 0
    for i in range ( n ) :
        val = q [ i ] + q [ n - i - 1 ] - 1
        val *= a [ i ]
        val %= mod
        val *= p
        val %= mod
        ans += val
        ans %= mod
    print ( ans )


---> console_out:
9
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1656
---> probID: geeksforgeeks_3888_A
---> inputs:

---> outputs:
100 90 80 58 92 85 45 30 27 56 


from queue import Queue
def Print ( queue ) :
    while not queue . empty ( ) :
        print ( queue . queue [ 0 ] , end = " " )
        queue . get ( )
def reverseQueue ( q ) :
    if q . empty ( ) :
        return q
    data = q . queue [ 0 ]
    q . get ( )
    q = reverseQueue ( q )
    q . put ( data )
    return q
if __name__ == "__main__" :
    queue = Queue ( )
    queue . put ( 56 )
    queue . put ( 27 )
    queue . put ( 30 )
    queue . put ( 45 )
    queue . put ( 85 )
    queue . put ( 92 )
    queue . put ( 58 )
    queue . put ( 80 )
    queue . put ( 90 )
    queue . put ( 100 )
    queue = reverseQueue ( queue )
    Print ( queue )


---> console_out:
100 90 80 58 92 85 45 30 27 56  
MATCHED!! :D
 95%|█████████▍| 1656/1746 [16:55<07:15,  4.84s/it]out1,out2 differenceis40 differenceis30


-------------------------------------


---> lineNum: 1657
---> probID: geeksforgeeks_3576_A
---> inputs:

---> outputs:
Difference is  3


import math
MAX = 1000000
prime = [ True ] * ( MAX + 1 )
def SieveOfEratosthenes ( ) :
    for i in range ( 2 , int ( math . sqrt ( MAX ) ) + 1 ) :
        if prime [ i ] == True :
            for j in range ( i * 2 , MAX + 1 , i ) :
                prime [ j ] = False
def findDiff ( arr , n ) :
    min_val = MAX + 2
    max_val = - 1
    for i in range ( n ) :
        if prime [ arr [ i ] ] == True :
            if arr [ i ] > max_val :
                max_val = arr [ i ]
            if arr [ i ] < min_val :
                min_val = arr [ i ]
    return max_val - min_val if max_val != - 1 else - 1
SieveOfEratosthenes ( )
n = 4
arr = [ 1 , 2 , 3 , 5 ]
res = findDiff ( arr , n )
if res == - 1 :
    print ( "No prime numbers" )
else :
    print ( "Difference is" , res )


---> console_out:
Difference is 4
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784700803_8672/main.py", line 33, in <module>
    V , n = map ( int , input ( ) . split ( ) )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2  230


-------------------------------------


---> lineNum: 1658
---> probID: aizu_p00072_A
---> inputs:
4
4
0,1,1500
0,2,2000
1,2,600
1,3,500
0
---> outputs:
23

from typing import List
import sys
class AOJ_GRL_2 :
    def __init__ ( self , V : int , edges : List [ List [ int ] ] ) :
        self . cost = [ [ 0 ] * V for _ in range ( V ) ]
        for a , b , c in edges :
            self . cost [ a ] [ b ] = c
            self . cost [ b ] [ a ] = c
        self . d = [ sys . maxsize ] * V
        self . used = [ False ] * V
        self . INF = sys . maxsize
        self . cnt = 0
        self . Prim ( 0 )
    def Prim ( self , s : int ) :
        self . d [ s ] = 0
        while True :
            v = - 1
            for u in range ( V ) :
                if not self . used [ u ] and ( v == - 1 or self . d [ u ] < self . d [ v ] ) :
                    v = u
            if v == - 1 :
                break
            self . used [ v ] = True
            a = self . d [ v ] // 100
            if a > 0 :
                a -= 1
            self . cnt += a
            for k in range ( V ) :
                if not self . used [ k ] and self . cost [ v ] [ k ] != 0 :
                    self . d [ k ] = min ( self . cost [ v ] [ k ] , self . d [ k ] )
if __name__ == '__main__' :
    while True :
        V , n = map ( int , input ( ) . split ( ) )
        if V == 0 :
            break
        edges = [ list ( map ( int , input ( ) . split ( ',' ) ) ) for _ in range ( n ) ]
        aoj_grl_2 = AOJ_GRL_2 ( V , edges )
        print ( aoj_grl_2 . cnt )


---> console_out:
 
DIDN'T MATCH!! :(
 95%|█████████▍| 1658/1746 [16:55<04:53,  3.33s/it]

-------------------------------------


---> lineNum: 1659
---> probID: codeforces_672_A
---> inputs:
3
---> outputs:
3

import sys
n = int ( sys . stdin . readline ( ) . strip ( ) )
s = ""
for i in range ( 1 , n + 1 ) :
    s += str ( i )
print ( s [ n - 1 ] )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1660
---> probID: geeksforgeeks_3355_A
---> inputs:

---> outputs:
4


import string
def distinctSubString ( P , N ) :
    S = set ( )
    for i in range ( N ) :
        freq = [ False ] * 26
        s = ""
        for j in range ( i , N ) :
            pos = ord ( P [ j ] ) - ord ( 'a' )
            if freq [ pos ] :
                break
            freq [ pos ] = True
            s += P [ j ]
            S . add ( s )
    return len ( S )
if __name__ == "__main__" :
    S = "abba"
    N = len ( S )
    print ( distinctSubString ( S , N ) )


---> console_out:
4
 
MATCHED!! :D
 95%|█████████▌| 1660/1746 [16:55<03:17,  2.30s/it]

-------------------------------------


---> lineNum: 1661
---> probID: atcoder_ARC099_A
---> inputs:
7 3
1 2 3 4 5 6 7
---> outputs:
3


import sys
def solve ( ) :
    n , k = map ( int , input ( ) . split ( ) )
    a = list ( map ( int , input ( ) . split ( ) ) )
    x = 0
    if ( n - k ) % ( k - 1 ) == 0 :
        x = ( n - k ) // ( k - 1 )
    else :
        x = ( n - k ) // ( k - 1 ) + 1
    print ( x + 1 )
if __name__ == "__main__" :
    solve ( )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1662
---> probID: geeksforgeeks_60_A
---> inputs:

---> outputs:
2


import math
def minimumAdjacentDifference ( a , n , k ) :
    minDiff = math . inf
    for i in range ( 1 << n ) :
        cnt = bin ( i ) . count ( '1' )
        if cnt == n - k :
            temp = [ ]
            for j in range ( n ) :
                if i & ( 1 << j ) :
                    temp . append ( a [ j ] )
            maxDiff = - math . inf
            for j in range ( len ( temp ) - 1 ) :
                maxDiff = max ( maxDiff , temp [ j + 1 ] - temp [ j ] )
            minDiff = min ( minDiff , maxDiff )
    return minDiff
if __name__ == '__main__' :
    n = 5
    k = 2
    a = [ 3 , 7 , 8 , 10 , 14 ]
    print ( minimumAdjacentDifference ( a , n , k ) )


---> console_out:
2
 
MATCHED!! :D
 95%|█████████▌| 1662/1746 [16:55<02:14,  1.60s/it]

-------------------------------------


---> lineNum: 1663
---> probID: geeksforgeeks_3875_A
---> inputs:

---> outputs:
0 5 1 7 8 

import sys
def difference ( arr , n ) :
    largest = arr [ 0 ]
    for i in range ( n ) :
        if largest < arr [ i ] :
            largest = arr [ i ]
    for i in range ( n ) :
        arr [ i ] = largest - arr [ i ]
    for i in range ( n ) :
        print ( arr [ i ] , end = " " )
def main ( ) :
    arr = [ 10 , 5 , 9 , 3 , 2 ]
    n = len ( arr )
    difference ( arr , n )
if __name__ == "__main__" :
    main ( )


---> console_out:
0 5 1 7 8  
MATCHED!! :D


-------------------------------------


---> lineNum: 1664
---> probID: geeksforgeeks_432_A
---> inputs:

---> outputs:
5


import math
def countKdivPairs ( A , n , K ) :
    freq = [ 0 ] * K
    for i in range ( n ) :
        freq [ A [ i ] % K ] += 1
    sum = freq [ 0 ] * ( freq [ 0 ] - 1 ) // 2
    for i in range ( 1 , K // 2 + 1 ) :
        if i != K - i :
            sum += freq [ i ] * freq [ K - i ]
    if K % 2 == 0 :
        sum += freq [ K // 2 ] * ( freq [ K // 2 ] - 1 ) // 2
    return sum
A = [ 2 , 2 , 1 , 7 , 5 , 3 ]
n = 6
K = 4
print ( countKdivPairs ( A , n , K ) )


---> console_out:
5
 
MATCHED!! :D
 95%|█████████▌| 1664/1746 [16:56<01:32,  1.13s/it]Traceback (most recent call last):
  File "./junk/1703784701277_8371/main.py", line 3, in <module>
    S = [ input ( ) for i in range ( 3 ) ]
  File "./junk/1703784701277_8371/main.py", line 3, in <listcomp>
    S = [ input ( ) for i in range ( 3 ) ]
EOFError: EOF when reading a line


-------------------------------------


---> lineNum: 1665
---> probID: aizu_p00183_A
---> inputs:
bbw
wbw
+b+
bwb
wbw
wbw
0
---> outputs:
b
NA

import sys
while True :
    S = [ input ( ) for i in range ( 3 ) ]
    if S [ 0 ] == '0' :
        break
    f = True
    for i in range ( 3 ) :
        if S [ i ] [ 0 ] == S [ i ] [ 1 ] == S [ i ] [ 2 ] and S [ i ] [ 0 ] != '+' :
            print ( S [ i ] [ 0 ] )
            f = False
            break
        if S [ 0 ] [ i ] == S [ 1 ] [ i ] == S [ 2 ] [ i ] and S [ 0 ] [ i ] != '+' :
            print ( S [ 0 ] [ i ] )
            f = False
            break
    if f and S [ 0 ] [ 0 ] == S [ 1 ] [ 1 ] == S [ 2 ] [ 2 ] and S [ 0 ] [ 0 ] != '+' :
        print ( S [ 0 ] [ 0 ] )
        f = False
    if f and S [ 0 ] [ 2 ] == S [ 1 ] [ 1 ] == S [ 2 ] [ 0 ] and S [ 0 ] [ 2 ] != '+' :
        print ( S [ 0 ] [ 2 ] )
        f = False
    if f :
        print ( "NA" )


---> console_out:
b
NA
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1666
---> probID: geeksforgeeks_2349_A
---> inputs:

---> outputs:
Index of 0 to be replaced is  9


def maxOnesIndex ( arr , n ) :
    max_count = 0
    max_index = 0
    prev_zero = - 1
    prev_prev_zero = - 1
    for curr in range ( n ) :
        if arr [ curr ] == 0 :
            if curr - prev_prev_zero > max_count :
                max_count = curr - prev_prev_zero
                max_index = prev_zero
            prev_prev_zero = prev_zero
            prev_zero = curr
    if n - prev_prev_zero > max_count :
        max_index = prev_zero
    return max_index
arr = [ 1 , 1 , 0 , 0 , 1 , 0 , 1 , 1 , 1 , 0 , 1 , 1 , 1 ]
n = len ( arr )
print ( "Index of 0 to be replaced is" , maxOnesIndex ( arr , n ) )


---> console_out:
Index of 0 to be replaced is 9
 
MATCHED!! :D
 95%|█████████▌| 1666/1746 [16:56<01:04,  1.24it/s]out1,out2 100260 100260


-------------------------------------


---> lineNum: 1667
---> probID: geeksforgeeks_3836_A
---> inputs:

---> outputs:
10.0
26.0


def minimumX ( n , k ) :
    ans = float ( 'inf' )
    for rem in range ( k - 1 , 0 , - 1 ) :
        if n % rem == 0 :
            ans = min ( ans , rem + ( n // rem ) * k )
    return ans
n , k = 4 , 6
print ( minimumX ( n , k ) )
n , k = 5 , 5
print ( minimumX ( n , k ) )


---> console_out:
10
26
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1668
---> probID: geeksforgeeks_2793_A
---> inputs:

---> outputs:
4652135769797794


def moduloMultiplication ( a , b , mod ) :
    res = 0
    a %= mod
    while b > 0 :
        if b & 1 > 0 :
            res = ( res + a ) % mod
        a = ( 2 * a ) % mod
        b >>= 1
    return res
a = 10123465234878998
b = 65746311545646431
m = 10005412336548794
print ( moduloMultiplication ( a , b , m ) )


---> console_out:
4652135769797794
 
MATCHED!! :D
 96%|█████████▌| 1668/1746 [16:56<00:45,  1.73it/s]

-------------------------------------


---> lineNum: 1669
---> probID: aizu_p00225_A
---> inputs:
5
apple
yellow
georgia
king
email
7
apple
yellow
georgia
king
email
wink
lucky
0
---> outputs:
NG
OK

import numpy as np
MAX = ord ( 'Z' ) - ord ( 'A' ) + 1
n = 0
inDeg = np . zeros ( MAX , dtype = int )
outDeg = np . zeros ( MAX , dtype = int )
vis = np . zeros ( MAX , dtype = int )
nei = np . zeros ( ( MAX , MAX ) , dtype = int )
def check ( ) :
    for i in range ( MAX ) :
        if vis [ i ] != 1 :
            return False
    for i in range ( MAX ) :
        if inDeg [ i ] != outDeg [ i ] :
            return False
    return True
def dfs ( k ) :
    if vis [ k ] == 1 :
        return
    vis [ k ] = 1
    for i in range ( MAX ) :
        if 0 < nei [ k ] [ i ] :
            dfs ( i )
def run ( ) :
    global n , inDeg , outDeg , vis , nei
    while True :
        n = int ( input ( ) )
        if n == 0 :
            break
        s = 0
        inDeg = np . zeros ( MAX , dtype = int )
        outDeg = np . zeros ( MAX , dtype = int )
        vis = np . ones ( MAX , dtype = int )
        nei = np . zeros ( ( MAX , MAX ) , dtype = int )
        for i in range ( n ) :
            c = input ( ) . strip ( )
            u = ord ( c [ 0 ] ) - ord ( 'a' )
            v = ord ( c [ - 1 ] ) - ord ( 'a' )
            outDeg [ u ] += 1
            inDeg [ v ] += 1
            nei [ u ] [ v ] = 1
            vis [ u ] = vis [ v ] = - 1
            s = u
        dfs ( s )
        if check ( ) :
            print ( "OK" )
        else :
            print ( "NG" )
if __name__ == "__main__" :
    run ( )


---> console_out:
NG
OK
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1670
---> probID: atcoder_ARC086_B
---> inputs:
10
421554480 455557976 91974192 793727424 721379432 356319592 904205072 341283792 430860808 474298152
---> outputs:
19
7 1
7 2
7 3
7 4
7 5
7 6
7 7
7 8
7 9
7 10
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10


import sys
N = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
index = 0
for i in range ( N ) :
    if abs ( a [ index ] ) < abs ( a [ i ] ) :
        index = i
print ( 2 * N - 1 )
for i in range ( N ) :
    print ( index + 1 , i + 1 )
if a [ index ] > 0 :
    for i in range ( 2 , N + 1 ) :
        print ( i - 1 , i )
else :
    for i in range ( N , 1 , - 1 ) :
        print ( i , i - 1 )


---> console_out:
19
7 1
7 2
7 3
7 4
7 5
7 6
7 7
7 8
7 9
7 10
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
 
MATCHED!! :D
 96%|█████████▌| 1670/1746 [16:56<00:34,  2.20it/s]

-------------------------------------


---> lineNum: 1671
---> probID: geeksforgeeks_4957_A
---> inputs:

---> outputs:
g e e k s 
g ee k s 


from typing import List
def checkPalindrome ( str : str ) -> bool :
    len_str = len ( str )
    len_str -= 1
    for i in range ( len_str ) :
        if str [ i ] != str [ len_str ] :
            return False
        len_str -= 1
    return True
def printSolution ( partitions : List [ List [ str ] ] ) -> None :
    for i in partitions :
        for j in i :
            print ( j , end = " " )
        print ( )
def addStrings ( v : List [ List [ str ] ] , s : str , temp : List [ str ] , index : int ) -> List [ List [ str ] ] :
    len_str = len ( s )
    str = ""
    current = temp . copy ( )
    if index == 0 :
        temp . clear ( )
    for i in range ( index , len_str ) :
        str += s [ i ]
        if checkPalindrome ( str ) :
            temp . append ( str )
            if i + 1 < len_str :
                v = addStrings ( v , s , temp , i + 1 )
            else :
                v . append ( temp )
            temp = current . copy ( )
    return v
def partition ( s : str , v : List [ List [ str ] ] ) -> None :
    temp = [ ]
    v = addStrings ( v , s , temp , 0 )
    printSolution ( v )
if __name__ == "__main__" :
    s = "geeks"
    partitions = [ ]
    partition ( s , partitions )


---> console_out:
g e e k s 
g ee k s 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1672
---> probID: aizu_p00991_A
---> inputs:
4 4 0 0 3 3
---> outputs:
2

import math
M = 100000007
def comb ( n , c ) :
    b = 1
    for i in range ( c ) :
        b = b * ( n - i ) // ( i + 1 )
    return b % M
r , c , a1 , a2 , b1 , b2 = map ( int , input ( ) . split ( ) )
x = abs ( a1 - b1 )
y = abs ( a2 - b2 )
x = min ( x , r - x )
y = min ( y , c - y )
z = 1
if x == r - x :
    z *= 2
if y == c - y :
    z *= 2
print ( z * comb ( x + y , min ( x , y ) ) % M )


---> console_out:
2
 
MATCHED!! :D
 96%|█████████▌| 1672/1746 [16:56<00:25,  2.92it/s]

-------------------------------------


---> lineNum: 1673
---> probID: geeksforgeeks_1550_A
---> inputs:

---> outputs:
LCM = 12, Length = 3
Indexes = 0 1 2 

import collections
def findSubsequence ( arr , n , k ) :
    M = collections . defaultdict ( int )
    for i in range ( n ) :
        M [ arr [ i ] ] += 1
    numCount = [ 0 ] * ( k + 1 )
    for key , value in M . items ( ) :
        if key <= k :
            i = 1
            while key * i <= k :
                numCount [ key * i ] += value
                i += 1
        else :
            break
    lcm = 0
    length = 0
    for i in range ( 1 , k + 1 ) :
        if numCount [ i ] > length :
            length = numCount [ i ]
            lcm = i
    if lcm == 0 :
        print ( - 1 )
    else :
        print ( "LCM = {}, Length = {}" . format ( lcm , length ) )
        print ( "Indexes = " , end = "" )
        for i in range ( n ) :
            if lcm % arr [ i ] == 0 :
                print ( i , end = " " )
    print ( )
if __name__ == "__main__" :
    k = 14
    arr = [ 2 , 3 , 4 , 5 ]
    n = len ( arr )
    findSubsequence ( arr , n , k )


---> console_out:
LCM = 12, Length = 3
Indexes = 0 1 2 
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1674
---> probID: geeksforgeeks_4207_A
---> inputs:

---> outputs:
4


import math
def count_pairs ( a , b , n , m ) :
    odd1 , even1 = 0 , 0
    odd2 , even2 = 0 , 0
    for i in range ( n ) :
        if a [ i ] % 2 == 1 :
            odd1 += 1
        else :
            even1 += 1
    for i in range ( m ) :
        if b [ i ] % 2 == 1 :
            odd2 += 1
        else :
            even2 += 1
    pairs = min ( odd1 , odd2 ) + min ( even1 , even2 )
    return pairs
a = [ 9 , 14 , 6 , 2 , 11 ]
b = [ 8 , 4 , 7 , 20 ]
n = len ( a )
m = len ( b )
print ( count_pairs ( a , b , n , m ) )


---> console_out:
4
 
MATCHED!! :D
 96%|█████████▌| 1674/1746 [16:57<00:18,  3.87it/s]

-------------------------------------


---> lineNum: 1675
---> probID: geeksforgeeks_1994_A
---> inputs:

---> outputs:
3


def count_pairs ( a , b , n , m ) :
    odd1 , even1 = 0 , 0
    odd2 , even2 = 0 , 0
    for i in range ( n ) :
        if a [ i ] % 2 == 1 :
            odd1 += 1
        else :
            even1 += 1
    for i in range ( m ) :
        if b [ i ] % 2 == 1 :
            odd2 += 1
        else :
            even2 += 1
    pairs = min ( odd1 , even2 ) + min ( odd2 , even1 )
    return pairs
if __name__ == '__main__' :
    a = [ 9 , 14 , 6 , 2 , 11 ]
    b = [ 8 , 4 , 7 , 20 ]
    n = len ( a )
    m = len ( b )
    print ( count_pairs ( a , b , n , m ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1676
---> probID: geeksforgeeks_4902_A
---> inputs:

---> outputs:
Maximum difference is 99


class MaximumDiffrence :
    def maxDiff ( self , arr , arr_size ) :
        max_diff = arr [ 1 ] - arr [ 0 ]
        min_element = arr [ 0 ]
        for i in range ( 1 , arr_size ) :
            if arr [ i ] - min_element > max_diff :
                max_diff = arr [ i ] - min_element
            if arr [ i ] < min_element :
                min_element = arr [ i ]
        return max_diff
    def main ( self ) :
        maxdif = MaximumDiffrence ( )
        arr = [ 1 , 2 , 6 , 80 , 100 ]
        size = len ( arr )
        print ( "Maximum difference is" , maxdif . maxDiff ( arr , size ) )
MaximumDiffrence ( ) . main ( )


---> console_out:
Maximum difference is 99
 
MATCHED!! :D
 96%|█████████▌| 1676/1746 [16:57<00:13,  5.02it/s]

-------------------------------------


---> lineNum: 1677
---> probID: geeksforgeeks_3004_A
---> inputs:

---> outputs:
10


def binomialCoeff ( n , k ) :
    C = [ [ 0 for x in range ( k + 1 ) ] for x in range ( n + 1 ) ]
    for i in range ( n + 1 ) :
        for j in range ( min ( i , k ) + 1 ) :
            if j == 0 or j == i :
                C [ i ] [ j ] = 1
            else :
                C [ i ] [ j ] = C [ i - 1 ] [ j - 1 ] + C [ i - 1 ] [ j ]
    return C [ n ] [ k ]
def findMax ( n ) :
    return binomialCoeff ( n , n // 2 )
n = 5
print ( findMax ( n ) )


---> console_out:
10
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1678
---> probID: geeksforgeeks_3324_A
---> inputs:

---> outputs:
15


MAX = 26
def max_element ( freq ) :
    max_ele = freq [ 0 ]
    for i in range ( MAX ) :
        if max_ele < freq [ i ] :
            max_ele = freq [ i ]
    return max_ele
def minimumAddition ( str , len ) :
    freq = [ 0 ] * MAX
    for i in range ( len ) :
        freq [ ord ( str [ i ] ) - ord ( 'a' ) ] += 1
    maxFreq = max_element ( freq )
    minAddition = 0
    for i in range ( MAX ) :
        if freq [ i ] > 0 :
            minAddition += abs ( maxFreq - freq [ i ] )
    return minAddition
str = "geeksforgeeks"
len = len ( str )
print ( minimumAddition ( str , len ) )


---> console_out:
15
 
MATCHED!! :D
 96%|█████████▌| 1678/1746 [16:57<00:10,  6.29it/s]

-------------------------------------


---> lineNum: 1679
---> probID: codeforces_540_A
---> inputs:
5
82195
64723
---> outputs:
13

import sys
n = int ( input ( ) )
a = input ( ) . strip ( )
b = input ( ) . strip ( )
sum = 0
for i in range ( n ) :
    if abs ( ord ( a [ i ] ) - ord ( b [ i ] ) ) > 5 :
        sum += 10 - abs ( ord ( a [ i ] ) - ord ( b [ i ] ) )
    else :
        sum += abs ( ord ( a [ i ] ) - ord ( b [ i ] ) )
print ( sum )


---> console_out:
13
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1680
---> probID: geeksforgeeks_1956_A
---> inputs:

---> outputs:
5 0 1 

import math
MAX = 32
pow2 = [ 0 ] * MAX
visited = [ False ] * MAX
ans = [ ]
def power_2 ( ) :
    ans = 1
    for i in range ( MAX ) :
        pow2 [ i ] = ans
        ans *= 2
def countSetBits ( x ) :
    setBits = 0
    while x != 0 :
        x = x & ( x - 1 )
        setBits += 1
    return setBits
def add ( num ) :
    point = 0
    value = 0
    for i in range ( MAX ) :
        if visited [ i ] :
            continue
        else :
            if num % 2 == 1 :
                value += ( 1 << i )
            num //= 2
    ans . append ( value )
def solve ( n , k ) :
    ans . append ( k )
    countk = countSetBits ( k )
    if pow ( 2 , countk ) < n :
        print ( - 1 )
        return
    count = 0
    for i in range ( pow ( 2 , countk ) - 1 ) :
        add ( i )
        count += 1
        if count == n :
            break
    for i in range ( n ) :
        print ( ans [ i ] , end = " " )
n = 3
k = 5
power_2 ( )
solve ( n , k )


---> console_out:
5 0 1  
MATCHED!! :D
 96%|█████████▌| 1680/1746 [16:57<00:08,  7.63it/s]

-------------------------------------


---> lineNum: 1681
---> probID: projecteuler_p027_A
---> inputs:

---> outputs:
-59231

class p027 :
    def main ( self ) :
        print ( self . run ( ) )
    def run ( self ) :
        bestNum = 0
        bestA = 0
        bestB = 0
        for a in range ( - 1000 , 1001 ) :
            for b in range ( - 1000 , 1001 ) :
                num = self . numberOfConsecutivePrimesGenerated ( a , b )
                if num > bestNum :
                    bestNum = num
                    bestA = a
                    bestB = b
        return str ( bestA * bestB )
    def numberOfConsecutivePrimesGenerated ( self , a , b ) :
        i = 0
        while True :
            n = i * i + i * a + b
            if n < 0 or not self . isPrime ( n ) :
                return i
            i += 1
    def isPrime ( self , n ) :
        if n <= 1 :
            return False
        for i in range ( 2 , int ( n ** 0.5 ) + 1 ) :
            if n % i == 0 :
                return False
        return True
p = p027 ( )
p . main ( )


---> console_out:
-59231
 
MATCHED!! :D
 96%|█████████▌| 1680/1746 [17:10<00:08,  7.63it/s]out1,out2 timeoutencounteredpy 4030102805100494950010


-------------------------------------


---> lineNum: 1682
---> probID: codeforces_1371_B
---> inputs:
5
3 4
3 2
3 1
13 7
1010000 9999999
---> outputs:
4
3
1
28
510049495001

import sys
class FastReader :
    def __init__ ( self ) :
        self . br = sys . stdin . readline
        self . st = None
    def next ( self ) :
        while self . st is None or not self . st . hasMoreElements ( ) :
            try :
                self . st = StringTokenizer ( self . br ( ) . strip ( ) )
            except :
                pass
        return self . st . nextToken ( )
    def nextInt ( self ) :
        return int ( self . next ( ) )
    def nextLong ( self ) :
        return int ( self . next ( ) )
    def nextDouble ( self ) :
        return float ( self . next ( ) )
    def nextLine ( self ) :
        return self . br ( ) . strip ( )
def main ( ) :
    obj = FastReader ( )
    tc = obj . nextInt ( )
    while tc != 0 :
        n , k = obj . nextInt ( ) , obj . nextInt ( )
        if n > k :
            print ( ( k * ( k + 1 ) ) // 2 )
        else :
            n -= 1
            n = ( n * ( n + 1 ) ) // 2
            n += 1
            print ( n )
        tc -= 1
if __name__ == '__main__' :
    main ( )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 96%|█████████▋| 1682/1746 [17:41<07:13,  6.77s/it]

-------------------------------------


---> lineNum: 1683
---> probID: geeksforgeeks_4968_A
---> inputs:

---> outputs:
3
1 1 2


import math
MAX = 100001
isPrime = [ 0 ] * MAX
def sieve ( ) :
    for p in range ( 2 , int ( math . sqrt ( MAX ) ) + 1 ) :
        if isPrime [ p ] == 0 :
            for i in range ( p * 2 , MAX , p ) :
                isPrime [ i ] = 1
    return - 1
def findSubset ( a , n ) :
    cnt1 = 0
    for i in range ( n ) :
        if a [ i ] == 1 :
            cnt1 += 1
    if cnt1 > 0 :
        for i in range ( n ) :
            if a [ i ] != 1 and isPrime [ a [ i ] + 1 ] == 0 :
                print ( cnt1 + 1 )
                for j in range ( cnt1 ) :
                    print ( 1 , end = " " )
                print ( a [ i ] )
                return 0
    if cnt1 >= 2 :
        print ( cnt1 )
        for i in range ( cnt1 ) :
            print ( 1 , end = " " )
        print ( )
        return 0
    for i in range ( n ) :
        for j in range ( i + 1 , n ) :
            if isPrime [ a [ i ] + a [ j ] ] == 0 :
                print ( 2 )
                print ( a [ i ] , a [ j ] )
                return 0
    print ( - 1 )
    return - 1
sieve ( )
A = [ 2 , 1 , 1 ]
n = len ( A )
findSubset ( A , n )


---> console_out:
3
1 1 2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1684
---> probID: aizu_p00302_A
---> inputs:
1 10 20
1
---> outputs:
11

import sys
n , r , t = map ( int , input ( ) . split ( ) )
sum = 0
p = list ( map ( int , input ( ) . split ( ) ) )
water = [ 0 ] * r
empty = [ 0 ] * r
for i in range ( 1 , t + 1 ) :
    for j in range ( n ) :
        pos = ( p [ j ] * i ) % r
        if i > 1 :
            empty [ pos ] += 1
        if water [ pos ] > 0 :
            water [ pos ] -= 1
        else :
            sum += 1
    for j in range ( r ) :
        if empty [ j ] > 0 :
            water [ j ] += empty [ j ]
            empty [ j ] = 0
print ( sum )


---> console_out:
11
 
MATCHED!! :D
 96%|█████████▋| 1684/1746 [17:42<04:55,  4.76s/it]out1,out2 hashinomasayukihoshinawasthegrandsonofieyasutokugawa hoshinahashinomasayukihoshinawasthegrandsonofieyasutokugawa


-------------------------------------


---> lineNum: 1685
---> probID: aizu_p00101_A
---> inputs:
3
Hoshino
Hashino
Masayuki Hoshino was the grandson of Ieyasu Tokugawa.
---> outputs:
Hoshina
Hashino
Masayuki Hoshina was the grandson of Ieyasu Tokugawa.

import sys
n = int ( input ( ) )
sys . stdin . readline ( )
for j in range ( n ) :
    c = list ( sys . stdin . readline ( ) . strip ( ) )
    i = 0
    while i < len ( c ) - 6 :
        if c [ i ] == 'H' and c [ i + 1 ] == 'o' and c [ i + 2 ] == 's' and c [ i + 3 ] == 'h' and c [ i + 4 ] == 'i' and c [ i + 5 ] == 'n' and c [ i + 6 ] == 'o' :
            c [ i + 6 ] = 'a'
            i += 6
        else :
            i += 1
    print ( '' . join ( c ) )


---> console_out:
Hashino
Masayuki Hoshina was the grandson of Ieyasu Tokugawa.

 
DIDN'T MATCH!! :(
  File "./junk/1703784747323_7755/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  20


-------------------------------------


---> lineNum: 1686
---> probID: geeksforgeeks_1541_A
---> inputs:

---> outputs:
2


import java . util . * ;
public class BinarySearch { static int countRotations ( int [ ] arr , int low , int high ) { if ( high < low ) return 0 ; if ( high == low ) return low ; int mid = low + ( high - low ) / 2 ; if ( mid < high & & arr [ mid + 1 ] < arr [ mid ] ) return ( mid + 1 ) ; if ( mid > low & & arr [ mid ] < arr [ mid - 1 ] ) return mid ; if ( arr [ high ] > arr [ mid ] ) return countRotations ( arr , low , mid - 1 ) ; return countRotations ( arr , mid + 1 , high ) ; } public static void main ( String [ ] args ) { int [ ] arr = { 15 , 18 , 2 , 3 , 6 , 12 } ; int n = arr . length ; System . out . println ( countRotations ( arr , 0 , n - 1 ) ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
 97%|█████████▋| 1686/1746 [17:42<03:21,  3.36s/it]Traceback (most recent call last):
  File "./junk/1703784747386_1333/main.py", line 2, in <module>
    n = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '4 11'
out1,out2  00


-------------------------------------


---> lineNum: 1687
---> probID: codeforces_92_A
---> inputs:
4 11
---> outputs:
0

import sys
n = int ( input ( ) )
k = int ( input ( ) )
i = 1
req = 1
while k - req >= 0 :
    if k - req >= 0 :
        k = k - req
    else :
        break
    i += 1
    if i % n != 0 :
        req = i % n
    else :
        req = n
print ( k )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1688
---> probID: geeksforgeeks_3522_A
---> inputs:

---> outputs:
NO


import numpy as np
def modularSum ( arr , n , m ) :
    if n > m :
        return True
    DP = np . zeros ( m , dtype = bool )
    for i in range ( n ) :
        if DP [ 0 ] :
            return True
        temp = np . zeros ( m , dtype = bool )
        for j in range ( m ) :
            if DP [ j ] :
                if not DP [ ( j + arr [ i ] ) % m ] :
                    temp [ ( j + arr [ i ] ) % m ] = True
        DP [ temp ] = True
        DP [ arr [ i ] % m ] = True
    return DP [ 0 ]
if __name__ == '__main__' :
    arr = [ 1 , 7 ]
    n = len ( arr )
    m = 5
    if modularSum ( arr , n , m ) :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
NO
 
MATCHED!! :D
 97%|█████████▋| 1688/1746 [17:42<02:19,  2.40s/it]

-------------------------------------


---> lineNum: 1689
---> probID: aizu_p02441_A
---> inputs:
9
1 4 1 4 2 1 3 5 6
3
0 9 1
1 6 1
3 7 5
---> outputs:
3
2
0

import math
n = int ( input ( ) )
a = list ( map ( int , input ( ) . split ( ) ) )
q = int ( input ( ) )
for i in range ( q ) :
    b , e , k = map ( int , input ( ) . split ( ) )
    res = 0
    for j in range ( b , e ) :
        if a [ j ] == k :
            res += 1
    print ( res )


---> console_out:
3
2
0
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784747785_9428/main.py", line 6, in <module>
    row = list ( map ( int , input ( ) . split ( ) ) )
EOFError: EOF when reading a line
out1,out2  120


-------------------------------------


---> lineNum: 1690
---> probID: atcoder_AGC004_B
---> inputs:
2 10
1 100
---> outputs:
12

import sys
n , x = map ( int , input ( ) . split ( ) )
arr = [ ]
totals = [ 0 ] * n
for i in range ( n ) :
    row = list ( map ( int , input ( ) . split ( ) ) )
    arr . append ( row )
    totals [ 0 ] += row [ i ]
for i in range ( 1 , n ) :
    for j in range ( n ) :
        arr [ i ] [ j ] = min ( arr [ i - 1 ] [ j ] , arr [ i - 1 ] [ ( j - 1 + n ) % n ] )
        totals [ i ] += arr [ i ] [ j ]
    totals [ i ] += x * i
totals . sort ( )
print ( totals [ 0 ] )


---> console_out:
 
DIDN'T MATCH!! :(
 97%|█████████▋| 1690/1746 [17:42<01:35,  1.70s/it]

-------------------------------------


---> lineNum: 1691
---> probID: aizu_p01103_A
---> inputs:
3 3
2 3 2
2 1 2
2 3 1
3 5
3 3 4 3 3
3 1 0 2 3
3 3 4 3 2
7 7
1 1 1 1 1 0 0
1 0 0 0 1 0 0
1 0 1 1 1 1 1
1 0 1 0 1 0 1
1 1 1 1 1 0 1
0 0 1 0 0 0 1
0 0 1 1 1 1 1
6 6
1 1 1 1 2 2
1 0 0 2 0 2
1 0 0 2 0 2
3 3 3 9 9 9
3 0 0 9 0 9
3 3 3 9 9 9
0 0
---> outputs:
0
3
1
9

import sys
def solve ( A , y , x , dep , wid ) :
    global max_val , d , w
    if y + dep > d or x + wid > w :
        return
    edgmin = 9
    lkmax = 0
    maxv = 0
    for i in range ( y , dep + y ) :
        for j in range ( x , wid + x ) :
            if i == y or i == dep + y - 1 or j == x or j == wid + x - 1 :
                edgmin = min ( edgmin , A [ i ] [ j ] )
            else :
                lkmax = max ( lkmax , A [ i ] [ j ] )
    if edgmin > lkmax :
        for i in range ( y + 1 , dep + y - 1 ) :
            for j in range ( x + 1 , x + wid - 1 ) :
                maxv += edgmin - A [ i ] [ j ]
    max_val = max ( max_val , maxv )
    solve ( A , y , x , dep + 1 , wid )
    solve ( A , y , x , dep , wid + 1 )
while True :
    d , w = map ( int , input ( ) . split ( ) )
    if d == 0 :
        break
    G = [ ]
    max_val = 0
    for i in range ( d ) :
        row = list ( map ( int , input ( ) . split ( ) ) )
        G . append ( row )
    for i in range ( d - 2 ) :
        for j in range ( w - 2 ) :
            solve ( G , i , j , 3 , 3 )
    print ( max_val )


---> console_out:
0
3
1
9
 
MATCHED!! :D
  File "./junk/1703784747949_7704/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  30


-------------------------------------


---> lineNum: 1692
---> probID: codeforces_274_A
---> inputs:
6 2
2 3 6 5 4 10
---> outputs:
3

import java . util . * ;
public class Codechef { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long k = sc . nextLong ( ) ; long [ ] arr = new long [ ( int ) n ] ; for ( long i = 0 ; i < ( int ) n ; + + i ) { arr [ ( int ) i ] = sc . nextLong ( ) ; } if ( k == 1 ) { System . out . println ( n ) ; System . exit ( 0 ) ; } long [ ] ans = new long [ ( int ) n ] ; Arrays . sort ( arr ) ; for ( long i = 0 ; i < ( int ) n ; + + i ) { if ( ans [ ( int ) i ] == 0 ) { long ktimes = k * arr [ ( int ) i ] ; long index = Arrays . binarySearch ( arr , ktimes ) ; if ( index >= 0 ) { ans [ ( int ) index ] = - 1 ; } } } long ans1 = 0 ; for ( long i = 0 ; i < n ; + + i ) { if ( ans [ ( int ) i ] == 0 ) { + + ans1 ; } } System . out . println ( ans1 ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
 97%|█████████▋| 1692/1746 [17:42<01:05,  1.22s/it]

-------------------------------------


---> lineNum: 1693
---> probID: geeksforgeeks_4060_A
---> inputs:

---> outputs:
65


def sum ( k , n ) :
    sum = int ( pow ( k , n + 1 ) - pow ( k - 1 , n + 1 ) )
    return sum
n = 3
K = 3
print ( sum ( K , n ) )


---> console_out:
65
 
MATCHED!! :D
out1,out2 60 50


-------------------------------------


---> lineNum: 1694
---> probID: geeksforgeeks_2096_A
---> inputs:

---> outputs:
5


dp = [ [ [ - 1 for k in range ( 162 ) ] for j in range ( 2 ) ] for i in range ( 18 ) ]
def solve ( i , tight , sum_so_far , Sum , number , length ) :
    if i == length :
        if sum_so_far == Sum :
            return 1
        else :
            return 0
    ans = dp [ i ] [ 1 ] [ sum_so_far ]
    if ans != - 1 :
        return ans
    ans = 0
    for currdigit in range ( 10 ) :
        currdigit = str ( currdigit )
        if not tight and currdigit > number [ i ] :
            break
        ntight = tight or currdigit < number [ i ]
        nsum_so_far = sum_so_far + int ( currdigit )
        ans += solve ( i + 1 , ntight , nsum_so_far , Sum , number , length )
    dp [ i ] [ 1 ] [ sum_so_far ] = ans
    return ans
count = 0
sum = 4
number = "100"
for i in range ( 18 ) :
    for j in range ( 2 ) :
        for k in range ( 162 ) :
            dp [ i ] [ j ] [ k ] = - 1
print ( solve ( 0 , False , 0 , sum , number , len ( number ) ) )


---> console_out:
6
 
DIDN'T MATCH!! :(
 97%|█████████▋| 1694/1746 [17:42<00:45,  1.15it/s]

-------------------------------------


---> lineNum: 1695
---> probID: codeforces_231_A
---> inputs:
3
1 1 0
1 1 1
1 0 0
---> outputs:
2

import sys
count = 0
def decision ( entery ) :
    global count
    localct = 0
    inputs = entery . split ( " " )
    for i in range ( len ( inputs ) ) :
        if inputs [ i ] == "1" :
            localct += 1
    if localct > 1 :
        count += 1
if __name__ == "__main__" :
    n = int ( input ( ) )
    arr = [ ]
    for i in range ( n ) :
        arr . append ( input ( ) )
        decision ( arr [ i ] )
    print ( count )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1696
---> probID: geeksforgeeks_3504_A
---> inputs:

---> outputs:
Difference between sums is -9


import queue
class Node :
    def __init__ ( self , key ) :
        self . data = key
        self . left = None
        self . right = None
def evenOddLevelDifference ( root ) :
    if root is None :
        return 0
    q = queue . Queue ( )
    q . put ( root )
    level = 0
    evenSum = 0
    oddSum = 0
    while not q . empty ( ) :
        size = q . qsize ( )
        level += 1
        while size > 0 :
            temp = q . get ( )
            if level % 2 == 0 :
                evenSum += temp . data
            else :
                oddSum += temp . data
            if temp . left is not None :
                q . put ( temp . left )
            if temp . right is not None :
                q . put ( temp . right )
            size -= 1
    return oddSum - evenSum
if __name__ == '__main__' :
    root = Node ( 5 )
    root . left = Node ( 2 )
    root . right = Node ( 6 )
    root . left . left = Node ( 1 )
    root . left . right = Node ( 4 )
    root . left . right . left = Node ( 3 )
    root . right . right = Node ( 8 )
    root . right . right . right = Node ( 9 )
    root . right . right . left = Node ( 7 )
    print ( "Difference between sums is" , evenOddLevelDifference ( root ) )


---> console_out:
Difference between sums is -9
 
MATCHED!! :D
 97%|█████████▋| 1696/1746 [17:43<00:31,  1.58it/s]

-------------------------------------


---> lineNum: 1697
---> probID: geeksforgeeks_949_A
---> inputs:

---> outputs:
6


import math
def countSubarrays ( a , n , x ) :
    count = 0
    number = 0
    for i in range ( n ) :
        if a [ i ] > x :
            count += 1
        else :
            number += ( count ) * ( count + 1 ) // 2
            count = 0
    if count != 0 :
        number += ( count ) * ( count + 1 ) // 2
    return number
if __name__ == '__main__' :
    a = [ 3 , 4 , 5 , 6 , 7 , 2 , 10 , 11 ]
    n = len ( a )
    k = 5
    print ( countSubarrays ( a , n , k ) )


---> console_out:
6
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1698
---> probID: geeksforgeeks_1025_A
---> inputs:

---> outputs:
2


def minCost ( arr , n ) :
    count_even = 0
    count_odd = 0
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            count_even += 1
        else :
            count_odd += 1
    return min ( count_even , count_odd )
if __name__ == '__main__' :
    arr = [ 2 , 4 , 3 , 1 , 5 ]
    n = len ( arr )
    print ( minCost ( arr , n ) )


---> console_out:
2
 
MATCHED!! :D
 97%|█████████▋| 1698/1746 [17:43<00:22,  2.14it/s]

-------------------------------------


---> lineNum: 1699
---> probID: geeksforgeeks_5271_A
---> inputs:

---> outputs:
5 6 1 

import collections
def printLastOccurrence ( a , n ) :
    map = collections . defaultdict ( int )
    for i in range ( n ) :
        map [ a [ i ] ] = i
    for i in range ( n ) :
        if map [ a [ i ] ] == i :
            print ( a [ i ] , end = " " )
if __name__ == "__main__" :
    a = [ 1 , 5 , 5 , 1 , 6 , 1 ]
    n = len ( a )
    printLastOccurrence ( a , n )


---> console_out:
5 6 1  
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784748548_7966/main.py", line 10, in <module>
    k . append ( int ( input ( ) ) )
ValueError: invalid literal for int() with base 10: '3 2'
out1,out2  30na20


-------------------------------------


---> lineNum: 1700
---> probID: aizu_p00274_A
---> inputs:
2
3 2
3
0 1 1
1
1000
0
---> outputs:
3
NA
2

import sys
while True :
    n = int ( input ( ) )
    if n == 0 :
        sys . exit ( )
    up1 = 0
    up2 = 0
    k = [ ]
    for i in range ( n ) :
        k . append ( int ( input ( ) ) )
        if k [ i ] > 0 :
            up1 += 1
            if k [ i ] >= 2 :
                up2 += 1
    if up2 == 0 :
        print ( "NA" )
    else :
        print ( up1 + 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 97%|█████████▋| 1700/1746 [17:43<00:16,  2.86it/s]

-------------------------------------


---> lineNum: 1701
---> probID: geeksforgeeks_455_A
---> inputs:

---> outputs:
70


import math
class GFG :
    def countPaths ( self , m , n ) :
        if m == 1 or n == 1 :
            return 1
        return self . countPaths ( m - 1 , n ) + self . countPaths ( m , n - 1 )
g = GFG ( )
n , m = 5 , 5
print ( g . countPaths ( n , m ) )


---> console_out:
70
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1702
---> probID: geeksforgeeks_4086_A
---> inputs:

---> outputs:
335.0


def sumOfAP ( a , d , n ) :
    sum = ( n / 2 ) * ( 2 * a + ( n - 1 ) * d )
    return sum
n = 20
a = 2.5
d = 1.5
print ( sumOfAP ( a , d , n ) )


---> console_out:
335.0
 
MATCHED!! :D
 97%|█████████▋| 1702/1746 [17:43<00:11,  3.76it/s]

-------------------------------------


---> lineNum: 1703
---> probID: geeksforgeeks_903_A
---> inputs:

---> outputs:
3


import math
def countPairs ( arr , n ) :
    count = 0
    for i in range ( n - 1 ) :
        for j in range ( i + 1 , n ) :
            if arr [ i ] * arr [ j ] > arr [ i ] + arr [ j ] :
                count += 1
    return count
arr = [ 5 , 0 , 3 , 1 , 2 ]
n = len ( arr )
print ( countPairs ( arr , n ) )


---> console_out:
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1704
---> probID: geeksforgeeks_1000_A
---> inputs:

---> outputs:
4


import collections
def coordinateCompression ( arr , n ) :
    s = set ( arr )
    index = 0
    mp = { }
    for itr in sorted ( s ) :
        index += 1
        mp [ itr ] = index
    for i in range ( n ) :
        arr [ i ] = mp [ arr [ i ] ]
def query ( BIT , index , n ) :
    ans = 0
    while index > 0 :
        ans = max ( ans , BIT [ index ] )
        index -= index & ( - index )
    return ans
def update ( BIT , index , n ) :
    x = query ( BIT , index - 1 , n )
    value = x + 1
    while index <= n :
        BIT [ index ] = max ( BIT [ index ] , value )
        index += index & ( - index )
def findLISLength ( arr , n ) :
    coordinateCompression ( arr , n )
    BIT = [ 0 ] * ( n + 1 )
    for i in range ( n ) :
        update ( BIT , arr [ i ] , n )
    ans = query ( BIT , n , n )
    return ans
arr = [ 6 , 5 , 1 , 3 , 2 , 4 , 8 , 7 ]
n = len ( arr )
ans = findLISLength ( arr , n )
print ( ans )


---> console_out:
4
 
MATCHED!! :D
 98%|█████████▊| 1704/1746 [17:43<00:08,  4.88it/s]

-------------------------------------


---> lineNum: 1705
---> probID: codeforces_1598_B
---> inputs:
2
4
1 0 0 1 0
0 1 0 0 1
0 0 0 1 0
0 1 0 1 0
2
0 0 0 1 0
0 0 0 1 0
---> outputs:
YES
NO

import sys
Q = int ( input ( ) )
for i in range ( Q ) :
    N = int ( input ( ) )
    schedule = [ ]
    for j in range ( N ) :
        line = input ( )
        schedule . append ( list ( map ( int , line . split ( ) ) ) )
    check = False
    for j in range ( 4 ) :
        for k in range ( j + 1 , 5 ) :
            day1count = 0
            day2count = 0
            bothcount = 0
            neither = 0
            for l in range ( len ( schedule ) ) :
                if schedule [ l ] [ j ] == 0 and schedule [ l ] [ k ] == 0 :
                    neither += 1
                elif schedule [ l ] [ j ] == 1 and schedule [ l ] [ k ] == 0 :
                    day1count += 1
                elif schedule [ l ] [ j ] == 0 and schedule [ l ] [ k ] == 1 :
                    day2count += 1
                elif schedule [ l ] [ j ] == 1 and schedule [ l ] [ k ] == 1 :
                    bothcount += 1
            if neither > 0 :
                continue
            elif day1count > len ( schedule ) / 2 or day2count > len ( schedule ) / 2 :
                continue
            else :
                check = True
                break
        if check :
            break
    print ( "YES" if check else "NO" )


---> console_out:
YES
NO
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784748941_8619/main.py", line 28, in <module>
    print ( p164 ( ) . run ( ) )
  File "./junk/1703784748941_8619/main.py", line 10, in run
    ways = [ [ 0 ] * math . pow ( BASE , CONSECUTIVE ) for _ in range ( DIGITS + CONSECUTIVE + 1 ) ]
  File "./junk/1703784748941_8619/main.py", line 10, in <listcomp>
    ways = [ [ 0 ] * math . pow ( BASE , CONSECUTIVE ) for _ in range ( DIGITS + CONSECUTIVE + 1 ) ]
TypeError: can't multiply sequence by non-int of type 'float'
out1,out2  3781587568145870


-------------------------------------


---> lineNum: 1706
---> probID: projecteuler_p164_A
---> inputs:

---> outputs:
378158756814587

import math
class p164 :
    def __init__ ( self ) :
        pass
    def run ( self ) :
        BASE = 10
        DIGITS = 20
        CONSECUTIVE = 3
        MAX_SUM = 9
        ways = [ [ 0 ] * math . pow ( BASE , CONSECUTIVE ) for _ in range ( DIGITS + CONSECUTIVE + 1 ) ]
        ways [ 0 ] [ 0 ] = 1
        for prefix in range ( 1 , len ( ways [ 0 ] ) ) :
            ways [ 0 ] [ prefix ] = 0
        for digits in range ( 1 , len ( ways ) ) :
            for prefix in range ( len ( ways [ digits ] ) ) :
                sum = 0
                if self . digitSum ( prefix ) <= MAX_SUM :
                    for nextDigit in range ( BASE ) :
                        sum += ways [ digits - 1 ] [ prefix % math . pow ( BASE , CONSECUTIVE - 1 ) * BASE + nextDigit ]
                ways [ digits ] [ prefix ] = sum
        return str ( ways [ DIGITS + CONSECUTIVE ] [ 0 ] - ways [ DIGITS + CONSECUTIVE - 1 ] [ 0 ] )
    def digitSum ( self , n ) :
        sum = 0
        while n != 0 :
            sum += n % 10
            n //= 10
        return sum
print ( p164 ( ) . run ( ) )


---> console_out:
 
DIDN'T MATCH!! :(
 98%|█████████▊| 1706/1746 [17:43<00:06,  6.02it/s]

-------------------------------------


---> lineNum: 1707
---> probID: codeforces_287_A
---> inputs:
####
.#..
####
....
---> outputs:
YES

import array
import array as arr
from typing import List
import sys
md = [ ]
def main ( args : List [ str ] ) :
    l = [ None ] * 4
    l [ 0 ] = input ( )
    l [ 1 ] = input ( )
    l [ 2 ] = input ( )
    l [ 3 ] = input ( )
    a = ''
    f = False
    for i in range ( 3 ) :
        for j in range ( 3 ) :
            a = l [ i ] [ j ]
            if l [ i ] [ j + 1 ] == a :
                if l [ i + 1 ] [ j ] == a or l [ i + 1 ] [ j + 1 ] == a :
                    f = True
                    break
                elif i > 0 and ( l [ i - 1 ] [ j ] == a or l [ i - 1 ] [ j + 1 ] == a ) :
                    f = True
                    break
                else :
                    f = False
            if l [ 3 ] [ j ] == l [ 3 ] [ j + 1 ] and ( l [ 2 ] [ j ] == l [ 3 ] [ j ] or l [ 2 ] [ j + 1 ] == l [ 3 ] [ j + 1 ] ) :
                f = True
                break
        if f == True :
            break
    if f == True :
        print ( "YES" )
    else :
        print ( "NO" )
if __name__ == '__main__' :
    main ( sys . argv )


---> console_out:
YES
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784749101_6264/main.py", line 1, in <module>
    class Solution :
  File "./junk/1703784749101_6264/main.py", line 2, in Solution
    def isToeplitzMatrix ( self , matrix : List [ List [ int ] ] ) -> bool :
NameError: name 'List' is not defined
out1,out2  true


-------------------------------------


---> lineNum: 1708
---> probID: leetcode_766_A
---> inputs:

---> outputs:
true

class Solution :
    def isToeplitzMatrix ( self , matrix : List [ List [ int ] ] ) -> bool :
        for r in range ( 1 , len ( matrix ) ) :
            for c in range ( 1 , len ( matrix [ 0 ] ) ) :
                if matrix [ r - 1 ] [ c - 1 ] != matrix [ r ] [ c ] :
                    return False
        return True
sObj = Solution ( )
matrix = [ [ 1 , 2 , 3 , 4 ] , [ 5 , 1 , 2 , 3 ] , [ 9 , 5 , 1 , 2 ] ]
out = sObj . isToeplitzMatrix ( matrix )
print ( out )


---> console_out:
 
DIDN'T MATCH!! :(
 98%|█████████▊| 1708/1746 [17:44<00:05,  7.37it/s]Traceback (most recent call last):
  File "./junk/1703784749159_5691/main.py", line 1, in <module>
    class p094 :
  File "./junk/1703784749159_5691/main.py", line 2, in p094
    LIMIT = Library . pow ( 10 , 9 )
NameError: name 'Library' is not defined
out1,out2  5184083460


-------------------------------------


---> lineNum: 1709
---> probID: projecteuler_p094_A
---> inputs:

---> outputs:
518408346

class p094 :
    LIMIT = Library . pow ( 10 , 9 )
    def main ( self ) :
        print ( p094 ( ) . run ( ) )
    def run ( self ) :
        sum = 0
        for s in range ( 1 , int ( ( self . LIMIT + 1 ) / 3 ) + 1 , 2 ) :
            for t in range ( s - 2 , 0 , - 2 ) :
                if Library . gcd ( s , t ) == 1 :
                    a = s * t
                    b = ( s * s - t * t ) // 2
                    c = ( s * s + t * t ) // 2
                    if a * 2 == c - 1 :
                        p = c * 3 - 1
                        if p <= self . LIMIT :
                            sum += p
                    if a * 2 == c + 1 :
                        p = c * 3 + 1
                        if p <= self . LIMIT :
                            sum += p
                    if b * 2 == c - 1 :
                        p = c * 3 - 1
                        if p <= self . LIMIT :
                            sum += p
                    if b * 2 == c + 1 :
                        p = c * 3 + 1
                        if p <= self . LIMIT :
                            sum += p
        return str ( sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1710
---> probID: aizu_p00856_A
---> inputs:
6 1 0 0
7 1 0 0
7 2 0 0
6 6 1 1
2
5
7 10 0 6
1
2
3
4
5
6
0 0 0 0
---> outputs:
0.166667
0.000000
0.166667
0.619642
0.000000

import sys
class Main :
    def solve ( self ) :
        while True :
            N , T , L , B = map ( int , sys . stdin . readline ( ) . split ( ) )
            if N == 0 and T == 0 and L == 0 and B == 0 :
                break
            square = [ 0 ] * ( N + 1 )
            for i in range ( L ) :
                square [ int ( sys . stdin . readline ( ) ) ] = 1
            for i in range ( B ) :
                square [ int ( sys . stdin . readline ( ) ) ] = 2
            dp = [ [ 0.0 ] * ( T + 1 ) for _ in range ( N + 1 ) ]
            dp [ 0 ] [ 0 ] = 1.0
            for j in range ( T ) :
                for i in range ( N ) :
                    for s in range ( 1 , 7 ) :
                        idx = 1
                        num = i + s
                        if square [ i ] == 1 :
                            idx = 2
                        if i + s > N :
                            num = 2 * N - ( i + s )
                        if square [ num ] == 2 and j + idx <= T :
                            dp [ 0 ] [ j + idx ] += dp [ i ] [ j ] / 6.0
                        elif j + idx <= T :
                            dp [ num ] [ j + idx ] += dp [ i ] [ j ] / 6.0
            goal = sum ( dp [ N ] )
            print ( "{:.6f}" . format ( goal ) )
if __name__ == "__main__" :
    Main ( ) . solve ( )


---> console_out:
0.166667
0.000000
0.166667
0.619642
0.000000
 
MATCHED!! :D
 98%|█████████▊| 1710/1746 [17:44<00:04,  8.58it/s]Traceback (most recent call last):
  File "./junk/1703784749303_6515/main.py", line 9, in <module>
    x = int ( input ( ) )
ValueError: invalid literal for int() with base 10: '2 3'
out1,out2  yesnoyesnono


-------------------------------------


---> lineNum: 1711
---> probID: codeforces_1296_A
---> inputs:
5
2
2 3
4
2 2 8 8
3
3 3 3
4
5 5 5 5
4
1 1 1 1
---> outputs:
YES
NO
YES
NO
NO

import sys
t = int ( input ( ) )
for _ in range ( t ) :
    s = 0
    o = 0
    e = 0
    a = int ( input ( ) )
    for i in range ( a ) :
        x = int ( input ( ) )
        s += x
        if x % 2 != 0 :
            o += 1
        else :
            e += 1
    if s % 2 != 0 :
        print ( "YES" )
    else :
        if o >= 1 and e >= 1 :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1712
---> probID: geeksforgeeks_3343_A
---> inputs:

---> outputs:
3


def minInsertions ( H , n , K ) :
    inser = 0
    for i in range ( 1 , n ) :
        diff = abs ( H [ i ] - H [ i - 1 ] )
        if diff <= K :
            continue
        else :
            inser += int ( diff / K ) - 1 if diff % K == 0 else int ( diff / K )
    return inser
if __name__ == '__main__' :
    H = [ 2 , 4 , 8 , 16 ]
    K = 3
    n = len ( H )
    print ( minInsertions ( H , n , K ) )


---> console_out:
3
 
MATCHED!! :D
 98%|█████████▊| 1712/1746 [17:44<00:03,  9.99it/s]

-------------------------------------


---> lineNum: 1713
---> probID: geeksforgeeks_4932_A
---> inputs:

---> outputs:
12


def countWords ( str , length ) :
    count = 1
    if length == 1 :
        return count
    if str [ 0 ] == str [ 1 ] :
        count *= 1
    else :
        count *= 2
    for j in range ( 1 , length - 1 ) :
        if str [ j ] == str [ j - 1 ] and str [ j ] == str [ j + 1 ] :
            count *= 1
        elif str [ j ] == str [ j - 1 ] or str [ j ] == str [ j + 1 ] or str [ j - 1 ] == str [ j + 1 ] :
            count *= 2
        else :
            count *= 3
    if str [ length - 1 ] == str [ length - 2 ] :
        count *= 1
    else :
        count *= 2
    return count
if __name__ == '__main__' :
    str = "abc"
    length = len ( str )
    print ( countWords ( str , length ) )


---> console_out:
12
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1714
---> probID: codeforces_621_A
---> inputs:
3
1 2 3
---> outputs:
6

import sys
n = int ( sys . stdin . readline ( ) )
max_sum = 0
s = sys . stdin . readline ( )
x = s . split ( )
even = [ ]
odd = [ ]
for i in range ( n ) :
    y = int ( x [ i ] )
    if y % 2 == 0 :
        even . append ( y )
    else :
        odd . append ( y )
for i in range ( len ( even ) ) :
    max_sum += even [ i ]
odd2 = sorted ( odd , reverse = True )
for i in range ( len ( odd2 ) ) :
    if i == 0 and len ( odd2 ) % 2 == 0 :
        max_sum += odd2 [ i ]
    elif i > 0 :
        max_sum += odd2 [ i ]
print ( max_sum )


---> console_out:
6
 
MATCHED!! :D
 98%|█████████▊| 1714/1746 [17:44<00:02, 11.30it/s] 98%|█████████▊| 1714/1746 [18:00<00:02, 11.30it/s]out1,out2 timeoutencounteredpy 20


-------------------------------------


---> lineNum: 1715
---> probID: geeksforgeeks_3437_A
---> inputs:

---> outputs:
2


import math
def getPerfectSquares ( n ) :
    perfectSquares = [ ]
    current , i = 1 , 1
    while current <= n :
        perfectSquares . append ( current )
        current = int ( math . pow ( + + i , 2 ) )
    return perfectSquares
def maxPairSum ( arr ) :
    n = len ( arr )
    if arr [ 0 ] > arr [ 1 ] :
        max , secondMax = arr [ 0 ] , arr [ 1 ]
    else :
        max , secondMax = arr [ 1 ] , arr [ 0 ]
    for i in range ( 2 , n ) :
        if arr [ i ] > max :
            secondMax = max
            max = arr [ i ]
        elif arr [ i ] > secondMax :
            secondMax = arr [ i ]
    return max + secondMax
def countPairsWith ( n , perfectSquares , nums ) :
    count = 0
    for i in range ( len ( perfectSquares ) ) :
        temp = perfectSquares [ i ] - n
        if temp > n and temp in nums :
            count += 1
    return count
def countPairs ( arr ) :
    n = len ( arr )
    max = maxPairSum ( arr )
    perfectSquares = getPerfectSquares ( max )
    nums = set ( arr )
    count = 0
    for i in range ( n ) :
        count += countPairsWith ( arr [ i ] , perfectSquares , nums )
    return count
arr = [ 2 , 3 , 6 , 9 , 10 , 20 ]
print ( countPairs ( arr ) )


---> console_out:
TIMEOUT ENCOUNTERED-PY 
DIDN'T MATCH!! :(
 98%|█████████▊| 1715/1746 [18:24<03:41,  7.14s/it]out1,out2 50 50


-------------------------------------


---> lineNum: 1716
---> probID: geeksforgeeks_1221_A
---> inputs:

---> outputs:
5.0


def findHypotenuse ( side1 , side2 ) :
    h = ( side1 ** 2 + side2 ** 2 ) ** 0.5
    return h
if __name__ == '__main__' :
    side1 = 3
    side2 = 4
    print ( "{:.2f}" . format ( findHypotenuse ( side1 , side2 ) ) )


---> console_out:
5.00
 
MATCHED!! :D
  File "./junk/1703784789647_4078/main.py", line 1
    There you go :
          ^
SyntaxError: invalid syntax
out1,out2  thetwooddelementsare5010


-------------------------------------


---> lineNum: 1717
---> probID: geeksforgeeks_3973_A
---> inputs:

---> outputs:
The two ODD elements are 5 & 1


There you go :
def printTwoOdd ( arr , size ) :
    xor2 = arr [ 0 ]
    set_bit_no = 0
    n = size - 2
    x = 0
    y = 0
    for i in range ( 1 , size ) :
        xor2 = xor2 ^ arr [ i ]
    set_bit_no = xor2 & ~ ( xor2 - 1 )
    for i in range ( size ) :
        if ( arr [ i ] & set_bit_no ) > 0 :
            x = x ^ arr [ i ]
        else :
            y = y ^ arr [ i ]
    print ( "The two ODD elements are " + str ( x ) + " & " + str ( y ) )
arr = [ 4 , 2 , 4 , 5 , 2 , 3 , 3 , 1 ]
arr_size = len ( arr )
printTwoOdd ( arr , arr_size )


---> console_out:
 
DIDN'T MATCH!! :(
 98%|█████████▊| 1717/1746 [18:24<02:18,  4.77s/it]

-------------------------------------


---> lineNum: 1718
---> probID: codeforces_1538_A
---> inputs:
5
5
1 5 4 3 2
8
2 1 3 4 5 6 8 7
8
4 2 3 1 8 6 7 5
4
3 4 2 1
4
2 3 1 4
---> outputs:
2
4
5
3
2

import sys
t = int ( input ( ) )
for _ in range ( t ) :
    n = int ( input ( ) )
    ar = list ( map ( int , input ( ) . split ( ) ) )
    max_val = max ( ar )
    min_val = min ( ar )
    x = ar . index ( min_val ) + 1
    y = ar . index ( max_val ) + 1
    pos1 , pos2 , pos3 , pos4 = x , n - x + 1 , y , n - y + 1
    a = min ( pos1 , pos2 )
    b = min ( pos3 , pos4 )
    div = abs ( y - x )
    if div < a or div < b :
        mm = min ( a , b )
        total = mm + div
    else :
        total = a + b
    print ( total )


---> console_out:
2
4
5
3
2
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784789779_9625/main.py", line 2, in <module>
    first , second = input ( ) . split ( )
ValueError: not enough values to unpack (expected 2, got 1)
out1,out2  no


-------------------------------------


---> lineNum: 1719
---> probID: codeforces_724_A
---> inputs:
monday
tuesday
---> outputs:
NO

import sys
first , second = input ( ) . split ( )
days = { "monday" : 1 , "tuesday" : 2 , "wednesday" : 3 , "thursday" : 4 , "friday" : 5 , "saturday" : 6 , "sunday" : 7 }
diff = 0
if days [ second ] >= days [ first ] :
    diff = days [ second ] - days [ first ]
else :
    diff = 7 - days [ first ] + days [ second ]
ok = diff == 0 or diff == 2 or diff == 3
if ok :
    print ( "YES" )
else :
    print ( "NO" )
sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(
 98%|█████████▊| 1719/1746 [18:24<01:27,  3.25s/it]

-------------------------------------


---> lineNum: 1720
---> probID: codeforces_711_A
---> inputs:
6
OO|OX
XO|XX
OX|OO
XX|OX
OO|OO
OO|XX
---> outputs:
YES
++|OX
XO|XX
OX|OO
XX|OX
OO|OO
OO|XX

import sys
n = int ( input ( ) )
f = False
s = False
ind = 0
x = [ ]
for i in range ( n ) :
    x . append ( input ( ) )
    if not f :
        if "OO" in x [ i ] :
            f = True
            ind = i
if f :
    print ( "YES" )
    for i in range ( n ) :
        if i != ind :
            print ( x [ i ] )
        else :
            if x [ i ] [ 0 : 2 ] == "OO" :
                print ( "++" + x [ i ] [ 2 : 5 ] )
            elif x [ i ] [ 3 : 5 ] == "OO" :
                print ( x [ i ] [ 0 : 3 ] + "++" )
else :
    print ( "NO" )


---> console_out:
YES
++|OX
XO|XX
OX|OO
XX|OX
OO|OO
OO|XX
 
MATCHED!! :D
Traceback (most recent call last):
  File "./junk/1703784789923_9862/main.py", line 1, in <module>
    class GFG :
  File "./junk/1703784789923_9862/main.py", line 56, in GFG
    head = insertNode ( head , 1 )
  File "./junk/1703784789923_9862/main.py", line 43, in insertNode
    temp = GFG . Node ( x )
NameError: name 'GFG' is not defined
out1,out2  102030405060708090101020304060708090101020304060708010102030607080102030607080202030608020203080202030202020


-------------------------------------


---> lineNum: 1721
---> probID: geeksforgeeks_2481_A
---> inputs:

---> outputs:
1->2->3->4->5->6->7->8->9->1
1->2->3->4->6->7->8->9->1
1->2->3->4->6->7->8->1
1->2->3->6->7->8->1
2->3->6->7->8->2
2->3->6->8->2
2->3->8->2
2->3->2
2->2


class GFG :
    class Node :
        def __init__ ( self , x ) :
            self . data = x
            self . next = None
    def printList ( head ) :
        if head is None :
            return
        temp = head
        while True :
            print ( temp . data , end = "->" )
            temp = temp . next
            if temp == head :
                break
        print ( head . data )
    def deleteK ( head_ref , k ) :
        head = head_ref
        if head is None :
            return None
        curr = head
        prev = None
        while True :
            if curr . next == head and curr == head :
                break
            printList ( head )
            for i in range ( k ) :
                prev = curr
                curr = curr . next
            if curr == head :
                prev = head
                while prev . next != head :
                    prev = prev . next
                head = curr . next
                prev . next = head
                head_ref = head
            elif curr . next == head :
                prev . next = head
            else :
                prev . next = curr . next
        return head
    def insertNode ( head_ref , x ) :
        head = head_ref
        temp = GFG . Node ( x )
        if head is None :
            temp . next = temp
            head_ref = temp
            return head_ref
        else :
            temp1 = head
            while temp1 . next != head :
                temp1 = temp1 . next
            temp1 . next = temp
            temp . next = head
        return head
    head = None
    head = insertNode ( head , 1 )
    head = insertNode ( head , 2 )
    head = insertNode ( head , 3 )
    head = insertNode ( head , 4 )
    head = insertNode ( head , 5 )
    head = insertNode ( head , 6 )
    head = insertNode ( head , 7 )
    head = insertNode ( head , 8 )
    head = insertNode ( head , 9 )
    k = 4
    head = deleteK ( head , k )


---> console_out:
 
DIDN'T MATCH!! :(
 99%|█████████▊| 1721/1746 [18:24<00:56,  2.24s/it]out1,out2 50 40


-------------------------------------


---> lineNum: 1722
---> probID: geeksforgeeks_3246_A
---> inputs:

---> outputs:
4


def steps ( cur , x , n ) :
    if x == 0 :
        return float ( 'inf' )
    elif x > 0 :
        return abs ( ( n - cur ) // x )
    else :
        return abs ( ( cur - 1 ) // x )
def countSteps ( curx , cury , n , m , moves ) :
    count = 0
    k = len ( moves )
    for i in range ( k ) :
        x = moves [ i ] [ 0 ]
        y = moves [ i ] [ 1 ]
        stepct = min ( steps ( curx , x , n ) , steps ( cury , y , m ) )
        count += stepct
        curx += stepct * x
        cury += stepct * y
    return count
n = 4
m = 5
x = 1
y = 1
moves = [ [ 1 , 1 ] , [ 1 , 1 ] , [ 0 , - 2 ] ]
print ( countSteps ( x , y , n , m , moves ) )


---> console_out:
5
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784790056_8697/main.py", line 1, in <module>
    import java . util . ArrayList
ModuleNotFoundError: No module named 'java'
out1,out2  60


-------------------------------------


---> lineNum: 1723
---> probID: codeforces_723_A
---> inputs:
7 1 4
---> outputs:
6

import java . util . ArrayList
import java . util . Arrays
import java . util . Scanner
md = [ ]
def main ( ) :
    global md
    inpt = input ( ) . split ( )
    x1 = int ( inpt [ 0 ] )
    x2 = int ( inpt [ 1 ] )
    x3 = int ( inpt [ 2 ] )
    point = min ( x1 , min ( x2 , x3 ) )
    if ( ( x1 > x2 and x1 < x3 ) or ( x1 > x3 and x1 < x2 ) ) :
        point = x1
    elif ( ( x1 > x2 and x2 > x3 ) or ( x2 < x3 and x2 > x1 ) ) :
        point = x2
    else :
        point = x3
    d = abs ( x1 - point ) + abs ( x2 - point ) + abs ( x3 - point )
    print ( d )
if __name__ == "__main__" :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 99%|█████████▊| 1723/1746 [18:24<00:35,  1.56s/it]

-------------------------------------


---> lineNum: 1724
---> probID: geeksforgeeks_768_A
---> inputs:

---> outputs:
6


def gcd ( a , b ) :
    if b == 0 :
        return a
    return gcd ( b , a % b )
def cntSubArr ( arr , n ) :
    ans = 0
    for i in range ( n ) :
        curr_gcd = 0
        for j in range ( i , n ) :
            curr_gcd = gcd ( curr_gcd , arr [ j ] )
            ans += 1 if curr_gcd == 1 else 0
    return ans
arr = [ 1 , 1 , 1 ]
n = len ( arr )
print ( cntSubArr ( arr , n ) )


---> console_out:
6
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1725
---> probID: geeksforgeeks_4452_A
---> inputs:

---> outputs:
No


import math
def isVowel ( c ) :
    if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' :
        return True
    return False
def isVowelPrime ( str , n ) :
    prime = [ True ] * n
    prime [ 0 ] = False
    prime [ 1 ] = False
    for p in range ( 2 , int ( math . sqrt ( n ) ) + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * p , n , p ) :
                prime [ i ] = False
    for i in range ( n ) :
        if isVowel ( str [ i ] ) and not prime [ i ] :
            return False
    return True
str = "geeksforgeeks"
n = len ( str )
if isVowelPrime ( str , n ) :
    print ( "Yes" )
else :
    print ( "No" )


---> console_out:
No
 
MATCHED!! :D
 99%|█████████▉| 1725/1746 [18:25<00:23,  1.10s/it]

-------------------------------------


---> lineNum: 1726
---> probID: geeksforgeeks_2869_A
---> inputs:

---> outputs:
2


def minStepToDeleteString ( str ) :
    N = len ( str )
    dp = [ [ 0 for j in range ( N + 1 ) ] for i in range ( N + 1 ) ]
    for i in range ( N + 1 ) :
        for j in range ( N + 1 ) :
            dp [ i ] [ j ] = 0
    for length in range ( 1 , N + 1 ) :
        for i in range ( 0 , N - length + 1 ) :
            j = i + length - 1
            if length == 1 :
                dp [ i ] [ j ] = 1
            else :
                dp [ i ] [ j ] = 1 + dp [ i + 1 ] [ j ]
                if str [ i ] == str [ i + 1 ] :
                    dp [ i ] [ j ] = min ( 1 + dp [ i + 2 ] [ j ] , dp [ i ] [ j ] )
                for K in range ( i + 2 , j + 1 ) :
                    if str [ i ] == str [ K ] :
                        dp [ i ] [ j ] = min ( dp [ i + 1 ] [ K - 1 ] + dp [ K + 1 ] [ j ] , dp [ i ] [ j ] )
    return dp [ 0 ] [ N - 1 ]
if __name__ == '__main__' :
    str = "2553432"
    print ( minStepToDeleteString ( str ) )


---> console_out:
2
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1727
---> probID: geeksforgeeks_38_A
---> inputs:

---> outputs:
5


limit = 10000000
position = [ 0 ] * ( limit + 1 )
def sieve ( ) :
    position [ 0 ] = - 1
    position [ 1 ] = - 1
    pos = 0
    for i in range ( 2 , limit + 1 ) :
        if position [ i ] == 0 :
            pos += 1
            position [ i ] = pos
            for j in range ( i * 2 , limit + 1 , i ) :
                position [ j ] = - 1
sieve ( )
n = 11
print ( position [ n ] )


---> console_out:
5
 
MATCHED!! :D
 99%|█████████▉| 1727/1746 [18:30<00:30,  1.60s/it]

-------------------------------------


---> lineNum: 1728
---> probID: geeksforgeeks_2602_A
---> inputs:

---> outputs:
43758


def getNumMonotone ( len ) :
    DP_s = 9
    DP = [ [ 0 for j in range ( DP_s ) ] for i in range ( len ) ]
    for i in range ( DP_s ) :
        DP [ 0 ] [ i ] = i + 1
    for i in range ( len ) :
        DP [ i ] [ 0 ] = 1
    for i in range ( 1 , len ) :
        for j in range ( 1 , DP_s ) :
            DP [ i ] [ j ] = DP [ i - 1 ] [ j ] + DP [ i ] [ j - 1 ]
    return DP [ len - 1 ] [ DP_s - 1 ]
print ( getNumMonotone ( 10 ) )


---> console_out:
43758
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1729
---> probID: geeksforgeeks_2609_A
---> inputs:

---> outputs:
43758


def getNumMonotone ( len ) :
    DP_s = 9
    DP = [ [ 0 for j in range ( DP_s ) ] for i in range ( len ) ]
    for i in range ( DP_s ) :
        DP [ 0 ] [ i ] = i + 1
    for i in range ( len ) :
        DP [ i ] [ 0 ] = 1
    for i in range ( 1 , len ) :
        for j in range ( 1 , DP_s ) :
            DP [ i ] [ j ] = DP [ i - 1 ] [ j ] + DP [ i ] [ j - 1 ]
    return DP [ len - 1 ] [ DP_s - 1 ]
print ( getNumMonotone ( 10 ) )


---> console_out:
43758
 
MATCHED!! :D
 99%|█████████▉| 1729/1746 [18:30<00:19,  1.14s/it]

-------------------------------------


---> lineNum: 1730
---> probID: geeksforgeeks_1604_A
---> inputs:

---> outputs:
8


def maxCost ( a , n , l , r ) :
    mx = 0
    for i in range ( n ) :
        mx = max ( mx , a [ i ] )
    count = [ 0 ] * ( mx + 1 )
    for i in range ( n ) :
        count [ a [ i ] ] += 1
    res = [ 0 ] * ( mx + 1 )
    res [ 0 ] = 0
    l = min ( l , r )
    for num in range ( 1 , mx + 1 ) :
        k = max ( num - l - 1 , 0 )
        res [ num ] = max ( res [ num - 1 ] , num * count [ num ] + res [ k ] )
    return res [ mx ]
a = [ 2 , 1 , 2 , 3 , 2 , 2 , 1 ]
l = 1
r = 1
n = len ( a )
print ( maxCost ( a , n , l , r ) )


---> console_out:
8
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1731
---> probID: codeforces_1680_B
---> inputs:
6
1 3
ERR
2 2
ER
RE
2 2
ER
ER
1 1
R
4 3
EEE
EEE
ERR
EER
3 3
EEE
EER
REE
---> outputs:
YES
NO
YES
YES
YES
NO

import sys
T = int ( input ( ) )
for t in range ( T ) :
    R , C = map ( int , input ( ) . split ( ) )
    A = [ list ( input ( ) ) for _ in range ( R ) ]
    r = - 1
    c = - 1
    for rr in range ( R ) :
        for cc in range ( C ) :
            if A [ rr ] [ cc ] == 'R' :
                r = rr
                c = cc
                break
        if r != - 1 :
            break
    ok = True
    for rr in range ( r + 1 , R ) :
        for cc in range ( c ) :
            if A [ rr ] [ cc ] == 'R' :
                ok = False
    print ( "YES" if ok else "NO" )


---> console_out:
YES
NO
YES
YES
YES
NO
 
MATCHED!! :D
 99%|█████████▉| 1731/1746 [18:30<00:12,  1.23it/s]Traceback (most recent call last):
  File "./junk/1703784795997_6783/main.py", line 1, in <module>
    class Test :
  File "./junk/1703784795997_6783/main.py", line 7, in Test
    print ( "Area is" , Test . findArea ( 5 ) )
NameError: name 'Test' is not defined
out1,out2  areais785


-------------------------------------


---> lineNum: 1732
---> probID: geeksforgeeks_3665_A
---> inputs:

---> outputs:
Area is 78.550000


class Test :
    PI = 3.141592653589793
    @ staticmethod
    def findArea ( r ) :
        return Test . PI * pow ( r , 2 )
    if __name__ == '__main__' :
        print ( "Area is" , Test . findArea ( 5 ) )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1703784796057_1122/main.py", line 6, in <module>
    town = int ( input ( ) ) - 1
ValueError: invalid literal for int() with base 10: '1 5 6 2'
out1,out2  60


-------------------------------------


---> lineNum: 1733
---> probID: codeforces_700_B
---> inputs:
7 2
1 5 6 2
1 3
3 2
4 5
3 7
4 3
4 6
---> outputs:
6

import sys
N , K = map ( int , input ( ) . split ( ) )
adj = [ [ ] for _ in range ( N ) ]
unis = [ 0 ] * N
for i in range ( 2 * K ) :
    town = int ( input ( ) ) - 1
    unis [ town ] += 1
for i in range ( N - 1 ) :
    x , y = map ( int , input ( ) . split ( ) )
    adj [ x - 1 ] . append ( y - 1 )
    adj [ y - 1 ] . append ( x - 1 )
below = [ 0 ] * N
vis = [ False ] * N
result = 0
def dfs ( node ) :
    global result
    vis [ node ] = True
    below [ node ] = unis [ node ]
    for adj_node in adj [ node ] :
        if vis [ adj_node ] :
            continue
        dfs ( adj_node )
        below [ node ] += below [ adj_node ]
        result += min ( below [ adj_node ] , 2 * K - below [ adj_node ] )
dfs ( 0 )
print ( result )


---> console_out:
 
DIDN'T MATCH!! :(
 99%|█████████▉| 1733/1746 [18:30<00:07,  1.70it/s]

-------------------------------------


---> lineNum: 1734
---> probID: geeksforgeeks_2922_A
---> inputs:

---> outputs:
90


import math
def nthTerm ( N ) :
    return abs ( N * ( ( N - 1 ) * ( N - 3 ) * ( N - 5 ) ) )
N = 6
print ( nthTerm ( N ) )


---> console_out:
90
 
MATCHED!! :D
  File "./junk/1703784796216_7322/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  700


-------------------------------------


---> lineNum: 1735
---> probID: geeksforgeeks_807_A
---> inputs:

---> outputs:
70


import java . util . * ;
import java . lang . * ;
import java . io . * ;
class GFG { public static int getHeight ( int X ) { return ( 2 * X ) ; } public static void main ( String [ ] args ) throws java . lang . Exception { int X = 35 ; System . out . println ( getHeight ( X ) ) ; } }


---> console_out:
 
DIDN'T MATCH!! :(
 99%|█████████▉| 1735/1746 [18:31<00:04,  2.30it/s]  File "./junk/1703784796295_7475/main.py", line 1
    import java . util . * ;
                         ^
SyntaxError: invalid syntax
out1,out2  20


-------------------------------------


---> lineNum: 1736
---> probID: geeksforgeeks_3897_A
---> inputs:

---> outputs:
2


import java . util . * ;
class KPaths :
    V = 4
    def countwalks ( self , graph , u , v , k ) :
        if k == 0 and u == v :
            return 1
        if k == 1 and graph [ u ] [ v ] == 1 :
            return 1
        if k <= 0 :
            return 0
        count = 0
        for i in range ( V ) :
            if graph [ u ] [ i ] == 1 :
                count += self . countwalks ( graph , i , v , k - 1 )
        return count
if __name__ == '__main__' :
    graph = [ [ 0 , 1 , 1 , 1 ] , [ 0 , 0 , 0 , 1 ] , [ 0 , 0 , 0 , 1 ] , [ 0 , 0 , 0 , 0 ] ]
    u , v , k = 0 , 3 , 2
    p = KPaths ( )
    print ( p . countwalks ( graph , u , v , k ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1737
---> probID: geeksforgeeks_2556_A
---> inputs:

---> outputs:
2
3
8
16


def findDigits ( n , b ) :
    if n < 0 :
        return 0
    if n <= 1 :
        return 1
    import math
    M_PI = 3.141592
    M_E = 2.7182
    x = ( ( n * math . log10 ( n / M_E ) + math . log10 ( 2 * M_PI * n ) / 2.0 ) ) / ( math . log10 ( b ) )
    return int ( math . floor ( x ) + 1 )
print ( findDigits ( 4 , 16 ) )
print ( findDigits ( 5 , 8 ) )
print ( findDigits ( 12 , 16 ) )
print ( findDigits ( 19 , 13 ) )


---> console_out:
2
3
8
16
 
MATCHED!! :D
 99%|█████████▉| 1737/1746 [18:31<00:02,  3.10it/s]Traceback (most recent call last):
  File "./junk/1703784796417_5669/main.py", line 32, in <module>
    main ( )
  File "./junk/1703784796417_5669/main.py", line 30, in main
    print ( sum ( query [ 1 ] , query [ 2 ] ) )
  File "./junk/1703784796417_5669/main.py", line 14, in sum
    return sum_t ( t ) - sum_s ( s - 1 )
NameError: name 'sum_s' is not defined
out1,out2  3020


-------------------------------------


---> lineNum: 1738
---> probID: aizu_p02346_A
---> inputs:
3 5
0 1 1
0 2 2
0 3 3
1 1 2
1 2 2
---> outputs:
3
2

import sys
def init ( n ) :
    global size , nodes
    size = 1
    while size < n :
        size *= 2
    nodes = [ 0 ] * ( size + 1 )
def add ( target , value ) :
    global nodes
    while target < len ( nodes ) :
        nodes [ target ] += value
        target += target & ( - target )
def sum ( s , t ) :
    return sum_t ( t ) - sum_s ( s - 1 )
def sum_t ( t ) :
    global nodes
    res = 0
    while t > 0 :
        res += nodes [ t ]
        t -= t & ( - t )
    return res
def main ( ) :
    n , q = map ( int , input ( ) . split ( ) )
    init ( n )
    for i in range ( q ) :
        query = list ( map ( int , input ( ) . split ( ) ) )
        if query [ 0 ] == 0 :
            add ( query [ 1 ] , query [ 2 ] )
        else :
            print ( sum ( query [ 1 ] , query [ 2 ] ) )
if __name__ == '__main__' :
    main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1739
---> probID: atcoder_ARC066_B
---> inputs:
3
2 1 4
2
1 1
2 3
---> outputs:
5


import sys
check = { }
def solve ( n ) :
    if n == 0 :
        return 1
    elif n == 1 :
        return 2
    else :
        if n // 2 in check :
            a = check [ n // 2 ]
        else :
            a = solve ( n // 2 ) % 1000000007
            check [ n // 2 ] = a
        if ( n // 2 - 1 ) in check :
            b = check [ n // 2 - 1 ]
        else :
            b = solve ( n // 2 - 1 ) % 1000000007
            check [ n // 2 - 1 ] = b
        if n % 2 == 1 :
            return ( 2 * a + b ) % 1000000007
        else :
            return ( 2 * b + a ) % 1000000007
if __name__ == "__main__" :
    N = int ( sys . stdin . readline ( ) )
    print ( solve ( N ) )


---> console_out:
5
 
MATCHED!! :D
100%|█████████▉| 1739/1746 [18:31<00:01,  4.08it/s]

-------------------------------------


---> lineNum: 1740
---> probID: aizu_p00712_A
---> inputs:
2 3 120 3
2 3 300 3
2 3 299 3
2 3 12 3
2 3 12000 7
54 795 12000 7
2 3 300 1
2 1 200 5
2 4 54 2
0 0 0 0
---> outputs:
4
7
6
2
42
1
0
9
3

import sys
def judge ( p , q , separate , now_pro , prev_deno ) :
    count = 0
    if p == 0 :
        count += 1
    if separate <= 0 :
        return count
    deno = maxproduct // now_pro + 1
    while separate * q < p * deno :
        deno -= 1
    while p * deno >= q and prev_deno <= deno :
        subtraction_deno = q * deno
        subtraction_nume = p * deno - q
        if now_pro * deno <= maxproduct :
            count += judge ( subtraction_nume , subtraction_deno , separate - 1 , now_pro * deno , deno )
        deno -= 1
    return count
while True :
    numerator , denominator , maxproduct , parts = map ( int , input ( ) . split ( ) )
    if parts == 0 :
        break
    count = 0
    count += judge ( numerator , denominator , parts , 1 , 0 )
    print ( count )


---> console_out:
4
7
6
2
42
1
0
9
3
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1741
---> probID: geeksforgeeks_1936_A
---> inputs:

---> outputs:
1


import math
def reverse_string ( s ) :
    return s [ : : - 1 ]
def binary_conversion ( m ) :
    global s
    while m != 0 :
        tmp = m % 2
        s += str ( tmp )
        m = math . floor ( m / 2 )
    s = reverse_string ( s )
def find_character ( n , m , i ) :
    global s
    binary_conversion ( m )
    s1 = ""
    for x in range ( n ) :
        for y in range ( len ( s ) ) :
            if s [ y ] == '1' :
                s1 += "10"
            else :
                s1 += "01"
        s = s1
        s1 = ""
    return int ( s [ i ] )
s = ""
m = 5
n = 2
i = 8
print ( find_character ( n , m , i ) )


---> console_out:
1
 
MATCHED!! :D
100%|█████████▉| 1741/1746 [18:31<00:00,  5.16it/s]

-------------------------------------


---> lineNum: 1742
---> probID: geeksforgeeks_329_A
---> inputs:

---> outputs:
Number of subsets = 7


import math
def countSubsets ( arr , n ) :
    us = set ( )
    even_count = 0
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            us . add ( arr [ i ] )
    even_count = len ( us )
    return int ( math . pow ( 2 , even_count ) - 1 )
if __name__ == '__main__' :
    arr = [ 4 , 2 , 1 , 9 , 2 , 6 , 5 , 3 ]
    n = len ( arr )
    print ( "Number of subsets = " , countSubsets ( arr , n ) )


---> console_out:
Number of subsets =  7
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1743
---> probID: geeksforgeeks_1575_A
---> inputs:

---> outputs:
144


import math
MAX = 1000
f = [ 0 ] * MAX
def fib ( n ) :
    if n == 0 :
        return 0
    if n == 1 or n == 2 :
        f [ n ] = 1
        return f [ n ]
    if f [ n ] != 0 :
        return f [ n ]
    k = 0
    if n & 1 != 0 :
        k = ( n + 1 ) // 2
    else :
        k = n // 2
    if n & 1 != 0 :
        f [ n ] = fib ( k ) * fib ( k ) + fib ( k - 1 ) * fib ( k - 1 )
    else :
        f [ n ] = ( 2 * fib ( k - 1 ) + fib ( k ) ) * fib ( k )
    return f [ n ]
def gcd ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )
def findLCMFibonacci ( a , b ) :
    return fib ( a ) * fib ( b ) // fib ( gcd ( a , b ) )
a = 3
b = 12
print ( findLCMFibonacci ( a , b ) )


---> console_out:
144
 
MATCHED!! :D
100%|█████████▉| 1743/1746 [18:31<00:00,  6.38it/s]

-------------------------------------


---> lineNum: 1744
---> probID: geeksforgeeks_190_A
---> inputs:

---> outputs:
50


def findNumbers ( n , w ) :
    x , sum = 0 , 0
    if 0 <= w <= 8 :
        x = 9 - w
    elif - 9 <= w <= - 1 :
        x = 10 + w
    sum = 10 ** ( n - 2 )
    sum = x * sum
    return sum
if __name__ == '__main__' :
    n , w = 3 , 4
    print ( findNumbers ( n , w ) )


---> console_out:
50
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1745
---> probID: geeksforgeeks_4161_A
---> inputs:

---> outputs:
c


import re
def findKthChar ( s , k ) :
    total_len = 0
    i = 0
    while i < len ( s ) :
        if s [ i ] . isalpha ( ) :
            total_len += 1
            if total_len == k :
                return s [ i ]
            i += 1
        else :
            n = 0
            while i < len ( s ) and not s [ i ] . isalpha ( ) :
                n = n * 10 + int ( s [ i ] )
                i += 1
            next_total_len = total_len * n
            if k <= next_total_len :
                pos = k % total_len
                if pos == 0 :
                    pos = total_len
                return findKthChar ( s , pos )
            else :
                total_len = next_total_len
    return ' '
s = "ab2c3"
k = 5
print ( findKthChar ( s , k ) )


---> console_out:
c
 
MATCHED!! :D
100%|█████████▉| 1745/1746 [18:31<00:00,  7.47it/s]

-------------------------------------


---> lineNum: 1746
---> probID: geeksforgeeks_3285_A
---> inputs:

---> outputs:
15


import math
def countNonEmptySubstr ( str ) :
    n = len ( str )
    return n * ( n + 1 ) // 2
s = "abcde"
print ( countNonEmptySubstr ( s ) )


---> console_out:
15
 
MATCHED!! :D
100%|██████████| 1746/1746 [18:31<00:00,  1.57it/s]
Success-RuntimeEq - 1328, TotalChecked-RuntimeEq - 1746, Total-RuntimeEq - 1746
RunEqAcc: 1328/1746 = 76.05956471935853 %
matches_bySource {'aizu': 111, 'atcoder': 63, 'codeforces': 246, 'codejam': 1, 'geeksforgeeks': 886, 'leetcode': 9, 'projecteuler': 12}
totalChecked_bySource {'aizu': 190, 'atcoder': 97, 'codeforces': 401, 'codejam': 4, 'geeksforgeeks': 995, 'leetcode': 18, 'projecteuler': 41}
