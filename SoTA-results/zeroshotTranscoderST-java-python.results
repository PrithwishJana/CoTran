  0%|          | 0/1746 [00:00<?, ?it/s]  0%|          | 3/1746 [00:00<01:02, 28.09it/s]  0%|          | 7/1746 [00:00<00:56, 30.91it/s]  1%|          | 11/1746 [00:00<00:54, 31.94it/s]  1%|          | 15/1746 [00:00<00:54, 31.92it/s]  1%|          | 19/1746 [00:00<00:53, 32.03it/s]  1%|▏         | 23/1746 [00:00<00:53, 32.09it/s]  2%|▏         | 27/1746 [00:00<00:53, 32.36it/s]  2%|▏         | 31/1746 [00:00<00:52, 32.37it/s]  2%|▏         | 35/1746 [00:01<00:52, 32.70it/s]  2%|▏         | 39/1746 [00:01<00:52, 32.40it/s]  2%|▏         | 43/1746 [00:01<00:52, 32.50it/s]  3%|▎         | 47/1746 [00:01<00:52, 32.67it/s]  3%|▎         | 51/1746 [00:01<00:52, 32.55it/s]  3%|▎         | 55/1746 [00:01<00:52, 32.02it/s]  3%|▎         | 59/1746 [00:01<00:52, 32.37it/s]  4%|▎         | 63/1746 [00:01<00:52, 32.09it/s]  4%|▍         | 67/1746 [00:02<00:51, 32.38it/s]  4%|▍         | 71/1746 [00:02<00:51, 32.26it/s]  4%|▍         | 75/1746 [00:02<00:51, 32.13it/s]  5%|▍         | 79/1746 [00:02<00:51, 32.50it/s]  5%|▍         | 83/1746 [00:02<00:50, 32.78it/s]  5%|▍         | 87/1746 [00:02<00:50, 32.86it/s]  5%|▌         | 91/1746 [00:02<00:50, 32.88it/s]  5%|▌         | 95/1746 [00:02<00:50, 32.98it/s]  6%|▌         | 99/1746 [00:03<00:50, 32.79it/s]  6%|▌         | 103/1746 [00:03<00:49, 32.91it/s]  6%|▌         | 107/1746 [00:03<00:50, 32.77it/s]  6%|▋         | 111/1746 [00:03<00:50, 32.56it/s]  7%|▋         | 115/1746 [00:03<00:49, 32.79it/s]  7%|▋         | 119/1746 [00:03<00:49, 32.90it/s]  7%|▋         | 123/1746 [00:03<00:49, 33.00it/s]  7%|▋         | 127/1746 [00:03<00:49, 32.73it/s]  8%|▊         | 131/1746 [00:04<00:49, 32.74it/s]  8%|▊         | 135/1746 [00:04<00:49, 32.87it/s]  8%|▊         | 139/1746 [00:04<00:48, 32.90it/s]  8%|▊         | 143/1746 [00:04<00:48, 33.04it/s]  8%|▊         | 147/1746 [00:04<00:48, 32.79it/s]  9%|▊         | 151/1746 [00:04<00:48, 32.86it/s]  9%|▉         | 155/1746 [00:04<00:48, 32.86it/s]  9%|▉         | 159/1746 [00:04<00:48, 32.69it/s]  9%|▉         | 163/1746 [00:05<00:49, 31.94it/s] 10%|▉         | 167/1746 [00:05<00:48, 32.25it/s] 10%|▉         | 171/1746 [00:05<00:48, 32.54it/s] 10%|█         | 175/1746 [00:05<00:48, 32.68it/s] 10%|█         | 179/1746 [00:05<00:47, 32.97it/s] 10%|█         | 183/1746 [00:05<00:47, 32.93it/s] 11%|█         | 187/1746 [00:05<00:47, 32.98it/s] 11%|█         | 191/1746 [00:05<00:47, 32.89it/s] 11%|█         | 195/1746 [00:05<00:47, 32.68it/s] 11%|█▏        | 199/1746 [00:06<00:47, 32.65it/s] 12%|█▏        | 203/1746 [00:06<00:47, 32.52it/s] 12%|█▏        | 207/1746 [00:06<00:47, 32.34it/s] 12%|█▏        | 211/1746 [00:06<00:47, 32.38it/s] 12%|█▏        | 215/1746 [00:06<00:47, 32.52it/s] 13%|█▎        | 219/1746 [00:06<00:46, 32.66it/s] 13%|█▎        | 223/1746 [00:06<00:46, 32.42it/s] 13%|█▎        | 227/1746 [00:06<00:47, 32.07it/s] 13%|█▎        | 231/1746 [00:07<00:46, 32.24it/s] 13%|█▎        | 235/1746 [00:07<00:46, 32.31it/s] 14%|█▎        | 239/1746 [00:07<00:46, 32.16it/s] 14%|█▍        | 243/1746 [00:07<00:46, 32.32it/s] 14%|█▍        | 247/1746 [00:07<00:46, 32.55it/s] 14%|█▍        | 251/1746 [00:07<00:46, 32.45it/s] 15%|█▍        | 255/1746 [00:07<00:45, 32.73it/s] 15%|█▍        | 259/1746 [00:07<00:45, 32.81it/s] 15%|█▌        | 263/1746 [00:08<00:45, 32.94it/s] 15%|█▌        | 267/1746 [00:08<00:44, 32.90it/s] 16%|█▌        | 271/1746 [00:08<00:45, 32.70it/s] 16%|█▌        | 275/1746 [00:08<00:45, 32.54it/s] 16%|█▌        | 279/1746 [00:08<00:45, 32.53it/s] 16%|█▌        | 283/1746 [00:08<00:44, 32.72it/s] 16%|█▋        | 287/1746 [00:08<00:44, 32.92it/s] 17%|█▋        | 291/1746 [00:08<00:44, 32.76it/s] 17%|█▋        | 295/1746 [00:09<00:44, 32.71it/s] 17%|█▋        | 299/1746 [00:09<00:44, 32.78it/s] 17%|█▋        | 303/1746 [00:09<00:44, 32.70it/s] 18%|█▊        | 307/1746 [00:09<00:44, 32.38it/s] 18%|█▊        | 311/1746 [00:09<00:44, 32.53it/s] 18%|█▊        | 315/1746 [00:09<00:43, 32.52it/s] 18%|█▊        | 319/1746 [00:09<00:43, 32.44it/s] 18%|█▊        | 323/1746 [00:09<00:44, 32.33it/s] 19%|█▊        | 327/1746 [00:10<00:43, 32.44it/s] 19%|█▉        | 331/1746 [00:10<00:43, 32.75it/s] 19%|█▉        | 335/1746 [00:10<00:42, 33.07it/s] 19%|█▉        | 339/1746 [00:10<00:42, 33.10it/s] 20%|█▉        | 343/1746 [00:10<00:42, 33.06it/s] 20%|█▉        | 347/1746 [00:10<00:42, 32.70it/s]  File "./junk/1692552794010_2524/main.py", line 5
    def del ( map , y , x ) :
        ^
SyntaxError: invalid syntax


  File "./junk/1692552794262_6168/main.py", line 4
    , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi ,
                         ^
SyntaxError: trailing comma not allowed without surrounding parentheses


  File "./junk/1692552794418_9811/main.py", line 20
    return lps ( seq )
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552794663_5040/main.py", line 24
    return self . x == other . x and self . y == other .
                                                       ^
SyntaxError: invalid syntax


  File "./junk/1692552794755_9278/main.py", line 7
    break
    ^
SyntaxError: 'break' outside loop


  File "./junk/1692552794970_3750/main.py", line 31
    return None
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552795000_7028/main.py", line 37
    return main
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552795120_7998/main.py", line 22
    from numpy . math import sin , cos , sin , cos , tan , cot , cot = np
                                                                     ^
SyntaxError: invalid syntax


  File "./junk/1692552795241_4378/main.py", line 39
    return subprocess . Popen ( self .
                                     ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692552796096_9255/main.py", line 43
    import numpy . testing . ufuncs as ufuncs as ufuncs
                                              ^
SyntaxError: invalid syntax


  File "./junk/1692552796583_5342/main.py", line 101
    from string
              ^
SyntaxError: invalid syntax


  File "./junk/1692552796673_4284/main.py", line 66
    np . random . seed (
                       ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692552797380_2625/main.py", line 38
    return 0
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552798048_2199/main.py", line 2
    global maximum , x , ans
    ^
SyntaxError: name 'x' is parameter and global


  File "./junk/1692552799247_1684/main.py", line 28
    def uniform ( self , self ) :
    ^
SyntaxError: duplicate argument 'self' in function definition


  File "./junk/1692552799716_8091/main.py", line 15
    print ( "The two repeating elements are: " , x , y , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " " , end = " " , end = " " , end = " & " , end = " & " , end = " " )
                                                                       ^
SyntaxError: keyword argument repeated


  File "./junk/1692552799842_4357/main.py", line 8
    return '' . join ( str ( n ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( ' SPACETOKEN

SyntaxError: EOL while scanning string literal


  File "./junk/1692552800024_4029/main.py", line 29
    print ( already_a [ N ] , end = ' ' , end = ' ' , end = ' ' )
                                          ^
SyntaxError: keyword argument repeated


  File "./junk/1692552800054_7181/main.py", line 21
    return '' . join ( [ chr ( i ) for i in range ( len ( data ) ) ] )
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552800632_3879/main.py", line 39
    return None
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552800880_6583/main.py", line 7
    for i in range ( n ) :
                         ^
SyntaxError: invalid syntax


  File "./junk/1692552801701_2771/main.py", line 16
    return memo [ pos ] [ fl ] [ pr ] = val
                                      ^
SyntaxError: invalid syntax


  File "./junk/1692552801795_5378/main.py", line 41
    a = a . astype ( np .
                        ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692552801951_9559/main.py", line 36
    return None
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552802072_7753/main.py", line 19
    if 0l in d :
        ^
SyntaxError: invalid syntax


  File "./junk/1692552802197_7283/main.py", line 9
    rv = 1 , prev , one_seq , two_seq = 0 , 0 , 0
         ^
SyntaxError: cannot assign to literal


 20%|██        | 351/1746 [00:10<00:42, 32.71it/s] 20%|██        | 355/1746 [00:10<00:42, 32.49it/s] 21%|██        | 359/1746 [00:11<00:42, 32.68it/s] 21%|██        | 363/1746 [00:11<00:42, 32.78it/s] 21%|██        | 367/1746 [00:11<00:41, 32.92it/s] 21%|██        | 371/1746 [00:11<00:41, 32.99it/s] 21%|██▏       | 375/1746 [00:11<00:41, 32.66it/s] 22%|██▏       | 379/1746 [00:11<00:41, 32.62it/s] 22%|██▏       | 383/1746 [00:11<00:41, 32.84it/s] 22%|██▏       | 387/1746 [00:11<00:41, 32.80it/s] 22%|██▏       | 391/1746 [00:11<00:41, 32.38it/s] 23%|██▎       | 395/1746 [00:12<00:42, 32.08it/s] 23%|██▎       | 399/1746 [00:12<00:41, 32.54it/s] 23%|██▎       | 403/1746 [00:12<00:41, 32.32it/s] 23%|██▎       | 407/1746 [00:12<00:41, 32.35it/s] 24%|██▎       | 411/1746 [00:12<00:42, 31.62it/s] 24%|██▍       | 415/1746 [00:12<00:41, 31.77it/s] 24%|██▍       | 419/1746 [00:12<00:41, 32.16it/s]  File "./junk/1692552803231_2851/main.py", line 3
    for x , h in enumerate ( open ( ' . . / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s /

SyntaxError: EOL while scanning string literal


  File "./junk/1692552803295_7965/main.py", line 51
    np . testing . as_testing as np
                              ^
SyntaxError: invalid syntax


  File "./junk/1692552803570_5880/main.py", line 84
    else :
    ^
SyntaxError: invalid syntax


  File "./junk/1692552804120_9965/main.py", line 12
    return dp [ index ] [ cnt ] = ans
                                ^
SyntaxError: invalid syntax


  File "./junk/1692552804180_9798/main.py", line 11
    as = f . readline ( ) . split ( )
    ^
SyntaxError: invalid syntax


  File "./junk/1692552804985_4035/main.py", line 2
    binary = [ '000','001' , "010',"011','100','101',"110' , "111' ]
                                      ^
SyntaxError: leading zeros in decimal integer literals are not permitted; use an 0o prefix for octal integers


  File "./junk/1692552805148_6394/main.py", line 4
    with open

SyntaxError: EOL while scanning string literal


  File "./junk/1692552805243_6866/main.py", line 2
    fibo = 2.078087F * float ( math . log ( n ) ) + 1.672276F
                   ^
SyntaxError: invalid syntax


  File "./junk/1692552805423_5916/main.py", line 19
    print
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
SyntaxError: EOL while scanning string literal

 24%|██▍       | 423/1746 [00:12<00:40, 32.35it/s] 24%|██▍       | 427/1746 [00:13<00:40, 32.65it/s] 25%|██▍       | 431/1746 [00:13<00:39, 32.95it/s] 25%|██▍       | 435/1746 [00:13<00:39, 33.07it/s] 25%|██▌       | 439/1746 [00:13<00:39, 33.06it/s] 25%|██▌       | 443/1746 [00:13<00:39, 32.58it/s] 26%|██▌       | 447/1746 [00:13<00:39, 32.62it/s] 26%|██▌       | 451/1746 [00:13<00:39, 32.81it/s] 26%|██▌       | 455/1746 [00:13<00:39, 32.68it/s] 26%|██▋       | 459/1746 [00:14<00:39, 32.63it/s] 27%|██▋       | 463/1746 [00:14<00:38, 32.92it/s] 27%|██▋       | 467/1746 [00:14<00:38, 32.98it/s] 27%|██▋       | 471/1746 [00:14<00:38, 32.75it/s] 27%|██▋       | 475/1746 [00:14<00:40, 31.62it/s] 27%|██▋       | 479/1746 [00:14<00:39, 31.95it/s] 28%|██▊       | 483/1746 [00:14<00:39, 32.13it/s] 28%|██▊       | 487/1746 [00:14<00:38, 32.61it/s] 28%|██▊       | 491/1746 [00:15<00:38, 32.77it/s] 28%|██▊       | 495/1746 [00:15<00:38, 32.65it/s] 29%|██▊       | 499/1746 [00:15<00:38, 32.67it/s] 29%|██▉       | 503/1746 [00:15<00:38, 32.45it/s] 29%|██▉       | 507/1746 [00:15<00:38, 32.25it/s] 29%|██▉       | 511/1746 [00:15<00:38, 32.06it/s] 29%|██▉       | 515/1746 [00:15<00:38, 32.15it/s] 30%|██▉       | 519/1746 [00:15<00:37, 32.35it/s] 30%|██▉       | 523/1746 [00:16<00:37, 32.46it/s] 30%|███       | 527/1746 [00:16<00:37, 32.58it/s] 30%|███       | 531/1746 [00:16<00:37, 32.41it/s] 31%|███       | 535/1746 [00:16<00:37, 32.33it/s] 31%|███       | 539/1746 [00:16<00:38, 31.26it/s] 31%|███       | 543/1746 [00:16<00:39, 30.08it/s] 31%|███▏      | 547/1746 [00:16<00:38, 30.83it/s] 32%|███▏      | 551/1746 [00:16<00:37, 31.57it/s] 32%|███▏      | 555/1746 [00:17<00:37, 31.95it/s] 32%|███▏      | 559/1746 [00:17<00:36, 32.34it/s] 32%|███▏      | 563/1746 [00:17<00:36, 32.58it/s] 32%|███▏      | 567/1746 [00:17<00:36, 32.54it/s] 33%|███▎      | 571/1746 [00:17<00:35, 32.80it/s] 33%|███▎      | 575/1746 [00:17<00:36, 32.04it/s] 33%|███▎      | 579/1746 [00:17<00:36, 32.38it/s] 33%|███▎      | 583/1746 [00:17<00:35, 32.73it/s] 34%|███▎      | 587/1746 [00:18<00:35, 32.85it/s] 34%|███▍      | 591/1746 [00:18<00:35, 32.80it/s] 34%|███▍      | 595/1746 [00:18<00:35, 32.83it/s] 34%|███▍      | 599/1746 [00:18<00:34, 32.99it/s] 35%|███▍      | 603/1746 [00:18<00:34, 33.08it/s] 35%|███▍      | 607/1746 [00:18<00:34, 33.09it/s] 35%|███▍      | 611/1746 [00:18<00:34, 33.27it/s] 35%|███▌      | 615/1746 [00:18<00:33, 33.48it/s] 35%|███▌      | 619/1746 [00:19<00:33, 33.44it/s] 36%|███▌      | 623/1746 [00:19<00:33, 33.35it/s] 36%|███▌      | 627/1746 [00:19<00:33, 33.30it/s] 36%|███▌      | 631/1746 [00:19<00:33, 33.46it/s] 36%|███▋      | 635/1746 [00:19<00:33, 33.38it/s]
  File "./junk/1692552805515_6010/main.py", line 44
    import numpy . testing . ufuncs as ufuncs as ufuncs
                                              ^
SyntaxError: invalid syntax


s_push: parser stack overflow
Sorry: MemoryError: 

  File "./junk/1692552806365_8751/main.py", line 24
    return parents [ x ] = r
                         ^
SyntaxError: invalid syntax


  File "./junk/1692552806551_5334/main.py", line 25
    for l in s [ j ] . split ( ':' ) [ 0 ] . split ( ':' ) [ 0 ] + s [ j ] . split ( ':' ) [ 1 ] . split ( ':' ) [ 0 ]
                                                                                                                     ^
SyntaxError: invalid syntax


  File "./junk/1692552806581_3624/main.py", line 23
    return main
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552806789_5259/main.py", line 119
    from string
              ^
SyntaxError: invalid syntax


  File "./junk/1692552806976_1201/main.py", line 11
    count = 0
    ^
SyntaxError: invalid syntax


  File "./junk/1692552807598_6235/main.py", line 9
    break
    ^
SyntaxError: 'break' outside loop


  File "./junk/1692552808402_1992/main.py", line 20
    sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0
                                                                         ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692552808435_4859/main.py", line 4
    MODULUS = 10000000000000000L
                               ^
SyntaxError: invalid syntax


  File "./junk/1692552808525_8278/main.py", line 10
    def multiples . have_same_digits ( x ) :
                  ^
SyntaxError: invalid syntax


  File "./junk/1692552809272_8621/main.py", line 4
    del = 3
        ^
SyntaxError: invalid syntax


  File "./junk/1692552809482_8806/main.py", line 65
    codecs import codecs
           ^
SyntaxError: invalid syntax


  File "./junk/1692552809574_2816/main.py", line 10
    del sys . stdin . read ( )
        ^
SyntaxError: cannot delete function call


  File "./junk/1692552809906_1327/main.py", line 13
    print

SyntaxError: EOL while scanning string literal


  File "./junk/1692552810370_2148/main.py", line 18
    subprocess . call ( [ '/usr/bin/sh' , '-c' , '-u' , '-u' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , ' -
                                                                                                                                                                                                                                                                                                                                                                                         ^
SyntaxError: EOL while scanning string literal


  File "./junk/1692552810429_9454/main.py", line 36
    return '' . join ( m . group ( 1 ) for m in m . group ( 2 ) . split ( ' ' ) )
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552811095_8572/main.py", line 19
    return main
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552811124_4843/main.py", line 10
    for i in range ( self . 6 ) :
                            ^
SyntaxError: invalid syntax


 37%|███▋      | 639/1746 [00:19<00:33, 33.12it/s] 37%|███▋      | 643/1746 [00:19<00:33, 33.20it/s] 37%|███▋      | 647/1746 [00:19<00:33, 32.95it/s] 37%|███▋      | 651/1746 [00:19<00:33, 33.09it/s] 38%|███▊      | 655/1746 [00:20<00:32, 33.28it/s] 38%|███▊      | 659/1746 [00:20<00:32, 33.30it/s] 38%|███▊      | 663/1746 [00:20<00:32, 33.59it/s] 38%|███▊      | 667/1746 [00:20<00:32, 33.22it/s] 38%|███▊      | 671/1746 [00:20<00:32, 32.98it/s] 39%|███▊      | 675/1746 [00:20<00:32, 32.72it/s] 39%|███▉      | 679/1746 [00:20<00:32, 32.88it/s] 39%|███▉      | 683/1746 [00:20<00:32, 32.68it/s] 39%|███▉      | 687/1746 [00:21<00:32, 32.72it/s] 40%|███▉      | 691/1746 [00:21<00:31, 33.00it/s] 40%|███▉      | 695/1746 [00:21<00:31, 33.08it/s] 40%|████      | 699/1746 [00:21<00:31, 33.11it/s] 40%|████      | 703/1746 [00:21<00:31, 33.17it/s] 40%|████      | 707/1746 [00:21<00:31, 32.50it/s] 41%|████      | 711/1746 [00:21<00:32, 32.00it/s] 41%|████      | 715/1746 [00:21<00:31, 32.39it/s] 41%|████      | 719/1746 [00:22<00:31, 32.24it/s] 41%|████▏     | 723/1746 [00:22<00:31, 32.43it/s] 42%|████▏     | 727/1746 [00:22<00:31, 32.74it/s] 42%|████▏     | 731/1746 [00:22<00:31, 31.84it/s] 42%|████▏     | 735/1746 [00:22<00:31, 32.28it/s] 42%|████▏     | 739/1746 [00:22<00:31, 32.38it/s] 43%|████▎     | 743/1746 [00:22<00:30, 32.75it/s] 43%|████▎     | 747/1746 [00:22<00:30, 32.71it/s] 43%|████▎     | 751/1746 [00:23<00:30, 33.05it/s] 43%|████▎     | 755/1746 [00:23<00:30, 32.93it/s] 43%|████▎     | 759/1746 [00:23<00:29, 33.16it/s] 44%|████▎     | 763/1746 [00:23<00:29, 32.78it/s] 44%|████▍     | 767/1746 [00:23<00:30, 32.22it/s] 44%|████▍     | 771/1746 [00:23<00:30, 32.24it/s]  File "./junk/1692552812050_3480/main.py", line 3
    for a , b , c , d , e , f in [ ( math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) ] :

SyntaxError: closing parenthesis ']' does not match opening parenthesis '('


  File "./junk/1692552812685_1321/main.py", line 8
    work :
         ^
SyntaxError: invalid syntax


  File "./junk/1692552812832_3407/main.py", line 73
    
    ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692552812863_1429/main.py", line 73
    
    ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692552813353_9101/main.py", line 26
    print ( 'ErrorSPACETOKENinSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKEN%s' % ( sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write

SyntaxError: unexpected EOF while parsing


  File "./junk/1692552813509_7436/main.py", line 35
    return '' . join ( find_occurrence ( arr , n , pattern ) )
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552813838_6452/main.py", line 28
    from numpy . testing . as np
                           ^
SyntaxError: invalid syntax


  File "./junk/1692552813869_2278/main.py", line 15
    continue
    ^
SyntaxError: 'continue' not properly in loop


  File "./junk/1692552814020_3709/main.py", line 6
    for b in range ( i = 0 , t ) :
                             ^
SyntaxError: positional argument follows keyword argument


./junk/1692552814367_1610/main.py:13: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if data is "" :

  File "./junk/1692552814427_5020/main.py", line 110
    
    ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692552814458_3308/main.py", line 17
    return dp [ ind ] [ cnt ] = ans
                              ^
SyntaxError: invalid syntax


  File "./junk/1692552814584_6815/main.py", line 28
    return 0
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552814615_7639/main.py", line 18
    from numpy . testing . as np
                           ^
SyntaxError: invalid syntax


  File "./junk/1692552815140_2945/main.py", line 59
    self . right = self .
                        ^
SyntaxError: invalid syntax


  File "./junk/1692552815559_6220/main.py", line 20
    return dp [ pos ] [ cnt ] [ tight ] [ nonz ] = ans
                                                 ^
SyntaxError: invalid syntax


  File "./junk/1692552816055_8418/main.py", line 72
    np . testing = np . testing as np . testing
                                ^
SyntaxError: invalid syntax


 44%|████▍     | 775/1746 [00:23<00:29, 32.45it/s] 45%|████▍     | 779/1746 [00:23<00:29, 32.76it/s] 45%|████▍     | 783/1746 [00:24<00:29, 32.88it/s] 45%|████▌     | 787/1746 [00:24<00:29, 32.82it/s] 45%|████▌     | 791/1746 [00:24<00:29, 32.66it/s] 46%|████▌     | 795/1746 [00:24<00:28, 32.81it/s] 46%|████▌     | 799/1746 [00:24<00:28, 32.84it/s] 46%|████▌     | 803/1746 [00:24<00:29, 32.13it/s] 46%|████▌     | 807/1746 [00:24<00:29, 32.10it/s] 46%|████▋     | 811/1746 [00:24<00:28, 32.32it/s] 47%|████▋     | 815/1746 [00:25<00:28, 32.64it/s] 47%|████▋     | 819/1746 [00:25<00:28, 32.76it/s] 47%|████▋     | 823/1746 [00:25<00:28, 32.86it/s] 47%|████▋     | 827/1746 [00:25<00:27, 32.85it/s] 48%|████▊     | 831/1746 [00:25<00:27, 32.84it/s] 48%|████▊     | 835/1746 [00:25<00:27, 32.60it/s] 48%|████▊     | 839/1746 [00:25<00:27, 32.70it/s] 48%|████▊     | 843/1746 [00:25<00:27, 32.79it/s] 49%|████▊     | 847/1746 [00:25<00:27, 32.67it/s] 49%|████▊     | 851/1746 [00:26<00:27, 32.84it/s] 49%|████▉     | 855/1746 [00:26<00:26, 33.11it/s] 49%|████▉     | 859/1746 [00:26<00:26, 33.26it/s] 49%|████▉     | 863/1746 [00:26<00:26, 33.27it/s] 50%|████▉     | 867/1746 [00:26<00:26, 33.26it/s] 50%|████▉     | 871/1746 [00:26<00:26, 33.26it/s] 50%|█████     | 875/1746 [00:26<00:26, 33.14it/s] 50%|█████     | 879/1746 [00:26<00:26, 32.62it/s] 51%|█████     | 883/1746 [00:27<00:26, 32.64it/s] 51%|█████     | 887/1746 [00:27<00:26, 32.85it/s] 51%|█████     | 891/1746 [00:27<00:26, 32.75it/s] 51%|█████▏    | 895/1746 [00:27<00:25, 32.88it/s] 51%|█████▏    | 899/1746 [00:27<00:25, 32.93it/s] 52%|█████▏    | 903/1746 [00:27<00:25, 32.96it/s] 52%|█████▏    | 907/1746 [00:27<00:25, 32.81it/s] 52%|█████▏    | 911/1746 [00:27<00:25, 33.07it/s]  File "./junk/1692552816178_9098/main.py", line 3
    for sum in [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29

SyntaxError: unexpected EOF while parsing


  File "./junk/1692552816300_3528/main.py", line 19
    max = max max
              ^
SyntaxError: invalid syntax


  File "./junk/1692552816451_1733/main.py", line 8
    print ( ' % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d

SyntaxError: EOL while scanning string literal


  File "./junk/1692552817130_8554/main.py", line 21
    out :
        ^
SyntaxError: invalid syntax


  File "./junk/1692552817345_1188/main.py", line 2
    global data
    ^
SyntaxError: name 'data' is parameter and global


  File "./junk/1692552817647_4250/main.py", line 50
    np . testing as np . testing as np
                 ^
SyntaxError: invalid syntax


  File "./junk/1692552817768_2109/main.py", line 7
    from char , to = [ 0 , 0 , 1 , - 1 ]
              ^
SyntaxError: invalid syntax


  File "./junk/1692552817829_8426/main.py", line 25
    import numpy = np
                 ^
SyntaxError: invalid syntax


  File "./junk/1692552818011_5820/main.py", line 17
    out :
        ^
SyntaxError: invalid syntax


  File "./junk/1692552819161_1364/main.py", line 26
    import None
           ^
SyntaxError: invalid syntax


  File "./junk/1692552820351_6409/main.py", line 6
    print ( ( m - 1 - max ( abs ( ( a - 1 if a > 0 and n % 2 else a ) , abs ( ( b - 1 if b > 0 and n % 2 else b ) ) ) % 3 + 1 ) )
                                                                                                                                ^
SyntaxError: unexpected EOF while parsing


 52%|█████▏    | 915/1746 [00:28<00:25, 32.96it/s]  File "./junk/1692552820440_8818/main.py", line 6
    sys . stderr . write ( ' Please SPACETOKEN enter SPACETOKEN a SPACETOKEN list SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string

SyntaxError: EOL while scanning string literal


 53%|█████▎    | 919/1746 [00:28<00:25, 32.98it/s] 53%|█████▎    | 923/1746 [00:28<00:24, 33.19it/s] 53%|█████▎    | 927/1746 [00:28<00:24, 33.07it/s] 53%|█████▎    | 931/1746 [00:28<00:24, 33.20it/s] 54%|█████▎    | 935/1746 [00:28<00:24, 32.94it/s] 54%|█████▍    | 939/1746 [00:28<00:24, 33.11it/s] 54%|█████▍    | 943/1746 [00:28<00:24, 32.72it/s] 54%|█████▍    | 947/1746 [00:29<00:24, 32.60it/s] 54%|█████▍    | 951/1746 [00:29<00:24, 32.83it/s] 55%|█████▍    | 955/1746 [00:29<00:24, 32.95it/s] 55%|█████▍    | 959/1746 [00:29<00:23, 33.18it/s] 55%|█████▌    | 963/1746 [00:29<00:23, 33.12it/s] 55%|█████▌    | 967/1746 [00:29<00:24, 32.43it/s] 56%|█████▌    | 971/1746 [00:29<00:23, 32.38it/s] 56%|█████▌    | 975/1746 [00:29<00:23, 32.48it/s] 56%|█████▌    | 979/1746 [00:29<00:23, 32.56it/s] 56%|█████▋    | 983/1746 [00:30<00:23, 32.79it/s] 57%|█████▋    | 987/1746 [00:30<00:22, 33.18it/s] 57%|█████▋    | 991/1746 [00:30<00:23, 32.62it/s] 57%|█████▋    | 995/1746 [00:30<00:23, 32.29it/s] 57%|█████▋    | 999/1746 [00:30<00:22, 32.74it/s] 57%|█████▋    | 1003/1746 [00:30<00:22, 32.75it/s] 58%|█████▊    | 1007/1746 [00:30<00:22, 32.85it/s] 58%|█████▊    | 1011/1746 [00:30<00:22, 32.60it/s] 58%|█████▊    | 1015/1746 [00:31<00:22, 32.81it/s] 58%|█████▊    | 1019/1746 [00:31<00:22, 32.94it/s] 59%|█████▊    | 1023/1746 [00:31<00:21, 33.05it/s] 59%|█████▉    | 1027/1746 [00:31<00:21, 32.68it/s] 59%|█████▉    | 1031/1746 [00:31<00:22, 32.37it/s] 59%|█████▉    | 1035/1746 [00:31<00:22, 32.21it/s] 60%|█████▉    | 1039/1746 [00:31<00:21, 32.55it/s] 60%|█████▉    | 1043/1746 [00:31<00:21, 32.36it/s] 60%|█████▉    | 1047/1746 [00:32<00:21, 32.45it/s] 60%|██████    | 1051/1746 [00:32<00:21, 32.44it/s] 60%|██████    | 1055/1746 [00:32<00:21, 32.64it/s] 61%|██████    | 1059/1746 [00:32<00:21, 32.53it/s] 61%|██████    | 1063/1746 [00:32<00:21, 32.52it/s] 61%|██████    | 1067/1746 [00:32<00:20, 32.34it/s] 61%|██████▏   | 1071/1746 [00:32<00:20, 32.66it/s] 62%|██████▏   | 1075/1746 [00:32<00:20, 32.73it/s] 62%|██████▏   | 1079/1746 [00:33<00:20, 32.85it/s] 62%|██████▏   | 1083/1746 [00:33<00:20, 33.11it/s] 62%|██████▏   | 1087/1746 [00:33<00:19, 33.14it/s] 62%|██████▏   | 1091/1746 [00:33<00:19, 33.08it/s] 63%|██████▎   | 1095/1746 [00:33<00:19, 33.32it/s] 63%|██████▎   | 1099/1746 [00:33<00:19, 32.71it/s] 63%|██████▎   | 1103/1746 [00:33<00:19, 33.08it/s] 63%|██████▎   | 1107/1746 [00:33<00:19, 33.12it/s] 64%|██████▎   | 1111/1746 [00:34<00:19, 33.13it/s] 64%|██████▍   | 1115/1746 [00:34<00:18, 33.27it/s] 64%|██████▍   | 1119/1746 [00:34<00:18, 33.44it/s] 64%|██████▍   | 1123/1746 [00:34<00:18, 33.41it/s] 65%|██████▍   | 1127/1746 [00:34<00:18, 33.34it/s] 65%|██████▍   | 1131/1746 [00:34<00:18, 33.26it/s] 65%|██████▌   | 1135/1746 [00:34<00:18, 33.22it/s] 65%|██████▌   | 1139/1746 [00:34<00:18, 33.27it/s] 65%|██████▌   | 1143/1746 [00:34<00:18, 33.13it/s] 66%|██████▌   | 1147/1746 [00:35<00:18, 33.06it/s] 66%|██████▌   | 1151/1746 [00:35<00:18, 32.68it/s] 66%|██████▌   | 1155/1746 [00:35<00:17, 32.95it/s] 66%|██████▋   | 1159/1746 [00:35<00:17, 33.00it/s] 67%|██████▋   | 1163/1746 [00:35<00:17, 32.79it/s] 67%|██████▋   | 1167/1746 [00:35<00:17, 32.69it/s] 67%|██████▋   | 1171/1746 [00:35<00:17, 33.19it/s] 67%|██████▋   | 1175/1746 [00:35<00:17, 33.15it/s] 68%|██████▊   | 1179/1746 [00:36<00:17, 32.94it/s] 68%|██████▊   | 1183/1746 [00:36<00:16, 33.29it/s] 68%|██████▊   | 1187/1746 [00:36<00:16, 33.44it/s] 68%|██████▊   | 1191/1746 [00:36<00:16, 33.30it/s] 68%|██████▊   | 1195/1746 [00:36<00:16, 32.98it/s] 69%|██████▊   | 1199/1746 [00:36<00:16, 32.99it/s] 69%|██████▉   | 1203/1746 [00:36<00:16, 33.02it/s] 69%|██████▉   | 1207/1746 [00:36<00:17, 31.57it/s] 69%|██████▉   | 1211/1746 [00:37<00:17, 31.42it/s] 70%|██████▉   | 1215/1746 [00:37<00:16, 31.24it/s] 70%|██████▉   | 1219/1746 [00:37<00:16, 31.58it/s] 70%|███████   | 1223/1746 [00:37<00:16, 31.72it/s] 70%|███████   | 1227/1746 [00:37<00:16, 32.18it/s] 71%|███████   | 1231/1746 [00:37<00:15, 32.55it/s] 71%|███████   | 1235/1746 [00:37<00:15, 32.68it/s] 71%|███████   | 1239/1746 [00:37<00:15, 32.96it/s] 71%|███████   | 1243/1746 [00:38<00:15, 32.89it/s] 71%|███████▏  | 1247/1746 [00:38<00:15, 32.93it/s] 72%|███████▏  | 1251/1746 [00:38<00:15, 32.80it/s] 72%|███████▏  | 1255/1746 [00:38<00:14, 32.92it/s] 72%|███████▏  | 1259/1746 [00:38<00:14, 32.94it/s] 72%|███████▏  | 1263/1746 [00:38<00:14, 32.79it/s] 73%|███████▎  | 1267/1746 [00:38<00:14, 32.72it/s] 73%|███████▎  | 1271/1746 [00:38<00:14, 32.89it/s] 73%|███████▎  | 1275/1746 [00:39<00:14, 33.04it/s]  File "./junk/1692552820593_5814/main.py", line 15
    return GFG ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                                                                                                                                                                                                                                                                                                           ^
SyntaxError: unexpected EOF while parsing


s_push: parser stack overflow
Sorry: MemoryError: 

  File "./junk/1692552821626_2160/main.py", line 10
    def __lt__ ( self , self ) :
    ^
SyntaxError: duplicate argument 'self' in function definition


  File "./junk/1692552822177_6311/main.py", line 43
    from math
            ^
SyntaxError: invalid syntax


  File "./junk/1692552822849_1690/main.py", line 7
    break
    ^
SyntaxError: 'break' outside loop


  File "./junk/1692552823005_9425/main.py", line 24
    print ( "(%d, %d, %d)" " is one such possible" " triplet between %d and %d" " and %d" " % ( possible_a , possible_b , possible_c , possible_c , L , R ) )
                                                                                                                                                            ^
SyntaxError: EOL while scanning string literal


  File "./junk/1692552823369_6320/main.py", line 4
    with open

SyntaxError: EOL while scanning string literal


  File "./junk/1692552823551_3885/main.py", line 12
    del n - 1
        ^
SyntaxError: cannot delete operator


  File "./junk/1692552823611_8606/main.py", line 46
    testing = np . testing . as_np ( np . testing . as_np ( np . testing . as_np ( np . testing . as_np ( np . testing . as_np ( np . testing . as_np ( np . np . testing . as_np ( np . np . testing . as_np ( np . np . testing . as_np ( np . np . testing . as_np ( np . np . testing . as_np ( np . np . testing . as_np ( np . np . testing . as_np ( np . np . testing . np ( np . np . testing . np ( np . np . testing . np ( np . np . testing . np ( np . np . np . testing . np ( np . np . testing . np ( np . np . testing . np ( np . np . np ( np . np . testing . np ( np . np . np ( np . np . testing . np ( np . np . np ( np . np . testing . np ( np . np . np ( np . np . np ( np . np . np ( np . np ( np . np ( np . np

SyntaxError: unexpected EOF while parsing


  File "./junk/1692552824169_9483/main.py", line 2
    mod = 1000000007L
                    ^
SyntaxError: invalid syntax


  File "./junk/1692552824319_7356/main.py", line 27
    from numpy . random import as np
                               ^
SyntaxError: invalid syntax


  File "./junk/1692552825634_8431/main.py", line 3
    accuracy = float ( 0.0001 ) , denominator , sinx , sinval = float ( n )
               ^
SyntaxError: cannot assign to function call


  File "./junk/1692552825693_6330/main.py", line 54
    except :
    ^
SyntaxError: invalid syntax


  File "./junk/1692552827169_6479/main.py", line 14
    return dp [ ind ] = ans
                      ^
SyntaxError: invalid syntax


  File "./junk/1692552827749_9122/main.py", line 8
    for u = v = 0
          ^
SyntaxError: invalid syntax


  File "./junk/1692552828175_1008/main.py", line 27
    from numpy . testing as np
                         ^
SyntaxError: invalid syntax


  File "./junk/1692552828322_7916/main.py", line 16
    return dp [ a ] [ b ] = ans
                          ^
SyntaxError: invalid syntax


  File "./junk/1692552828892_6281/main.py", line 9
    except :
           ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692552828955_5123/main.py", line 9
    break
    ^
SyntaxError: 'break' outside loop


s_push: parser stack overflow
Sorry: MemoryError: 

  File "./junk/1692552830476_9628/main.py", line 28
    return main
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552831116_9097/main.py", line 31
    return 0
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552831542_1050/main.py", line 14
    if '

SyntaxError: EOL while scanning string literal


 73%|███████▎  | 1279/1746 [00:39<00:14, 32.77it/s] 73%|███████▎  | 1283/1746 [00:39<00:14, 32.30it/s] 74%|███████▎  | 1287/1746 [00:39<00:14, 32.68it/s] 74%|███████▍  | 1291/1746 [00:39<00:13, 32.67it/s] 74%|███████▍  | 1295/1746 [00:39<00:13, 32.58it/s] 74%|███████▍  | 1299/1746 [00:39<00:13, 32.59it/s] 75%|███████▍  | 1303/1746 [00:39<00:13, 32.60it/s] 75%|███████▍  | 1307/1746 [00:40<00:13, 32.81it/s] 75%|███████▌  | 1311/1746 [00:40<00:13, 33.06it/s] 75%|███████▌  | 1315/1746 [00:40<00:13, 33.09it/s] 76%|███████▌  | 1319/1746 [00:40<00:12, 33.27it/s] 76%|███████▌  | 1323/1746 [00:40<00:12, 33.18it/s] 76%|███████▌  | 1327/1746 [00:40<00:12, 32.35it/s] 76%|███████▌  | 1331/1746 [00:40<00:12, 32.50it/s] 76%|███████▋  | 1335/1746 [00:40<00:12, 32.73it/s] 77%|███████▋  | 1339/1746 [00:40<00:12, 33.00it/s] 77%|███████▋  | 1343/1746 [00:41<00:12, 33.25it/s] 77%|███████▋  | 1347/1746 [00:41<00:12, 32.48it/s] 77%|███████▋  | 1351/1746 [00:41<00:12, 32.43it/s] 78%|███████▊  | 1355/1746 [00:41<00:12, 32.49it/s] 78%|███████▊  | 1359/1746 [00:41<00:11, 32.42it/s] 78%|███████▊  | 1363/1746 [00:41<00:11, 32.56it/s] 78%|███████▊  | 1367/1746 [00:41<00:11, 32.66it/s] 79%|███████▊  | 1371/1746 [00:41<00:11, 32.75it/s] 79%|███████▉  | 1375/1746 [00:42<00:11, 32.66it/s] 79%|███████▉  | 1379/1746 [00:42<00:11, 32.93it/s] 79%|███████▉  | 1383/1746 [00:42<00:10, 33.02it/s] 79%|███████▉  | 1387/1746 [00:42<00:10, 32.74it/s] 80%|███████▉  | 1391/1746 [00:42<00:10, 32.34it/s] 80%|███████▉  | 1395/1746 [00:42<00:10, 32.29it/s] 80%|████████  | 1399/1746 [00:42<00:10, 32.28it/s] 80%|████████  | 1403/1746 [00:42<00:10, 32.31it/s] 81%|████████  | 1407/1746 [00:43<00:10, 32.50it/s] 81%|████████  | 1411/1746 [00:43<00:10, 32.72it/s] 81%|████████  | 1415/1746 [00:43<00:10, 32.96it/s] 81%|████████▏ | 1419/1746 [00:43<00:09, 32.98it/s] 82%|████████▏ | 1423/1746 [00:43<00:09, 33.13it/s] 82%|████████▏ | 1427/1746 [00:43<00:09, 32.81it/s] 82%|████████▏ | 1431/1746 [00:43<00:09, 32.76it/s] 82%|████████▏ | 1435/1746 [00:43<00:09, 32.68it/s] 82%|████████▏ | 1439/1746 [00:44<00:09, 32.78it/s] 83%|████████▎ | 1443/1746 [00:44<00:09, 33.16it/s] 83%|████████▎ | 1447/1746 [00:44<00:09, 32.80it/s] 83%|████████▎ | 1451/1746 [00:44<00:09, 32.77it/s] 83%|████████▎ | 1455/1746 [00:44<00:08, 32.69it/s] 84%|████████▎ | 1459/1746 [00:44<00:08, 32.72it/s] 84%|████████▍ | 1463/1746 [00:44<00:08, 32.63it/s] 84%|████████▍ | 1467/1746 [00:44<00:08, 32.04it/s] 84%|████████▍ | 1471/1746 [00:45<00:08, 31.93it/s] 84%|████████▍ | 1475/1746 [00:45<00:08, 32.20it/s] 85%|████████▍ | 1479/1746 [00:45<00:08, 32.30it/s] 85%|████████▍ | 1483/1746 [00:45<00:08, 32.61it/s] 85%|████████▌ | 1487/1746 [00:45<00:07, 32.58it/s] 85%|████████▌ | 1491/1746 [00:45<00:07, 32.36it/s] 86%|████████▌ | 1495/1746 [00:45<00:07, 32.39it/s] 86%|████████▌ | 1499/1746 [00:45<00:07, 32.85it/s] 86%|████████▌ | 1503/1746 [00:45<00:07, 33.03it/s] 86%|████████▋ | 1507/1746 [00:46<00:07, 33.26it/s] 87%|████████▋ | 1511/1746 [00:46<00:07, 33.32it/s] 87%|████████▋ | 1515/1746 [00:46<00:06, 33.09it/s] 87%|████████▋ | 1519/1746 [00:46<00:06, 33.04it/s] 87%|████████▋ | 1523/1746 [00:46<00:06, 33.18it/s] 87%|████████▋ | 1527/1746 [00:46<00:06, 33.30it/s] 88%|████████▊ | 1531/1746 [00:46<00:06, 33.36it/s] 88%|████████▊ | 1535/1746 [00:46<00:06, 33.30it/s] 88%|████████▊ | 1539/1746 [00:47<00:06, 33.48it/s] 88%|████████▊ | 1543/1746 [00:47<00:06, 33.15it/s] 89%|████████▊ | 1547/1746 [00:47<00:06, 32.85it/s] 89%|████████▉ | 1551/1746 [00:47<00:05, 33.06it/s]  File "./junk/1692552831574_8970/main.py", line 8
    if ( ( ccw ( p [ 0 ] , p [ 3 ] , p [ 1 ] ) > 0 and ccw ( p [ 1 ] , p [ 3 ] , p [ 2 ] ) > 0 and ccw ( p [ 2 ] , p [ 3 ] , p [ 0 ] ) > 0 ) or ( ccw ( p [ 0 ] , p [ 3 ] , p [ 1 ] ) < 0 and ccw ( p [ 1 ] , p [ 3 ] , p [ 2 ] ) < 0 and ccw ( p [ 2 ] , p [ 3 ] , p [ 0 ] ) < 0 ) :
                                                                                                                                                                                                                                                                                    ^
SyntaxError: invalid syntax


  File "./junk/1692552831634_3357/main.py", line 39
    return main
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552831664_6173/main.py", line 3
    with open

SyntaxError: EOL while scanning string literal


  File "./junk/1692552831730_3569/main.py", line 71
    return np .
              ^
SyntaxError: invalid syntax


  File "./junk/1692552831762_4044/main.py", line 10
    loop :
         ^
SyntaxError: invalid syntax


  File "./junk/1692552832094_8128/main.py", line 109
    
    ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692552833133_1023/main.py", line 87
    from math import
                   ^
SyntaxError: invalid syntax


  File "./junk/1692552833492_9424/main.py", line 29
    return Main ( )
    ^
SyntaxError: 'return' outside function


Sorry: IndentationError: unexpected indent (main.py, line 118)

  File "./junk/1692552834294_6327/main.py", line 122
    from string
              ^
SyntaxError: invalid syntax


  File "./junk/1692552834720_9922/main.py", line 13
    def asd ( self . arr ) :
                   ^
SyntaxError: invalid syntax


  File "./junk/1692552835278_6411/main.py", line 28
    elif s [ j ] == 'erase' :
    ^
SyntaxError: invalid syntax


  File "./junk/1692552835976_4725/main.py", line 9
    for i in range ( MAX_CHAR ) :
                                ^
SyntaxError: invalid syntax


  File "./junk/1692552836643_5168/main.py", line 123
    return math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                                                                                                                                                                                                                                                                                                                                                                                                                                         ^
SyntaxError: unexpected EOF while parsing


Sorry: IndentationError: unexpected indent (main.py, line 134)

  File "./junk/1692552837289_5345/main.py", line 14
    loop :
         ^
SyntaxError: invalid syntax


  File "./junk/1692552838033_2469/main.py", line 34
    from numpy . random import as np
                               ^
SyntaxError: invalid syntax


  File "./junk/1692552838221_6140/main.py", line 10
    arr [ i ] % n += n
    ^
SyntaxError: cannot assign to operator


  File "./junk/1692552839031_9558/main.py", line 11
    sys . stderr . write ( 'Please enter a file or a file path to a file of file ' 'or a file path to a file of file ' 'or a file path to a file of file ' 'or a file path to a file of ' 'or a file path to a file of ' 'or a file of file ' 'or a file of ' ' and e of file to be created and ' 'or a file of file ' 'or a file of ' ' and e of file of ' ' and r of file of ' ' and a file of file of ' ' and r of file of ' ' and a file of file of ' ' and a file of file of ' ' and a file of file of ' ' and a file of file of ' ' and a file of file of ' ' and a file of file of ' ' and e of file of ' ' and a file of file of ' ' and a file of file ' ' and a file of file of ' ' and a file of file of ' ' and a file of file and a file of ' ' and e of file of file ' ' and r of file ' ' and a file of file ' 'or a file of ' % s ' % sys . argv [ 0 ] )

SyntaxError: EOL while scanning string literal


  File "./junk/1692552839751_4160/main.py", line 6
    except getopt . error , msg :
                          ^
SyntaxError: invalid syntax


  File "./junk/1692552839935_9359/main.py", line 3
    sys . stdin . write

SyntaxError: EOL while scanning string literal

 89%|████████▉ | 1555/1746 [00:47<00:05, 32.76it/s] 89%|████████▉ | 1559/1746 [00:47<00:05, 32.47it/s] 90%|████████▉ | 1563/1746 [00:47<00:05, 32.47it/s] 90%|████████▉ | 1567/1746 [00:47<00:05, 32.21it/s] 90%|████████▉ | 1571/1746 [00:48<00:05, 32.63it/s] 90%|█████████ | 1575/1746 [00:48<00:05, 32.92it/s] 90%|█████████ | 1579/1746 [00:48<00:05, 32.62it/s] 91%|█████████ | 1583/1746 [00:48<00:04, 33.06it/s] 91%|█████████ | 1587/1746 [00:48<00:04, 32.54it/s] 91%|█████████ | 1591/1746 [00:48<00:04, 32.36it/s] 91%|█████████▏| 1595/1746 [00:48<00:04, 32.49it/s] 92%|█████████▏| 1599/1746 [00:48<00:04, 32.76it/s] 92%|█████████▏| 1603/1746 [00:49<00:04, 32.90it/s] 92%|█████████▏| 1607/1746 [00:49<00:04, 32.55it/s] 92%|█████████▏| 1611/1746 [00:49<00:04, 32.42it/s] 92%|█████████▏| 1615/1746 [00:49<00:04, 32.51it/s] 93%|█████████▎| 1619/1746 [00:49<00:03, 32.67it/s] 93%|█████████▎| 1623/1746 [00:49<00:03, 32.73it/s] 93%|█████████▎| 1627/1746 [00:49<00:03, 32.56it/s] 93%|█████████▎| 1631/1746 [00:49<00:03, 32.65it/s] 94%|█████████▎| 1635/1746 [00:50<00:03, 32.86it/s] 94%|█████████▍| 1639/1746 [00:50<00:03, 33.03it/s] 94%|█████████▍| 1643/1746 [00:50<00:03, 33.23it/s] 94%|█████████▍| 1647/1746 [00:50<00:03, 32.88it/s] 95%|█████████▍| 1651/1746 [00:50<00:02, 33.01it/s] 95%|█████████▍| 1655/1746 [00:50<00:02, 32.75it/s] 95%|█████████▌| 1659/1746 [00:50<00:02, 32.73it/s] 95%|█████████▌| 1663/1746 [00:50<00:02, 33.04it/s] 95%|█████████▌| 1667/1746 [00:50<00:02, 33.16it/s] 96%|█████████▌| 1671/1746 [00:51<00:02, 32.92it/s] 96%|█████████▌| 1675/1746 [00:51<00:02, 33.16it/s] 96%|█████████▌| 1679/1746 [00:51<00:02, 33.25it/s] 96%|█████████▋| 1683/1746 [00:51<00:01, 33.11it/s] 97%|█████████▋| 1687/1746 [00:51<00:01, 32.60it/s] 97%|█████████▋| 1691/1746 [00:51<00:01, 32.72it/s]
  File "./junk/1692552840154_1038/main.py", line 4
    T = 1 , i , j , k = 0 , 0 , 0
        ^
SyntaxError: cannot assign to literal


  File "./junk/1692552840185_1277/main.py", line 4
    if c in '

SyntaxError: EOL while scanning string literal


  File "./junk/1692552841409_4668/main.py", line 72
    for
      ^
SyntaxError: invalid syntax


  File "./junk/1692552841624_6972/main.py", line 8
    print

SyntaxError: EOL while scanning string literal


  File "./junk/1692552841656_2347/main.py", line 51
    from math import
                   ^
SyntaxError: invalid syntax


  File "./junk/1692552841994_8587/main.py", line 11
    return dp [ idx ] [ diff ] = ans % MOD
                               ^
SyntaxError: invalid syntax


  File "./junk/1692552842451_3391/main.py", line 15
    print ( " = %d" % count_pairs ( G , L ) , end = '   &   LCM   % d " % count_pairs ( G , L ) )
                                                                                                ^
SyntaxError: EOL while scanning string literal


  File "./junk/1692552843571_5691/main.py", line 37
    return '' . join ( partitions )
    ^
SyntaxError: 'return' outside function


  File "./junk/1692552843932_3293/main.py", line 8
    for i in range ( p * 2 , MAX , i += p ) :
                                     ^
SyntaxError: invalid syntax


 97%|█████████▋| 1695/1746 [00:51<00:01, 32.81it/s] 97%|█████████▋| 1699/1746 [00:51<00:01, 32.95it/s] 98%|█████████▊| 1703/1746 [00:52<00:01, 33.10it/s] 98%|█████████▊| 1707/1746 [00:52<00:01, 33.07it/s] 98%|█████████▊| 1711/1746 [00:52<00:01, 33.16it/s] 98%|█████████▊| 1715/1746 [00:52<00:00, 33.29it/s] 98%|█████████▊| 1719/1746 [00:52<00:00, 33.01it/s] 99%|█████████▊| 1723/1746 [00:52<00:00, 32.39it/s] 99%|█████████▉| 1727/1746 [00:52<00:00, 32.68it/s] 99%|█████████▉| 1731/1746 [00:52<00:00, 32.93it/s] 99%|█████████▉| 1735/1746 [00:53<00:00, 32.88it/s]100%|█████████▉| 1739/1746 [00:53<00:00, 32.64it/s]100%|█████████▉| 1743/1746 [00:53<00:00, 32.76it/s]100%|██████████| 1746/1746 [00:53<00:00, 32.70it/s]
  File "./junk/1692552844270_8720/main.py", line 15
    for currdigit in [ '0' , '9' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9' , '10' , '10' , '11' , '11' , '13' , '14' , '14' , '15' , '16' , '17' , '17' , '18' , '19' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '

SyntaxError: EOL while scanning string literal


  File "./junk/1692552844332_2006/main.py", line 56
    return self .
                ^
SyntaxError: invalid syntax


  File "./junk/1692552844602_1401/main.py", line 16
    outer :
          ^
SyntaxError: invalid syntax


Sorry: IndentationError: unexpected indent (main.py, line 121)

  File "./junk/1692552844991_9871/main.py", line 19
    pos1 , pos2 = 1 , pos3 , pos4 = 1 , a , b , mm , total = 0
                  ^
SyntaxError: cannot assign to literal


  File "./junk/1692552845056_2326/main.py", line 22
    print ( '+++'+'+'+'+'\n' )
                             ^
SyntaxError: unexpected character after line continuation character


  File "./junk/1692552845243_4103/main.py", line 7
    for len ( data ) in range ( 1 , N + 1 ) :
        ^
SyntaxError: cannot assign to function call


  File "./junk/1692552845393_4977/main.py", line 13
    outer :
          ^
SyntaxError: invalid syntax


  File "./junk/1692552845670_7155/main.py", line 10
    break
    ^
SyntaxError: 'break' outside loop


  File "./junk/1692552845700_3759/main.py", line 119
    
    ^
SyntaxError: unexpected EOF while parsing


  File "./junk/1692552845760_9007/main.py", line 9
    return ( f [ n ] = 1 )
                     ^
SyntaxError: invalid syntax


Success - 1599, Errors - 147 [Syntax - 140, Indent - 3]
CompAcc: 1599/1746 = 91.5807560137457 %

BLEU:		37.30
Exact Match:		0.00

Ngram match:	38.29
Weighted ngram:	45.13
Syntax match:	34.92
Dataflow match:	41.84
CodeBLEU score: 40.04

  0%|          | 0/1746 [00:00<?, ?it/s]  0%|          | 1/1746 [00:00<03:40,  7.92it/s]  0%|          | 3/1746 [00:01<20:10,  1.44it/s]  0%|          | 6/1746 [00:02<08:30,  3.41it/s]  0%|          | 8/1746 [00:02<07:11,  4.03it/s]  1%|          | 11/1746 [00:02<04:27,  6.48it/s]  1%|          | 14/1746 [00:02<03:47,  7.62it/s]  1%|          | 17/1746 [00:02<02:56,  9.81it/s]  1%|          | 20/1746 [00:03<02:22, 12.09it/s]  1%|▏         | 23/1746 [00:03<02:03, 13.99it/s]  1%|▏         | 26/1746 [00:03<02:14, 12.78it/s]  2%|▏         | 28/1746 [00:03<02:03, 13.86it/s]  2%|▏         | 30/1746 [00:03<01:57, 14.65it/s]  2%|▏         | 32/1746 [00:03<01:54, 14.93it/s]  2%|▏         | 35/1746 [00:03<01:35, 17.87it/s]  2%|▏         | 38/1746 [00:04<01:27, 19.43it/s]Exception on node <Subscript l.9 at 0x7f0bec903d90> in file '/home/pjana/CoTran-Anonymous/junk/tokenizedFiles/1692552869996_2431.py'
Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/utils.py", line 1352, in safe_infer
    value = next(infer_gen)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 169, in infer
    yield from self._infer(context=context, **kwargs)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 140, in raise_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/bases.py", line 165, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 182, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 140, in raise_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/bases.py", line 165, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 182, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 127, in yes_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 530, in _filter_operation_errors
    for result in infer_callable(self, context):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 879, in _infer_binop
    yield from _infer_binary_operation(lhs, rhs, self, context, _get_binop_flow)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 828, in _infer_binary_operation
    results = list(method())
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 127, in yes_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/protocols.py", line 208, in tl_infer_binary_op
    yield _multiply_seq_by_int(self, opnode, other, context)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/protocols.py", line 161, in _multiply_seq_by_int
    node.elts = list(filtered_elts) * other.value
MemoryError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 90, in walk
    callback(astroid)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/typecheck.py", line 2039, in visit_subscript
    self._check_invalid_sequence_index(node)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/typecheck.py", line 1619, in _check_invalid_sequence_index
    parent_type = safe_infer(subscript.value)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/utils.py", line 1356, in safe_infer
    raise AstroidError from e
astroid.exceptions.AstroidError
  2%|▏         | 41/1746 [00:04<01:22, 20.56it/s]  3%|▎         | 44/1746 [00:04<01:19, 21.30it/s]  3%|▎         | 47/1746 [00:04<01:16, 22.19it/s]  3%|▎         | 50/1746 [00:04<01:45, 16.01it/s]  3%|▎         | 52/1746 [00:05<02:18, 12.23it/s]  3%|▎         | 55/1746 [00:05<01:57, 14.43it/s]  3%|▎         | 58/1746 [00:05<01:41, 16.61it/s]  3%|▎         | 60/1746 [00:05<01:51, 15.14it/s]  4%|▎         | 62/1746 [00:05<02:00, 13.92it/s]  4%|▎         | 65/1746 [00:05<01:44, 16.02it/s]  4%|▍         | 68/1746 [00:05<01:31, 18.34it/s]  4%|▍         | 71/1746 [00:06<01:41, 16.48it/s]  4%|▍         | 74/1746 [00:06<01:34, 17.64it/s]  4%|▍         | 77/1746 [00:06<01:26, 19.33it/s]  5%|▍         | 80/1746 [00:06<01:18, 21.11it/s]  5%|▍         | 83/1746 [00:06<01:16, 21.72it/s]  5%|▍         | 86/1746 [00:06<01:14, 22.24it/s]  5%|▌         | 89/1746 [00:06<01:15, 21.84it/s]  5%|▌         | 92/1746 [00:07<01:14, 22.30it/s]  5%|▌         | 95/1746 [00:07<02:20, 11.79it/s]  6%|▌         | 98/1746 [00:07<02:00, 13.71it/s]  6%|▌         | 101/1746 [00:07<01:44, 15.70it/s]  6%|▌         | 104/1746 [00:07<01:37, 16.81it/s]  6%|▌         | 107/1746 [00:08<01:32, 17.72it/s]  6%|▋         | 110/1746 [00:08<01:25, 19.17it/s]  6%|▋         | 113/1746 [00:08<01:39, 16.40it/s]  7%|▋         | 116/1746 [00:08<01:29, 18.26it/s]  7%|▋         | 119/1746 [00:08<01:20, 20.09it/s]  7%|▋         | 122/1746 [00:08<01:16, 21.21it/s]  7%|▋         | 125/1746 [00:08<01:13, 22.09it/s]  7%|▋         | 128/1746 [00:09<01:15, 21.53it/s]  8%|▊         | 131/1746 [00:09<01:14, 21.74it/s]  8%|▊         | 134/1746 [00:09<01:09, 23.14it/s]  8%|▊         | 137/1746 [00:09<01:07, 23.83it/s]  8%|▊         | 140/1746 [00:09<01:05, 24.46it/s]  8%|▊         | 143/1746 [00:09<01:10, 22.59it/s]  8%|▊         | 146/1746 [00:10<02:21, 11.30it/s]  9%|▊         | 149/1746 [00:10<01:58, 13.45it/s]  9%|▊         | 152/1746 [00:10<01:54, 13.92it/s]  9%|▉         | 155/1746 [00:10<01:44, 15.28it/s]  9%|▉         | 158/1746 [00:10<01:45, 15.11it/s]  9%|▉         | 161/1746 [00:11<01:33, 16.94it/s]  9%|▉         | 164/1746 [00:11<01:23, 18.88it/s] 10%|▉         | 167/1746 [00:11<01:19, 19.79it/s] 10%|▉         | 170/1746 [00:11<01:49, 14.36it/s] 10%|▉         | 173/1746 [00:12<02:23, 10.96it/s] 10%|█         | 175/1746 [00:12<02:17, 11.46it/s] 10%|█         | 178/1746 [00:12<01:57, 13.35it/s] 10%|█         | 181/1746 [00:12<01:40, 15.60it/s] 11%|█         | 184/1746 [00:12<01:31, 17.02it/s] 11%|█         | 187/1746 [00:12<01:22, 18.82it/s] 11%|█         | 190/1746 [00:12<01:20, 19.28it/s] 11%|█         | 193/1746 [00:13<01:15, 20.63it/s] 11%|█         | 196/1746 [00:13<01:24, 18.24it/s] 11%|█▏        | 198/1746 [00:13<01:25, 18.12it/s] 12%|█▏        | 201/1746 [00:13<01:20, 19.27it/s] 12%|█▏        | 204/1746 [00:13<01:19, 19.33it/s] 12%|█▏        | 207/1746 [00:13<01:21, 18.99it/s] 12%|█▏        | 210/1746 [00:13<01:16, 20.13it/s] 12%|█▏        | 213/1746 [00:14<01:11, 21.41it/s] 12%|█▏        | 216/1746 [00:14<01:26, 17.63it/s] 13%|█▎        | 219/1746 [00:14<01:21, 18.72it/s] 13%|█▎        | 221/1746 [00:14<01:22, 18.51it/s] 13%|█▎        | 224/1746 [00:14<01:23, 18.15it/s] 13%|█▎        | 227/1746 [00:14<01:25, 17.67it/s] 13%|█▎        | 230/1746 [00:15<01:16, 19.85it/s] 13%|█▎        | 233/1746 [00:15<01:14, 20.22it/s] 14%|█▎        | 236/1746 [00:15<01:11, 21.15it/s] 14%|█▎        | 239/1746 [00:15<01:11, 21.01it/s] 14%|█▍        | 242/1746 [00:15<01:07, 22.36it/s] 14%|█▍        | 245/1746 [00:15<01:06, 22.74it/s] 14%|█▍        | 248/1746 [00:15<01:02, 23.78it/s] 14%|█▍        | 251/1746 [00:15<01:04, 23.30it/s] 15%|█▍        | 254/1746 [00:16<01:03, 23.55it/s] 15%|█▍        | 257/1746 [00:16<01:02, 23.64it/s] 15%|█▍        | 260/1746 [00:16<02:07, 11.67it/s] 15%|█▌        | 263/1746 [00:16<01:48, 13.63it/s] 15%|█▌        | 266/1746 [00:17<01:37, 15.13it/s] 15%|█▌        | 269/1746 [00:17<01:29, 16.50it/s] 16%|█▌        | 272/1746 [00:17<01:21, 18.12it/s] 16%|█▌        | 275/1746 [00:17<01:18, 18.65it/s] 16%|█▌        | 278/1746 [00:17<01:16, 19.28it/s] 16%|█▌        | 281/1746 [00:17<01:14, 19.68it/s] 16%|█▋        | 284/1746 [00:17<01:13, 19.82it/s] 16%|█▋        | 287/1746 [00:18<01:09, 21.13it/s] 17%|█▋        | 290/1746 [00:18<01:09, 20.94it/s] 17%|█▋        | 293/1746 [00:18<01:07, 21.67it/s] 17%|█▋        | 296/1746 [00:18<01:06, 21.87it/s] 17%|█▋        | 299/1746 [00:18<01:09, 20.68it/s] 17%|█▋        | 302/1746 [00:18<01:10, 20.61it/s] 17%|█▋        | 305/1746 [00:18<01:06, 21.59it/s] 18%|█▊        | 308/1746 [00:19<01:06, 21.57it/s] 18%|█▊        | 311/1746 [00:19<01:19, 18.06it/s] 18%|█▊        | 314/1746 [00:19<01:11, 20.00it/s] 18%|█▊        | 317/1746 [00:19<01:06, 21.64it/s] 18%|█▊        | 320/1746 [00:19<01:03, 22.44it/s] 18%|█▊        | 323/1746 [00:19<01:03, 22.36it/s] 19%|█▊        | 326/1746 [00:19<01:02, 22.87it/s] 19%|█▉        | 329/1746 [00:19<01:01, 23.17it/s] 19%|█▉        | 332/1746 [00:20<01:00, 23.29it/s] 19%|█▉        | 335/1746 [00:20<00:59, 23.71it/s] 19%|█▉        | 338/1746 [00:20<00:58, 24.04it/s] 20%|█▉        | 341/1746 [00:20<01:00, 23.22it/s] 20%|█▉        | 344/1746 [00:20<01:02, 22.55it/s] 20%|█▉        | 347/1746 [00:20<01:09, 20.12it/s] 20%|██        | 350/1746 [00:20<01:09, 20.03it/s] 20%|██        | 353/1746 [00:21<01:03, 22.02it/s] 20%|██        | 356/1746 [00:21<01:01, 22.54it/s] 21%|██        | 359/1746 [00:21<01:01, 22.54it/s] 21%|██        | 362/1746 [00:21<00:59, 23.34it/s] 21%|██        | 365/1746 [00:21<00:57, 24.13it/s] 21%|██        | 368/1746 [00:22<02:07, 10.82it/s] 21%|██        | 371/1746 [00:22<01:46, 12.90it/s] 21%|██▏       | 374/1746 [00:22<01:35, 14.44it/s] 22%|██▏       | 377/1746 [00:22<01:24, 16.20it/s] 22%|██▏       | 380/1746 [00:22<01:14, 18.42it/s] 22%|██▏       | 383/1746 [00:22<01:07, 20.15it/s] 22%|██▏       | 386/1746 [00:22<01:10, 19.29it/s] 22%|██▏       | 389/1746 [00:23<01:15, 17.86it/s] 22%|██▏       | 392/1746 [00:23<01:11, 18.83it/s] 23%|██▎       | 395/1746 [00:23<01:08, 19.85it/s] 23%|██▎       | 398/1746 [00:23<01:02, 21.45it/s] 23%|██▎       | 401/1746 [00:23<01:03, 21.31it/s] 23%|██▎       | 404/1746 [00:23<01:18, 17.11it/s] 23%|██▎       | 407/1746 [00:24<01:10, 18.93it/s] 23%|██▎       | 410/1746 [00:24<01:04, 20.78it/s] 24%|██▎       | 413/1746 [00:24<00:59, 22.37it/s] 24%|██▍       | 416/1746 [00:24<01:05, 20.16it/s] 24%|██▍       | 419/1746 [00:24<01:05, 20.33it/s] 24%|██▍       | 422/1746 [00:24<01:03, 20.69it/s] 24%|██▍       | 425/1746 [00:24<00:58, 22.47it/s] 25%|██▍       | 428/1746 [00:25<00:59, 22.29it/s] 25%|██▍       | 431/1746 [00:25<00:59, 21.96it/s]s_push: parser stack overflow
Can't write the issue template for the crash in /home/pjana/.cache/pylint/pylint-crash-2023-08-20-17-34-30.txt because of: '[Errno 2] No such file or directory: '/home/pjana/.cache/pylint/pylint-crash-2023-08-20-17-34-30.txt''
Here's the content anyway:
First, please verify that the bug is not already filled:
https://github.com/PyCQA/pylint/issues/

Then create a new crash issue:
https://github.com/PyCQA/pylint/issues/new?assignees=&labels=crash%2Cneeds+triage&template=BUG-REPORT.yml


Issue title:
Crash ```` (if possible, be more specific about what made pylint crash)
Content:
When parsing the following file:

<!--
 If sharing the code is not an option, please state so,
 but providing only the stacktrace would still be helpful.
 -->

```python
def array_elimination ( ) :
    import sys
    t = sys . maxsize
    for tt in range ( t ) :
        n = sys . maxsize
        bit = [ 0 ] * 32
        arr = [ None ] * n
        for i in range ( n ) :
            arr [ i ] = sys . maxsize
        for i in range ( n ) :
            for j in range ( 32 ) :
                temp = ( 1 << ( j - 1 ) )
                bitwise_and = arr [ i ] & temp
                if bitwise_and > 0 :
                    bit [ j ] += 1
        for i in range ( 1 , n + 1 ) :
            possible = True
            for j in range ( 32 ) :
                if bit [ j ] % i != 0 :
                    possible = False
                    break
            if possible :
                sys . stdout . write ( "%d " % i )
        sys . stdout . write ( "\n" )

```

pylint crashed with a ``AstroidError`` and with the following stacktrace:
```
Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/utils.py", line 1352, in safe_infer
    value = next(infer_gen)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 169, in infer
    yield from self._infer(context=context, **kwargs)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 140, in raise_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/bases.py", line 165, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 182, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 140, in raise_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/bases.py", line 165, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 182, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 127, in yes_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 530, in _filter_operation_errors
    for result in infer_callable(self, context):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 879, in _infer_binop
    yield from _infer_binary_operation(lhs, rhs, self, context, _get_binop_flow)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 828, in _infer_binary_operation
    results = list(method())
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 127, in yes_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/protocols.py", line 208, in tl_infer_binary_op
    yield _multiply_seq_by_int(self, opnode, other, context)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/protocols.py", line 161, in _multiply_seq_by_int
    node.elts = list(filtered_elts) * other.value
MemoryError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 790, in _lint_file
    check_astroid_module(module)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1060, in check_astroid_module
    retval = self._check_astroid_module(
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1110, in _check_astroid_module
    walker.walk(node)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 93, in walk
    self.walk(child)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 93, in walk
    self.walk(child)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 93, in walk
    self.walk(child)
  [Previous line repeated 2 more times]
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 90, in walk
    callback(astroid)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/typecheck.py", line 2039, in visit_subscript
    self._check_invalid_sequence_index(node)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/typecheck.py", line 1619, in _check_invalid_sequence_index
    parent_type = safe_infer(subscript.value)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/utils.py", line 1356, in safe_infer
    raise AstroidError from e
astroid.exceptions.AstroidError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 755, in _lint_files
    self._lint_file(fileitem, module, check_astroid_module)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 792, in _lint_file
    raise astroid.AstroidError from e
astroid.exceptions.AstroidError
```
.
Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1019, in get_ast
    return MANAGER.ast_from_file(filepath, modname, source=True)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/manager.py", line 118, in ast_from_file
    return AstroidBuilder(self).file_build(filepath, modname)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 134, in file_build
    module, builder = self._data_build(data, modname, path)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 169, in _data_build
    node, parser_module = _parse_string(data, type_comments=True)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 455, in _parse_string
    parsed = parser_module.parse(data + "\n", type_comments=type_comments)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/_ast.py", line 48, in parse
    return parse_func(string)
  File "/usr/lib/python3.8/ast.py", line 47, in parse
    return compile(source, filename, mode, flags,
MemoryError
 25%|██▍       | 434/1746 [00:25<00:57, 22.90it/s] 25%|██▌       | 437/1746 [00:25<00:55, 23.45it/s] 25%|██▌       | 440/1746 [00:25<00:55, 23.74it/s] 25%|██▌       | 443/1746 [00:25<00:54, 24.03it/s] 26%|██▌       | 446/1746 [00:25<00:53, 24.09it/s] 26%|██▌       | 449/1746 [00:25<00:53, 24.15it/s] 26%|██▌       | 452/1746 [00:26<00:53, 24.21it/s] 26%|██▌       | 455/1746 [00:26<00:51, 24.91it/s] 26%|██▌       | 458/1746 [00:26<00:52, 24.31it/s] 26%|██▋       | 461/1746 [00:26<00:52, 24.33it/s] 27%|██▋       | 464/1746 [00:26<00:51, 24.78it/s] 27%|██▋       | 467/1746 [00:26<00:50, 25.17it/s] 27%|██▋       | 470/1746 [00:26<00:52, 24.12it/s] 27%|██▋       | 473/1746 [00:26<00:51, 24.78it/s] 27%|██▋       | 476/1746 [00:27<00:52, 24.06it/s] 27%|██▋       | 479/1746 [00:27<00:53, 23.85it/s] 28%|██▊       | 482/1746 [00:27<01:04, 19.70it/s] 28%|██▊       | 485/1746 [00:27<00:59, 21.36it/s] 28%|██▊       | 488/1746 [00:27<00:55, 22.66it/s] 28%|██▊       | 491/1746 [00:27<00:54, 23.01it/s] 28%|██▊       | 494/1746 [00:27<00:53, 23.49it/s] 28%|██▊       | 497/1746 [00:28<02:02, 10.20it/s] 29%|██▊       | 499/1746 [00:28<01:49, 11.42it/s] 29%|██▉       | 502/1746 [00:28<01:31, 13.56it/s] 29%|██▉       | 505/1746 [00:28<01:24, 14.70it/s] 29%|██▉       | 508/1746 [00:29<01:15, 16.50it/s] 29%|██▉       | 511/1746 [00:29<01:12, 16.93it/s] 29%|██▉       | 513/1746 [00:29<01:11, 17.22it/s] 30%|██▉       | 516/1746 [00:29<01:05, 18.79it/s] 30%|██▉       | 519/1746 [00:29<00:59, 20.70it/s] 30%|██▉       | 522/1746 [00:29<00:55, 22.16it/s] 30%|███       | 525/1746 [00:29<00:51, 23.49it/s] 30%|███       | 528/1746 [00:29<00:57, 21.14it/s] 30%|███       | 531/1746 [00:30<00:55, 21.71it/s] 31%|███       | 534/1746 [00:30<01:04, 18.70it/s] 31%|███       | 537/1746 [00:30<01:03, 18.98it/s] 31%|███       | 540/1746 [00:30<01:00, 19.94it/s] 31%|███       | 543/1746 [00:30<00:59, 20.19it/s] 31%|███▏      | 546/1746 [00:30<00:56, 21.30it/s] 31%|███▏      | 549/1746 [00:30<00:53, 22.23it/s] 32%|███▏      | 552/1746 [00:31<00:53, 22.17it/s] 32%|███▏      | 555/1746 [00:31<00:51, 23.19it/s] 32%|███▏      | 558/1746 [00:31<00:48, 24.28it/s] 32%|███▏      | 561/1746 [00:31<00:48, 24.34it/s] 32%|███▏      | 564/1746 [00:31<00:52, 22.72it/s] 32%|███▏      | 567/1746 [00:31<00:50, 23.32it/s] 33%|███▎      | 570/1746 [00:31<00:50, 23.34it/s] 33%|███▎      | 573/1746 [00:31<00:49, 23.82it/s] 33%|███▎      | 576/1746 [00:32<00:51, 22.68it/s] 33%|███▎      | 579/1746 [00:32<00:50, 22.88it/s] 33%|███▎      | 582/1746 [00:32<00:50, 23.02it/s] 34%|███▎      | 585/1746 [00:32<00:51, 22.39it/s] 34%|███▎      | 588/1746 [00:32<00:49, 23.34it/s] 34%|███▍      | 591/1746 [00:32<01:03, 18.32it/s] 34%|███▍      | 594/1746 [00:33<01:05, 17.58it/s] 34%|███▍      | 596/1746 [00:33<01:04, 17.78it/s] 34%|███▍      | 599/1746 [00:33<00:59, 19.39it/s] 34%|███▍      | 602/1746 [00:33<00:55, 20.49it/s] 35%|███▍      | 605/1746 [00:33<00:51, 21.95it/s] 35%|███▍      | 608/1746 [00:33<00:50, 22.74it/s] 35%|███▍      | 611/1746 [00:33<00:49, 22.98it/s] 35%|███▌      | 614/1746 [00:33<00:47, 23.87it/s] 35%|███▌      | 617/1746 [00:34<00:47, 23.89it/s] 36%|███▌      | 620/1746 [00:34<00:46, 24.32it/s] 36%|███▌      | 623/1746 [00:34<00:45, 24.52it/s] 36%|███▌      | 626/1746 [00:34<00:45, 24.84it/s] 36%|███▌      | 629/1746 [00:34<00:44, 25.16it/s] 36%|███▌      | 632/1746 [00:34<00:44, 25.29it/s] 36%|███▋      | 635/1746 [00:34<00:49, 22.24it/s] 37%|███▋      | 638/1746 [00:34<00:47, 23.54it/s] 37%|███▋      | 641/1746 [00:35<00:50, 21.73it/s] 37%|███▋      | 644/1746 [00:35<00:48, 22.60it/s] 37%|███▋      | 647/1746 [00:35<00:47, 22.91it/s] 37%|███▋      | 650/1746 [00:35<00:46, 23.78it/s] 37%|███▋      | 653/1746 [00:36<02:00,  9.07it/s] 38%|███▊      | 656/1746 [00:36<01:37, 11.12it/s] 38%|███▊      | 659/1746 [00:36<01:22, 13.13it/s] 38%|███▊      | 662/1746 [00:36<01:10, 15.46it/s] 38%|███▊      | 665/1746 [00:36<01:00, 17.76it/s] 38%|███▊      | 668/1746 [00:36<00:58, 18.58it/s] 38%|███▊      | 671/1746 [00:36<00:53, 20.06it/s] 39%|███▊      | 674/1746 [00:37<00:59, 18.01it/s] 39%|███▉      | 677/1746 [00:37<01:03, 16.91it/s] 39%|███▉      | 680/1746 [00:37<00:58, 18.32it/s] 39%|███▉      | 683/1746 [00:37<00:58, 18.04it/s] 39%|███▉      | 686/1746 [00:37<00:55, 19.08it/s] 39%|███▉      | 689/1746 [00:37<00:52, 20.24it/s] 40%|███▉      | 692/1746 [00:38<00:48, 21.65it/s] 40%|███▉      | 695/1746 [00:38<00:46, 22.42it/s] 40%|███▉      | 698/1746 [00:38<00:51, 20.37it/s] 40%|████      | 701/1746 [00:38<00:52, 19.93it/s] 40%|████      | 704/1746 [00:38<00:49, 20.95it/s] 40%|████      | 707/1746 [00:38<00:49, 20.88it/s] 41%|████      | 710/1746 [00:38<00:47, 21.92it/s] 41%|████      | 713/1746 [00:39<00:46, 22.40it/s] 41%|████      | 716/1746 [00:39<00:43, 23.56it/s] 41%|████      | 719/1746 [00:39<00:43, 23.60it/s] 41%|████▏     | 722/1746 [00:39<00:45, 22.62it/s] 42%|████▏     | 725/1746 [00:39<00:44, 22.98it/s] 42%|████▏     | 728/1746 [00:39<00:43, 23.62it/s] 42%|████▏     | 731/1746 [00:39<00:44, 22.77it/s] 42%|████▏     | 734/1746 [00:39<00:47, 21.51it/s] 42%|████▏     | 737/1746 [00:40<00:56, 17.96it/s] 42%|████▏     | 739/1746 [00:40<00:58, 17.27it/s] 42%|████▏     | 742/1746 [00:40<00:52, 19.22it/s] 43%|████▎     | 745/1746 [00:40<00:49, 20.20it/s] 43%|████▎     | 748/1746 [00:40<00:46, 21.49it/s] 43%|████▎     | 751/1746 [00:40<00:44, 22.31it/s] 43%|████▎     | 754/1746 [00:40<00:45, 21.78it/s] 43%|████▎     | 757/1746 [00:41<00:43, 22.73it/s] 44%|████▎     | 760/1746 [00:41<00:41, 23.63it/s] 44%|████▎     | 763/1746 [00:41<00:49, 19.97it/s] 44%|████▍     | 766/1746 [00:41<00:53, 18.46it/s] 44%|████▍     | 769/1746 [00:41<00:48, 20.15it/s] 44%|████▍     | 772/1746 [00:41<00:44, 22.07it/s] 44%|████▍     | 775/1746 [00:41<00:45, 21.24it/s] 45%|████▍     | 778/1746 [00:42<00:44, 21.90it/s] 45%|████▍     | 781/1746 [00:42<00:45, 21.28it/s] 45%|████▍     | 784/1746 [00:42<00:43, 22.30it/s] 45%|████▌     | 787/1746 [00:42<00:42, 22.41it/s] 45%|████▌     | 790/1746 [00:42<00:43, 22.06it/s] 45%|████▌     | 793/1746 [00:42<00:40, 23.35it/s] 46%|████▌     | 796/1746 [00:42<00:39, 23.98it/s] 46%|████▌     | 799/1746 [00:43<00:41, 22.85it/s] 46%|████▌     | 802/1746 [00:43<00:41, 23.02it/s] 46%|████▌     | 805/1746 [00:43<00:41, 22.82it/s] 46%|████▋     | 808/1746 [00:43<00:39, 23.61it/s] 46%|████▋     | 811/1746 [00:43<00:41, 22.36it/s] 47%|████▋     | 814/1746 [00:44<01:55,  8.04it/s] 47%|████▋     | 817/1746 [00:44<01:36,  9.59it/s] 47%|████▋     | 820/1746 [00:44<01:19, 11.66it/s] 47%|████▋     | 823/1746 [00:44<01:05, 13.99it/s] 47%|████▋     | 826/1746 [00:45<00:57, 15.98it/s] 47%|████▋     | 829/1746 [00:45<00:54, 16.86it/s] 48%|████▊     | 832/1746 [00:45<01:04, 14.16it/s] 48%|████▊     | 835/1746 [00:45<00:56, 16.09it/s] 48%|████▊     | 838/1746 [00:45<00:50, 17.87it/s] 48%|████▊     | 841/1746 [00:45<00:46, 19.35it/s] 48%|████▊     | 844/1746 [00:46<00:46, 19.36it/s] 49%|████▊     | 847/1746 [00:46<00:44, 20.39it/s] 49%|████▊     | 850/1746 [00:46<00:47, 18.72it/s] 49%|████▉     | 853/1746 [00:46<00:43, 20.69it/s] 49%|████▉     | 856/1746 [00:46<00:41, 21.19it/s] 49%|████▉     | 859/1746 [00:46<00:39, 22.55it/s] 49%|████▉     | 862/1746 [00:46<00:39, 22.44it/s] 50%|████▉     | 865/1746 [00:46<00:37, 23.25it/s] 50%|████▉     | 868/1746 [00:47<00:39, 22.38it/s] 50%|████▉     | 871/1746 [00:47<00:39, 22.07it/s] 50%|█████     | 874/1746 [00:47<00:38, 22.69it/s] 50%|█████     | 877/1746 [00:47<00:39, 22.04it/s] 50%|█████     | 880/1746 [00:47<00:38, 22.48it/s] 51%|█████     | 883/1746 [00:47<00:38, 22.41it/s] 51%|█████     | 886/1746 [00:47<00:37, 23.04it/s] 51%|█████     | 889/1746 [00:48<00:36, 23.64it/s] 51%|█████     | 892/1746 [00:48<00:37, 22.75it/s] 51%|█████▏    | 895/1746 [00:48<00:36, 23.36it/s] 51%|█████▏    | 898/1746 [00:48<00:40, 20.84it/s] 52%|█████▏    | 901/1746 [00:48<00:38, 21.80it/s] 52%|█████▏    | 904/1746 [00:48<00:37, 22.71it/s] 52%|█████▏    | 907/1746 [00:48<00:35, 23.57it/s] 52%|█████▏    | 910/1746 [00:48<00:33, 24.85it/s] 52%|█████▏    | 913/1746 [00:49<00:33, 24.51it/s] 52%|█████▏    | 916/1746 [00:49<00:34, 24.02it/s] 53%|█████▎    | 919/1746 [00:49<00:38, 21.40it/s] 53%|█████▎    | 922/1746 [00:49<00:36, 22.51it/s] 53%|█████▎    | 925/1746 [00:49<00:36, 22.65it/s] 53%|█████▎    | 928/1746 [00:49<00:34, 23.43it/s] 53%|█████▎    | 931/1746 [00:49<00:35, 23.24it/s] 53%|█████▎    | 934/1746 [00:50<00:44, 18.31it/s] 54%|█████▎    | 937/1746 [00:50<00:40, 19.89it/s] 54%|█████▍    | 940/1746 [00:50<00:37, 21.35it/s]s_push: parser stack overflow
Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1019, in get_ast
    return MANAGER.ast_from_file(filepath, modname, source=True)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/manager.py", line 118, in ast_from_file
    return AstroidBuilder(self).file_build(filepath, modname)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 134, in file_build
    module, builder = self._data_build(data, modname, path)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 169, in _data_build
    node, parser_module = _parse_string(data, type_comments=True)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 455, in _parse_string
    parsed = parser_module.parse(data + "\n", type_comments=type_comments)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/_ast.py", line 48, in parse
    return parse_func(string)
  File "/usr/lib/python3.8/ast.py", line 47, in parse
    return compile(source, filename, mode, flags,
MemoryError
 54%|█████▍    | 943/1746 [00:50<00:36, 21.87it/s] 54%|█████▍    | 946/1746 [00:50<00:41, 19.32it/s] 54%|█████▍    | 949/1746 [00:50<00:38, 20.90it/s] 55%|█████▍    | 952/1746 [00:50<00:38, 20.65it/s]Can't write the issue template for the crash in /home/pjana/.cache/pylint/pylint-crash-2023-08-20-17-34-51.txt because of: '[Errno 2] No such file or directory: '/home/pjana/.cache/pylint/pylint-crash-2023-08-20-17-34-51.txt''
Here's the content anyway:
First, please verify that the bug is not already filled:
https://github.com/PyCQA/pylint/issues/

Then create a new crash issue:
https://github.com/PyCQA/pylint/issues/new?assignees=&labels=crash%2Cneeds+triage&template=BUG-REPORT.yml


Issue title:
Crash ``Building error when trying to create ast representation of module '1692552891110_5320'`` (if possible, be more specific about what made pylint crash)
Content:
When parsing the following file:

<!--
 If sharing the code is not an option, please state so,
 but providing only the stacktrace would still be helpful.
 -->

```python
def p013 ( ) :
    import math
    print ( math . pow ( math . pow ( math . pow ( math . pow ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - ( - fabs
```

pylint crashed with a ``AstroidBuildingError`` and with the following stacktrace:
```
Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1019, in get_ast
    return MANAGER.ast_from_file(filepath, modname, source=True)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/manager.py", line 118, in ast_from_file
    return AstroidBuilder(self).file_build(filepath, modname)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 134, in file_build
    module, builder = self._data_build(data, modname, path)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 169, in _data_build
    node, parser_module = _parse_string(data, type_comments=True)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 455, in _parse_string
    parsed = parser_module.parse(data + "\n", type_comments=type_comments)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/_ast.py", line 48, in parse
    return parse_func(string)
  File "/usr/lib/python3.8/ast.py", line 47, in parse
    return compile(source, filename, mode, flags,
MemoryError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 711, in _get_asts
    ast_per_fileitem[fileitem] = self.get_ast(
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1041, in get_ast
    raise astroid.AstroidBuildingError(
astroid.exceptions.AstroidBuildingError: Building error when trying to create ast representation of module '1692552891110_5320'
```
.
Can't write the issue template for the crash in /home/pjana/.cache/pylint/pylint-crash-2023-08-20-17-35-16.txt because of: '[Errno 2] No such file or directory: '/home/pjana/.cache/pylint/pylint-crash-2023-08-20-17-35-16.txt''
Here's the content anyway:
First, please verify that the bug is not already filled:
https://github.com/PyCQA/pylint/issues/

Then create a new crash issue:
https://github.com/PyCQA/pylint/issues/new?assignees=&labels=crash%2Cneeds+triage&template=BUG-REPORT.yml


Issue title:
Crash ``Building error when trying to create ast representation of module '1692552916271_2795'`` (if possible, be more specific about what made pylint crash)
Content:
When parsing the following file:

<!--
 If sharing the code is not an option, please state so,
 but providing only the stacktrace would still be helpful.
 -->

```python
def main ( ) :
    import math
    try :
        t = int ( math . ceil ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math ( math . log ( math ( math . log ( math ( math . log ( math ( math ( math ( math ( math ( math ( math ( math ( math ( math ( math ( math ( math ( ) ( math ( math ( math ( math ( ) ( math ( math ( ) ( math ( ) ( math ( math ( ) ( math ( math ( ) ( math ( math ( math ( ) ( math ( math ( ) ( math ( math ( math ( ) ( math ( math ( math ( ) ( ) ( math ( math ( ) ( math ( math ( ) ( math ( ) ( math ( math ( ) ( math ( ) ( math ( math ( math ( ) ( math ( ) ( math ( math ( ) ( math ( math ( math ( ) ( math ( ) ( math ( math ( ) ( math ( math ( ) ( math ( math ( ) ( math ( math ( math ( ) ( ) ( math ( math ( math ( math ( ) ( math ( math ( ) ( math ( ) ( math ( math ( math ( ) ( math ( math ( ) ( math ( ) ( math ( math ( math ( math ( ) ( math ( math ( ) ( math ( math ( ( math ( math ( math ( ) ( math ( ) ( math ( ( math ( math ( ( math ( math ( ( ( math ( ( math ( ( math ( ( ( math ( ( ( math ( ( ( ( math ( ( ( math ( ( ( math ( ( ( ( ( math ( ( ( ( ( math ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
```

pylint crashed with a ``AstroidBuildingError`` and with the following stacktrace:
```
Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1019, in get_ast
    return MANAGER.ast_from_file(filepath, modname, source=True)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/manager.py", line 118, in ast_from_file
    return AstroidBuilder(self).file_build(filepath, modname)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 134, in file_build
    module, builder = self._data_build(data, modname, path)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 169, in _data_build
    node, parser_module = _parse_string(data, type_comments=True)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 455, in _parse_string
    parsed = parser_module.parse(data + "\n", type_comments=type_comments)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/_ast.py", line 48, in parse
    return parse_func(string)
  File "/usr/lib/python3.8/ast.py", line 47, in parse
    return compile(source, filename, mode, flags,
MemoryError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 711, in _get_asts
    ast_per_fileitem[fileitem] = self.get_ast(
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1041, in get_ast
    raise astroid.AstroidBuildingError(
astroid.exceptions.AstroidBuildingError: Building error when trying to create ast representation of module '1692552916271_2795'
```
.
Exception on node <Subscript l.12 at 0x7f0bbf22e130> in file '/home/pjana/CoTran-Anonymous/junk/tokenizedFiles/1692552916895_6425.py'
Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/utils.py", line 1352, in safe_infer
    value = next(infer_gen)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 169, in infer
    yield from self._infer(context=context, **kwargs)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 140, in raise_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/bases.py", line 165, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 182, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 140, in raise_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/bases.py", line 165, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 182, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 127, in yes_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 530, in _filter_operation_errors
    for result in infer_callable(self, context):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 879, in _infer_binop
    yield from _infer_binary_operation(lhs, rhs, self, context, _get_binop_flow)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 828, in _infer_binary_operation
    results = list(method())
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 127, in yes_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/protocols.py", line 208, in tl_infer_binary_op
    yield _multiply_seq_by_int(self, opnode, other, context)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/protocols.py", line 161, in _multiply_seq_by_int
    node.elts = list(filtered_elts) * other.value
MemoryError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 90, in walk
    callback(astroid)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/typecheck.py", line 2039, in visit_subscript
    self._check_invalid_sequence_index(node)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/typecheck.py", line 1619, in _check_invalid_sequence_index
    parent_type = safe_infer(subscript.value)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/utils.py", line 1356, in safe_infer
    raise AstroidError from e
astroid.exceptions.AstroidError
 55%|█████▍    | 955/1746 [00:51<00:36, 21.72it/s] 55%|█████▍    | 958/1746 [00:51<00:34, 22.93it/s] 55%|█████▌    | 961/1746 [00:51<00:33, 23.35it/s] 55%|█████▌    | 964/1746 [00:51<00:38, 20.05it/s] 55%|█████▌    | 967/1746 [00:51<00:37, 20.96it/s] 56%|█████▌    | 970/1746 [00:51<00:35, 21.76it/s] 56%|█████▌    | 973/1746 [00:51<00:40, 19.15it/s] 56%|█████▌    | 976/1746 [00:52<00:38, 19.85it/s] 56%|█████▌    | 979/1746 [00:52<00:42, 17.88it/s] 56%|█████▌    | 982/1746 [00:52<00:40, 18.73it/s] 56%|█████▋    | 985/1746 [00:52<00:37, 20.47it/s] 57%|█████▋    | 988/1746 [00:52<00:36, 20.66it/s] 57%|█████▋    | 991/1746 [00:52<00:34, 22.03it/s] 57%|█████▋    | 994/1746 [00:52<00:34, 21.72it/s] 57%|█████▋    | 997/1746 [00:53<00:32, 23.31it/s] 57%|█████▋    | 1000/1746 [00:53<00:31, 23.59it/s] 57%|█████▋    | 1003/1746 [00:53<00:32, 23.02it/s] 58%|█████▊    | 1006/1746 [00:53<00:33, 21.90it/s] 58%|█████▊    | 1009/1746 [00:53<00:34, 21.44it/s] 58%|█████▊    | 1012/1746 [00:53<00:34, 21.24it/s] 58%|█████▊    | 1015/1746 [00:53<00:33, 21.99it/s] 58%|█████▊    | 1018/1746 [00:53<00:31, 23.14it/s] 58%|█████▊    | 1021/1746 [00:54<00:29, 24.23it/s] 59%|█████▊    | 1024/1746 [00:55<01:46,  6.76it/s] 59%|█████▉    | 1027/1746 [00:55<01:23,  8.61it/s] 59%|█████▉    | 1030/1746 [00:55<01:08, 10.46it/s] 59%|█████▉    | 1033/1746 [00:55<00:57, 12.48it/s] 59%|█████▉    | 1036/1746 [00:55<00:48, 14.69it/s] 60%|█████▉    | 1039/1746 [00:55<00:43, 16.20it/s] 60%|█████▉    | 1042/1746 [00:56<00:38, 18.25it/s] 60%|█████▉    | 1045/1746 [00:56<00:35, 19.74it/s] 60%|██████    | 1048/1746 [00:56<00:33, 21.00it/s] 60%|██████    | 1051/1746 [00:56<00:31, 21.86it/s] 60%|██████    | 1054/1746 [00:56<00:34, 19.98it/s] 61%|██████    | 1057/1746 [00:56<00:38, 17.77it/s] 61%|██████    | 1060/1746 [00:56<00:35, 19.22it/s] 61%|██████    | 1063/1746 [00:57<00:32, 21.08it/s] 61%|██████    | 1066/1746 [00:57<00:31, 21.65it/s] 61%|██████    | 1069/1746 [00:57<00:30, 22.55it/s] 61%|██████▏   | 1072/1746 [00:57<00:29, 22.56it/s] 62%|██████▏   | 1075/1746 [00:57<00:29, 23.01it/s] 62%|██████▏   | 1078/1746 [00:57<00:30, 22.02it/s] 62%|██████▏   | 1081/1746 [00:57<00:29, 22.39it/s] 62%|██████▏   | 1084/1746 [00:57<00:27, 23.97it/s] 62%|██████▏   | 1087/1746 [00:58<00:27, 23.66it/s] 62%|██████▏   | 1090/1746 [00:58<00:28, 23.22it/s] 63%|██████▎   | 1093/1746 [00:58<00:27, 23.91it/s] 63%|██████▎   | 1096/1746 [00:58<00:27, 23.31it/s] 63%|██████▎   | 1099/1746 [00:58<00:27, 23.67it/s] 63%|██████▎   | 1102/1746 [00:58<00:27, 23.46it/s] 63%|██████▎   | 1105/1746 [00:58<00:26, 23.91it/s] 63%|██████▎   | 1108/1746 [00:58<00:25, 25.14it/s] 64%|██████▎   | 1111/1746 [00:59<00:24, 25.85it/s] 64%|██████▍   | 1114/1746 [00:59<00:24, 25.73it/s] 64%|██████▍   | 1117/1746 [00:59<00:26, 24.02it/s] 64%|██████▍   | 1120/1746 [00:59<00:26, 23.66it/s] 64%|██████▍   | 1123/1746 [00:59<00:25, 24.88it/s] 64%|██████▍   | 1126/1746 [00:59<00:25, 23.85it/s] 65%|██████▍   | 1129/1746 [00:59<00:26, 23.69it/s] 65%|██████▍   | 1132/1746 [00:59<00:25, 24.50it/s] 65%|██████▌   | 1135/1746 [01:00<00:24, 24.77it/s] 65%|██████▌   | 1138/1746 [01:00<00:25, 23.93it/s] 65%|██████▌   | 1141/1746 [01:00<00:27, 22.27it/s] 66%|██████▌   | 1144/1746 [01:00<00:25, 23.30it/s] 66%|██████▌   | 1147/1746 [01:00<00:28, 21.17it/s] 66%|██████▌   | 1150/1746 [01:00<00:27, 21.51it/s] 66%|██████▌   | 1153/1746 [01:00<00:31, 19.08it/s] 66%|██████▌   | 1156/1746 [01:01<00:28, 20.89it/s] 66%|██████▋   | 1159/1746 [01:01<00:27, 21.33it/s] 67%|██████▋   | 1162/1746 [01:01<00:27, 21.24it/s] 67%|██████▋   | 1165/1746 [01:01<00:30, 18.88it/s] 67%|██████▋   | 1168/1746 [01:01<00:28, 20.46it/s] 67%|██████▋   | 1171/1746 [01:01<00:26, 22.08it/s] 67%|██████▋   | 1174/1746 [01:01<00:29, 19.63it/s] 67%|██████▋   | 1177/1746 [01:02<00:26, 21.15it/s] 68%|██████▊   | 1180/1746 [01:02<00:26, 21.31it/s] 68%|██████▊   | 1183/1746 [01:02<00:26, 21.42it/s] 68%|██████▊   | 1186/1746 [01:02<00:27, 20.59it/s] 68%|██████▊   | 1189/1746 [01:02<00:26, 20.71it/s] 68%|██████▊   | 1192/1746 [01:02<00:25, 21.95it/s] 68%|██████▊   | 1195/1746 [01:02<00:25, 21.46it/s] 69%|██████▊   | 1198/1746 [01:03<00:25, 21.19it/s] 69%|██████▉   | 1201/1746 [01:03<00:24, 22.15it/s] 69%|██████▉   | 1204/1746 [01:03<00:27, 19.61it/s] 69%|██████▉   | 1207/1746 [01:03<00:25, 20.78it/s] 69%|██████▉   | 1210/1746 [01:03<00:24, 21.55it/s] 69%|██████▉   | 1213/1746 [01:03<00:25, 21.20it/s] 70%|██████▉   | 1216/1746 [01:03<00:24, 21.86it/s] 70%|██████▉   | 1219/1746 [01:04<00:23, 22.62it/s] 70%|██████▉   | 1222/1746 [01:04<00:22, 23.37it/s] 70%|███████   | 1225/1746 [01:04<00:21, 23.82it/s] 70%|███████   | 1228/1746 [01:04<00:20, 24.79it/s]s_push: parser stack overflow
Can't write the issue template for the crash in /home/pjana/.cache/pylint/pylint-crash-2023-08-20-17-35-16.txt because of: '[Errno 2] No such file or directory: '/home/pjana/.cache/pylint/pylint-crash-2023-08-20-17-35-16.txt''
Here's the content anyway:
First, please verify that the bug is not already filled:
https://github.com/PyCQA/pylint/issues/

Then create a new crash issue:
https://github.com/PyCQA/pylint/issues/new?assignees=&labels=crash%2Cneeds+triage&template=BUG-REPORT.yml


Issue title:
Crash ```` (if possible, be more specific about what made pylint crash)
Content:
When parsing the following file:

<!--
 If sharing the code is not an option, please state so,
 but providing only the stacktrace would still be helpful.
 -->

```python
def CF_1447B_numbersBox ( ) :
    import sys
    count = sys . maxsize
    for i in range ( count ) :
        n = sys . maxsize
        m = sys . maxsize
        arr = [ 0 ] * n
        nagiviteTimes = 0
        minNum = sys . maxsize
        sumNum = 0
        for j in range ( len ( arr ) ) :
            arr [ j ] = sys . maxsize
            if arr [ j ] < 0 :
                arr [ j ] = 0 - arr [ j ]
                nagiviteTimes += 1
                sumNum += arr [ j ]
                if minNum > arr [ j ] :
                    minNum = arr [ j ]
            else :
                sumNum += arr [ j ]
                if minNum > arr [ j ] :
                    minNum = arr [ j ]
        if nagiviteTimes % 2 == 0 :
            print ( sumNum )
        else :
            print ( sumNum - minNum * 2 )

```

pylint crashed with a ``AstroidError`` and with the following stacktrace:
```
Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/utils.py", line 1352, in safe_infer
    value = next(infer_gen)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 169, in infer
    yield from self._infer(context=context, **kwargs)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 140, in raise_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/bases.py", line 165, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 182, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 140, in raise_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/bases.py", line 165, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 182, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 127, in yes_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 530, in _filter_operation_errors
    for result in infer_callable(self, context):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 879, in _infer_binop
    yield from _infer_binary_operation(lhs, rhs, self, context, _get_binop_flow)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 828, in _infer_binary_operation
    results = list(method())
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 127, in yes_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/protocols.py", line 208, in tl_infer_binary_op
    yield _multiply_seq_by_int(self, opnode, other, context)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/protocols.py", line 161, in _multiply_seq_by_int
    node.elts = list(filtered_elts) * other.value
MemoryError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 790, in _lint_file
    check_astroid_module(module)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1060, in check_astroid_module
    retval = self._check_astroid_module(
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1110, in _check_astroid_module
    walker.walk(node)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 93, in walk
    self.walk(child)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 93, in walk
    self.walk(child)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 93, in walk
    self.walk(child)
  [Previous line repeated 2 more times]
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 90, in walk
    callback(astroid)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/typecheck.py", line 2039, in visit_subscript
    self._check_invalid_sequence_index(node)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/typecheck.py", line 1619, in _check_invalid_sequence_index
    parent_type = safe_infer(subscript.value)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/utils.py", line 1356, in safe_infer
    raise AstroidError from e
astroid.exceptions.AstroidError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 755, in _lint_files
    self._lint_file(fileitem, module, check_astroid_module)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 792, in _lint_file
    raise astroid.AstroidError from e
astroid.exceptions.AstroidError
```
.
Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1019, in get_ast
    return MANAGER.ast_from_file(filepath, modname, source=True)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/manager.py", line 118, in ast_from_file
    return AstroidBuilder(self).file_build(filepath, modname)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 134, in file_build
    module, builder = self._data_build(data, modname, path)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 169, in _data_build
    node, parser_module = _parse_string(data, type_comments=True)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 455, in _parse_string
    parsed = parser_module.parse(data + "\n", type_comments=type_comments)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/_ast.py", line 48, in parse
    return parse_func(string)
  File "/usr/lib/python3.8/ast.py", line 47, in parse
    return compile(source, filename, mode, flags,
MemoryError
 71%|███████   | 1231/1746 [01:04<00:20, 25.50it/s] 71%|███████   | 1234/1746 [01:04<00:20, 24.74it/s] 71%|███████   | 1237/1746 [01:04<00:21, 24.17it/s] 71%|███████   | 1240/1746 [01:04<00:20, 24.21it/s] 71%|███████   | 1243/1746 [01:05<00:21, 23.01it/s] 71%|███████▏  | 1246/1746 [01:05<00:21, 23.11it/s] 72%|███████▏  | 1249/1746 [01:05<00:20, 24.11it/s] 72%|███████▏  | 1252/1746 [01:05<00:20, 24.18it/s] 72%|███████▏  | 1255/1746 [01:05<00:19, 24.68it/s] 72%|███████▏  | 1258/1746 [01:05<00:19, 24.99it/s] 72%|███████▏  | 1261/1746 [01:05<00:19, 24.45it/s] 72%|███████▏  | 1264/1746 [01:05<00:19, 24.23it/s] 73%|███████▎  | 1267/1746 [01:06<00:20, 23.24it/s] 73%|███████▎  | 1270/1746 [01:06<00:20, 23.30it/s] 73%|███████▎  | 1273/1746 [01:06<00:19, 24.54it/s] 73%|███████▎  | 1276/1746 [01:06<00:20, 23.24it/s] 73%|███████▎  | 1279/1746 [01:06<00:19, 23.93it/s] 73%|███████▎  | 1282/1746 [01:06<00:24, 19.32it/s] 74%|███████▎  | 1285/1746 [01:08<01:16,  6.01it/s] 74%|███████▍  | 1288/1746 [01:08<00:59,  7.71it/s] 74%|███████▍  | 1291/1746 [01:08<00:46,  9.73it/s] 74%|███████▍  | 1294/1746 [01:08<00:37, 11.95it/s] 74%|███████▍  | 1297/1746 [01:08<00:31, 14.23it/s] 74%|███████▍  | 1300/1746 [01:08<00:27, 16.03it/s] 75%|███████▍  | 1303/1746 [01:08<00:25, 17.35it/s] 75%|███████▍  | 1306/1746 [01:08<00:22, 19.48it/s] 75%|███████▍  | 1309/1746 [01:09<00:20, 21.33it/s] 75%|███████▌  | 1312/1746 [01:09<00:18, 22.98it/s] 75%|███████▌  | 1315/1746 [01:09<00:17, 24.34it/s] 75%|███████▌  | 1318/1746 [01:09<00:17, 23.88it/s] 76%|███████▌  | 1321/1746 [01:09<00:19, 21.92it/s] 76%|███████▌  | 1324/1746 [01:09<00:20, 21.03it/s] 76%|███████▌  | 1327/1746 [01:09<00:18, 22.40it/s] 76%|███████▌  | 1330/1746 [01:09<00:17, 23.46it/s] 76%|███████▋  | 1333/1746 [01:10<00:17, 23.75it/s] 77%|███████▋  | 1336/1746 [01:10<00:18, 22.63it/s] 77%|███████▋  | 1339/1746 [01:10<00:17, 23.13it/s] 77%|███████▋  | 1342/1746 [01:10<00:17, 23.23it/s] 77%|███████▋  | 1345/1746 [01:10<00:19, 20.54it/s] 77%|███████▋  | 1348/1746 [01:10<00:19, 20.65it/s] 77%|███████▋  | 1351/1746 [01:10<00:17, 22.38it/s] 78%|███████▊  | 1354/1746 [01:11<00:17, 22.44it/s] 78%|███████▊  | 1357/1746 [01:11<00:17, 22.60it/s] 78%|███████▊  | 1360/1746 [01:11<00:16, 23.84it/s] 78%|███████▊  | 1363/1746 [01:11<00:15, 24.90it/s] 78%|███████▊  | 1366/1746 [01:11<00:16, 22.90it/s] 78%|███████▊  | 1369/1746 [01:11<00:16, 23.53it/s] 79%|███████▊  | 1372/1746 [01:11<00:16, 22.86it/s] 79%|███████▉  | 1375/1746 [01:11<00:15, 23.76it/s] 79%|███████▉  | 1378/1746 [01:12<00:15, 23.99it/s] 79%|███████▉  | 1381/1746 [01:12<00:15, 23.40it/s] 79%|███████▉  | 1384/1746 [01:12<00:15, 22.93it/s] 79%|███████▉  | 1387/1746 [01:12<00:15, 23.20it/s] 80%|███████▉  | 1390/1746 [01:12<00:16, 21.66it/s] 80%|███████▉  | 1393/1746 [01:12<00:17, 20.49it/s] 80%|███████▉  | 1396/1746 [01:12<00:18, 18.60it/s] 80%|████████  | 1399/1746 [01:13<00:17, 19.65it/s] 80%|████████  | 1402/1746 [01:13<00:16, 20.60it/s] 80%|████████  | 1405/1746 [01:13<00:15, 21.63it/s] 81%|████████  | 1408/1746 [01:13<00:16, 20.81it/s] 81%|████████  | 1411/1746 [01:13<00:15, 21.92it/s] 81%|████████  | 1414/1746 [01:13<00:16, 20.49it/s] 81%|████████  | 1417/1746 [01:13<00:15, 20.90it/s] 81%|████████▏ | 1420/1746 [01:14<00:14, 22.13it/s] 82%|████████▏ | 1423/1746 [01:14<00:14, 22.87it/s] 82%|████████▏ | 1426/1746 [01:14<00:16, 19.62it/s] 82%|████████▏ | 1429/1746 [01:14<00:15, 20.72it/s] 82%|████████▏ | 1432/1746 [01:14<00:14, 21.88it/s] 82%|████████▏ | 1435/1746 [01:14<00:13, 22.37it/s] 82%|████████▏ | 1438/1746 [01:14<00:14, 21.13it/s] 83%|████████▎ | 1441/1746 [01:15<00:14, 21.12it/s] 83%|████████▎ | 1444/1746 [01:15<00:13, 22.70it/s] 83%|████████▎ | 1447/1746 [01:15<00:12, 23.50it/s] 83%|████████▎ | 1450/1746 [01:15<00:12, 23.58it/s] 83%|████████▎ | 1453/1746 [01:15<00:13, 22.23it/s] 83%|████████▎ | 1456/1746 [01:15<00:12, 22.98it/s] 84%|████████▎ | 1459/1746 [01:15<00:12, 23.67it/s] 84%|████████▎ | 1462/1746 [01:15<00:11, 24.01it/s] 84%|████████▍ | 1465/1746 [01:15<00:11, 24.14it/s] 84%|████████▍ | 1468/1746 [01:16<00:11, 24.77it/s]Can't write the issue template for the crash in /home/pjana/.cache/pylint/pylint-crash-2023-08-20-17-35-30.txt because of: '[Errno 2] No such file or directory: '/home/pjana/.cache/pylint/pylint-crash-2023-08-20-17-35-30.txt''
Here's the content anyway:
First, please verify that the bug is not already filled:
https://github.com/PyCQA/pylint/issues/

Then create a new crash issue:
https://github.com/PyCQA/pylint/issues/new?assignees=&labels=crash%2Cneeds+triage&template=BUG-REPORT.yml


Issue title:
Crash ``Building error when trying to create ast representation of module '1692552930282_4240'`` (if possible, be more specific about what made pylint crash)
Content:
When parsing the following file:

<!--
 If sharing the code is not an option, please state so,
 but providing only the stacktrace would still be helpful.
 -->

```python
def main ( ) :
    import sys
    import numpy as np
    import math
    import numpy . inf
    import math
    import numpy . sup
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random . seed as random
    import numpy . random
    import numpy . random . seed as seed
    seed = seed or random . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random ( 0 , np . randint ( 0 , np . random . randint ( 0 , np . random ( 0 , np . abs ( np . abs ( np . abs ( np . abs ( np . abs ( np . abs ( np . abs ( np . abs ( np ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( ( abs
```

pylint crashed with a ``AstroidBuildingError`` and with the following stacktrace:
```
Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1019, in get_ast
    return MANAGER.ast_from_file(filepath, modname, source=True)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/manager.py", line 118, in ast_from_file
    return AstroidBuilder(self).file_build(filepath, modname)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 134, in file_build
    module, builder = self._data_build(data, modname, path)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 169, in _data_build
    node, parser_module = _parse_string(data, type_comments=True)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/builder.py", line 455, in _parse_string
    parsed = parser_module.parse(data + "\n", type_comments=type_comments)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/_ast.py", line 48, in parse
    return parse_func(string)
  File "/usr/lib/python3.8/ast.py", line 47, in parse
    return compile(source, filename, mode, flags,
MemoryError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 711, in _get_asts
    ast_per_fileitem[fileitem] = self.get_ast(
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1041, in get_ast
    raise astroid.AstroidBuildingError(
astroid.exceptions.AstroidBuildingError: Building error when trying to create ast representation of module '1692552930282_4240'
```
.
Exception on node <Subscript l.15 at 0x7f0bb6b36c70> in file '/home/pjana/CoTran-Anonymous/junk/tokenizedFiles/1692552942122_8811.py'
Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/utils.py", line 1352, in safe_infer
    value = next(infer_gen)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 169, in infer
    yield from self._infer(context=context, **kwargs)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 140, in raise_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/bases.py", line 165, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 182, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 140, in raise_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/bases.py", line 165, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 182, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 127, in yes_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 530, in _filter_operation_errors
    for result in infer_callable(self, context):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 879, in _infer_binop
    yield from _infer_binary_operation(lhs, rhs, self, context, _get_binop_flow)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 828, in _infer_binary_operation
    results = list(method())
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 127, in yes_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/protocols.py", line 208, in tl_infer_binary_op
    yield _multiply_seq_by_int(self, opnode, other, context)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/protocols.py", line 161, in _multiply_seq_by_int
    node.elts = list(filtered_elts) * other.value
MemoryError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 90, in walk
    callback(astroid)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/typecheck.py", line 2039, in visit_subscript
    self._check_invalid_sequence_index(node)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/typecheck.py", line 1619, in _check_invalid_sequence_index
    parent_type = safe_infer(subscript.value)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/utils.py", line 1356, in safe_infer
    raise AstroidError from e
astroid.exceptions.AstroidError
 84%|████████▍ | 1471/1746 [01:16<00:12, 22.13it/s] 84%|████████▍ | 1474/1746 [01:16<00:12, 22.09it/s] 85%|████████▍ | 1477/1746 [01:16<00:12, 21.80it/s] 85%|████████▍ | 1480/1746 [01:16<00:11, 22.30it/s] 85%|████████▍ | 1483/1746 [01:16<00:11, 22.22it/s] 85%|████████▌ | 1486/1746 [01:16<00:11, 21.83it/s] 85%|████████▌ | 1489/1746 [01:17<00:12, 21.07it/s] 85%|████████▌ | 1492/1746 [01:17<00:12, 20.95it/s] 86%|████████▌ | 1495/1746 [01:17<00:12, 19.84it/s] 86%|████████▌ | 1498/1746 [01:17<00:11, 21.88it/s] 86%|████████▌ | 1501/1746 [01:17<00:10, 23.74it/s] 86%|████████▌ | 1504/1746 [01:17<00:09, 24.79it/s] 86%|████████▋ | 1507/1746 [01:17<00:09, 24.87it/s] 86%|████████▋ | 1510/1746 [01:17<00:09, 26.06it/s] 87%|████████▋ | 1513/1746 [01:18<00:08, 26.84it/s] 87%|████████▋ | 1516/1746 [01:18<00:09, 23.07it/s] 87%|████████▋ | 1519/1746 [01:18<00:10, 21.91it/s] 87%|████████▋ | 1522/1746 [01:18<00:11, 19.63it/s] 87%|████████▋ | 1525/1746 [01:18<00:10, 21.30it/s] 88%|████████▊ | 1528/1746 [01:18<00:09, 22.21it/s] 88%|████████▊ | 1531/1746 [01:18<00:09, 21.89it/s] 88%|████████▊ | 1534/1746 [01:19<00:09, 22.02it/s] 88%|████████▊ | 1537/1746 [01:19<00:09, 22.24it/s] 88%|████████▊ | 1540/1746 [01:19<00:09, 20.93it/s] 88%|████████▊ | 1543/1746 [01:19<00:14, 13.82it/s] 88%|████████▊ | 1545/1746 [01:19<00:13, 14.63it/s] 89%|████████▊ | 1548/1746 [01:20<00:11, 16.58it/s] 89%|████████▉ | 1550/1746 [01:20<00:11, 17.26it/s] 89%|████████▉ | 1553/1746 [01:20<00:09, 19.60it/s] 89%|████████▉ | 1556/1746 [01:20<00:08, 21.39it/s] 89%|████████▉ | 1559/1746 [01:20<00:08, 22.13it/s] 89%|████████▉ | 1562/1746 [01:21<00:34,  5.32it/s] 90%|████████▉ | 1564/1746 [01:22<00:28,  6.38it/s] 90%|████████▉ | 1566/1746 [01:22<00:23,  7.65it/s] 90%|████████▉ | 1569/1746 [01:22<00:17, 10.03it/s] 90%|█████████ | 1572/1746 [01:22<00:13, 12.71it/s] 90%|█████████ | 1575/1746 [01:22<00:11, 15.35it/s] 90%|█████████ | 1578/1746 [01:22<00:10, 15.73it/s] 91%|█████████ | 1581/1746 [01:22<00:09, 17.87it/s] 91%|█████████ | 1584/1746 [01:22<00:08, 19.39it/s] 91%|█████████ | 1587/1746 [01:23<00:07, 20.10it/s] 91%|█████████ | 1590/1746 [01:23<00:08, 18.32it/s] 91%|█████████ | 1593/1746 [01:23<00:07, 19.34it/s] 91%|█████████▏| 1596/1746 [01:23<00:07, 20.90it/s] 92%|█████████▏| 1599/1746 [01:23<00:06, 21.21it/s] 92%|█████████▏| 1602/1746 [01:23<00:06, 21.12it/s] 92%|█████████▏| 1605/1746 [01:23<00:06, 22.17it/s] 92%|█████████▏| 1608/1746 [01:24<00:05, 23.64it/s] 92%|█████████▏| 1611/1746 [01:24<00:05, 23.81it/s] 92%|█████████▏| 1614/1746 [01:24<00:05, 24.50it/s] 93%|█████████▎| 1617/1746 [01:24<00:05, 24.56it/s] 93%|█████████▎| 1620/1746 [01:24<00:05, 23.98it/s] 93%|█████████▎| 1623/1746 [01:24<00:05, 24.21it/s] 93%|█████████▎| 1626/1746 [01:24<00:05, 23.14it/s] 93%|█████████▎| 1629/1746 [01:24<00:05, 21.59it/s] 93%|█████████▎| 1632/1746 [01:25<00:06, 16.31it/s] 94%|█████████▎| 1635/1746 [01:25<00:06, 18.02it/s] 94%|█████████▍| 1638/1746 [01:25<00:05, 19.65it/s] 94%|█████████▍| 1641/1746 [01:25<00:05, 18.50it/s] 94%|█████████▍| 1643/1746 [01:25<00:05, 17.25it/s] 94%|█████████▍| 1646/1746 [01:26<00:06, 16.60it/s] 94%|█████████▍| 1649/1746 [01:26<00:05, 18.79it/s] 95%|█████████▍| 1652/1746 [01:26<00:04, 20.69it/s] 95%|█████████▍| 1655/1746 [01:26<00:04, 20.54it/s] 95%|█████████▍| 1658/1746 [01:26<00:05, 16.44it/s] 95%|█████████▌| 1661/1746 [01:26<00:04, 18.12it/s] 95%|█████████▌| 1664/1746 [01:26<00:04, 19.83it/s] 95%|█████████▌| 1667/1746 [01:27<00:03, 20.79it/s] 96%|█████████▌| 1670/1746 [01:27<00:03, 21.19it/s] 96%|█████████▌| 1673/1746 [01:27<00:03, 20.18it/s] 96%|█████████▌| 1676/1746 [01:27<00:03, 21.68it/s] 96%|█████████▌| 1679/1746 [01:27<00:02, 22.36it/s] 96%|█████████▋| 1682/1746 [01:27<00:03, 19.54it/s] 97%|█████████▋| 1685/1746 [01:27<00:02, 20.84it/s] 97%|█████████▋| 1688/1746 [01:28<00:03, 18.45it/s] 97%|█████████▋| 1691/1746 [01:28<00:02, 18.78it/s] 97%|█████████▋| 1694/1746 [01:28<00:02, 20.00it/s] 97%|█████████▋| 1697/1746 [01:28<00:02, 21.65it/s] 97%|█████████▋| 1700/1746 [01:28<00:02, 22.73it/s] 98%|█████████▊| 1703/1746 [01:28<00:01, 24.12it/s] 98%|█████████▊| 1706/1746 [01:28<00:01, 23.52it/s] 98%|█████████▊| 1709/1746 [01:28<00:01, 24.33it/s] 98%|█████████▊| 1712/1746 [01:29<00:01, 23.60it/s] 98%|█████████▊| 1715/1746 [01:29<00:01, 22.72it/s] 98%|█████████▊| 1718/1746 [01:29<00:01, 24.10it/s] 99%|█████████▊| 1721/1746 [01:29<00:01, 24.14it/s] 99%|█████████▊| 1724/1746 [01:29<00:00, 22.52it/s] 99%|█████████▉| 1727/1746 [01:29<00:00, 21.97it/s] 99%|█████████▉| 1730/1746 [01:30<00:00, 17.49it/s] 99%|█████████▉| 1733/1746 [01:30<00:00, 19.54it/s] 99%|█████████▉| 1736/1746 [01:30<00:00, 19.43it/s]100%|█████████▉| 1739/1746 [01:30<00:00, 20.41it/s]100%|█████████▉| 1742/1746 [01:30<00:00, 21.94it/s]100%|█████████▉| 1745/1746 [01:30<00:00, 22.81it/s]100%|██████████| 1746/1746 [01:30<00:00, 19.25it/s]
Can't write the issue template for the crash in /home/pjana/.cache/pylint/pylint-crash-2023-08-20-17-35-42.txt because of: '[Errno 2] No such file or directory: '/home/pjana/.cache/pylint/pylint-crash-2023-08-20-17-35-42.txt''
Here's the content anyway:
First, please verify that the bug is not already filled:
https://github.com/PyCQA/pylint/issues/

Then create a new crash issue:
https://github.com/PyCQA/pylint/issues/new?assignees=&labels=crash%2Cneeds+triage&template=BUG-REPORT.yml


Issue title:
Crash ```` (if possible, be more specific about what made pylint crash)
Content:
When parsing the following file:

<!--
 If sharing the code is not an option, please state so,
 but providing only the stacktrace would still be helpful.
 -->

```python
def largestCircle ( ) :
    import sys
    C = sys . maxsize
    for thisCase in range ( 1 , C + 1 ) :
        print ( "Case #%d: %d" % ( thisCase , largestCircle ( ) ) )
    def largestCircle ( ) :
        N = sys . maxsize
        bff = [ ]
        for i in range ( N ) :
            bff . append ( sys . maxsize - 1 )
        status = [ - 2 ]
        chain_length = [ 0 ] * N
        for i in range ( N ) :
            status [ i ] = - 1
            chain_length [ i ] = 0
        for i in range ( N ) :
            if bff [ bff [ i ] ] == i :
                status [ i ] = - 1
        max_loop_size = 0
        for i in range ( N ) :
            if status [ i ] != - 1 :
                current = bff [ i ]
                status [ i ] = i
                steps = 1
                done = False
                while not done :
                    if current == i :
                        if steps > max_loop_size :
                            max_loop_size = steps
                        done = True
                    elif status [ current ] == i :
                        done = True
                    elif status [ current ] == - 1 :
                        if steps > chain_length [ current ] :
                            chain_length [ current ] = steps
                        done = True
                    else :
                        steps += 1
                        status [ current ] = i
                        current = bff [ current ]
        frankenCircle = 0
        for i in range ( N ) :
            if status [ i ] == - 1 :
                frankenCircle += ( chain_length [ i ] + 1 )
        return max ( frankenCircle , max_loop_size )

```

pylint crashed with a ``AstroidError`` and with the following stacktrace:
```
Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/utils.py", line 1352, in safe_infer
    value = next(infer_gen)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 169, in infer
    yield from self._infer(context=context, **kwargs)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 140, in raise_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/bases.py", line 165, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 182, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 140, in raise_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/bases.py", line 165, in _infer_stmts
    for inf in stmt.infer(context=context):  # type: ignore[union-attr]
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/nodes/node_ng.py", line 182, in infer
    for i, result in enumerate(self._infer(context=context, **kwargs)):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 127, in yes_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 109, in wrapped
    for res in _func(node, context, **kwargs):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 530, in _filter_operation_errors
    for result in infer_callable(self, context):
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 879, in _infer_binop
    yield from _infer_binary_operation(lhs, rhs, self, context, _get_binop_flow)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/inference.py", line 828, in _infer_binary_operation
    results = list(method())
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/decorators.py", line 127, in yes_if_nothing_inferred
    yield next(generator)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/protocols.py", line 208, in tl_infer_binary_op
    yield _multiply_seq_by_int(self, opnode, other, context)
  File "/home/pjana/cotran/lib/python3.8/site-packages/astroid/protocols.py", line 161, in _multiply_seq_by_int
    node.elts = list(filtered_elts) * other.value
MemoryError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 790, in _lint_file
    check_astroid_module(module)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1060, in check_astroid_module
    retval = self._check_astroid_module(
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 1110, in _check_astroid_module
    walker.walk(node)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 93, in walk
    self.walk(child)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 93, in walk
    self.walk(child)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 93, in walk
    self.walk(child)
  [Previous line repeated 2 more times]
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/utils/ast_walker.py", line 90, in walk
    callback(astroid)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/typecheck.py", line 2039, in visit_subscript
    self._check_invalid_sequence_index(node)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/typecheck.py", line 1619, in _check_invalid_sequence_index
    parent_type = safe_infer(subscript.value)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/checkers/utils.py", line 1356, in safe_infer
    raise AstroidError from e
astroid.exceptions.AstroidError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 755, in _lint_files
    self._lint_file(fileitem, module, check_astroid_module)
  File "/home/pjana/cotran/lib/python3.8/site-packages/pylint/lint/pylinter.py", line 792, in _lint_file
    raise astroid.AstroidError from e
astroid.exceptions.AstroidError
```
.
avgFirstErrPos: 74.68194352778538

./AVATAR_data/third_party
  0%|          | 0/1746 [00:00<?, ?it/s]

-------------------------------------


---> lineNum: 1
---> probID: aizu_p00855_A
---> inputs:
10
11
27
2
492170
0
---> outputs:
4
0
6
0
114

def main ( ) :
    import sys
    f = open ( sys . argv [ 1 ] )
    pg = [ ]
    while True :
        n = int ( f . readline ( ) )
        if n == 0 :
            break
        if pg . count ( n ) == 0 :
            print ( 0 )
            continue
        begin = - 1
        end = - 1
        for i in range ( n - 1 , - 1 , - 1 ) :
            if pg . count ( i ) == 0 :
                begin = i
                break
        for i in range ( n + 1 , 2000000 ) :
            if pg . count ( i ) == 1 :
                end = i
                break
        print ( end - begin )
    class PrimeNumberGenerator ( object ) :
        N = 2000000
        def __init__ ( self , isPrime ) :
            self . isPrime = isPrime
            self . isPrime = isPrime
            self . isPrime = isPrime
            self . isPrime = isPrime
            self . isPrime = isPrime
            self . isPrime = isPrime
            self . isPrime = isPrime
            self . isPrime = isPrime
            self . isPrime = isPrime
            self . isPrime = isPrime
            self . isPrime = isPrime
            self . isPrime = isPrime
            self . isPrime = isPrime
        def isPrime ( self , index ) :
            return self . isPrime [ index ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 2
---> probID: geeksforgeeks_2849_A
---> inputs:

---> outputs:
aalmymlaa 


def GFG ( data , freq , len_ ) :
    for c in data :
        freq [ ord ( c ) - ord ( 'a' ) ] += 1
    def canMakePalindrome ( freq , len_ ) :
        count_odd = 0
        for i in range ( MAX_CHAR ) :
            if freq [ i ] % 2 :
                count_odd += 1
        if len_ % 2 == 0 :
            if count_odd > 0 :
                return False
            else :
                return True
        if count_odd != 1 :
            return False
        return True
    def findOddAndRemoveItsFreq ( freq ) :
        odd_str = ""
        for i in range ( MAX_CHAR ) :
            if freq [ i ] % 2 :
                freq [ i ] -= 1
                odd_str = odd_str + chr ( i ) + ord ( 'a' )
                return odd_str
        return odd_str
    def findPalindromicString ( data ) :
        freq = list ( data )
        freq = list ( freq )
        if not canMakePalindrome ( freq , len_ ) :
            return "No Palindromic String"
        odd_str = findOddAndRemoveItsFreq ( freq )
        front_str , rear_str = "" , " "
        for i in range ( MAX_CHAR ) :
            temp = ""
            if freq [ i ] != 0 :
                ch = chr ( i ) + ord ( 'a' )
                for j in range ( 1 , freq [ i ] // 2 + 1 ) :
                    temp = temp + ch
                front_str = front_str + temp
                rear_str = temp + rear_str
        return ( front_str + odd_str + rear_str )
    def main ( ) :
        data = "malayalam"
        print ( findPalindromicString ( data ) )
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 3
---> probID: aizu_p02296_A
---> inputs:
3
0 0 1 0 0 1 1 1
0 0 1 0 2 1 1 2
-1 0 1 0 0 1 0 -1
---> outputs:
1.0000000000
1.4142135624
0.0000000000

def main ( ) :
    import sys
    import numpy as np
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 4
---> probID: geeksforgeeks_528_A
---> inputs:

---> outputs:
8
5
3


def count_9s ( number ) :
    n = len ( number )
    d = [ 0 ] * 9
    d [ 0 ] = 1
    result = 0
    mod_sum , continuous_zero = 0 , 0
    for c in number :
        if ord ( c ) - ord ( '0' ) == 0 :
            continuous_zero += 1
        else :
            continuous_zero = 0
        mod_sum += ord ( c ) - ord ( '0' )
        mod_sum %= 9
        result += d [ mod_sum ]
        d [ mod_sum ] += 1
        result -= continuous_zero
    return result


---> console_out:
 
DIDN'T MATCH!! :(
  0%|          | 4/1746 [00:00<00:45, 38.65it/s]

-------------------------------------


---> lineNum: 5
---> probID: geeksforgeeks_3249_A
---> inputs:

---> outputs:
12


def fast_pow ( N , K ) :
    import math
    if not K :
        return 1
    temp = math . pow ( N , K // 2 )
    if K % 2 == 0 :
        return temp * temp
    else :
        return N * temp * temp


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 6
---> probID: aizu_p00228_A
---> inputs:
3
0
5
1
1
0
-1
---> outputs:
0111111
1010010
1101011
0111111

def main ( ) :
    import sys
    s = [ [ 0 , 1 , 1 , 1 , 1 , 1 , 1 ] , [ 0 , 0 , 0 , 0 , 1 , 1 , 0 ] , [ 1 , 0 , 1 , 1 , 0 , 1 , 1 ] , [ 1 , 0 , 0 , 1 , 1 , 0 , 1 , 1 ] , [ 1 , 1 , 0 , 0 , 1 , 1 , 0 ] , [ 1 , 1 , 0 , 1 , 1 , 1 , 0 , 1 ] , [ 1 , 1 , 0 , 0 , 1 , 1 , 0 , 1 ] , [ 1 , 1 , 1 , 1 , 1 , 1 , 0 , 1 ] , [ 0 , 1 , 0 , 0 , 0 , 1 , 1 , 1 ] , [ 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 ] , [ 1 , 1 , 0 , 1 , 1 , 1 , 1 , 1 ] ]
    for n in range ( len ( s ) ) :
        a = [ 0 ] * 7
        if n == - 1 :
            break
        while n > 0 :
            n -= 1
            m = n
            for i in range ( 7 ) :
                print ( ( a [ i ] ^ s [ m ] [ i ] ) + ( '\n' if i == 6 else '' ) , end = '' )
            a = s [ m ] [ : n ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 7
---> probID: geeksforgeeks_1326_A
---> inputs:

---> outputs:
YES
NO


def test_sum_to_vector ( ) :
    import numpy as np
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal
    from numpy . testing import assert_almost_equal


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 8
---> probID: geeksforgeeks_1321_A
---> inputs:

---> outputs:
YES


def GFG ( ) :
    import numpy as np
    import random
    MAX = 1000000
    arr = [ ]
    prime = np . zeros ( MAX )
    def SieveOfEratosthenes ( ) :
        for i in range ( MAX ) :
            prime [ i ] = True
        for p in range ( 2 , 2 * MAX ) :
            if prime [ p ] == True :
                for i in range ( p * 2 , MAX , 2 ) :
                    prime [ i ] = False
        for p in range ( 2 , MAX ) :
            if prime [ p ] :
                arr . append ( p )
    def isPrimorialPrime ( n ) :
        if not prime [ n ] :
            return False
        product = 1
        i = 0
        while product < n :
            product = product * arr [ i ]
            if product + 1 == n or product - 1 == n :
                return True
            i += 1
        return False
    def main ( ) :
        SieveOfEratosthenes ( )
        n = 31
        if isPrimorialPrime ( n ) :
            print ( "YES" )
        else :
            print ( "NO" )
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 9
---> probID: geeksforgeeks_2880_A
---> inputs:

---> outputs:
8 * 1 = 8
8 * 2 = 16
8 * 3 = 24
8 * 4 = 32
8 * 5 = 40
8 * 6 = 48
8 * 7 = 56
8 * 8 = 64
8 * 9 = 72
8 * 10 = 80


def mul_table ( N , i ) :
    if i > 10 :
        return
    print ( '%d * %d = %d' % ( N , i , N * i ) )
    mul_table ( N , i + 1 )


---> console_out:
 
DIDN'T MATCH!! :(
  1%|          | 9/1746 [00:00<00:42, 40.45it/s]

-------------------------------------


---> lineNum: 10
---> probID: geeksforgeeks_2069_A
---> inputs:

---> outputs:
12
-18
0
21


def close_to_n_divisible_m ( n , m ) :
    q = n // m
    n1 = m * q
    n2 = ( m * ( q + 1 ) ) if ( n * m ) > 0 else ( m * ( q - 1 ) )
    if abs ( n - n1 ) < abs ( n - n2 ) :
        return n1
    return n2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 11
---> probID: geeksforgeeks_833_A
---> inputs:

---> outputs:
4


def GFG ( ang , n ) :
    if ( ang * n ) > ( 180 * ( n - 2 ) ) :
        return 0
    elif ( ang * n ) % 180 :
        return 0
    ans = 1
    freq = ( ang * n ) / 180
    ans = ans * ( n - 1 - freq )
    ans = ans * n
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 12
---> probID: geeksforgeeks_2722_A
---> inputs:

---> outputs:
fix


def GFG ( s ) :
    n = len ( s )
    lps = [ 0 ] * n
    lps [ 0 ] = 0
    i = 1
    while i < n :
        if s [ i ] == s [ len ( s ) ] :
            lps [ i ] = len ( s )
            i += 1
        else :
            if lps [ i ] != 0 :
                lps [ i ] = lps [ - 1 ]
            else :
                lps [ i ] = 0
                i += 1
    return lps


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 13
---> probID: geeksforgeeks_1532_A
---> inputs:

---> outputs:
YES


def check_if_sort_rotated ( arr , n ) :
    min_ele = sys . maxsize
    max_ele = sys . maxsize
    min_index = - 1
    for i in range ( n ) :
        if arr [ i ] < min_ele :
            min_ele = arr [ i ]
            min_index = i
    flag1 = True
    for i in range ( 1 , min_index ) :
        if arr [ i ] < arr [ i - 1 ] :
            flag1 = False
            break
    flag2 = True
    for i in range ( min_index + 1 , n ) :
        if arr [ i ] < arr [ i - 1 ] :
            flag2 = False
            break
    if min_index == 0 :
        print ( 'NO' , end = ' ' )
        return
    if flag1 and flag2 and ( arr [ n - 1 ] < arr [ min_index - 1 ] ) :
        print ( 'YES' , end = ' ' )
    else :
        print ( 'NO' , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 14
---> probID: codeforces_11_A
---> inputs:
4 2
1 3 3 2
---> outputs:
3

def runapp ( ) :
    import sys
    sys . path . append ( os . path . abspath ( sys . argv [ 0 ] ) )
    import os
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    import sys
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    import os
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    import sys
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )
    sys . path . append ( os . path . abspath ( sys . path [ 0 ] ) )


---> console_out:
 
DIDN'T MATCH!! :(
  1%|          | 14/1746 [00:00<00:41, 41.25it/s]

-------------------------------------


---> lineNum: 15
---> probID: geeksforgeeks_891_A
---> inputs:

---> outputs:
Power-isolated Integer
Not a Power-isolated Integer
Power-isolated Integer


def check_if_power_isolated ( num ) :
    input = num
    count = 0
    factor = [ 0 ] * ( num + 1 )
    if num % 2 == 0 :
        while num % 2 == 0 :
            count += 1
            num //= 2
        factor [ 2 ] = count
    for i in range ( 3 , num * 2 + 1 , 2 ) :
        count = 0
        while num % i == 0 :
            count += 1
            num //= i
        if count > 0 :
            factor [ i ] = count
    if num > 1 :
        factor [ num ] = 1
    product = 1
    for i in range ( num + 1 ) :
        if factor [ i ] > 0 :
            product = product * factor [ i ] ** i
    if product == input :
        sys . stdout . write ( 'Power-isolated Integer\n' )
    else :
        sys . stdout . write ( 'Not a Power-isolated Integer\n' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 16
---> probID: aizu_p01772_A
---> inputs:
AIZUNYANPEROPERO
---> outputs:
AZ

def main ( ) :
    import string
    s = list ( string . ascii_lowercase )
    s = [ ]
    for c in s :
        if len ( s ) % 2 == 0 and s [ c ] in " A " or len ( s ) % 2 == 1 and s [ c ] in " Z " :
            s . append ( c )
    s . sort ( )
    if len ( s ) == 0 :
        print ( - 1 )
    else :
        s = [ "AZ" ] * len ( s )
        print ( "" . join ( s ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 17
---> probID: codeforces_1625_B
---> inputs:
4
7
3 1 5 2 1 3 4
6
1 1 1 1 1 1
6
1 4 2 8 5 7
2
15 15
---> outputs:
4
5
-1
1

def R765A ( ) :
    import sys
    f = sys . stdin
    s = list ( f )
    t = int ( s )
    while t > 0 :
        s = s . pop ( 0 )
        n = int ( s )
        arr = [ ]
        s = list ( s )
        for i in range ( n ) :
            arr . append ( int ( s [ i ] ) )
        solve ( arr )
    class Diff ( object ) :
        def __init__ ( self ) :
            self . prev = None
        def solve ( self , arr ) :
            self . max = - 1
            self . dict = { }
            for i in range ( len ( arr ) ) :
                if arr [ i ] in self . dict :
                    diff = self . dict [ arr [ i ] ]
                    prev = diff . prev
                    count = self . prev + len ( arr ) - i
                    if count > self . max :
                        self . max = count
                    diff . prev = i
                else :
                    diff = Diff ( )
                    diff . prev = i
                    self . dict [ arr [ i ] ] = diff
            print ( self . max )
    return R765A


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 18
---> probID: geeksforgeeks_3058_A
---> inputs:

---> outputs:
2118187521397235888154583183918321221520083884298838480662480


def GFG ( num1 , num2 ) :
    len1 = len ( num1 )
    len2 = len ( num2 )
    if not len1 or not len2 :
        return '0'
    result = [ 0 ] * ( len1 + len2 )
    i_n1 = 0
    i_n2 = 0
    for i in range ( len1 - 1 , - 1 , - 1 ) :
        carry = 0
        n1 = num1 [ i ] - '0'
        i_n2 = 0
        for j in range ( len2 - 1 , - 1 , - 1 ) :
            n2 = num2 [ j ] - '0'
            sum = n1 * n2 + result [ i_n1 + i_n2 ] + carry
            carry = sum // 10
            result [ i_n1 + i_n2 ] = sum % 10
            i_n2 += 1
        if carry > 0 :
            result [ i_n1 + i_n2 ] += carry
        i_n1 += 1
    i = len ( result ) - 1
    while i >= 0 and result [ i ] == 0 :
        i -= 1
    if i == - 1 :
        return '0'
    s = ''
    while i >= 0 :
        s += ( result [ i ] )
        i -= 1
    return s


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 19
---> probID: codeforces_1013_A
---> inputs:
5
1 2 3 4 5
2 1 4 3 5
---> outputs:
Yes

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    arr = [ ]
    sum = 0
    sum1 = 0
    arr1 = [ ]
    for i in range ( n ) :
        arr . append ( sys . stdin . readline ( ) )
        sum += arr [ i ]
    for i in range ( n ) :
        arr1 . append ( sys . stdin . readline ( ) )
        sum1 += arr1 [ i ]
    if sum >= sum1 :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(
  1%|          | 19/1746 [00:00<00:41, 41.14it/s]

-------------------------------------


---> lineNum: 20
---> probID: codeforces_412_A
---> inputs:
2 2
R1
---> outputs:
PRINT 1
LEFT
PRINT R

def main ( ) :
    import string
    try :
        n , k = int ( sys . stdin . readline ( ) ) , int ( sys . stdin . readline ( ) )
        a = string . strip ( a )
        if k > n // 2 :
            while k < n :
                print ( "RIGHT" )
                k += 1
        else :
            while k > 1 :
                print ( "LEFT" )
                k -= 1
        if k == 1 :
            for i in range ( len ( a ) ) :
                print ( "PRINT %s" % a [ i ] )
                if ( i + 1 ) < len ( a ) :
                    print ( "RIGHT" )
        else :
            for i in range ( len ( a ) - 1 , - 1 , - 1 ) :
                print ( "PRINT %s" % a [ i ] )
                if ( i - 1 ) >= 0 :
                    print ( "LEFT" )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 21
---> probID: geeksforgeeks_734_A
---> inputs:

---> outputs:
0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 20 

def print_dist_sum ( arr , n ) :
    sum = 0
    for i in range ( n ) :
        sum += arr [ i ]
    dp = np . zeros ( ( n + 1 , sum + 1 ) )
    for i in range ( 0 , n + 1 ) :
        dp [ i ] [ 0 ] = True
    for i in range ( 1 , n + 1 ) :
        dp [ i ] [ arr [ i - 1 ] ] = True
        for j in range ( 1 , sum + 1 ) :
            if dp [ i - 1 ] [ j ] == True :
                dp [ i ] [ j ] = True
                dp [ i ] [ j + arr [ i - 1 ] ] = True
    for j in range ( 0 , sum + 1 ) :
        if dp [ n ] [ j ] == True :
            print ( j , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 22
---> probID: geeksforgeeks_2591_A
---> inputs:

---> outputs:
-1
2


def GFG ( a , b ) :
    global c
    c = a + ( ~ b + 1 )
    return c


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 23
---> probID: codeforces_622_A
---> inputs:
3
---> outputs:
2

def infinite_sequence ( ) :
    import math
    import sys
    import math
    import sys
    n1 = int ( math . sqrt ( 1 + ( 8 * n1 ) ) - 1 ) / 2
    n = int ( ( math . sqrt ( 1 + ( 8 * n1 ) ) - 1 ) / 2 )
    ans = n1 - ( ( ( n + 1 ) * n ) / 2 )
    sys . stdout . write ( ( ans if ans is not None else n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 24
---> probID: codeforces_939_A
---> inputs:
5
2 4 5 1 3
---> outputs:
YES

def code_forces ( ) :
    import sys
    try :
        n = len ( sys . argv )
        arr = list ( range ( n ) )
        lt = False
        for i in range ( n ) :
            if i == arr [ arr [ arr [ i ] ] ] :
                lt = True
                break
        if lt :
            print ( "YES" )
        else :
            print ( "NO" )
    except :
        print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(
  1%|▏         | 24/1746 [00:00<00:41, 41.70it/s]

-------------------------------------


---> lineNum: 25
---> probID: geeksforgeeks_2843_A
---> inputs:

---> outputs:
abcdhforgieks


def GFG ( str ) :
    while i < len ( str ) :
        if not str [ i ] :
            return i
        i += 1
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 26
---> probID: codeforces_1493_B
---> inputs:
5
24 60
12:21
24 60
23:59
90 80
52:26
1 100
00:01
10 10
04:04
---> outputs:
12:21
00:00
52:28
00:00
00:00

def planet ( ) :
    import string
    FLIP = [ 0 , 1 , 5 , - 1 , - 1 , 2 , - 1 , - 1 , 8 , - 1 ]
    stdin = string . replace ( " " , "" )
    n_c = len ( stdin )
    for loop in range ( n_c ) :
        hr = int ( stdin . readline ( ) )
        min = int ( stdin . readline ( ) )
        tokens = stdin . split ( ":" )
        s_hr = int ( tokens [ 0 ] )
        s_min = int ( tokens [ 1 ] )
        res = None
        for i in range ( s_hr * min + s_min , hr * min ) :
            res = flip ( i , hr , min )
            if res is not None :
                break
        if res is None :
            res = [ 0 , 0 , 0 , 0 ]
        print ( "%d%d:%d%d\n" % ( res [ 0 ] , res [ 1 ] , res [ 2 ] , res [ 3 ] ) )
    return [ ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 27
---> probID: codeforces_388_A
---> inputs:
3
0 0 10
---> outputs:
2

def main ( ) :
    import sys
    import os
    import string
    import math
    import random
    import sys
    n , nax = sys . maxsize , 105
    a = list ( a )
    cnts = [ 0 ] * nax
    for e in a :
        cnts [ e + 1 ] += 1
    ans = 0
    pre = [ 0 ] * nax
    for i in range ( 1 , nax ) :
        pre [ i ] = pre [ i - 1 ] + cnts [ i ]
        val = ( pre [ i ] + i - 1 ) / i
        ans = max ( ans , val )
    print ( ans )
    def ruffle_sort ( a ) :
        al = [ ]
        for i in a :
            al . append ( i )
        al . sort ( )
        for i in range ( len ( a ) ) :
            a [ i ] = al [ i ]
        return a
    def print ( a ) :
        for e in a :
            print ( e , end = ' ' )
        print ( )
    class FastReader ( sys . stdin ) :
        def readline ( ) :
            while not sys . stdin . readline ( ) . strip ( ) . startswith ( '#' ) :
                try :
                    s = list ( next ( sys . stdin ) . split ( ' ' ) )
                except StopIteration :
                    pass
                else :
                    return s
            def randint ( ) :
                return int ( s )
            def long ( s ) :
                return int ( s )
            def read_array ( n ) :
                a = [ ]
                for i in range ( n ) :
                    a . append ( sc . randint ( 0 , n ) )
                return a
    return FastReader ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 28
---> probID: codeforces_1688_A
---> inputs:
7
1
2
5
9
16
114514
1000000
---> outputs:
3
3
1
1
17
2
64

def main ( ) :
    import sys
    try :
        t = sys . maxsize
    except AttributeError :
        pass
    while t > 0 :
        n = sys . maxsize
        s = [ ]
        if n == 1 :
            print ( 3 )
        else :
            while n > 0 :
                ans = n & 1
                n = n >> 1
                if ans == 1 :
                    s . insert ( 0 , 1 )
                    break
                else :
                    s . insert ( 0 , 0 )
            if n == 0 :
                s . pop ( )
                s . append ( 1 )
            val = int ( '' . join ( s ) , 2 )
            print ( val )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 29
---> probID: aizu_p01998_A
---> inputs:
3
---> outputs:
2

def main ( ) :
    import numpy as np
    import numpy . testing . ufuncs as ufuncs
    n = len ( ufuncs )
    arr = np . zeros ( n + 3 )
    arr [ 0 ] = True
    arr [ 1 ] = True
    count = 0
    for i in range ( 2 , len ( arr ) ) :
        if not arr [ i ] :
            for j in range ( 2 , i * len ( arr ) ) :
                arr [ i * j ] = True
            if not arr [ i ] and not arr [ i - 2 ] :
                count += 1
    print ( count * 2 )


---> console_out:
 
DIDN'T MATCH!! :(
  2%|▏         | 29/1746 [00:00<00:41, 40.96it/s]

-------------------------------------


---> lineNum: 30
---> probID: codeforces_474_B
---> inputs:
5
2 7 3 4 9
3
1 25 11
---> outputs:
1
5
3

def league ( ) :
    import sys
    import os
    import sys
    class league ( sys . stdin ) :
        def solve ( self , f ) :
            n = len ( f )
            num = 0
            a = [ 0 ] * 1000001
            start = 0
            for i in range ( 1 , n + 1 ) :
                num += len ( f )
                for j in range ( start , num ) :
                    a [ j ] = i
                start = num
            m = len ( f )
            for i in range ( m ) :
                print ( a [ - 1 ] , end = ' ' )
                print ( )
    def run ( self ) :
        try :
            with open ( 'league.txt' , 'w' ) as f :
                f . write ( '' )
        except :
            print ( 'league.txt' , file = sys . stderr )
            print ( )
    return league


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 31
---> probID: codeforces_1558_B
---> inputs:
3 998244353
---> outputs:
5

def ada ( ) :
    import string
    import math
    import math
    import os
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import string
    import math
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 32
---> probID: geeksforgeeks_660_A
---> inputs:

---> outputs:
78 90 90 90 89


def sliding_window ( arr , n , k ) :
    Qi = [ ]
    i = 0
    for i in range ( k ) :
        while not Qi and arr [ i ] >= arr [ Qi . pop ( ) ] :
            Qi . append ( i )
        Qi . append ( i )
    for i in range ( n ) :
        print ( arr [ Qi . pop ( ) ] , end = ' ' )
        while ( not Qi and Qi [ - k ] <= i - k ) :
            Qi . pop ( )
        while ( not Qi and arr [ i ] >= arr [ Qi . pop ( ) ] ) :
            Qi . pop ( )
        Qi . append ( i )
    print ( arr [ Qi . pop ( ) ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 33
---> probID: geeksforgeeks_1175_A
---> inputs:

---> outputs:
18
240


def russian_peasant ( a , b ) :
    res = 0
    while b > 0 :
        if b & 1 :
            res = res + a
        a = a << 1
        b = b >> 1
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 34
---> probID: geeksforgeeks_4021_A
---> inputs:

---> outputs:
Invalid


def GFG ( data , len_ ) :
    for i in range ( 1 , len_ ) :
        if data [ i ] == data [ i - 1 ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(
  2%|▏         | 34/1746 [00:00<00:41, 41.56it/s]

-------------------------------------


---> lineNum: 35
---> probID: geeksforgeeks_2144_A
---> inputs:

---> outputs:
13 may be Prime.


def lehmann ( n , t ) :
    import random
    random . seed ( )
    a = random . randint ( n - 3 , 2 )
    e = ( n - 1 ) / 2
    while t > 0 :
        result = ( int ( pow ( a , e ) ) ) % n
        if ( result % n ) == 1 or ( result % n ) == ( n - 1 ) :
            a = random . randint ( n - 3 , 2 )
            t -= 1
        else :
            return - 1
    return 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 36
---> probID: codeforces_267_A
---> inputs:
2
4 17
7 987654321
---> outputs:
8
141093479

def main ( ) :
    import sys
    try :
        num = sys . stdin . read ( )
    except AttributeError :
        pass
    while num > 0 :
        num -= 1
        a = sys . stdin . read ( )
        b = sys . stdin . read ( )
        res = 0
        while a != 0 and b != 0 :
            if a >= b :
                res += a // b
                a %= b
            else :
                res += b // a
                b %= a
        print ( res )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 37
---> probID: codeforces_844_A
---> inputs:
yandex
6
---> outputs:
0

def cp ( s ) : return s
class CP ( object ) :
    def __init__ ( self , s ) :
        self . s = s
        self . f = s
        self . f = s
        self . f = s
        self . f = s
        self . i = None
        self . f = s . f
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . k = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
        self . j = None
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 38
---> probID: geeksforgeeks_5251_A
---> inputs:

---> outputs:
20


def GFG ( mat ) :
    N = 3
    max_trace = 0
    for i in range ( N ) :
        for j in range ( N ) :
            r , s , trace = i , j , 0
            while r < N and s < N :
                trace += mat [ r ] [ s ]
                r += 1
                s += 1
                max_trace = max ( trace , max_trace )
    return max_trace


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 39
---> probID: aizu_p00059_A
---> inputs:
0.0 0.0 5.0 5.0 1.0 1.0 4.0 4.0
0.0 0.0 4.0 5.0 1.0 1.0 5.0 5.0
0.0 0.0 4.0 4.0 -3.0 -5.0 2.0 -1.0
---> outputs:
YES
YES
NO

def main ( args ) :
    import math
    for xa1 , ya1 , xa2 , ya2 , xb1 , yb1 , xb2 , yb2 in args :
        xa1 , ya1 = xa1 , ya1 , xa2 , ya2
        xb1 , yb1 , yb2 = xb1 , yb1 , yb2
        xa1 , xa2 , ya2 = xa1 , ya1 , xa2 , ya2
        xb1 , xb2 , yb2 = xb1 , yb1 , xb2 , yb2
        xa1 , xa2 , yb1 = xa1 , xa2 , xb1 , xb2 , xb1 , yb2
        ya1 , ya2 , yb2 = ya1 , yb2 , yb1 , yb2
        xa1 , xa2 , ya1 , ya2 , xb1 , xb2 , yb2 = xb1 , xb2 , xb1 , xb2 , yb2 , yb2
        xa1 , xa2 , ya1 , xb2 , yb1 , yb2 = xb1 , xb2 , xb1 , xb2 , yb2 , yb1 , yb2
        xa1 , xa2 , ya2 , xb1 , xb2 , yb2 , ya1 , yb2 , ya1 , ya2 , yb1 , yb2 , xa1 , ya2 , yb1 , yb2 , xa1 , xb2 , ya2 , ya1 , yb2 , xb1 , yb2 , yb1 , xb1 , yb2 , xa1 , xb2 , yb2 , yb1 , xb1 , yb2 , yb2 , xa1 , xa2 , xb2 , ya2 , ya2 , xb1 , yb2 , xb1 , yb2 , yb1 , xb1 , yb2 , yb2 , xa1 , xb2 , yb2 , yb1 , xb1 , yb2 , xb1 , yb2 , yb2 , xa1 , xa1 , xb2 , ya2 , ya1 , ya2 , xb2 , yb2 , yb1 , yb2 , xa1 , xa1 , xb2 , yb2 , yb2 , xa1 , xa1 , xb2 , ya2 , yb2 , xa1 , xa1 , ya2 , xb1 , yb2 , yb2 , xa1 , xa1 , xa1 , xb2 , ya1 , xb1 , yb2 , xa1

---> console_out:
 
DIDN'T MATCH!! :(
  2%|▏         | 39/1746 [00:00<00:40, 41.78it/s]

-------------------------------------


---> lineNum: 40
---> probID: codeforces_1601_A
---> inputs:
5
4
4 4 4 4
4
13 7 25 19
6
3 5 3 1 7 1
1
1
5
0 0 0 0 0
---> outputs:
1 2 4
1 2
1
1
1 2 3 4 5

def array_elimination ( ) :
    import sys
    t = sys . maxsize
    for tt in range ( t ) :
        n = sys . maxsize
        bit = [ 0 ] * 32
        arr = [ None ] * n
        for i in range ( n ) :
            arr [ i ] = sys . maxsize
        for i in range ( n ) :
            for j in range ( 32 ) :
                temp = ( 1 << ( j - 1 ) )
                bitwise_and = arr [ i ] & temp
                if bitwise_and > 0 :
                    bit [ j ] += 1
        for i in range ( 1 , n + 1 ) :
            possible = True
            for j in range ( 32 ) :
                if bit [ j ] % i != 0 :
                    possible = False
                    break
            if possible :
                sys . stdout . write ( "%d " % i )
        sys . stdout . write ( "\n" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 41
---> probID: geeksforgeeks_1302_A
---> inputs:

---> outputs:
3


def OddDivCount ( a , b ) :
    res = 0
    for i in range ( a , b + 1 ) :
        div_count = 0
        for j in range ( 1 , i + 1 ) :
            if i % j == 0 :
                div_count += 1
        if ( div_count % 2 ) :
            res += 1
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 42
---> probID: codeforces_450_A
---> inputs:
5 2
1 3 1 4 2
---> outputs:
4

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        m = int ( sys . stdin . readline ( ) )
        M = float ( m )
        arr = [ ]
        for i in range ( n ) :
            arr . append ( i )
        max = 0
        ans = 0
        for i in range ( n ) :
            x = int ( math . ceil ( arr [ i ] / M ) )
            if x >= max :
                max = x
                ans = i
        sys . stdout . write ( str ( ans + 1 ) )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 43
---> probID: geeksforgeeks_3877_A
---> inputs:

---> outputs:
2 3 1 2 0 
2 2 4 1 2 0 


def GFG ( N , arr ) :
    for i in range ( N ) :
        print ( arr [ i ] , end = ' ' )
    print ( )
    def replacedArray ( N , arr ) :
        global posSum , negSum , i , j , diff
        posSum = 0
        negSum = 0
        for i in range ( N - 1 , - 1 , - 1 ) :
            diff = abs ( posSum ) - abs ( negSum )
            if i > 0 :
                posSum += arr [ i ]
            else :
                negSum += arr [ i ]
        arr [ i ] = abs ( diff )
    return '' . join ( arr )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 44
---> probID: geeksforgeeks_3876_A
---> inputs:

---> outputs:
2 3 1 2 0 
2 2 4 1 2 0 


def GFG ( N , arr ) :
    for i in range ( N ) :
        print ( arr [ i ] , end = ' ' )
    print ( )
    def replacedArray ( N , arr ) :
        pos_sum , neg_sum , i , j , diff = 0 , 0 , 0 , 0 , 0
        for i in range ( N ) :
            pos_sum = 0
            neg_sum = 0
            for j in range ( i + 1 , N ) :
                if arr [ j ] > 0 :
                    pos_sum += arr [ j ]
                else :
                    neg_sum += arr [ j ]
            diff = abs ( pos_sum ) - abs ( neg_sum )
            arr [ i ] = abs ( diff )
        return arr
    def main ( ) :
        N = 5
        arr = [ 1 , - 1 , 2 , 3 , - 2 ]
        replacedArray ( N , arr )
        printArray ( N , arr )
        N = 6
        arr1 = [ - 3 , - 4 , - 2 , 5 , 1 , - 2 ]
        replacedArray ( N , arr1 )
        printArray ( N , arr1 )


---> console_out:
 
DIDN'T MATCH!! :(
  3%|▎         | 44/1746 [00:01<00:40, 42.06it/s]

-------------------------------------


---> lineNum: 45
---> probID: geeksforgeeks_2153_A
---> inputs:

---> outputs:
4


def count_divisbleby4 ( s ) :
    import string
    n = len ( s )
    count = 0
    for i in range ( n ) :
        if s [ i ] in [ '4' , '8' , '0' ] :
            count += 1
        for i in range ( n - 1 ) :
            h = ( s [ i ] - '0' ) * 10 + ( s [ i + 1 ] - '0' )
            if h % 4 == 0 :
                count = count + i + 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 46
---> probID: codeforces_1535_A
---> inputs:
4
3 7 9 5
4 5 6 9
5 3 8 1
6 5 3 2
---> outputs:
YES
NO
YES
NO

def cf1535A ( ) :
    import sys
    t = sys . maxsize
    for i in range ( 1 , t + 1 ) :
        a = [ ]
        for k in range ( 4 ) :
            a . append ( sys . stdin . read ( ) )
        if max ( a [ 0 ] , a [ 1 ] ) > min ( a [ 2 ] , a [ 3 ] ) and max ( a [ 2 ] , a [ 3 ] ) > min ( a [ 0 ] , a [ 1 ] ) :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 47
---> probID: codeforces_96_B
---> inputs:
4500
---> outputs:
4747

def main ( ) :
    import string
    number = int ( sys . stdin . readline ( ) )
    ans , value = - 1 , 0
    mask = 2
    while value < number :
        s = string . atoi ( mask )
        ans += 1
        zeros = 0
        for c in s :
            if c == '0' :
                zeros += 1
        if zeros != len ( s ) - zeros :
            continue
        s = s . replace ( '0' , '4' )
        s = s . replace ( '1' , '7' )
        value = int ( s )
    print ( value )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 48
---> probID: codeforces_1349_B
---> inputs:
5
5 3
1 5 2 6 1
1 6
6
3 2
1 2 3
4 3
3 1 2 3
10 3
1 2 3 4 5 6 7 8 9 10
---> outputs:
no
yes
yes
no
yes

def oracAndMedians_641B ( ) :
    import re
    f = open ( "oracAndMedians641B.txt" )
    cases = int ( f . readline ( ) )
    for case in range ( len ( f ) ) :
        f . readline ( )
        n = int ( f . readline ( ) )
        target = int ( f . readline ( ) )
        nums = [ ]
        f = list ( f )
        for i in range ( n ) :
            nums . append ( int ( f . readline ( ) ) )
        helper ( nums , target )
    def helper ( nums , target ) :
        is_target_found , can_print_yes = False , False
        score , prev = 0 , - 1
        for num in nums :
            if num == target :
                is_target_found = True
            if num < target :
                score -= 1
            else :
                score += 1
            if score > 0 and prev > - 1 :
                can_print_yes = True
            prev = score
            score = max ( score , 0 )
        if ( len ( nums ) == 1 or can_print_yes ) and is_target_found :
            print ( "yes" )
        else :
            print ( "no" )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 49
---> probID: codejam_10_12
---> inputs:
2
6 6 2 3
1 7 5
100 1 5 3
1 50 7

---> outputs:
Case #1: 4
Case #2: 17


def smooth ( ) :
    import math
    import random
    import sys
    import sys
    import math
    import random
    import sys
    import sys
    import math
    import random
    import sys
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    if math is None :
        return None
    

---> console_out:
 
DIDN'T MATCH!! :(
  3%|▎         | 49/1746 [00:01<00:40, 42.35it/s]  File "./junk/1692552966805_9967/main.py", line 5
    def del ( map , y , x ) :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 50
---> probID: aizu_p00067_A
---> inputs:
111100001111
111000001111
110000001111
100000001111
000100010000
000000111000
000001111100
100011111110
110001111100
111000111000
111100010000
000000000000

010001111100
110010000010
010010000001
010000000001
010000000110
010000111000
010000000100
010000000010
010000000001
010010000001
010010000010
111001111100

000000000000
111111111111
100010100001
100010100001
100010100001
100010100001
100100100101
101000011101
100000000001
100000000001
111111111111
100000000001
---> outputs:
5
13
4

def main ( ) :
    import string
    N = 12
    ofs = [ [ 1 , 0 ] , [ 0 , - 1 ] , [ - 1 , 0 ] , [ 0 , 1 ] ]
    def del ( map , y , x ) :
        map [ y ] [ x ] = False
        for i in range ( 4 ) :
            nx = x + ofs [ i ] [ 0 ]
            ny = y + ofs [ i ] [ 1 ]
            if 0 <= ny < N and ny < N and 0 <= nx < N :
                if map [ ny ] [ nx ] :
                    del map [ ny ] [ nx ]
    def solve ( map ) :
        c = 0
        for y in range ( N ) :
            for x in range ( N ) :
                if map [ y ] [ x ] :
                    c += 1
                    del map [ y ] [ x ]
        return c
    def io ( ) :
        with open ( './junk/1692552966805_9967/input.txt' , 'r' ) as f :
            data = [ ]
            for i in range ( N ) :
                data . append ( f . read ( ) )
        map = [ [ True ] * N for i in range ( N ) ]
        for y in range ( N ) :
            for x in range ( N ) :
                map [ y ] [ x ] = data [ y ] [ x ] == '1'
        print ( solve ( map ) )
        if len ( data ) > 0 :
            data = [ ]
        return data
    def main ( ) :
        return '' . join ( data )
    return main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 51
---> probID: geeksforgeeks_3141_A
---> inputs:

---> outputs:
Yes


def gf_div ( arr , n ) :
    if n == 0 or n == 1 :
        return True
    for i in range ( 1 , n ) :
        if arr [ i - 1 ] > arr [ i ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 52
---> probID: codeforces_1676_B
---> inputs:
5
5
1 2 3 4 5
6
1000 1000 5 1000 1000 1000
10
1 2 3 5 1 2 7 9 13 5
3
8 8 8
1
10000000
---> outputs:
10
4975
38
0
0

def candies ( ) :
    import string
    import math
    import math
    import numpy as np
    import numpy as np
    import numpy . fft as np
    import numpy . random as np
    import numpy . random as np
    x = np . random . rand ( a , a )
    x . sort ( )
    s = 0
    for i in range ( a ) :
        s += abs ( x [ i ] - x [ 0 ] )
    print ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 53
---> probID: geeksforgeeks_4980_A
---> inputs:

---> outputs:
4


def print_k_distinct ( arr , n , k ) :
    h = { }
    for i in range ( n ) :
        if arr [ i ] in h :
            h [ arr [ i ] ] = h [ arr [ i ] ] + 1
        else :
            h [ arr [ i ] ] = 1
    if len ( h ) < k :
        return - 1
    dist_count = 0
    for i in range ( n ) :
        if h [ arr [ i ] ] == 1 :
            dist_count += 1
        if dist_count == k :
            return arr [ i ]
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 54
---> probID: geeksforgeeks_1200_A
---> inputs:

---> outputs:
1
1
3
3


def GFG ( f ) :
    f [ 0 ] = 0
    f [ 1 ] = 1
    for i in range ( 2 , 59 + 1 ) :
        f [ i ] = ( f [ i - 1 ] + f [ i - 2 ] ) % 10
    def find_last_digit ( n ) :
        f = list ( f )
        f . sort ( )
        index = int ( n % 60. )
        return f [ index ]
    def main ( ) :
        global n
        ob = GFG ( )
        n = 1
        print ( ob . find_last_digit ( n ) )
        n = 61
        print ( ob . find_last_digit ( n ) )
        n = 7
        print ( ob . find_last_digit ( n ) )
        n = 67
        print ( ob . find_last_digit ( n ) )
    return None


---> console_out:
 
DIDN'T MATCH!! :(
  3%|▎         | 54/1746 [00:01<00:39, 42.59it/s]

-------------------------------------


---> lineNum: 55
---> probID: atcoder_ABC042_A
---> inputs:
5 5 7
---> outputs:
YES

def main ( ) :
    import string
    try :
        data = string . strip ( )
        num_1 = int ( data )
        data = string . strip ( )
        num_2 = int ( data )
        data = string . strip ( )
        num_3 = int ( data )
        if num_1 == 7 :
            if num_2 == 5 and num_3 == 5 :
                print ( "YES" )
            else :
                print ( "NO" )
        elif num_2 == 7 :
            if num_1 == 5 and num_3 == 5 :
                print ( "YES" )
            else :
                print ( "NO" )
        elif num_3 == 7 :
            if num_2 == 5 and num_1 == 5 :
                print ( "YES" )
            else :
                print ( "NO" )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 56
---> probID: atcoder_ABC078_D
---> inputs:
3 100 100
10 1000 100
---> outputs:
900

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        z = int ( sys . stdin . readline ( ) )
        w = int ( sys . stdin . readline ( ) )
        a = [ ]
        for i in range ( n ) :
            a . append ( sys . stdin . readline ( ) )
        if n == 1 :
            print ( abs ( w - a [ 0 ] ) )
            return
        ans1 = abs ( a [ n - 2 ] - a [ n - 1 ] )
        ans2 = abs ( w - a [ n - 1 ] )
        print ( max ( ans1 , ans2 ) )
    except ValueError :
        print ( 'Error running %s' % ( ' ' . join ( a ) ) )
        return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 57
---> probID: geeksforgeeks_487_A
---> inputs:

---> outputs:
4 5 5 6 6 6 

def count_ele_less_equal ( arr1 , arr2 , m , n ) :
    import sys
    for i in range ( m ) :
        count = 0
        for j in range ( n ) :
            if arr2 [ j ] <= arr1 [ i ] :
                count += 1
        sys . stdout . write ( "%d " % count )
    return m


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552966990_1100/main.py", line 4
    , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi ,
                         ^
SyntaxError: trailing comma not allowed without surrounding parentheses


-------------------------------------


---> lineNum: 58
---> probID: codeforces_870_B
---> inputs:
5 2
1 2 3 4 5
---> outputs:
5

def maximum_of_maximums_of_minimums ( ) :
    import sys
    from math import sin , cos , pi
    from math import pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi ,

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 59
---> probID: codeforces_776_A
---> inputs:
ross rachel
4
ross joey
rachel phoebe
phoebe monica
monica chandler
---> outputs:
ross rachel
joey rachel
joey phoebe
joey monica
joey chandler

def main ( args ) :
    import sys
    import string
    name1 , name2 = string . split ( " " ) [ 0 ] , string . split ( " " ) [ 0 ]
    print ( name1 , name2 )
    n = len ( sys . argv )
    while True :
        s1 , s2 = string . split ( " " ) [ 0 ] , string . split ( " " ) [ 1 ]
        if s1 == name1 :
            name1 = s2
        if s1 == name2 :
            name2 = s2
        print ( name1 , name2 )
        n -= 1
        if not n :
            break


---> console_out:
 
DIDN'T MATCH!! :(
  3%|▎         | 59/1746 [00:01<00:39, 42.70it/s]

-------------------------------------


---> lineNum: 60
---> probID: codeforces_710_B
---> inputs:
4
1 2 3 4
---> outputs:
2

def main ( ) :
    import sys
    from io import BytesIO
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 61
---> probID: codeforces_897_B
---> inputs:
2 100
---> outputs:
33

def main ( ) :
    import sys
    from io import BytesIO
    from io import BufferedWriter
    from io import StringIO
    from io import BufferedReader
    from io import BufferedWriter
    from io import StringIO
    from io import BufferedReader
    from io import BufferedWriter
    from io import StringIO
    from io import BufferedReader
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import BufferedReader
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import BufferedReader
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import BufferedReader
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import StringIO
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import StringIO
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 62
---> probID: atcoder_AGC005_B
---> inputs:
1
1
---> outputs:
1

def main ( ) :
    import string
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    a = [ 0 ] * n
    p = [ 0 ] * n
    for i in range ( n ) :
        a [ i ] = sys . stdin . readline ( ) - 1
        p [ a [ i ] ] = i
    x = sorted ( a )
    l = [ 0 ] * n
    r = [ 0 ] * n
    for i in range ( n ) :
        x . append ( p [ i ] )
        if x [ 0 ] == p [ i ] :
            l [ i ] = p [ i ] + 1
        else :
            lower = x . lower ( p [ i ] )
            l [ i ] = p [ i ] - lower
        if x [ 0 ] == p [ i ] :
            r [ i ] = n - p [ i ]
        else :
            high = x . higher ( p [ i ] )
            r [ i ] = high - p [ i ]
    ans = 0
    for i in range ( n ) :
        ans += int ( l [ i ] ) * r [ i ] * ( i + 1 )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552967113_5062/main.py", line 20
    return lps ( seq )
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 63
---> probID: geeksforgeeks_3935_A
---> inputs:

---> outputs:
The length of the LPS is 5


def LPS ( x , y ) : return ( x if x > y else y )
def lps ( seq ) :
    n = len ( seq )
    i , j , cl = 0 , 0 , 0
    L = [ [ 0 ] * n for i in range ( n ) ]
    for cl in range ( 2 , n + 1 ) :
        for i in range ( n - cl + 1 ) :
            j = i + cl - 1
            if seq [ i ] == seq [ j ] and cl == 2 :
                L [ i ] [ j ] = 2
            elif seq [ i ] == seq [ j ] :
                L [ i ] [ j ] = L [ i + 1 ] [ j - 1 ] + 2
            else :
                L [ i ] [ j ] = max ( L [ i ] [ j - 1 ] , L [ i + 1 ] [ j ] )
    return L [ 0 ] [ n - 1 ]
def main ( args ) :
    seq = 'GEEKSFORGEEKS'
    n = len ( seq )
    print ( 'The length of the LPS is %d' % lps ( seq ) )
return lps ( seq )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 64
---> probID: geeksforgeeks_906_A
---> inputs:

---> outputs:
12 = 3 + 4 + 5

def find_consecutive ( N ) :
    for last in range ( 1 , N ) :
        for first in range ( last ) :
            if 2 * N == ( last - first ) * ( last + first + 1 ) :
                print ( '%d = ' % N , end = ' ' )
                print_consecutive ( last , first + 1 )
                return
    print ( '-1' , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
  4%|▎         | 64/1746 [00:01<00:40, 42.05it/s]

-------------------------------------


---> lineNum: 65
---> probID: codeforces_761_A
---> inputs:
2 3
---> outputs:
YES

def main ( ) :
    import sys
    import os
    import sys
    if not sys . stdin . isatty ( ) :
        sys . stdin . write ( 'no' )
        sys . stdout . flush ( )
    else :
        if not sys . stdin . isatty ( ) :
            sys . stdin . write ( 'no' )
            sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 66
---> probID: geeksforgeeks_1240_A
---> inputs:

---> outputs:
924


def __gcd ( a , b ) :
    import math
    if not a or not b :
        return 0
    if a == b :
        return a
    if a > b :
        return math . gcd ( a - b , b )
    return math . gcd ( a , b - a )
def NumberOfSquares ( x , y ) :
    s = math . gcd ( x , y )
    ans = ( x * y ) / ( s * s )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 67
---> probID: geeksforgeeks_2873_A
---> inputs:

---> outputs:
Yes


def is_alphabatic_order ( s ) :
    import string
    n = len ( s )
    c = [ ]
    for i in range ( n ) :
        c . append ( s [ i ] )
    c . sort ( )
    for i in range ( n ) :
        if c [ i ] != s [ i ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 68
---> probID: geeksforgeeks_659_A
---> inputs:

---> outputs:
3 4 5 6 7 8 9 10 

def GFG ( arr , n , k ) :
    global j , max
    for i in range ( 0 , n - k + 1 ) :
        max = arr [ i ]
        for j in range ( 1 , k ) :
            if arr [ i + j ] > max :
                max = arr [ i + j ]
        print ( max , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 69
---> probID: atcoder_AGC011_C
---> inputs:
100 50
1 63
57 63
13 75
56 87
27 31
29 35
79 84
14 56
48 52
29 39
43 53
48 96
27 69
32 77
52 83
22 88
26 79
25 78
57 75
11 24
70 79
4 61
74 79
15 16
31 74
27 43
44 51
61 100
33 98
37 92
71 98
30 61
35 39
63 82
49 91
27 99
18 87
4 45
51 99
44 58
1 50
3 77
6 76
36 80
74 80
40 77
6 25
21 27
24 93
1 8
---> outputs:
6396

def main ( ) :
    import time
    global graph
    global visited
    global color
    global one
    global bipartite
    global count
    global mujun
    def dfs ( a , c ) :
        if visited [ a ] :
            if color [ a ] >= 0 and color [ a ] != c :
                mujun = True
            return 0
        visited [ a ] = True
        color [ a ] = c
        total = 1
        for b in graph [ a ] :
            total += dfs ( b , 1 - c )
        return total
    def dfs ( a , c ) :
        try :
            n , m = int ( a ) , int ( c )
        except ValueError :
            pass
        graph = [ [ ] ]
        for i in range ( n ) :
            graph . append ( [ ] )
        for i in range ( m ) :
            u , v = int ( a ) - 1 , int ( c ) - 1
            graph [ u ] . append ( v )
            graph [ v ] . append ( u )
        visited = [ False ]
        color = [ False ] * n
        color = [ False ] * n
        color [ False ] = - 1
        one = 0
        bipartite = 0
        count = 0
        for i in range ( n ) :
            if visited [ i ] :
                continue
            count += 1
            mujun = False
            kind = dfs ( i , 0 )
            if kind == 1 :
                one += 1
            elif not mujun :
                bipartite += 1
        total = one * ( 2 * n - one )
        total += ( count - one ) ** 2
        total += bipartite ** 2
        print ( total )
    def main ( ) :
        time . sleep ( 1 )
    return None


---> console_out:
 
DIDN'T MATCH!! :(
  4%|▍         | 69/1746 [00:01<00:39, 42.25it/s]

-------------------------------------


---> lineNum: 70
---> probID: codeforces_760_B
---> inputs:
4 6 2
---> outputs:
2

def _import ( ) :
    from io import StringIO
    from io import BufferedWriter
    from math import pow as f
    from io import StringIO
    from io import BytesIO
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552967302_7507/main.py", line 24
    return self . x == other . x and self . y == other .
                                                       ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 71
---> probID: atcoder_ABC075_D
---> inputs:
4 4
1 4
3 3
6 2
8 1
---> outputs:
21

def main ( ) :
    import sys
    class Main ( sys . argv [ 1 ] ) :
        def __init__ ( self ) :
            self . x = None
            self . y = None
        def __lt__ ( self , other ) :
            return self . x < other . x
        def __gt__ ( self , other ) :
            return self . y < other . y
        def __eq__ ( self , other ) :
            return self . x == other . x == other . y == other . x
        def __ne__ ( self , other ) :
            return self . y != other . y
        def __eq__ ( self , other ) :
            return self . x == other . x == other . y == other . y == other . x == other . y == other . y
        def __eq__ ( self , other ) :
            return self . x == other . x == other . x == other . y == other . x == other . y == other . y == other . x == other . y == other . y == other . y
        def __eq__ ( self , other ) :
            return self . x == other . x == other . x == other . y == other . x == other . y == other . x == other . y == other . y == other . x == other . y == other . y == other . x == other . y == other . y == other . x == other . y == other . y == other . x == other . y == other . y == other . x == other . y == other . y == other . x == other . y == other . y == other . x == other . y == other . x == other . y == other . y == other . x == other . y == other . y == other . x == other . y == other . y == other . x == other . y == other . x == other . y == other . y == other . x == other . y == other . y == other . x == other . y . x == other . y . y == other . x
        def __eq__ ( self , other ) :
            return self . x == other . x == other . x == other . x and self . y == other . y == other . y
        def __eq__ ( self , other ) :
            return self . x == other . x and self . y == other .

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 72
---> probID: codeforces_1575_A
---> inputs:
5 2
AA
AB
BB
BA
AZ
---> outputs:
5 2 1 3 4

def main ( ) :
    import string
    def comp ( a , b ) :
        for i , c in enumerate ( a ) :
            if c < b [ i ] :
                return - 1 + ( i % 2 ) * 2
            elif c > b [ i ] :
                return 1 - ( i % 2 ) * 2
        return 0
    def main ( ) :
        sc = string . split ( a )
        n , m = sc [ 0 ] , sc [ 1 ]
        a = [ ]
        ids = { }
        for i in range ( n ) :
            a . append ( sc . strip ( ) )
            ids [ a [ i ] ] = i + 1
        a . sort ( comp )
        for x in a :
            print ( ids [ x ] , end = ' ' )
        print ( )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 73
---> probID: geeksforgeeks_972_A
---> inputs:

---> outputs:
e
ek
k


def pre_process ( substrings , s ) :
    n = len ( s )
    count = 0
    for i in range ( n ) :
        dup = ""
        for j in range ( i , n ) :
            dup += s [ j ]
            count += 1
    substrings = list ( substrings )
    for i in range ( len ( substrings ) - 1 ) :
        for j in range ( i + 1 , len ( substrings ) ) :
            if substrings [ i ] > substrings [ j ] :
                temp = substrings [ i ]
                substrings [ i ] = substrings [ j ]
                substrings [ j ] = temp
def main ( args ) :
    s = "geek"
    substrings = [ ]
    pre_process ( substrings , s )
    queries = [ 1 , 5 , 10 ]
    q = len ( queries )
    for i in range ( q ) :
        print ( substrings [ queries [ i ] - 1 ] )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552967375_8047/main.py", line 7
    break
    ^
SyntaxError: 'break' outside loop


-------------------------------------


---> lineNum: 74
---> probID: aizu_p00686_A
---> inputs:
6 5
FORWARD 3
RIGHT
FORWARD 5
LEFT
BACKWARD 2
STOP
3 1
FORWARD 2
STOP
0 0
---> outputs:
6 2
1 1

def main ( ) :
    import sys
    try :
        w = sys . stdin . tell ( )
        h = sys . stdin . tell ( )
        if w == 0 and h == 0 :
            break
    except :
        pass
    else :
        print ( '%d %d' % ( w , h ) )
        return 1
    d = 0
    x = 0
    y = 0
    c = None
    while True :
        s = sys . stdin . read ( 1 )
        c = s [ 0 ]
        if c == 'S' :
            print ( ( x + 1 ) , ( y + 1 ) )
            break
        elif c == 'R' :
            d += 1
            if d == 4 :
                d = 0
        elif c == 'L' :
            d -= 1
            if d == - 1 :
                d = 3
        elif ( c == 'F' and d == 0 ) or ( c == 'B' and d == 2 ) :
            t = sys . stdin . read ( 1 )
            y += t
            if y > h - 1 :
                y = h - 1
        elif ( c == 'F' and d == 1 ) or ( c == 'B' and d == 3 ) :
            t = sys . stdin . read ( 1 )
            x += t
            if x > w - 1 :
                x = w - 1
        elif ( c == 'F' and d == 2 ) or ( c == 'B' and d == 0 ) :
            t = sys . stdin . read ( 1 )
            y -= t
            if y < 0 :
                y = 0
        elif ( c == 'F' and d == 3 ) or ( c == 'B' and d == 1 ) :
            t = sys . stdin . read ( 1 )
            x -= t
            if x < 0 :
                x = 0


---> console_out:
 
DIDN'T MATCH!! :(
  4%|▍         | 74/1746 [00:01<00:39, 41.81it/s]

-------------------------------------


---> lineNum: 75
---> probID: codeforces_978_B
---> inputs:
6
xxxiii
---> outputs:
1

def main ( ) :
    import string
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        data = '' . join ( data )
        count = 0
        total = 0
        for c in data :
            if c == 'x' :
                count += 1
                continue
            else :
                if count >= 3 :
                    total += count - 2
                    count = 0
                count = 0
        if count >= 3 :
            total += count - 2
            count = 0
        print ( total )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 76
---> probID: aizu_p00174_A
---> inputs:
ABAABBBAABABAAABBAA
AABBBABBABBAAABABABAAB
BABAABAABABABBAAAB
AABABAAABBAABBBABAA
AAAAAAAAAAA
ABBBBBBBBBB
0
---> outputs:
11 8
10 12
11 7
11 8
11 0
0 11

def main ( ) :
    import string
    f = open ( '/etc/init.d/' )
    while True :
        a = f . readline ( )
        num = a . strip ( ) . split ( ' ' )
        if num [ 0 ] == '0' :
            break
        A , B = 0 , 0
        for c in num [ 1 : ] :
            if c == 'A' :
                A += 1
            else :
                B += 1
        if A > B :
            A += 1
        else :
            B += 1
        print ( '%d %d' % ( A , B ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 77
---> probID: geeksforgeeks_4565_A
---> inputs:

---> outputs:
384


def fact ( N ) :
    import math
    import random
    product = 1
    for i in range ( 1 , N + 1 ) :
        product = product * i
    return product


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 78
---> probID: geeksforgeeks_2543_A
---> inputs:

---> outputs:
7


def longest_sub_array ( arr , n ) :
    is_zero_present = False
    for i in range ( n ) :
        if arr [ i ] == 0 :
            is_zero_present = True
            break
    if is_zero_present :
        return n
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 79
---> probID: codeforces_1107_B
---> inputs:
3
1 5
5 2
3 1
---> outputs:
5
38
19

def main ( ) :
    import sys
    try :
        t = sys . stdin . read ( )
    except AttributeError :
        t = 0
    for i in range ( t ) :
        k = sys . stdin . read ( )
        x = sys . stdin . read ( )
        f = k * 9
        for y in range ( x , 9 ) :
            f -= 1
        print ( f )


---> console_out:
 
DIDN'T MATCH!! :(
  5%|▍         | 79/1746 [00:01<00:39, 42.36it/s]

-------------------------------------


---> lineNum: 80
---> probID: geeksforgeeks_826_A
---> inputs:

---> outputs:
56


def maximum_area ( l , b , x , y ) :
    global left , right , above , below
    left = x * b
    right = ( l - x - 1 ) * b
    above = l * y
    below = ( b - y - 1 ) * l
    print ( max ( max ( left , right ) , max ( above , below ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552967539_7663/main.py", line 31
    return None
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 81
---> probID: geeksforgeeks_4907_A
---> inputs:

---> outputs:
The length of the smallest substring consisting of maximum distinct characters : 5


def GFG ( data , n ) :
    NO_OF_CHARS = 256
    count = [ 0 ] * NO_OF_CHARS
    for c in data :
        count [ ord ( c ) ] += 1
    max_distinct = 0
    for c in data :
        if c in count :
            max_distinct += 1
    return max_distinct
def smallest_substr_max_distict_char ( data ) :
    n = len ( data )
    max_distinct = max_distinct_char ( data , n )
    minl = n
    for i in range ( n ) :
        for j in range ( n ) :
            subs = None
            if i < j :
                subs = data [ i : j ]
            else :
                subs = data [ j : i ]
            subs_lenght = len ( subs )
            sub_distinct_char = max_distinct_char ( subs , subs_lenght )
            if subs_lenght < minl and max_distinct == sub_distinct_char :
                minl = subs_lenght
    return minl
def main ( ) :
    data = 'AABBBCBB'
    data = smallest_substr_max_distict_char ( data )
    print ( 'The length of the smallest substring consisting of maximum distinct characters : %d' % data )
return None


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552967562_1999/main.py", line 37
    return main
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 82
---> probID: codeforces_1722_B
---> inputs:
6
2
RG
RB
4
GRBG
GBGB
5
GGGGG
BBBBB
7
BBBBBBB
RRRRRRR
8
RGBRRGBR
RGGRRBGR
1
G
G
---> outputs:
YES
NO
YES
NO
YES
YES

def aver ( arr ) :
    sum = 0
    for i in arr :
        sum = sum + i
    return sum / len ( arr )
def fac ( x ) :
    sum = 1
    while x > 0 :
        sum = sum * x
        x = x - 1
    return sum
def comb ( x , y ) :
    sum = 0
    sum = fac ( x )
    temp = ( fac ( y ) * fac ( x - y ) )
    return sum / temp
def main ( ) :
    with open ( '/proc/' ) as f :
        n = len ( f )
        while n > 0 :
            f . seek ( 0 )
            f . truncate ( 0 )
            s = f . read ( 1 )
            flag = True
            for c in f :
                if c == 'R' :
                    if c in [ 'B' , 'G' ] :
                        flag = False
                if c == 'R' :
                    if c in [ 'B' , 'G' ] :
                        flag = False
            if flag :
                print ( 'YES' )
            else :
                print ( 'NO' )
            n = n - 1
return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 83
---> probID: geeksforgeeks_4843_A
---> inputs:

---> outputs:
2


def find_number_of_even_cells ( n , q , size ) :
    row = [ 0 ] * n
    col = [ 0 ] * n
    for i in range ( size ) :
        x = q [ i ] [ 0 ]
        y = q [ i ] [ 1 ]
        row [ x - 1 ] += 1
        col [ y - 1 ] += 1
    r1 , r2 = 0 , 0
    c1 , c2 = 0 , 0
    for i in range ( n ) :
        if row [ i ] % 2 == 0 :
            r1 += 1
        if row [ i ] % 2 == 1 :
            r2 += 1
        if col [ i ] % 2 == 0 :
            c1 += 1
        if col [ i ] % 2 == 1 :
            c2 += 1
    count = r1 * c1 + r2 * c2
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 84
---> probID: geeksforgeeks_4884_A
---> inputs:

---> outputs:
Increasing


def check_type ( arr , n ) :
    import numpy as np
    if arr [ 0 ] <= arr [ 1 ] <= arr [ n - 2 ] <= arr [ n - 1 ] :
        print ( "Increasing" )
    elif arr [ 0 ] >= arr [ 1 ] and arr [ n - 2 ] >= arr [ n - 1 ] :
        print ( "Decreasing" )
    elif arr [ 0 ] <= arr [ 1 ] and arr [ n - 2 ] >= arr [ n - 1 ] :
        print ( "Increasing then decreasing" )
    else :
        print ( "Decreasing then increasing" )


---> console_out:
 
DIDN'T MATCH!! :(
  5%|▍         | 84/1746 [00:02<00:39, 42.33it/s]

-------------------------------------


---> lineNum: 85
---> probID: codeforces_1437_B
---> inputs:
3
2
10
4
0110
8
11101000
---> outputs:
0
1
2

def main ( ) :
    import sys
    bf = sys . stdin . read ( )
    t = int ( bf . strip ( ) )
    for i in range ( t ) :
        n = int ( bf . strip ( ) )
        arr = bf . strip ( )
        arr2 = [ ]
        for j in range ( 0 , n - 1 ) :
            arr2 . append ( arr [ j ] )
        for j in range ( 0 , n - 1 ) :
            if j % 2 == 0 :
                arr2 . append ( '0' )
            else :
                arr2 . append ( '1' )
        cur = 0
        for j in range ( 0 , n - 1 ) :
            if arr [ j ] == arr2 [ j ] :
                continue
            for k in range ( j , n - 1 ) :
                if arr [ k ] == arr2 [ k ] :
                    break
            cur += 1
            j = k - 1
        ans = sys . maxsize
        ans = min ( ans , cur )
        for j in range ( 0 , n - 1 ) :
            if j % 2 == 1 :
                arr2 [ j ] = '0'
            else :
                arr2 [ j ] = '1'
        cur = 0
        for j in range ( 0 , n - 1 ) :
            if arr [ j ] == arr2 [ j ] :
                continue
            for k in range ( j , n - 1 ) :
                if arr [ k ] == arr2 [ k ] :
                    break
            cur += 1
            j = k - 1
        ans = min ( ans , cur )
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552967656_7556/main.py", line 22
    from numpy . math import sin , cos , sin , cos , tan , cot , cot = np
                                                                     ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 86
---> probID: codeforces_337_B
---> inputs:
1 1 3 2
---> outputs:
1/3

def code_forces ( ) :
    import sys
    import os
    import math
    import random
    import math
    import numpy as np
    import numpy . fft as np
    import numpy . random
    import numpy . random as np
    import numpy . random as np
    import numpy . random
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random
    import numpy . random as np
    import numpy . random as np
    from numpy . math import sin , cos , sin , cos , tan , cot , cot = np
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random . random ( ( 2 , 2 , 2 , 2 ) )
    a = np . random .

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 87
---> probID: geeksforgeeks_3703_A
---> inputs:

---> outputs:
4


def number_of_ways ( x ) :
    import numpy as np
    dp = np . zeros ( x + 1 )
    dp [ 0 ] = dp [ 1 ] = 1
    for i in range ( 2 , x + 1 ) :
        dp [ i ] = dp [ i - 1 ] + ( i - 1 ) * dp [ i - 2 ]
    return dp [ x ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 88
---> probID: geeksforgeeks_4403_A
---> inputs:

---> outputs:
[-1, -3, -7, 4, 5, 6, 2, 8, 9]


def gf_rearrange ( arr , n ) :
    j , temp = 0 , 0
    for i in range ( n ) :
        if arr [ i ] < 0 :
            if i != j :
                temp = arr [ i ]
                arr [ i ] = arr [ j ]
                arr [ j ] = temp
            j += 1
    def main ( args ) :
        arr = [ - 1 , 2 , - 3 , 4 , 5 , 6 , - 7 , 8 , 9 ]
        n = len ( arr )
        rearrange ( arr , n )
        print ( str ( arr ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 89
---> probID: geeksforgeeks_1727_A
---> inputs:

---> outputs:
7th Centered square number: 85


def centered_square_num ( n ) :
    import sys
    n = 7
    print ( '%dth Centered' % n + ' square number: %d' % centered_square_num ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(
  5%|▌         | 89/1746 [00:02<00:38, 42.58it/s]  File "./junk/1692552967748_5539/main.py", line 40
    
                                                  ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 90
---> probID: codeforces_1327_A
---> inputs:
6
3 1
4 2
10 3
10 2
16 4
16 5
---> outputs:
YES
YES
NO
YES
YES
NO

def teest ( ) :
    import sys
    import os
    import subprocess
    class teest ( subprocess . Popen ) :
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self . communicate ) . communicate ( ) [ 0 ]
        def communicate ( self , * args ) :
            return subprocess . Popen ( self .

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 91
---> probID: codeforces_1248_B
---> inputs:
3
1 2 3
---> outputs:
26

def main ( ) :
    import sys
    import numpy as np
    import numpy . testing . ufuncs as ufuncs
    n = len ( sys . argv )
    nums = [ np . random . randint ( 0 , n , n ) for i in range ( n ) ]
    nums . sort ( )
    first_half = second_half = 0
    length = n // 2
    for i in range ( length ) :
        first_half += nums [ i ]
    for i in range ( length , n ) :
        second_half += nums [ i ]
    result = ( first_half ** 2 ) + ( second_half ** 2 )
    print ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 92
---> probID: geeksforgeeks_307_A
---> inputs:

---> outputs:
Length of longest subarray having maximum sum = 4


def max_subarray_sum ( arr , size ) :
    max_so_far = arr [ 0 ]
    curr_max = arr [ 0 ]
    for i in range ( 1 , size ) :
        curr_max = max ( arr [ i ] , curr_max + arr [ i ] )
        max_so_far = max ( max_so_far , curr_max )
    return max_so_far
def len_of_long_subarr_with_given_sum ( arr , n , k ) :
    um = { }
    sum , max_len = 0 , 0
    for i in range ( n ) :
        sum += arr [ i ]
        if sum == k :
            max_len = i + 1
        if sum in um :
            um [ sum ] = i
        if sum - k in um :
            if max_len < ( i - um [ sum - k ] ) :
                max_len = i - um [ sum - k ]
    return max_len
def len_long_subarr_with_max_sum ( arr , n ) :
    max_sum = max_subarray_sum ( arr , n )
    return len_of_long_subarr_with_given_sum ( arr , n , max_sum )
def main ( args ) :
    arr = [ 5 , - 2 , - 1 , 3 , - 4 ]
    n = len ( arr )
    print ( "Length of longest subarray " "having maximum sum = %d" % len_long_subarr_with_max_sum ( arr , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 93
---> probID: aizu_p01880_A
---> inputs:
2
1 2
---> outputs:
2

def main ( ) :
    import sys
    import os
    import sys
    import math
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    import pickle
    pickle = pickle
    pickle = pickle
    pickle = pickle
    # Make sure we get a pickle file available
    try :
        pickle
    except :
        pass
    else :
        pickle = pickle
    if sys . version_info [ 0 ] < 3 :
        import pickle
        pickle = pickle
    if sys . version_info [ 1 ] < 3 :
        import pickle
        pickle = pickle
    if sys . version_info [ 2 ] < 3 :
        import pickle
        pickle = pickle . load ( sys . stdout )
    if sys . version_info [ 3 ] < 3 :
        import pickle
        pickle = pickle . loads ( pickle )
    if sys . version_info [ 3 ] < 3 :
        import pickle
        pickle = pickle . load ( sys . stdout )
    if sys . version_info [ 3 ] < 3 :
        import pickle
        pickle = pickle . loads ( pickle . dumps ( pickle ) )
    if sys . version_info [ 3 ] < 3 :
        import pickle
        pickle = pickle . loads ( pickle . dumps ( pickle ) )
    if sys . version_info [ 3 ] < 3 :
        import pickle
        pickle = pickle . loads ( pickle . dumps ( pickle ) )
    if sys . version_info [ 3 ] < 3 :
        import pickle
        pickle = pickle . loads ( pickle . dumps ( pickle ) )
    if sys . version_info [ 3 ] < 3 :
        import pickle
        pickle = pickle . loads ( pickle . dumps ( pickle . loads ( pickle . dumps ( pickle ) ) ) )
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 94
---> probID: geeksforgeeks_2848_A
---> inputs:

---> outputs:
3, 1


def GFG ( dividend , divisor , start , end ) :
    if start > end :
        return [ 0 , dividend ]
    mid = start + ( end - start ) // 2
    n = dividend - divisor * mid
    if n > divisor :
        start = mid + 1
    elif n < 0 :
        end = mid - 1
    else :
        if n == divisor :
            mid += 1
            n = 0
        return [ mid , n ]
    return [ dividend , divisor , start , end ]


---> console_out:
 
DIDN'T MATCH!! :(
  5%|▌         | 94/1746 [00:02<00:39, 42.28it/s]

-------------------------------------


---> lineNum: 95
---> probID: codeforces_567_A
---> inputs:
4
-5 -2 2 7
---> outputs:
3 12
3 9
4 7
5 12

def omar ( ) :
    import math
    import math
    import math
    import math
    import math
    class omar ( math ) :
        def __init__ ( self ) :
            self . size = len ( self . size )
            min , max = 0 , 0
            arr = [ ]
            for i in range ( self . size ) :
                arr . append ( self . size )
            for i in range ( self . size ) :
                if i == 0 :
                    min = abs ( arr [ i ] - arr [ i + 1 ] )
                    max = abs ( arr [ i ] - arr [ self . size - 1 ] )
                elif i == self . size - 1 :
                    min = abs ( arr [ i ] - arr [ i - 1 ] )
                    max = abs ( arr [ i ] - arr [ 0 ] )
                elif i != 0 and i != self . size - 1 :
                    min = min ( abs ( arr [ i ] - arr [ i - 1 ] ) , abs ( arr [ i ] - arr [ i + 1 ] ) )
                    max = max ( abs ( arr [ i ] - arr [ self . size - 1 ] ) , abs ( arr [ i ] - arr [ 0 ] ) )
                print ( min , max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 96
---> probID: codeforces_1198_A
---> inputs:
6 1
2 1 2 3 4 3
---> outputs:
2

def main ( ) :
    import sys
    import random
    n = int ( sys . stdin . read ( ) )
    disk_size = sys . maxsize * 8
    sounds = [ None ] * n
    sounds . sort ( )
    distinctvals = [ 0 ] * n
    distinctamt = [ 0 ] * n
    k = - 1
    for i in range ( n ) :
        if i == 0 or sounds [ i ] > sounds [ i - 1 ] :
            distinctvals [ k ] = sounds [ i ]
            distinctamt [ k ] = 1
        else :
            distinctamt [ k ] += 1
    k += 1
    answer = n
    curramt = distinctamt [ 0 ]
    for i , j in enumerate ( sorted ( distinctamt ) ) :
        while j < i or ( j < k - 1 and n * lg ( j + 1 - i + 1 ) <= disk_size ) :
            j += 1
            curramt += distinctamt [ j ]
        answer = min ( answer , n - curramt )
    print ( answer )
    def lg ( n ) :
        res = 0
        while n > ( 1 << res ) :
            res += 1
        return res
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 97
---> probID: geeksforgeeks_4345_A
---> inputs:

---> outputs:
Move disk 1 from rod A to rod D
Move disk 2 from rod A to rod B
Move disk 1 from rod D to rod B
Move disk 3 from rod A to rod C
Move disk 4 from rod A to rod D
Move disk 3 from rod C to rod D
Move disk 1 from rod B to rod C
Move disk 2 from rod B to rod D
Move disk 1 from rod C to rod D


def towerOfHanoi ( n , fromRod , toRod , auxRod1 , auxRod2 ) :
    if not n :
        return
    if n == 1 :
        print ( "Move disk %d from rod %d to rod %d" % ( n , fromRod , toRod ) )
        return
    towerOfHanoi ( n - 2 , fromRod , auxRod1 , auxRod2 , toRod )
    print ( "Move disk %d from rod %d to rod %d" % ( n - 1 , fromRod , auxRod2 ) )
    print ( "Move disk %d from rod %d to rod %d" % ( n , fromRod , auxRod2 ) )
    print ( "Move disk %d from rod %d to rod %d" % ( n - 1 , auxRod2 , auxRod2 ) )
    towerOfHanoi ( n - 2 , auxRod1 , toRod , fromRod , auxRod2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 98
---> probID: codeforces_133_B
---> inputs:
,.
---> outputs:
220

def main ( ) :
    import sys
    r = sys . stdin . read ( )
    n = r . strip ( )
    res = ""
    for c in n :
        if c == ">" :
            res += "1000"
        elif c == "<" :
            res += "1001"
        elif c == "+" :
            res += "1010"
        elif c == "-" :
            res += "1011"
        elif c == "." :
            res += "1100"
        elif c == "," :
            res += "1101"
        elif c == "[" :
            res += "1110"
        elif c == "]" :
            res += "1111"
    k = 0
    m = 0
    for c in res [ : - 1 ] :
        y = int ( "%d" % ord ( c ) )
        m += int ( ( pow ( 2 , k ) % 1000003 ) * y ) % 1000003
        k += 1
    print ( m % 1000003 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 99
---> probID: aizu_p02460_A
---> inputs:
8
0 blue 4
0 red 1
0 white 5
1 red
1 blue
2 red
1 black
1 red
---> outputs:
1
4
0
0

def main ( ) :
    import sys
    import os
    import string
    import string
    import string
    try :
        import simplejson as json
    except :
        import simplejson as json
    dic = { }
    count = len ( json . loads ( sys . stdin . read ( ) ) )
    for i in range ( count ) :
        command = json . loads ( sys . stdin . read ( ) ) [ 0 ]
        if command == 0 :
            dic [ json . loads ( sys . stdin . read ( ) ) [ 0 ] ] = json . loads ( sys . stdin . read ( ) ) [ 0 ]
        elif command == 1 :
            key = json . loads ( sys . stdin . read ( ) ) [ 0 ]
            if dic . get ( key ) is not None :
                print ( dic [ key ] )
            else :
                print ( 0 )
        elif command == 2 :
            del dic [ json . loads ( sys . stdin . read ( ) ) [ 0 ] ]
    return dic


---> console_out:
 
DIDN'T MATCH!! :(
  6%|▌         | 99/1746 [00:02<00:38, 42.25it/s]

-------------------------------------


---> lineNum: 100
---> probID: geeksforgeeks_3771_A
---> inputs:

---> outputs:
20


def min_sum ( arr , n ) :
    import sys
    sum , prev = arr [ 0 ] , arr [ 0 ]
    for i in range ( 1 , n ) :
        if arr [ i ] <= prev :
            prev = prev + 1
            sum = sum + prev
        else :
            sum = sum + arr [ i ]
            prev = arr [ i ]
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 101
---> probID: geeksforgeeks_3564_A
---> inputs:

---> outputs:
6


def find_n ( k ) :
    import sys
    if k == 0 :
        ans = 3
    if k == 1 :
        ans = 1
    elif k % 4 == 0 :
        ans = k
    elif k % 4 == 3 :
        ans = k - 1
    else :
        ans = - 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 102
---> probID: geeksforgeeks_326_A
---> inputs:

---> outputs:
3


def subset_XOR ( arr , n , K ) :
    max_ele = arr [ 0 ]
    for i in range ( 1 , n ) :
        if arr [ i ] > max_ele :
            max_ele = arr [ i ]
    m = ( 1 << int ( math . log ( max_ele ) / math . log ( 2 ) + 1 ) ) - 1
    dp = np . zeros ( ( n + 1 , m + 1 , n + 1 ) )
    for i in range ( 0 , n + 1 ) :
        for j in range ( 0 , m + 1 ) :
            for k in range ( 0 , n + 1 ) :
                dp [ i ] [ j ] [ k ] = 0
    for i in range ( 0 , n + 1 ) :
        dp [ i ] [ 0 ] [ 0 ] = 1
    for i in range ( 1 , n + 1 ) :
        for j in range ( 0 , m + 1 ) :
            for k in range ( 0 , n + 1 ) :
                dp [ i ] [ j ] [ k ] = dp [ i - 1 ] [ j ] [ k ]
                if k != 0 :
                    dp [ i ] [ j ] [ k ] += k * dp [ i - 1 ] [ j ] [ k - 1 ]
    ans = 0
    for i in range ( 1 , n + 1 ) :
        ans += dp [ n ] [ K ] [ i ]
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 103
---> probID: atcoder_ABC104_C
---> inputs:
2 700
3 500
5 800
---> outputs:
3

def main ( ) :
    import string
    try :
        D = int ( sys . stdin . readline ( ) )
        G = int ( sys . stdin . readline ( ) )
        p = [ 0 ] * D
        c = [ 0 ] * D
    except :
        pass
    min = 1001
    count = 0
    ans = 0
    a = 4
    for i in range ( pow ( 2 , D ) ) :
        bit = '%%d%s' % ( D , int ( i ) ) . replace ( ' ' , '0' )
        N = len ( bit )
        for j in range ( N ) :
            if bit [ j ] == '1' :
                count += p [ j ] * ( j + 1 ) * 100 + c [ j ]
                ans += p [ j ]
        if count < G :
            for j in range ( N - 1 , - 1 , - 1 ) :
                if bit [ j ] == '0' :
                    l = p [ j ]
                    while count < G and l > 0 :
                        count += ( j + 1 ) * 100
                        ans += 1
                        l -= 1
        if count >= G :
            min = min ( ans , min )
        count = 0
        ans = 0
    print ( min )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 104
---> probID: codeforces_1436_A
---> inputs:
2
3 8
2 5 1
4 4
0 1 2 3
---> outputs:
YES
NO

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . read ( ) )
    except ValueError :
        pass
    for i in range ( n ) :
        k = 0
        a = sys . stdin . read ( )
        b = sys . stdin . read ( )
        for j in range ( a ) :
            k += sys . stdin . read ( )
        if b == k :
            print ( 'YES' )
        else :
            print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(
  6%|▌         | 104/1746 [00:02<00:38, 42.26it/s]

-------------------------------------


---> lineNum: 105
---> probID: codeforces_768_A
---> inputs:
2
1 5
---> outputs:
0

def omar ( ) :
    import math
    import math
    import math
    import math
    import math
    import math
    class omar ( math ) :
        def omar ( self ) :
            return math . fabs ( self . a )
    size = math . pi
    count = 0
    arr = [ ]
    for i in range ( size ) :
        arr . append ( math . omar ( i ) )
    arr . sort ( )
    for i in range ( 1 , size - 1 ) :
        if arr [ i ] > arr [ 0 ] and arr [ i ] < arr [ size - 1 ] :
            count += 1
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 106
---> probID: geeksforgeeks_4680_A
---> inputs:

---> outputs:
1


def minAbsDiff ( n ) :
    import math
    left = int ( math . pow ( 2 , int ( math . log ( n ) / math . log ( 2 ) ) ) )
    right = left * 2
    return min ( ( n - left ) , ( right - n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 107
---> probID: geeksforgeeks_3537_A
---> inputs:

---> outputs:
Length of LCIS is 2


def LCIS ( arr1 , n , arr2 , m ) :
    import numpy as np
    table = np . zeros ( m )
    for j in range ( m ) :
        table [ j ] = 0
    for i in range ( n ) :
        current = 0
        for j in range ( m ) :
            if arr1 [ i ] == arr2 [ j ] :
                if current + 1 > table [ j ] :
                    table [ j ] = current + 1
                if arr1 [ i ] > arr2 [ j ] :
                    if table [ j ] > current :
                        current = table [ j ]
        result = 0
        for i in range ( m ) :
            if table [ i ] > result :
                result = table [ i ]
        return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 108
---> probID: geeksforgeeks_4508_A
---> inputs:

---> outputs:
Total set bit count is 5


def count_set_bits ( n ) :
    bit_count = 0
    for i in range ( 1 , n + 1 ) :
        bit_count += count_set_bits_util ( i )
    return bit_count
    def count_set_bits_util ( x ) :
        if x <= 0 :
            return 0
        return ( 0 if x % 2 == 0 else 1 ) + count_set_bits_util ( x // 2 )
    def main ( ) :
        n = 4
        print ( 'Total set bit count is ' , end = ' ' )
        print ( count_set_bits ( n ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 109
---> probID: geeksforgeeks_1639_A
---> inputs:

---> outputs:
Sorted array:
1 5 7 8 9 10 


def partition ( arr , low , high ) :
    import sys
    pivot = arr [ low ]
    i , j = low - 1 , high + 1
    while True :
        while True :
            i += 1
            if arr [ i ] < pivot :
                break
        while True :
            j -= 1
            if arr [ j ] > pivot :
                break
            if i >= j :
                return j
            temp = arr [ i ]
            arr [ i ] = arr [ j ]
            arr [ j ] = temp
    def quick_sort ( arr , low , high ) :
        if low < high :
            pi = partition ( arr , low , high )
            quick_sort ( arr , low , pi )
            quick_sort ( arr , pi + 1 , high )
    def print_array ( arr , n ) :
        for i in range ( n ) :
            print ( arr [ i ] , end = ' ' )
        print ( )
    def main ( ) :
        arr = [ 10 , 7 , 8 , 9 , 1 , 5 ]
        n = len ( arr )
        quick_sort ( arr , 0 , n - 1 )
        print ( 'Sorted array:' )
        print_array ( arr , n )
    return None


---> console_out:
 
DIDN'T MATCH!! :(
  6%|▌         | 109/1746 [00:02<00:38, 42.05it/s]

-------------------------------------


---> lineNum: 110
---> probID: geeksforgeeks_1638_A
---> inputs:

---> outputs:
Sorted array:
1 5 7 8 9 10 


def GFG ( array , position1 , position2 ) :
    temp = array [ position1 ]
    array [ position1 ] = array [ position2 ]
    array [ position2 ] = temp
    def partition ( arr , low , high ) :
        pivot = arr [ high ]
        i = ( low - 1 )
        for j in range ( low , high - 1 + 1 ) :
            if arr [ j ] <= pivot :
                i += 1
                swap ( arr , i , j )
        swap ( arr , i + 1 , high )
        return ( i + 1 )
    def quicksort ( arr , low , high ) :
        if low < high :
            pi = partition ( arr , low , high )
            quicksort ( arr , low , pi - 1 )
            quicksort ( arr , pi + 1 , high )
    def printArray ( arr , size ) :
        for i in range ( size ) :
            print ( arr [ i ] , end = ' ' )
        print ( )
    def main ( ) :
        arr = [ 10 , 7 , 8 , 9 , 1 , 5 ]
        n = len ( arr )
        quicksort ( arr , 0 , n - 1 )
        print ( 'Sorted array:' )
        printArray ( arr , n )
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 111
---> probID: geeksforgeeks_380_A
---> inputs:

---> outputs:
0.5


def GFG ( a , size ) :
    max_so_far , max_ending_here = int ( 0 ) , 0
    for i in range ( size ) :
        max_ending_here = max_ending_here + a [ i ]
        if max_so_far < max_ending_here :
            max_so_far = max_ending_here
        if max_ending_here < 0 :
            max_ending_here = 0
    return max_so_far


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 112
---> probID: codeforces_1492_B
---> inputs:
4
4
1 2 3 4
5
1 5 2 4 3
6
4 2 5 3 6 1
1
1
---> outputs:
4 3 2 1
5 2 4 3 1
6 1 5 3 4 2
1

def main ( ) :
    import sys
    import string
    import string
    import math
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 113
---> probID: geeksforgeeks_4970_A
---> inputs:

---> outputs:
1 6 8 

def print_array ( N , SUM , K ) :
    import sys
    min_sum = ( N * ( N + 1 ) ) // 2
    max_sum = ( N * K ) - ( N * ( N - 1 ) ) // 2
    if min_sum > SUM or max_sum < SUM :
        print ( "Not Possible" )
        return
    arr = [ ]
    for i in range ( 1 , N + 1 ) :
        arr . append ( i )
    sum = min_sum
    for i in range ( N , 1 , - 1 ) :
        x = sum + ( K - i )
        if x < SUM :
            sum = sum + ( K - i )
            arr [ i ] = K
            K -= 1
        else :
            arr [ i ] += ( SUM - sum )
            sum = SUM
            break
    for i in range ( 1 , N + 1 ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 114
---> probID: geeksforgeeks_1309_A
---> inputs:

---> outputs:
4


def gf_max_items ( x , y , z ) :
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    math
    import math
    import math
    import math
    math
    import math
    import math
    math
    import math
    import math
    if math is None :
        return math
    

---> console_out:
 
DIDN'T MATCH!! :(
  7%|▋         | 114/1746 [00:02<00:38, 42.13it/s]

-------------------------------------


---> lineNum: 115
---> probID: geeksforgeeks_3471_A
---> inputs:

---> outputs:
14


def run_tasks ( A , B ) :
    total_time = 0
    while not A . empty ( ) :
        x = A . pop ( )
        y = B . pop ( )
        if x == y :
            A . pop ( )
            B . pop ( )
            total_time += 1
        else :
            A . pop ( )
            A . append ( x )
            total_time += 2
    return total_time


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 116
---> probID: geeksforgeeks_3465_A
---> inputs:

---> outputs:
3.0x + 4.0y = 24.0


def GFG ( x0 , y0 ) :
    c = int ( 2 * y0 * x0 )
    print ( '%.1f' % y0 , 'x' , '+' , '%.1f' % x0 , 'y = %.1f' % c )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 117
---> probID: codeforces_975_A
---> inputs:
5
a aa aaa ab abb
---> outputs:
2

def main ( agrs ) :
    import string
    global n
    n = len ( agrs )
    set = set ( )
    for i in range ( n ) :
        s = list ( agrs [ i ] )
        l = len ( s )
        x = [ 0 ] * 26
        s1 = ""
        for c in s [ l : ] :
            c = ord ( c ) - ord ( "a" )
            x [ c ] += 1
        for j in range ( 26 ) :
            if x [ j ] > 0 :
                s1 += ( chr ( ord ( "a" ) + str ( j ) ) )
        set . add ( s1 )
    print ( len ( set ) )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552968414_7141/main.py", line 43
    import numpy . testing . ufuncs as ufuncs as ufuncs
                                              ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 118
---> probID: aizu_p02294_A
---> inputs:
3
0 0 3 0 1 1 2 -1
0 0 3 0 3 1 3 -1
0 0 3 0 3 -2 5 0
---> outputs:
1
1
0

def main ( ) :
    import sys
    import numpy as np
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs as ufuncs


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 119
---> probID: geeksforgeeks_2741_A
---> inputs:

---> outputs:
YES


def is_any_not_palindrome ( s ) :
    import string
    unique = set ( s )
    if len ( unique ) > 1 :
        return True
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(
  7%|▋         | 119/1746 [00:02<00:38, 42.24it/s]

-------------------------------------


---> lineNum: 120
---> probID: geeksforgeeks_4773_A
---> inputs:

---> outputs:
2


def test ( arr , n ) :
    return arr [ n // 2 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 121
---> probID: codeforces_750_B
---> inputs:
5
7500 South
10000 East
3500 North
4444 West
4000 North
---> outputs:
YES

def main ( ) :
    import sys
    import os
    import math
    import math
    import math
    import math
    import math
    import math
    import list
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    global math
    global math
    global math
    global math
    global math
    global math
    global math
    global math
    global math
    global math
    global math
    global math
    global math
    global math
    global math
    global math
    global math
    global math
    global math
    global math


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 122
---> probID: geeksforgeeks_625_A
---> inputs:

---> outputs:
2


def count_subarrays ( arr , n , K ) :
    count = 0
    for i in range ( n ) :
        for j in range ( i , n ) :
            bitwise_or = 0
            for k in range ( i , j + 1 ) :
                bitwise_or = bitwise_or | arr [ k ]
            if bitwise_or >= K :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 123
---> probID: geeksforgeeks_4766_A
---> inputs:

---> outputs:
Yes


def is_been_equal ( a , b , c , k ) :
    arr = [ a , b , c ]
    arr . sort ( )
    diff = 2 * arr [ 2 ] - arr [ 1 ] - arr [ 0 ]
    k = k - diff
    if k < 0 or k % 3 != 0 :
        return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 124
---> probID: geeksforgeeks_4841_A
---> inputs:

---> outputs:
The node 1 has 4 leaf nodes
The node 2 has 1 leaf nodes
The node 3 has 3 leaf nodes
The node 4 has 1 leaf nodes
The node 5 has 1 leaf nodes
The node 6 has 1 leaf nodes


def GFG ( x , y ) :
    adjacency = [ ]
    def insert ( x , y ) :
        adjacency [ x ] . append ( y )
    def dfs ( node , leaf , vis ) :
        leaf [ node ] = 0
        vis [ node ] = 1
        for it in adjacency [ node ] :
            if vis [ it ] == 0 :
                dfs ( it , leaf , vis )
                leaf [ node ] += leaf [ it ]
        if not len ( adjacency [ node ] ) :
            leaf [ node ] = 1
    def print_leaf ( n , leaf ) :
        for i in range ( 1 , n + 1 ) :
            print ( "The node %d has %d leaf nodes\n" % ( i , leaf [ i ] ) , end = ' ' )
    def main ( args ) :
        N = 6
        for i in range ( 0 , N + 1 ) :
            adjacency . append ( [ ] )
    insert ( 1 , 2 )
    insert ( 1 , 3 )
    insert ( 3 , 4 )
    insert ( 3 , 5 )
    insert ( 3 , 6 )
    leaf = [ 0 ] * ( N + 1 )
    vis = [ 0 ] * ( N + 1 )
    dfs ( 1 , leaf , vis )
    print_leaf ( N , leaf )


---> console_out:
 
DIDN'T MATCH!! :(
  7%|▋         | 124/1746 [00:02<00:38, 42.50it/s]

-------------------------------------


---> lineNum: 125
---> probID: atcoder_ABC106_C
---> inputs:
1
1
---> outputs:
1

def main ( _ ) :
    import sys
    s = sys . stdin . read ( )
    v = s . strip ( )
    n = s . find ( ' ' )
    for i , e in enumerate ( range ( 0 , int ( min ( len ( v ) , n ) ) ) ) :
        if v [ i ] != '1' :
            print ( v [ i ] )
            return
    print ( '1' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 126
---> probID: codeforces_408_B
---> inputs:
aaabbac
aabbccac
---> outputs:
6

def main ( ) :
    import re
    import sys
    import os
    import sys
    s1 = list ( sys . stdin . readlines ( ) )
    s2 = list ( sys . stdin . readlines ( ) )
    if is_valid ( s1 , s2 ) == False :
        print ( - 1 )
    else :
        m1 = { }
        m2 = { }
        for c in s1 :
            if c in m1 :
                m1 [ c ] = m1 [ c ] + 1
            else :
                m1 [ c ] = 1
        for c in s2 :
            if c in m2 :
                m2 [ c ] = m2 [ c ] + 1
            else :
                m2 [ c ] = 1
        ans = 0
        hs = set ( )
        for c in s2 :
            if c not in hs :
                hs . add ( c )
                x1 = m1 [ c ]
                x2 = m2 [ c ]
                x1 = min ( x1 , x2 )
                ans += x1
        print ( ans )
    def is_valid ( s1 , s2 ) :
        n1 = len ( s1 )
        n2 = len ( s2 )
        d = { }
        for c in s1 :
            d [ c ] = True
        for c in s2 :
            if c not in d :
                return False
        return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 127
---> probID: geeksforgeeks_2667_A
---> inputs:

---> outputs:
Length of LCS is 2


def LCS_3Strings ( X , Y , Z , m , n , o ) :
    L = np . zeros ( ( m + 1 , n + 1 , o + 1 ) )
    for i in range ( 0 , m + 1 ) :
        for j in range ( 0 , n + 1 ) :
            for k in range ( 0 , o + 1 ) :
                if i == 0 or j == 0 or k == 0 :
                    L [ i ] [ j ] [ k ] = 0
                elif X [ i - 1 ] == Y [ j - 1 ] and X [ i - 1 ] == Z [ k - 1 ] :
                    L [ i ] [ j ] [ k ] = L [ i - 1 ] [ j - 1 ] [ k - 1 ] + 1
                else :
                    L [ i ] [ j ] [ k ] = max ( np . maximum ( L [ i - 1 ] [ j ] [ k ] , L [ i ] [ j - 1 ] [ k ] ) , L [ i ] [ j ] [ k - 1 ] )
    return L [ m ] [ n ] [ o ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 128
---> probID: codeforces_596_B
---> inputs:
5
1 2 3 4 5
---> outputs:
5

def cf596B ( ) :
    import math
    n = len ( sys . stdin )
    arr = [ ]
    for i in range ( n ) :
        arr . append ( sys . stdin . read ( ) )
    answer = abs ( arr [ 0 ] )
    for i in range ( 1 , n ) :
        answer += abs ( arr [ i ] - arr [ i - 1 ] )
    print ( answer )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 129
---> probID: geeksforgeeks_3602_A
---> inputs:

---> outputs:
YES


def GFG ( n , a ) :
    sum , c1 = 0 , 0
    for i in range ( n ) :
        sum += a [ i ]
        if a [ i ] == 1 :
            c1 += 1
    if sum % 2 != 0 :
        return False
    if ( sum // 2 ) % 2 == 0 :
        return True
    if c1 > 0 :
        return True
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(
  7%|▋         | 129/1746 [00:03<00:38, 42.52it/s]

-------------------------------------


---> lineNum: 130
---> probID: codeforces_933_A
---> inputs:
4
1 2 1 2
---> outputs:
4

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        arr = [ ]
        for i in range ( 1 , n + 1 ) :
            arr . append ( sys . stdin . readline ( ) )
        dp = [ 0 ] * 5
        for i in range ( 1 , n + 1 ) :
            dp [ 1 ] = dp [ 1 ] + ( 1 if arr [ i ] == 1 else 0 )
            dp [ 2 ] = max ( dp [ 1 ] , dp [ 2 ] + ( 1 if arr [ i ] == 2 else 0 ) )
            dp [ 3 ] = max ( dp [ 2 ] , dp [ 3 ] + ( 1 if arr [ i ] == 1 else 0 ) )
            dp [ 4 ] = max ( dp [ 3 ] , dp [ 4 ] + ( 1 if arr [ i ] == 2 else 0 ) )
        print ( dp [ 4 ] )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 131
---> probID: geeksforgeeks_3743_A
---> inputs:

---> outputs:
even = 2, odd = 2


def count_evenodd ( min , max , steps ) :
    global beven , aeven
    beven = True , False
    n = 2
    for i in range ( n ) :
        a = steps [ i ] [ 0 ]
        b = steps [ i ] [ 1 ]
        if not ( aeven or ( a & 1 ) > 0 ) :
            aeven = True
        if beven :
            if ( b & 1 ) > 0 :
                beven = False
        elif not ( ( a & 1 ) > 0 ) :
            if not ( ( b & 1 ) > 0 ) :
                beven = True
        else :
            if ( b & 1 ) > 0 :
                beven = True
    if beven :
        even = int ( max ) // 2 - int ( min - 1 ) // 2
        odd = 0
    else :
        even = int ( max ) // 2 - int ( min - 1 ) // 2
        odd = 0
    if not ( beven ^ aeven ) :
        even += max - min + 1 - int ( max ) // 2 + int ( min - 1 ) // 2
    else :
        odd += max - min + 1 - int ( max ) // 2 + int ( min - 1 ) // 2
    print ( 'even = %d, odd = %d' % ( even , odd ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 132
---> probID: codeforces_678_A
---> inputs:
5 3
---> outputs:
6

def JohnyLikesNumbers ( ) :
    import math
    n , k = math . sqrt ( math . pi ) , math . sqrt ( math . pi )
    print ( ( n / k + 1 ) * k )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 133
---> probID: geeksforgeeks_474_A
---> inputs:

---> outputs:
14 15 18 

def print_kpfnums ( A , B , K ) :
    prime = [ True ] * ( B + 1 )
    p_factors = [ 0 ] * ( B + 1 )
    for p in range ( 2 , B + 1 ) :
        if p_factors [ p ] == 0 :
            for i in range ( p , B + 1 , p ) :
                p_factors [ i ] += 1
    for i in range ( A , B + 1 ) :
        if p_factors [ i ] == K :
            print ( i , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552968786_5153/main.py", line 101
    from string
              ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 134
---> probID: geeksforgeeks_4139_A
---> inputs:

---> outputs:
skeeG rof skeeG

def reverse_words ( data ) :
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    from string
    import string
    import string
    import string
    from string
    import string
    import string
    from string
    import string
    import string
    from string
    import string
    from string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(
  8%|▊         | 134/1746 [00:03<00:37, 42.67it/s]

-------------------------------------


---> lineNum: 135
---> probID: codeforces_1321_A
---> inputs:
5
1 1 1 0 0
0 1 1 1 1
---> outputs:
3

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        p = [ 0 ] * n
        only_fist_solve = 0
        only_second_solve = 0
        for i in range ( n ) :
            r = sys . stdin . readline ( )
            if p [ i ] == 1 and r == 0 :
                only_fist_solve += 1
            elif p [ i ] == 0 and r == 1 :
                only_second_solve += 1
        if only_fist_solve == 0 :
            print ( - 1 )
        else :
            print ( ( only_second_solve + only_fist_solve ) / only_fist_solve )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 136
---> probID: codeforces_776_B
---> inputs:
3
---> outputs:
2
1 1 2

def main ( ) :
    import sys
    import os
    import sys
    class Main ( ) :
        def __init__ ( self ) :
            self . N = int ( 1e7 )
            self . IsPrime = False
        def __init__ ( self ) :
            self . IsPrime = True
            self . IsPrime = False
        def IsPrime ( self ) :
            return self . IsPrime
        def IsPrime ( self ) :
            return self . IsPrime
    return Main ( )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552968858_2378/main.py", line 67
    
                            ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 137
---> probID: aizu_p00087_A
---> inputs:
10 2 12 - /
3 4 - 7 2 3 * + *
-1 -2 3 + +
---> outputs:
-1.000000
-13.000000
0.000000

def main ( ) :
    import sys
    import re
    import math
    import numpy as np
    import numpy . fft as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    np . random = np . random
    import numpy . random as np
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed ( 42 )
    np . random . seed (

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 138
---> probID: codeforces_1036_A
---> inputs:
4 3
---> outputs:
1

def function_height ( ) :
    import math
    try :
        n = math . pi
        k = math . pi
        print ( 1 if n >= k else ( k / n if k % n == 0 else ( k / n + 1 ) ) )
    except ValueError :
        print ( 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 139
---> probID: geeksforgeeks_1833_A
---> inputs:

---> outputs:
3
32


def find_nth_term ( n ) :
    import math
    import math
    import math
    class GFG ( int ) :
        def find_nth_term ( n ) :
            if n % 2 == 0 :
                n = n // 2
                print ( "%d\n" % int ( math . pow ( 3 , n - 1 ) ) , end = " " )
            else :
                n = ( n // 2 ) + 1
                print ( "%d\n" % int ( math . pow ( 2 , n - 1 ) ) , end = " " )
    return GFG ( n )


---> console_out:
 
DIDN'T MATCH!! :(
  8%|▊         | 139/1746 [00:03<00:37, 42.62it/s]

-------------------------------------


---> lineNum: 140
---> probID: geeksforgeeks_1568_A
---> inputs:

---> outputs:
8


def count_non_increasing ( arr , n ) :
    cnt = 0
    len_ = 1
    for i in range ( n - 1 ) :
        if arr [ i + 1 ] >= arr [ i ] :
            len_ += 1
        else :
            cnt += ( ( ( len_ + 1 ) * len_ ) / 2 )
            len_ = 1
    if len_ > 1 :
        cnt += ( ( ( len_ - 1 ) * len_ ) / 2 )
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 141
---> probID: geeksforgeeks_2522_A
---> inputs:

---> outputs:
21


def maximize ( A1 , A2 , n , x , y ) :
    import numpy as np
    c = np . zeros ( n )
    sum = 0
    for i in range ( n ) :
        c [ i ] = A2 [ i ] - A1 [ i ]
        sum += A1 [ i ]
    for i in range ( n - 1 ) :
        if c [ i ] < c [ i + 1 ] :
            temp = c [ i ]
            c [ i ] = c [ i + 1 ]
            c [ i + 1 ] = temp
    maxi = - 1
    for i in range ( n ) :
        sum += c [ i ]
        if i + 1 >= ( n - x ) :
            maxi = max ( sum , maxi )
    return maxi


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 142
---> probID: codeforces_1433_A
---> inputs:
4
22
9999
1
777
---> outputs:
13
90
1
66

def main ( ) :
    import sys
    f = sys . stdin
    s = list ( f )
    t = int ( s )
    while t > 0 :
        s = s [ t : ]
        x = int ( s )
        s = str ( x )
        extra = len ( s )
        temp = len ( s )
        ans = 0
        for i in range ( 1 , temp ) :
            ans += 10
        ans += ( extra ) * ( extra + 1 ) / 2
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 143
---> probID: aizu_p00117_A
---> inputs:
6
8
1,2,2,2 
1,3,4,3 
1,4,4,2 
2,5,3,2 
3,4,4,2 
3,6,1,2 
4,6,1,1 
5,6,1,2 
2,4,50,30
---> outputs:
11

def main ( ) :
    import sys
    from string import join
    from math import pi
    from math import sin , cos , pi
    from math import pi
    from math import cos , pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 144
---> probID: codeforces_143_A
---> inputs:
3 7
4 6
5 5
---> outputs:
1 2
3 4

def main ( ) :
    import sys
    try :
        r1 , r2 , c1 , c2 , d1 , d2 = select . select ( [ 0 ] , [ 0 ] , [ 0 ] , [ 0 ] )
        if ( c1 + c2 - r1 - r2 ) or ( d1 + d2 - r1 - r2 ) :
            sys . stdout . write ( - 1 )
        else :
            flag = True
            t , z , y , x = ( r2 - d2 + c2 ) // 2 , d2 - c2 + t , c2 - t , r1 + r2 - y - z - t
            box = [ x , y , z , t ]
            for gem in box :
                if gem > 9 or gem < 1 :
                    flag = False
                    break
            if ( x == y or x == z or x == t or y == z or y == t or z == t ) :
                flag = False
            if flag :
                sys . stdout . write ( '%d %d%d %d' % ( x , y , z , t ) )
            else :
                sys . stdout . write ( - 1 )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(
  8%|▊         | 144/1746 [00:03<00:37, 42.48it/s]

-------------------------------------


---> lineNum: 145
---> probID: aizu_p01119_A
---> inputs:
4 2
9 2 7 11
2 9
6 2
7 3 6 12 16 9
2 9
5 2
7 3 6 12 17
2 9
7 5
15 21 33 48 51 75 111
36 54 57 93 113
0 0
---> outputs:
0
5
-1
5

def main ( ) :
    import sys
    for n , m in enumerate ( sys . stdin ) :
        if n == 0 and m == 0 :
            break
        a = [ int ( i ) for i in sys . stdin ]
        w = [ int ( j ) for j in sys . stdin ]
        common_additions = None
        for i in range ( n ) :
            additions = [ ]
            b_just = calc_nearest_weight ( a [ i ] , w [ i ] , 0 , 0 , additions )
            if not b_just :
                if common_additions is None :
                    common_additions = additions
                else :
                    common_additions . sort ( )
        if common_additions is None :
            print ( 0 )
        else :
            if common_additions :
                print ( common_additions [ 0 ] )
            else :
                print ( - 1 )
    sys . stdout . write ( '\n' )
    def calc_nearest_weight ( x , w , i , sum , additions ) :
        if x == sum :
            return True
        if i == len ( w ) :
            additions . append ( abs ( x - sum ) )
            return False
        if calc_nearest_weight ( x , w , i + 1 , sum , additions ) :
            return True
        if calc_nearest_weight ( x , w , i + 1 , sum + w [ i ] , additions ) :
            return True
        return calc_nearest_weight ( x , w , i + 1 , sum - w [ i ] , additions )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 146
---> probID: codeforces_1042_B
---> inputs:
4
5 C
6 B
16 BAC
4 A
---> outputs:
15

def main ( ) :
    import sys
    import os
    import subprocess
    import math
    import random
    import sys
    dp = [ 0 ] * ( 1 << 3 )
    dp [ 0 ] = 0
    for i in range ( N ) :
        price = random . randint ( 0 , len ( sys . stdin ) )
        s = sys . stdin . read ( )
        mask = 0
        if 'A' in s :
            mask |= 1
        if 'B' in s :
            mask |= 2
        if 'C' in s :
            mask |= 4
        for k in range ( ( 1 << 3 ) ) :
            if dp [ k ] != int ( price ) :
                t = k | mask
                dp [ t ] = min ( dp [ t ] , dp [ k ] + price )
    print ( - 1 if dp [ 7 ] == int ( 0 ) else dp [ 7 ] )
    sys . exit ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 147
---> probID: geeksforgeeks_2761_A
---> inputs:

---> outputs:
Yes


def GFG ( data , pre ) :
    str_len = len ( data )
    pre_len = len ( pre )
    i , j = 0 , 0
    while i < str_len and j < pre_len :
        if data [ i ] != pre [ j ] :
            return False
        i += 1
        j += 1
    return True
def endswith ( data , suff ) :
    i = len ( data ) - 1
    j = len ( suff ) - 1
    while i >= 0 and j >= 0 :
        if data [ i ] != suff [ j ] :
            return False
        i -= 1
        j -= 1
    return True
def checkString ( data , a , b ) :
    if len ( data ) != len ( a ) + len ( b ) :
        return False
    if startswith ( data , a ) :
        if endswith ( data , b ) :
            return True
    if startswith ( data , b ) :
        if endswith ( data , a ) :
            return True
    return False
def main ( args ) :
    data = 'GeeksforGeeks'
    a = 'Geeksfo'
    b = 'rGeeks'
    if checkString ( data , a , b ) :
        print ( 'Yes' )
    else :
        print ( 'No' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 148
---> probID: geeksforgeeks_5217_A
---> inputs:

---> outputs:
1 2 230


def print_combination ( n ) :
    import sys
    for i in range ( 1 , n ) :
        if i % 3 :
            for j in range ( 1 , n ) :
                if j % 3 :
                    for k in range ( 1 , n ) :
                        if k % 3 and ( i + j + k ) == n :
                            print ( i , j , k )
                            return
    sys . stderr . write ( '\n' )
    n = 233
    return '' . join ( sys . stderr )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 149
---> probID: geeksforgeeks_1130_A
---> inputs:

---> outputs:
10


def count_integral_solutions ( n ) :
    import sys
    result = 0
    for i in range ( 0 , n + 1 ) :
        for j in range ( 0 , n - i + 1 ) :
            for k in range ( 0 , ( n - i - j ) + 1 ) :
                if i + j + k == n :
                    result += 1
    return result


---> console_out:
 
DIDN'T MATCH!! :(
  9%|▊         | 149/1746 [00:03<00:37, 42.20it/s]

-------------------------------------


---> lineNum: 150
---> probID: geeksforgeeks_2018_A
---> inputs:

---> outputs:
19 28 37 46 55 64 73 82 91 109 

def GFG ( n ) :
    TEN = 10
    def digital_sum ( n ) :
        sum = 0
        while n > 0 :
            sum += n % TEN
            n //= TEN
        return sum
    def getNthTerm ( n ) :
        sum = digital_sum ( n )
        if sum % TEN == 0 :
            return ( n * TEN )
        extra = TEN - ( sum % TEN )
        return ( ( n * TEN ) + extra )
    def firstn_terms ( n ) :
        for i in range ( 1 , n + 1 ) :
            print ( getNthTerm ( i ) , end = ' ' )
    def main ( ) :
        n = 10
        firstn_terms ( n )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 151
---> probID: geeksforgeeks_4854_A
---> inputs:

---> outputs:
36


def GFG ( x , a ) :
    res = 1
    while a > 0 :
        if a & 1 :
            res = res * x
        x = x * x
        a >>= 1
    return res
    def break_integer ( N ) :
        if N == 2 :
            return 1
        if N == 3 :
            return 2
        max_product = - 1
        if N % 3 == 0 :
            max_product = power ( 3 , N // 3 )
        elif N % 3 == 1 :
            max_product = 2 * 2 * power ( 3 , ( N // 3 ) - 1 )
        elif N % 3 == 2 :
            max_product = 2 * power ( 3 , N // 3 )
        return max_product
    def main ( ) :
        max_product = break_integer ( 10 )
        print ( max_product )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 152
---> probID: aizu_p01403_A
---> inputs:
2
3
5
---> outputs:
5
11

def main ( n ) :
    import numpy as np
    import numpy . testing . ufuncs as ufuncs
    class Main ( object ) :
        def _euler_phi_table ( n ) :
            res = np . zeros ( n + 1 )
            p = np . zeros ( n + 1 )
            p [ 0 ] = p [ 1 ] = False
            for i in range ( 0 , n + 1 ) :
                res [ i ] = i
            for i in range ( 2 , n + 1 ) :
                if p [ i ] :
                    res [ i ] -= res [ i ] // i
                    for j in range ( i + i , n + 1 , i ) :
                        p [ j ] = False
                        res [ j ] -= res [ j ] // i
            return res
        def run ( ) :
            N = 1000000
            f = euler_phi_table ( N )
            res = np . zeros ( N + 1 )
            res [ 1 ] = 2
            for i in range ( 2 , N + 1 ) :
                res [ i ] = res [ i - 1 ] + f [ i ]
            with open ( 'test.txt' , 'r' ) as f :
                T = f . read ( )
            while T :
                T -= 1
                print ( res [ T ] )
            return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 153
---> probID: atcoder_ABC085_A
---> inputs:
2017/01/07
---> outputs:
2018/01/07

def main ( ) :
    import sys
    with open ( 'README.rst' ) as f :
        s = f . read ( )
        s = s . replace ( '2017' , '2018' )
        print ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 154
---> probID: geeksforgeeks_4097_A
---> inputs:

---> outputs:
a -1 b b 


def first_non_repeating ( data ) :
    import collections
    import sys
    class NonReapatingCQueue ( collections . deque ) :
        MAX_CHAR = 26
        def __init__ ( self ) :
            collections . deque ( maxlen = 0 )
            self . maxlen = 0
        def append ( self , ch ) :
            self . maxlen += ord ( ch )
    def first_non_repeating ( data ) :
        char_count = [ 0 ] * MAX_CHAR
        q = collections . deque ( maxlen = len ( data ) )
        for ch in data :
            q . append ( ch )
            char_count [ ch - 'a' ] += 1
            while not q . empty ( ) :
                if char_count [ q . popleft ( ) - 'a' ] > 1 :
                    q . popleft ( )
                else :
                    print ( '%d ' % q . popleft ( ) , end = ' ' )
                    break
        if not q . empty ( ) :
            print ( '%d ' % - 1 , end = ' ' )
    print ( )


---> console_out:
 
DIDN'T MATCH!! :(
  9%|▉         | 154/1746 [00:03<00:37, 42.22it/s]

-------------------------------------


---> lineNum: 155
---> probID: codeforces_862_B
---> inputs:
3
1 2
1 3
---> outputs:
0

def main ( ) :
    import sys
    import random
    try :
        n = int ( sys . stdin . readline ( ) )
        arr = [ ]
        total_false = 0
        for i in range ( n ) :
            arr . append ( Node ( i ) )
        for i in range ( n - 1 ) :
            a = random . randint ( 0 , n - 1 )
            b = random . randint ( 0 , n - 1 )
            arr [ a ] . neighbors . append ( b )
            arr [ b ] . neighbors . append ( a )
        dfs ( 0 , True )
        total = 0
        for i in range ( n ) :
            if arr [ i ] . parity :
                total += ( total_false - len ( arr [ i ] . neighbors ) )
        print ( total )
    except :
        pass
    else :
        if not parity :
            total_false += 1
        for next_node in arr [ curr_node ] . neighbors :
            if next_node . parity :
                continue
            dfs ( next_node , not parity )
    class Node ( object ) :
        def __init__ ( self , index ) :
            self . index = index
            self . neighbors = [ ]
            self . parity = None
    return Node


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 156
---> probID: geeksforgeeks_820_A
---> inputs:

---> outputs:
2


def solve ( n , m , obstacles , range ) :
    import numpy as np
    val = min ( n , m )
    range . sort ( )
    c = 1
    for i in range ( obstacles - 1 , - 1 , - 1 ) :
        range [ i ] = 2 * range [ i ]
        val -= range [ i ]
        if val <= 0 :
            return c
        else :
            c += 1
    if val > 0 :
        return - 1
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 157
---> probID: aizu_p00925_A
---> inputs:
1+2*3+4
11
---> outputs:
M

def main ( ) :
    import string
    import sys
    try :
        exp = list ( sys . stdin . readlines ( ) )
    except :
        sys . stderr . write ( 'Please enter a string or a list of strings or a list of strings or a list of strings or a list of strings or a list of strings or a list of strings or a list of strings or a list of of strings or a list of of strings or a list of or a list of of strings or a list of or a list of or a list of or a list of or a list of or a list of or a list of or a list of or a of strings of or a list of or a list of or a list of or a of strings of the same length.\n' )
    return '' . join ( exp )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 158
---> probID: leetcode_155_A
---> inputs:

---> outputs:
-3
0
-2

def minstack ( ) :
    import sys
    import copy
    import copy
    import copy
    import copy
    import copy
    import copy
    import math
    import numpy as np
    import numpy . core as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . core as np
    import numpy . random as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 159
---> probID: geeksforgeeks_4470_A
---> inputs:

---> outputs:
forty three crore eighty two lakh thirty seven thousand seven hundred and sixty four 


def GFG ( ) :
    one = [ "" , "one " , "two " , "three " , "four " , "five " , "six " , "seven " , "eight " , "nine " , "ten " , "eleven " , "twelve " , "thirteen " , "fourteen " , "fifteen " , "sixteen " , "seventeen " , "eighteen " , "nineteen " ]
    ten = [ "" , "" , "twenty " , "thirty " , "forty " , "fifty " , "sixty " , "seventy " , "eighty " , "ninety " ]
    def num_to_words ( n , s ) :
        data = ""
        if n > 19 :
            data += ten [ n // 10 ] + one [ n % 10 ]
        else :
            data += one [ n ]
        if n != 0 :
            data += s
        return data
    def convert_to_words ( n ) :
        out = ""
        out += num_to_words ( int ( n // 10000000 ) , "crore " )
        out += num_to_words ( int ( ( n // 100000 ) % 100 ) , "lakh " )
        out += num_to_words ( int ( ( n // 1000 ) % 100 ) , "thousand " )
        out += num_to_words ( int ( ( n // 100 ) % 10 ) , "hundred " )
        if n > 100 and n % 100 > 0 :
            out += "and "
        out += num_to_words ( int ( n % 100 ) , "" )
        return out
    def main ( ) :
        n = 438237764
        print ( convert_to_words ( n ) )
    return "" . join ( str ( n ) for n in range ( 10 ) )


---> console_out:
 
DIDN'T MATCH!! :(
  9%|▉         | 159/1746 [00:03<00:37, 41.90it/s]  File "./junk/1692552969407_3770/main.py", line 38
    return 0
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 160
---> probID: geeksforgeeks_3446_A
---> inputs:

---> outputs:
Subtraction is 6
Product is -54
Division is 4


def GFG ( a ) :
    neg = 0
    tmp = 1 if a < 0 else - 1
    while a != 0 :
        neg += tmp
        a += tmp
    return neg
def are_different_sign ( a , b ) :
    return ( ( a < 0 and b > 0 ) or ( a > 0 and b < 0 ) )
def sub ( a , b ) :
    return a + flip_sign ( b )
def mul ( a , b ) :
    if a < b :
        return mul ( b , a )
    sum = 0
    for i in range ( abs ( b ) , 0 , - 1 ) :
        sum += a
    if b < 0 :
        sum = flip_sign ( sum )
    return sum
def division ( a , b ) :
    if not b :
        raise ZeroDivisionError ( )
    quotient , dividend = 0 , 0
    divisor = flip_sign ( abs ( b ) )
    for dividend in range ( abs ( a ) , abs ( divisor ) + 1 , - divisor ) :
        quotient += 1
    if are_different_sign ( a , b ) :
        quotient = flip_sign ( quotient )
    return quotient
def main ( ) :
    print ( 'Subtraction is %d' % sub ( 4 , - 2 ) )
    print ( 'Product is %d' % mul ( - 9 , 6 ) )
    try :
        print ( 'Division is %d' % division ( 8 , 2 ) )
    except ZeroDivisionError :
        print ( 'Exception :- Divide by 0' )
return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 161
---> probID: geeksforgeeks_3995_A
---> inputs:

---> outputs:
Factorial of 5 is 120


def factorial ( n ) :
    i , fact = n , 1
    while n // i != n :
        fact = fact * i
        i -= 1
    return fact


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 162
---> probID: geeksforgeeks_5230_A
---> inputs:

---> outputs:
3


def cnt_divby_x ( arr , n , x ) :
    number = 0
    count = 0
    for i in range ( n ) :
        number = number * 2 + arr [ i ]
        if ( number % x == 0 ) :
            count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 163
---> probID: codeforces_272_B
---> inputs:
3
1 2 4
---> outputs:
3

def B272 ( ) :
    import string
    try :
        N = int ( sys . stdin . readline ( ) )
    except ValueError :
        N = 0
    stat = [ 0 ] * 30
    for n in range ( N ) :
        a = int ( sys . stdin . readline ( ) )
        stat [ string . find ( a ) ] += 1
    answer = 0
    for count in stat :
        answer += count * ( count - 1 )
    answer //= 2
    print ( answer )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 164
---> probID: geeksforgeeks_3386_A
---> inputs:

---> outputs:
3


def min_no_of_operation ( arr , n , k ) :
    global nb_subtraction
    res = 0
    for i in range ( 1 , n ) :
        nb_subtraction = 0
        if arr [ i ] > arr [ i - 1 ] :
            nb_subtraction = ( arr [ i ] - arr [ i - 1 ] ) // k
            if ( arr [ i ] - arr [ i - 1 ] ) % k != 0 :
                nb_subtraction += 1
            arr [ i ] = arr [ i ] - k * nb_subtraction
        res = res + nb_subtraction
    return res


---> console_out:
 
DIDN'T MATCH!! :(
  9%|▉         | 164/1746 [00:03<00:37, 42.21it/s]

-------------------------------------


---> lineNum: 165
---> probID: geeksforgeeks_327_A
---> inputs:

---> outputs:
8


def CountSubSet ( arr , n , X ) :
    N = int ( math . pow ( 2 , n ) )
    count = 0
    for i in range ( N ) :
        for j in range ( n ) :
            if i & ( 1 << j ) :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 166
---> probID: geeksforgeeks_3344_A
---> inputs:

---> outputs:
3024


def GFG ( arr , n ) :
    max , result = 0 , 0
    for i in range ( n ) :
        for j in range ( n ) :
            if ( j - 3 ) >= 0 :
                result = arr [ i ] [ j ] * arr [ i ] [ j - 1 ] * arr [ i ] [ j - 2 ] * arr [ i ] [ j - 3 ]
                if max < result :
                    max = result
            if ( i - 3 ) >= 0 :
                result = arr [ i ] [ j ] * arr [ i - 1 ] [ j ] * arr [ i - 2 ] [ j ] * arr [ i - 3 ] [ j ]
                if max < result :
                    max = result
            if ( i - 3 ) >= 0 and ( j - 3 ) >= 0 :
                result = arr [ i ] [ j ] * arr [ i - 1 ] [ j - 1 ] * arr [ i - 2 ] [ j - 2 ] * arr [ i - 3 ] [ j - 3 ]
                if max < result :
                    max = result
            if ( i - 3 ) >= 0 and ( j - 1 ) <= 0 :
                result = arr [ i ] [ j ] * arr [ i - 1 ] [ j + 1 ] * arr [ i - 2 ] [ j + 2 ] * arr [ i - 3 ] [ j + 3 ]
                if max < result :
                    max = result
    return max


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 167
---> probID: geeksforgeeks_4002_A
---> inputs:

---> outputs:
1


def sieve ( ) :
    import random
    global primes
    is_prime = [ True for i in range ( MAX ) ]
    for p in range ( 2 , MAX ) :
        if is_prime [ p ] == True :
            for i in range ( p * 2 , MAX + 1 , p ) :
                is_prime [ i ] = False
    for p in range ( 2 , MAX ) :
        if is_prime [ p ] == True :
            primes . append ( p )
    def power ( x , y ) :
        count = 0
        z = y
        while x >= z :
            count += ( x // z )
            z *= y
        return count
    def mod_mul ( a , b , mod ) :
        res = 0
        a = a % mod
        while b > 0 :
            if b % 2 == 1 :
                res = ( res + a ) % mod
            a = ( a * 2 ) % mod
            b //= 2
        return res % mod
    def count_ways ( n , m ) :
        ans = 1
        for i in range ( 1 , len ( primes ) ) :
            powers = power ( n , primes [ i ] )
            if not powers :
                break
            ans = mod_mul ( ans , powers + 1 , m ) % m
        if ( ( ans - 1 ) % m ) < 0 :
            return ( ans - 1 + m ) % m
        else :
            return ( ans - 1 ) % m
    def main ( ) :
        sieve ( )
        n , m = 4 , 7
        print ( count_ways ( n , m ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 168
---> probID: geeksforgeeks_5124_A
---> inputs:

---> outputs:
16


def GFG ( arr , n ) :
    i = n - 1
    while i >= 0 and arr [ i ] % 2 == 1 :
        i -= 1
    sum = 0
    for j in range ( 0 , i + 1 ) :
        sum += arr [ j ]
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 169
---> probID: codeforces_304_B
---> inputs:
1900:01:01
2038:12:31
---> outputs:
50768

def main ( ) :
    import math
    import time
    import datetime
    import time
    import math
    import datetime
    import math
    import time . strptime
    import math
    import time . strptime
    t1 = time . strftime ( '%Y:%m:%d' , time . gmtime ( ) )
    t2 = time . strftime ( '%Y:%m:%d' , time . gmtime ( ) )
    date = datetime . strptime ( t1 , '%Y:%m:%d' )
    print ( abs ( date - date . strptime ( t2 , '%Y:%m:%d' ) ) / ( 1000 * 60 * 60 * 24 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 10%|▉         | 169/1746 [00:04<00:37, 42.49it/s]

-------------------------------------


---> lineNum: 170
---> probID: codeforces_894_A
---> inputs:
QAQAQYSYIOIWIN
---> outputs:
4

def main ( ) :
    import string
    s = list ( sys . stdin . readlines ( ) )
    count = 0
    for i in range ( len ( s ) ) :
        al = [ ]
        c = s [ i ]
        if c == 'Q' :
            al . append ( c )
        for a in s [ i + 1 : ] :
            if al :
                if al [ - 1 ] == 'Q' and a == 'A' :
                    al . append ( a )
                if al [ - 1 ] == 'A' and a == 'Q' :
                    al . append ( a )
                if al [ - 1 ] == 'A' and a == 'A' :
                    al . append ( a )
            if len ( al ) >= 3 and al [ 0 ] == 'Q' and al [ - 1 ] == 'Q' :
                count = count + len ( al ) - 3
                al . pop ( )
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 171
---> probID: atcoder_ABC056_D
---> inputs:
3 6
1 4 3
---> outputs:
1

def main ( ) :
    import sys
    import numpy as np
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config
    import numpy . testing . config as config


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 172
---> probID: codeforces_1061_A
---> inputs:
5 11
---> outputs:
3

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        s = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        count = 0
        for i in range ( n , 0 , - 1 ) :
            k = s // i
            count += k
            s -= k * i
        print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 173
---> probID: geeksforgeeks_2566_A
---> inputs:

---> outputs:
10539


def GFG ( x ) :
    import list
    v = [ ]
    def multiply ( x ) :
        carry = 0
        v . append ( x )
        for i in range ( len ( v ) ) :
            res = carry + v [ i ] * x
            v [ i ] = res % 10
            carry = res // 10
        while carry != 0 :
            v . append ( carry % 10 )
            carry //= 10
    def findSumOfDigits ( n ) :
        v . append ( 1 )
        for i in range ( 1 , n + 1 ) :
            multiply ( i )
    sum = 0
    v = list ( v )
    for i in range ( len ( v ) ) :
        sum += v [ i ]
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 174
---> probID: codeforces_436_B
---> inputs:
3 3 4
...
R.L
R.U
---> outputs:
0 2 2

def main ( ) :
    import string
    try :
        N = int ( sys . stdin . readline ( ) )
        M = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    answer = [ 0 ] * M
    for n in range ( N ) :
        S = list ( sys . stdin . readline ( ) )
        for m in range ( M ) :
            c = S [ m ]
            if c == 'L' :
                hit = m - n
                if hit >= 0 :
                    answer [ hit ] += 1
            elif c == 'R' :
                hit = m + n
                if hit < M :
                    answer [ hit ] += 1
            elif c == 'U' :
                if n % 2 == 0 :
                    answer [ m ] += 1
    output = [ ]
    for a in answer :
        output . append ( '%d ' % a )
    print ( '' . join ( output ) )


---> console_out:
 
DIDN'T MATCH!! :(
 10%|▉         | 174/1746 [00:04<00:36, 42.56it/s]

-------------------------------------


---> lineNum: 175
---> probID: codeforces_356_A
---> inputs:
4 3
1 2 1
1 3 3
1 4 4
---> outputs:
3 1 4 0

def codeforces356A ( ) :
    import sys
    import string
    import random
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 176
---> probID: codeforces_581_B
---> inputs:
5
1 2 3 1 2
---> outputs:
3 2 0 2 0

def main ( ) :
    import sys
    import os
    import subprocess
    import sys
    import subprocess
    import sys
    try :
        subprocess . check_call ( [ '/usr/bin/open' , '-w' ] )
    except :
        pass
    n = len ( sys . argv )
    a = [ ]
    for i in range ( n ) :
        a . append ( sys . stdin . read ( ) )
    dp = [ None ] * ( n + 1 )
    dp [ n - 1 ] = a [ n - 1 ]
    for i in range ( n - 1 , - 1 , - 1 ) :
        dp [ i ] = max ( dp [ i + 1 ] , a [ i ] )
    for i in range ( n ) :
        if a [ i ] > dp [ i + 1 ] :
            sys . stdout . write ( '%d ' % ( 0 ) )
        else :
            sys . stdout . write ( '%d ' % ( ( dp [ i + 1 ] - a [ i ] + 1 ) ) )
    sys . stdout . write ( '\n' )
    sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 177
---> probID: geeksforgeeks_4606_A
---> inputs:

---> outputs:
12


def pell ( n ) :
    if n <= 2 :
        return n
    return 2 * pell ( n - 1 ) + pell ( n - 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 178
---> probID: codeforces_334_A
---> inputs:
2
---> outputs:
1 4
2 3

def main ( ) :
    import sys
    import os
    import subprocess
    import subprocess
    import sys
    import subprocess
    import sys
    n = int ( sys . stdin . readline ( ) )
    square = n * n
    odd = [ ]
    even = [ ]
    for i in range ( 1 , square + 1 ) :
        if i % 2 == 0 :
            even . append ( i )
        else :
            odd . append ( i )
    loop = square // n
    div = loop // 2
    debug ( div )
    for i in range ( 1 , loop + 1 ) :
        for j in range ( div ) :
            if i % 2 == 1 :
                sys . stdout . write ( '%d %d ' % ( odd . pop ( 0 ) , even . pop ( - 1 ) ) )
            else :
                sys . stdout . write ( '%d %d ' % ( even . pop ( 0 ) , odd . pop ( - 1 ) ) )
        sys . stdout . write ( '\n' )
    sys . stdout . write ( '' . join ( str ( x ) for x in obj ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 179
---> probID: geeksforgeeks_4880_A
---> inputs:

---> outputs:
1 3 4 2 0 

def print_small ( arr , asize , n ) :
    copy_arr = arr [ asize : ]
    copy_arr . sort ( )
    for i in range ( asize ) :
        if np . searchsorted ( copy_arr , n , arr [ i ] ) > - 1 :
            print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
 10%|█         | 179/1746 [00:04<00:36, 42.38it/s]

-------------------------------------


---> lineNum: 180
---> probID: geeksforgeeks_4219_A
---> inputs:

---> outputs:
4


def count_numbers ( n ) :
    import math
    k = 0
    count = 0
    while n > 0 :
        if n & 1 == 0 :
            count += int ( math . pow ( 2 , k ) )
        k += 1
        n >>= 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 181
---> probID: codeforces_1150_A
---> inputs:
3 4 11
4 2 5
4 4 5 4
---> outputs:
26

def main ( ) :
    import sys
    import os
    import sys
    import math
    try :
        n , m , money = sys . argv [ 1 : ]
        min , max = sys . maxsize , sys . maxsize
        for i in range ( n ) :
            min = min ( sys . maxsize , min )
        for i in range ( m ) :
            max = max ( sys . maxsize , max )
        if money % min == 0 :
            div = money // min
            div = div * max
            print ( max ( div , money ) , file = sys . stderr )
        else :
            div = money // min
            div = ( div * max ) + ( money % min )
            print ( max ( div , money ) , file = sys . stderr )
    except :
        print ( '' . join ( str ( x ) for x in sys . argv [ 1 : ] ) , file = sys . stderr )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552969923_1812/main.py", line 2
    global maximum , x , ans
    ^
SyntaxError: name 'x' is parameter and global


-------------------------------------


---> lineNum: 182
---> probID: geeksforgeeks_2614_A
---> inputs:

---> outputs:
4


def GFG ( x ) :
    global maximum , x , ans
    graph = [ ]
    weight = [ ]
    def __builtin_popcount ( x ) :
        c = 0
        for i in range ( 60 ) :
            if ( ( x >> i ) & 1 ) :
                c += 1
        return c
    def dfs ( node , parent ) :
        a = __builtin_popcount ( weight [ node ] + x )
        if maximum < a :
            maximum = a
            ans = node
        elif maximum == a :
            ans = min ( ans , node )
        for i in range ( len ( graph [ node ] ) ) :
            if graph [ node ] [ i ] == parent :
                continue
            dfs ( graph [ node ] [ i ] , node )
    def main ( args ) :
        x = 15
        weight . append ( 0 )
        weight . append ( 5 )
        weight . append ( 10 )
        weight . append ( 11 )
        weight . append ( 8 )
        weight . append ( 6 )
        for i in range ( 100 ) :
            graph . append ( [ ] )
        graph [ 1 ] . append ( 2 )
        graph [ 2 ] . append ( 3 )
        graph [ 2 ] . append ( 4 )
        graph [ 1 ] . append ( 5 )
        dfs ( 1 , 1 )
        print ( ans )
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 183
---> probID: geeksforgeeks_1938_A
---> inputs:

---> outputs:
2


def GFG ( data , freq ) :
    data = list ( data )
    for c in data :
        freq [ ord ( c ) - ord ( 'a' ) ] += 1
    def max_count ( data , patt ) :
        str_freq = [ 0 ] * MAX
        update_freq ( data , str_freq )
        patt_freq = [ 0 ] * MAX
        update_freq ( patt , patt_freq )
        ans = sys . maxsize
        for i in range ( MAX ) :
            if not patt_freq [ i ] :
                continue
            ans = min ( ans , str_freq [ i ] / patt_freq [ i ] )
        return ans
    def main ( ) :
        data = 'geeksforgeeks'
        patt = 'geeks'
        print ( max_count ( data , patt ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 184
---> probID: codeforces_631_A
---> inputs:
5
1 2 4 3 2
2 3 3 12 1
---> outputs:
22

def main ( args ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        a = [ 0 ] * ( n + 1 )
        b = [ 0 ] * ( n + 1 )
        for i in range ( 1 , n + 1 ) :
            a [ i ] = sys . stdin . readline ( )
        for i in range ( 1 , n + 1 ) :
            b [ i ] = sys . stdin . readline ( )
        a1 , b1 , ans = 0 , 0 , 0
        for i in range ( 1 , n + 1 ) :
            a1 = a1 | a [ i ]
            b1 = b1 | b [ i ]
            if a1 + b1 > ans :
                ans = a1 + b1
        print ( ans )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(
 11%|█         | 184/1746 [00:04<00:36, 42.34it/s]

-------------------------------------


---> lineNum: 185
---> probID: codeforces_354_A
---> inputs:
3 4 4 19 1
42 3 99
---> outputs:
576

def A354 ( ) :
    import sys
    N = sys . stdin . read ( )
    L = sys . stdin . read ( )
    R = sys . stdin . read ( )
    QL = sys . stdin . read ( )
    QR = sys . stdin . read ( )
    W = [ 0 ] * N
    sum = [ 0 ] * N + [ 0 ] * N
    for n in range ( N ) :
        W [ n ] = sys . stdin . read ( )
        sum [ n + 1 ] = sum [ n ] + W [ n ]
    min = sys . maxsize
    for first_r in range ( 0 , N + 1 ) :
        l_count = first_r
        r_count = N - l_count
        cand = sum [ l_count ] * L + ( sum [ N ] - sum [ l_count ] ) * R
        ll_count = max ( 0 , l_count - r_count - 1 )
        rr_count = max ( 0 , r_count - l_count - 1 )
        cand += ll_count * QL
        cand += rr_count * QR
        min = min ( cand , min )
    print ( min )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 186
---> probID: geeksforgeeks_3668_A
---> inputs:

---> outputs:
300.0
1000.0


def wastedWater ( V , M , N ) :
    global wasted_amt , amt_per_min , time_to_fill
    amt_per_min = M - N
    time_to_fill = V / amt_per_min
    wasted_amt = N * time_to_fill
    return wasted_amt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 187
---> probID: geeksforgeeks_1500_A
---> inputs:

---> outputs:
4


def gf_max_sub_str ( data , n ) :
    count0 , count1 = 0 , 0
    cnt = 0
    for c in data :
        if c == '0' :
            count0 += 1
        else :
            count1 += 1
        if count0 == count1 :
            cnt += 1
    if count0 != count1 :
        return - 1
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 188
---> probID: aizu_p02439_A
---> inputs:
4 5 3
---> outputs:
3 5

def main ( ) :
    import sys
    import numpy as np
    abc = np . zeros ( ( 3 , 3 ) )
    abc [ 0 ] = np . random . randint ( 0 , 3 )
    abc [ 1 ] = np . random . randint ( 0 , 3 )
    abc [ 2 ] = np . random . randint ( 0 , 3 )
    max = np . inf
    min = np . inf
    for i in range ( 3 ) :
        if max < abc [ i ] :
            max = abc [ i ]
        if min > abc [ i ] :
            min = abc [ i ]
    print ( min , max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 189
---> probID: geeksforgeeks_1586_A
---> inputs:

---> outputs:
5


def GFG ( s ) :
    sum = 0
    for n in range ( 1 , s ) :
        sum += n
        if sum == s :
            return n
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(
 11%|█         | 189/1746 [00:04<00:37, 41.68it/s]

-------------------------------------


---> lineNum: 190
---> probID: geeksforgeeks_657_A
---> inputs:

---> outputs:
4


def maximum_absolute ( arr , n ) :
    import math
    mn = math . inf
    mx = math . inf
    for i in range ( n ) :
        if i > 0 and arr [ i ] == - 1 and arr [ i - 1 ] != - 1 :
            mn = min ( mn , arr [ i - 1 ] )
            mx = max ( mx , arr [ i - 1 ] )
        if i < n - 1 and arr [ i ] == - 1 and arr [ i + 1 ] != - 1 :
            mn = min ( mn , arr [ i + 1 ] )
            mx = max ( mx , arr [ i + 1 ] )
    common_integer = ( mn + mx ) / 2
    for i in range ( n ) :
        if arr [ i ] == - 1 :
            arr [ i ] = common_integer
    max_diff = 0
    for i in range ( n - 1 ) :
        diff = abs ( arr [ i ] - arr [ i + 1 ] )
        if diff > max_diff :
            max_diff = diff
    return max_diff


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 191
---> probID: geeksforgeeks_1908_A
---> inputs:

---> outputs:
7


def GFG ( N ) :
    MOD = 1000000007
    dp = np . zeros ( ( N + 1 , 3 ) )
    for i in range ( N + 1 ) :
        for j in range ( 9 , 3 ) :
            dp [ i ] [ j ] = 0
    dp [ 1 ] [ 0 ] = 1
    dp [ 1 ] [ 1 ] = 1
    dp [ 1 ] [ 2 ] = 0
    for i in range ( 2 , N + 1 ) :
        dp [ i ] [ 0 ] = ( dp [ i - 1 ] [ 0 ] + dp [ i - 1 ] [ 1 ] + dp [ i - 1 ] [ 2 ] ) % MOD
        dp [ i ] [ 1 ] = dp [ i - 1 ] [ 0 ] % MOD
        dp [ i ] [ 2 ] = dp [ i - 1 ] [ 1 ] % MOD
    ans = ( dp [ N ] [ 0 ] + dp [ N ] [ 1 ] + dp [ N ] [ 2 ] ) % MOD
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 192
---> probID: geeksforgeeks_86_A
---> inputs:

---> outputs:
7


def longest_subseq ( n , k , s ) :
    dp = [ 0 ] * n
    max_length = [ 0 ] * 26
    for i in range ( n ) :
        curr = s [ i ] - 'a'
        lower = max ( 0 , curr - k )
        upper = min ( 25 , curr + k )
        for j in range ( lower , upper + 1 ) :
            dp [ i ] = max ( dp [ i ] , max_length [ j ] + 1 )
        max_length [ curr ] = max ( dp [ i ] , max_length [ curr ] )
    ans = 0
    for i in dp :
        ans = max ( i , ans )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 193
---> probID: geeksforgeeks_4595_A
---> inputs:

---> outputs:
4


def longest_fibonacci_substring ( n , a ) :
    if n <= 2 :
        return n
    len = 2
    mx = sys . maxsize
    for i in range ( 2 , n ) :
        if a [ i ] == a [ i - 1 ] + a [ i - 2 ] :
            len += 1
        else :
            len = 2
        mx = max ( mx , len )
    return mx


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 194
---> probID: geeksforgeeks_3796_A
---> inputs:

---> outputs:
5


def minimum_subarrays ( ar , n ) :
    import numpy as np
    se = [ ]
    cnt = 1
    for i in range ( n ) :
        if ar [ i ] in se :
            se . append ( ar [ i ] )
        else :
            cnt += 1
            se = np . append ( ar [ i ] , ar [ i ] )
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(
 11%|█         | 194/1746 [00:04<00:37, 41.94it/s]

-------------------------------------


---> lineNum: 195
---> probID: geeksforgeeks_1804_A
---> inputs:

---> outputs:
Yes


def GFG ( s ) :
    freq = [ 0 ] * 10
    r , i = 0 , 0
    for i in range ( 10 ) :
        freq [ i ] = 0
    while s != 0 :
        r = s % 10
        s = int ( s / 10 )
        freq [ r ] += 1
    xor__ = 0
    for i in range ( 10 ) :
        xor__ = xor__ ^ freq [ i ]
        if xor__ == 0 :
            return True
        else :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 196
---> probID: codeforces_1016_A
---> inputs:
3 5
3 7 9
---> outputs:
0 2 1

def main ( ) :
    import sys
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 197
---> probID: geeksforgeeks_1178_A
---> inputs:

---> outputs:
Even
Odd
Odd
Even


def GFG ( arr , n ) :
    global even
    global odd
    for i in range ( n ) :
        if arr [ i ] % 2 == 1 :
            odd [ i ] = 1
        if arr [ i ] % 2 == 0 :
            even [ i ] = 1
    for i in range ( 1 , n ) :
        even [ i ] = even [ i ] + even [ i - 1 ]
        odd [ i ] = odd [ i ] + odd [ i - 1 ]
    def isOdd ( L , R ) :
        cnt = odd [ R ]
        if L > 0 :
            cnt -= odd [ L - 1 ]
        if cnt == R - L + 1 :
            return True
        return False
    def performQueries ( a , n , q , m ) :
        precompute ( a , n )
        for i in range ( m ) :
            L , R = q [ i ] [ 0 ] , q [ i ] [ 1 ]
            if isOdd ( L , R ) :
                print ( "Odd" )
            else :
                print ( "Even" )
    def main ( args ) :
        a = [ 2 , 1 , 5 , 7 , 6 , 8 , 9 ]
        n = len ( a )
        q = [ [ 0 , 2 ] , [ 1 , 2 ] , [ 2 , 3 ] , [ 3 , 6 ] ]
        m = len ( q )
        performQueries ( a , n , q , m )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 198
---> probID: codeforces_1430_A
---> inputs:
4
30
67
4
14
---> outputs:
['2 2 2\n7 5 3\n-1\n0 0 2', '0 6 0\n0 5 6\n-1\n0 0 2\n']

def pre422 ( args ) :
    import sys
    import string
    import string
    import list
    class pre422 ( list ) :
        def __init__ ( self ) :
            list . __init__ ( self )
            self . stream = [ ]
        def readline ( self ) :
            while not self . stream or not self . stream . readline ( ) :
                try :
                    self . stream . readline ( )
                except ValueError :
                    pass
            return self . stream . readline ( )
        def readline ( self ) :
            data = ""
            try :
                data = self . stream . readline ( )
            except ValueError :
                pass
            return data
    def main ( args ) :
        obj = [ ]
        s = [ "" ] * 1000
        for n in range ( 1 , 1000 + 1 ) :
            flag = True
            for i in range ( 0 , 1000 + 1 ) :
                for j in range ( 0 , 1000 + 1 ) :
                    if ( n - i * 3 - j * 5 ) % 7 == 0 and ( n - i * 3 - j * 5 ) // 7 >= 0 :
                        s . append ( ( "%d %d %d" % ( i , j , ( n - i * 3 - j * 5 ) // 7 ) ) )
                        flag = False
                        break
                if not flag :
                    break
            if flag :
                s . append ( "-1" )
        tc = obj . count ( )
        while tc :
            n = obj . count ( )
            print ( s [ n - 1 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 199
---> probID: codeforces_665_A
---> inputs:
10 30
10 35
05:20
---> outputs:
5

def BusesBetweenCities ( ) :
    f = sys . stdin
    g = sys . stdout
    a = int ( f . readline ( ) )
    tA = int ( f . readline ( ) )
    f = sys . stdin . readline ( )
    b = int ( f . readline ( ) )
    tB = int ( f . readline ( ) )
    timing = f . readline ( )
    hrs = int ( timing [ : 2 ] )
    mins = int ( timing [ 3 : ] )
    simDeparture = hrs * 60 + mins
    simArrival = simDeparture + tA
    counter = 0
    for i in range ( 300 , 1440 , b ) :
        busDeparture = i
        busArrival = i + tB
        if busDeparture >= simArrival or simDeparture >= busArrival :
            continue
        counter += 1
    g . write ( str ( counter ) )
    g . flush ( )
    g . close ( )


---> console_out:
 
DIDN'T MATCH!! :(
 11%|█▏        | 199/1746 [00:04<00:36, 41.98it/s]

-------------------------------------


---> lineNum: 200
---> probID: codeforces_893_A
---> inputs:
3
1
1
2
---> outputs:
YES

def main ( ) :
    import sys
    import os
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        out = 3
        good = True
        playing = [ 1 , 2 ]
        for i in range ( n ) :
            win = sys . stdin . readline ( )
            if win == out :
                good = False
                break
            else :
                replace = 0
                for j in range ( 1 , 3 + 1 ) :
                    if win != j and out != j :
                        replace = j
                        break
                index = 0
                for j in range ( len ( playing ) ) :
                    if playing [ j ] == replace :
                        index = j
                        break
                playing . pop ( index )
                playing . append ( out )
                out = replace
        if good :
            print ( 'YES' )
        else :
            print ( 'NO' )
    except :
        print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 201
---> probID: geeksforgeeks_830_A
---> inputs:

---> outputs:
3


def GFG ( steps , n ) :
    current_level = 0
    previous_level = 0
    count = 0
    for i in range ( n ) :
        previous_level = current_level
        current_level = current_level + steps [ i ]
        if ( previous_level < 0 and current_level >= 0 ) or ( previous_level > 0 and current_level <= 0 ) :
            count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 202
---> probID: aizu_p02112_A
---> inputs:
1
1 1 359 1
---> outputs:
0

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    holidays = [ ]
    for i in range ( n ) :
        holidays . append ( ( sys . stdin . readline ( ) , sys . stdin . readline ( ) , sys . stdin . readline ( ) , sys . stdin . readline ( ) ) )
    min = sys . maxsize
    for i in range ( 1 , 360 + 1 ) :
        max = 0
        for j in range ( n ) :
            max = max ( max , holidays [ j ] . get_rowded ( i ) )
        min = min ( min , max )
    print ( min )
    class Holiday ( object ) :
        def __init__ ( self , month , day , time , value ) :
            self . start = ( month - 1 ) * 30 + day
            self . end = self . start + time - 1
            if self . end > 360 :
                end -= 360
            self . value = value
        def get_rowded ( self , target ) :
            if self . start > end :
                if target <= end or target >= start :
                    return value
            else :
                if self . start <= target <= end :
                    return value
            if self . target < start :
                v1 = max ( 0 , self . value - ( start - self . target ) )
            else :
                v1 = max ( 0 , self . value - ( 360 + self . start - target ) )
            if self . end < target :
                v2 = max ( 0 , self . value - ( self . target - end ) )
            else :
                v2 = max ( 0 , self . value - ( 360 + self . target - end ) )
            return max ( v1 , v2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 203
---> probID: codeforces_986_B
---> inputs:
5
2 4 5 1 3
---> outputs:
Petr

def main ( ) :
    import sys
    from . import scanner as scanner
    f = sys . stdout
    N = scanner . get_int ( )
    perm = [ scanner . get_int ( ) for i in range ( N ) ]
    swaps = 0
    vis = [ False ] * N
    for i in range ( N ) :
        j , cycle = i , 0
        while not vis [ j ] :
            vis [ j ] = True
            j = perm [ j ] - 1
            cycle += 1
        if cycle > 0 :
            swaps += cycle - 1
    if swaps % 2 != N % 2 :
        f . write ( 'Um_nik\n' )
    else :
        f . write ( 'Petr\n' )
    f . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 204
---> probID: geeksforgeeks_975_A
---> inputs:

---> outputs:
abca


def smallest ( s ) :
    l = len ( s )
    ans = ""
    for i in range ( l - 1 ) :
        if s [ i ] > s [ i + 1 ] :
            for j in range ( l ) :
                if i != j :
                    ans += s [ j ]
            return ans
    ans = s [ : l - 1 ]
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 12%|█▏        | 204/1746 [00:04<00:36, 42.02it/s]

-------------------------------------


---> lineNum: 205
---> probID: atcoder_ABC062_A
---> inputs:
1 3
---> outputs:
Yes

def main ( ) :
    import sys
    try :
        a = int ( sys . stdin . readline ( ) )
        b = int ( sys . stdin . readline ( ) )
        g = [ 0 , 0 , 2 , 0 , 1 , 0 , 1 , 0 , 0 , 0 , 1 , 0 , 1 , 0 ]
        if g [ a ] == g [ b ] :
            print ( "Yes" )
        else :
            print ( "No" )
    except :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 206
---> probID: geeksforgeeks_2524_A
---> inputs:

---> outputs:
3


def find_min_number ( arr , n , k ) :
    i = 0
    j = 0
    min_num = sys . maxsize
    found = False
    sum = 0
    while i < n :
        sum = sum + arr [ i ]
        if sum == k :
            min_num = min ( min_num , ( ( n - ( i + 1 ) ) + j ) )
            found = True
        elif sum > k :
            while sum > k :
                sum = sum - arr [ j ]
                j += 1
            if sum == k :
                min_num = min ( min_num , ( ( n - ( i + 1 ) ) + j ) )
                found = True
        i += 1
    if found :
        return min_num
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 207
---> probID: atcoder_ABC081_A
---> inputs:
101
---> outputs:
2

def solve ( ) :
    import sys
    import os
    import sys
    import subprocess
    import subprocess
    import sys
    import subprocess
    import sys
    import subprocess
    import sys
    import subprocess
    import sys
    try :
        import subprocess
    except :
        pass
    else :
        try :
            subprocess . check_call ( [ 'python' , '-m' , '-o' , '--' , '--' , '--' ] )
        except :
            pass
        else :
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout . flush ( )
            sys . stdout . write ( '\n' )
            sys . stdout

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 208
---> probID: geeksforgeeks_3518_A
---> inputs:

---> outputs:
6th palindrome of 5 digit = 10501
10th palindrome of 6 digit = 109901


def nth_palindrome ( n , k ) :
    temp = ( k // 2 ) if k & 1 else ( k // 2 - 1 )
    palindrome = int ( math . pow ( 10 , temp ) )
    palindrome += n - 1
    print ( palindrome , end = ' ' )
    if ( k & 1 ) > 0 :
        palindrome //= 10
    while palindrome > 0 :
        print ( palindrome % 10 , end = ' ' )
        palindrome //= 10
    print ( '' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 209
---> probID: atcoder_AGC027_B
---> inputs:
2 100
1 10
---> outputs:
355

def main ( ) :
    import sys
    INF = sys . maxsize
    def solve ( ) :
        with open ( '/tmp/' ) as f :
            N = int ( f . read ( ) )
            X = int ( f . read ( ) )
            x = [ ]
            xsum = [ 0 ] * ( N + 1 )
            for i in range ( N ) :
                x [ i ] = int ( f . read ( ) )
                xsum [ i + 1 ] = xsum [ i ] + x [ i ]
        ans = X * N + 5 * xsum [ N ]
        for i in range ( 1 , N ) :
            cost = X * i + 5 * ( xsum [ N ] - xsum [ N - i ] )
            for j , k in enumerate ( range ( 5 , N - i , - i , - 2 , - i ) ) :
                if cost > ans :
                    break
                cost += j * ( xsum [ k ] - xsum [ max ( k - i , 0 ) ] )
            ans = min ( ans , cost )
        print ( ans + N * X )
    return solve


---> console_out:
 
DIDN'T MATCH!! :(
 12%|█▏        | 209/1746 [00:04<00:36, 42.09it/s]

-------------------------------------


---> lineNum: 210
---> probID: geeksforgeeks_3455_A
---> inputs:

---> outputs:
2


def minOperations ( arr , n ) :
    import numpy as np
    import numpy . fft as np
    arr = np . asarray ( arr )
    for i in range ( n ) :
        arr [ i ] += 1
    res = 0
    for i in range ( n ) :
        if arr [ i ] in hashTable :
            for j in range ( i , n ) :
                if arr [ j ] % arr [ i ] == 0 :
                    hashTable [ arr [ j ] ] = 0
            res += 1
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 211
---> probID: codeforces_68_A
---> inputs:
2 7 1 8 2 8
---> outputs:
0

def main ( ) :
    import sys
    try :
        p1 = int ( sys . stdin . readline ( ) )
        p2 = int ( sys . stdin . readline ( ) )
        p3 = int ( sys . stdin . readline ( ) )
        p4 = int ( sys . stdin . readline ( ) )
        a = int ( sys . stdin . readline ( ) )
        b = int ( sys . stdin . readline ( ) )
        global i
        min = min ( min ( p1 , p2 ) , min ( p3 , p4 ) )
        c = 0
        for i in range ( a , b + 1 ) :
            if i < min :
                c += 1
        print ( c )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 212
---> probID: projecteuler_p033_A
---> inputs:

---> outputs:
100

def p033 ( ) :
    print ( eval ( 'p033' ) )
    numer = 1
    denom = 1
    for d in range ( 10 , 100 ) :
        for n in range ( 10 , d ) :
            n0 , n1 = n % 10 , n // 10
            d0 , d1 = d % 10 , d // 10
            if n1 == d0 and n0 * d == n * d1 or n0 == d1 and n1 * d == n * d0 :
                numer *= n
                denom *= d
    return str ( denom / math . gcd ( numer , denom ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 213
---> probID: geeksforgeeks_3003_A
---> inputs:

---> outputs:
4


def count_set_bits ( n ) :
    import math
    count = 0
    while n > 0 :
        count += n & 1
        n >>= 1
    return int ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 214
---> probID: codeforces_1315_A
---> inputs:
6
8 8 0 0
1 10 0 3
17 31 10 4
2 1 0 0
5 10 3 9
10 10 4 8
---> outputs:
56
6
442
1
45
80

def code_chef ( ) :
    import math
    try :
        sc = sys . stdin
        t = sc . count ( ' ' )
        while t > 0 :
            a , b , x , y = sc . read ( )
            ans = max ( max ( x , a - 1 - x ) * b , a * max ( y , b - 1 - y ) )
            print ( ans )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(
 12%|█▏        | 214/1746 [00:05<00:36, 42.34it/s]

-------------------------------------


---> lineNum: 215
---> probID: geeksforgeeks_1516_A
---> inputs:

---> outputs:
2


def min_swaps ( arr ) :
    import numpy as np
    import numpy as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    np . testing . import_numpy ( np . testing . import_numpy ( ) )
    np . testing . import_numpy ( np . testing . import_numpy ( ) )
    np . testing . import_numpy ( np . testing . import_numpy ( ) )
    np . testing . import_numpy ( np . testing . import_numpy ( ) )
    np . testing . import_numpy ( np . testing . import_numpy ( ) )

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 216
---> probID: geeksforgeeks_4864_A
---> inputs:

---> outputs:
40


def sum_truncatable_primes ( n ) :
    import random
    N = 1000005
    prime = [ True ] * N
    def sieve ( ) :
        prime [ 1 ] = False
        prime [ 0 ] = False
        for i in range ( 2 , N ) :
            if prime [ i ] :
                for j in range ( i * 2 , N , i ) :
                    prime [ j ] = False
        return sum
    def sum_truncatable_primes ( n ) :
        sum = 0
        for i in range ( 2 , n ) :
            num = i
            flag = True
            while num > 0 :
                if not prime [ num ] :
                    flag = False
                    break
                num //= 10
            num = i
            power = 10
            while num // power > 0 :
                if not prime [ num % power ] :
                    flag = False
                    break
                power *= 10
            if flag :
                sum += i
        return sum
    def main ( ) :
        n = 25
        sieve ( )
        print ( sum_truncatable_primes ( n ) )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 217
---> probID: geeksforgeeks_3392_A
---> inputs:

---> outputs:
1 3 

def find_weights ( X ) :
    sum = 0
    power = 0
    number = 3
    while sum < X :
        sum = number - 1
        sum //= 2
        power += 1
        number *= 3
    ans = 1
    for i in range ( 1 , power + 1 ) :
        print ( ans , end = ' ' )
        ans = ans * 3


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 218
---> probID: geeksforgeeks_2489_A
---> inputs:

---> outputs:
455

def add_to_array_form ( A , K ) :
    import sys
    v = [ ]
    ans = [ ]
    rem = 0
    i = 0
    for i in range ( len ( A ) - 1 , - 1 , - 1 ) :
        my = A [ i ] + K % 10 + rem
        if my > 9 :
            rem = 1
            v . append ( my % 10 )
        else :
            v . append ( my )
            rem = 0
        K = K // 10
    while K > 0 :
        my = K % 10 + rem
        v . append ( my % 10 )
        if my // 10 > 0 :
            rem = 1
        else :
            rem = 0
        K = K // 10
    if rem > 0 :
        v . append ( rem )
    for j in v [ : - 1 ] :
        ans . append ( j )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 219
---> probID: geeksforgeeks_4262_A
---> inputs:

---> outputs:
ad ae 
bd be 


def GFG ( x , R , C ) :
    for i in range ( C ) :
        dfs ( x , '' , 0 , i , R , C )
        print ( )
    def dfs ( x , res , i , j , R , C ) :
        if i == R :
            print ( res , end = ' ' )
            return
        res = res + x [ i ] [ j ]
        for k in range ( C ) :
            dfs ( x , res , i + 1 , k , R , C )
            if i + 1 == R :
                break
    def dfs ( x , res , i , j , R , C ) :
        x = [ [ 'a' , 'b' ] , [ 'd' , 'e' ] ]
        R , C = len ( x ) , len ( x [ 0 ] )
        print_paths ( x , R , C )
    return '' . join ( dfs ( x , res , i , j , R , C ) )


---> console_out:
 
DIDN'T MATCH!! :(
 13%|█▎        | 219/1746 [00:05<00:36, 42.30it/s]

-------------------------------------


---> lineNum: 220
---> probID: codeforces_1200_A
---> inputs:
8
LLRL1RL1
---> outputs:
1010000011

def main ( args ) :
    from string import join
    sc = open ( args [ 0 ] )
    num = int ( sc . readline ( ) )
    line = sc . readline ( )
    hotel = [ 0 ] * 10
    for actual in line :
        if actual == 'L' :
            bb = True
            for pos in range ( 0 , 10 , 1 ) :
                if hotel [ pos ] == 0 :
                    hotel [ pos ] = 1
                    bb = False
        else :
            if actual == 'R' :
                bb = True
                for pos in range ( 9 , 0 , 1 ) :
                    if hotel [ pos ] == 0 :
                        hotel [ pos ] = 1
                        bb = False
            else :
                pos = int ( "%d" % actual )
                hotel [ pos ] = 0
    res = [ ]
    for x in hotel :
        res . append ( x )
    print ( '' . join ( res ) )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552970850_7665/main.py", line 28
    def uniform ( self , self ) :
    ^
SyntaxError: duplicate argument 'self' in function definition


-------------------------------------


---> lineNum: 221
---> probID: codeforces_1351_B
---> inputs:
3
2 3
3 1
3 2
1 3
3 3
1 3
---> outputs:
Yes
Yes
No

def B_Square ( ) :
    import sys
    import string
    import string
    import string
    import string
    import math
    class B_Square ( ) :
        def __init__ ( self ) :
            string = None
            try :
                s = string . strip ( )
            except :
                pass
            else :
                s = None
        def next ( self ) :
            while not s or not s :
                try :
                    s = string . split ( s )
                except :
                    pass
            return s
        def randint ( self ) :
            return int ( self . __next__ )
        def long ( self ) :
            return float ( self . __next__ )
        def uniform ( self , self ) :
            return float ( self . __next__ )
        def readline ( self ) :
            data = ""
            try :
                if self . __next__ :
                    data = data . strip ( )
                else :
                    data = data . strip ( )
            except :
                pass
            return data
    def main ( ) :
        f = open ( "file" , "r" )
        T = f . readline ( ) . strip ( )
        while T != 0 :
            T -= 1
            a1 , b1 , a2 , b2 = f . readline ( ) . split ( "\n" )
            r1 = list ( map ( min , a1 , b1 ) )
            r2 = list ( map ( min , a2 , b2 ) )
            if r1 [ 0 ] == r2 [ 0 ] and r1 [ 1 ] + r2 [ 1 ] == r1 [ 0 ] :
                print ( "Yes" )
            elif r1 [ 1 ] == r2 [ 1 ] and r1 [ 0 ] + r2 [ 0 ] == r1 [ 1 ] :
                print ( "Yes" )
            else :
                print ( "No" )
    return B_Square


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 222
---> probID: geeksforgeeks_2152_A
---> inputs:

---> outputs:
3.142857142857142


def precision_compute ( x , y , n ) :
    import sys
    if y == 0 :
        sys . stdout . write ( 'Infinite\n' )
        return
    if x == 0 :
        sys . stdout . write ( '0' )
        return
    if n <= 0 :
        sys . stdout . write ( x / y )
        return
    if ( ( x > 0 and y < 0 ) or ( ( x < 0 and y > 0 ) ) ) :
        sys . stdout . write ( '-' )
        x = x if x > 0 else - x
        y = y if y > 0 else - y
    d = x / y
    for i in range ( 0 , n + 1 ) :
        sys . stdout . write ( d )
        x = x - ( y * d )
        if not x :
            break
        x = x * 10
        d = x / y
        if not i :
            sys . stdout . write ( '.' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 223
---> probID: geeksforgeeks_1091_A
---> inputs:

---> outputs:
9261000


def ggcd ( a , b ) :
    import math
    if not b :
        return a
    else :
        return math . gcd ( b , a % b )
def lcmOfArray ( arr , n ) :
    if n < 1 :
        return 0
    lcm = arr [ 0 ]
    for i in range ( 1 , n ) :
        lcm = ( lcm * arr [ i ] ) / math . gcd ( lcm , arr [ i ] )
    return lcm
def minPerfectCube ( arr , n ) :
    global minPerfectCube
    lcm = lcmOfArray ( arr , n )
    minPerfectCube = lcm
    cnt = 0
    while lcm > 1 and lcm % 2 == 0 :
        cnt += 1
        lcm //= 2
    if cnt % 3 == 2 :
        minPerfectCube *= 2
    elif cnt % 3 == 1 :
        minPerfectCube *= 4
    i = 3
    while lcm > 1 :
        cnt = 0
        while lcm % i == 0 :
            cnt += 1
            lcm //= i
        if cnt % 3 == 1 :
            minPerfectCube *= i * i
        elif cnt % 3 == 2 :
            minPerfectCube *= i
        i += 2
    return minPerfectCube


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 224
---> probID: geeksforgeeks_3953_A
---> inputs:

---> outputs:
Specific Level Order Traversal of Binary Tree is
2 3 1 

def main ( ) :
    import sys
    class Node ( int ) :
        def __init__ ( self , data ) :
            self . data = data
            self . left = self . right = None
    class BinaryTree ( Node ) :
        def __init__ ( self , root ) :
            self . root = root
        def print_specific_level_order_util ( self , s ) :
            if not self . root :
                return
            q = [ root . left , root . right ]
            first , second = None , None
            while not self . root :
                first = q . pop ( )
                self . root . left = first . right
                self . root . right = second . right
                self . root . left = first . left
                if first . left . left is not None :
                    q . append ( first . right )
                    self . root . left = second . left
                if first . right is not None :
                    q . append ( first . right )
                    self . root . left = first . right
                if first . left . left is not None :
                    print_specific_level_order_util ( first , s )
            while not self . root :
                print ( self . root . data , end = ' ' )
                self . root . pop ( )
    def main ( ) :
        tree = BinaryTree ( )
        tree . root = Node ( 1 )
        tree . root . left = Node ( 2 )
        tree . root . right = Node ( 3 )
        print ( 'Specific Level Order Traversal of Binary Tree is' )
        tree . print_specific_level_order ( tree . root )


---> console_out:
 
DIDN'T MATCH!! :(
 13%|█▎        | 224/1746 [00:05<00:36, 42.17it/s]

-------------------------------------


---> lineNum: 225
---> probID: geeksforgeeks_1758_A
---> inputs:

---> outputs:
Solid Square:
*****
*****
*****
*****
*****

Hollow Square:
*****
*   *
*   *
*   *
*****


def hollow_square ( rows ) :
    global i , j
    for i in range ( 1 , rows + 1 ) :
        if i == 1 or i == rows :
            for j in range ( 1 , rows + 1 ) :
                print ( "*" , end = ' ' )
        else :
            for j in range ( 1 , rows + 1 ) :
                if j == 1 or j == rows :
                    print ( "*" , end = ' ' )
                else :
                    print ( " " , end = ' ' )
            print ( "\n" , end = ' ' )
def solid_square ( rows ) :
    global i , j
    for i in range ( 1 , rows + 1 ) :
        for j in range ( 1 , rows + 1 ) :
            print ( "*" , end = ' ' )
        print ( "\n" , end = ' ' )
def print_pattern ( rows ) :
    print ( "Solid Square:\n" , end = ' ' )
    solid_square ( rows )
    print ( "\nHollow Square:\n" , end = ' ' )
    hollow_square ( rows )
def main ( ) :
    rows = 5
    print_pattern ( rows )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 226
---> probID: codeforces_110_B
---> inputs:
5
---> outputs:
abcda

def main ( args ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    if n == 1 :
        print ( 'a' )
    elif n == 2 :
        print ( 'ab' )
    elif n == 3 :
        print ( 'abc' )
    else :
        for i in range ( n // 4 ) :
            print ( 'abcd' , end = ' ' )
        t = n % 4
        if t == 1 :
            print ( 'a' )
        elif t == 2 :
            print ( 'ab' )
        elif t == 3 :
            print ( 'abc' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 227
---> probID: codeforces_294_B
---> inputs:
5
1 12
1 3
2 15
2 5
2 1
---> outputs:
5

def main ( ) :
    import sys
    import numpy as np
    import numpy . random
    n = len ( sys . argv )
    data = np . zeros ( ( n + 1 , 2 ) )
    max_len = 0
    for i in range ( 1 , n + 1 ) :
        data [ i ] [ 0 ] = sys . maxsize
        data [ i ] [ 1 ] = sys . maxsize
        max_len += data [ i ] [ 0 ]
    sys . stdout . flush ( )
    dp = np . zeros ( ( max_len + 1 , ) )
    dp [ 0 ] = 10000
    dp [ 0 ] = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( max_len , len ( data [ i ] ) , - 1 ) :
            dp [ j ] = min ( dp [ j ] , dp [ j - data [ i ] [ 0 ] ] + data [ i ] [ 1 ] )
    for i in range ( max_len , - 1 , - 1 ) :
        if max_len - i >= dp [ i ] :
            print ( max_len - i )
            return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 228
---> probID: atcoder_ABC094_A
---> inputs:
3 5 4
---> outputs:
YES

def main ( ) :
    import sys
    import os
    import sys
    import os
    a = sys . stdin . read ( )
    b = sys . stdin . read ( )
    x = sys . stdin . read ( )
    if ( x < a ) or ( ( a + b ) < x ) :
        print ( 'NO' )
    else :
        print ( 'YES' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 229
---> probID: geeksforgeeks_220_A
---> inputs:

---> outputs:
3


def find_largest ( arr , n ) :
    gcd = 0
    for i in range ( n ) :
        gcd = __gcd ( arr [ i ] , gcd )
    return gcd


---> console_out:
 
DIDN'T MATCH!! :(
 13%|█▎        | 229/1746 [00:05<00:35, 42.15it/s]

-------------------------------------


---> lineNum: 230
---> probID: geeksforgeeks_576_A
---> inputs:

---> outputs:
Second Player wins the game


def find_winner ( n ) :
    if ( n - 1 ) % 6 == 0 :
        print ( "Second Player wins the game" )
    else :
        print ( "First Player wins the game" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 231
---> probID: geeksforgeeks_3573_A
---> inputs:

---> outputs:
Following is Breadth First Traversal (starting from vertex 2)
2 0 3 1 

def BFS ( s ) :
    import sys
    import string
    import list
    import list
    adj = [ list ( ) ]
    def Graph ( v ) :
        V = v
        adj = [ [ ] ]
        for i in range ( v ) :
            adj [ i ] . append ( w )
    def Edge ( v , w ) :
        adj [ v ] . append ( w )
    def BFS ( s ) :
        visited = [ False ]
        queue = [ ]
        visited [ s ] = True
        queue . append ( s )
        while len ( queue ) != 0 :
            s = queue . pop ( )
            print ( s , end = ' ' )
            for ( n , v ) in adj [ s ] :
                if not visited [ n ] :
                    visited [ n ] = True
                    queue . append ( n )
    g = Graph ( 4 )
    g . add_edge ( 0 , 1 )
    g . add_edge ( 0 , 2 )
    g . add_edge ( 1 , 2 )
    g . add_edge ( 2 , 0 )
    g . add_edge ( 2 , 3 )
    g . add_edge ( 3 , 3 )
    print ( 'Following is Breadth First Traversal ' '(starting from vertex 2)' )
    g . BFS ( 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 232
---> probID: geeksforgeeks_3472_A
---> inputs:

---> outputs:
Following is Breadth First Traversal (starting from vertex 2)
2 0 3 1 

def BFS ( s ) :
    import sys
    import string
    import list
    import list
    adj = [ list ( ) ]
    def Graph ( v ) :
        V = v
        adj = [ [ ] ]
        for i in range ( v ) :
            adj [ i ] . append ( w )
    def Edge ( v , w ) :
        adj [ v ] . append ( w )
    def BFS ( s ) :
        visited = [ False ]
        queue = [ ]
        visited [ s ] = True
        queue . append ( s )
        while len ( queue ) != 0 :
            s = queue . pop ( )
            print ( s , end = ' ' )
            for ( n , v ) in adj [ s ] :
                if not visited [ n ] :
                    visited [ n ] = True
                    queue . append ( n )
    g = Graph ( 4 )
    g . add_edge ( 0 , 1 )
    g . add_edge ( 0 , 2 )
    g . add_edge ( 1 , 2 )
    g . add_edge ( 2 , 0 )
    g . add_edge ( 2 , 3 )
    g . add_edge ( 3 , 3 )
    print ( 'Following is Breadth First Traversal ' '(starting from vertex 2)' )
    g . BFS ( 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 233
---> probID: geeksforgeeks_1120_A
---> inputs:

---> outputs:
5 8 10 12 13 

def get_elements ( a , arr , n ) :
    elements = [ a ] * ( n + 1 )
    for i in range ( n ) :
        elements [ i + 1 ] = arr [ i ] ^ elements [ i ]
    for i in range ( n + 1 ) :
        print ( elements [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 234
---> probID: codejam_16_41
---> inputs:
4
1 1 1 0
1 2 0 0
2 1 1 2
2 2 0 2

---> outputs:
Case #1: PR
Case #2: IMPOSSIBLE
Case #3: PSRS
Case #4: IMPOSSIBLE


def A ( ) :
    import string
    import sys
    cs = [ 'P' , 'R' , 'S' ]
    dp = [ [ 'P' , 'R' , 'S' ] ]
    for i in range ( 1 , len ( dp [ 0 ] ) ) :
        for j in range ( 3 ) :
            dp [ j ] [ i ] = dp [ j ] [ i - 1 ] + dp [ ( j + 1 ) % 3 ] [ i - 1 ]
            o = dp [ ( j + 1 ) % 3 ] [ i - 1 ] + dp [ j ] [ i - 1 ]
            if o < dp [ j ] [ i ] :
                dp [ j ] [ i ] = o
    T = len ( sys . stdin )
    for i in range ( 1 , T + 1 ) :
        sys . stdout . write ( 'Case #%d: ' % i )
        sys . stdout . write ( solve ( ) )
    return 'IMPOSSIBLE' if ret is None else ret


---> console_out:
 
DIDN'T MATCH!! :(
 13%|█▎        | 234/1746 [00:05<00:35, 42.08it/s]

-------------------------------------


---> lineNum: 235
---> probID: codeforces_333_B
---> inputs:
3 1
2 2
---> outputs:
0

def _30_Chips ( ) :
    import re
    scn = int ( sys . stdin . read ( ) )
    k = len ( scn )
    row = [ False ] * n
    col = [ False ] * n
    for i in range ( k ) :
        val = scn [ i ]
        val2 = scn [ i ]
        row [ val - 1 ] = True
        col [ val2 - 1 ] = True
    ans = 0
    for i in range ( 1 , n - 1 ) :
        if n % 2 == 1 and i == n // 2 :
            if not row [ i ] or not col [ i ] :
                ans += 1
        elif not row [ i ] or not col [ i ] :
            ans = ans + ( 2 if ( not row [ i ] and not col [ i ] ) else 1 )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552971207_5402/main.py", line 15
    print ( "The two repeating elements are: " , x , y , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " " , end = " " , end = " " , end = " & " , end = " & " , end = " " )
                                                                       ^
SyntaxError: keyword argument repeated


-------------------------------------


---> lineNum: 236
---> probID: geeksforgeeks_1493_A
---> inputs:

---> outputs:
The two repeating elements are : 4 & 2


def print_repeating ( arr , size ) :
    S = 0
    P = 1
    x , y = 0 , 0
    D = 0
    n = size - 2 , i
    for i in range ( size ) :
        S = S + arr [ i ]
        P = P * arr [ i ]
    S = S - n * ( n + 1 ) / 2
    P = P / math . factorial ( n )
    D = int ( math . sqrt ( S ** 2 - 4 * P ) )
    x = ( D + S ) / 2
    y = ( S - D ) / 2
    print ( "The two repeating elements are: " , x , y , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " & " , end = " " , end = " " , end = " " , end = " & " , end = " & " , end = " " )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 237
---> probID: aizu_p00836_A
---> inputs:
2
3
17
41
20
666
12
53
0
---> outputs:
1
1
2
3
0
0
1
2

def main ( ) :
    import sys
    count = 1
    is_prime = np . zeros ( 10001 )
    primes = np . zeros ( 100000 )
    sum = np . zeros ( 100000 )
    def is_prime ( i ) :
        is_prime [ i ] = True
        is_prime [ i ] = False
        for i in range ( 0 , i * i + 1 ) :
            if is_prime [ i ] :
                for j in range ( i + i , len ( is_prime ) , i ) :
                    is_prime [ j ] = False
        for i in is_prime :
            if i :
                primes [ count ] = i
                sum [ count ] = sum [ count - 1 ] + primes [ count ]
                count += 1
    def main ( ) :
        with open ( '/tmp/' , 'r' ) as cin :
            while True :
                n = cin . readline ( )
                cnt = 0
                if n == 0 :
                    break
                for i in range ( count ) :
                    for j in range ( i + 1 , count ) :
                        if sum [ j ] - sum [ i ] == n :
                            cnt += 1
                print ( cnt )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 238
---> probID: atcoder_AGC021_B
---> inputs:
99
-597624 -111746
-763451 -909006
889623 352669
-750222 28248
-18288 -97300
765545 -140277
353638 -843558
-826064 985707
850084 329188
605117 -893630
-491067 -861004
204072 215374
501906 687744
958939 74794
562265 -320746
-188128 456002
650567 -594335
-794253 745145
-475876 834471
123399 573522
34925 443871
-935582 343858
-787505 82135
-145089 658822
602317 -697406
263274 -972576
-929401 844863
-747171 199268
-959666 -601220
-897125 692530
-610884 -436755
-458195 -935396
-90495 715006
-920721 877265
623278 -395430
-30508 514839
321218 -232955
-913055 504732
253154 -482912
-768486 467286
-429825 -821249
151322 800710
916040 892014
-539063 691920
-948109 895210
-958378 356070
-859726 -854798
-266817 -391859
-494814 -837985
771621 -358544
-130241 580634
433743 726425
808927 836079
-428889 -310011
420233 -492990
-374326 178099
607817 -817154
738703 356407
-443209 882732
-545159 622014
461087 -735737
203317 -503046
192009 528706
-691771 988989
365717 -285807
-999587 974231
320484 -226195
-869783 364554
-1858 -918858
43354 366046
246156 -945373
570957 -849030
-205436 523777
-852249 113239
-793866 986146
-823507 -847947
-520779 -115306
-872853 391240
142227 -446959
860826 402362
-415806 -626337
241906 226824
133538 283644
825611 912830
55007 -368019
641090 144135
465173 -150217
545525 -83537
578909 361955
-84097 -615101
-561335 -108710
325878 25712
-943542 -652584
312973 747464
-157504 -388122
373884 265085
-794498 -900206
457864 -44312
-415053 -699362
---> outputs:
0.00000000000000000000
0.03023296010721759561
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00662162848797220958
0.00000000000000000000
0.15812711462230091830
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.06409756998449887833
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.04431690633576074179
0.00000000000000000000
0.00000000000000000000
0.04437887715814670120
0.00000000000000000000
0.00000000000000000000
0.00553054036605005704
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.20564414178076056983
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.09067493950998017915
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.01187028589970203288
0.00000000000000000000
0.24352157176574720787
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.02802741206854937606
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.01412685716278153265
0.00000000000000000000
0.00000000000000000000
0.00000000000000000000
0.05282919475053176467
0.00000000000000000000
0.00000000000000000000

def main ( ) :
    import sys
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    if math is None :
        return math
    if math is None :
        return math . nan
    elif math is None :
        return math . nan
    elif math is None :
        return math . nan
    elif math is None :
        return math . nan
    elif math is None :
        return math . nan
    else :
        return math . nan


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 239
---> probID: aizu_p01369_A
---> inputs:
koukyoukoukokukikou
abrakadabra
acmicpc
japaque
helloworld
#
---> outputs:
0
2
4
5
7

def main ( ) :
    import sys
    try :
        sc = sys . stdin
    except :
        print ( "Error" )
        return 1
    try :
        while True :
            st = sc . readline ( )
            if st == "#" :
                break
            c = st . split ( )
            count , t = 0 , check ( c [ 0 ] )
            for c in c [ 1 : ] :
                if t != check ( c [ c [ c [ 0 ] ] ] ) :
                    count += 1
                    t = check ( c [ c [ c [ 0 ] ] ] )
                print ( count )
    except :
        print ( "Error" )
        return 1
    return 2


---> console_out:
 
DIDN'T MATCH!! :(
 14%|█▎        | 239/1746 [00:05<00:35, 42.12it/s]  File "./junk/1692552971302_7635/main.py", line 8
    return '' . join ( str ( n ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( ' SPACETOKEN

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 240
---> probID: codeforces_867_A
---> inputs:
4
FSSF
---> outputs:
NO

def main ( args ) :
    import string
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        return '' . join ( str ( n ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( 'SPACETOKEN' , '' ) . replace ( ' SPACETOKEN

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 241
---> probID: codeforces_1554_A
---> inputs:
4
3
2 4 3
4
3 2 3 1
2
69 69
6
719313 273225 402638 473783 804745 323328
---> outputs:
12
6
4761
381274500335

def test_247 ( ) :
    import sys
    t = sys . maxsize
    for j in range ( t ) :
        n = sys . maxsize
        a = [ ]
        max = 0
        for i in range ( n ) :
            a . append ( sys . maxsize )
        if n == 2 :
            max = a [ 0 ] * a [ 1 ]
        for i in range ( 1 , n - 1 ) :
            if a [ i - 1 ] > a [ i + 1 ] :
                if a [ i ] * a [ i - 1 ] > max :
                    max = a [ i ] * a [ i - 1 ]
            else :
                if a [ i ] * a [ i + 1 ] > max :
                    max = a [ i ] * a [ i + 1 ]
        print ( max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 242
---> probID: geeksforgeeks_1029_A
---> inputs:

---> outputs:
6
190475


def find_gcd ( a , b ) :
    import math
    def find_gcd ( m , n , a , b ) :
        lcm = find_gcd ( a , b )
        a_divisor = n // a - ( m - 1 ) // a
        b_divisor = n // b - ( m - 1 ) // b
        common_divisor = n // lcm - ( m - 1 ) // lcm
        ans = a_divisor + b_divisor - common_divisor
        return ans
    return find_gcd


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 243
---> probID: codeforces_147_A
---> inputs:
galileo galilei was an   italian physicist  ,mathematician,astronomer
---> outputs:
galileo galilei was an italian physicist, mathematician, astronomer

def main ( ) :
    import sys
    import os
    import os
    import sys
    class Punctuation ( object ) :
        def is_latin_letter ( c ) :
            return ord ( c ) >= ord ( 'a' ) and ord ( c ) <= ord ( 'z' )
        def is_punctuation ( c ) :
            if c == '.' :
                return True
            if c == ',' :
                return True
            if c == '!' :
                return True
            if c == '?' :
                return True
            return False
        def main ( ) :
            s = sys . stdin . read ( )
            s = [ s [ 0 ] ]
            for c in s [ 1 : ] :
                if is_latin_letter ( c ) :
                    if not is_latin_letter ( c ) :
                        s . append ( ' ' )
                    s . append ( c )
                elif is_punctuation ( c ) :
                    s . append ( c )
            return True
    return Punctuation ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 244
---> probID: geeksforgeeks_4941_A
---> inputs:

---> outputs:
1


def smallest_kfreq ( a , n , k ) :
    import sys
    m = { }
    for i in range ( n ) :
        if a [ i ] in m :
            m [ a [ i ] ] = m [ a [ i ] ] + 1
        else :
            m [ a [ i ] ] = 1
    res = sys . maxsize
    s = m . keys ( )
    for temp in s :
        if m [ temp ] == k :
            res = min ( res , temp )
    return ( res if res != sys . maxsize else - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 14%|█▍        | 244/1746 [00:05<00:35, 41.85it/s]

-------------------------------------


---> lineNum: 245
---> probID: geeksforgeeks_2871_A
---> inputs:

---> outputs:
Yes


def are_vowels_in_order ( s ) :
    import string
    n = len ( s )
    c = chr ( 64 )
    for i in range ( 1 , n ) :
        if s [ i ] in " a " or s [ i ] in " e " or s [ i ] in " i " or s [ i ] in " o " or s [ i ] in " u" :
            if s [ i ] < c :
                return False
            else :
                c = s [ i ]
    return True


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552971447_4306/main.py", line 29
    print ( already_a [ N ] , end = ' ' , end = ' ' , end = ' ' )
                                          ^
SyntaxError: keyword argument repeated


-------------------------------------


---> lineNum: 246
---> probID: aizu_p00748_A
---> inputs:
40
14
5
165
120
103
106
139
0
---> outputs:
2 6
2 14
2 5
1 1
1 18
5 35
4 4
3 37

def main ( ) :
    import sys
    import os
    a = [ 0 ] * 180
    b = [ 0 ] * 45
    already_a = [ ] * 1000000
    already_b = [ ] * 1000000
    cnt = 0
    for i in range ( 1 , len ( a ) ) :
        t = a [ i ]
        a [ cnt ] = t
    for i in range ( 1 , len ( a ) ) :
        pass
    already_a = [ 0 ] * 1000000
    already_b = [ 0 ] * 1000000
    cnt = 0
    for i in range ( 1 , len ( a ) ) :
        t = b [ i ]
        if t % 2 == 1 :
            b [ cnt ] = t
            cnt += 1
    def a ( ) :
        while True :
            N = os . getppid ( a [ 0 ] )
            if N == 0 :
                break
            cnt = 0
            min = sys . maxsize
            print ( already_a [ N ] , end = ' ' , end = ' ' , end = ' ' )
            print ( already_b [ N ] , end = ' ' , end = ' ' )
    def a ( ) :
        for i in range ( 1 , 1000000 ) :
            mina = sys . maxsize
            minb = sys . maxsize
            x , y = 0 , 0
            for j in range ( 180 and a [ j ] <= i + 1 ) :
                mina = min ( 1 + already_a [ i - a [ j ] ] , mina )
                if a [ j ] % 2 == 1 :
                    minb = min ( 1 + already_b [ i - a [ j ] ] , minb )
            already_a [ i ] = mina
            already_b [ i ] = minb
    def tetrahedral ( a ) :
        return ( a * ( a + 1 ) * ( a + 2 ) ) / 6
    return a , b , cnt


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552971472_7265/main.py", line 21
    return '' . join ( [ chr ( i ) for i in range ( len ( data ) ) ] )
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 247
---> probID: geeksforgeeks_4135_A
---> inputs:

---> outputs:
Yes


def count_of_letters ( data ) :
    letter = 0
    for c in data :
        if ( ord ( c ) >= ord ( 'A' ) and ord ( c ) <= ord ( 'Z' ) ) or ( ord ( c ) >= ord ( 'a' ) and ord ( c ) <= ord ( 'z' ) ) :
            letter += 1
    return letter
def count_of_numbers ( data ) :
    number = 0
    for c in data :
        if ord ( c ) >= ord ( '0' ) and ord ( c ) <= ord ( '9' ) :
            number += 1
    return number
def check ( data ) :
    if count_of_letters ( data ) == count_of_numbers ( data ) :
        sys . stdout . write ( 'Yes\n' )
    else :
        sys . stdout . write ( 'No\n' )
def main ( data ) :
    data = 'GeeKs01324'
    check ( data )
return '' . join ( [ chr ( i ) for i in range ( len ( data ) ) ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 248
---> probID: aizu_p00013_A
---> inputs:
1
6
0
8
10
0
0
0
---> outputs:
6
10
8
1

def main ( args ) :
    import sys
    try :
        box = [ 0 ] * 10
        i = 0
        for n in range ( 10 ) :
            if n == 0 :
                i -= 1
                print ( box [ i ] )
            else :
                box [ i ] = n
                i += 1
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 249
---> probID: atcoder_AGC006_B
---> inputs:
4 4
---> outputs:
Yes
1
2
3
4
5
6
7


def main ( ) :
    import sys
    import string
    import string
    import string
    import string
    try :
        N , x = int ( sys . stdin . readline ( ) ) , int ( sys . stdin . readline ( ) )
    except ValueError :
        print ( "No input" )
        return
    if x == 1 or x == 2 * N - 1 :
        print ( "No" )
        return
    print ( "Yes" )
    low , high = x - 1 , x + 1
    deq = [ x ]
    while low != 0 or high != 2 * N :
        if low == 0 :
            deq . append ( high )
            deq . append ( high + 1 )
            high += 2
        elif high == 2 * N :
            deq . append ( low )
            deq . append ( low - 1 )
            low -= 2
        else :
            deq . append ( low )
            low -= 1
            deq . append ( high )
            high += 1
    for s in deq :
        print ( s )


---> console_out:
 
DIDN'T MATCH!! :(
 14%|█▍        | 249/1746 [00:05<00:35, 41.87it/s]

-------------------------------------


---> lineNum: 250
---> probID: geeksforgeeks_273_A
---> inputs:

---> outputs:
Total perfect divisors of 16 = 3
Total perfect divisors of 12 = 2


def GFG ( ) :
    global perfect_div
    MAX = 100001
    perfect_div = [ 0 ] * MAX
    def precompute_counts ( ) :
        for i in range ( 1 , MAX ) :
            for j in range ( i * i , MAX + i * i ) :
                perfect_div [ j ] += 1
    def count_perfect_divisors ( n ) :
        return perfect_div [ n ]
    def main ( ) :
        precompute_counts ( )
        n = 16
        print ( 'Total perfect divisors of %d = %d' % ( n , count_perfect_divisors ( n ) ) )
        n = 12
        print ( 'Total perfect divisors of %d = %d' % ( n , count_perfect_divisors ( n ) ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 251
---> probID: aizu_p02022_A
---> inputs:
3 2
3 1 5
2 4
---> outputs:
54

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        m = int ( sys . stdin . readline ( ) )
        nn = 0
        for i in range ( n ) :
            nn += int ( sys . stdin . readline ( ) )
        mm = 0
        for i in range ( m ) :
            mm += int ( sys . stdin . readline ( ) )
        print ( nn * mm )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 252
---> probID: aizu_p01520_A
---> inputs:
2 10 2
3 4
---> outputs:
['2', '1\n']

def main ( ) :
    import sys
    import math
    class Main ( sys . stdin ) :
        def __init__ ( self ) :
            sys . stdin . close ( )
            self . n = len ( sys . stdin )
            self . t = len ( sys . stdin )
            self . e = len ( sys . stdin )
            self . x = [ ]
            for i in range ( self . n ) :
                self . x . append ( sys . stdin . read ( ) )
            for i in range ( self . n ) :
                check = self . x [ i ] * ( ( self . t + self . e ) / self . x [ i ] )
                if check <= self . t + self . e and check >= self . t - self . e :
                    print ( ( i + 1 ) )
                    return
            print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 253
---> probID: geeksforgeeks_5050_A
---> inputs:

---> outputs:
8:20


def cal_IST ( h , r ) :
    IST = ( h * r * 1.0 ) / 360
    int_IST = int ( IST )
    float_IST = int ( math . ceil ( int ( ( IST - int_IST ) * 60 ) ) )
    print ( "%d:%d" % ( int_IST , float_IST ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 254
---> probID: geeksforgeeks_4860_A
---> inputs:

---> outputs:
1.000 + i 0.000
1.000 + i 0.000
-1.000 + i 0.000
1.000 + i 0.000
-0.500 + i 0.866
-0.500 - i 0.866


def print_roots ( n ) :
    import math
    theta = math . pi * 2 / n
    for k in range ( n ) :
        real = math . cos ( k * theta )
        img = math . sin ( k * theta )
        print ( "%.3f" % real , end = "" )
        if img >= 0 :
            print ( " + i " , end = "" )
        else :
            print ( " - i " , end = "" )
        print ( "%.3f" % abs ( img ) )


---> console_out:
 
DIDN'T MATCH!! :(
 15%|█▍        | 254/1746 [00:06<00:35, 41.76it/s]

-------------------------------------


---> lineNum: 255
---> probID: geeksforgeeks_2548_A
---> inputs:

---> outputs:
{1, 4}, {1, 5}, {1, 6}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, 

def find_cart ( arr1 , arr2 , n , n1 ) :
    for i in range ( n ) :
        for j in range ( n1 ) :
            print ( '{%d, %d}, ' % ( arr1 [ i ] , arr2 [ j ] ) , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 256
---> probID: geeksforgeeks_2709_A
---> inputs:

---> outputs:
3


def no_of_ways ( s ) :
    import string
    n = len ( s )
    count_left , count_right = 0 , 0
    for i in range ( n ) :
        if s [ i ] == s [ 0 ] :
            count_left += 1
        else :
            break
    for i in range ( n - 1 , - 1 , - 1 ) :
        if s [ i ] == s [ n - 1 ] :
            count_right += 1
        else :
            break
    if s [ 0 ] == s [ n - 1 ] :
        return ( ( count_left + 1 ) * ( count_right + 1 ) )
    else :
        return ( count_left + count_right + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 257
---> probID: geeksforgeeks_2299_A
---> inputs:

---> outputs:
10


def GFG ( ) :
    global prime
    MAX = 1000000
    prime = [ True ] * ( MAX + 1 )
    def SieveOfEratosthenes ( ) :
        for i in range ( MAX ) :
            prime [ i ] = True
        prime [ 1 ] = False
        prime [ 0 ] = False
        for p in range ( 2 , p * MAX + 1 ) :
            if prime [ p ] == True :
                for i in range ( p * 2 , MAX + 1 , p ) :
                    prime [ i ] = False
    def SumOfKthPrimes ( arr , n , k ) :
        c = 0
        sum = 0
        for i in range ( n ) :
            if prime [ arr [ i ] ] :
                c += 1
                if c % k == 0 :
                    sum += arr [ i ]
                    c = 0
        print ( sum )
    def main ( ) :
        SieveOfEratosthenes ( )
        arr = [ 2 , 3 , 5 , 7 , 11 ]
        n = len ( arr )
        k = 2
        SumOfKthPrimes ( arr , n , k )
    return '' . join ( str ( n ) for n in range ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 258
---> probID: geeksforgeeks_4266_A
---> inputs:

---> outputs:
10


def GFG ( ) :
    global prime
    MAX = 1000000
    prime = [ False ] * ( MAX + 1 )
    def SieveOfEratosthenes ( ) :
        for i in range ( 0 , MAX + 1 ) :
            prime [ i ] = True
        prime [ 1 ] = False
        prime [ 0 ] = False
        for p in range ( 2 , p * MAX + 1 ) :
            if prime [ p ] == True :
                for i in range ( p * 2 , MAX + 1 , p ) :
                    prime [ i ] = False
    def solve ( arr , n , k ) :
        c = 0
        sum = 0
        for i in range ( n ) :
            if prime [ arr [ i ] ] :
                c += 1
                if c % k == 0 :
                    sum += arr [ i ]
                    c = 0
        print ( sum )
    def main ( ) :
        SieveOfEratosthenes ( )
        n , k = 5 , 2
        arr = [ 2 , 3 , 5 , 7 , 11 ]
        solve ( arr , n , k )
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 259
---> probID: geeksforgeeks_2331_A
---> inputs:

---> outputs:
21


def GFG ( ) :
    global prime
    prime = [ False ] * ( MAX + 1 )
    def SieveOfEratosthenes ( ) :
        prime [ 1 ] = True
        prime [ 0 ] = True
        for p in range ( 2 , p * MAX + 1 ) :
            if prime [ p ] == False :
                for i in range ( p * 2 , MAX + 1 , p ) :
                    prime [ i ] = True
    def productOfKthPrimes ( arr , n , k ) :
        c = 0
        product = 1
        for i in range ( n ) :
            if not prime [ arr [ i ] ] :
                c += 1
                if c % k == 0 :
                    product *= arr [ i ]
                    c = 0
        print ( product )
    def main ( ) :
        SieveOfEratosthenes ( )
        n , k = 5 , 2
        arr = [ 2 , 3 , 5 , 7 , 11 ]
        productOfKthPrimes ( arr , n , k )
    return main


---> console_out:
 
DIDN'T MATCH!! :(
 15%|█▍        | 259/1746 [00:06<00:35, 41.97it/s]

-------------------------------------


---> lineNum: 260
---> probID: geeksforgeeks_5053_A
---> inputs:

---> outputs:
0101 1111 1001 0110 0000 1010 


def find_all_sequences ( diff , out , start , end ) :
    if abs ( diff ) > ( end - start + 1 ) // 2 :
        return
    if start > end :
        if diff == 0 :
            print ( out [ : - 1 ] , end = end )
            print ( ' ' , end = end )
        return
    out [ start ] = '0'
    out [ end ] = '1'
    find_all_sequences ( diff + 1 , out , start + 1 , end - 1 )
    out [ start ] = out [ end ] = '1'
    find_all_sequences ( diff , out , start + 1 , end - 1 )
    out [ start ] = out [ end ] = '0'
    find_all_sequences ( diff , out , start + 1 , end - 1 )
    out [ start ] = '1'
    out [ end ] = '0'
    find_all_sequences ( diff - 1 , out , start + 1 , end - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 261
---> probID: codeforces_1119_B
---> inputs:
5 7
2 3 5 4 1
---> outputs:
3

def NarrowFridge ( ) :
    import sys
    n , h = sys . maxsize , sys . maxsize
    arr = [ ]
    for i in range ( n ) :
        arr . append ( sys . stdin . read ( n ) )
    overAllPq = list ( reversed ( overAllPq ) )
    ans = - 1
    for i in range ( n ) :
        overAllPq . append ( arr [ i ] )
        pq = list ( reversed ( overAllPq ) )
        c1 , c2 = h , h
        flag = True
        while not pq :
            if flag :
                if c1 >= pq [ - 1 ] :
                    c1 -= pq [ - 1 ]
                else :
                    break
                flag = False
            else :
                if c2 >= pq [ - 1 ] :
                    c2 -= pq [ - 1 ]
                else :
                    break
                flag = True
        if not pq :
            ans = i + 1
        else :
            break
    print ( ans )
    sys . exit ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 262
---> probID: geeksforgeeks_2488_A
---> inputs:

---> outputs:
1 -> 2 -> 3 -> 4 -> 5 -> 6 -> NULL


def GFG ( ) :
    class GFG ( object ) :
        def __init__ ( self , data ) :
            self . data = data
            self . next = None
        def printList ( self , node ) :
            while node is not None :
                print ( "%d -> " % self . data , end = " " )
                node = node . next
            print ( "NULL" )
        def cntNodes ( self , node ) :
            if not node :
                return 0
            return ( 1 + cntNodes ( node . next ) )
        def updateList ( head , m ) :
            cnt = cntNodes ( head )
            if cnt != m and m < cnt :
                skip = cnt - m
                prev = None
                curr = head
                while skip > 0 :
                    prev = curr
                    curr = curr . next
                    skip -= 1
                prev . next = None
                tempHead = head
                head = curr
                while curr . next is not None :
                    curr = curr . next
                curr . next = tempHead
    return GFG ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 263
---> probID: geeksforgeeks_4939_A
---> inputs:

---> outputs:
3


def max_sub_strings ( s , k ) :
    max_sub_str , n = 0 , len ( s )
    for c in range ( 26 ) :
        ch = chr ( ord ( 'a' ) + ord ( c ) )
        curr = 0
        for i in range ( 0 , n - k + 1 ) :
            if s [ i ] != ch :
                continue
            cnt = 0
            while i < n and s [ i ] == ch and cnt != k :
                i += 1
                cnt += 1
            i -= 1
            if cnt == k :
                curr += 1
        max_sub_str = max ( max_sub_str , curr )
    return max_sub_str


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 264
---> probID: geeksforgeeks_626_A
---> inputs:

---> outputs:
0
2
6


def ansQueries ( prefeven , prefodd , l , r ) :
    import string
    if ( r - l + 1 ) % 2 == 0 :
        print ( '0' )
    else :
        if l % 2 == 0 :
            print ( prefeven [ r ] ^ prefeven [ l - 1 ] )
        else :
            print ( prefodd [ r ] ^ prefodd [ l - 1 ] )
    def wrapper ( arr , n , l , r , q ) :
        prefodd = [ 0 ] * 100
        prefeven = [ 0 ] * 100
        for i in range ( 1 , n + 1 ) :
            if ( i ) % 2 == 0 :
                prefeven [ i ] = arr [ i - 1 ] ^ prefeven [ i - 1 ]
                prefodd [ i ] = prefodd [ i - 1 ]
            else :
                prefeven [ i ] = prefeven [ i - 1 ]
                prefodd [ i ] = prefodd [ i - 1 ] ^ arr [ i - 1 ]
        i = 0
        while i != q :
            ansQueries ( prefeven , prefodd , l [ i ] , r [ i ] )
            i += 1
    def main ( ) :
        arr = [ 1 , 2 , 3 , 4 , 5 ]
        n = len ( arr )
        l = [ 1 , 1 , 2 ]
        r = [ 2 , 3 , 4 ]
        q = len ( l )
        wrapper ( arr , n , l , r , q )
    return '' . join ( list ( map ( wrapper , prefeven ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 15%|█▌        | 264/1746 [00:06<00:35, 42.12it/s]

-------------------------------------


---> lineNum: 265
---> probID: codeforces_624_B
---> inputs:
3
2 5 5
---> outputs:
11

def main ( ) :
    import sys
    import random
    n = len ( sys . argv )
    ans = [ random . randint ( 0 , len ( sys . argv ) ) for i in range ( n ) ]
    ans . sort ( )
    count = ans [ n - 1 ]
    for i in range ( n - 2 , - 1 , - 1 ) :
        if ans [ i ] < ans [ i + 1 ] :
            count += ans [ i ]
        else :
            while ans [ i ] >= ans [ i + 1 ] :
                ans [ i ] -= 1
            if ans [ i ] > 0 :
                count += ans [ i ]
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552971922_2906/main.py", line 39
    return None
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 266
---> probID: codeforces_1440_B
---> inputs:
6
2 4
0 24 34 58 62 64 69 78
2 2
27 61 81 91
4 3
2 4 16 18 21 27 36 53 82 91 92 95
3 4
3 11 12 22 33 35 38 67 69 71 94 99
2 1
11 41
3 3
1 1 1 1 1 1 1 1 1
---> outputs:
165
108
145
234
11
3

def main ( ) :
    import sys
    import string
    import string
    import list
    import string
    import random
    import sys
    class FastReader ( sys . stdin ) :
        def readline ( ) :
            try :
                return sys . stdin . readline ( )
            except :
                pass
            return None
        def __next__ ( ) :
            while None or not next ( ) :
                try :
                    sys . stdin . readline ( )
                except :
                    pass
            return next ( )
        def __next__ ( ) :
            return int ( next ( ) )
        def __next__ ( ) :
            return int ( next ( ) )
        def __next__ ( ) :
            return int ( next ( ) )
        def __next__ ( ) :
            return float ( next ( ) )
        def __next__ ( ) :
            return next ( )
        def __next__ ( ) :
            return next ( )
        def __next__ ( ) :
            return next ( )
        def __next__ ( ) :
            return next ( )
return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 267
---> probID: aizu_p02435_A
---> inputs:
3 9
0 0 1
0 0 2
0 0 3
0 2 4
0 2 5
1 0
1 2
2 0
1 0
---> outputs:
3
5
2

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        q = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    Stack = { }
    s = [ ]
    for i in range ( n ) :
        L = [ ]
        Stack [ i ] . append ( sys . stdin . readline ( ) )
    for cmd , t in enumerate ( sys . stdin . readline ( ) . strip ( ) ) :
        if cmd == 0 :
            Stack [ t ] . append ( sys . stdin . readline ( ) )
        elif cmd == 1 and len ( Stack [ t ] ) != 0 :
            s . append ( '%d\n' % len ( Stack [ t ] ) )
        elif cmd == 2 and len ( Stack [ t ] ) != 0 :
            Stack [ t ] . pop ( )
    sys . stdout . write ( '' . join ( s ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 268
---> probID: geeksforgeeks_289_A
---> inputs:

---> outputs:
0 4 8 12 

def GFG ( arr , n ) :
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )
    def removeMin ( arr , n ) :
        i , minVal = arr [ 0 ]
        for i in range ( 1 , n ) :
            minVal = min ( minVal , arr [ i ] )
        for i in range ( n ) :
            arr [ i ] = arr [ i ] - minVal
    def removeFromMax ( arr , n ) :
        i , maxVal = arr [ 0 ]
        for i in range ( 1 , n ) :
            maxVal = max ( maxVal , arr [ i ] )
        for i in range ( n ) :
            arr [ i ] = maxVal - arr [ i ]
    def modifyArray ( arr , n , k ) :
        if k % 2 == 0 :
            removeMin ( arr , n )
        else :
            removeFromMax ( arr , n )
        return arr , n
    def main ( args ) :
        arr = [ 4 , 8 , 12 , 16 ]
        n = len ( arr )
        k = 2
        modifyArray ( arr , n , k )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 269
---> probID: geeksforgeeks_824_A
---> inputs:

---> outputs:
3.333 -3.000


def find_centroid ( v ) :
    ans = [ ]
    n = len ( v )
    signed_area = 0
    for i in range ( n ) :
        x0 , y0 = v [ i ] [ 0 ] , v [ i ] [ 1 ]
        x1 , y1 = v [ ( i + 1 ) % n ] [ 0 ] , v [ ( i + 1 ) % n ] [ 1 ]
        A = ( x0 * y1 ) - ( x1 * y0 )
        signed_area += A
        ans . append ( ( x0 + x1 ) * A )
        ans . append ( ( y0 + y1 ) * A )
    signed_area *= 0.5
    ans . append ( ( ans [ 0 ] ) / ( 6 * signed_area ) )
    ans . append ( ( ans [ 1 ] ) / ( 6 * signed_area ) )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 15%|█▌        | 269/1746 [00:06<00:34, 42.34it/s]

-------------------------------------


---> lineNum: 270
---> probID: codeforces_1531_A
---> inputs:
7
red
violet
unlock
red
orange
lock
indigo
---> outputs:
orange

def main ( ) :
    import sys
    color = "blue"
    locked = False
    f = open ( "/etc/init.d/" )
    _ = f . readlines ( )
    for i in range ( len ( _ ) ) :
        next = _ [ i ]
        if "lock" == next . strip ( ) :
            locked = True
            continue
        if "unlock" == next . strip ( ) :
            locked = False
            continue
        if locked :
            continue
        color = next
    print ( color )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 271
---> probID: geeksforgeeks_3397_A
---> inputs:

---> outputs:
14


def min_operations ( ar , k ) :
    ar . sort ( )
    ops_needed = 0
    for i in range ( k ) :
        ops_needed += ar [ k - 1 ] - ar [ i ]
    ans = ops_needed
    for i in range ( k , len ( ar ) ) :
        ops_needed = ops_needed - ( ar [ i - 1 ] - ar [ i - k ] )
        ops_needed += ( k - 1 ) * ( ar [ i ] - ar [ i - 1 ] )
        ans = min ( ans , ops_needed )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 272
---> probID: geeksforgeeks_4092_A
---> inputs:

---> outputs:
 Special Character 


def char_check ( input_char ) :
    import string
    if ( input_char >= 65 and input_char <= 90 ) or ( input_char >= 97 and input_char <= 122 ) :
        print ( "Alphabet " )
    elif input_char >= 48 and input_char <= 57 :
        print ( "Digit " )
    else :
        print ( "Special Character " )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 273
---> probID: codeforces_1020_B
---> inputs:
3
2 3 2
---> outputs:
2 2 3

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        list = [ ]
        for i in range ( n ) :
            list . append ( sys . stdin . readline ( ) )
    for i in range ( n ) :
        d = { }
        d [ i + 1 ] = 1
        flag = 0
        j = i
        while flag == 0 :
            if list [ j ] not in d :
                d [ list [ j ] ] = 1
            else :
                flag = 1
                print ( list [ j ] , end = ' ' )
            j = list [ j ]
            j -= 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552972109_1475/main.py", line 7
    for i in range ( n ) :
                         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 274
---> probID: codeforces_102_A
---> inputs:
3 3
1 2 3
1 2
2 3
3 1
---> outputs:
6

def zer ( ) :
    import string
    n = len ( string . ascii_lowercase )
    m = len ( string . ascii_lowercase )
    p = [ 0 ] * n
    tab = [ [ ] * n
    for i in range ( n ) :
        p [ i ] = string . ascii_lowercase [ i ]
        tab [ i ] = set ( )
    ans = 3000003
    for i in range ( m ) :
        a = string . ascii_lowercase [ i ] - 1
        b = string . ascii_lowercase [ i ] - 1
        for x in tab [ a ] :
            if x in tab [ b ] :
                ans = min ( p [ a ] + p [ b ] + p [ x ] , ans )
        tab [ a ] . add ( b )
        tab [ b ] . add ( a )
    if ans == 3000003 :
        print ( - 1 )
    else :
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 16%|█▌        | 274/1746 [00:06<00:34, 42.45it/s]

-------------------------------------


---> lineNum: 275
---> probID: codeforces_67_B
---> inputs:
5 2
1 2 1 0 0
---> outputs:
4 1 5 2 3

def CF67B ( ) :
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import os
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import sys
    import string
    import string
    import string
    import sys
    import string
    import string
    import sys
    import os
    if sys . version_info [ 0 ] < 3 :
        import string
        return string
    if sys . version_info [ 0 ] < 3 :
        import string
        return string
    if sys . version_info [ 0 ] < 3 :
        import string
        return string . join ( sys . version_info [ 1 : ] , '' )
    if sys . version_info [ 0 ] < 3 :
        import string
        return string . join ( sys . version , '' )
    if sys . version_info [ 0 ] < 3 :
        import string
        return string . join ( sys . version , '' )
    return string . join ( sys . version , '' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 276
---> probID: codeforces_237_B
---> inputs:
3
3 2 1
4 3 5
6 1
2
---> outputs:
['2\n1 1 2 2\n2 1 3 1', '5\n1 1 2 2 \n1 2 3 1 \n1 3 3 1 \n2 1 2 2 \n2 2 3 1 \n']

def main ( ) :
    import sys
    import re
    class B147 ( object ) :
        def __init__ ( self , x , y ) :
            self . x = x
            self . y = y
        def __call__ ( self , x , y ) :
            return x + y
    n = len ( sys . argv )
    c = [ ]
    table = np . zeros ( ( 50 , 50 ) )
    for i in range ( n ) :
        c . append ( sys . stdin . read ( ) )
    d = { }
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , c [ i - 1 ] + 1 ) :
            cell = int ( sys . stdin . read ( ) )
            d [ cell ] = ( i , j )
            table [ i - 1 ] [ j - 1 ] = cell
    cnt = 0
    m = 0
    s = [ ]
    for i in range ( n ) :
        for j in range ( c [ i ] ) :
            cnt += 1
            if c [ i - 1 ] == cnt :
                continue
            s . append ( '%d %d %d\n' % ( i + 1 , j + 1 , c [ i - 1 ] ) )
            point = d [ cnt ]
            s . append ( '%d %d\n' % ( point [ 0 ] , point [ 1 ] ) )
            tmp = table [ i ] [ j ]
            table [ i ] [ j ] = table [ point [ 0 ] - 1 ] [ point [ 1 ] - 1 ]
            table [ point [ 0 ] - 1 ] [ point [ 1 ] - 1 ] = tmp
            d [ tmp ] = point
            m += 1
    print ( m )
    s = '' . join ( s )
    if m > 0 :
        print ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 277
---> probID: geeksforgeeks_951_A
---> inputs:

---> outputs:
7


def same_occurrence ( arr , n , x , y ) :
    result = 0
    for i in range ( 0 , n - 1 + 1 ) :
        ct_x , ct_y = 0 , 0
        for j in range ( i , n - 1 + 1 ) :
            if arr [ j ] == x :
                ct_x += 1
            elif arr [ j ] == y :
                ct_y += 1
            if ct_x == ct_y :
                result += 1
    return ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 278
---> probID: codeforces_1633_B
---> inputs:
4
01
1010101010111
00110001000
1
---> outputs:
0
5
3
0

def test_251 ( ) :
    import string
    t = len ( string . ascii_lowercase )
    for i in range ( t ) :
        a = string . ascii_lowercase + string . digits + ' '
        if len ( a ) >= 3 :
            z , o = 0 , 0
            for c in a :
                if c == '1' :
                    o += 1
                else :
                    z += 1
            if z > o :
                print ( o )
            elif o > z :
                print ( z )
            else :
                print ( z - 1 )
        else :
            print ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 279
---> probID: codeforces_914_B
---> inputs:
3
4 5 7
---> outputs:
Conan

def encode ( a , n ) :
    import os
    import sys
    import os
    import math
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import os
    import sys
    import os
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import os
    import sys
    import string
    import string
    import string
    import math
    from math import sin , cos , math
    from math import tan , math , pi
    import string
    import string
    import math
    from math import tan , math , pi
    import string
    import string
    import math
    import string
    import sys
    import os
    import sys
    if sys . platform == 'win32' :
        import win32_ver
    else :
        import math
    if sys . platform == 'cygwin' :
        import win32_ver
    else :
        import math
    if sys . platform == 'win32' :
        import win32_ver
    else :
        import math
    if sys . platform == 'win32' :
        import win32_ver
    else :
        import math
    return string


---> console_out:
 
DIDN'T MATCH!! :(
 16%|█▌        | 279/1746 [00:06<00:34, 42.38it/s]

-------------------------------------


---> lineNum: 280
---> probID: geeksforgeeks_803_A
---> inputs:

---> outputs:
1 2 3 4 5 

def main ( ) :
    import sys
    a = [ 1 , 2 , 3 , 4 , 5 ]
    i = 0
    for i in range ( 5 ) :
        sys . stdout . write ( '%d ' % a [ i ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 281
---> probID: geeksforgeeks_218_A
---> inputs:

---> outputs:
Total number of triplets found: 18


def GFG ( ) :
    target = 93
    arr = [ 1 , 31 , 3 , 1 , 93 , 3 , 31 , 1 , 93 ]
    length = len ( arr )
    total_count = 0
    for i in range ( length - 2 ) :
        if target % arr [ i ] == 0 :
            for j in range ( i + 1 , length - 1 ) :
                if target % ( arr [ i ] * arr [ j ] ) == 0 :
                    to_find = target // ( arr [ i ] * arr [ j ] )
                    for k in range ( j + 1 , length ) :
                        if arr [ k ] == to_find :
                            total_count += 1
    print ( "Total number of triplets found: %d" % total_count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 282
---> probID: codeforces_1396_A
---> inputs:
4
1 3 2 4
---> outputs:
['1 1 \n-1\n3 4\n4 2\n2 4\n-3 -6 -6', '1 1\n-1\n1 4\n0 -12 -8 -16\n2 4\n9 6 12\n']

def Multiples_Of_Length ( ) :
    import sys
    class Multiples_Of_Length ( sys . stdin ) :
        def __init__ ( self ) :
            sys . stdin . readline ( )
            self . tokens = [ ]
        def readline ( self ) :
            while not self . tokens or not self . tokens :
                try :
                    self . tokens . append ( None )
                except KeyError :
                    pass
            return self . tokens [ 0 ]
        def readline ( self ) :
            data = ""
            try :
                data = self . readline ( )
            except EOFError :
                pass
            return data
    def main ( ) :
        t = Multiples_Of_Length ( )
        o = sys . stdout . write
        n = t . __next__ ( )
        a = [ ]
        for i in range ( n ) :
            a . append ( t . __next__ ( ) )
        if n == 1 :
            o . write ( "1 1" )
            o . write ( - a [ 0 ] )
            o . write ( "1 1" )
            o . write ( "0" )
            o . write ( "1 1" )
            o . write ( "0" )
        else :
            o . write ( "1 1" )
            o . write ( - a [ 0 ] )
            o . write ( "1 %d" % n )
            a . append ( 0 )
            for i in range ( n ) :
                o . write ( "%d " % - n * a [ i ] )
            o . write ( "\n2 %d" % n )
            for i in range ( 1 , n ) :
                o . write ( "%d " % ( ( n - 1 ) * a [ i ] ) )
        o . flush ( )
        o . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 283
---> probID: geeksforgeeks_1001_A
---> inputs:

---> outputs:
3


def final_num ( arr , n ) :
    result = 0
    for i in range ( n ) :
        result = __gcd ( result , arr [ i ] )
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 284
---> probID: geeksforgeeks_1838_A
---> inputs:

---> outputs:
1
3


def last_element ( a , n ) :
    steps = 1
    v = [ ]
    for i in range ( N ) :
        v . append ( [ ] )
    if n == 1 :
        return a [ 0 ]
    for i in range ( 0 , n , 2 ) :
        v [ steps ] . append ( a [ i ] | a [ i + 1 ] )
    while len ( v [ steps ] ) > 1 :
        steps += 1
        for i in range ( 0 , len ( v [ steps - 1 ] ) , 2 ) :
            if steps % 2 == 1 :
                v [ steps ] . append ( v [ steps - 1 ] [ i ] | v [ steps - 1 ] [ i + 1 ] )
            else :
                v [ steps ] . append ( v [ steps - 1 ] [ i ] ^ v [ steps - 1 ] [ i + 1 ] )
    return v [ steps ] [ 0 ]


---> console_out:
 
DIDN'T MATCH!! :(
 16%|█▋        | 284/1746 [00:06<00:34, 42.65it/s]

-------------------------------------


---> lineNum: 285
---> probID: geeksforgeeks_4700_A
---> inputs:

---> outputs:
4
93
2626


def number_cake ( n ) :
    import math
    n = 2
    print ( number_cake ( n ) )
    n = 8
    print ( number_cake ( n ) )
    n = 25
    print ( number_cake ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 286
---> probID: atcoder_ARC062_B
---> inputs:
2 2
---> outputs:
0


def main ( ) :
    import string
    sc = string . split ( ' ' )
    result = 0
    p = 0
    g = 1
    for c in sc :
        if c == 'g' :
            if p + 1 <= g :
                result += 1
                p += 1
            else :
                g += 1
        else :
            if p + 1 <= g :
                p += 1
            else :
                g += 1
                result -= 1
    print ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 287
---> probID: geeksforgeeks_4386_A
---> inputs:

---> outputs:
***********
***** *****
****   ****
***     ***
**       **
*         *



def pattern ( N ) :
    global i , j , k , space , rows
    i , j , k , space , rows = 0 , 1 , N , 1 , N
    for i in range ( rows , 1 , - 1 ) :
        for j in range ( 1 , i + 1 ) :
            print ( "*" , end = ' ' )
        if i != rows :
            for k in range ( 1 , space + 1 ) :
                print ( " " , end = ' ' )
            space = space + 2
        for j in range ( i , 1 , - 1 ) :
            if j != rows :
                print ( "*" , end = ' ' )
        print ( "\n" , end = ' ' )
    print ( "\n" , end = ' ' )


---> console_out:
 
MATCHED!! :D


-------------------------------------


---> lineNum: 288
---> probID: geeksforgeeks_5207_A
---> inputs:

---> outputs:
7
9


def maximum_middle_value ( n , k , arr ) :
    ans = - 1
    low = ( n + 1 - k ) // 2
    high = ( n + 1 - k ) // 2 + k
    for i in range ( low , high + 1 ) :
        ans = max ( ans , arr [ i - 1 ] )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 289
---> probID: leetcode_437_A
---> inputs:

---> outputs:
3

def path_sum ( root_data ) :
    import re
    class TreeNode ( int ) :
        def __init__ ( self , root_data ) :
            self . val = root_data
            self . left = None
            self . right = None
    class Solution ( object ) :
        def __init__ ( self , result ) :
            self . result = result
            self . cache = { }
            self . cache [ 0 ] = 1
            self . path_sum_helper ( root , sum , 0 )
            return result
        def path_sum_helper ( root , target , so_far ) :
            if root is not None :
                complement = so_far + root . val - target
                if complement in self . cache :
                    result += self . cache [ complement ]
                self . cache [ so_far + root . val ] = self . cache . get ( so_far + root . val , 0 ) + 1
                self . path_sum_helper ( root . left , target , so_far + root . val )
                self . path_sum_helper ( root . right , target , so_far + root . val )
                self . cache [ so_far + root . val ] = self . cache [ so_far + root . val ] - 1
    sobj = Solution ( )
    tree = TreeNode ( 10 )
    tree . left = TreeNode ( 5 )
    tree . right = TreeNode ( - 3 )
    tree . left . left = TreeNode ( 3 )
    tree . left . right = TreeNode ( 2 )
    tree . right . right = TreeNode ( 11 )
    tree . left . left . left = TreeNode ( 3 )
    tree . left . left . right = TreeNode ( - 2 )
    tree . left . right . right = TreeNode ( 1 )
    sum = 8
    out = sobj . path_sum ( tree , sum )
    print ( out )


---> console_out:
 
DIDN'T MATCH!! :(
 17%|█▋        | 289/1746 [00:06<00:34, 42.82it/s]

-------------------------------------


---> lineNum: 290
---> probID: geeksforgeeks_3650_A
---> inputs:

---> outputs:
5


def getmax ( arr , n , x ) :
    import numpy as np
    s = 0
    for i in range ( n ) :
        s = s + arr [ i ]
    print ( min ( s , x ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 291
---> probID: aizu_p00137_A
---> inputs:
2
123
567
---> outputs:
Case 1:
151
228
519
2693
2522
3604
9888
7725
6756
6435
Case 2:
3214
3297
8702
7248
5335
4622
3628
1623
6341
2082

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    for i in range ( 1 , n + 1 ) :
        print ( 'Case %d:' % i )
        msm ( sys . stdin . readline ( ) , 1 )
    def msm ( n , c ) :
        if c == 11 :
            return
        data = str ( n * n )
        s = [ ]
        for i in range ( 8 - len ( data ) ) :
            s . append ( 0 )
        s . append ( data )
        data = '' . join ( s ) [ 2 : 6 ]
        out = int ( data )
        print ( out )
        msm ( out , c + 1 )
        return
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 292
---> probID: aizu_p00753_A
---> inputs:
1
10
13
100
1000
10000
100000
0
---> outputs:
1
4
3
21
135
1033
8392

def main ( ) :
    import sys
    sosu = [ True ] * ( 123456 * 2 + 1 )
    sosu [ 0 ] = False
    sosu [ 1 ] = False
    for i in range ( 2 , 123456 * 2 ) :
        if sosu [ i ] :
            for j in range ( 2 , i * j , 123456 * 2 + 1 ) :
                sosu [ i * j ] = False
    while True :
        n = sys . stdin . read ( 1 )
        if not n :
            break
        count = 0
        for i in range ( n + 1 , n * 2 + 1 ) :
            if sosu [ i ] :
                count += 1
            else :
                continue
        print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 293
---> probID: geeksforgeeks_722_A
---> inputs:

---> outputs:
28


def gf_max_OR ( arr , n ) :
    maxVal = 0
    for i in range ( n - 1 ) :
        for j in range ( i + 1 , n ) :
            maxVal = max ( maxVal , arr [ i ] | arr [ j ] )
    return maxVal


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 294
---> probID: leetcode_771_A
---> inputs:

---> outputs:
3

def num_jewels_in_stones ( J , S ) :
    import set
    class Solution ( object ) :
        def num_jewels_in_stones ( self , J , S ) :
            result = 0
            j_hash = set ( J [ j ] for j in J )
            for s in S :
                if s in j_hash :
                    result += 1
            return result
        def main ( self ) :
            sObj = Solution ( )
            J = 'aA'
            S = 'aAAbbbb'
            out = sObj . num_jewels_in_stones ( J , S )
            print ( out )
    return Solution ( )


---> console_out:
 
DIDN'T MATCH!! :(
 17%|█▋        | 294/1746 [00:06<00:33, 42.83it/s]

-------------------------------------


---> lineNum: 295
---> probID: geeksforgeeks_3572_A
---> inputs:

---> outputs:
4


def GFG ( ) :
    import numpy as np
    global G
    global MAX , n
    global store
    global G
    global d
    def is_clique ( b ) :
        for i in range ( 1 , b ) :
            for j in range ( i + 1 , b ) :
                if not G [ store [ i ] ] [ store [ j ] ] :
                    return False
        return True
    def max_cliques ( i , l ) :
        max_ = 0
        for j in range ( i + 1 , n + 1 ) :
            store [ l ] = j
            if is_clique ( l + 1 ) :
                max_ = max ( max_ , l )
                max_ = max ( max_ , max_cliques ( j , l + 1 ) )
        return max_
    def main ( ) :
        edges = [ [ 1 , 2 ] , [ 2 , 3 ] , [ 3 , 1 ] , [ 4 , 3 ] , [ 4 , 1 ] , [ 4 , 2 ] ]
        edges = list ( edges )
        n = 4
        for i in range ( len ( edges ) ) :
            G [ edges [ i ] [ 0 ] ] [ edges [ i ] [ 1 ] ] = 1
            G [ edges [ i ] [ 1 ] ] [ edges [ i ] [ 0 ] ] = 1
            d [ edges [ i ] [ 0 ] ] += 1
            d [ edges [ i ] [ 1 ] ] += 1
        print ( max_cliques ( 0 , 1 ) )
    return G


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 296
---> probID: geeksforgeeks_1887_A
---> inputs:

---> outputs:
256


def GFG ( n ) :
    k = int ( math . log ( n ) / math . log ( 2 ) )
    return int ( math . pow ( 2 , k ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 297
---> probID: codeforces_342_B
---> inputs:
3 5 1 3
1 1 2
2 2 3
3 3 3
4 1 1
10 1 3
---> outputs:
XXRR

def main ( ) :
    import sys
    f = sys . stdin
    input = f . split ( )
    m = int ( input [ 1 ] )
    s = int ( input [ 2 ] )
    f = int ( input [ 3 ] )
    max_t = - 1
    d = { }
    while m > 0 :
        mth = f . split ( )
        k = int ( mth [ 0 ] )
        d [ k ] = [ int ( mth [ 1 ] ) , int ( mth [ 2 ] ) ]
        max_t = max ( max_t , k )
        m -= 1
    actions = [ ]
    M = ( 'R' if s < f else 'L' )
    d = ( + 1 if s < f else - 1 )
    cur = s
    a = - 1
    b = - 1
    for t in range ( 1 , max_t + 1 ) :
        if d . has_key ( t ) :
            a = d [ t ] [ 0 ] [ 0 ]
            b = d [ t ] [ 1 ] [ 0 ]
        if d . has_key ( t ) and ( ( cur >= a and cur <= b ) or ( cur + d >= a and cur + d <= b ) ) :
            actions . append ( 'X' )
        else :
            actions . append ( M )
            cur += d
        if cur == f :
            break
    while cur != f :
        actions . append ( M )
        cur += d
    print ( '' . join ( actions ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 298
---> probID: geeksforgeeks_3524_A
---> inputs:

---> outputs:
3


def subset_pair_not_divisible_by_k ( arr , N , K ) :
    f = [ 0 ] * K
    f [ arr [ i ] % K ] += 1
    if K % 2 == 0 :
        f [ K // 2 ] = min ( f [ K // 2 ] , 1 )
    res = min ( f [ 0 ] , 1 )
    for i in range ( 1 , K // 2 + 1 ) :
        res += max ( f [ i ] , f [ K - i ] )
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 299
---> probID: codeforces_373_B
---> inputs:
9 1 1
---> outputs:
9

def binary_search ( a ) :
    import math
    ans = 0
    now = 1
    t = 1
    for _ in range ( 10 ) :
        if now * 10 > a :
            ret += ( a - now + 1 ) * t
            break
        ret += now * 9 * t
        now *= 10
        t += 1
    return ret
    def binary_search ( k , l , r , x ) :
        if r >= l :
            mid = l + ( r - l ) // 2
            if mid > ans and mid * k <= x :
                ans = mid
            if k * mid == x :
                return mid
            if k * mid > x :
                return binary_search ( k , l , mid - 1 , x )
            return binary_search ( k , mid + 1 , r , x )
        return - 1
    def f ( ) :
        S = sys . stdin
        gen , st , tim = S
        gen = int ( math . pow ( 10 , 18 ) )
        beg , end = st - 1 , int ( math . pow ( 10 , 18 ) )
        while True :
            med = ( beg + end ) // 2 + 1
            if get ( med ) - get ( st - 1 ) > gen :
                end = med - 1
            else :
                beg = med
            if beg == end :
                print ( beg - st + 1 )
                break
    return f


---> console_out:
 
DIDN'T MATCH!! :(
 17%|█▋        | 299/1746 [00:07<00:33, 42.67it/s]

-------------------------------------


---> lineNum: 300
---> probID: geeksforgeeks_4862_A
---> inputs:

---> outputs:
1, -2.5


def GFG ( a , b , c ) :
    print ( 1 , c / ( a * 1.0 ) )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552972739_6839/main.py", line 16
    return memo [ pos ] [ fl ] [ pr ] = val
                                      ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 301
---> probID: geeksforgeeks_465_A
---> inputs:

---> outputs:
8


def GFG ( pos , fl , pr , bin ) :
    if pos == len ( bin ) :
        return 1
    if memo [ pos ] [ fl ] [ pr ] != - 1 :
        return memo [ pos ] [ fl ] [ pr ]
    val = 0
    if bin [ pos ] == '0' :
        val = val + dp ( pos + 1 , fl , 0 , bin )
    elif bin [ pos ] == '1' :
        val = val + dp ( pos + 1 , 1 , 0 , bin )
    if pr == 0 :
        if fl == 1 :
            val += dp ( pos + 1 , fl , 1 , bin )
        elif bin [ pos ] == '1' :
            val += dp ( pos + 1 , fl , 1 , bin )
    return memo [ pos ] [ fl ] [ pr ] = val
def find_integers ( num ) :
    bin = ""
    while num > 0 :
        if num % 2 == 1 :
            bin += "1"
        else :
            bin += "0"
        num //= 2
    bin = reverse ( bin )
    for i in range ( 32 ) :
        for j in range ( 2 ) :
            for l in range ( 2 ) :
                memo [ i ] [ j ] [ l ] = - 1
    return dp ( 0 , 0 , 0 , bin )
def reverse ( x ) :
    a = list ( x )
    l , r = len ( a ) - 1 , len ( a )
    for l , r in enumerate ( a [ l : r ] ) :
        temp = a [ l ]
        a [ l ] = a [ r ]
        a [ r ] = temp
    return str ( a )
def main ( ) :
    N = 12
    print ( find_integers ( N ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 302
---> probID: geeksforgeeks_3483_A
---> inputs:

---> outputs:
111


def GFG ( mat , n ) :
    dp = np . zeros ( ( n , n ) )
    if mat [ 0 ] [ 0 ] == 1 :
        dp [ 0 ] [ 0 ] = 1
    for i in range ( 1 , n ) :
        if mat [ 0 ] [ i ] == 1 :
            dp [ 0 ] [ i ] = int ( dp [ 0 ] [ i - 1 ] + np . power ( 2 , i ) )
        else :
            dp [ 0 ] [ i ] = dp [ 0 ] [ i - 1 ]
    for i in range ( 1 , n ) :
        if mat [ i ] [ 0 ] == 1 :
            dp [ i ] [ 0 ] = int ( dp [ i - 1 ] [ 0 ] + np . power ( 2 , i ) )
        else :
            dp [ i ] [ 0 ] = dp [ i - 1 ] [ 0 ]
    for i in range ( 1 , n ) :
        for j in range ( 1 , n ) :
            if mat [ i ] [ j ] == 1 :
                dp [ i ] [ j ] = int ( np . maximum ( dp [ i ] [ j - 1 ] , dp [ i - 1 ] [ j ] ) + np . power ( 2 , i + j ) )
            else :
                dp [ i ] [ j ] = np . maximum ( dp [ i ] [ j - 1 ] , dp [ i - 1 ] [ j ] )
    return dp [ n - 1 ] [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 303
---> probID: geeksforgeeks_3183_A
---> inputs:

---> outputs:
1, 89


def create_hash ( hash , max_element ) :
    prev , curr = 0 , 1
    hash . add ( prev )
    hash . add ( curr )
    while curr < max_element :
        temp = curr + prev
        hash . add ( temp )
        prev = curr
        curr = temp
    def find_fibonacci_pair ( n ) :
        hash = set ( )
        create_hash ( hash , n )
        for i in range ( n ) :
            if i in hash and n - i in hash :
                print ( '%d, %d\n' % ( i , n - i ) , end = ' ' )
                return
        print ( '-1\n' , end = ' ' )
    def main ( ) :
        N = 90
        find_fibonacci_pair ( N )
    return main


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552972810_6098/main.py", line 42
    
                             ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 304
---> probID: geeksforgeeks_4540_A
---> inputs:

---> outputs:
3


def countgroup ( a , n ) :
    import sys
    import os
    import math
    import numpy as np
    import numpy . fft as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    a = np . random . rand ( n , n )
    a = np . random . rand ( n , n )
    a = a . astype ( np . float32 )
    a = np . random . rand ( n , n )
    a = np . random . rand ( n , n )
    a = a . astype ( np . float32 )
    a = np . random . rand ( n , n )
    a = a . astype ( np . float32 )
    a = np . random . rand ( n , n )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np . float32 )
    a = a . astype ( np .

---> console_out:
 
DIDN'T MATCH!! :(
 17%|█▋        | 304/1746 [00:07<00:33, 42.61it/s]

-------------------------------------


---> lineNum: 305
---> probID: geeksforgeeks_3580_A
---> inputs:

---> outputs:
13


def max_length ( s , n ) :
    import string
    ans = int ( 0 )
    A = [ ]
    L = [ ]
    R = [ ]
    freq = [ 0 ] * ( n + 5 )
    for i in range ( 26 ) :
        count = 0
        for j in range ( n ) :
            if s [ j ] - 'a' == i :
                count += 1
            freq [ j ] = count
    for j in range ( 1 , n ) :
        L . append ( ( 2 * freq [ j - 1 ] ) - j )
        R . append ( ( 2 * freq [ j ] ) - j )
    max_len = int ( 0 )
    min_val = int ( 0 )
    for j in L :
        min_val = min ( min_val , j )
        A . append ( min_val )
        l , r = 0 , j
        while l <= r :
            mid = ( l + r ) >> 1
            if A [ mid ] <= R [ j ] :
                max_len = max ( max_len , j - mid + 1 )
                r = mid - 1
            else :
                l = mid + 1
    ans = max ( ans , max_len )
    A = [ ]
    R = [ ]
    L = [ ]
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 306
---> probID: geeksforgeeks_3383_A
---> inputs:

---> outputs:
1 2
1 3
1 4


def GFG ( ) :
    import sys
    class GFG ( object ) :
        def __init__ ( self , first , second ) :
            self . first = first
            self . second = second
        def __init__ ( self , first , second ) :
            self . first = first
            self . second = second
    N = 100005
    gr = [ [ ] , [ ] ]
    colour = [ [ ] , [ ] ]
    edges = [ [ ] , [ ] ]
    bip = False
    def add_edge ( x , y ) :
        gr [ x ] . append ( y )
        gr [ y ] . append ( x )
        edges . append ( ( x , y ) )
    def dfs ( x , col ) :
        colour [ x ] = col
        for i in gr [ x ] :
            if colour [ i ] == - 1 :
                dfs ( i , col ^ 1 )
            elif colour [ i ] == col :
                bip = False
    def Directed_Graph ( n , m ) :
        for i in range ( N ) :
            colour [ i ] = - 1
        bip = True
        dfs ( 1 , 1 )
        if not bip :
            sys . stdout . write ( - 1 )
            return
        for i in range ( m ) :
            if colour [ edges [ i ] [ 0 ] ] == 0 :
                list ( edges [ i ] )
            print ( edges [ i ] [ 0 ] , edges [ i ] [ 1 ] )
    def main ( ) :
        n , m = 4 , 3
        for i in gr :
            gr [ i ] = [ ]
        add_edge ( 1 , 2 )
        add_edge ( 1 , 3 )
        add_edge ( 1 , 4 )
        Directed_Graph ( n , m )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 307
---> probID: codeforces_1174_B
---> inputs:
3
4 1 7
---> outputs:
1 4 7

def main ( ) :
    import sys
    import re
    import string
    import string
    import string
    n = int ( sys . stdin . readline ( ) . strip ( ) )
    line1 = sys . stdin . readline ( ) . strip ( ) . split ( )
    arr = [ ]
    for i in range ( n ) :
        arr . append ( int ( line1 [ i ] ) )
    odd , even = False , False
    ans = [ ]
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            even = True
        else :
            odd = True
        ans . append ( arr [ i ] )
    if odd and even :
        ans . sort ( )
    for i in ans :
        print ( i )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 308
---> probID: codeforces_546_A
---> inputs:
3 17 4
---> outputs:
13

def main ( ) :
    import sys
    try :
        o , g , x = 0 , 0 , 0
        n , g = 0 , 0 , 0
        for i in range ( 1 , g + 1 ) :
            x = x + i * o
        borrow = x - n
        if borrow <= 0 :
            print ( 0 )
        else :
            print ( borrow )
    except :
        print ( 'No input found' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552972933_8184/main.py", line 36
    return None
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 309
---> probID: geeksforgeeks_2171_A
---> inputs:

---> outputs:
28


def GFG ( k ) :
    if k <= 1 :
        return False
    for i in range ( 2 , k ) :
        if k % i == 0 :
            return False
    return True
def check ( num , k ) :
    flag = 1
    for i in range ( 2 , k ) :
        if num % i == 0 :
            flag = 0
    if flag == 1 :
        if num % k == 0 :
            return 1
        else :
            return 0
    else :
        return 0
def findCount ( a , b , k ) :
    count = 0
    if not isPrime ( k ) :
        return 0
    else :
        ans = 0
        for i in range ( a , b + 1 ) :
            ans = check ( i , k )
            if ans == 1 :
                count += 1
            else :
                continue
        return count
def main ( args ) :
    a , b , k = 2020 , 6300 , 29
    print ( findCount ( a , b , k ) )
return None


---> console_out:
 
DIDN'T MATCH!! :(
 18%|█▊        | 309/1746 [00:07<00:34, 41.86it/s]

-------------------------------------


---> lineNum: 310
---> probID: codeforces_288_A
---> inputs:
7 4
---> outputs:
ababacd

def main ( ) :
    import sys
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 311
---> probID: geeksforgeeks_3460_A
---> inputs:

---> outputs:
3


def GFG ( ) :
    maxn = 16
    dp , arr = [ 4 , 6 , 9 ]
    for i in range ( maxn ) :
        dp . append ( - 1 )
    dp [ 0 ] = 0
    for i in range ( 1 , maxn ) :
        for k in range ( 3 ) :
            j = arr [ k ]
            if i >= j and dp [ i - j ] != - 1 :
                dp [ i ] = max ( dp [ i ] , dp [ i - j ] + 1 )
    return dp
def Maximum_Summands ( dp , n ) :
    if n < maxn :
        return dp [ n ]
    else :
        t = ( n - maxn ) // 4 + 1
        return t + dp [ n - 4 * t ]
def main ( args ) :
    n = 12
    dp = precompute ( )
    print ( Maximum_Summands ( dp , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 312
---> probID: geeksforgeeks_4481_A
---> inputs:

---> outputs:
Count of squares is 14


def count_squares ( n ) :
    return ( n * ( n + 1 ) / 2 ) * ( 2 * n + 1 ) / 3


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552973030_6143/main.py", line 19
    if 0l in d :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 313
---> probID: atcoder_ABC105_D
---> inputs:
1 2
1
---> outputs:
0

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        m = int ( sys . stdin . readline ( ) )
        a = [ ]
        for i in range ( 1 , n + 1 ) :
            a . append ( sys . stdin . readline ( ) )
        sum = [ 0 ] * ( n + 1 )
        for i in range ( 1 , n + 1 ) :
            sum [ i ] = a [ i ] + sum [ i - 1 ]
        d = { }
        for i in range ( 1 , n + 1 ) :
            d [ sum [ i ] % m ] = 0
        for i in range ( 1 , n + 1 ) :
            x = d [ sum [ i ] % m ]
            d [ sum [ i ] % m ] = x + 1
        ans = 0
        if 0l in d :
            ans = d [ 0l ]
        for i in d :
            if d [ i ] >= 2 :
                for j in d [ i ] :
                    ans += j - 1
        print ( ans )
    except ValueError :
        pass
    class Pair ( object ) :
        def __init__ ( self , from = None , end = None , num = None , bango = None ) :
            self . from = None
            self . end = None
            self . num = None
            self . bango = None
        def __eq__ ( self , other ) :
            otherpair = other
            return self . from == other . num or self . bango == other . num or self . bango == other . bango
        def __eq__ ( self , other ) :
            return self . from == other . num or self . bango or self . num == other . num or self . bango == other . bango
        def __ne__ ( self , other ) :
            otherpair = other . __eq__ ( self , other )
            return self . end == other . num or self . bango == other . bango or self . num == other . num or self . bango == other . bango or self . num == other . num or self . bango == other . num or self . bango == other . bango or self . num == other . num or self . bango == other . num or self .

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 314
---> probID: geeksforgeeks_1959_A
---> inputs:

---> outputs:
2


def find_substring ( arr , n , k ) :
    count_one = [ 0 ] * n
    for i in range ( n ) :
        count_one [ i ] = sum ( arr [ i ] )
    sum = count_one [ 0 ]
    if n == 1 :
        if count_one [ 0 ] >= k :
            return 1
        else :
            return - 1
    ans = sys . maxsize
    i = 1
    j = 0
    while i < n :
        if k == count_one [ j ] :
            ans = 1
            break
        elif k == count_one [ i ] :
            ans = 1
            break
        elif sum + count_one [ i ] < k :
            sum += count_one [ i ]
            i += 1
        elif sum + count_one [ i ] > k :
            ans = min ( ans , ( i - j ) + 1 )
            sum -= count_one [ j ]
            j += 1
        elif sum + count_one [ i ] == k :
            ans = min ( ans , ( i - j ) + 1 )
            sum += count_one [ i ]
            i += 1
    if ans != sys . maxsize :
        return ans
    else :
        return - 1


---> console_out:
 
DIDN'T MATCH!! :(
 18%|█▊        | 314/1746 [00:07<00:34, 41.75it/s]

-------------------------------------


---> lineNum: 315
---> probID: geeksforgeeks_2367_A
---> inputs:

---> outputs:
Loss = 474.725


def GFG ( ) :
    global loss
    loss = float ( 2 * P * P * SP ) / ( 100 * 100 - P * P )
    print ( "Loss = " + "%.3f" % loss )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 316
---> probID: atcoder_ABC094_B
---> inputs:
5 3 3
1 2 4
---> outputs:
1

def main ( ) :
    import sys
    try :
        n , m , x = sys . stdin . read ( ) . split ( ' ' )
        a = [ 1 ] * n
        for i in range ( m ) :
            a [ i ] = 1
        ans1 , ans2 = 0 , 0
        for i in range ( x , 0 , - 1 ) :
            ans1 += a [ i ]
        for i in range ( x , n ) :
            ans2 += a [ i ]
        print ( min ( ans1 , ans2 ) )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552973126_9345/main.py", line 9
    rv = 1 , prev , one_seq , two_seq = 0 , 0 , 0
         ^
SyntaxError: cannot assign to literal


-------------------------------------


---> lineNum: 317
---> probID: codeforces_1138_A
---> inputs:
7
2 2 2 1 1 2 2
---> outputs:
4

def main ( ) :
    import sys
    try :
        n = len ( sys . stdin )
    except AttributeError :
        pass
    else :
        n = len ( sys . stdin )
    rv = 1 , prev , one_seq , two_seq = 0 , 0 , 0
    while n > 0 :
        x = sys . stdin . read ( n )
        if x == 1 :
            if prev == 1 :
                one_seq += 1
            else :
                one_seq = 1
            prev = 1
        else :
            if prev == 2 :
                two_seq += 1
            else :
                two_seq = 1
            prev = 2
        if min ( one_seq , two_seq ) > rv :
            rv = min ( one_seq , two_seq )
    print ( rv * 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 318
---> probID: projecteuler_p092_A
---> inputs:

---> outputs:
8581146

def p092 ( ) :
    print ( eval ( 'p092' ) )
    LIMIT = math . pow ( 10 , 7 )
    def run ( ) :
        count = 0
        for i in range ( 1 , LIMIT ) :
            if is_class89 ( i ) :
                count += 1
        return str ( count )
    def is_class89 ( x ) :
        while True :
            if x == 1 :
                return False
            elif x == 89 :
                return True
            else :
                x = next_number ( x )
    def next_number ( x ) :
        sum = 0
        while x != 0 :
            sum += ( x % 10 ) ** 2
            x //= 10
        return sum
    return run


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 319
---> probID: geeksforgeeks_2840_A
---> inputs:

---> outputs:
5040


def fact ( n ) :
    import string
    fact = 1
    for i in range ( 1 , n + 1 ) :
        fact *= i
    return fact
    def count_strings ( str , n ) :
        distinct_char = set ( str )
        return fact - len ( distinct_char )
    def main ( ) :
        str = 'geeksforgeeks'
        n = len ( str )
        print ( count_strings ( str , n ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(
 18%|█▊        | 319/1746 [00:07<00:34, 41.76it/s]

-------------------------------------


---> lineNum: 320
---> probID: geeksforgeeks_4256_A
---> inputs:

---> outputs:
8 1 

def print_common_elements ( mat ) :
    import re
    mp = { }
    for j in range ( N ) :
        mp [ mat [ 0 ] [ j ] ] = 1
    for i in range ( 1 , M ) :
        for j in range ( N ) :
            if mp . get ( mat [ i ] [ j ] ) and mp [ mat [ i ] [ j ] ] == i :
                mp [ mat [ i ] [ j ] ] = i + 1
                if i == M - 1 :
                    print ( mat [ i ] [ j ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 321
---> probID: codeforces_593_B
---> inputs:
4
1 2
1 2
1 0
0 1
0 2
---> outputs:
NO

def main ( ) :
    import sys
    from math import sin , cos , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs , abs

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 322
---> probID: codeforces_1153_A
---> inputs:
2 2
6 4
9 5
---> outputs:
1

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        t = int ( sys . stdin . readline ( ) )
        s = [ ]
        d = [ ]
        for i in range ( n ) :
            s . append ( sys . stdin . readline ( ) )
            d . append ( sys . stdin . readline ( ) )
        print ( solve ( s , d , t ) )
    except ValueError :
        pass
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 323
---> probID: geeksforgeeks_4085_A
---> inputs:

---> outputs:
335.0


def sum_of_ap ( a , d , n ) :
    sum = 0
    for i in range ( n ) :
        sum = sum + a
        a = a + d
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 324
---> probID: geeksforgeeks_5112_A
---> inputs:

---> outputs:
5 7 8


def find_3_numbers ( arr , n ) :
    small , large = + 2147483647 , + 2147483647
    i = 0
    for i in range ( n ) :
        if arr [ i ] <= small :
            small = arr [ i ]
        elif arr [ i ] <= large :
            large = arr [ i ]
        else :
            break
    if i == n :
        print ( 'No such triplet found' )
        return
    for j in range ( 0 , i + 1 ) :
        if arr [ j ] < large :
            small = arr [ j ]
            break
    print ( small , large , arr [ i ] )
    return


---> console_out:
 
DIDN'T MATCH!! :(
 19%|█▊        | 324/1746 [00:07<00:33, 42.11it/s]

-------------------------------------


---> lineNum: 325
---> probID: geeksforgeeks_896_A
---> inputs:

---> outputs:
Numbers with 3 divisors :
4 9 25 49 

def numbers_with_3_divisors ( n ) :
    prime = [ True ] * ( n + 1 )
    prime [ 0 ] = prime [ 1 ] = False
    for p in range ( 2 , n + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , n + 1 , p ) :
                prime [ i ] = False
    print ( "Numbers with 3 divisors :" )
    for i in range ( 0 , n * 2 + 1 ) :
        if prime [ i ] :
            print ( i * i , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 326
---> probID: geeksforgeeks_3039_A
---> inputs:

---> outputs:
10


def find_pair_count ( N , K ) :
    count = 0
    rem = [ N // K ]
    for i in range ( 1 , K ) :
        rem . append ( ( N - i ) // K + 1 )
    if K % 2 == 0 :
        count += ( rem [ 0 ] * ( rem [ 0 ] - 1 ) ) // 2
        for i in range ( 1 , K // 2 ) :
            count += rem [ i ] * rem [ K - i ]
        count += ( rem [ K // 2 ] * ( rem [ K // 2 ] - 1 ) ) // 2
    else :
        count += ( rem [ 0 ] * ( rem [ 0 ] - 1 ) ) // 2
        for i in range ( 1 , K // 2 + 1 ) :
            count += rem [ i ] * rem [ K - i ]
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 327
---> probID: aizu_p00615_A
---> inputs:
4 5
20 35 60 70
15 30 40 80 90
3 2
10 20 30
42 60
0 1
100
1 1
10
50
0 0
---> outputs:
20
18
100
40

def main ( ) :
    import sys
    try :
        n , m = sys . stdin . read ( ) . split ( ' ' )
    except ValueError :
        pass
    else :
        array = [ ]
        n = n
        m = m
        while not ( n and m ) :
            array . append ( sys . stdin . read ( ) )
        array . sort ( key = len )
        interval = 0
        nt = 0
        for time in array :
            if time - nt > interval :
                interval = time - nt
            nt = time
        print ( interval )
        n , m = n , m


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 328
---> probID: codeforces_1201_B
---> inputs:
4
1 1 2 2
---> outputs:
YES

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        a = [ ]
        for i in range ( n ) :
            a . append ( sys . stdin . readline ( ) )
        print ( 'YES' if 'YES' in a else 'NO' )
        sys . stdout . flush ( )
    except :
        pass
    def solve ( a ) :
        sum = sum ( a )
        max = max ( a )
        return sum % 2 == 0 and max * 2 <= sum
    return solve


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 329
---> probID: geeksforgeeks_4598_A
---> inputs:

---> outputs:
9th Fibonacci Number = 34


def GFG ( n ) :
    global f
    global t
    f = [ 0 , 1 , 1 , 2 , 3 , 5 ]
    def fib ( n ) :
        if n < 6 :
            return f [ n ]
        t = 5
        fn = 5
        while t < n :
            fn = int ( round ( fn * PHI ) )
            t += 1
        return fn
    def main ( n ) :
        n = 9
        print ( n , 'th Fibonacci Number = ' , fib ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 19%|█▉        | 329/1746 [00:07<00:33, 42.47it/s]

-------------------------------------


---> lineNum: 330
---> probID: geeksforgeeks_1427_A
---> inputs:

---> outputs:
8


def GFG ( n , k ) :
    return ( 2 * k )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 331
---> probID: geeksforgeeks_727_A
---> inputs:

---> outputs:
18 18 18 
27 27 27 
36 36 36 


def print_sum_tricky ( mat , k ) :
    import sys
    if k > n :
        return
    strip_sum = np . zeros ( ( n , n ) )
    for j in range ( n ) :
        sum = 0
        for i in range ( k ) :
            sum += mat [ i ] [ j ]
        strip_sum [ 0 ] [ j ] = sum
        for i in range ( 1 , n - k + 1 ) :
            sum += ( mat [ i + k - 1 ] [ j ] - mat [ i - 1 ] [ j ] )
            strip_sum [ i ] [ j ] = sum
    for i in range ( n - k + 1 ) :
        sum = 0
        for j in range ( k ) :
            sum += strip_sum [ i ] [ j ]
        print ( sum , end = ' ' )
        for j in range ( 1 , n - k + 1 ) :
            sum += ( strip_sum [ i ] [ j + k - 1 ] - strip_sum [ i ] [ j - 1 ] )
            print ( sum , end = ' ' )
        print ( )
    sys . stdout . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 332
---> probID: codeforces_30_A
---> inputs:
2 18 2
---> outputs:
3

def A30 ( ) :
    import math
    import os
    import sys
    A = int ( sys . stdin . read ( ) )
    B = int ( sys . stdin . read ( ) )
    N = int ( sys . stdin . read ( ) )
    big_a = math . floor ( A )
    big_b = math . floor ( B )
    for x in range ( - 1000 , 1000 + 1 ) :
        if math . pow ( x , N ) * big_a == big_b :
            print ( x )
            return
    print ( 'No solution' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 333
---> probID: geeksforgeeks_3279_A
---> inputs:

---> outputs:
150


def ncr ( n , r ) :
    ans = 1
    for i in range ( 1 , r + 1 ) :
        ans *= ( n - r + i )
        ans //= i
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 334
---> probID: geeksforgeeks_361_A
---> inputs:

---> outputs:
2


def next_pow2 ( n ) :
    count = 0
    if n is not None and ( n & ( n - 1 ) ) == 0 :
        return n
    while n is not None :
        n >>= 1
        count += 1
    return 1 << count


---> console_out:
 
DIDN'T MATCH!! :(
 19%|█▉        | 334/1746 [00:07<00:33, 42.76it/s]

-------------------------------------


---> lineNum: 335
---> probID: atcoder_AGC017_A
---> inputs:
50 0
72 87 15 1 78 11 80 46 35 87 67 17 83 69 2 54 88 12 60 41 96 83 49 22 99 81 84 83 28 82 58 79 63 88 42 39 49 78 4 38 71 89 15 17 20 82 68 9 53 42
---> outputs:
562949953421312

def Choose ( n , k ) :
    import string
    class NumTh ( string ) :
        def Choose ( n , k ) :
            res = 1
            for i in range ( n , n - k + 1 , - 1 ) :
                res *= i
                res //= k - n + i
            return res
    class Main ( object ) :
        def Choose ( n , k ) :
            N , P = int ( n ) , int ( k )
            Even , Odd = 0 , 0
            for i in range ( N ) :
                A = int ( N )
                if A % 2 == 0 :
                    Even += 1
                else :
                    Odd += 1
            if Odd == 0 :
                if P == 0 :
                    print ( string . strip ( ) )
                else :
                    print ( 0 )
            else :
                print ( string . strip ( ) )
    return NumTh ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 336
---> probID: geeksforgeeks_1582_A
---> inputs:

---> outputs:
4


def mod_inverse ( a , m ) :
    import sys
    a = a % m
    for x in range ( 1 , m ) :
        if ( a * x ) % m == 1 :
            return x
    return 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 337
---> probID: geeksforgeeks_2184_A
---> inputs:

---> outputs:
834


def sum_of_digits ( x ) :
    sum = 0
    while x != 0 :
        sum += x % 10
        x = x // 10
    return sum
    def count_numbers ( l , r ) :
        count = 0
        for i in range ( l , r + 1 ) :
            if i % 2 == 0 and sum_of_digits ( i ) % 3 == 0 :
                count += 1
        return count
    def main ( args ) :
        l , r = 1000 , 6000
        print ( count_numbers ( l , r ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 338
---> probID: geeksforgeeks_916_A
---> inputs:

---> outputs:
a^b is greater
Both are equal


def find_greater ( a , b ) :
    x = float ( a ) * float ( math . log ( float ( b ) ) )
    y = float ( b ) * float ( math . log ( float ( a ) ) )
    if y > x :
        print ( "a^b is greater" )
    elif y < x :
        print ( "b^a is greater" )
    else :
        print ( "Both are equal" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 339
---> probID: geeksforgeeks_4217_A
---> inputs:

---> outputs:
2


def find_answer ( str1 , str2 , n ) :
    from string import substr
    l , r = 0 , 0
    ans = 2
    for i in range ( n ) :
        if str1 [ i ] != str2 [ i ] :
            l = i
            break
    for i in range ( n - 1 , - 1 , - 1 ) :
        if str1 [ i ] != str2 [ i ] :
            r = i
            break
    if r < l :
        return 26 * ( n + 1 )
    elif l == r :
        return ans
    else :
        for i in range ( l + 1 , r + 1 ) :
            if str1 [ i ] != str2 [ i - 1 ] :
                ans -= 1
                break
        for i in range ( l + 1 , r + 1 ) :
            if str1 [ i - 1 ] != str2 [ i ] :
                ans -= 1
                break
        return ans


---> console_out:
 
DIDN'T MATCH!! :(
 19%|█▉        | 339/1746 [00:08<00:32, 42.87it/s]

-------------------------------------


---> lineNum: 340
---> probID: codeforces_1366_B
---> inputs:
3
6 4 3
1 6
2 3
5 5
4 1 2
2 4
1 2
3 3 2
2 3
1 2
---> outputs:
6
2
3

def main ( ) :
    import sys
    t = sys . maxsize
    str = [ ]
    for z in range ( t ) :
        n = sys . maxsize
        x = sys . maxsize
        m = sys . maxsize
        arr = [ [ ] for i in range ( m ) ]
        si = x
        ei = x
        for l , r in zip ( arr , arr ) :
            if ( l <= si and si <= r ) or ( l <= ei and ei <= r ) :
                si = min ( l , si )
                ei = max ( r , ei )
        str . append ( str [ ei - si + 1 : ] )
    print ( '' . join ( str ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 341
---> probID: geeksforgeeks_4524_A
---> inputs:

---> outputs:
Yes


def GFG ( n , l , r ) :
    global num , prev , curr
    num = n >> ( l - 1 )
    prev = num & 1
    num = num >> 1
    for i in range ( 1 , ( r - l ) + 1 ) :
        curr = num & 1
        if curr == prev :
            return False
        prev = curr
        num = num >> 1
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 342
---> probID: codeforces_302_A
---> inputs:
2 3
1 -1
1 1
1 2
2 2
---> outputs:
0
1
0

def eugene ( ) :
    import sys
    try :
        n = len ( sys . stdin )
        k = len ( sys . stdin )
        arr = [ 0 ] * n
        for i in range ( n ) :
            arr [ i ] = sys . stdin . read ( n )
        res = ''
        o , e = 0 , 0
        for i in range ( n ) :
            if arr [ i ] == 1 :
                o += 1
            else :
                e += 1
        for l in range ( k ) :
            r = sys . stdin . read ( n )
            if ( r - l + 1 ) % 2 == 1 :
                res += '0\n'
            else :
                if ( r - l + 1 ) // 2 <= o <= e :
                    res += '1\n'
                else :
                    res += '0\n'
        sys . stdout . write ( res )
        sys . stdout . flush ( )
    except Exception as e :
        print ( e )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 343
---> probID: geeksforgeeks_1792_A
---> inputs:

---> outputs:
255


def nth_group ( n ) :
    import math
    return n * ( 2 * int ( math . pow ( n , 2 ) ) + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 344
---> probID: codeforces_711_B
---> inputs:
3
4 0 2
3 5 7
8 1 6
---> outputs:
9

def main ( ) :
    import sys
    import math
    n = len ( sys . argv )
    magic_square = np . zeros ( ( n , n ) )
    row , column = - 1 , - 1
    for i in range ( n ) :
        for j in range ( n ) :
            magic_square [ i ] [ j ] = sys . maxsize
            if magic_square [ i ] [ j ] == 0 :
                row = i
                column = j
    if n == 1 :
        print ( 1 )
        return
    sum = 0
    for i in range ( n ) :
        if row != 0 :
            sum += magic_square [ 0 ] [ i ]
        else :
            sum += magic_square [ 1 ] [ i ]
    answer = sum
    for i in range ( n ) :
        answer -= magic_square [ row ] [ i ]
    magic_square [ row ] [ column ] = answer
    m = 0
    current_sumi , current_sumj = 0 , 0
    for i in range ( n ) :
        for j in range ( n ) :
            current_sumi += magic_square [ i ] [ j ]
            current_sumj += magic_square [ j ] [ i ]
        if current_sumi != sum or current_sumj != sum :
            m += 1
        current_sumi = 0
        current_sumj = 0
    for i in range ( n ) :
        current_sumi += magic_square [ i ] [ i ]
        current_sumj += magic_square [ n - i - 1 ] [ i ]
    if current_sumi != sum or current_sumj != sum :
        m += 1
    if m == 0 and answer > 0 :
        print ( answer )
    else :
        print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 20%|█▉        | 344/1746 [00:08<00:32, 42.89it/s]

-------------------------------------


---> lineNum: 345
---> probID: codeforces_732_B
---> inputs:
3 5
2 0 1
---> outputs:
4
2 3 2

def main ( ) :
    import sys
    import string
    import math
    import io
    import sys
    arr = [ 0 ] * n
    sum1 , sum2 = 0 , 0
    for i in range ( n ) :
        arr [ i ] = int ( sys . stdin . read ( ) )
        sum1 = sum1 + arr [ i ]
    for i in range ( 1 , n ) :
        csum = 0
        csum = arr [ i ] + arr [ i - 1 ]
        if k > csum :
            arr [ i ] = arr [ i ] + k - csum
    for i in range ( n ) :
        sum2 = sum2 + arr [ i ]
    print ( sum2 - sum1 )
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )
    print ( )
def isPrime ( n ) :
    if n <= 1 :
        return False
    if n <= 3 :
        return True
    if n % 2 == 0 or n % 3 == 0 :
        return False
    for i in range ( 5 , n * i + 6 ) :
        if n % i == 0 or n % ( i + 2 ) == 0 :
            return False
    return True
def gcd ( a , b ) :
    if a == 0 :
        return b
    return gcd ( b % a , a )
def lcm ( a , b ) :
    return ( a // gcd ( a , b ) ) * b


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 346
---> probID: geeksforgeeks_4878_A
---> inputs:

---> outputs:
4


def maximum_occurred_element ( L , R , n ) :
    import numpy as np
    MAX = 1000000
    def maximum_occurred_element ( L , R , n ) :
        arr = np . zeros ( MAX )
        maxi = - 1
        for i in range ( n ) :
            arr [ L [ i ] ] += 1
            arr [ R [ i ] + 1 ] -= 1
            if R [ i ] > maxi :
                maxi = R [ i ]
        msum = arr [ 0 ]
        ind = 0
        for i in range ( 1 , maxi + 1 ) :
            arr [ i ] += arr [ i - 1 ]
            if msum < arr [ i ] :
                msum = arr [ i ]
                ind = i
        return ind
    L = [ 1 , 4 , 9 , 13 , 21 ]
    R = [ 15 , 8 , 12 , 20 , 30 ]
    n = len ( L )
    print ( maximum_occurred_element ( L , R , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 347
---> probID: codeforces_344_A
---> inputs:
6
10
10
10
01
10
10
---> outputs:
3

def Rough_02 ( ) :
    import numpy as np
    n = np . size ( np . array ( [ 0 ] ) )
    arr = np . array ( [ 0 ] * n )
    count = 1
    for i in range ( n - 1 ) :
        if arr [ i ] != arr [ i + 1 ] :
            count += 1
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 348
---> probID: codeforces_190_A
---> inputs:
1 2
---> outputs:
2 2

def main ( ) :
    import sys
    import os
    import sys
    n = sys . maxsize
    m = sys . maxsize
    if n == 0 :
        if m != 0 :
            print ( "Impossible" )
        else :
            print ( 0 , 0 )
        return
    if m <= n :
        if m == 0 :
            m = 1
        print ( n , m + n - 1 , end = " " )
        return
    print ( m , m + n - 1 , end = " " )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 349
---> probID: geeksforgeeks_3442_A
---> inputs:

---> outputs:
0.6879


def GFG ( x ) : return ( 1 / ( 1 + x ** 2 ) )
def calculate ( lower_limit , upper_limit , interval_limit ) :
    global value
    interval_size = ( upper_limit - lower_limit ) / interval_limit
    sum = func ( lower_limit ) + func ( upper_limit )
    for i in range ( 1 , interval_limit ) :
        if i % 3 == 0 :
            sum = sum + 2 * func ( lower_limit + i * interval_size )
        else :
            sum = sum + 3 * func ( lower_limit + i * interval_size )
    return ( 3 * interval_size / 8 ) * sum
def main ( ) :
    interval_limit = 10
    lower_limit = 1
    upper_limit = 10
    integral_res = calculate ( lower_limit , upper_limit , interval_limit )
    print ( "%.4f" % integral_res )


---> console_out:
 
DIDN'T MATCH!! :(
 20%|█▉        | 349/1746 [00:08<00:32, 42.89it/s]

-------------------------------------


---> lineNum: 350
---> probID: atcoder_ABC044_A
---> inputs:
5
3
10000
9000
---> outputs:
48000

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        k = int ( sys . stdin . readline ( ) )
        x = sys . stdin . readline ( )
        y = sys . stdin . readline ( )
        sum = 0
        if n > k :
            sum += x * k
            sum += y * ( n - k )
        else :
            sum += x * n
        print ( sum )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552973918_3166/main.py", line 3
    for x , h in enumerate ( open ( ' . . / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s /

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 351
---> probID: aizu_p00073_A
---> inputs:
6
4
7
9
0
0
---> outputs:
96.000000
184.192455

def main ( ) :
    import math
    for x , h in enumerate ( open ( ' . . / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s / s /

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 352
---> probID: codeforces_919_B
---> inputs:
1
---> outputs:
19

def count ( num ) :
    import sys
    sum = 0
    while num > 0 :
        sum += num % 10
        num = num // 10
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552973965_6094/main.py", line 51
    np . testing . as_testing as np
                              ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 353
---> probID: geeksforgeeks_5176_A
---> inputs:

---> outputs:
5 7 11 13
11 13 17 19


def test_sieve ( ) :
    import numpy as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    import numpy . testing as np
    import numpy . testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    np . testing . as_testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    np . testing as np . testing as np
    import testing as np
    np . testing . as_testing as np . testing as np
    np . testing . as_testing as np . testing . as_testing as np
    np . testing . as_testing . as_testing . assertRaises ( np . testing . as_testing , np . testing . as_testing )
    np . testing . as_testing . assertRaises ( np . testing . as_testing , np . testing . as_testing , np . testing . as_testing )
    np . testing . as_testing . assertRaises ( np . testing . as_testing , np . testing . as_testing )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 354
---> probID: geeksforgeeks_1284_A
---> inputs:

---> outputs:
3


def GFG ( x , y , n , m ) :
    dp = np . zeros ( ( MAX , MAX ) )
    for i in range ( 0 , m + 1 ) :
        for j in range ( 0 , n + 1 ) :
            dp [ i ] [ j ] = 0
    for i in range ( 1 , m + 1 ) :
        for j in range ( 1 , n + 1 ) :
            if x [ j - 1 ] == y [ i - 1 ] :
                dp [ i ] [ j ] = 1 + dp [ i - 1 ] [ j - 1 ]
            else :
                dp [ i ] [ j ] = dp [ i ] [ j - 1 ]
    ans = 0
    for i in range ( 1 , m + 1 ) :
        ans = max ( ans , dp [ i ] [ n ] )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 20%|██        | 354/1746 [00:08<00:32, 42.69it/s]

-------------------------------------


---> lineNum: 355
---> probID: geeksforgeeks_2092_A
---> inputs:

---> outputs:
23


def find_sum ( n , a , b ) :
    import sys
    sum = 0
    for i in range ( n ) :
        if i % a == 0 or i % b == 0 :
            sum += i
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 356
---> probID: codeforces_518_B
---> inputs:
AbC
DCbA
---> outputs:
3 0

def tanyaandpostcard ( args ) :
    import string
    s1 = string . replace ( ' ' , '' )
    s2 = string . replace ( ' ' , '' )
    a = [ 0 ] * 123
    b = [ 0 ] * len ( s1 )
    i , y , w = 0 , 0 , 0
    for ch in s2 :
        a [ ch ] += 1
    for ch in s1 :
        if a [ ch ] >= 1 :
            a [ ch ] -= 1
            b [ ch ] = 1
            y += 1
    for ch in s1 :
        if b [ ch ] == 0 :
            if ch <= 90 :
                ch = chr ( ord ( ch ) + 32 )
            else :
                ch = chr ( ord ( ch ) - 32 )
            if a [ ch ] >= 1 :
                a [ ch ] -= 1
                w += 1
    print ( y , w )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 357
---> probID: geeksforgeeks_507_A
---> inputs:

---> outputs:
2
23


def GFG ( ) :
    global sequence
    global sequence
    global vanEckSequence
    for i in range ( MAX - 1 ) :
        sequence [ i ] = 0
    for i in range ( MAX - 1 ) :
        for j in range ( i - 1 , - 1 , - 1 ) :
            if sequence [ j ] == sequence [ i ] :
                sequence [ i + 1 ] = i - j
                break
    def getNthTerm ( n ) :
        return sequence [ n ]
    def main ( ) :
        vanEckSequence ( )
        n = 6
        print ( getNthTerm ( n ) )
        n = 100
        print ( getNthTerm ( n ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 358
---> probID: geeksforgeeks_498_A
---> inputs:

---> outputs:
1
5


def GFG ( ) :
    global sequence
    global sequence
    global sequence
    for i in range ( MAX + 1 ) :
        sequence [ i ] = 0
    for i in range ( MAX ) :
        for j in range ( i - 1 , - 1 , - 1 ) :
            if sequence [ j ] == sequence [ i ] :
                sequence [ i + 1 ] = i - j
                break
    def getCount ( n ) :
        count = 1
        i = n - 1
        while sequence [ i + 1 ] != 0 :
            count += 1
            i = i - sequence [ i + 1 ]
        return count
    def main ( ) :
        vanEckSequence ( )
        n = 5
        print ( getCount ( n ) )
        n = 11
        print ( getCount ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 359
---> probID: geeksforgeeks_497_A
---> inputs:

---> outputs:
1
5


def GFG ( ) :
    global sequence
    global sequence
    global sequence
    for i in range ( MAX + 1 ) :
        sequence [ i ] = 0
    for i in range ( MAX ) :
        for j in range ( i - 1 , - 1 , - 1 ) :
            if sequence [ j ] == sequence [ i ] :
                sequence [ i + 1 ] = i - j
                break
    def getCount ( n ) :
        nth_term = sequence [ n - 1 ]
        count = 0
        for i in range ( n ) :
            if sequence [ i ] == nth_term :
                count += 1
        return count
    def main ( ) :
        vanEckSequence ( )
        n = 5
        print ( getCount ( n ) )
        n = 11
        print ( getCount ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 21%|██        | 359/1746 [00:08<00:32, 42.50it/s]

-------------------------------------


---> lineNum: 360
---> probID: geeksforgeeks_2382_A
---> inputs:

---> outputs:
10


def __gcd ( a , b , n ) :
    import math
    if not a or not b :
        return 0
    if a == b :
        return a
    if a > b :
        return __gcd ( a - b , b )
    return __gcd ( a , b - a )
def nth_element ( a , b , n ) :
    lcm = ( a * b ) / __gcd ( a , b )
    l , r = 1 , min ( a , b ) * n
    while l <= r :
        mid = ( l + r ) >> 1
        val = mid // a + mid // b - mid // lcm
        if val == n :
            return max ( ( mid // a ) * a , ( mid // b ) * b )
        if val < n :
            l = mid + 1
        else :
            r = mid - 1
    return 0
def main ( ) :
    a , b , n = 5 , 3 , 5
    print ( nth_element ( a , b , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 361
---> probID: codeforces_678_B
---> inputs:
2016
---> outputs:
2044

def main ( ) :
    import datetime
    import sys
    y = int ( sys . stdin . readline ( ) )
    leap = check_leap ( y )
    sum = 0
    mod = 0
    for i in range ( y + 1 ) :
        if check_leap ( i ) :
            sum += 366
        else :
            sum += 365
        if sum % 7 == 0 :
            if ( check_leap ( i ) and leap ) or ( not check_leap ( i ) and not leap ) :
                print ( i )
                return
            else :
                continue
    def check_leap ( y ) :
        return y % 400 == 0 or ( y % 4 == 0 and y % 100 != 0 )
    return True


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552974179_1129/main.py", line 84
    else :
    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 362
---> probID: aizu_p00103_A
---> inputs:
2
HIT
OUT
HOMERUN
HIT
HIT
HOMERUN
HIT
OUT
HIT
HIT
HIT
HIT
OUT
HIT
HIT
OUT
HIT
OUT
OUT
---> outputs:
7
0

def main ( ) :
    import sys
    import string
    import string
    import math
    import string
    import list
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import sys
    import string
    import string
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    try :
        import string
    except :
        import string
    try :
        import sys
    else :
        import string
    if sys . version_info [ 0 ] >= 3 :
        import string
        return string . strip ( sys . stdin . read ( ) )
    else :
        return string . strip ( sys . stdin . read ( ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 363
---> probID: geeksforgeeks_3210_A
---> inputs:

---> outputs:
120


def GFG ( a , b ) :
    if not a or not b :
        return 0
    if a == b :
        return a
    if a > b :
        return math . gcd ( a - b , b )
    return math . gcd ( a , b - a )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 364
---> probID: geeksforgeeks_3655_A
---> inputs:

---> outputs:
x2 = 0.4 y2 = 0.2 z2 = 4.0 

def foot ( arr ) :
    import sys
    class solution ( object ) :
        def __init__ ( self ) :
            self . a = 1
            self . b = - 2
            self . c = 0
            self . d = 0
            self . x1 = - 1
            self . y1 = 3
            self . z1 = 4
        def foot ( self ) :
            return self . a + self . b + self . c + self . d
    return solution


---> console_out:
 
DIDN'T MATCH!! :(
 21%|██        | 364/1746 [00:08<00:32, 42.65it/s]

-------------------------------------


---> lineNum: 365
---> probID: atcoder_ABC077_A
---> inputs:
pot
top
---> outputs:
YES

def main ( ) :
    import sys
    with open ( './junk/1692552974249_3586/input.txt' ) as f :
        c1 = f . readline ( )
        c2 = f . readline ( )
        if c1 [ 0 ] == c2 [ - 1 ] and c2 [ 0 ] == c1 [ - 1 ] and c1 [ 1 ] == c2 [ 1 ] :
            print ( 'YES' )
        else :
            print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 366
---> probID: geeksforgeeks_1659_A
---> inputs:

---> outputs:
2


def get_minimum_ops ( ar ) :
    import numpy as np
    n = len ( ar )
    small = min ( ar )
    large = max ( ar )
    dp = np . zeros ( ( n , large + 1 ) )
    for j in range ( small , large + 1 ) :
        dp [ 0 ] [ j ] = abs ( ar [ 0 ] - j )
    for i in range ( 1 , n ) :
        minimum = np . inf
        for j in range ( small , large + 1 ) :
            minimum = min ( minimum , dp [ i - 1 ] [ j ] )
            dp [ i ] [ j ] = minimum + abs ( ar [ i ] - j )
    ans = np . inf
    for j in range ( small , large + 1 ) :
        ans = min ( ans , dp [ n - 1 ] [ j ] )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 367
---> probID: geeksforgeeks_3686_A
---> inputs:

---> outputs:
27.969019925000005


def area_leaf ( a ) :
    import math
    PI = 3.14159265
    def area_leaf ( a ) :
        return ( a * a * ( PI / 2 - 1 ) )
    def area_leaf ( a ) :
        a = 7
        print ( area_leaf ( a ) )
    return area_leaf


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 368
---> probID: geeksforgeeks_677_A
---> inputs:

---> outputs:
3
5


def remove_alternate ( n ) :
    import sys
    if n == 1 :
        return 1
    if n % 2 == 0 :
        return 2 * remove_alternate ( n // 2 ) - 1
    else :
        return 2 * remove_alternate ( ( ( n - 1 ) // 2 ) ) + 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 369
---> probID: geeksforgeeks_635_A
---> inputs:

---> outputs:
Yes


def check ( n , m ) :
    import sys
    if n == 2 or m == 2 or n % m == 0 :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(
 21%|██        | 369/1746 [00:08<00:32, 42.76it/s]

-------------------------------------


---> lineNum: 370
---> probID: codeforces_1710_A
---> inputs:
6
4 6 3
12 9 8
3 3 2
8 8
3 3 2
9 5
4 5 2
10 11
5 4 2
9 11
10 10 3
11 45 14
---> outputs:
Yes
No
Yes
Yes
No
No

def color_the_picture ( ) :
    f = sys . stdin
    pr = sys . stdout
    t = int ( f . readline ( ) )
    while t != 0 :
        solve ( f , pr )
        t -= 1
    pr . flush ( )
    pr . close ( )
    def solve ( f , pr ) :
        temp = f . readline ( ) . split ( )
        m = int ( temp [ 0 ] )
        n = int ( temp [ 1 ] )
        k = int ( temp [ 2 ] )
        sum = 0
        colors = [ 0 ] * k
        temp = f . readline ( ) . split ( )
        for i in range ( k ) :
            colors [ i ] = int ( temp [ i ] )
            sum += colors [ i ]
        flag = check ( m , n , colors ) or check ( n , m , colors )
        pr . write ( 'Yes' if flag else 'No' )
    def check ( m , n , colors ) :
        count = 0
        colors = set ( )
        for i in colors :
            max = i // m
            if max >= 2 :
                count += max
                colors . add ( max )
        if count < n :
            return False
        if len ( colors ) >= 2 :
            return True
        if len ( colors ) == 1 :
            if 2 in colors :
                return True if n % 2 == 0 else False
            else :
                return True
        return True
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 371
---> probID: geeksforgeeks_2660_A
---> inputs:

---> outputs:
8


def neg_prod_sub_arr ( arr , n ) :
    positive , negative = 1 , 0
    for i in range ( n ) :
        if arr [ i ] > 0 :
            arr [ i ] = 1
        else :
            arr [ i ] = - 1
        if i > 0 :
            arr [ i ] *= arr [ i - 1 ]
        if arr [ i ] == 1 :
            positive += 1
        else :
            negative += 1
    return ( positive * negative )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 372
---> probID: geeksforgeeks_240_A
---> inputs:

---> outputs:
7


def neg_prod_sub_arr ( arr , n ) :
    positive , negative = 1 , 0
    for i in range ( n ) :
        if arr [ i ] > 0 :
            arr [ i ] = 1
        else :
            arr [ i ] = - 1
        if i > 0 :
            arr [ i ] *= arr [ i - 1 ]
        if arr [ i ] == 1 :
            positive += 1
        else :
            negative += 1
    return ( positive * negative )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 373
---> probID: codeforces_1606_B
---> inputs:
4
8 3
6 6
7 1
1 1
---> outputs:
4
3
6
0

def CF3 ( ) :
    import sys
    import csv
    import csv
    import csv
    import csv
    class CF3 ( csv . DictType ) :
        def __init__ ( self ) :
            pass
        def next ( self ) :
            while not self or not self . next :
                try :
                    self . next = csv . DictType . next ( )
                except csv . Error :
                    pass
            return self . next
        def randint ( self ) :
            return int ( self . next )
        def randint ( self ) :
            return int ( self . next )
        def randint ( self ) :
            return long ( self . next )
        def uniform ( self ) :
            return float ( self . next )
        def readline ( self ) :
            data = ""
            try :
                data = csv . readline ( self . __next__ )
            except csv . Error :
                pass
            return data
    def main ( ) :
        f = open ( '/tmp/cf3.txt' , 'r' )
        t = f . read ( )
        while t :
            n , k = f . read ( ) , f . read ( )
            sum , cur = 0 , 1
            while cur < k :
                cur *= 2
                sum += 1
            if cur < n :
                sum += ( n - cur + k - 1 ) / k
            print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 374
---> probID: codeforces_340_A
---> inputs:
2 3 6 18
---> outputs:
3

def main ( ) :
    import sys
    f = open ( sys . stdin )
    f . write ( '' )
    z = f . read ( ) . split ( )
    x , y , a , b = map ( int , z [ 0 ] . split ( ) )
    c , i , j = 0 , 0 , 0
    lcm = x * y / gcd ( x , y )
    for i in range ( a , b + 1 ) :
        if i % lcm == 0 :
            break
    for j in range ( b , a - 1 , - 1 ) :
        if j % lcm == 0 :
            break
    if j % lcm == 0 and i % lcm == 0 :
        c = ( j - i ) // lcm + 1
    f . write ( '%c\n' % c )
    f . close ( )
def gcd ( a , b ) :
    temp = a
    if a < b :
        a , b = b , temp
    if a % b == 0 :
        return b
    else :
        return gcd ( b , a % b )


---> console_out:
 
DIDN'T MATCH!! :(
 21%|██▏       | 374/1746 [00:08<00:32, 42.68it/s]

-------------------------------------


---> lineNum: 375
---> probID: geeksforgeeks_5206_A
---> inputs:

---> outputs:
2


def main ( ) :
    LIS = [ 0 ] * n
    len = 0
    for i in range ( n ) :
        LIS [ i ] = 1
    for i in range ( 1 , n ) :
        for j in range ( i ) :
            if arr [ i ] > arr [ j ] and ( i - j ) <= ( arr [ i ] - arr [ j ] ) :
                LIS [ i ] = max ( LIS [ i ] , LIS [ j ] + 1 )
        len = max ( len , LIS [ i ] )
    return n - len


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 376
---> probID: geeksforgeeks_1441_A
---> inputs:

---> outputs:
9 7 6 8 8 8 5 


def print_max ( a , n , k ) :
    max_upto = [ 0 ] * n
    s = [ 0 ] * n
    for i in range ( 1 , n ) :
        while not s and a [ s [ - 1 ] ] < a [ i ] :
            max_upto [ s [ - 1 ] ] = i - 1
            s . pop ( )
        s . append ( i )
    while not s :
        max_upto [ s [ - 1 ] ] = n - 1
        s . pop ( )
    j = 0
    for i in range ( 0 , n - k + 1 ) :
        while j < i or max_upto [ j ] < i + k - 1 :
            j += 1
        print ( a [ j ] , end = ' ' )
    print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 377
---> probID: projecteuler_p056_A
---> inputs:

---> outputs:
972

def p056 ( ) :
    import string
    import math
    print ( string . strip ( ) )
    def run ( ) :
        max = 0
        for a in range ( 1 , 100 ) :
            for b in range ( 1 , 100 ) :
                pow = math . pow ( a , b )
                max = max ( digital_sum ( pow ) , max )
        return int ( max )
    def digital_sum ( n ) :
        sum = 0
        s = str ( n )
        for c in s :
            sum += ord ( c ) - ord ( '0' )
        return sum
    return '' . join ( str ( i ) for i in range ( len ( s ) ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 378
---> probID: geeksforgeeks_957_A
---> inputs:

---> outputs:
3
4
4
3


def count_window_distinct ( win , k ) :
    dist_count = 0
    for i in range ( k ) :
        for j in range ( i ) :
            if win [ i ] == win [ j ] :
                break
            if j == i :
                dist_count += 1
    return dist_count
    def count_distinct ( arr , n , k ) :
        for i in range ( 0 , n - k + 1 ) :
            print ( count_window_distinct ( arr [ i : ] , k ) )
    def count_distinct ( arr , n , k ) :
        arr , k = [ 1 , 2 , 1 , 3 , 4 , 2 , 3 ] , 4
        count_distinct ( arr , len ( arr ) , k )
    return dist_count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 379
---> probID: geeksforgeeks_2750_A
---> inputs:

---> outputs:
6


def even_num_substring ( data ) :
    data = list ( data )
    count = 0
    for i in range ( len ( data ) ) :
        temp = data [ i ] - '0'
        if temp % 2 == 0 :
            count += ( i + 1 )
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 22%|██▏       | 379/1746 [00:08<00:31, 42.72it/s]  File "./junk/1692552974599_1791/main.py", line 12
    return dp [ index ] [ cnt ] = ans
                                ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 380
---> probID: geeksforgeeks_3926_A
---> inputs:

---> outputs:
12


def solution ( index , cnt , dp , n , m , k ) :
    if index == n :
        if cnt == k :
            return 1
        else :
            return 0
    if dp [ index ] [ cnt ] != - 1 :
        return dp [ index ] [ cnt ]
    ans = 0
    ans += countWays ( index + 1 , cnt , dp , n , m , k )
    ans += ( m - 1 ) * countWays ( index + 1 , cnt + 1 , dp , n , m , k )
    return dp [ index ] [ cnt ] = ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 381
---> probID: geeksforgeeks_2213_A
---> inputs:

---> outputs:
12 16 15 9 4 3 1 0 

def get_sum ( n ) :
    import math
    sum = 0
    for i in range ( 1 , math . sqrt ( n ) + 1 ) :
        if n % i == 0 :
            if n // i == i :
                sum = sum + i
            else :
                sum = sum + i
                sum = sum + ( n // i )
    return sum - n
def print_aliquot ( n ) :
    print ( n , end = '' )
    s = [ n ]
    next = 0
    while n > 0 :
        n = get_sum ( n )
        if n in s and n != s [ - 1 ] :
            print ( '\nRepeats with %d' % n , end = '' )
            break
        print ( n , end = '' )
        s . append ( n )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552974646_1390/main.py", line 11
    as = f . readline ( ) . split ( )
    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 382
---> probID: codeforces_421_A
---> inputs:
4 2 3
1 2
2 3 4
---> outputs:
1 1 2 2

def pasha_and_hamsters ( ) :
    import sys
    from io import StringIO
    import csv
    f = StringIO ( )
    dims = f . readline ( ) . split ( )
    total = int ( dims [ 0 ] )
    at = int ( dims [ 1 ] )
    pt = int ( dims [ 2 ] )
    vals = [ False ] * total
    as = f . readline ( ) . split ( )
    for i in range ( len ( as ) ) :
        x = int ( as [ i ] )
        vals [ x - 1 ] = True
    s = ''
    for i in range ( total ) :
        s += ( '1' if vals [ i ] else '2' ) + ' '
    print ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 383
---> probID: geeksforgeeks_4371_A
---> inputs:

---> outputs:
6 1 2 7 3 5 

def reverse_array ( arr , n ) :
    for i in range ( n // 2 ) :
        swap ( arr , i , ( n + ~ i + 1 ) + ~ 1 + 1 )
    def swap ( arr , i , j ) :
        temp = arr [ i ]
        arr [ i ] = arr [ j ]
        arr [ j ] = temp
        return arr
    def main ( args ) :
        arr = [ 5 , 3 , 7 , 2 , 1 , 6 ]
        n = len ( arr )
        reverse_array ( arr , n )
        for i in range ( n ) :
            print ( arr [ i ] , end = ' ' )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 384
---> probID: geeksforgeeks_4394_A
---> inputs:

---> outputs:
201.0


def GFG ( N ) :
    sum = 0
    a = 1
    cnt = 0
    flag = True
    sum += a
    while cnt < N :
        if flag == True :
            nextElement = a * 2
            sum += nextElement
            flag = not flag
        else :
            nextElement = a * 3 / 2
            sum += nextElement
            flag = not flag
        a = nextElement
        cnt += 1
    print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(
 22%|██▏       | 384/1746 [00:09<00:31, 42.80it/s]

-------------------------------------


---> lineNum: 385
---> probID: aizu_p01855_A
---> inputs:
3
2 3
3 3
4 3
---> outputs:
1 1
1 0
1 1

def main ( ) :
    import sys
    try :
        line = sys . stdin . readline ( )
        T = len ( line )
        for i in range ( T ) :
            h = int ( line [ : i ] )
            w = int ( line [ i + 1 : ] )
            gcd = gcd ( h , w )
            h //= gcd
            w //= gcd
            if h == w :
                print ( '1 0' )
            elif h % 2 == 0 or w % 2 == 0 :
                print ( '1 1' )
            else :
                a , b = ( h * w ) // 2 + 1 , ( h * w ) // 2
                print ( '%d %d' % ( a , b ) )
    except :
        pass
    else :
        print ( '%d %d' % ( T , T ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 386
---> probID: geeksforgeeks_468_A
---> inputs:

---> outputs:
2


def GFG ( ) :
    import numpy as np
    sz = int ( 1e5 )
    is_prime = np . zeros ( sz + 1 )
    def sieve ( ) :
        is_prime [ 0 ] = is_prime [ 1 ] = False
        for i in range ( 2 , sz + 1 ) :
            if is_prime [ i ] :
                for j in range ( i * i , sz + 1 , i ) :
                    is_prime [ j ] = False
    def min_difference ( L , R ) :
        fst = 0
        for i in range ( L , R + 1 ) :
            if is_prime [ i ] :
                fst = i
                break
        snd = 0
        for i in range ( fst + 1 , R + 1 ) :
            if is_prime [ i ] :
                snd = i
                break
        if not snd :
            return - 1
        diff = snd - fst
        left = snd + 1
        right = R
        for i in range ( left , right + 1 ) :
            if is_prime [ i ] :
                if i - snd <= diff :
                    fst = snd
                    snd = i
                    diff = snd - fst
        return diff
    def main ( ) :
        sieve ( )
        L , R = 21 , 50
        print ( min_difference ( L , R ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 387
---> probID: geeksforgeeks_1962_A
---> inputs:

---> outputs:
6


def GFG ( arr , n ) :
    start = 0
    pre_cnt = 0
    while start < n and arr [ start ] == 1 :
        pre_cnt += 1
        start += 1
    end = n - 1
    suff_cnt = 0
    while end >= 0 and arr [ end ] == 1 :
        suff_cnt += 1
        end -= 1
    if start > end :
        return n
    mid_cnt = 0
    result = 0
    for i in range ( start , end + 1 ) :
        if arr [ i ] == 1 :
            mid_cnt += 1
            result = max ( result , mid_cnt )
        else :
            mid_cnt = 0
    return max ( result , pre_cnt + suff_cnt )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 388
---> probID: aizu_p00502_A
---> inputs:
3 4
31
27
35
20 25 30
23 29 90
21 35 60
28 33 40
---> outputs:
80

def main ( args ) :
    import sys
    s = sys . stdin
    d = len ( s )
    n = len ( s )
    temp = [ ]
    a = [ ]
    b = [ ]
    c = [ ]
    for i in range ( d ) :
        temp . append ( s . read ( ) )
    for i in range ( n ) :
        a . append ( s . read ( ) )
        b . append ( s . read ( ) )
        c . append ( s . read ( ) )
    dp = np . zeros ( ( d , n ) )
    for i in range ( d ) :
        for j in range ( n ) :
            dp [ i ] [ j ] = - 1
    for i in range ( n ) :
        if a [ i ] <= temp [ 0 ] and b [ i ] >= temp [ 0 ] :
            dp [ 0 ] [ i ] = 0
    for i in range ( 1 , d ) :
        for j in range ( n ) :
            if a [ j ] <= temp [ i ] and b [ j ] >= temp [ i ] :
                for k in range ( n ) :
                    if dp [ i - 1 ] [ k ] < 0 :
                        continue
                    dp [ i ] [ j ] = max ( dp [ i ] [ j ] , dp [ i - 1 ] [ k ] + abs ( c [ j ] - c [ k ] ) )
    ans = 0
    for i in range ( n ) :
        ans = max ( ans , dp [ d - 1 ] [ i ] )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 389
---> probID: codeforces_1155_A
---> inputs:
7
abacaba
---> outputs:
['YES\n2 5', 'YES\n2 3\n']

def main ( ) :
    import sys
    import os
    import string
    import math
    import math
    import os . path
    import sys
    import os . path
    import sys
    import os . path
    import sys
    import os . path
    import sys
    import os . path
    import sys
    import os . path
    import sys
    import os . path
    import sys
    import os . path
    sys . path = sys . path
    sys . path = [ os . path ]
    sys . path . append ( os . path . normpath ( os . path . join ( sys . path [ 0 ] , os . path . abspath ( sys . path [ 0 ] ) ) ) )
    sys . path . append ( os . path . normpath ( os . path . join ( sys . path [ 0 ] , os . path . abspath ( sys . path [ 1 ] ) ) ) )
    sys . path . append ( os . path . normpath ( os . path . join ( sys . path [ 0 ] , os . path . abspath ( sys . path [ 1 ] ) ) ) )
    sys . path . append ( os . path . normpath ( os . path . join ( sys . path [ 0 ] , os . path . abspath ( sys . path [ 1 ] ) ) ) )
    sys . path . append ( os . path . normpath ( os . path . join ( sys . path [ 0 ] , os . path . abspath ( sys . path [ 1 ] ) ) ) )
    sys . path . append ( os . path . normpath ( os . path . join ( sys . path [ 0 ] , os . path . abspath ( sys . path [ 1 ] ) ) ) )
    sys . path . append ( os . path . normpath ( os . path . join ( sys . path [ 0 ] , os . path . abspath ( sys . path [ 1 ] ) ) ) )
    sys . path . append ( os . path . normpath ( os . path . join ( sys . path [ 0 ] , os . path . abspath ( sys . path [ 1 ] ) ) ) )
    sys . path . append ( os . path . normpath ( os . path . join ( sys . path [ 0 ] , os . path . abspath ( sys . path [ 1 ] ) ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 22%|██▏       | 389/1746 [00:09<00:31, 42.55it/s]

-------------------------------------


---> lineNum: 390
---> probID: geeksforgeeks_4861_A
---> inputs:

---> outputs:
Square root of 9.2345 = 3.03883


def sqroot ( s ) :
    pSq = 0
    N = 0
    for i in range ( int ( s ) , 0 , - 1 ) :
        for j in range ( 1 , i ) :
            if j * j == i :
                pSq = i
                N = j
                break
        if pSq > 0 :
            break
    d = s - pSq
    P = d / ( 2. * N )
    A = N + P
    sqrt_of_s = A - ( ( P * P ) / ( 2. * A ) )
    return sqrt_of_s


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 391
---> probID: codeforces_583_B
---> inputs:
3
0 2 0
---> outputs:
1

def main ( ) :
    import sys
    for i in range ( len ( sys . argv ) ) :
        n = sys . argv [ i ]
        a = [ 0 ] * n
        b = [ 0 ] * n
        s = - 1
        for i in range ( n ) :
            a [ i ] = sys . stdin . read ( n )
            b [ i ] = 0
        tem = 1
        q = 0
        while q != n :
            s += 1
            if tem == 1 :
                for i in range ( n ) :
                    if a [ i ] <= q and b [ i ] == 0 :
                        b [ i ] = 1
                        q += 1
                tem = 0
            else :
                for i in range ( n - 1 , - 1 , - 1 ) :
                    if a [ i ] <= q and b [ i ] == 0 :
                        b [ i ] = 1
                        q += 1
                tem = 1
        print ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 392
---> probID: aizu_p00775_A
---> inputs:
2 3
-2 -1 3
0 1 3
2 3 3
2 2
-2 0 4
0 2 3
2 6
-3 3 1
-2 3 2
-1 3 3
0 3 4
1 3 5
2 3 6
2 6
-3 3 1
-3 2 2
-3 1 3
-3 0 4
-3 -1 5
-3 -2 6
0 0
---> outputs:
0.0000
3.0000
2.2679
2.2679

def main ( ) :
    import math
    INF = 100.0
    class Main ( ) :
        def __init__ ( self ) :
            self . INF = 100.0
        def __call__ ( self , * args ) :
            while True :
                r = int ( self . INF )
                n = len ( args )
                if r == 0 :
                    break
                field = [ ]
                for i in range ( n ) :
                    xl , xr , h = args [ : 2 ]
                    for j in range ( xl + 20 , xr + 20 ) :
                        field . append ( max ( field [ j ] , h ) )
                min_time = INF
                for i in range ( len ( field ) ) :
                    min_time = min ( min_time , cross_time ( i - 20 , field [ i ] , r ) )
                    min_time = min ( min_time , cross_time ( i + 1 - 20 , field [ i ] , r ) )
                print ( min_time )
        def cross_time ( x , y , r ) :
            d = int ( math . pow ( - 2 * ( y + r ) , 2 ) ) - 4 * ( x ** 2 + y ** 2 + 2 * y ** 2 )
            if d <= 0 :
                return INF
            else :
                ans = ( 2 * ( y + r ) - math . sqrt ( d ) ) / 2
                return ans
        def print_height ( self ) :
            for i in range ( len ( field ) ) :
                print ( '%d-%d: %d' % ( ( i - 20 ) + 1 , self . WIDTH , field [ i ] ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 393
---> probID: codeforces_1358_B
---> inputs:
4
5
1 1 2 2 1
6
2 3 4 5 6 7
6
1 5 4 5 1 9
5
1 2 3 5 6
---> outputs:
6
1
6
4

def main ( ) :
    import sys
    import string
    t = len ( sys . stdin . readlines ( ) )
    for i in range ( t ) :
        n = len ( sys . stdin . readlines ( ) )
        list = [ ]
        for j in range ( n ) :
            list . append ( sys . stdin . readlines ( ) [ j ] )
        find ( list )
    def find ( list ) :
        list . sort ( )
        n = len ( list )
        for i in range ( n - 1 , - 1 , - 1 ) :
            if list [ i ] <= i + 1 :
                print ( i + 2 )
                return
        print ( 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 394
---> probID: aizu_p00208_A
---> inputs:
15
100
1000000000
3
0
---> outputs:
19
155
9358757000
3

def main ( ) :
    import sys
    try :
        num = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        if num == 0 :
            return False
        return True
    def solve ( ) :
        table = [ 0 , 1 , 2 , 3 , 5 , 7 , 8 , 9 ]
        s = str ( num )
        for c in s :
            num2 = int ( '%d' % c , 8 )
            sys . stdout . write ( table [ num2 ] )
        sys . stdout . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(
 23%|██▎       | 394/1746 [00:09<00:31, 42.69it/s]

-------------------------------------


---> lineNum: 395
---> probID: geeksforgeeks_1464_A
---> inputs:

---> outputs:
Maximum sum = 25


def GFG ( arr , n ) :
    if n == 1 :
        return arr [ 0 ]
    dec = [ 0 ] * n
    inc = [ 0 ] * n
    dec [ 0 ] = inc [ 0 ] = arr [ 0 ]
    flag = 0
    for i in range ( 1 , n ) :
        for j in range ( i ) :
            if arr [ j ] > arr [ i ] :
                dec [ i ] = max ( dec [ i ] , inc [ j ] + arr [ i ] )
                flag = 1
            elif arr [ j ] < arr [ i ] and flag == 1 :
                inc [ i ] = max ( inc [ i ] , dec [ j ] + arr [ i ] )
    result = 0
    for i in range ( n ) :
        if result < inc [ i ] :
            result = inc [ i ]
        if result < dec [ i ] :
            result = dec [ i ]
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 396
---> probID: geeksforgeeks_1884_A
---> inputs:

---> outputs:
0 1 0 1 4 4 

def generate_arr ( arr , n ) :
    import sys
    if n <= 1 :
        return
    prev = arr [ 0 ]
    arr [ 0 ] = arr [ 0 ] & arr [ 1 ]
    for i in range ( 1 , n - 1 ) :
        curr = arr [ i ]
        arr [ i ] = prev & arr [ i + 1 ]
        prev = curr
    arr [ n - 1 ] = prev & arr [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 397
---> probID: geeksforgeeks_3872_A
---> inputs:

---> outputs:
1 6 6 2 3 

def ReplaceElements ( arr , n ) :
    import sys
    if n <= 1 :
        return
    prev = arr [ 0 ]
    arr [ 0 ] = arr [ 0 ] ^ arr [ 1 ]
    for i in range ( 1 , n - 1 ) :
        curr = arr [ i ]
        arr [ i ] = prev ^ arr [ i + 1 ]
        prev = curr
    arr [ n - 1 ] = prev ^ arr [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 398
---> probID: geeksforgeeks_3879_A
---> inputs:

---> outputs:
5 6 8 10 11 

def ReplaceElements ( arr , n ) :
    import sys
    if n <= 1 :
        return
    prev = arr [ 0 ]
    arr [ 0 ] = arr [ 0 ] + arr [ 1 ]
    for i in range ( 1 , n - 1 ) :
        curr = arr [ i ]
        arr [ i ] = prev + arr [ i + 1 ]
        prev = curr
    arr [ n - 1 ] = prev + arr [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 399
---> probID: geeksforgeeks_4047_A
---> inputs:

---> outputs:
6


def count_triplets ( A , B , C ) :
    ans = 0
    for i in range ( 1 , A + 1 ) :
        for j in range ( 1 , B + 1 ) :
            for k in range ( 1 , C + 1 ) :
                if i * k > j * j :
                    ans += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 23%|██▎       | 399/1746 [00:09<00:31, 42.81it/s]

-------------------------------------


---> lineNum: 400
---> probID: geeksforgeeks_1376_A
---> inputs:

---> outputs:
11 97
10007 99991


def GFG ( ) :
    import math
    MAX = 100000
    prime = [ False ] * ( MAX + 1 )
    def SieveOfEratosthenes ( ) :
        for i in range ( MAX + 1 ) :
            prime [ i ] = True
        for p in range ( 2 , p * MAX + 1 ) :
            if prime [ p ] == True :
                for i in range ( p * p , MAX + 1 , p ) :
                    prime [ i ] = False
    def smallestPrime ( d ) :
        l = int ( math . pow ( 10 , d - 1 ) )
        r = int ( math . pow ( 10 , d ) ) - 1
        for i in range ( l , r + 1 ) :
            if prime [ i ] :
                return i
        return - 1
    def largestPrime ( d ) :
        l = int ( math . pow ( 10 , d - 1 ) )
        r = int ( math . pow ( 10 , d ) ) - 1
        for i in range ( r , l - 1 , - 1 ) :
            if prime [ i ] :
                return i
        return - 1
    def main ( ) :
        SieveOfEratosthenes ( )
        queries = [ 2 , 5 ]
        q = len ( queries )
        for i in range ( q ) :
            print ( smallestPrime ( queries [ i ] ) , largestPrime ( queries [ i ] ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 401
---> probID: aizu_p00534_A
---> inputs:
3 5
10
25
15
50
30
15
40
30
---> outputs:
1125

def main ( ) :
    import sys
    import string
    import math
    import math
    import math
    import math
    import sys
    INF = math . pi / 2
    def f ( x ) :
        return x
    f = open ( '/dev/null' , 'w' )
    for line in f :
        n = int ( line . strip ( ) )
        m = int ( line . strip ( ) )
        tir = np . zeros ( ( m + 1 , n + 1 ) )
        tir [ m ] = INF
        tir [ m ] [ n ] = 0
        d = [ 0 ] * n
        c = [ 0 ] * m
        for i in range ( n ) :
            d [ i ] = int ( line . strip ( ) )
        for i in range ( m ) :
            c [ i ] = int ( line . strip ( ) )
        for i in range ( m - 1 , - 1 , - 1 ) :
            for j in range ( n - 1 , - 1 , - 1 ) :
                tir [ i ] [ j ] = min ( tir [ i + 1 ] [ j ] , tir [ i + 1 ] [ j + 1 ] + d [ j ] * c [ i ] )
        f . write ( tir [ 0 ] [ 0 ] )
        f . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 402
---> probID: codeforces_873_A
---> inputs:
4 2 2
3 6 7 10
---> outputs:
13

def main ( ) :
    import sys
    import numpy as np
    class Main ( object ) :
        def __init__ ( self ) :
            self . n = len ( sys . argv )
            self . k = len ( sys . argv )
            self . x = sys . argv [ - 1 ]
        def __getitem__ ( self , i ) :
            return self . n
        def __setitem__ ( self , i , j ) :
            self . k = i
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
        def __getitem__ ( self , i ) :
            return self . x
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 403
---> probID: codeforces_883_A
---> inputs:
1 1 3 4
7
---> outputs:
1

def automatic_door ( ) :
    import math
    try :
        n = math . pi
        m = math . pi
        a = math . pi
        d = math . pi
        arr = [ ]
        for i in range ( m ) :
            arr . append ( math . pi * i )
        count = 0
        time = 0
        x = d / a + 1
        y = d - ( x - 1 ) * a
        if y < 0 :
            y = 0
        last = 0
        for i in range ( m ) :
            b = max ( min ( ( arr [ i ] - 1 ) / a , n ) , 0 )
            c = b - time
            k = c / x
            count += k
            time += k * x
            if k != 0 :
                while i < m and arr [ i ] <= time * a + y :
                    i += 1
            if i >= m :
                break
            count += 1
            last = arr [ i ] + d
            if time < n :
                last = min ( last , ( time + 1 ) * a + d )
            while i < m and arr [ i ] <= last :
                i += 1
            time = max ( time , min ( n , last / a ) )
        if time < n :
            count += ( n - time + x - 1 ) / x
        print ( count )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 404
---> probID: codeforces_598_A
---> inputs:
2
4
1000000000
---> outputs:
-4
499999998352516354

def PA_TrickySum ( ) :
    import sys
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    import csv
    from io import StringIO
    import csv
    from io import BufferedWriter
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    import BytesIO
    from io import BytesIO
    from io import BytesIO
    if sys . _PY2 :
        from io import BytesIO
    

---> console_out:
 
DIDN'T MATCH!! :(
 23%|██▎       | 404/1746 [00:09<00:31, 42.29it/s]

-------------------------------------


---> lineNum: 405
---> probID: codeforces_276_B
---> inputs:
aba
---> outputs:
First

def main ( ) :
    import string
    import sys
    s = list ( sys . stdin . readlines ( ) )
    ar = [ 0 ] * 26
    for ch in s :
        ar [ ch - 97 ] += 1
    cntod = 0
    for i in range ( 26 ) :
        if ( ar [ i ] % 2 ) :
            cntod += 1
    if cntod == 0 :
        print ( 'First' )
    else :
        if cntod % 2 == 0 :
            print ( 'Second' )
        else :
            print ( 'First' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 406
---> probID: geeksforgeeks_2292_A
---> inputs:

---> outputs:
Sum odd = 20
Sum even = 15


def reverse ( n ) :
    rev = 0
    while n != 0 :
        rev = ( rev * 10 ) + ( n % 10 )
        n //= 10
    return rev
    def get_sum ( n ) :
        n = reverse ( n )
        sum_odd , sum_even , c = 0 , 0 , 1
        while n != 0 :
            if c % 2 == 0 :
                sum_even += n % 10
            else :
                sum_odd += n % 10
            n //= 10
            c += 1
        print ( 'Sum odd = %d' % sum_odd )
        print ( 'Sum even = %d' % sum_even )
    def main ( args ) :
        n = 457892
        get_sum ( n )
    return '' . join ( get_sum ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 407
---> probID: geeksforgeeks_823_A
---> inputs:

---> outputs:
224


def GFG ( row_no , block ) :
    import sys
    sys . stdout . write ( row_no * block )
    import math
    return math . pi / h


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552975262_4560/main.py", line 2
    binary = [ '000','001' , "010',"011','100','101',"110' , "111' ]
                                      ^
SyntaxError: leading zeros in decimal integer literals are not permitted; use an 0o prefix for octal integers


-------------------------------------


---> lineNum: 408
---> probID: geeksforgeeks_5049_A
---> inputs:

---> outputs:
2


def gf_max_freq ( s ) :
    binary = [ '000','001' , "010',"011','100','101',"110' , "111' ]
    def max_freq ( s ) :
        binary = ""
        for c in s :
            binary += c - '0'
        binary = binary [ : - 1 ]
        count , prev , i , j = 1 , - 1 , - 1 , i , j
        for i in range ( len ( binary ) - 1 , - 1 , - 1 ) :
            if binary [ i ] == '1' :
                count = max ( count , j - prev )
                prev = j
        return count
    octal = "13"
    print ( max_freq ( octal ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 409
---> probID: geeksforgeeks_2776_A
---> inputs:

---> outputs:
1101


def GFG ( s , n , k ) :
    cv = [ 0 ] * n
    cc = [ 0 ] * n
    if s [ 0 ] == 'a' or s [ 0 ] == 'e' or s [ 0 ] == 'i' or s [ 0 ] == 'o' or s [ 0 ] == 'u' :
        cc [ 0 ] = 1
    for i in range ( 1 , n ) :
        cv [ i ] = cv [ i - 1 ] + ( 1 if is_vowel ( s [ i ] ) == True else 0 )
        cc [ i ] = cc [ i - 1 ] + ( 0 if is_vowel ( s [ i ] ) == True else 1 )
    ans = ""
    prod = 0
    prod = cc [ k - 1 ] * cv [ k - 1 ]
    ans += str ( prod )
    for i in range ( k , len ( s ) ) :
        prod = ( cc [ i ] - cc [ i - k ] ) * ( cv [ i ] - cv [ i - k ] )
        ans += str ( prod )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 23%|██▎       | 409/1746 [00:09<00:31, 42.03it/s]

-------------------------------------


---> lineNum: 410
---> probID: geeksforgeeks_3448_A
---> inputs:

---> outputs:
15.0631


def harmonic_mean ( arr , freq , n ) :
    sum , frequency_sum = 0 , 0
    for i in range ( n ) :
        sum = sum + float ( freq [ i ] ) / arr [ i ]
        frequency_sum = frequency_sum + freq [ i ]
    return ( frequency_sum / sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 411
---> probID: geeksforgeeks_3645_A
---> inputs:

---> outputs:
210.444


def polyarea ( n , a ) :
    import math
    if a < 0 and n < 0 :
        return - 1
    A = ( a * a * n ) / float ( 4 * math . tan ( ( 180 / n ) * math . pi / 180 ) )
    return A


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 412
---> probID: geeksforgeeks_3834_A
---> inputs:

---> outputs:
3


def __gcd ( a , b ) :
    if not a :
        return b
    if not b :
        return a
    if a == b :
        return a
    if a > b :
        return __gcd ( a - b , b )
    return __gcd ( a , b - a )
def lcm ( a , b ) :
    return ( a // __gcd ( a , b ) * b )
def get_min_value ( c ) :
    ans = sys . maxsize
    for i in range ( 1 , math . sqrt ( c ) + 1 ) :
        if c % i == 0 and lcm ( i , c // i ) == c :
            ans = min ( ans , max ( i , c // i ) )
    return ans
def main ( args ) :
    c = 6
    print ( get_min_value ( c ) )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552975379_3504/main.py", line 4
    with open

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 413
---> probID: aizu_p01085_A
---> inputs:
5 2 4
100
90
82
70
65
5 2 4
100
90
80
75
65
3 1 2
5000
4000
3000
4 2 3
10000
10000
8000
8000
4 2 3
10000
10000
10000
8000
5 2 3
100
80
68
60
45
0 0 0
---> outputs:
3
4
2
2
3
2

def main ( ) :
    import sys
    try :
        with open

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 414
---> probID: codeforces_789_B
---> inputs:
3 2 30 4
6 14 25 48
---> outputs:
3

def main ( args ) :
    import math
    with open ( args [ 0 ] , 'r' ) as f :
        start = math . floor ( f . read ( ) )
        ratio = math . floor ( f . read ( ) )
        max = math . floor ( f . read ( ) )
        m = math . floor ( f . read ( ) )
        bad = [ ]
        for i in range ( m ) :
            bad . append ( math . floor ( f . read ( ) ) )
        if abs ( start ) > max :
            print ( '0' )
            return
        if start == 0 :
            if start in bad :
                print ( '0' )
                return
            else :
                print ( 'inf' )
                return
        if ratio == 1 :
            if start in bad :
                print ( '0' )
                return
            else :
                print ( 'inf' )
                return
        if ratio == - 1 :
            if start in bad and start * ( - 1 ) in bad :
                print ( '0' )
                return
            else :
                print ( 'inf' )
                return
        if ratio == 0 :
            if ratio == False :
                print ( 'inf' )
                return
            elif start in bad :
                print ( '0' )
                return
            else :
                print ( '1' )
                return
        cnt = 0
        while abs ( start ) <= max :
            if start in bad :
                cnt += 1
            start *= ratio
        print ( cnt )


---> console_out:
 
DIDN'T MATCH!! :(
 24%|██▎       | 414/1746 [00:09<00:31, 42.15it/s]

-------------------------------------


---> lineNum: 415
---> probID: codeforces_1656_A
---> inputs:
3
3
5 2 7
5
1 4 2 2 3
1
2
---> outputs:
2 3
1 2
1 1

def main ( ) :
    import sys
    import os
    import subprocess
    import sys
    import os
    import subprocess
    import sys
    import subprocess
    import sys
    import os
    import sys
    import subprocess
    import sys
    import subprocess
    import sys
    import subprocess
    import sys
    import os
    import sys
    import subprocess
    import sys
    import os
    import sys
    import subprocess
    import sys
    import os
    sys = sys
    try :
        os . chdir ( os . path . dirname ( sys . argv [ 0 ] ) )
    except :
        pass
    else :
        sys . stdout = subprocess . PIPE
        sys . stderr = subprocess . STDOUT
        sys . stdout = subprocess . PIPE
        sys . stderr = subprocess . STDOUT
        sys . stdout = subprocess . PIPE
        sys . stderr = subprocess . STDOUT
        sys . stdout = subprocess . PIPE
        sys . stderr = subprocess . STDOUT
        sys . stdout = subprocess . PIPE
        sys . stderr = subprocess . STDOUT
        sys . stdout = sys . stdout
        sys . stderr = sys . stderr
        sys . stdout . write ( '\n' )
        sys . stdout . flush ( )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
        sys . stdout . flush ( )
        sys . stdout . write ( '' )
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552975452_1415/main.py", line 2
    fibo = 2.078087F * float ( math . log ( n ) ) + 1.672276F
                   ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 416
---> probID: geeksforgeeks_601_A
---> inputs:

---> outputs:
8


def find_index ( n ) :
    fibo = 2.078087F * float ( math . log ( n ) ) + 1.672276F
    return round ( fibo )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 417
---> probID: geeksforgeeks_198_A
---> inputs:

---> outputs:
11999
0999900


def is_smaller ( str1 , str2 ) :
    n1 , n2 = len ( str1 ) , len ( str2 )
    if n1 < n2 :
        return True
    if n2 < n1 :
        return False
    for c in str1 :
        if c < str2 [ c ] :
            return True
        elif c > str2 [ c ] :
            return False
    return False
def find_diff ( str1 , str2 ) :
    if is_smaller ( str1 , str2 ) :
        t = str1
        str1 = str2
        str2 = t
    data = ""
    n1 , n2 = len ( str1 ) , len ( str2 )
    str1 = u"" . join ( reversed ( str1 ) )
    str2 = u"" . join ( reversed ( str2 ) )
    carry = 0
    for c in str1 :
        sub = ( ord ( c ) - ord ( '0' ) - ord ( ord ( str2 [ c ] ) - ord ( '0' ) - carry ) )
        if sub < 0 :
            sub = sub + 10
            carry = 1
        else :
            carry = 0
        data += chr ( sub + ord ( '0' ) )
    for c in str2 :
        sub = ( ord ( c ) - ord ( '0' ) - carry )
        if sub < 0 :
            sub = sub + 10
            carry = 1
        else :
            carry = 0
        data += chr ( sub + ord ( '0' ) )
    return u"" . join ( reversed ( data ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 418
---> probID: geeksforgeeks_3315_A
---> inputs:

---> outputs:
1


def min_swaps ( s1 , s2 ) :
    c0 , c1 = 0 , 0
    for c in s1 :
        if c == '0' and c == '1' :
            c0 += 1
        elif c == '1' and c == '0' :
            c1 += 1
    ans = c0 // 2 + c1 // 2
    if c0 % 2 == 0 and c1 % 2 == 0 :
        return ans
    elif ( c0 + c1 ) % 2 == 0 :
        return ans + 2
    else :
        return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 419
---> probID: aizu_p01545_A
---> inputs:
4
1 4 2 3
---> outputs:
4

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    x = [ None ] * n
    all = 0
    for i in range ( n ) :
        all += x [ i ]
    seg = np . zeros ( n + 1 )
    for i in range ( n ) :
        pre = seg [ : i ]
        seg [ i ] = pre + x [ i ]
    fix = seg [ : n + 1 ]
    print ( all - fix )
    class SegmentTree ( object ) :
        n = 1
        def __init__ ( self , n ) :
            self . n = n
        def __init__ ( self , n ) :
            while self . n < n :
                self . n *= 2
            self . val = np . zeros ( 2 * self . n - 1 )
        def set ( self , k , l ) :
            self . k += n - 1
            self . val [ k ] = l
            while k > 0 :
                k = ( self . n - 1 ) // 2
                self . val [ k ] = max ( self . val [ 2 * k + 1 ] , self . val [ 2 * k + 2 ] )
        def query ( a , b ) :
            return self . query ( a , b , 0 , n , 0 )
        def query ( a , b , l , r , k ) :
            if r <= a or b <= l :
                return 0
            elif a <= l and r <= b :
                return self . val [ k ]
            else :
                vl = self . query ( a , b , l , ( l + r ) // 2 , 2 * k + 1 )
                vr = self . query ( a , b , ( l + r ) // 2 , r , 2 * k + 2 )
                return max ( vl , vr )


---> console_out:
 
DIDN'T MATCH!! :(
 24%|██▍       | 419/1746 [00:09<00:31, 41.74it/s]

-------------------------------------


---> lineNum: 420
---> probID: codeforces_376_A
---> inputs:
=^==
---> outputs:
balance

def A376_Lever_Round221 ( ) :
    import re
    sc = open ( "/usr/bin/A376_Lever_Round221.txt" )
    s = sc . read ( )
    sc . close ( )
    part = s . find ( "^" )
    left = 0
    right = 0
    for i in range ( part ) :
        if s [ i ] <= '9' and s [ i ] >= '1' :
            left += ( part - i ) * ( s [ i ] - '0' )
    for j in range ( part + 1 , len ( s ) ) :
        if s [ j ] <= '9' and s [ j ] >= '1' :
            right += ( j - part ) * ( s [ j ] - '0' )
    if left == right :
        print ( "balance" )
    elif left < right :
        print ( "right" )
    elif right < left :
        print ( "left" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 421
---> probID: geeksforgeeks_1748_A
---> inputs:

---> outputs:
2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 

def normal_sieve ( n ) :
    import numpy as np
    prime = np . zeros ( n // 2 )
    prime [ n // 2 ] = False
    for i in range ( 3 , n * 2 , 2 ) :
        if prime [ i // 2 ] == False :
            for j in range ( i * i , n , i * 2 ) :
                prime [ j // 2 ] = True
    print ( "2 " , end = " " )
    for i in range ( 3 , n , 2 ) :
        if prime [ i // 2 ] == False :
            print ( "%d " % i , end = " " )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552975596_6250/main.py", line 19
    print
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 422
---> probID: codeforces_59_A
---> inputs:
HoUse
---> outputs:
house

def main ( ) :
    import string
    try :
        word = string . strip ( )
        uppercase = 0
        lowercase = 0
        for ch in word :
            if ch . isupper ( ) :
                uppercase += 1
            else :
                lowercase += 1
        if uppercase > lowercase :
            print ( word . upper ( ) )
        elif lowercase > uppercase :
            print ( word . lower ( ) )
        else :
            print ( word . lower ( ) )
    except :
        print

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 423
---> probID: geeksforgeeks_4548_A
---> inputs:

---> outputs:
1


def frequencyOfSmallest ( n , arr ) :
    import numpy as np
    mn , freq = arr [ 0 ] , 1
    for i in range ( 1 , n ) :
        if arr [ i ] < mn :
            mn = arr [ i ]
            freq = 1
        elif arr [ i ] == mn :
            freq += 1
    return freq


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 424
---> probID: geeksforgeeks_1108_A
---> inputs:

---> outputs:
YES


def is_subarray ( A , B , n , m ) :
    i , j = 0 , 0
    while i < n and j < m :
        if A [ i ] == B [ j ] :
            i += 1
            j += 1
            if j == m :
                return True
        else :
            i = i - j + 1
            j = 0
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 24%|██▍       | 424/1746 [00:10<00:31, 42.05it/s]  File "./junk/1692552975667_5205/main.py", line 44
    import numpy . testing . ufuncs as ufuncs as ufuncs
                                              ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 425
---> probID: codeforces_265_B
---> inputs:
2
1
2
---> outputs:
5

def problem_b ( ) :
    import math
    import numpy as np
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs as ufuncs
    import numpy .

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 426
---> probID: geeksforgeeks_2625_A
---> inputs:

---> outputs:
64


def calculate_sum ( n , k ) :
    res = 1
    MOD = 1000000007
    for i in range ( k ) :
        res = ( res * n ) % MOD
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 427
---> probID: atcoder_ABC122_D
---> inputs:
3
---> outputs:
61

def main ( ) :
    import string
    import sys
    import os
    import math
    import random
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf
    from pyamf import pyamf


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 428
---> probID: aizu_p00045_A
---> inputs:
100,20
50,10
70,35
---> outputs:
4950
22

def main ( args ) :
    import sys
    try :
        value = int ( sys . stdin . readline ( ) )
        amount = int ( sys . stdin . readline ( ) )
    except :
        pass
    sum = 0
    n = 0
    total = 0
    while True :
        try :
            value = int ( value )
            amount = int ( amount )
        except :
            break
        sum += value * amount
        total += amount
        n += 1
    print ( sum )
    print ( round ( float ( total ) / n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 429
---> probID: geeksforgeeks_2989_A
---> inputs:

---> outputs:
15


def binomial_coeff ( n , k ) :
    import numpy as np
    C = np . zeros ( k + 1 )
    C [ 0 ] = 1
    for i in range ( 1 , n + 1 ) :
        for j in range ( min ( i , k ) , 0 , - 1 ) :
            C [ j ] = C [ j ] + C [ j - 1 ]
    return C [ k ]


---> console_out:
 
DIDN'T MATCH!! :(
 25%|██▍       | 429/1746 [00:10<00:31, 42.08it/s]

-------------------------------------


---> lineNum: 430
---> probID: geeksforgeeks_4247_A
---> inputs:
abxhydl
abxhydl

---> outputs:
Enter the first string: abxhydl
Enter the second string: abxhydl
Are both strings same: Yes


def main ( ) :
    import sys
    try :
        string1 = sys . stdin . readline ( )
    except AttributeError :
        pass
    else :
        string1 = ''
    print ( 'Enter the first string: %s' % string1 )
    string2 = sys . stdin . readline ( )
    print ( 'Enter the second string: %s' % string2 )
    print ( 'Are both strings same: ' , end = ' ' )
    if string1 == string2 == True :
        print ( 'Yes' )
    else :
        print ( 'No' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 431
---> probID: geeksforgeeks_1058_A
---> inputs:

---> outputs:
6


def pair_count ( arr , n ) :
    max_val = max ( arr )
    prime = [ True for i in range ( max_val + 1 ) ]
    prime . insert ( 0 , False )
    prime . insert ( 1 , False )
    for p in range ( 2 , max_val + 1 ) :
        if prime [ p ] is True :
            for i in range ( p * 2 , max_val + 1 , p ) :
                prime . insert ( i , False )
    count = 0
    for i in range ( n ) :
        if prime [ arr [ i ] ] :
            count += 1
    return ( count * ( count - 1 ) ) / 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 432
---> probID: geeksforgeeks_521_A
---> inputs:

---> outputs:
13


def get_prime ( arr , n ) :
    max_val = len ( np . unique ( arr ) )
    prime = np . zeros ( max_val + 1 )
    for i in range ( max_val + 1 ) :
        prime [ i ] = True
    prime [ 1 ] = False
    prime [ 2 ] = False
    for p in range ( 2 , max_val + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , max_val + 1 , p ) :
                prime [ i ] = False
    maximum = - 1
    for i in range ( n ) :
        if prime [ arr [ i ] ] :
            maximum = max ( maximum , arr [ i ] )
    return maximum


---> console_out:
 
DIDN'T MATCH!! :(
s_push: parser stack overflow
MemoryError


-------------------------------------


---> lineNum: 433
---> probID: projecteuler_p013_A
---> inputs:

---> outputs:
5537376230

def p013 ( ) :
    import math
    print ( math . pow ( math . pow ( math . pow ( math . pow ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - math . fabs ( - ( - fabs

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 434
---> probID: geeksforgeeks_1484_A
---> inputs:

---> outputs:
-6 1 2 

def find_elements ( arr , n ) :
    import sys
    arr . sort ( )
    for i in range ( n - 2 ) :
        sys . stdout . write ( '%d ' % arr [ i ] )


---> console_out:
 
DIDN'T MATCH!! :(
 25%|██▍       | 434/1746 [00:10<00:31, 41.39it/s]

-------------------------------------


---> lineNum: 435
---> probID: geeksforgeeks_1785_A
---> inputs:

---> outputs:
4 5 6 9 10 120 

def gf_distinct ( arr , n ) :
    arr . sort ( )
    for i in range ( n ) :
        while i < n - 1 and arr [ i ] == arr [ i + 1 ] :
            i += 1
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 436
---> probID: aizu_p02477_A
---> inputs:
5 8
---> outputs:
40

def main ( ) :
    import sys
    from io import BytesIO
    from math import pow as f
    class Main ( object ) :
        BIG_NUM = 2000000000
        MOD = 1000000007
        def __init__ ( self ) :
            self . BIG_NUM = 1000000
        def __repr__ ( self ) :
            return '' . join ( self . BIG_NUM . split ( '+' ) )
    class Main ( object ) :
        BIG_NUM = 2000000000
        MOD = 1000000007
        def __init__ ( self ) :
            self . BIG_NUM = 1000000007
        def __repr__ ( self ) :
            return '' . join ( self . BIG_NUM . split ( '+' ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 437
---> probID: geeksforgeeks_4600_A
---> inputs:

---> outputs:
7


def nth_term ( a , b , n ) :
    z = 0
    if n % 6 == 1 :
        z = a
    elif n % 6 == 2 :
        z = b
    elif n % 6 == 3 :
        z = b - a
    elif n % 6 == 4 :
        z = - a
    elif n % 6 == 5 :
        z = - b
    if n % 6 == 0 :
        z = - ( b - a )
    return z


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 438
---> probID: geeksforgeeks_535_A
---> inputs:

---> outputs:
24


def find_sub_sequence ( s , num ) :
    import string
    res = 0
    i = 0
    while num > 0 :
        if num & 1 == 1 :
            res += ord ( s [ i ] ) - ord ( '0' )
            i += 1
        num = num >> 1
    return res
    def combined_sum ( s ) :
        n = len ( s )
        c_sum = 0
        range = ( 1 << n ) - 1
        for i in range ( 0 , range ) :
            c_sum += find_sub_sequence ( s , i )
        return c_sum
    def main ( ) :
        s = '123'
        print ( combined_sum ( s ) )
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 439
---> probID: geeksforgeeks_963_A
---> inputs:

---> outputs:
9


def minimum_cost ( cost , n ) :
    dp1 , dp2 = 0 , 0
    for i in range ( n ) :
        dp0 = cost [ i ] + min ( dp1 , dp2 )
        dp2 = dp1
        dp1 = dp0
    return min ( dp1 , dp2 )


---> console_out:
 
DIDN'T MATCH!! :(
 25%|██▌       | 439/1746 [00:10<00:31, 41.91it/s]

-------------------------------------


---> lineNum: 440
---> probID: geeksforgeeks_1369_A
---> inputs:

---> outputs:
Count = 10


def count_multiples ( n ) :
    import sys
    return n // 3 + n // 7 - n // 21


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 441
---> probID: geeksforgeeks_2875_A
---> inputs:

---> outputs:
Length = 3


def long_substr ( str1 , k ) :
    freq = np . zeros ( SIZE )
    str1 = list ( str1 )
    start = 0
    max_len = 0
    for ch in str1 :
        n = len ( str1 )
        for i in range ( n ) :
            ch = str1 [ i ]
            freq [ ch - 'a' ] += 1
            if freq [ ch - 'a' ] > k :
                if max_len < ( i - start ) :
                    max_len = i - start
                while freq [ ch - 'a' ] > k :
                    freq [ str1 [ start ] - 'a' ] -= 1
                    start += 1
    if max_len < ( n - start ) :
        max_len = n - start
    return max_len


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 442
---> probID: codeforces_282_B
---> inputs:
2
1 999
999 1
---> outputs:
AG

def class6 ( arg ) :
    import string
    n = len ( arg )
    ch = [ ]
    s1 , s2 = 0 , 0
    i , j , flag , dif = 0 , 0 , 0
    for x , y in enumerate ( arg ) :
        temp1 = s1 + x
        temp2 = s2 + y
        if abs ( temp1 - s2 ) <= 500 :
            s1 += x
            ch . append ( 'A' )
            continue
        if abs ( temp2 - s1 ) <= 500 :
            s2 += y
            ch . append ( 'G' )
            continue
        flag = 1
        break
    if flag == 1 :
        print ( - 1 )
    else :
        ans = ''
        ans = ans ( ch )
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 443
---> probID: leetcode_405_A
---> inputs:

---> outputs:
1a

def to_hex ( num ) :
    hex_map = '0123456789abcdef'
    if not num :
        return '0'
    res = ''
    while num and len ( res ) < 8 :
        res = hex_map [ num & 15 ] + res
        num = num >> 4
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 444
---> probID: codeforces_544_B
---> inputs:
5 2
---> outputs:
['YES\nSSSSS\nLLLLL\nSSSSS\nLLLLL\nSSSSS', 'YES\nLSLSS\nSSSSS\nSSSSS\nSSSSS\nSSSSS\n']

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        count = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        print ( '\n' )
    def print_is_land ( n , count ) :
        a = ( n + 1 ) // 2
        b = n // 2
        max = a * a + b * b
        if count > max :
            print ( 'NO' )
            return
        print ( 'YES' )
        s = [ ]
        for i in range ( n ) :
            for j in range ( n ) :
                if ( i + j ) % 2 == 0 and count > 0 :
                    s . append ( 'L' )
                    count -= 1
                else :
                    s . append ( 'S' )
        print ( '' . join ( s ) )


---> console_out:
 
DIDN'T MATCH!! :(
 25%|██▌       | 444/1746 [00:10<00:31, 41.87it/s]

-------------------------------------


---> lineNum: 445
---> probID: geeksforgeeks_5111_A
---> inputs:

---> outputs:
ek


def longest_string ( str1 , str2 ) :
    count1 , count2 = [ 0 ] * 26
    for c in str1 :
        count1 [ ord ( c ) - ord ( 'a' ) ] += 1
    for c in str2 :
        count2 [ ord ( c ) - ord ( 'a' ) ] += 1
    result = ""
    for i in range ( 26 ) :
        for j in range ( 1 , min ( count1 [ i ] , count2 [ i ] ) + 1 ) :
            result += chr ( ord ( 'a' ) + str ( i ) )
    print ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 446
---> probID: geeksforgeeks_1843_A
---> inputs:

---> outputs:
4


def GFG ( x ) :
    ret = 0
    while ( x >> ( ret + 1 ) ) :
        ret += 1
    return ret


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 447
---> probID: geeksforgeeks_4393_A
---> inputs:

---> outputs:
No


def GFG ( s , i ) :
    if i == len ( s ) :
        print ( "Yes" )
        return
    if s [ i ] == "a" :
        q1 ( s , i + 1 )
    else :
        q2 ( s , i + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 448
---> probID: aizu_p00154_A
---> inputs:
5
1 10
5 3
10 3
25 2
50 2
4
120
500
100
168
7
1 10
3 10
5 10
10 10
25 10
50 10
100 10
3
452
574
787
0
---> outputs:
16
0
12
7
9789
13658
17466

def main ( ) :
    import sys
    try :
        n = len ( sys . stdin )
    except :
        pass
    m = [ 0 ] * 10000
    t = [ 0 ] * 1
    a , b = 0 , 0
    max = 0
    for i in range ( n ) :
        m [ i ] = 0
        t [ i ] = 1
        a = sys . stdin . read ( )
        b = sys . stdin . read ( )
        for j in range ( 0 , a * b , a ) :
            for k in range ( 0 , max + 1 ) :
                if t [ k ] > 0 :
                    m [ j + k ] += t [ k ]
        max += a * b
        t = m [ : ]
    s = sys . stdin . read ( )
    for i in range ( s ) :
        print ( m [ sys . stdin . read ( ) ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 449
---> probID: geeksforgeeks_1134_A
---> inputs:

---> outputs:
22:22


def find_time ( T , K ) :
    minutes = ( ( T [ 0 ] - '0' ) * 10 + T [ 1 ] - '0' ) * 60 + ( ( T [ 3 ] - '0' ) * 10 + T [ 4 ] - '0' )
    minutes += K
    hour = ( minutes // 60 ) % 24
    min = minutes % 60
    if hour < 10 :
        print ( '0' + str ( hour ) + ':' , end = ' ' )
    else :
        print ( hour + ':' , end = ' ' )
    if min < 10 :
        print ( '0' + str ( min ) )
    else :
        print ( min )


---> console_out:
 
DIDN'T MATCH!! :(
 26%|██▌       | 449/1746 [00:10<00:31, 41.38it/s]

-------------------------------------


---> lineNum: 450
---> probID: geeksforgeeks_2226_A
---> inputs:

---> outputs:
Maximum Product = 3150
Maximum Sum = 26


def max_product_sum ( data , m ) :
    n = len ( data )
    max_prod , max_sum = None , None
    for i in range ( n - m ) :
        product , sum = 1 , 0
        for j in range ( i , m + i ) :
            product = product * ( data [ j ] - '0' )
            sum = sum + ( data [ j ] - '0' )
        max_prod = max ( max_prod , product )
        max_sum = max ( max_sum , sum )
    print ( 'Maximum Product = %d' % max_prod )
    print ( 'Maximum Sum = %d' % max_sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 451
---> probID: geeksforgeeks_3429_A
---> inputs:

---> outputs:
8


def GFG ( x , y , z ) :
    if x < y :
        return ( x if x < z else z )
    else :
        return ( y if y < z else z )
def min_cost ( cost , m , n ) :
    if n < 0 or m < 0 :
        return sys . maxsize
    elif m == 0 and n == 0 :
        return cost [ m ] [ n ]
    else :
        return cost [ m ] [ n ] + min ( min_cost ( cost , m - 1 , n - 1 ) , min_cost ( cost , m - 1 , n ) , min_cost ( cost , m , n - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 452
---> probID: codeforces_985_A
---> inputs:
6
1 2 6
---> outputs:
2

def main ( ) :
    import sys
    import math
    n = int ( sys . stdin . readline ( ) )
    x = [ 0 ] * ( n + 1 )
    ji = [ 0 ] * ( n + 1 )
    shu = [ 0 ] * ( n // 2 )
    shu . sort ( )
    l1 = 0
    l2 = 0
    for i in range ( n // 2 ) :
        s1 = i * 2 + 1
        s2 = i * 2 + 2
        id = shu [ i ]
        if id != s1 :
            l1 = l1 + abs ( s1 - id )
        if id != s2 :
            l2 = l2 + abs ( s2 - id )
    min = min ( l1 , l2 )
    print ( min )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552976343_2574/main.py", line 24
    return parents [ x ] = r
                         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 453
---> probID: aizu_p02344_A
---> inputs:
5 6
0 0 2 5
0 1 2 3
1 0 1
1 1 3
0 1 4 8
1 0 4
---> outputs:
2
?
10

def main ( ) :
    import sys
    import re
    import sys
    import sys
    import sys
    import sys
    parents = [ ]
    weight = { }
    rank = { }
    for i in range ( n ) :
        parents . append ( i )
    type , x , y , z = 0 , [ ] , [ ] , [ ]
    for i in range ( q ) :
        type = sys . stdin . read ( )
        x = sys . stdin . read ( )
        y = sys . stdin . read ( )
        if type == 0 :
            z = sys . stdin . read ( )
            return
        else :
            r = find ( parents [ x ] )
            weight [ x ] += weight [ parents [ x ] ]
            return parents [ x ] = r
    def find ( x ) :
        find ( x )
        return weight [ x ]
    def relate ( x , y , z ) :
        z += weight [ x ]
        z -= weight [ y ]
        x = find ( x )
        y = find ( y )
        if x == y :
            return
        if rank [ x ] < rank [ y ] :
            tmp = x
            x = y
            y = tmp
            z = - z
        if rank [ x ] == rank [ y ] :
            rank [ x ] += 1
        parents [ y ] = x
        weight [ y ] = z
    def diff ( x , y ) :
        if find ( x ) == find ( y ) :
            print ( weight [ y ] - weight [ x ] )
        else :
            print ( '?' )
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 454
---> probID: geeksforgeeks_2430_A
---> inputs:

---> outputs:
42


def sum_divisibles ( A , B , M ) :
    sum = 0
    for i in range ( A , B + 1 ) :
        if i % M == 0 :
            sum += i
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
 26%|██▌       | 454/1746 [00:10<00:31, 40.73it/s]

-------------------------------------


---> lineNum: 455
---> probID: geeksforgeeks_1744_A
---> inputs:

---> outputs:
Count of numbers from 1 to 328 that have 4 as a digit is 60


def count_numbers_with_4 ( n ) :
    if n < 4 :
        return 0
    d = int ( math . log10 ( n ) )
    a = [ 0 ] * d + [ 1 ] * d
    for i in range ( 2 , d + 1 ) :
        a [ i ] = a [ i - 1 ] * 9 + int ( math . ceil ( math . pow ( 10 , i - 1 ) ) )
    p = int ( math . ceil ( math . pow ( 10 , d ) ) )
    msd = n // p
    if msd == 4 :
        return ( msd ) * a [ d ] + ( n % p ) + 1
    if msd > 4 :
        return ( msd - 1 ) * a [ d ] + p + count_numbers_with_4 ( n % p )
    return ( msd ) * a [ d ] + count_numbers_with_4 ( n % p )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 456
---> probID: codeforces_450_B
---> inputs:
2 3
3
---> outputs:
1

def vfe ( ) :
    import sys
    x = sys . stdin . read ( )
    y = sys . stdin . read ( )
    list = [ x , y , y - x ]
    i = 2
    while not ( list [ i ] == y and list [ i - 1 ] == x or list [ i ] == 0 and list [ i - 1 ] == 0 ) :
        list [ i ] = list [ i ] - list [ i - 1 ]
        i += 1
    k = sys . stdin . read ( )
    i -= 1
    k = k % i
    if k == 0 :
        k = i
    print ( ( ( list [ k - 1 ] % 1000000007 ) + 1000000007 ) % 1000000007 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 457
---> probID: geeksforgeeks_3088_A
---> inputs:

---> outputs:
35 30 100 80 40 

def find_post_order_util ( pre , n , minval , maxval , pre_index ) :
    import sys
    class Solution ( object ) :
        data = d
    def find_post_order_util ( pre , n , minval , maxval , pre_index ) :
        if pre_index . data == n :
            return
        if pre [ pre_index . data ] < minval or pre [ pre_index . data ] > maxval :
            return
        val = pre [ pre_index . data ]
        pre_index . data += 1
        find_post_order_util ( pre , n , minval , val , pre_index )
        find_post_order_util ( pre , n , val , maxval , pre_index )
        sys . stdout . write ( '%d ' % val )
    def find_post_order ( pre , n ) :
        pre_index = { 'data' : 0 }
        find_post_order_util ( pre , n , int ( minval ) , int ( maxval ) , pre_index )
    def main ( args ) :
        pre = [ 40 , 30 , 35 , 80 , 100 ]
        n = len ( pre )
        find_post_order ( pre , n )
    return Solution ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 458
---> probID: geeksforgeeks_1057_A
---> inputs:

---> outputs:
1


def count_ways ( n , arr , k ) :
    import set
    if k <= 0 or k >= n :
        return 0
    s = set ( )
    for i in range ( n ) :
        s . add ( arr [ i ] )
    if len ( s ) <= k :
        return 0
    return len ( s ) - k


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552976490_9049/main.py", line 25
    for l in s [ j ] . split ( ':' ) [ 0 ] . split ( ':' ) [ 0 ] + s [ j ] . split ( ':' ) [ 1 ] . split ( ':' ) [ 0 ]
                                                                                                                     ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 459
---> probID: codeforces_250_B
---> inputs:
6
a56f:d3:0:0124:01:f19a:1000:00
a56f:00d3:0000:0124:0001::
a56f::0124:0001:0000:1234:0ff0
a56f:0000::0000:0001:0000:1234:0ff0
::
0ea::4d:f4:6:0
---> outputs:
a56f:00d3:0000:0124:0001:f19a:1000:0000
a56f:00d3:0000:0124:0001:0000:0000:0000
a56f:0000:0000:0124:0001:0000:1234:0ff0
a56f:0000:0000:0000:0001:0000:1234:0ff0
0000:0000:0000:0000:0000:0000:0000:0000
00ea:0000:0000:0000:004d:00f4:0006:0000

def _250B ( ) :
    import sys
    import string
    import string
    import sys
    class _250B ( object ) :
        def __init__ ( self ) :
            self . stdin = None
            self . solve ( )
            s = [ ]
            for i , n in enumerate ( self . get_n ( ) ) :
                s = s . split ( ':' , 1 )
                k , m = 0 , len ( s ) - 1
                if s [ k ] == '' :
                    k += 1
                if s [ m ] == '' :
                    m -= 1
                for j in range ( k , m + 1 ) :
                    if s [ j ] == '' :
                        for l , lim in zip ( 1 , 8 - m + k ) :
                            s . append ( "0000" )
                            if l < lim :
                                s . append ( ':' )
                else :
                    for l in s [ j ] . split ( ':' ) [ 0 ] . split ( ':' ) [ 0 ] + s [ j ] . split ( ':' ) [ 1 ] . split ( ':' ) [ 0 ]
                if j < m :
                    s . append ( ':' )
            s . append ( '\n' )
        def main ( self ) :
            try :
                self . stdin = None
                sys . stdout . write ( self . solve ( ) )
                self . stdin . close ( )
            except :
                sys . exit ( )
        def __next__ ( self ) :
            return self . stdin . readline ( )
        def __next__ ( self ) :
            return int ( __next__ )
        def __next__ ( self ) :
            return int ( __next__ )
    return _250B


---> console_out:
 
DIDN'T MATCH!! :(
 26%|██▋       | 459/1746 [00:10<00:31, 41.35it/s]  File "./junk/1692552976514_2695/main.py", line 23
    return main
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 460
---> probID: geeksforgeeks_395_A
---> inputs:

---> outputs:
2


def GFG ( n ) :
    flag = 1
    for i in range ( 2 , n + 1 ) :
        if n % i == 0 :
            flag = 0
            break
    return ( True if flag == 1 else False )
def isPerfectSquare ( x ) :
    sr = math . sqrt ( x )
    return ( ( sr - math . floor ( sr ) ) == 0 )
def countInterestingPrimes ( n ) :
    answer = 0
    for i in range ( 2 , n + 1 ) :
        if isPrime ( i ) :
            for j in range ( 1 , j ** 2 + 1 ) :
                if isPerfectSquare ( i - j ** 2 ) :
                    answer += 1
                    break
    return answer
def main ( ) :
    N = 10
    print ( countInterestingPrimes ( N ) , end = ' ' )
return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 461
---> probID: atcoder_ABC109_B
---> inputs:
100
wzcitmdfbw
ziowcpggbu
niopnjdjcw
rixzquldia
lwrdjmbhvk
gysprovnzf
rajessmyby
cdqmsxsryd
soiktyfxjo
mtwyskctdj
fuvekmckrw
izayctxcfx
pgruprmpnz
suoegwgdbb
yiruisjqib
apbombsjoq
ozsdgdrgyq
yfrkssntfg
ufqrqzxecg
ulnxeatmlq
xjkyjxifir
szudolgmnl
jzjujuayji
icervhavvg
twhlsrwaqo
tgokhtwgjm
fslvhzpgns
fhgboehmzp
ortkqjuanp
nfnluezljs
qtofmenwfz
lrrpzetxog
oqrhuhlyge
nbkpwqbwwc
zxeiyoztkm
gvjusurkti
eahzrntrra
skbabwcsrh
aznxyudgfp
qpguijawgh
wvfogdvtuh
mrjceofctz
qgfietzkbe
gbsjzmfzrm
fmgvoafxfy
imayuxcjre
dydnvlxwvh
uaiqgluufb
btpvtcfhpr
lrbvvlntrq
zqawbssran
jaxtjvsxsd
uzsxloeblc
ibyfeuonsy
rcvccfpkzt
ialhqhqeky
dqxmnzcapl
zyxvfbpdzm
lfmmlgtnfr
aoebtfduzx
gsaqwcnjiy
trzyfwkrdl
aywhcmfgzv
cbflkacyhh
casmblhbdj
ejnfwylcqv
nmzxugfsiy
juicgffiwr
szdbzjyhvg
pfsapufjqf
epxbfljgtd
gmfeecqfwf
vweiacditm
sfaldcqlry
clmccmodln
lkwvgmdzwa
pbzyrwxasq
vtbmtbpide
dvrpxqndca
htgzshjaru
umquxrrvth
ocdkuurwur
kexhypsbup
xisdeshlts
vhvjvhnxgg
avcdaiiaqa
djjernidpe
rjdqucsaup
rtyfoiiklh
tsznddftcg
echwbizhes
dxmacmzild
eegshhntfz
nbbgxavmpn
fhpxylxkyz
tbqwpuymql
nmetghtnre
fypivpyndo
bresgvlmkk
xhlomigiri
---> outputs:
No

def main ( args ) :
    import os
    import sys
    try :
        N = int ( sys . stdin . read ( ) )
    except ValueError :
        print ( "No input" )
        return 1
    previous = sys . stdin . read ( )
    next = sys . stdin . read ( )
    used_words = set ( )
    used_words . add ( previous )
    while N > 1 :
        next = sys . stdin . read ( )
        if not ( ( previous [ - 1 ] == next [ 0 ] ) and used_words . add ( next ) ) :
            print ( "No" )
            sys . exit ( 1 )
        previous = next
        N -= 1
    sys . stdout . write ( "Yes" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 462
---> probID: geeksforgeeks_2976_A
---> inputs:

---> outputs:
18


def find_num ( div , rem , N ) :
    num = rem [ N - 1 ]
    for i in range ( N - 2 , - 1 , - 1 ) :
        num = num * div [ i ] + rem [ i ]
    return num


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 463
---> probID: geeksforgeeks_3759_A
---> inputs:

---> outputs:
Array after segregation is 0 0 1 1 1 1 

def segregate0and1 ( arr ) :
    type0 = 0
    type1 = len ( arr ) - 1
    while type0 < type1 :
        if arr [ type0 ] == 1 :
            arr [ type1 ] = arr [ type1 ] + arr [ type0 ]
            arr [ type0 ] = arr [ type1 ] - arr [ type0 ]
            arr [ type1 ] = arr [ type1 ] - arr [ type0 ]
            type1 -= 1
        else :
            type0 += 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 464
---> probID: atcoder_ABC085_B
---> inputs:
4
10
8
8
6
---> outputs:
3

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    d = [ ]
    for i in range ( n ) :
        d . append ( sys . stdin . readline ( ) )
    d . sort ( )
    ans = 1
    for i in range ( n - 1 ) :
        if d [ i ] != d [ i + 1 ] :
            ans += 1
    print ( ans )
    sys . exit ( 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 27%|██▋       | 464/1746 [00:11<00:30, 41.59it/s]

-------------------------------------


---> lineNum: 465
---> probID: codeforces_3_A
---> inputs:
a8
h1
---> outputs:
7
RD
RD
RD
RD
RD
RD
RD

def shortest_kingpath ( ) :
    import string
    s = string . strip ( )
    s1 = string . strip ( )
    c = s . replace ( ' ' , '' )
    c1 = s1 . replace ( ' ' , '' )
    diff = c1 [ 0 ] - c [ 0 ]
    dif = c1 [ 1 ] - c [ 1 ]
    n = abs ( diff )
    m = abs ( dif )
    ans = ""
    while diff != 0 or dif != 0 :
        if diff > 0 :
            ans += "R"
            diff -= 1
        if diff < 0 :
            ans += "L"
            diff += 1
        if dif > 0 :
            ans += "U"
            dif -= 1
        if dif < 0 :
            ans += "D"
            dif += 1
        ans += "\n"
    print ( max ( n , m ) )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 466
---> probID: aizu_p02025_A
---> inputs:
2 2
1 2
4 8
---> outputs:
60

def main ( ) :
    import sys
    h , w = sys . maxsize , sys . maxsize
    total = 0
    for i in range ( h ) :
        for j in range ( w ) :
            x = sys . maxsize
            total += x * ( i + 1 ) * ( h - i ) * ( j + 1 ) * ( w - j )
    print ( total )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552976679_6363/main.py", line 119
    from string
              ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 467
---> probID: codeforces_821_A
---> inputs:
3
1 1 2
2 3 1
6 4 1
---> outputs:
Yes

def main ( ) :
    import sys
    import os
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    from string
    import string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 468
---> probID: aizu_p02424_A
---> inputs:
8 10
---> outputs:
00000000000000000000000000001000
00000000000000000000000000001010
00000000000000000000000000000010

def main ( ) :
    import sys
    x , y = sys . stdin . read ( ) , sys . stdin . read ( )
    print_bin ( fill_zero ( str ( x & y ) ) )
    print_bin ( fill_zero ( str ( x | y ) ) )
    print_bin ( fill_zero ( str ( x ^ y ) ) )
    def print_bin ( str ) :
        for c in str [ 32 : ] :
            print ( c , end = ' ' )
        print ( )
    def fill_zero ( str ) :
        zero = ''
        if len ( str ) < 32 :
            for c in str [ 32 - len ( str ) : ] :
                zero += '0'
        return zero + str
    return '' . join ( [ str ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 469
---> probID: aizu_p02423_A
---> inputs:
8
---> outputs:
00000000000000000000000000001000
11111111111111111111111111110111
00000000000000000000000000010000
00000000000000000000000000000100

def main ( ) :
    import sys
    x = sys . stdin . read ( )
    print_bin ( fill_zero ( str ( x ) ) )
    print_bin ( fill_zero ( str ( ~ x ) ) )
    print_bin ( fill_zero ( str ( x << 1 ) ) )
    print_bin ( fill_zero ( str ( x >> 1 ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 27%|██▋       | 469/1746 [00:11<00:30, 42.09it/s]

-------------------------------------


---> lineNum: 470
---> probID: atcoder_ABC089_C
---> inputs:
1
AAA
---> outputs:
0

def main ( ) :
    import string
    import math
    import sys
    M = 5
    with open ( 'test.txt' , 'r' ) as f :
        n = int ( f . readline ( ) )
        s = [ ]
        ma = [ 0 ] * M
        for i in range ( n ) :
            s = f . read ( n )
            if s [ 0 ] == 'M' :
                ma [ 0 ] += 1
            elif s [ 0 ] == 'A' :
                ma [ 1 ] += 1
            elif s [ 0 ] == 'R' :
                ma [ 2 ] += 1
            elif s [ 0 ] == 'C' :
                ma [ 3 ] += 1
            elif s [ 0 ] == 'H' :
                ma [ 4 ] += 1
        f . close ( )
        ans = 0
        for i in range ( M - 2 ) :
            for j in range ( i + 1 , M - 1 ) :
                for k in range ( j + 1 , M ) :
                    ans += ma [ i ] * ma [ j ] * ma [ k ]
        sys . stdout . write ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 471
---> probID: codeforces_950_B
---> inputs:
7 6
2 5 3 1 11 4 4
7 8 2 4 1 8
---> outputs:
3

def main ( ) :
    import sys
    try :
        total_first_files = sys . stdin . readlines ( )
        total_second_files = sys . stdin . readlines ( )
        first_files = [ ]
        second_files = [ ]
        for i in range ( total_first_files ) :
            first_files . append ( sys . stdin . readline ( ) )
        for i in range ( total_second_files ) :
            second_files . append ( sys . stdin . readline ( ) )
        print ( intercepted_message ( first_files , second_files ) )
    except :
        print ( 'No file found' )
        return 1
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 472
---> probID: aizu_p02401_A
---> inputs:
1 + 2
56 - 18
13 * 2
100 / 10
27 + 81
0 ? 0
---> outputs:
3
38
26
10
108

def main ( args ) :
    import sys
    for a , op , b in list ( args ) :
        if op == '?' :
            break
        if op == '+' :
            print ( a + b )
        if op == '-' :
            print ( a - b )
        if op == '*' :
            print ( a * b )
        if op == '/' :
            print ( a / b )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552976819_9353/main.py", line 11
    count = 0
    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 473
---> probID: atcoder_AGC013_A
---> inputs:
6
1 2 3 2 2 1
---> outputs:
2

def main ( ) :
    import sys
    try :
        import math
    except :
        pass
    N = len ( sys . argv )
    A = [ ]
    for i in range ( N ) :
        A . append ( math . pi * math . cos ( math . pi * math . sin ( math . pi * math . cos ( math . pi * math . sin ( math . pi * math . cos ( math . pi * math . cos ( math . pi * math . sin ( math . pi * math . cos ( math . pi * math . cos ( math . pi * math . cos ( math . pi * math . sin ( math . pi * math . cos ( math . pi * math . cos ( math . pi * math . cos ( math . pi * math . cos ( math . pi * math . cos ( math . pi * math . cos ( math . pi * math . abs ( math . abs ( math . abs ( math . abs ( math . abs ( math . abs ( math . abs ( math . abs ( math . abs ( math . abs ( math . abs ( math . abs ( math . abs ( math . abs ( math ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
    count = 0
    for i in range ( N ) :
        if i == N - 1 :
            count += 1
        elif A [ i ] == A [ i + 1 ] :
            count += 1
        elif A [ i ] < A [ i + 1 ] :
            count += 1
        else :
            while A [ i ] >= A [ i + 1 ] :
                count += 1
                if i == N - 1 :
                    break
            count += 1
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 474
---> probID: geeksforgeeks_3904_A
---> inputs:

---> outputs:
31


def count_pairs ( s ) :
    import string
    MAX = 256
    cnt = [ 0 ] * MAX
    for c in s :
        cnt [ ord ( c ) ] += 1
    ans = 0
    for i in range ( MAX ) :
        ans += cnt [ i ] * cnt [ i ]
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 27%|██▋       | 474/1746 [00:11<00:30, 42.22it/s]

-------------------------------------


---> lineNum: 475
---> probID: geeksforgeeks_1637_A
---> inputs:

---> outputs:
1 11 100 2 17 500 

def SieveOfEratosthenes ( n ) :
    prime = [ False ] * 100006
    for i in range ( 1 , n + 1 ) :
        prime [ i ] = True
    prime [ 1 ] = False
    for p in range ( 2 , p * n + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , n + 1 , p ) :
                prime [ i ] = False
    def sortedArray ( arr , n ) :
        SieveOfEratosthenes ( 100005 )
        v = [ ]
        for i in range ( n ) :
            if prime [ arr [ i ] ] == False :
                v . append ( arr [ i ] )
        v . sort ( )
        j = 0
        for i in range ( n ) :
            if prime [ arr [ i ] ] == True :
                print ( arr [ i ] , end = ' ' )
            else :
                print ( v [ j ] , end = ' ' )
                j += 1
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 476
---> probID: geeksforgeeks_636_A
---> inputs:

---> outputs:
3


def gcdFibonacciFreq ( arr , n ) :
    prev , curr = 0 , 1
    hash . add ( prev )
    hash . add ( curr )
    while curr <= max_element :
        temp = curr + prev
        hash . add ( temp )
        prev = curr
        curr = temp
    def gcdFibonacciFreq ( arr , n ) :
        hash = set ( )
        createHash ( hash , max ( arr ) )
        i = 0
        m = { }
        for i in range ( n ) :
            if arr [ i ] in m :
                m [ arr [ i ] ] = m [ arr [ i ] ] + 1
            else :
                m [ arr [ i ] ] = 1
        gcd = 0
        for it , v in m . items ( ) :
            if v in hash :
                gcd = __gcd ( gcd , it )
        return gcd
    def __gcd ( a , b ) :
        return a if b == 0 else __gcd ( b , a % b )
    def main ( ) :
        arr = [ 5 , 3 , 6 , 5 , 6 , 6 , 5 , 5 ]
        n = len ( arr )
        print ( gcdFibonacciFreq ( arr , n ) , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 477
---> probID: geeksforgeeks_828_A
---> inputs:

---> outputs:
Area of semicircle = 8.6198


def GFG ( a ) :
    R = a * float ( 2.0 - math . sqrt ( 2 ) )
    area = float ( ( 3.14 * R ** 2 ) / 2.0 )
    return area


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 478
---> probID: geeksforgeeks_3808_A
---> inputs:

---> outputs:
4


def GFG ( a , b , c , d , x , n ) :
    count = 0
    for i in range ( n ) :
        for j in range ( n ) :
            for k in range ( n ) :
                for l in range ( n ) :
                    if ( a [ i ] ^ b [ j ] ^ c [ k ] ^ d [ l ] ) == x :
                        count += 1
        return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 479
---> probID: geeksforgeeks_2410_A
---> inputs:

---> outputs:
b
c
e


def GFG ( s , q ) :
    import string
    import math
    class GFG ( string ) :
        def __init__ ( self , l , r , n ) :
            self . l = l
            self . r = r
            self . n = n
        def query ( self , l , r , n ) :
            self . l = l
            self . r = r
            self . n = n
        def query ( self , l , r , n ) :
            self . l = l
            self . r = r
            self . n = n
    def print_smallest ( s , q ) :
        N = len ( s )
        H = np . zeros ( ( N + 1 , 26 ) )
        for i in range ( 1 , N + 1 ) :
            H [ i ] [ s [ i - 1 ] - 'a' ]
            for j in range ( 26 ) :
                H [ i ] [ j ] += H [ i - 1 ] [ j ]
        m = len ( q )
        for j in range ( m ) :
            l , r , n = q [ j ]
            sum = 0
            for i in range ( 26 ) :
                sum += H [ r ] [ i ] - H [ l - 1 ] [ i ]
                if sum >= n :
                    print ( chr ( ord ( 'a' ) + str ( i ) ) )
                    break
    def main ( args ) :
        s = 'afbccdeb'
        q = [ ( 2 , 4 , 1 ) , ( 1 , 6 , 4 ) , ( 1 , 8 , 7 ) ]
        print_smallest ( s , q )
    return GFG ( s )


---> console_out:
 
DIDN'T MATCH!! :(
 27%|██▋       | 479/1746 [00:11<00:29, 42.30it/s]

-------------------------------------


---> lineNum: 480
---> probID: codeforces_1443_B
---> inputs:
2
1 1
01000010
5 1
01101110
---> outputs:
2
6

def main ( ) :
    import sys
    from io import BytesIO
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BytesIO
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BytesIO
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedWriter
    from io import StringIO
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedWriter
    from io import StringIO
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedWriter
    from io import StringIO
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader
    from io import BufferedReader


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 481
---> probID: codeforces_1716_A
---> inputs:
4
1
3
4
12
---> outputs:
2
1
2
4

def test223 ( ) :
    import sys
    t = len ( sys . stdin )
    for j in range ( t ) :
        x = sys . stdin . read ( )
        if x == 1 :
            print ( '2' )
        elif x == 2 :
            print ( '1' )
        elif x % 3 == 0 :
            print ( x // 3 )
        else :
            print ( x // 3 + 1 )
    sys . exit ( 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 482
---> probID: codeforces_999_B
---> inputs:
10
rocesfedoc
---> outputs:
codeforces

def B999 ( data , last ) :
    f = open ( 'B999.txt' , 'r' )
    t = int ( f . readline ( ) )
    data = f . read ( )
    for i in range ( 1 , t + 1 ) :
        if t % i == 0 :
            data = reverse ( data , i - 1 )
    print ( data )
    def reverse ( data , last ) :
        arr = [ ]
        for c in data :
            arr . append ( c )
        counter_up , counter_down = 0 , last
        for i in range ( 0 , last // 2 + 1 ) :
            arr [ counter_up ] = arr [ counter_down ]
            counter_up += 1
            counter_down -= 1
        result = ''
        for c in arr :
            result += c
        return result
    return reverse


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 483
---> probID: geeksforgeeks_1466_A
---> inputs:

---> outputs:
-1 1 -4 4 -8 8 -9 9 

def print_pairs ( arr , n ) :
    v = [ ]
    for i in range ( n ) :
        for j in range ( i + 1 , n ) :
            if abs ( arr [ i ] ) == abs ( arr [ j ] ) :
                v . append ( abs ( arr [ i ] ) )
        if not len ( v ) :
            return
        v . sort ( )
        for i in v :
            print ( '%d %d ' % ( - v [ i ] , i ) , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 484
---> probID: geeksforgeeks_3020_A
---> inputs:

---> outputs:
Double factorial is 15


def double_factorial ( n ) :
    import math
    if n == 0 or n == 1 :
        return 1
    return n * double_factorial ( n - 2 )


---> console_out:
 
DIDN'T MATCH!! :(
 28%|██▊       | 484/1746 [00:11<00:29, 42.19it/s]

-------------------------------------


---> lineNum: 485
---> probID: geeksforgeeks_3365_A
---> inputs:

---> outputs:
1
2


def is_palindrome ( data ) :
    import string
    l = 0
    h = len ( data ) - 1
    while h > l :
        if data [ l ] != data [ h ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 486
---> probID: geeksforgeeks_3286_A
---> inputs:

---> outputs:
1670


def sum_of_subsets ( num ) :
    import re
    n = len ( num )
    sumofdigit = [ 0 ] * n
    sumofdigit [ 0 ] = num [ 0 ] - '0'
    res = sumofdigit [ 0 ]
    for i in range ( 1 , n ) :
        numi = num [ i ] - '0'
        sumofdigit [ i ] = ( i + 1 ) * numi + 10 * sumofdigit [ i - 1 ]
        res += sumofdigit [ i ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 487
---> probID: geeksforgeeks_4209_A
---> inputs:

---> outputs:
22


def find_count_of_pairs ( a , b , n ) :
    import sys
    ans = 0
    ans += n * ( a // n ) * ( b // n )
    ans += ( a // n ) * ( b % n )
    ans += ( a % n ) * ( b // n )
    ans += ( ( a % n ) + ( b % n ) ) / n
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 488
---> probID: projecteuler_p071_A
---> inputs:

---> outputs:
428570

def p071 ( ) :
    print ( eval ( 'p071()' ) )
    LIMIT = 1000000
    max_n = 0
    max_d = 1
    for d in range ( 1 , LIMIT + 1 ) :
        n = d * 3 // 7
        if d % 7 == 0 :
            n -= 1
        if int ( n ) * max_d > int ( max_n ) * d :
            max_n = n
            max_d = d
    return str ( max_n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 489
---> probID: geeksforgeeks_2328_A
---> inputs:

---> outputs:
Prime


def GFG ( n ) :
    c = [ 0 ] * 100
    def coef ( n ) :
        c [ 0 ] = 1
        for i in range ( n ) :
            c [ 0 ] = - c [ 0 ] , i
        c [ 1 + i ] = 1
        for j in range ( i , 0 , - 1 ) :
            c [ j ] = c [ j - 1 ] - c [ j ]
    def isPrime ( n ) :
        coef ( n )
        c [ 0 ] += 1
        c [ n ] -= 1
        i = n
        while ( i > 0 and c [ i ] % n == 0 ) :
            i -= 1
        return i < 0
    def main ( n ) :
        n = 37
        if isPrime ( n ) :
            print ( "Prime" )
        else :
            print ( "Not Prime" )


---> console_out:
 
DIDN'T MATCH!! :(
 28%|██▊       | 489/1746 [00:11<00:29, 42.58it/s]

-------------------------------------


---> lineNum: 490
---> probID: geeksforgeeks_480_A
---> inputs:

---> outputs:
2


def GFG ( arr , n ) :
    min = sys . maxsize
    counter = 0
    for i in range ( n - 1 , - 1 , - 1 ) :
        if arr [ i ] > min :
            counter += 1
        if arr [ i ] <= min :
            min = arr [ i ]
    return counter


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 491
---> probID: atcoder_AGC027_A
---> inputs:
3 70
20 30 10
---> outputs:
2

def main ( ) :
    import sys
    try :
        N = int ( sys . stdin . readline ( ) )
        x = sys . stdin . readline ( )
        sweet = [ ]
        for i in range ( N ) :
            a = sys . stdin . readline ( )
            sweet . append ( a )
        sweet . sort ( )
        num = 0
        for i in range ( N ) :
            if x - sweet [ num ] >= 0 :
                x = x - sweet [ num ]
                num += 1
            else :
                break
        if ( num == N ) and ( x > 0 ) :
            num -= 1
        print ( num )
    except ValueError :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 492
---> probID: codeforces_900_A
---> inputs:
3
1 1
-1 -1
2 -1
---> outputs:
Yes

def main ( ) :
    import sys
    leer = sys . stdin
    casos , x , y , conta , cont = 0 , 0 , 0 , 0
    casos = len ( leer )
    for i in range ( casos ) :
        x = leer [ i ]
        y = leer [ i ]
        if x > 0 :
            conta += 1
        else :
            cont += 1
    if conta > 1 and cont > 1 :
        print ( "No" )
    else :
        print ( "Yes" )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552977286_2460/main.py", line 9
    break
    ^
SyntaxError: 'break' outside loop


-------------------------------------


---> lineNum: 493
---> probID: aizu_p01924_A
---> inputs:
5 2 3
3
5
1
2
3
3 100 100
3
3
4
20 3 8
3
2
6
1
9
1
8
4
2
2
8
1
8
8
2
5
3
4
3
8
7 2 2
0
2
5
2
5
2
1
0 0 0
---> outputs:
3
0
11
5

def main ( ) :
    import sys
    try :
        T , D , L = sys . stdin . read ( ) . split ( ' ' )
    except ValueError :
        pass
    else :
        if T == 0 and D == 0 and L == 0 :
            break
        ans , time = 0 , 0
        for i in range ( T - 1 ) :
            x = sys . stdin . read ( ) . split ( ' ' ) [ 0 ]
            if x >= L :
                time = D - 1
                ans += 1
            elif time != 0 :
                time -= 1
                ans += 1
        sys . stdout . write ( '\n' )
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 494
---> probID: geeksforgeeks_256_A
---> inputs:

---> outputs:
3


def minimum_swaps ( arr ) :
    count = 0
    i = 0
    while i < len ( arr ) :
        if arr [ i ] != i + 1 :
            while arr [ i ] != i + 1 :
                temp = 0
                temp = arr [ i - 1 ]
                arr [ i - 1 ] = arr [ i ]
                arr [ i ] = temp
                count += 1
        i += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 28%|██▊       | 494/1746 [00:11<00:29, 42.85it/s]

-------------------------------------


---> lineNum: 495
---> probID: projecteuler_p500_A
---> inputs:

---> outputs:
35407281

def p500 ( ) :
    import collections
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    if math is None :
        return math
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 496
---> probID: geeksforgeeks_1410_A
---> inputs:

---> outputs:
The unique pair is (7, 5)


def GFG ( arr , n ) :
    XOR = arr [ 0 ]
    for i in range ( 1 , n ) :
        XOR = XOR ^ arr [ i ]
    set_bit_no = XOR & ~ ( XOR - 1 )
    x , y = 0 , 0
    for i in range ( n ) :
        if arr [ i ] & set_bit_no :
            x = x ^ arr [ i ]
        else :
            y = y ^ arr [ i ]
    print ( "The unique pair is (%d, %d)" % ( x , y ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 497
---> probID: codeforces_404_A
---> inputs:
5
xooox
oxoxo
soxoo
oxoxo
xooox
---> outputs:
NO

def main ( ) :
    import sys
    from string import join
    from string import strip
    from string import join
    from string import atof
    from string import join
    from string import join
    from string import join
    from string import atof
    from string import join
    from string import join
    from string import atof
    from string import join
    from string import join
    from string import atof
    from string import join
    from string import join
    from string import join
    from string import atof
    from string import join
    from string import join
    from string import atof
    from string import join
    from string import join
    from string import atof
    from string import join
    from string import join
    from string import atof
    from string import join
    from string import join
    def atof ( str ) :
        return atof ( str )
    return atof ( str )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 498
---> probID: aizu_p00077_A
---> inputs:
ab@5C1@8050
@99+1=1@90
---> outputs:
abCCCCC10000000050
999999999+1=1000000000

def do_it ( ) :
    import sys
    for line in sys . stdin :
        data = line . strip ( )
        data = data . replace ( ' ' , '' )
        for now in data :
            if now != '@' :
                sys . stdout . write ( now )
            else :
                i += 1
                num = ord ( data [ i ] ) - ord ( '0' )
                i += 1
                if 0 <= num <= 9 :
                    now = data [ i ]
                    for j in range ( num ) :
                        sys . stdout . write ( now )
        sys . stdout . write ( '' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 499
---> probID: geeksforgeeks_5181_A
---> inputs:

---> outputs:
Yes


def is_majority ( a , n ) :
    import sys
    import os
    import os
    import sys
    if not a :
        return False
    if n > 1 :
        a = a [ : n ]
    elif n > 1 :
        a = a [ : n ]
    elif n > 2 :
        a = a [ : n ]
    elif n > 3 :
        a = a [ : n ]
    elif n > 4 :
        a = a [ : n ]
    elif n > 5 :
        a = a [ : n ]
    elif n > 6 :
        a = a [ : n ]
    elif n > 7 :
        a = a [ : n ]
    elif n > 8 :
        a = a [ : n ]
    elif n > 9 :
        a = a [ : n ]
    elif n > 9 :
        a = a [ : n ]
    elif n > 9 :
        a = a [ : n ]
    elif n > 10 :
        a = a [ : n ]
    elif n > 11 :
        a = a [ : n ]
    elif n > 11 :
        a = a [ : n ]
    elif n > 12 :
        a = a [ : n ]
    elif n > 13 :
        a = a [ : n ]
    elif n > 14 :
        a = a [ : n ]
    elif n > 15 :
        a = a [ : n ]
    elif n > 16 :
        a = a [ : n ]
    elif n > 17 :
        a = a [ : n ]
    elif n > 18 :
        a = a [ : n ]
    elif n > 19 :
        a = a [ : n ]
    elif n > 23 :
        a = a [ : n ]
    elif n > 24 :
        a = a [ : n ]
    elif n > 5 :
        a = a [ : n ]
    elif n > 6 :
        a = a [ : n ]
    elif n > 7 :
        a = a [ : n ]
    else :
        a = a [ : n ]
    return True


---> console_out:
 
DIDN'T MATCH!! :(
 29%|██▊       | 499/1746 [00:11<00:29, 42.83it/s]

-------------------------------------


---> lineNum: 500
---> probID: aizu_p02316_A
---> inputs:
4 8
4 2
5 2
2 1
8 3
---> outputs:
21

def main ( ) :
    import sys
    import numpy as np
    import numpy . random
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap
    import knap


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 501
---> probID: aizu_p00076_A
---> inputs:
3
6
-1
---> outputs:
0.29 
1.71
-2.31 
0.80

def do_it ( ) :
    import math
    do_it ( )
    n = sys . maxsize
    while n != - 1 :
        rad = 0
        hyp = 1
        for i in range ( 1 , n ) :
            rad += math . atan ( 1 / hyp )
            hyp = math . sqrt ( hyp * hyp + 1 )
        print ( hyp * math . cos ( rad ) )
        print ( hyp * math . sin ( rad ) )
        n = sys . maxsize


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 502
---> probID: geeksforgeeks_4813_A
---> inputs:

---> outputs:
1 5 6 

def print_kmissing ( arr , n , k ) :
    arr . sort ( )
    i = 0
    while i < n and arr [ i ] <= 0 :
        i += 1
    count , curr = 0 , 1
    while count < k and i < n :
        if arr [ i ] != curr :
            print ( curr , end = ' ' )
            count += 1
        else :
            i += 1
            curr += 1
    while count < k :
        print ( curr , end = ' ' )
        curr += 1
        count += 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 503
---> probID: geeksforgeeks_615_A
---> inputs:

---> outputs:
2 3 4 5 

def print_numbers ( a , n ) :
    import sys
    mpp = { }
    for num in a :
        for j in range ( 1 , len ( num ) + 1 ) :
            if num % j == 0 :
                if j != 1 :
                    if j in mpp :
                        mpp [ j ] = mpp [ j ] + 1
                    else :
                        mpp [ j ] = 1
                if ( num // j ) != j :
                    if num // j in mpp :
                        mpp [ num // j ] = mpp [ num // j ] + 1
                    else :
                        mpp [ num // j ] = 1
    maxi = 0
    for it , i in mpp . items ( ) :
        maxi = max ( i , maxi )
    for it , i in mpp . items ( ) :
        if i == maxi :
            sys . stdout . write ( '%d ' % it )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 504
---> probID: codeforces_1146_B
---> inputs:
aaaaa
---> outputs:
aaaaa

def cf1146B ( ) :
    import string
    data = list ( open ( 'cf1146B' ) . readlines ( ) )
    index = data . find ( 'a' )
    a_cnt = 0
    while index != - 1 :
        a_cnt += 1
        index = data . find ( 'a' , index + 1 )
    s_index = ( len ( data ) - a_cnt ) // 2
    s = data [ : - s_index ]
    s2 = s
    r = data [ - s_index : ]
    s = s . rstrip ( )
    if s == r :
        print ( s2 )
    else :
        print ( ':(' )


---> console_out:
 
DIDN'T MATCH!! :(
 29%|██▉       | 504/1746 [00:11<00:29, 42.38it/s]

-------------------------------------


---> lineNum: 505
---> probID: codeforces_637_A
---> inputs:
5
1 3 2 2 1
---> outputs:
2

def voting ( args ) :
    import sys
    import os
    import subprocess
    import sys
    import subprocess
    import time
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        n = 0
    ans , max = 0 , 0
    a = [ 0 ] * 1000001
    for i in range ( n ) :
        b = int ( sys . stdin . readline ( ) )
        a [ b ] += 1
        if a [ b ] > max :
            max = a [ b ]
            ans = b
    subprocess . call ( ans )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )
    subprocess . call ( a )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 506
---> probID: geeksforgeeks_1181_A
---> inputs:

---> outputs:
Accepted
Not Accepted


def GFG ( data ) :
    if data [ 0 ] >= 'A' and data [ 0 ] <= 'Z' :
        return 1
    else :
        return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 507
---> probID: geeksforgeeks_1752_A
---> inputs:

---> outputs:
Average of 1 numbers is 10.0
Average of 2 numbers is 15.0
Average of 3 numbers is 20.0
Average of 4 numbers is 25.0
Average of 5 numbers is 30.0
Average of 6 numbers is 35.0


def get_avg ( prev_avg , x , n ) :
    avg = 0
    for i in range ( n ) :
        avg = get_avg ( avg , arr [ i ] , i )
        print ( "Average of %d numbers is %.1 f" % ( i + 100000000 , avg ) )
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 508
---> probID: projecteuler_p050_A
---> inputs:

---> outputs:
997651

def p050 ( ) :
    print ( eval ( 'p050' ) )
    LIMIT = math . pow ( 10 , 6 )
    def run ( ) :
        is_prime , primes = math . list_primality ( LIMIT )
        max_sum = 0
        max_run = - 1
        for i in range ( len ( primes ) ) :
            sum = 0
            for j in range ( i , len ( primes ) ) :
                sum += primes [ j ]
                if sum > LIMIT :
                    break
                elif j - i > max_run and sum > max_sum and is_prime [ sum ] :
                    max_sum = sum
                    max_run = j - i
        return str ( max_sum )
    return run


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 509
---> probID: geeksforgeeks_5228_A
---> inputs:

---> outputs:
Length of lst is 5


def lis ( arr , n ) :
    import numpy as np
    max = 0
    lst = np . zeros ( n )
    lst [ 1 : ] = 1
    for i in range ( 1 , n ) :
        for j in range ( i ) :
            if arr [ i ] > arr [ j ] and lst [ i ] < lst [ j ] + 1 :
                lst [ i ] = lst [ j ] + 1
    for i in range ( n ) :
        if max < lst [ i ] :
            max = lst [ i ]
    return max


---> console_out:
 
DIDN'T MATCH!! :(
 29%|██▉       | 509/1746 [00:12<00:29, 42.42it/s]

-------------------------------------


---> lineNum: 510
---> probID: atcoder_ABC086_B
---> inputs:
1 21
---> outputs:
Yes

def main ( ) :
    import math
    import math
    a = int ( math . log10 ( b ) ) + 1
    a = int ( a * math . pow ( 10 , k ) + b )
    yono = math . sqrt ( a )
    if yono - math . ceil ( yono ) == 0 :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 511
---> probID: geeksforgeeks_4236_A
---> inputs:

---> outputs:
[-1, 1, 2, 3, 4, -1, 6, -1, -1, 9]


def fix ( A ) :
    import numpy as np
    s = np . zeros ( A . shape [ 0 ] )
    for i in range ( A . shape [ 0 ] ) :
        s [ i ] = i
    for i in range ( A . shape [ 0 ] ) :
        if i in s :
            A [ i ] = i
        else :
            A [ i ] = - 1
    return A


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 512
---> probID: aizu_p02212_A
---> inputs:
2 1 3 4
---> outputs:
0

def main ( ) :
    import sys
    import os
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import sys
    a = int ( sys . stdin . read ( ) )
    b = int ( sys . stdin . read ( ) )
    c = int ( sys . stdin . read ( ) )
    d = int ( sys . stdin . read ( ) )
    sum = a + b + c + d
    s1 = abs ( sum - ( a + b ) * 2 )
    s2 = abs ( sum - ( a + c ) * 2 )
    s3 = abs ( sum - ( a + d ) * 2 )
    min = min ( s1 , min ( s2 , s3 ) )
    sys . stdout . write ( '%d\n' % min )
    os . close ( sys . stdin . fileno ( ) )
    return False
    global log
    log = sys . stdout
    global result
    instance = instance
    global systemin
    systemin = os . popen ( 'systemin - %d - %d - %d - %d - %d' % ( sys . stdin . fileno ( ) , sys . stdin . read ( ) , os . getcwd ( ) , os . getcwd ( ) , os . getcwd ( ) ) )
    instance . main ( )
    instance . systemin . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 513
---> probID: geeksforgeeks_4846_A
---> inputs:

---> outputs:
Original List: 6 9 8 7 4 
New odd List: 3 9 5 7 23 

def GFG ( ) :
    class Node ( object ) :
        data = None
        prev , next = None , None
        def push ( head_ref , new_data ) :
            new_node = Node ( )
            new_node . data = new_data
            new_node . prev = None
            new_node . next = ( head_ref , )
            if ( head_ref ) :
                ( head_ref ) . prev = new_node
            ( head_ref , ) = new_node
            return head_ref
        def make_odd_node ( head_ref , A , n ) :
            ptr = head_ref
            next = None
            i = 0
            while ptr is not None :
                next = ptr . next
                if ptr . data % 2 == 0 :
                    ptr . data = A [ i ]
                    i += 1
                ptr = next
            return head_ref
        def print_list ( head ) :
            while head is not None :
                print ( head . data , end = ' ' )
                head = head . next
    def main ( ) :
        head = None
        Arr = [ 3 , 5 , 23 , 17 , 1 ]
        head = push ( head , 4 )
        head = push ( head , 7 )
        head = push ( head , 8 )
        head = push ( head , 9 )
        head = push ( head , 6 )
        n = len ( Arr )
        print ( 'Original List: ' , end = ' ' )
        print_list ( head )
        print ( )
        head = make_odd_node ( head , Arr , n )
        print ( 'New odd List: ' , end = ' ' )
        print_list ( head )
    return Node ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 514
---> probID: aizu_p00070_A
---> inputs:
3 10
3 1
---> outputs:
8
0

def main ( ) :
    import sys
    f = open ( sys . argv [ 1 ] )
    dp = np . zeros ( ( 11 , 331 ) )
    use = np . zeros ( 10 )
    dfs ( 1 , 0 , dp , use )
    for line in f :
        values = line . split ( )
        n = int ( values [ 0 ] )
        s = int ( values [ 1 ] )
        if n > 10 or s > 330 :
            print ( '0' )
            continue
        print ( dp [ n ] [ s ] )


---> console_out:
 
DIDN'T MATCH!! :(
 29%|██▉       | 514/1746 [00:12<00:28, 42.62it/s]

-------------------------------------


---> lineNum: 515
---> probID: geeksforgeeks_335_A
---> inputs:

---> outputs:
5


def GFG ( n ) :
    import math
    mod = 1000000007
    def fact ( n ) :
        res = 1
        for i in range ( 2 , n + 1 ) :
            res = res * i
        return res
    def nCr ( n , r ) :
        return fact ( n ) / ( fact ( r ) * fact ( n - r ) )
    def powmod ( a , n ) :
        if not n :
            return 1
        pt = powmod ( a , n // 2 )
        pt = ( pt * pt ) % mod
        if n % 2 == 1 :
            return ( pt * a ) % mod
        else :
            return pt
    def CountSubset ( arr , n ) :
        ans = powmod ( 2 , n - 1 )
        arr . sort ( )
        for i in range ( n ) :
            j = i + 1
            while j < n and arr [ j ] == arr [ i ] :
                r = n - 1 - j
                l = i
                ans = ( ans + nCr ( l + r , l ) ) % mod
                j += 1
        return ans
    def main ( ) :
        arr = [ 2 , 3 , 2 ]
        n = len ( arr )
        print ( CountSubset ( arr , n ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 516
---> probID: geeksforgeeks_1206_A
---> inputs:

---> outputs:
5


def GFG ( ) :
    global primeUpto
    global primeUpto
    isPrime = [ 1 ] * MAX
    for i in range ( MAX ) :
        isPrime [ i ] = 1
    isPrime [ 0 ] = isPrime [ 1 ] = 0
    for i in range ( 2 , MAX ) :
        if isPrime [ i ] == 1 :
            for j in range ( i * 2 , MAX , i ) :
                isPrime [ j ] = 0
    for i in range ( 1 , MAX ) :
        primeUpto [ i ] = primeUpto [ i - 1 ]
        if isPrime [ i ] == 1 :
            primeUpto [ i ] += 1
    return int ( isPrime [ 0 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 517
---> probID: geeksforgeeks_3222_A
---> inputs:

---> outputs:
1


def GFG ( n ) :
    i = 2
    while ( i * i ) < n and ( n % i ) > 0 :
        i += 1
    if ( i * i ) > n :
        i = n
    return ( 1 + ( n - i ) / 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 518
---> probID: atcoder_ABC122_C
---> inputs:
8 3
ACACTACG
3 7
2 3
1 8
---> outputs:
2
0
3

def main ( f , out ) :
    import sys
    sys . stdout = f
    Q = sys . maxsize
    S = f . read ( )
    t = [ 0 ] * ( len ( S ) - 1 )
    for i in range ( 0 , len ( t ) - 1 , 1 ) :
        if S [ i ] == 'A' and S [ i + 1 ] == 'C' :
            t [ i + 1 ] = t [ i ] + 1
        else :
            t [ i + 1 ] = t [ i ]
    for i in range ( 0 , Q , 1 ) :
        l = sys . maxsize
        r = sys . maxsize
        out [ i ] = t [ r - 1 ] - t [ l - 1 ]
    return '' . join ( t )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552977897_9723/main.py", line 21
    
                                                                                  ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 519
---> probID: codeforces_1096_A
---> inputs:
3
1 10
3 14
1 10
---> outputs:
['1 7\n3 9\n5 10', '1 2\n3 6\n1 2\n']

def A_find_divisible ( ) :
    import sys
    try :
        f = sys . stdin . read ( )
    except :
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0 ] )
        sys . stderr . write ( 'Error:SPACETOKEN%s\n' % sys . exc_info ( ) [ 0

---> console_out:
 
DIDN'T MATCH!! :(
 30%|██▉       | 519/1746 [00:12<00:28, 42.69it/s]  File "./junk/1692552977921_5905/main.py", line 4
    MODULUS = 10000000000000000L
                               ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 520
---> probID: projecteuler_p249_A
---> inputs:

---> outputs:
9275262564250418

def p249 ( ) :
    print ( eval ( 'p249()' ) )
    LIMIT = 5000
    MODULUS = 10000000000000000L
    def run ( ) :
        is_prime = lib . list_primality ( LIMIT * LIMIT // 2 )
        num_subsets = [ 1 ] * LIMIT // 2
        max_sum = 0
        for i in range ( LIMIT ) :
            if not is_prime [ i ] :
                continue
            max_sum += i
            for j in range ( max_sum , i - 1 , - 1 ) :
                temp = num_subsets [ j ] + num_subsets [ j - i ]
                if temp < MODULUS :
                    num_subsets [ j ] = temp
                else :
                    num_subsets [ j ] = temp - MODULUS
        sum = 0
        for i in range ( len ( num_subsets ) ) :
            if is_prime [ i ] :
                sum = ( sum + num_subsets [ i ] ) % MODULUS
        return str ( sum )
    return run


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 521
---> probID: geeksforgeeks_2286_A
---> inputs:

---> outputs:
1 2 2 4 2 4 4 8 2 4 4 8 4 8 8 16 

def GFG ( row_num ) :
    count = 0
    while row_num > 0 :
        count += row_num & 1
        row_num >>= 1
    return ( 1 << count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 522
---> probID: geeksforgeeks_3425_A
---> inputs:

---> outputs:
Following is minimal number of change for 93 : 50 20 20 2 1 

def GFG ( V ) :
    import sys
    deno = [ 1 , 2 , 5 , 10 , 20 , 50 , 100 , 500 , 1000 ]
    n = len ( deno )
    def findMin ( V ) :
        ans = [ ]
        for i in range ( n - 1 , - 1 , - 1 ) :
            while V >= deno [ i ] :
                V -= deno [ i ]
                ans . append ( deno [ i ] )
        for i in ans :
            sys . stdout . write ( '%d ' % i )
    def main ( ) :
        n = 93
        sys . stdout . write ( 'Following is minimal number of change for %d : ' % n )
        findMin ( n )
    return main


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552977989_9371/main.py", line 10
    def multiples . have_same_digits ( x ) :
                  ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 523
---> probID: projecteuler_p052_A
---> inputs:

---> outputs:
142857

def p052 ( ) :
    import math
    print ( math . pi )
    def run ( ) :
        for i in range ( 1 ) :
            if i > math . pi / 6 :
                raise OverflowError ( 'Overflow' )
            if multiples . have_same_digits ( i ) :
                return str ( i )
    def multiples . have_same_digits ( x ) :
        for i in range ( 2 , 6 + 1 ) :
            if not math . isnan ( x ) or math . isinf ( x ) :
                return False
        return True
    def to_sorted_digits ( x ) :
        x = str ( x )
        x . sort ( )
        return x
    return '' . join ( str ( i ) for i in range ( 2 , 6 + 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 524
---> probID: geeksforgeeks_3822_A
---> inputs:

---> outputs:
15


def count ( arr , n , x ) :
    import math
    if x == 1 :
        ans = int ( math . pow ( 2 , n ) ) - 1
        return ans
    count = 0
    for i in range ( n ) :
        if arr [ i ] % x == 0 :
            count += 1
    ans = int ( math . pow ( 2 , count ) ) - 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 30%|███       | 524/1746 [00:12<00:28, 42.99it/s]

-------------------------------------


---> lineNum: 525
---> probID: geeksforgeeks_676_A
---> inputs:

---> outputs:
6


def find_le ( arr , n ) :
    import sys
    sum = 0
    for i in range ( n ) :
        sum += arr [ i ]
    for i in range ( n ) :
        if arr [ i ] == sum - arr [ i ] :
            return arr [ i ]
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 526
---> probID: geeksforgeeks_2689_A
---> inputs:

---> outputs:
d


def find_extra_charcter ( str_a , str_b ) :
    m1 = [ 0 ] * 256
    for c in str_b :
        m1 [ ord ( c ) ] += 1
    for c in str_a :
        m1 [ ord ( c ) ] -= 1
    for c in m1 :
        if c == 1 :
            return chr ( c )
    return chr ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 527
---> probID: aizu_p00803_A
---> inputs:
100
64
50
20
151200
0
---> outputs:
99
64
47
20
151200

def main ( ) :
    import sys
    import os
    import subprocess
    import math
    import numpy
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random . seed as seed
    seed = seed . random . seed ( )
    def do_random ( ) :
        seed = seed + random . random ( )
        return seed
    a = [ ]
    b = [ ]
    def do_random ( ) :
        for i in range ( 101 ) :
            a . append ( i * i * i )
        for i in range ( 101 ) :
            b . append ( i * ( i + 1 ) * ( i + 2 ) / 6 )
    while True :
        n = os . urandom ( 1 )
        if n == 0 :
            break
        num = 0
        for i in range ( 101 ) :
            for j in range ( 101 ) :
                if a [ i ] + b [ j ] <= n :
                    num = max ( num , a [ i ] + b [ j ] )
        print ( num )
    return a


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 528
---> probID: aizu_p00875_A
---> inputs:
2
a bb
b aa
a
bbbbbbbb
1
a aa
a
aaaaa
3
ab aab
abc aadc
ad dee
abc
deeeeeeeec
10
a abc
b bai
c acf
d bed
e abh
f fag
g abe
h bag
i aaj
j bbb
a
abacfaabe
0
---> outputs:
3
-1
7
4

def main ( ) :
    import re
    import sys
    import os
    import subprocess
    import sys
    try :
        sys . stdin . write ( '\n' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
        sys . stdin . write ( '' )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 529
---> probID: codeforces_296_A
---> inputs:
1
1
---> outputs:
YES

def main ( HastaLaVistaLa ) :
    import sys
    import math
    import abs
    class Practice ( sys . stdin ) :
        def __init__ ( self ) :
            sys . stdin . close ( )
            sys . stdout = sys . stderr
            self . s = [ ]
            self . out = [ ]
        def main ( self ) :
            t = 1
            for tests in range ( t ) :
                self . solve ( )
            print ( '' . join ( self . s ) )
    def solve ( ) :
        n = scn . __next__ ( )
        a = [ ]
        for i in range ( n ) :
            a . append ( scn . __next__ ( ) )
        freq = [ 0 ] * 1010
        can = ( n + 1 )
        for i in a :
            freq [ i ] += 1
            if freq [ i ] > can / 2 :
                print ( 'NO' )
                return
        print ( 'YES' )
    return Practice


---> console_out:
 
DIDN'T MATCH!! :(
 30%|███       | 529/1746 [00:12<00:28, 42.90it/s]

-------------------------------------


---> lineNum: 530
---> probID: geeksforgeeks_5084_A
---> inputs:

---> outputs:
17


def max_sum_pair ( arr1 , n1 , arr2 , n2 ) :
    max1 = int ( 0 )
    max2 = int ( 0 )
    for i in range ( n1 ) :
        if arr1 [ i ] > max1 :
            max1 = arr1 [ i ]
    for i in range ( n2 ) :
        if arr2 [ i ] > max2 :
            max2 = arr2 [ i ]
    return max1 + max2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 531
---> probID: geeksforgeeks_3166_A
---> inputs:

---> outputs:
71391


def operations ( op , n , k ) :
    i , count = 0 , 0
    n_val = 0
    min = sys . maxsize
    for i in range ( n ) :
        n_val += op [ i ]
        min = min ( min , n_val )
        if ( k + n_val ) <= 0 :
            return ( i + 1 )
    if n_val >= 0 :
        return - 1
    times = ( k - abs ( min ) ) / abs ( n_val )
    k = ( k - ( times * abs ( n_val ) ) )
    count = ( times * n )
    while k > 0 :
        for i in range ( n ) :
            k = k + op [ i ]
            count += 1
            if k <= 0 :
                break
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 532
---> probID: geeksforgeeks_4717_A
---> inputs:

---> outputs:
9 100 8 35 

def GFG ( x ) :
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    math
    import math
    import math
    import math
    math
    import math
    import math
    import math
    math
    import math
    import math
    math
    import math
    math
    import math


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 533
---> probID: aizu_p00277_A
---> inputs:
3 4 600
3 100 5
1 200 10
2 400 20
3 500 20
---> outputs:
1

def main ( ) :
    import sys
    from io import open
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    import BytesIO
    from io import BytesIO
    from io import BytesIO


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 534
---> probID: geeksforgeeks_1722_A
---> inputs:

---> outputs:
3th Centered cube number: 91
10th Centered cube number: 2331


def centered_cube ( n ) :
    import sys
    n = 3
    print ( "%dth Centered" % n , end = " cube number: " )
    print ( centered_cube ( n ) )
    n = 10
    print ( "%dth Centered" % n , end = " cube number: " )
    print ( centered_cube ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 31%|███       | 534/1746 [00:12<00:28, 42.87it/s]

-------------------------------------


---> lineNum: 535
---> probID: codeforces_1369_B
---> inputs:
5
10
0001111111
4
0101
8
11001101
10
1110000000
1
1
---> outputs:
0001111111
001
01
0
1

def pre132 ( args ) :
    import sys
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import math
    from string import encode
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import string
    import math
    from math import quote
    import string
    import string
    import string
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import sys
    import string
    import string
    import sys
    import string
    import sys
    import string
    import string
    import sys
    import string
    import sys
    import string
    import string
    import sys
    import string
    import sys
    import string
    import string
    import string
    import sys
    if args [ 0 ] :
        return string
    elif args [ 0 ] :
        return string
    else :
        return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 536
---> probID: geeksforgeeks_2638_A
---> inputs:

---> outputs:
32


def nth_term ( N ) :
    import math
    nth , i = 0 , i
    for i in range ( N , 0 , - 1 ) :
        nth += math . pow ( i , i )
    return nth


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 537
---> probID: geeksforgeeks_3160_A
---> inputs:

---> outputs:
True
False
True
False


def test ( ) :
    print ( "True" if is_power ( 10 , 1 ) else "False" )
    print ( "True" if is_power ( 1 , 20 ) else "False" )
    print ( "True" if is_power ( 2 , 128 ) else "False" )
    print ( "True" if is_power ( 2 , 30 ) else "False" )
    def is_power ( x , y ) :
        if x == 1 :
            return ( y == 1 )
        pow = 1
        while pow < y :
            pow = pow * x
        return ( pow == y )
    return "" if is_power ( 10 , 1 ) else ""


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 538
---> probID: geeksforgeeks_2048_A
---> inputs:

---> outputs:
1
0
1
0


def test ( ) :
    print ( 1 if is_power ( 10 , 1 ) else 0 )
    print ( 1 if is_power ( 1 , 20 ) else 0 )
    print ( 1 if is_power ( 2 , 128 ) else 0 )
    print ( 1 if is_power ( 2 , 30 ) else 0 )
    def is_power ( x , y ) :
        if x == 1 :
            return ( y == 1 )
        pow = 1
        while pow < y :
            pow = pow * x
        return ( pow == y )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 539
---> probID: geeksforgeeks_692_A
---> inputs:

---> outputs:
200


def minimum_value ( arr , n , k ) :
    arr . sort ( )
    answer = 0
    for i in range ( k ) :
        answer += arr [ i ] ** 2
    return answer * ( 2 * k - 2 )


---> console_out:
 
DIDN'T MATCH!! :(
 31%|███       | 539/1746 [00:12<00:28, 43.01it/s]

-------------------------------------


---> lineNum: 540
---> probID: aizu_p00303_A
---> inputs:
4
1 lock 1
2 lock 2
1 wait 2
2 wait 1
---> outputs:
1

def main ( ) :
    import string
    try :
        N = len ( sys . argv )
    except :
        print ( "No input found for %s" % sys . argv [ 0 ] )
        return 1
    vs = set ( )
    indeg = { }
    outdeg = { }
    for i in range ( N ) :
        u , d , rel = 'u' + str ( i ) . split ( ' ' ) [ 0 ] . split ( ' ' ) [ 0 ]
        d = 'd' + str ( i ) . split ( ' ' ) [ 1 ] . split ( ' ' ) [ 2 ]
        vs . add ( u )
        vs . add ( d )
        indeg . setdefault ( u , set ( ) )
        indeg . setdefault ( d , set ( ) )
        outdeg . setdefault ( u , set ( ) )
        outdeg . setdefault ( d , set ( ) )
        if rel == 'lock' :
            indeg [ u ] . add ( d )
            outdeg [ d ] . add ( u )
        else :
            indeg [ d ] . add ( u )
            outdeg [ u ] . add ( d )
    que = [ ]
    for v in indeg :
        if len ( indeg [ v ] ) == 0 :
            que . append ( v )
    while not que :
        u = que . pop ( )
        for v in outdeg [ u ] :
            indeg [ v ] . remove ( u )
            if len ( indeg [ v ] ) == 0 :
                que . append ( v )
        vs . discard ( u )
    print ( 0 if len ( vs ) == 0 else 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 541
---> probID: geeksforgeeks_3591_A
---> inputs:

---> outputs:
32


def GFG ( N ) :
    E = ( N * ( N - 1 ) ) // 2
    if N == 1 :
        return 0
    return int ( math . pow ( 2 , E - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 542
---> probID: geeksforgeeks_1082_A
---> inputs:

---> outputs:
2


def GFG ( a , b ) :
    if not a or not b :
        return 0
    if a == b :
        return a
    if a > b :
        return math . gcd ( a - b , b )
    return math . gcd ( a , b - a )
def find_LCM ( arr , n ) :
    lcm = arr [ 0 ]
    for i in range ( 1 , n ) :
        lcm = ( lcm * arr [ i ] ) / math . gcd ( arr [ i ] , lcm )
    return lcm
def count_numbers ( arr , n , l , r ) :
    lcm = find_LCM ( arr , n )
    count = ( r / lcm ) - ( ( l - 1 ) / lcm )
    return count
def main ( args ) :
    arr = [ 1 , 4 , 2 ]
    n , l , r = 1 , 10
    print ( count_numbers ( arr , n , l , r ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 543
---> probID: aizu_p00507_A
---> inputs:
3
2
7
5
---> outputs:
52

def main ( ) :
    import sys
    import string
    import math
    import numpy . fft as fft
    import numpy . random
    import os
    import sys
    import subprocess
    import sys
    try :
        os . chdir ( sys . argv [ 1 ] )
        n = int ( sys . stdin . read ( ) )
        a = min ( n , 4 )
        num = [ fft ( i ) for i in range ( n ) ]
        num . sort ( )
        ans = [ ]
        for i in range ( a ) :
            for j in range ( a ) :
                if i == j :
                    continue
                ans . append ( int ( str ( num [ i ] ) + str ( num [ j ] ) ) )
        ans . sort ( )
        print ( ans [ 2 ] )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 544
---> probID: codeforces_1203_B
---> inputs:
5
1
1 1 10 10
2
10 5 2 10 1 1 2 5
2
10 5 1 10 5 1 1 1
2
1 1 1 1 1 1 1 1
1
10000 10000 10000 10000
---> outputs:
YES
YES
NO
YES
YES

def main ( Z ) :
    f = open ( Z )
    op = [ ]
    stz = [ ]
    T = int ( f . readline ( ) )
    while T > 0 :
        T -= 1
        n = int ( f . readline ( ) )
        stz = list ( f . readline ( ) . split ( ) )
        a = [ ]
        for i in range ( n << 2 ) :
            a . append ( int ( stz [ i ] ) )
        yes = True
        a . sort ( )
        area = a [ 0 ] * a [ - 1 ]
        for i in range ( n ) :
            lf , rg = i * 2 , 4 * n - ( i * 2 ) - 1
            if ( a [ lf ] != a [ lf + 1 ] ) or ( a [ rg ] != a [ rg - 1 ] ) or ( a [ lf ] * a [ rg ] != area ) :
                yes = False
                break
        if yes :
            op . append ( 'YES\n' )
        else :
            op . append ( 'NO\n' )
    print ( op )


---> console_out:
 
DIDN'T MATCH!! :(
 31%|███       | 544/1746 [00:12<00:28, 42.80it/s]

-------------------------------------


---> lineNum: 545
---> probID: geeksforgeeks_3391_A
---> inputs:

---> outputs:
3


def MinDeletion ( a , n ) :
    import math
    mp = { }
    for i in range ( n ) :
        if a [ i ] in mp :
            mp [ a [ i ] ] = mp [ a [ i ] ] + 1
        else :
            mp [ a [ i ] ] = 1
    ans = 0
    for i , frequency in mp . items ( ) :
        if x <= frequency :
            ans += ( frequency - x )
        else :
            ans += frequency
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552978525_7543/main.py", line 4
    del = 3
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 546
---> probID: geeksforgeeks_1197_A
---> inputs:

---> outputs:
num_after_deleting_from_starting 124
num_after_deleting_from_ending 134


def delete_n ( args ) :
    inp = 1234
    inp = str ( inp )
    del = 3
    print ( "num_after_deleting_from_starting %d" % ( from_start ( inp , del ) ) )
    print ( "num_after_deleting_from_ending %d" % ( from_end ( inp , del ) ) )
    def from_start ( inp , del ) :
        try :
            inp1 = inp [ : del - 1 ]
            inp2 = inp [ del : len ( inp ) ]
            return inp1 + inp2
        except :
            return "Check Input"
    def from_end ( inp , del ) :
        try :
            inp1 = inp [ : - del ]
            inp2 = inp [ - del + 1 : len ( inp ) ]
            return inp1 + inp2
        except :
            return "Check Input"
    return ""


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 547
---> probID: geeksforgeeks_2384_A
---> inputs:

---> outputs:
199


def nondecdigits ( n ) :
    import sys
    x = 0
    for x in range ( n , 1 , - 1 ) :
        no = x
        prev_dig = 11
        flag = True
        while no != 0 :
            if prev_dig < no % 10 :
                flag = False
                break
            prev_dig = no % 10
            no //= 10
        if flag == True :
            break
    return x


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 548
---> probID: codeforces_459_A
---> inputs:
0 0 0 1
---> outputs:
1 0 1 1

def main ( ) :
    import sys
    import os
    import subprocess
    import math
    import math
    import math
    import math
    import sys
    x1 , y1 , x2 , y2 = sys . stdin . read ( ) , sys . stdout . read ( ) , sys . stderr . read ( )
    if x1 == x2 :
        dif = abs ( y1 - y2 )
        print ( ( x1 + dif ) , y1 , ( x1 + dif ) , y2 )
    elif y1 == y2 :
        dif = abs ( x1 - x2 )
        print ( ( x1 ) , ( y1 + dif ) , ( x2 ) , ( y2 + dif ) )
    elif abs ( x1 - x2 ) == abs ( y1 - y2 ) :
        print ( x1 , y2 , ( x2 ) , y1 )
    else :
        print ( - 1 )
    sys . stdout . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 549
---> probID: codeforces_79_A
---> inputs:
2 2
---> outputs:
Ciel

def can_take ( x_needed , x_available , y_needed , y_available ) :
    import sys
    if x_needed > x_available :
        return False
    if y_needed > y_available :
        return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(
 31%|███▏      | 549/1746 [00:12<00:27, 42.93it/s]

-------------------------------------


---> lineNum: 550
---> probID: codeforces_445_A
---> inputs:
1 1
.
---> outputs:
B

def DZYLovesChessboard ( ) :
    import sys
    from cStringIO import StringIO
    f = StringIO ( )
    n = len ( f )
    m = len ( f )
    arr = [ ]
    for i in range ( n ) :
        arr . append ( f . read ( ) . decode ( 'utf-8' ) )
    for i in range ( n ) :
        w = i % 2 == 0
        for j in range ( m ) :
            w = not w
            if arr [ i ] [ j ] == '.' :
                f . write ( 'W' if w else 'B' )
            else :
                f . write ( '-' )
        f . write ( '\n' )
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 551
---> probID: codeforces_327_A
---> inputs:
5
1 0 0 1 0
---> outputs:
4

def main ( ) :
    import sys
    if sys . stdin . isatty ( ) :
        n = len ( sys . stdin . read ( ) )
        arr = [ ]
        for i in range ( n ) :
            arr . append ( sys . stdin . read ( ) )
        max = sys . maxint
        for i in range ( n ) :
            for j in range ( i , n ) :
                x = 0
                brr = [ ]
                for k in arr :
                    brr . append ( k )
                    x += 1
                for k in range ( i , j + 1 ) :
                    if brr [ k ] == 0 :
                        brr [ k ] = 1
                    else :
                        brr [ k ] = 0
            count = checKNo ( brr )
            if count > max :
                max = count
        if n == 1 :
            if arr [ 0 ] == 1 :
                print ( 0 )
            else :
                print ( 1 )
        else :
            print ( max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 552
---> probID: geeksforgeeks_417_A
---> inputs:

---> outputs:
5


def count_distict_substring ( arr , n ) :
    import collections
    vis = { }
    def get_index ( key ) :
        if key not in vis :
            return 0
        return vis [ key ]
    k = len ( vis )
    vis = { }
    ans , right , window = 0 , 0 , 0
    for left in range ( n ) :
        while right < n and window < k :
            vis [ right ] = vis [ right ] + 1
            if vis [ right ] == 1 :
                window += 1
            right += 1
        if window == k :
            ans += ( n - right + 1 )
        vis [ left ] = vis [ left ] - 1
        if vis [ left ] == 0 :
            window -= 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552978688_8068/main.py", line 65
    codecs import codecs
           ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 553
---> probID: codeforces_608_A
---> inputs:
3 7
2 1
3 8
5 2
---> outputs:
11

def main ( ) :
    import sys
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs
    from codecs import codecs , codecs
    from codecs import codecs
    from codecs import codecs , codecs
    from codecs import codecs , codecs
    from codecs import codecs , codecs
    from codecs import codecs , codecs
    from codecs import codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs
    codecs import codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs , codecs
    from codecs import codecs , codecs
    codecs import codecs
    codecs = codecs
    try :
        codecs = codecs ( )
    except Exception :
        pass
    else :
        raise
    return codecs , codecs , codecs


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 554
---> probID: geeksforgeeks_1395_A
---> inputs:

---> outputs:
4


def is_prime ( n ) :
    import math
    if n <= 1 :
        return False
    if n <= 3 :
        return True
    if n % 2 == 0 or n % 3 == 0 :
        return False
    for i in range ( 5 , n * n + 1 , 6 ) :
        if n % i == 0 or n % ( i + 2 ) == 0 :
            return False
    return True
def prime_bits_in_range ( l , r ) :
    global tot_bit , count
    count = 0
    for i in range ( l , r + 1 ) :
        tot_bit = math . bitcount ( i )
        if math . is_prime ( tot_bit ) :
            count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 32%|███▏      | 554/1746 [00:13<00:27, 42.83it/s]

-------------------------------------


---> lineNum: 555
---> probID: geeksforgeeks_3856_A
---> inputs:

---> outputs:
1


def count_set_bits ( n ) :
    count = 0
    while n > 0 :
        n &= ( n - 1 )
        count += 1
    return count
    def pairs ( arr , n , k ) :
        count = 0
        for i in range ( n ) :
            for j in range ( i + 1 , n ) :
                sum = count_set_bits ( arr [ i ] ) + count_set_bits ( arr [ j ] )
                if sum == k :
                    count += 1
        return count
    def main ( args ) :
        arr = [ 1 , 2 , 3 , 4 , 5 ]
        n = len ( arr )
        k = 4
        print ( pairs ( arr , n , k ) )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552978759_5857/main.py", line 10
    del sys . stdin . read ( )
        ^
SyntaxError: cannot delete function call


-------------------------------------


---> lineNum: 556
---> probID: geeksforgeeks_3130_A
---> inputs:

---> outputs:
50 40 30 20 10 60 70 80 90 100 

def reverse_queue_first_kelements ( k ) :
    import sys
    if not sys . stdin . isatty ( ) or k > len ( sys . stdin . isatty ( ) ) :
        return
    if k <= 0 :
        return
    stack = [ ]
    for i in range ( k ) :
        stack . append ( sys . stdin . read ( ) )
        del sys . stdin . read ( )
    while not sys . stdin . isatty ( ) :
        sys . stdin . write ( '%d' % i )
        del sys . stdin . read ( )
    for i in range ( len ( sys . stdin ) - k ) :
        sys . stdin . write ( '%d' % i )
        del sys . stdin . read ( )
def Print ( ) :
    while not sys . stdin . isatty ( ) :
        sys . stdout . write ( '%d' % i )
        del sys . stdin . read ( )
def main ( args ) :
    queue = [ 10 , 20 , 30 , 40 , 50 , 60 , 70 , 80 , 90 , 100 ]
    k = 5
    reverse_queue_first_kelements ( k )
    Print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 557
---> probID: codeforces_1672_A
---> inputs:
2
4
2 4 2 1
1
1
---> outputs:
errorgorn
maomao90

def Ideone ( ) :
    import sys
    import re
    import sys
    n = int ( sys . stdin . readline ( ) )
    for i in range ( n ) :
        sum = - int ( sys . stdin . readline ( ) )
        for x in sys . stdin . readline ( ) . strip ( ) . split ( ) :
            sum += int ( x )
        if sum % 2 == 0 :
            print ( 'maomao90' )
        else :
            print ( 'errorgorn' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 558
---> probID: geeksforgeeks_4727_A
---> inputs:

---> outputs:
15


def GFG ( k ) :
    if k == 1 :
        return 2
    if ( ( k + 1 ) & k ) == 0 :
        return k // 2
    return 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 559
---> probID: leetcode_367_A
---> inputs:

---> outputs:
true

def is_perfect_square ( num ) :
    low = 1
    high = num
    while low <= high :
        mid = ( low + high ) >> 1
        if mid * mid == num :
            return True
        elif mid * mid < num :
            low = int ( mid ) + 1
        else :
            high = int ( mid ) - 1
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 32%|███▏      | 559/1746 [00:13<00:27, 42.68it/s]

-------------------------------------


---> lineNum: 560
---> probID: atcoder_ABC047_A
---> inputs:
10 30 20
---> outputs:
Yes

def main ( ) :
    import os
    import sys
    import re
    import math
    try :
        a = int ( sys . stdin . read ( ) )
        b = int ( sys . stdin . read ( ) )
        c = int ( sys . stdin . read ( ) )
        result = "No"
        if max ( a , max ( b , c ) ) * 2 == a + b + c :
            result = "Yes"
        print ( result )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 561
---> probID: codeforces_134_A
---> inputs:
5
1 2 3 4 5
---> outputs:
1
3

def main ( ) :
    import sys
    import math
    try :
        n1 = int ( sys . stdin . readline ( ) )
    except ValueError :
        n1 = 0
    arr = [ ]
    sum = 0
    for i in range ( n1 ) :
        n2 = int ( sys . stdin . readline ( ) )
        arr . append ( n2 )
        sum += float ( arr [ i ] )
    summ = sum
    summ //= float ( n1 )
    nos = 0
    for i in range ( len ( arr ) ) :
        if arr [ i ] == summ :
            nos += 1
    print ( nos )
    for i in range ( n1 ) :
        if float ( arr [ i ] ) == summ :
            print ( ( i + 1 ) , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 562
---> probID: aizu_p02264_A
---> inputs:
5 100
p1 150
p2 80
p3 200
p4 350
p5 20
---> outputs:
p2 180
p5 400
p1 450
p3 550
p4 800

def main ( ) :
    import string
    try :
        size = int ( sys . stdin . readline ( ) )
        quantum = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    sum = 0
    queue = Queue ( )
    for i in range ( size ) :
        name = raw_input ( )
        time = int ( raw_input ( ) )
        if time <= quantum :
            sum += time
            print ( name , sum )
        else :
            sum += quantum
            queue . enqueue ( ( name , time - quantum ) )
    while not queue . empty ( ) :
        process = queue . dequeue ( )
        if process . quantum <= quantum :
            sum += process . quantum
            print ( process . name , sum )
        else :
            sum += quantum
            queue . enqueue ( ( process . name , process . quantum - quantum ) )
    class Queue :
        SIZE = 100000
    x = [ ]
    head = 0
    tail = 0
    def dequeue ( ) :
        if not iterable ( x ) :
            raise Exception ( 'You dequeued from empty ' 'queue.' )
        value = x [ tail ]
        tail += 1
        if tail == SIZE :
            tail -= SIZE
        return value
    def enqueue ( process ) :
        if is_full ( ) :
            raise Exception ( 'You enqueued to full queue.' )
        x . append ( process )
        head += 1
        if head == SIZE :
            head -= SIZE
    def is_full ( ) :
        return head + 1 == ( tail % SIZE )
    def is_empty ( ) :
        return head == tail
    class Process ( name , quantum ) :
        def __init__ ( self , name ) :
            self . name = name
            self . quantum = quantum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 563
---> probID: geeksforgeeks_3870_A
---> inputs:

---> outputs:
3


def find_element ( arr , ranges , rotations , index ) :
    for i in range ( rotations - 1 , - 1 , - 1 ) :
        left = ranges [ i ] [ 0 ]
        right = ranges [ i ] [ 1 ]
        if left <= index and right >= index :
            if index == left :
                index = right
            else :
                index -= 1
    return arr [ index ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 564
---> probID: geeksforgeeks_924_A
---> inputs:

---> outputs:
Yes


def GFG ( ) :
    MAXN = 1000001
    spf = [ 0 ] * MAXN
    hash1 = { }
    def sieve ( ) :
        spf [ 1 ] = 1
        for i in range ( 2 , MAXN ) :
            spf [ i ] = i
        for i in range ( 4 , MAXN , 2 ) :
            spf [ i ] = 2
        for i in range ( 3 , i * MAXN ) :
            if spf [ i ] == i :
                for j in range ( i * i , MAXN , i ) :
                    if spf [ j ] == j :
                        spf [ j ] = i
    def getFactorization ( x ) :
        while x != 1 :
            temp = spf [ x ]
            if x % temp == 0 :
                hash1 [ spf [ x ] ] += 1
                x = x // spf [ x ]
            while x % temp == 0 :
                x = x // temp
    def check ( x ) :
        while x != 1 :
            temp = spf [ x ]
            if x % temp == 0 and hash1 [ temp ] > 1 :
                return False
            while x % temp == 0 :
                x = x // temp
        return True
    def hasValidNum ( arr , n ) :
        sieve ( )
        for i in range ( n ) :
            getFactorization ( arr [ i ] )
        for i in range ( n ) :
            if check ( arr [ i ] ) :
                return True
        return False
    def main ( ) :
        arr = [ 2 , 8 , 4 , 10 , 6 , 7 ]
        n = len ( arr )
        if hasValidNum ( arr , n ) :
            print ( "Yes" )
        else :
            print ( "No" )
    return True


---> console_out:
 
DIDN'T MATCH!! :(
 32%|███▏      | 564/1746 [00:13<00:28, 42.04it/s]

-------------------------------------


---> lineNum: 565
---> probID: geeksforgeeks_672_A
---> inputs:

---> outputs:
Yes


def is_exists ( a , n ) :
    import re
    freq = { }
    sum = 0
    for i in range ( n ) :
        freq [ a [ i ] ] = 0 if freq . get ( a [ i ] ) is None else freq [ a [ i ] ] + 1
        sum += a [ i ]
    if sum % 2 == 0 :
        if freq [ sum // 2 ] is not None :
            return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 566
---> probID: geeksforgeeks_5026_A
---> inputs:

---> outputs:
Area of Kite = 12.0


def area_of_kite ( d1 , d2 ) :
    area = ( d1 * d2 ) / 2
    return area


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552979023_3642/main.py", line 13
    print

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 567
---> probID: codeforces_475_A
---> inputs:
9
---> outputs:
+------------------------+
|O.O.O.#.#.#.#.#.#.#.#.|D|)
|O.O.O.#.#.#.#.#.#.#.#.|.|
|O.......................|
|O.O.#.#.#.#.#.#.#.#.#.|.|)
+------------------------+

def main ( ) :
    import sys
    try :
        n = len ( sys . argv )
        a = np . zeros ( ( 4 , 11 ) )
        for i , j in enumerate ( range ( n ) ) :
            n -= 1
            j += i // 3
            i , j = ( i + 1 ) % 4 , ( i + 1 ) % 4
            if i == 2 and j != 0 :
                i += 1
            a [ i ] [ j ] = True
        print

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 568
---> probID: codeforces_55_A
---> inputs:
1
---> outputs:
YES

def code_forces ( args ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        if ( n & ( n - 1 ) ) == 0 :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 569
---> probID: geeksforgeeks_2229_A
---> inputs:

---> outputs:
No


def product_equal ( n ) :
    if n < 10 :
        return False
    prod_odd , prod_even = 1 , 1
    while n > 0 :
        digit = n % 10
        prod_odd *= digit
        n //= 10
        if not n :
            break
        digit = n % 10
        prod_even *= digit
        n //= 10
    if prod_even == prod_odd :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 33%|███▎      | 569/1746 [00:13<00:27, 42.19it/s]

-------------------------------------


---> lineNum: 570
---> probID: aizu_p01620_A
---> inputs:
2
1 2
bdd
3
3 2 1
DDDA
5
3 1 4 5 3
dcdkIlkP
0
---> outputs:
abc
ABCx
abZfFijL

def main ( args ) :
    import sys
    f = sys . stdin
    while True :
        n = int ( f . readline ( ) )
        if n == 0 :
            break
        key = [ None ] * n
        data = f . readline ( ) . split ( )
        for i in range ( n ) :
            key [ i ] = int ( data [ i ] )
        c = list ( f )
        key_count = 0
        for c in c :
            for i in range ( key [ key_count ] ) :
                if c [ i ] == 97 :
                    c [ i ] = 90
                elif c [ i ] == 65 :
                    c [ i ] = 122
                else :
                    c [ i ] -= 1
            if key_count == len ( key ) - 1 :
                key_count = 0
            else :
                key_count += 1
        for c in c :
            sys . stdout . write ( c [ i ] )
        sys . stdout . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 571
---> probID: geeksforgeeks_1107_A
---> inputs:

---> outputs:
odd


def check_even_odd ( arr , n , l , r ) :
    if arr [ r ] == 1 :
        print ( "odd" )
    else :
        print ( "even" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 572
---> probID: aizu_p02394_A
---> inputs:
5 4 2 2 1
---> outputs:
Yes

def main ( ) :
    import sys
    try :
        data = sys . stdin . read ( )
    except :
        print ( "??¨????" )
        return
    split = data . split ( " " , 1 )
    w = int ( split [ 0 ] )
    h = int ( split [ 1 ] )
    x = int ( split [ 2 ] )
    y = int ( split [ 3 ] )
    r = int ( split [ 4 ] )
    if ( x - r >= 0 ) and ( x + r <= w ) and ( y - r >= 0 ) and ( y + r <= h ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 573
---> probID: geeksforgeeks_4264_A
---> inputs:

---> outputs:
5


def GFG ( n ) :
    if n <= 1 :
        return False
    for i in range ( 2 , n ) :
        if n % i == 0 :
            return False
    return True
def find_prime ( n ) :
    num = n + 1
    while num > 0 :
        if is_prime ( num ) :
            return num
        num = num + 1
    return 0
def min_number ( arr , n ) :
    sum = 0
    for i in range ( n ) :
        sum += arr [ i ]
    if is_prime ( sum ) :
        return 0
    num = find_prime ( sum )
    return num - sum
def main ( ) :
    arr = [ 2 , 4 , 6 , 8 , 12 ]
    n = len ( arr )
    print ( min_number ( arr , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 574
---> probID: geeksforgeeks_2808_A
---> inputs:

---> outputs:
24


def composite_product ( arr , n ) :
    max_val = np . max ( arr )
    prime = np . zeros ( max_val + 1 )
    prime [ 0 ] = True
    prime [ 1 ] = True
    for p in range ( 2 , max_val + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , max_val + 1 , p ) :
                prime [ i ] = False
    product = 1
    for i in range ( n ) :
        if not prime [ arr [ i ] ] :
            product *= arr [ i ]
    return product


---> console_out:
 
DIDN'T MATCH!! :(
 33%|███▎      | 574/1746 [00:13<00:27, 42.20it/s]

-------------------------------------


---> lineNum: 575
---> probID: aizu_p02397_A
---> inputs:
3 2
2 2
5 3
0 0
---> outputs:
2 3
2 2
3 5

def main ( ) :
    import sys
    intx = None
    inty = None
    intwork = None
    try :
        f = open ( sys . argv [ 1 ] )
    except IOError :
        print ( sys . exc_info ( ) [ 0 ] )
    else :
        while True :
            strLine = f . readline ( )
            if strLine is not None :
                strNumList = strLine . split ( )
                intx = int ( strNumList [ 0 ] )
                inty = int ( strNumList [ 1 ] )
                if intx is not None or inty is not None :
                    if intx > inty :
                        intwork = intx
                        intx = inty
                        inty = intwork
                    print ( intx , inty )
                else :
                    break
            else :
                break


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 576
---> probID: codeforces_1281_A
---> inputs:
8
kamusta_po
genki_desu
ohayou_gozaimasu
annyeong_hashimnida
hajime_no_ippo
bensamu_no_sentou_houhou_ga_okama_kenpo
ang_halaman_doon_ay_sarisari_singkamasu
si_roy_mustang_ay_namamasu
---> outputs:
FILIPINO
JAPANESE
JAPANESE
KOREAN
FILIPINO
FILIPINO
JAPANESE
JAPANESE

def main ( ) :
    import string
    strarr = string . ascii_lowercase + string . ascii_uppercase + string . ascii_lowercase + string . ascii_uppercase + string . ascii_lowercase + string . ascii_uppercase + string . ascii_lowercase + string . ascii_uppercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii_lowercase + string . ascii + string . ascii

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 577
---> probID: geeksforgeeks_4384_A
---> inputs:

---> outputs:
18
40
22


def find_sum ( arr , n , left , right ) :
    k = right - left
    d = arr [ 1 ] - arr [ 0 ]
    ans = arr [ left - 1 ] * ( k + 1 )
    ans = ans + ( d * ( k * ( k + 1 ) ) ) / 2
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 578
---> probID: geeksforgeeks_3185_A
---> inputs:

---> outputs:
3


def max_result ( n , a , b , c ) :
    import math
    maxVal = 0
    for i in range ( 0 , n + 1 , a ) :
        for j in range ( 0 , n - i + 1 , b ) :
            z = ( n - ( i + j ) ) / c
            if math . floor ( z ) == math . ceil ( z ) :
                x = i // a
                y = j // b
                maxVal = max ( maxVal , x + y + int ( z ) )
    return maxVal


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 579
---> probID: aizu_p00001_A
---> inputs:
1819
2003
876
2840
1723
1673
3776
2848
1592
922
---> outputs:
3776
2848
2840

def sort ( a ) :
    import sys
    for i in range ( len ( a ) - 1 ) :
        for j in range ( len ( a ) - 1 , i , - 1 ) :
            if a [ j ] > a [ j - 1 ] :
                t = a [ j ]
                a [ j ] = a [ j - 1 ]
                a [ j - 1 ] = t
    def print_hill ( a ) :
        for i in range ( 3 ) :
            print ( a [ i ] )
    def main ( args ) :
        hills = [ ]
        inp = sys . stdin . readline ( )
        bres = inp . strip ( )
        n = 0
        for i in range ( 10 ) :
            num = bres [ i ]
            n = int ( num )
            hills . append ( n )
        sort ( hills )
        print_hill ( hills )
    return main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 33%|███▎      | 579/1746 [00:13<00:27, 42.00it/s]

-------------------------------------


---> lineNum: 580
---> probID: geeksforgeeks_4099_A
---> inputs:

---> outputs:
4


def fact ( n ) :
    import re
    ans = 1
    for i in range ( 1 , n + 1 ) :
        ans = ans * i
    return ( ans )
    def number_of_possible_pallindrome ( data , n ) :
        mp = { }
        for c in data :
            mp [ c ] = 1 if mp . get ( c ) is None else mp [ c ] + 1
        k = 0
        num = 0
        den = 1
        fi = 0
        for it , d in mp . items ( ) :
            if d % 2 == 0 :
                fi = d // 2
            else :
                fi = ( d - 1 ) // 2
                k += 1
            num = num + fi
            den = den * math . factorial ( fi )
        if num != 0 :
            num = math . factorial ( num )
        ans = num // den
        if k != 0 :
            ans = ans * k
        return ( ans )
    def main ( ) :
        data = 'ababab'
        n = len ( data )
        print ( number_of_possible_pallindrome ( data , n ) )
    return ( '' . join ( str ( n ) ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 581
---> probID: codeforces_1145_A
---> inputs:
4
1 2 2 4
---> outputs:
4

def main ( args ) :
    import string
    try :
        size = int ( sys . stdin . readline ( ) )
        arr = [ ]
        for i in range ( 1 , size + 1 ) :
            arr . append ( int ( sys . stdin . readline ( ) ) )
        print ( split ( arr , 1 , size ) )
    except ValueError :
        return 1
    def split ( arr , s , m ) :
        if s == m :
            return 1
        half = ( m - s + 1 ) >> 1
        mid = half + s
        ans1 = split ( arr , s , mid - 1 )
        ans2 = split ( arr , mid , m )
        if arr [ mid ] >= arr [ mid - 1 ] and ans1 == ans2 and ans1 == half :
            return ans1 + ans2
        elif ans1 > ans2 :
            return ans1
        else :
            return ans2
    return 0


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552979380_3560/main.py", line 18
    subprocess . call ( [ '/usr/bin/sh' , '-c' , '-u' , '-u' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , ' -
                                                                                                                                                                                                                                                                                                                                                                                         ^
SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 582
---> probID: geeksforgeeks_4516_A
---> inputs:

---> outputs:
100


def toggle_last_mb_of ( n , m ) :
    import sys
    import os
    import sys
    import subprocess
    import subprocess
    import subprocess
    import sys
    import subprocess
    import subprocess
    import sys
    try :
        import subprocess
    except :
        pass
    else :
        try :
            subprocess . call ( [ '/usr/bin/sh' , '-c' , '-u' , '-u' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , '-' , ' -

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 583
---> probID: codeforces_1672_B
---> inputs:
4
AABAB
ABB
AAAAAAAAB
A
---> outputs:
YES
NO
YES
NO

def cf1672b ( ) :
    import string
    t = len ( sys . stdin )
    while t > 0 :
        s = sys . stdin . read ( t )
        a , b = 0 , 0
        f = True
        for ch in s :
            if ch == 'A' :
                a += 1
            else :
                b += 1
                if a < b :
                    print ( 'NO' )
                    f = False
                    break
        if f :
            if b != 0 and s [ - 1 ] == 'B' :
                print ( 'YES' )
            else :
                print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552979428_2166/main.py", line 36
    return '' . join ( m . group ( 1 ) for m in m . group ( 2 ) . split ( ' ' ) )
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 584
---> probID: geeksforgeeks_2838_A
---> inputs:

---> outputs:
man


def first_substring ( s ) :
    import string
    n , c = len ( s ) , 0
    s1 , s2 = '' , ''
    mpp = { }
    for i in range ( n ) :
        if s [ i ] in ' ' or s [ i ] in ' #' :
            s1 = s [ c : i ]
            mpp [ s1 ] = 1
            c = i + 1
    for i in range ( n ) :
        if s [ i ] == ' ' :
            continue
        for j in range ( n ) :
            if s [ i ] == ' ' :
                break
            s1 = s [ i : j - i + 1 ]
            s2 = s1
            s1 = reverse ( s1 )
            if s1 in mpp :
                return s2
    return '-1'
def reverse ( x ) :
    a = list ( x )
    l , r = len ( a ) - 1 , len ( a )
    for l , r in zip ( l , r ) :
        temp = a [ l ]
        a [ l ] = a [ r ]
        a [ r ] = temp
    return '' . join ( a )
def main ( ) :
    global s , s1
    s = 'mango is sweet when nam en tastes it#'
    s1 = first_substring ( s )
    sys . stdout . write ( s1 + '\n' )
return '' . join ( m . group ( 1 ) for m in m . group ( 2 ) . split ( ' ' ) )


---> console_out:
 
DIDN'T MATCH!! :(
 33%|███▎      | 584/1746 [00:13<00:27, 41.98it/s]

-------------------------------------


---> lineNum: 585
---> probID: geeksforgeeks_2391_A
---> inputs:

---> outputs:
4


def count_consecutive ( n ) :
    import string
    import math
    s = list ( str ( n ) )
    count = 0
    for i in range ( len ( s ) - 1 ) :
        if s [ i ] == s [ i + 1 ] :
            count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 586
---> probID: geeksforgeeks_832_A
---> inputs:

---> outputs:
Interior angle: 144
Exterior angle: 36


def find_angle ( n ) :
    import math
    global interior_angle , exterior_angle
    interior_angle = ( n - 2 ) * math . pi / n
    exterior_angle = 360 / n
    print ( "Interior angle: %d" % interior_angle )
    print ( "Exterior angle: %d" % exterior_angle )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 587
---> probID: geeksforgeeks_1096_A
---> inputs:

---> outputs:
1024 9801


def GFG ( n ) :
    smallest = int ( math . pow ( math . ceil ( math . sqrt ( math . pow ( 10 , n - 1 ) ) ) , 2 ) )
    print ( smallest , end = ' ' )
    largest = int ( math . pow ( math . ceil ( math . sqrt ( math . pow ( 10 , n ) ) ) - 1 , 2 ) )
    print ( largest , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 588
---> probID: codeforces_1411_A
---> inputs:
5
2
))
12
gl))hf))))))
9
gege)))))
14
)aa))b))))))))
1
)
---> outputs:
Yes
No
Yes
Yes
Yes

def main ( ) :
    import sys
    class A ( ) :
        def solve ( self ) :
            with open ( 'test.txt' , 'r' ) as f :
                t = len ( f . readlines ( ) )
                while t > 0 :
                    n = len ( f . readlines ( ) )
                    message = list ( f . readlines ( ) )
                    self . _identify_message ( message , n )
        def _identify_message ( self , n ) :
            self . _identify_message ( self , n )
    print ( 'Yes' if n > 0 else 'No' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 589
---> probID: codeforces_1216_A
---> inputs:
4
bbbb
---> outputs:
['2\nabba', '2\nabab\n']

def akarshanand2810 ( ) :
    import sys
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import BytesIO
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import BytesIO
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    import BytesIO


---> console_out:
 
DIDN'T MATCH!! :(
 34%|███▎      | 589/1746 [00:13<00:27, 42.19it/s]

-------------------------------------


---> lineNum: 590
---> probID: geeksforgeeks_301_A
---> inputs:

---> outputs:
9


def GFG ( a , n ) :
    if n == 0 :
        return 1
    p = power ( a , n // 2 )
    p = p * p
    if n % 2 == 1 :
        p = p * a
    return p
def solve ( i , n , sum , k , a , prefix ) :
    if sum > k :
        discard_count += power ( 2 , n - i )
        return 0
    if i == n :
        return 0
    rem = prefix [ n - 1 ] - prefix [ i ]
    if sum + a [ i ] + rem > k :
        solve ( i + 1 , n , sum + a [ i ] , k , a , prefix )
    if sum + rem > k :
        solve ( i + 1 , n , sum , k , a , prefix )
def count_subsequences ( arr , n , K ) :
    sum = 0.
    k = float ( math . log ( K ) )
    prefix = [ ]
    a = [ ]
    for i in range ( n ) :
        a . append ( float ( math . log ( arr [ i ] ) ) )
        sum += a [ i ]
    prefix . append ( a [ 0 ] )
    for i in range ( 1 , n ) :
        prefix . append ( prefix [ i - 1 ] + a [ i ] )
    total = power ( 2 , n ) - 1
    if sum <= k :
        return int ( total )
    solve ( 0 , n , 0. , k , a , prefix )
    return int ( total - discard_count )
def main ( ) :
    arr = [ 4 , 8 , 7 , 2 ]
    n = len ( arr )
    k = 50
    print ( count_subsequences ( arr , n , k ) , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 591
---> probID: geeksforgeeks_1546_A
---> inputs:

---> outputs:
Both BSTs are identical


def GFG ( data ) :
    class Node ( object ) :
        data = data
        left = None
        right = None
        def __init__ ( self , data ) :
            self . data = data
            self . left = None
            self . right = None
        def inorder ( self , root ) :
            if not root :
                return 0
            self . inorder ( root . left )
            print ( '%d ' % root . data , end = ' ' )
            self . inorder ( root . right )
        def isIdentical ( self , root2 ) :
            if not root1 and not root2 :
                return 1
            elif root1 and root2 :
                return 0
            elif not root1 and root2 :
                return 0
            else :
                if root1 . data == root2 . data and isIdentical ( self . left , root2 . left ) == 1 and isIdentical ( self . right , root2 . right ) == 1 :
                    return 1
                else :
                    return 0
    def main ( ) :
        root1 = Node ( 5 )
        root2 = Node ( 5 )
        root1 . left = Node ( 3 )
        root1 . right = Node ( 8 )
        root1 . left . left = Node ( 2 )
        root1 . left . right = Node ( 4 )
        root2 . left = Node ( 3 )
        root2 . right = Node ( 8 )
        root2 . left . left = Node ( 2 )
        root2 . left . right = Node ( 4 )
        if isIdentical ( root1 , root2 ) == 1 :
            print ( 'Both BSTs are identical' , end = ' ' )
        else :
            print ( 'BSTs are not identical' , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 592
---> probID: aizu_p00549_A
---> inputs:
5
JOIOI
---> outputs:
6

def main ( ) :
    import string
    try :
        n = int ( sys . stdin . readline ( ) )
        arr = list ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    left_j = [ 0 ] * ( n + 2 )
    right_i = [ 0 ] * ( n + 2 )
    for i in range ( 1 , n + 1 ) :
        left_j [ i ] = left_j [ i - 1 ]
        if arr [ i - 1 ] == 'J' :
            left_j [ i ] += 1
        right_i [ n - i + 1 ] = right_i [ n - i + 2 ]
        if arr [ n - i ] == 'I' :
            right_i [ n - i + 1 ] += 1
    sum_i = 0
    sum_j = 0
    max_o = 0
    total = 0
    for i in range ( 1 , n + 1 ) :
        if arr [ i - 1 ] == 'O' :
            tmp = left_j [ i - 1 ] * right_i [ i + 1 ]
            total += tmp
            sum_j += ( left_j [ i - 1 ] + 1 ) * right_i [ i + 1 ]
            sum_i += left_j [ i - 1 ] * ( right_i [ i + 1 ] + 1 )
        else :
            tmp = left_j [ i - 1 ] * right_i [ i ]
        max_o = max ( max_o , tmp )
    total += max_o
    total = max ( total , sum_j )
    total = max ( total , sum_i )
    print ( total )


---> console_out:
 
DIDN'T MATCH!! :(
Traceback (most recent call last):
  File "./junk/1692552979641_2337/main.py", line 11, in <module>
    class Dise ( ) :
  File "./junk/1692552979641_2337/main.py", line 13, in Dise
    Top , Bottom , Right , Left , Front , Back = [ ]
ValueError: not enough values to unpack (expected 6, got 0)


-------------------------------------


---> lineNum: 593
---> probID: aizu_p02383_A
---> inputs:
1 2 4 8 16 32
SE
---> outputs:
8

def main ( args ) :
    import sys
    try :
        surface = sys . stdin . readline ( ) . strip ( ) . split ( )
        order = sys . stdin . readline ( ) . strip ( ) . split ( )
        dice1 = Dise ( surface = surface )
        dice1 . SetDice ( 1 , 2 , 3 )
        dice1 . RollDice ( order )
    except :
        pass
class Dise ( ) :
    surface = [ ]
    Top , Bottom , Right , Left , Front , Back = [ ]
    def setSurface ( SurfaceString ) :
        for i in range ( 6 ) :
            surface . append ( int ( SurfaceString [ i ] ) )
    def SetDice ( top , front , right ) :
        Top = top - 1
        Front = front - 1
        Right = right - 1
        Bottom = 5 - ( top - 1 )
        Back = 5 - ( front - 1 )
        Left = 5 - ( right - 1 )
    def RollDice ( RollString ) :
        for i in range ( len ( RollString ) ) :
            if RollString [ i ] == 'W' :
                Bottom = Left
                Left = Top
                Top = 5 - Bottom
                Right = 5 - Left
            elif RollString [ i ] == 'S' :
                Bottom = Front
                Front = Top
                Top = 5 - Bottom
                Back = 5 - Front
            elif RollString [ i ] == 'E' :
                Bottom = Right
                Right = Top
                Top = 5 - Bottom
                Left = 5 - Right
            else :
                Bottom = Back
                Back = Top
                Top = 5 - Bottom
                Front = 5 - Back
        print ( surface [ Top ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 594
---> probID: geeksforgeeks_3578_A
---> inputs:

---> outputs:
1 2 3 4 5 

def GFG ( data ) :
    class node ( object ) :
        data = data
        next = None
    def add ( data ) :
        newnode = node ( )
        newnode . data = data
        newnode . next = None
        return newnode
    def print_arr ( a , n ) :
        for i in range ( n ) :
            print ( a [ i ] , end = ' ' )
    def findlength ( head ) :
        curr = head
        cnt = 0
        while curr is not None :
            cnt += 1
            curr = curr . next
        return cnt
    def convertarr ( head ) :
        data = findlength ( head )
        arr = [ ]
        index = 0
        curr = head
        while curr is not None :
            arr . append ( curr . data )
            index += 1
            curr = curr . next
        return arr
    def main ( ) :
        head = node ( )
        head = add ( 1 )
        head . next = add ( 2 )
        head . next . next = add ( 3 )
        head . next . next . next = add ( 4 )
        head . next . next . next . next = add ( 5 )
        convertarr ( head )
    return '' . join ( arr )


---> console_out:
 
DIDN'T MATCH!! :(
 34%|███▍      | 594/1746 [00:14<00:27, 42.11it/s]

-------------------------------------


---> lineNum: 595
---> probID: geeksforgeeks_2237_A
---> inputs:

---> outputs:
Non-decreasing digits = 55


def non_dec_nums ( n ) :
    import numpy as np
    a = np . zeros ( ( n + 1 , 10 ) )
    for i in range ( 0 , 9 + 1 ) :
        a [ 0 ] [ i ] = 1
    for i in range ( 1 , n + 1 ) :
        a [ i ] [ 9 ] = 1
    for i in range ( 1 , n + 1 ) :
        for j in range ( 8 , - 1 , - 1 ) :
            a [ i ] [ j ] = a [ i - 1 ] [ j ] + a [ i ] [ j + 1 ]
    return a [ n ] [ 0 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 596
---> probID: codeforces_1344_A
---> inputs:
6
1
14
2
1 -1
4
5 5 5 1
3
3 2 1
2
0 1
5
-239 -2 -100 -3 -11
---> outputs:
YES
YES
YES
NO
NO
YES

def class29 ( arg ) :
    import string
    t = len ( arg )
    while t > 0 :
        n = len ( arg )
        st = set ( )
        i , flag = 0 , 0
        a = [ ]
        vis = [ 0 ] * n
        for i in range ( n ) :
            a [ i ] = len ( arg )
            val = ( i + a [ i ] ) % n
            if val < 0 :
                val += n
            vis [ int ( val ) ] = 1
        for i in range ( n ) :
            if vis [ i ] == 0 :
                flag = 1
                break
        if flag == 0 :
            print ( 'YES' )
        else :
            print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 597
---> probID: leetcode_453_A
---> inputs:

---> outputs:
3

def minMoves ( nums ) :
    import numpy as np
    import numpy . random as np
    class Solution ( object ) :
        def minMoves ( self , nums ) :
            if not nums :
                return 0
            nums . sort ( )
            minNum = nums [ 0 ]
            ans = 0
            for num in nums :
                ans += num - minNum
            return ans
        def main ( self ) :
            sObj = Solution ( )
            nums = [ 1 , 2 , 3 ]
            out = sObj . minMoves ( nums )
            print ( out )
    return Solution ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 598
---> probID: atcoder_AGC002_A
---> inputs:
1 3
---> outputs:
Positive

def main ( ) :
    import sys
    try :
        a = int ( sys . stdin . read ( ) )
        b = int ( sys . stdin . read ( ) )
    except ValueError :
        pass
    else :
        if a <= 0 and b >= 0 or a <= 0 and b >= 0 :
            print ( 'Zero' )
        elif a < 0 and b < 0 :
            print ( ( 'Positive' if ( b - a + 1 ) % 2 == 0 else 'Negative' ) )
        elif a > 0 and b > 0 :
            print ( 'Positive' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 599
---> probID: geeksforgeeks_3119_A
---> inputs:

---> outputs:
4


def first_set_bit ( n ) :
    x = n & ( n - 1 )
    return ( n ^ x )


---> console_out:
 
DIDN'T MATCH!! :(
 34%|███▍      | 599/1746 [00:14<00:27, 42.46it/s]

-------------------------------------


---> lineNum: 600
---> probID: geeksforgeeks_3375_A
---> inputs:

---> outputs:
2


def maximum_chars ( data ) :
    import re
    MAX_CHAR = 256
    def maximum_chars ( data ) :
        n = len ( data )
        res = - 1
        first_ind = [ - 1 ] * MAX_CHAR
        for i in range ( MAX_CHAR ) :
            first_ind [ data [ i ] ] = i
        for i in range ( n ) :
            first_ind = first_ind [ data [ i ] ]
            if first_ind == - 1 :
                first_ind [ data [ i ] ] = i
            else :
                res = max ( res , abs ( i - first_ind - 1 ) )
        return res
    def maximum_chars ( data ) :
        data = 'abba'
        print ( maximum_chars ( data ) )
    return maximum_chars


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 601
---> probID: codeforces_580_B
---> inputs:
4 5
75 5
0 100
150 20
75 1
---> outputs:
100

def main ( ) :
    import os
    import sys
    data = open ( "kefaandcompany.txt" , "r" ) . read ( ) . strip ( ) . split ( )
    n = int ( data [ 0 ] )
    k = int ( data [ 1 ] )
    pf = [ ]
    data = [ ]
    for i in range ( n ) :
        input = data . strip ( ) . split ( )
        money = int ( input [ 0 ] )
        friend = int ( input [ 1 ] )
        data . append ( Kefa ( money , friend ) )
    data . sort ( key = KefaCmp )
    ans = 0
    s , e = 0 , 0
    sum = 0
    while e < n :
        if data [ e ] . money - data [ s ] . money < k :
            sum += data [ e ] . friend
            e += 1
        else :
            sum -= data [ s ] . friend
            s += 1
        ans = max ( ans , sum )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 602
---> probID: geeksforgeeks_1232_A
---> inputs:

---> outputs:
Area: 216.51
Volume: 272.71


def GFG ( a ) :
    import math
    area = float ( 5 * math . sqrt ( 3 ) * a * a )
    return area
def find_volume ( a ) :
    global volume
    volume = float ( ( float ( 5 ) / 12 ) * ( 3 + math . sqrt ( 5 ) ) * a * a * a )
    return volume


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 603
---> probID: projecteuler_p205_A
---> inputs:

---> outputs:
0.5731441

def p205 ( ) :
    print ( np . int16 ( ) )
    PYRAMIDAL_DIE_PDF = [ 0 , 1 , 1 , 1 , 1 ]
    CUBIC_DIE_PDF = [ 0 , 1 , 1 , 1 , 1 , 1 , 1 ]
    nine_pyramidal_pdf = [ 1 ]
    for i in range ( 9 ) :
        nine_pyramidal_pdf = np . append ( nine_pyramidal_pdf , PYRAMIDAL_DIE_PDF )
    sixcubes_pdf = [ 1 ]
    for i in range ( 6 ) :
        sixcubes_pdf = np . append ( sixcubes_pdf , CUBIC_DIE_PDF )
    numer = 0
    for i in range ( len ( nine_pyramidal_pdf ) ) :
        numer += int ( nine_pyramidal_pdf [ i ] ) * np . sum ( sixcubes_pdf [ : i ] )
    denom = int ( np . sum ( nine_pyramidal_pdf [ : len ( nine_pyramidal_pdf ) ] ) ) * np . sum ( sixcubes_pdf [ : len ( sixcubes_pdf ) ] )
    return '%.7f' % ( float ( numer ) / denom )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 604
---> probID: geeksforgeeks_2401_A
---> inputs:

---> outputs:
9


def GFG ( args ) :
    import sys
    N = 6
    Even = N // 2
    Odd = N - Even
    print ( Even * Odd )


---> console_out:
 
DIDN'T MATCH!! :(
 35%|███▍      | 604/1746 [00:14<00:26, 42.76it/s]

-------------------------------------


---> lineNum: 605
---> probID: geeksforgeeks_2907_A
---> inputs:

---> outputs:
12


def GFG ( M , N , s ) :
    import sys
    if N % s == 0 :
        N = N // s
    else :
        N = ( N // s ) + 1
    if M % s == 0 :
        M = M // s
    else :
        M = ( M // s ) + 1
    return M * N


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552979944_3588/main.py", line 19
    return main
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 606
---> probID: geeksforgeeks_399_A
---> inputs:

---> outputs:
3


def ggcd ( a , b ) :
    import sys
    if not a :
        return b
    return ggcd ( b % a , a )
def lcm ( a , b ) :
    return ( a * b ) // gcd ( a , b )
def count_pairs ( arr , n ) :
    ans = 0
    for i in range ( n ) :
        for j in range ( i + 1 , n ) :
            if lcm ( arr [ i ] , arr [ j ] ) == ggcd ( arr [ i ] , arr [ j ] ) :
                ans += 1
        return ans
def main ( ) :
    arr = [ 1 , 1 , 1 ]
    n = len ( arr )
    sys . stdout . write ( count_pairs ( arr , n ) )
return main


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552979968_6544/main.py", line 10
    for i in range ( self . 6 ) :
                            ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 607
---> probID: codeforces_886_A
---> inputs:
1 3 2 1 2 1
---> outputs:
YES

def main ( ) :
    import sys
    import string
    import math
    class Main ( object ) :
        def __init__ ( self ) :
            self . input = string . strip ( )
            self . list = [ ]
            sum = 0
            for i in range ( self . 6 ) :
                _l = int ( self . input )
                self . list . append ( _l )
                sum += _l
            self . i , self . j , self . k = self . input . find ( ' ' )
    for i in range ( 4 ) :
        for j in range ( i + 1 , 5 ) :
            for k in range ( j + 1 , 6 ) :
                sum1 = self . list [ i ] + self . list [ j ] + self . list [ k ]
                if sum1 == sum - sum1 :
                    print ( 'YES' )
                    return
    print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 608
---> probID: geeksforgeeks_1394_A
---> inputs:

---> outputs:
2147483648


def _gg_maximize ( number ) :
    import sys
    counter = 0
    while number > 0 :
        if number % 2 == 1 :
            counter += 1
        number = number // 2
    return counter


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 609
---> probID: codeforces_1712_A
---> inputs:
4
3 1
2 3 1
3 3
1 2 3
4 2
3 4 1 2
1 1
1
---> outputs:
1
0
2
0

def CF_1712_A ( ) :
    import sys
    t = sys . maxsize
    while t > 0 :
        n = sys . maxsize
        k = sys . maxsize
        a = [ ]
        for i in range ( n ) :
            a . append ( sys . maxsize )
        counter = 0
        for i in range ( k , n ) :
            if a [ i ] <= k :
                counter += 1
        print ( counter )


---> console_out:
 
DIDN'T MATCH!! :(
 35%|███▍      | 609/1746 [00:14<00:26, 42.59it/s]

-------------------------------------


---> lineNum: 610
---> probID: codeforces_651_A
---> inputs:
3 5
---> outputs:
6

def python_application38 ( ) :
    import sys
    try :
        num1 = int ( sys . stdin . readline ( ) )
        num2 = int ( sys . stdin . readline ( ) )
        counter = 0
        while num1 != 0 and num2 != 0 :
            if num1 == 1 and num2 == 1 :
                break
            if num1 <= num2 :
                num1 += 1
                num2 -= 2
            else :
                num1 -= 2
                num2 += 1
            counter += 1
        print ( counter )
    except :
        print ( sys . exc_info ( ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 611
---> probID: leetcode_1310_A
---> inputs:

---> outputs:
[2,7,14,8]

def _main ( ) :
    import numpy as np
    class Solution ( object ) :
        def xor_queries ( arr , queries ) :
            res , q = [ 0 ] * len ( queries ) , [ 0 ]
            for i in range ( 1 , len ( arr ) ) :
                arr [ i ] ^= arr [ i - 1 ]
            for q in queries :
                res [ i ] = arr [ q [ 0 ] - 1 ] ^ arr [ q [ 1 ] ] if q [ 0 ] > 0 else arr [ q [ 1 ] ]
            return res
    sObj = Solution ( )
    arr = [ 1 , 3 , 4 , 8 ]
    queries = [ [ 0 , 1 ] , [ 1 , 2 ] , [ 0 , 3 ] , [ 3 , 3 ] ]
    out = sObj . xor_queries ( arr , queries )
    print ( np . array ( out ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 612
---> probID: geeksforgeeks_4157_A
---> inputs:

---> outputs:
e


def encoded_char ( data , k ) :
    expand = ""
    temp = ""
    freq = 0
    for i in range ( len ( data ) ) :
        temp = ""
        freq = 0
        while i < len ( data ) and data [ i ] >= 'a' and data [ i ] <= 'z' :
            temp += data [ i ]
            i += 1
        while i < len ( data ) and data [ i ] >= '1' and data [ i ] <= '9' :
            freq = freq * 10 + data [ i ] - '0'
            i += 1
        for j in range ( 1 , freq + 1 ) :
            expand += temp
    if not freq :
        expand += temp
    return expand [ k - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 613
---> probID: geeksforgeeks_4561_A
---> inputs:

---> outputs:
YES


def GFG ( a , b , c ) :
    import sys
    if ( a + b + c ) % 2 or a + b < c :
        print ( "NO" )
    else :
        print ( "YES" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 614
---> probID: geeksforgeeks_1048_A
---> inputs:

---> outputs:
-3


def summation ( n ) :
    abs_sum = n * ( n + 1 ) // 2
    sign = 1 if n + 1 % 2 == 0 else - 1
    result_sum = sign * abs_sum
    return result_sum


---> console_out:
 
DIDN'T MATCH!! :(
 35%|███▌      | 614/1746 [00:14<00:26, 42.77it/s]

-------------------------------------


---> lineNum: 615
---> probID: geeksforgeeks_1640_A
---> inputs:

---> outputs:
Before sort
-6 -3 -1 2 4 5 
After sort
1 4 9 16 25 36 

def sort_squares ( arr ) :
    import sys
    import os
    import math
    arr = [ - 6 , - 3 , - 1 , 2 , 4 , 5 ]
    n = len ( arr )
    print ( 'Before sort' )
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )
    sort_squares ( arr )
    print ( '' )
    print ( 'After sort' )
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 616
---> probID: codeforces_500_A
---> inputs:
8 4
1 2 1 2 1 2 1
---> outputs:
YES

def cp19 ( ) :
    import string
    try :
        n , t , k , pos = int ( raw_input ( ) ) , 0 , 1 , 1
    except ValueError :
        pass
    arr = [ ]
    for i in range ( n - 1 ) :
        arr . append ( raw_input ( ) )
    while pos < t :
        k = pos + arr [ pos - 1 ]
        pos = k
    if pos == t :
        print ( 'YES' )
    else :
        print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 617
---> probID: aizu_p00344_A
---> inputs:
3
1 1 1
---> outputs:
3

def main ( ) :
    import sys
    f = open ( sys . argv [ 1 ] )
    N = int ( f . readline ( ) )
    a = [ 0 ] * N
    f . readline ( ) . strip ( )
    indeg = [ 0 ] * N
    used = [ False ] * N
    for i in range ( N ) :
        indeg [ ( i + a [ i ] ) % N ] += 1
    for i in range ( N ) :
        j = i
        while not used [ j ] and indeg [ j ] == 0 :
            used [ j ] = True
            j = ( j + a [ j ] ) % N
            indeg [ j ] -= 1
    print ( len ( set ( indeg ) ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 618
---> probID: geeksforgeeks_1738_A
---> inputs:

---> outputs:
The number is a triangular number


def is_triangular ( num ) :
    import math
    if num < 0 :
        return False
    c = ( - 2 * num )
    b , a = 1 , 1
    d = ( b ** 2 ) - ( 4 * a * c )
    if d < 0 :
        return False
    root1 = ( - b + float ( math . sqrt ( d ) ) ) / ( 2 * a )
    root2 = ( - b - float ( math . sqrt ( d ) ) ) / ( 2 * a )
    if root1 > 0 and math . floor ( root1 ) == root1 :
        return True
    if root2 > 0 and math . floor ( root2 ) == root2 :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 619
---> probID: geeksforgeeks_2789_A
---> inputs:

---> outputs:
4000

def print_number_with_dr ( k , d ) :
    import sys
    if d == 0 and k != 1 :
        sys . stdout . write ( '-1' )
    else :
        sys . stdout . write ( d )
        k -= 1
        while k > 0 :
            sys . stdout . write ( '0' )


---> console_out:
 
DIDN'T MATCH!! :(
 35%|███▌      | 619/1746 [00:14<00:26, 42.98it/s]

-------------------------------------


---> lineNum: 620
---> probID: geeksforgeeks_4358_A
---> inputs:

---> outputs:
9 8 7 
6 5 4 
3 2 1 


def rotate_matrix ( mat ) :
    import math
    N = 3
    for i in range ( N - 1 , - 1 , - 1 ) :
        for j in range ( N - 1 , - 1 , - 1 ) :
            print ( '%d ' % i , end = ' ' )
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 621
---> probID: aizu_p02137_A
---> inputs:
5700
---> outputs:
5500

def main ( ) :
    import sys
    try :
        p = int ( sys . stdin . read ( ) )
        print ( p / 500 * 500 )
    except ValueError :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 622
---> probID: geeksforgeeks_2228_A
---> inputs:

---> outputs:
60


def get_product ( n ) :
    import math
    product = 1
    while n != 0 :
        product = product * ( n % 10 )
        n = n // 10
    return product


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 623
---> probID: aizu_p00229_A
---> inputs:
3 2 30 3 26 226
9 0 18 3 20 118
5 5 12 2 15 203
7 4 19 2 22 197
7 4 24 4 17 209
0 0 0 0 0 0
---> outputs:
127
793
414
629
617

def main ( ) :
    import sys
    sn = sys . stdin . readline ( )
    while True :
        slot = Slot ( sn [ 0 ] , sn [ 1 ] , sn [ 2 ] , sn [ 3 ] , sn [ 4 ] )
        if slot . is_end ( ) :
            break
        print ( 100 + slot . benefit - slot . lost )
    class Slot ( int ) :
        def __init__ ( self , b ) :
            self . b = b
            self . r = r
            self . g = g
            self . c = c
            self . s = s
            self . t = t
        def get_lost ( ) :
            return ( self . t - 5 * b - 3 * r - s ) * 3 + ( 5 * b + 3 * r ) * 2
        def get_benefit ( ) :
            return self . b * 15 + self . r * 15 + self . g * 7 + self . c * 2 + ( self . b * 5 + self . r * 3 ) * 15
        def is_end ( ) :
            return self . b + self . r + self . g + self . c + s + t == 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 624
---> probID: codeforces_553_A
---> inputs:
3
2
2
1
---> outputs:
3

def main ( ) :
    import sys
    import os
    import sys
    mod = 1000000007
    MAXN = 1010
    with open ( 'colorBalls.txt' , 'w' , encoding = 'utf-8' ) as infile :
        with open ( 'colorBalls.txt' , 'w' , encoding = 'utf-8' ) as outfile :
            comb = np . zeros ( ( MAXN , MAXN ) )
            comb [ 0 ] [ 0 ] = 1
            for i in range ( 1 , MAXN ) :
                comb [ i ] [ 0 ] = 1
                for j in range ( 1 , i + 1 ) :
                    comb [ i ] [ j ] = ( comb [ i - 1 ] [ j ] + comb [ i - 1 ] [ j - 1 ] ) % mod
        K = len ( infile )
        color = [ infile . read ( ) ]
        res = 1
        total = 0
        for i in range ( K ) :
            res = ( res * comb [ total + color [ i ] - 1 ] [ color [ i ] - 1 ] ) % mod
            total += color [ i ]
        outfile . write ( res )


---> console_out:
 
DIDN'T MATCH!! :(
 36%|███▌      | 624/1746 [00:14<00:26, 42.76it/s]

-------------------------------------


---> lineNum: 625
---> probID: geeksforgeeks_2043_A
---> inputs:

---> outputs:
85.98229710000001


def GFG ( r ) :
    import math
    PI = 3.14159265
    def length_rope ( r ) :
        return ( ( 2 * PI * r ) + 6 * r )
    def main ( ) :
        r = 7
        print ( length_rope ( r ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 626
---> probID: geeksforgeeks_2413_A
---> inputs:

---> outputs:
Is 4562 a Palindrome number? -> False
Is 2002 a Palindrome number? -> True


def GFG ( num ) :
    rev_num = 0
    while num > 0 :
        rev_num = rev_num * 10 + num % 10
        num = num // 10
    return rev_num


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 627
---> probID: leetcode_415_A
---> inputs:

---> outputs:
134

def add_strings ( num1 , num2 ) :
    s = [ ]
    carry = 0
    for i , j in enumerate ( num1 ) :
        if i >= 0 or j >= 0 or carry == 1 :
            x = 0 if i < 0 else num1 [ i ] - '0'
            y = 0 if j < 0 else num2 [ j ] - '0'
            s . append ( ( x + y + carry ) % 10 )
            carry = ( x + y + carry ) // 10
    return '' . join ( reversed ( s ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 628
---> probID: geeksforgeeks_265_A
---> inputs:

---> outputs:
Below are all perfect numbers till 10000
6 is a perfect number
28 is a perfect number
496 is a perfect number
8128 is a perfect number


def is_perfect ( n ) :
    sum = 1
    for i in range ( 2 , n + 1 ) :
        if n % i == 0 :
            if i * i != n :
                sum = sum + i + n // i
            else :
                sum = sum + i
    if sum == n and n != 1 :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 629
---> probID: geeksforgeeks_77_A
---> inputs:

---> outputs:
4 8 9 16 25 27 32 36 49 64 81 

def GFG ( n ) :
    for x in range ( 2 , math . sqrt ( n ) + 1 ) :
        p = x
        while p <= n :
            p = p * x
            if p == n :
                return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 36%|███▌      | 629/1746 [00:14<00:25, 43.03it/s]

-------------------------------------


---> lineNum: 630
---> probID: geeksforgeeks_76_A
---> inputs:

---> outputs:
4 8 9 16 25 27 32 36 49 64 81 

def is_power ( n ) :
    for x in range ( 2 , math . sqrt ( n ) + 1 ) :
        y = 2
        p = math . pow ( x , y )
        while p <= n and p > 0 :
            if p == n :
                return True
            y += 1
            p = math . pow ( x , y )
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 631
---> probID: geeksforgeeks_2002_A
---> inputs:

---> outputs:
a = 2, b = 6


def __gcd ( a , b ) :
    if not b :
        return a
    return __gcd ( b , a % b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 632
---> probID: codeforces_1623_A
---> inputs:
5
10 10 6 1 2 8
10 10 9 9 1 1
9 8 5 6 2 1
6 9 2 2 5 8
2 2 1 1 2 1
---> outputs:
7
10
9
3
0

def time ( m , n , rb , cb , rd , cd ) :
    t = 0
    dr = 1
    dc = 1
    while True :
        if rb == rd or cb == cd :
            return t
        t += 1
        if ( rb + dr ) <= 0 or ( rb + dr > m ) :
            dr *= - 1
        if ( cb + dc ) <= 0 or ( cb + dc > n ) :
            dc *= - 1
        rb += dr
        cb += dc
    def main ( ) :
        stream_file = sys . stdin
        lines = stream_file . readlines ( )
        test_cases = int ( lines [ 0 ] )
        for x in lines [ 1 : ] :
            t = time ( int ( x [ 0 ] ) , int ( x [ 1 ] ) , int ( x [ 2 ] ) , int ( x [ 3 ] ) , int ( x [ 4 ] ) , int ( x [ 5 ] ) )
            print ( t )
    return t


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 633
---> probID: aizu_p00564_A
---> inputs:
10 3 100 5 180
---> outputs:
360

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        a = int ( sys . stdin . readline ( ) )
        b = int ( sys . stdin . readline ( ) )
        c = int ( sys . stdin . readline ( ) )
        d = int ( sys . stdin . readline ( ) )
    except :
        pass
    else :
        ans1 , ans2 = 100000 , 1000000
        for i in range ( 1 , n + 1 ) :
            if a * i >= n :
                ans1 = i * b
                break
        for i in range ( 1 , n + 1 ) :
            if c * i >= n :
                ans2 = i * d
                break
        print ( min ( ans2 , ans1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 634
---> probID: geeksforgeeks_1975_A
---> inputs:

---> outputs:
4


def count_set_bits ( n ) :
    import sys
    count = 0
    while n > 0 :
        n &= ( n - 1 )
        count += 1
    def total_pairs ( arr , n ) :
        m = { }
        for i in range ( n ) :
            count = count_set_bits ( arr [ i ] )
            if count in m :
                m [ count ] = m [ count ] + 1
            else :
                m [ count ] = 1
        result = 0
        for count , value in m . items ( ) :
            result += ( ( value * ( value - 1 ) ) / 2 )
        return result
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )
    sys . stdout . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(
 36%|███▋      | 634/1746 [00:14<00:25, 42.84it/s]

-------------------------------------


---> lineNum: 635
---> probID: geeksforgeeks_1723_A
---> inputs:

---> outputs:
2 th centered hexadecagonal number :  17
12 th centered hexadecagonal number :  1057


def center_hexadecagonal_num ( n ) :
    import sys
    n = 2
    print ( "%dth centered %dth ""hexadecagonal number: " % n , end = "" )
    print ( center_hexadecagonal_num ( n ) )
    n = 12
    print ( "%dth centered %dth ""hexadecagonal number: " % n , end = "" )
    print ( center_hexadecagonal_num ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 636
---> probID: atcoder_AGC019_A
---> inputs:
20 30 70 90
3
---> outputs:
150

def main ( ) :
    import sys
    import math
    try :
        Q , H , S , D , N = math . histogram ( sys . stdin . read ( ) , 0 , math . pi )
        one_price = min ( min ( Q * 4 , H * 2 ) , S )
        if float ( one_price ) <= float ( D ) / 2 :
            print ( N * one_price )
        else :
            print ( ( N / 2 ) * D + ( N % 2 ) * one_price )
    except ValueError :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 637
---> probID: geeksforgeeks_2785_A
---> inputs:

---> outputs:
2


def count_numbers ( L , R , K ) :
    if K == 9 :
        K = 0
    totalnumbers = R - L + 1
    factor9 = totalnumbers // 9
    rem = totalnumbers % 9
    ans = factor9
    for i in range ( R , R - rem , - 1 ) :
        rem1 = i % 9
        if rem1 == K :
            ans += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552980689_9546/main.py", line 3
    for a , b , c , d , e , f in [ ( math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) ] :

SyntaxError: closing parenthesis ']' does not match opening parenthesis '('


-------------------------------------


---> lineNum: 638
---> probID: codeforces_1271_A
---> inputs:
4
5
6
3
1
2
---> outputs:
6

def main ( ) :
    import math
    for a , b , c , d , e , f in [ ( math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) , math . sqrt ( math . pi ) ] :
        DEDENT DEDENT

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 639
---> probID: geeksforgeeks_4951_A
---> inputs:

---> outputs:
3


def Solution ( A ) :
    import sys
    ans = 2
    n = len ( A )
    if n <= 2 :
        return n
    llap = [ 2 for i in range ( n ) ]
    A . sort ( )
    for j in range ( n - 2 , - 1 , - 1 ) :
        i = j - 1
        k = j + 1
        while i >= 0 and k < n :
            if A [ i ] + A [ k ] == 2 * A [ j ] :
                llap [ j ] = max ( llap [ k ] + 1 , llap [ j ] )
                ans = max ( ans , llap [ j ] )
                i -= 1
                k += 1
            elif A [ i ] + A [ k ] < 2 * A [ j ] :
                k += 1
            else :
                i -= 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 37%|███▋      | 639/1746 [00:15<00:25, 42.75it/s]

-------------------------------------


---> lineNum: 640
---> probID: geeksforgeeks_358_A
---> inputs:

---> outputs:
2


def minimum_changes ( arr , n , d ) :
    max_freq = - 1
    freq = { }
    for i in range ( n ) :
        a0 = arr [ i ] - ( i ) * d
        if a0 in freq :
            freq [ a0 ] = freq [ a0 ] + 1
        else :
            freq [ a0 ] = 1
        if freq [ a0 ] > max_freq :
            max_freq = freq [ a0 ]
    return ( n - max_freq )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 641
---> probID: codeforces_106_B
---> inputs:
5
2100 512 150 200
2000 2048 240 350
2300 1024 200 320
2500 2048 80 300
2000 512 180 150
---> outputs:
4

def main ( ) :
    import sys
    import numpy as np
    import numpy . random
    import os
    import sys
    n = len ( sys . stdin )
    vec = np . zeros ( ( n , 4 ) )
    for i in range ( n ) :
        vec [ i ] [ 0 ] = sys . stdin . read ( )
        vec [ i ] [ 1 ] = sys . stdin . read ( )
        vec [ i ] [ 2 ] = sys . stdin . read ( )
        vec [ i ] [ 3 ] = sys . stdin . read ( )
    ans = 500
    ansprice = 20000
    for i in range ( n ) :
        fl = 1
        for j in range ( n ) :
            if vec [ i ] [ 0 ] < vec [ j ] [ 0 ] and vec [ i ] [ 1 ] < vec [ j ] [ 1 ] and vec [ i ] [ 2 ] < vec [ j ] [ 2 ] :
                fl = 0
        if fl == 1 :
            if vec [ i ] [ 3 ] < ansprice :
                ansprice = vec [ i ] [ 3 ]
                ans = i + 1
    print ( ans )
    sys . exit ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 642
---> probID: geeksforgeeks_4668_A
---> inputs:

---> outputs:
1


def count_points ( n , m , a , b , x , y ) :
    import numpy as np
    a . sort ( )
    b . sort ( )
    j = 0
    count = 0
    for i in range ( n ) :
        while j < m :
            if a [ i ] + y < b [ j ] :
                break
            if b [ j ] >= a [ i ] - x and b [ j ] <= a [ i ] + y :
                count += 1
                j += 1
                break
            else :
                j += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 643
---> probID: geeksforgeeks_4746_A
---> inputs:

---> outputs:
14


def mul_with_3_point5 ( x ) :
    return ( x << 1 ) + x + ( x >> 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 644
---> probID: codeforces_1084_B
---> inputs:
3 3
4 3 5
---> outputs:
3

def main ( ) :
    import sys
    import os
    import sys
    import math
    import random
    n = int ( sys . stdin . readline ( ) )
    s = int ( sys . stdin . readline ( ) )
    a = [ None ] * n
    a [ n ] = int ( a [ n ] )
    print ( solve ( n , a , s ) )
    sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(
 37%|███▋      | 644/1746 [00:15<00:25, 42.74it/s]

-------------------------------------


---> lineNum: 645
---> probID: geeksforgeeks_3413_A
---> inputs:

---> outputs:
5


def longest_substring ( s ) :
    import string
    cnt , maxi = 1 , 1
    n = len ( s )
    for i in range ( 1 , n ) :
        if s [ i ] != s [ i - 1 ] :
            cnt += 1
        else :
            maxi = max ( cnt , maxi )
            cnt = 1
    maxi = max ( cnt , maxi )
    return maxi


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 646
---> probID: atcoder_ABC068_D
---> inputs:
0
---> outputs:
50
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49


def main ( ) :
    import sys
    class Main ( sys . stdin ) :
        def run ( self ) :
            with open ( self . path ) as f :
                k = f . read ( )
                n = 50
                sum = k // n
                amari = k % n
                a = [ 0 ] * 50
                for i in range ( n ) :
                    a [ i ] = i + sum
                for i in range ( amari ) :
                    a [ n - 1 - i ] += 1
                print ( n )
                for i in range ( n ) :
                    print ( a [ i ] + ( '\n' if i == n - 1 else ' ' ) , end = '' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 647
---> probID: geeksforgeeks_2111_A
---> inputs:

---> outputs:
Count of numbers from 1 to 107 is 17
Count of numbers from 1 to 1264 is 315


def zero_upto ( digits ) :
    first = int ( ( pow ( 10 , digits ) - 1 ) / 9 )
    second = int ( ( pow ( 9 , digits ) - 1 ) / 8 )
    return 9 * ( first - second )
def int_upto ( c ) :
    return ord ( c ) - 48
def count_zero ( num ) :
    k = len ( num )
    total = zero_upto ( k - 1 )
    non_zero = 0
    for i in range ( len ( num ) ) :
        if num [ i ] == '0' :
            non_zero -= 1
            break
        non_zero += ( int_upto ( num [ i ] ) - 1 ) * ( pow ( 9 , k - 1 - i ) )
    no , remaining , calculated_upto = 0 , 0 , 0
    for c in num :
        no = no * 10 + ( int_upto ( c ) )
        if c != '0' :
            calculated_upto = calculated_upto * 10 + 9
    remaining = no - calculated_upto
    ans = zero_upto ( k - 1 ) + ( remaining - non_zero - 1 )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 648
---> probID: geeksforgeeks_2314_A
---> inputs:

---> outputs:
58.1481


def GFG ( a ) :
    import math
    if a < 0 :
        return - 1
    r = float ( a * math . sqrt ( 2 ) ) / 3
    h = ( 2 * a ) / 3
    V = float ( 3.14 * math . pow ( r , 2 ) * h )
    return V


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 649
---> probID: geeksforgeeks_2904_A
---> inputs:

---> outputs:
Prime


def Prime ( n ) :
    import math
    if n == 1 :
        return False
    for i in range ( 2 , n + 1 ) :
        if n % i == 0 :
            return False
    return True
def CheckSumPrime ( str ) :
    summ = 0
    for i in range ( 1 , len ( str ) ) :
        summ += abs ( str [ i - 1 ] - str [ i ] )
    if Prime ( summ ) :
        return True
    else :
        return False
def Main ( ) :
    num = 142
    str = '142'
    if CheckSumPrime ( str ) :
        print ( 'Prime' )
    else :
        print ( 'Not Prime' )


---> console_out:
 
DIDN'T MATCH!! :(
 37%|███▋      | 649/1746 [00:15<00:25, 42.65it/s]

-------------------------------------


---> lineNum: 650
---> probID: geeksforgeeks_5011_A
---> inputs:

---> outputs:
2.718
2.929


def main ( args ) :
    import sys
    class GFG ( float ) :
        def sum ( n ) :
            if n < 2 :
                return 1
            else :
                return 1 / n + ( sum ( n - 1 ) )
    g = GFG ( )
    print ( '%.3f' % g . sum ( 8 ) )
    print ( '%.3f' % g . sum ( 10 ) , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 651
---> probID: geeksforgeeks_3274_A
---> inputs:

---> outputs:
1


def count_elements ( p , n ) :
    ans = 0
    for i in range ( 1 , n - 1 ) :
        if p [ i - 1 ] > p [ i ] and p [ i ] > p [ i + 1 ] :
            ans += 1
        elif p [ i - 1 ] < p [ i ] and p [ i ] < p [ i + 1 ] :
            ans += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 652
---> probID: atcoder_ABC078_A
---> inputs:
A B
---> outputs:
<

def main ( ) :
    import sys
    try :
        a = sys . stdin . read ( ) . strip ( )
        b = sys . stdin . read ( ) . strip ( )
    except AttributeError :
        pass
    else :
        if a > b :
            print ( '>' )
        elif a == b :
            print ( '=' )
        else :
            print ( '<' )


---> console_out:
 
MATCHED!! :D


-------------------------------------


---> lineNum: 653
---> probID: geeksforgeeks_1228_A
---> inputs:

---> outputs:
Volume of triangular prism:  972.0


def find_volume ( l , b , h ) :
    import math
    volume = ( l * b * h ) / 2
    return volume


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 654
---> probID: codeforces_462_B
---> inputs:
15 10
DZFDFZDFDDDDDDF
---> outputs:
82

def practice462b ( ) :
    import sys
    f = sys . stdin
    out = sys . stdout
    s = f . readline ( ) . strip ( )
    n , k = int ( s . split ( ' ' ) [ 0 ] ) , int ( s . split ( ' ' ) [ 1 ] )
    cards = [ c462b ( ) for i in range ( 26 ) ]
    s = f . readline ( ) . strip ( )
    for t in range ( n ) :
        cards [ t ] [ 'A' ] [ 'left' ] += 1
    ans = 0
    for i in range ( k ) :
        cards . sort ( )
        change = min ( cards [ 25 ] [ 'left' ] , k - i )
        ans += change * change
        cards [ 25 ] [ 'left' ] -= change
        i += change - 1
    out . write ( ans )
    out . close ( )


---> console_out:
 
DIDN'T MATCH!! :(
 37%|███▋      | 654/1746 [00:15<00:25, 42.74it/s]

-------------------------------------


---> lineNum: 655
---> probID: projecteuler_p045_A
---> inputs:

---> outputs:
1533776805

def p045 ( ) :
    print ( eval ( 'p045()' ) )
    i = 286
    j = 166
    k = 144
    while True :
        triangle = int ( i ) * ( i + 1 ) / 2
        pentagon = int ( j ) * ( j * 3 - 1 ) / 2
        hexagon = int ( k ) * ( k * 2 - 1 )
        min = min ( min ( triangle , pentagon ) , hexagon )
        if min == triangle and min == pentagon and min == hexagon :
            return str ( min )
        if min == triangle :
            i += 1
        if min == pentagon :
            j += 1
        if min == hexagon :
            k += 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 656
---> probID: geeksforgeeks_554_A
---> inputs:

---> outputs:
4


def max_primefactor_num ( N ) :
    if N < 2 :
        return 0
    arr = [ False ] * ( N + 1 )
    prod , res = 1 , 0
    for p in range ( 2 , p * N + 1 ) :
        if arr [ p ] == False :
            for i in range ( p * 2 , N + 1 , p ) :
                arr [ i ] = True
            prod *= p
            if prod > N :
                return res
            res += 1
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 657
---> probID: geeksforgeeks_1351_A
---> inputs:

---> outputs:
Yes


def gf_max_element ( a , n ) :
    import numpy as np
    import numpy . fft as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    a = np . random . random ( n )
    b = np . zeros ( n )
    for i in np . arange ( 1 , 2 ** n + 1 ) :
        if a % i == 0 :
            b [ i ] = i
            if X // i != i :
                b [ i ] = X // i
    if len ( b ) != n :
        return False
    a = a [ : n ]
    b = np . fft . ifftn ( a )
    for i in range ( n ) :
        if b [ i ] != a [ i ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 658
---> probID: geeksforgeeks_3295_A
---> inputs:

---> outputs:
All Non-empty Subarrays
1 
1 2 
1 2 3 
1 2 3 4 
2 
2 3 
2 3 4 
3 
3 4 
4 


def test ( n ) :
    arr = [ 1 , 2 , 3 , 4 ]
    def subarray ( n ) :
        for i in range ( n ) :
            for j in range ( i , n ) :
                for k in range ( i , j + 1 ) :
                    print ( arr [ k ] , end = ' ' )
    def main ( ) :
        print ( 'All Non-empty Subarrays' )
        subarray ( len ( arr ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552981183_6902/main.py", line 8
    work :
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 659
---> probID: codeforces_1679_A
---> inputs:
4
4
7
24
998244353998244352
---> outputs:
1 1
-1
4 6
166374058999707392 249561088499561088

def main ( ) :
    import sys
    import math
    try :
        tc = int ( sys . stdin . readline ( ) )
    except :
        pass
    work :
        pass
    else :
        for n in range ( tc ) :
            x = math . inf
            y = math . inf
            if n % 6 == 0 :
                x = min ( x , n // 6 )
                y = max ( y , n // 6 )
            if n % 6 == 2 and n != 2 :
                x = min ( x , ( ( n // 6 ) - 1 ) + 2 )
                y = max ( y , ( ( n // 6 ) - 1 ) + 2 )
            if n % 6 == 4 and n != 4 :
                x = min ( x , n // 6 + 1 )
                y = max ( y , n // 6 + 1 )
            if n % 4 == 0 :
                x = min ( x , n // 4 )
                y = max ( y , n // 4 )
            if n % 4 == 2 and n != 2 :
                x = min ( x , ( n // 4 ) - 1 + 1 )
                y = max ( y , ( n // 4 ) - 1 + 1 )
            if x != math . inf and y != math . inf :
                print ( x , y )
            else :
                print ( '-1' )


---> console_out:
 
DIDN'T MATCH!! :(
 38%|███▊      | 659/1746 [00:15<00:25, 42.40it/s]

-------------------------------------


---> lineNum: 660
---> probID: geeksforgeeks_1508_A
---> inputs:

---> outputs:
31


def max_sum ( arr , n ) :
    import numpy as np
    arr . sort ( )
    sum = 0
    for i in range ( n ) :
        sum += ( arr [ i ] * i )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 661
---> probID: geeksforgeeks_5065_A
---> inputs:

---> outputs:
7


def max_sum ( a , n ) :
    import numpy as np
    a . sort ( )
    sum = 0
    for i in range ( 0 , n - 1 , 2 ) :
        sum += a [ i ]
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 662
---> probID: geeksforgeeks_5116_A
---> inputs:

---> outputs:
28465


def find_answer ( n , arr ) :
    import math
    arr . sort ( )
    sum = 0
    for i in range ( n // 2 ) :
        sum += ( arr [ i ] + arr [ n - i - 1 ] ) ** 2
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 663
---> probID: geeksforgeeks_3772_A
---> inputs:

---> outputs:
21


def find_sum ( arr , n ) :
    arr . sort ( )
    sum = arr [ 0 ]
    for i in range ( n - 1 ) :
        if arr [ i ] != arr [ i + 1 ] :
            sum = sum + arr [ i + 1 ]
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552981303_9143/main.py", line 74
    
            ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 664
---> probID: geeksforgeeks_5172_A
---> inputs:

---> outputs:
Deepest Left Leaf Node :: 9


def GFG ( data ) :
    import re
    class GFG ( object ) :
        data = None
        left , right = None , None
        def __init__ ( self , data ) :
            self . data = data
            self . left = self . right = None
            return self . data
        def __getitem__ ( self , key ) :
            return key
        def __setitem__ ( self , key , value ) :
            pass
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __setitem__ ( self , key , value ) :
            pass
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
        

---> console_out:
 
DIDN'T MATCH!! :(
 38%|███▊      | 664/1746 [00:15<00:25, 42.28it/s]  File "./junk/1692552981327_3085/main.py", line 74
    
            ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 665
---> probID: geeksforgeeks_1273_A
---> inputs:

---> outputs:
Deepest Right Leaf Node :: 10


def GFG ( data ) :
    import re
    class GFG ( object ) :
        data = None
        left , right = None , None
        def __init__ ( self , data ) :
            self . data = data
            self . left = self . right = None
            return self . data
        def __getitem__ ( self , key ) :
            return key
        def __setitem__ ( self , key , value ) :
            pass
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __setitem__ ( self , key , value ) :
            pass
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
            return key
        def __getitem__ ( self , key ) :
        

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 666
---> probID: atcoder_ABC079_B
---> inputs:
5
---> outputs:
11

def main ( ) :
    import numpy as np
    s = np . array ( [ 0 ] * ( n + 1 ) )
    arr = np . zeros ( ( n + 1 ) )
    arr [ 0 ] = 2
    arr [ 1 ] = 1
    for i in range ( 2 , len ( arr ) ) :
        arr [ i ] = arr [ i - 1 ] + arr [ i - 2 ]
    print ( arr [ n ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 667
---> probID: geeksforgeeks_1235_A
---> inputs:

---> outputs:
3 : 4


def __gcd ( a , b ) :
    import sys
    if not a :
        return b
    if not b :
        return a
    if a == b :
        return a
    if a > b :
        return __gcd ( a - b , b )
    return __gcd ( a , b - a )
def print_ratio ( a , b , c , d ) :
    if b * c > a * d :
        temp = c
        c = d
        d = c
        temp = a
        a = b
        b = temp
    lcm = ( a * c ) // __gcd ( a , c )
    x = lcm // a
    b *= x
    y = lcm // c
    d *= y
    k = __gcd ( b , d )
    b //= k
    d //= k
    print ( '%d:%d' % ( b , d ) , end = ' ' )
def main ( ) :
    a , b , c , d = 4 , 3 , 2 , 2
    print_ratio ( a , b , c , d )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 668
---> probID: geeksforgeeks_3832_A
---> inputs:

---> outputs:
Maximum sum :  6


def gf_maxsum_SIS ( arr , n ) :
    max_sum = 0
    current_sum = arr [ 0 ]
    for i in range ( 1 , n ) :
        if arr [ i - 1 ] < arr [ i ] :
            current_sum = current_sum + arr [ i ]
        else :
            max_sum = max ( max_sum , current_sum )
            current_sum = arr [ i ]
    return max ( max_sum , current_sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 669
---> probID: geeksforgeeks_2973_A
---> inputs:

---> outputs:
16


def GCD ( a , b ) :
    if not b :
        return a
    return GCD ( b , a % b )
def findMaxSumUtil ( arr , n ) :
    finalGCD = arr [ 0 ]
    for i in range ( 1 , n ) :
        finalGCD = GCD ( arr [ i ] , finalGCD )
    return finalGCD
def findMaxSum ( arr , n ) :
    maxElement = findMaxSumUtil ( arr , n )
    return ( maxElement * n )
def main ( ) :
    arr = [ 8 , 20 , 12 , 36 ]
    n = len ( arr )
    print ( findMaxSum ( arr , n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 38%|███▊      | 669/1746 [00:15<00:25, 42.43it/s]

-------------------------------------


---> lineNum: 670
---> probID: geeksforgeeks_5234_A
---> inputs:

---> outputs:
2


def gcd ( a , b ) :
    import math
    def gcd ( a , b ) :
        while b != 0 :
            t = b
            b = a % b
            a = t
        return a
    def find_min_diff ( a , b , x , y ) :
        g = gcd ( a , b )
        diff = abs ( x - y ) % g
        return min ( diff , g - diff )
    def main ( ) :
        a , b , x , y = 20 , 52 , 5 , 7
        print ( find_min_diff ( a , b , x , y ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 671
---> probID: aizu_p01303_A
---> inputs:
2
1 3 20 10
4
21 13
1 15
10 10
25 10
1 3 20 10
4
21 13
1 15
10 10
25 10
---> outputs:
2
2

def main ( ) :
    import sys
    try :
        a = sys . stdin . read ( )
    except AttributeError :
        pass
    else :
        X , Y , W , H , N = sys . stdin . read ( ) . split ( ' ' )
        count = 0
        for i in range ( N ) :
            x = sys . stdin . read ( )
            y = sys . stdin . read ( )
            if ( X <= x <= X + W ) and ( Y <= y <= Y + H ) :
                count += 1
        print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 672
---> probID: geeksforgeeks_2428_A
---> inputs:

---> outputs:
True


def divisibleby37 ( n1 ) :
    l = len ( n1 )
    if not n1 :
        return 0
    if l % 3 == 1 :
        n1 = '00' + n1
        l += 2
    elif l % 3 == 2 :
        n1 = '0' + n1
        l += 1
    n = n1 . replace ( ' ' , '' )
    g_sum = 0
    while l != 0 :
        if l == 2 :
            gvalue = ( ord ( n [ ( l - 2 ) ] ) - 48 ) * 100 + ( ord ( n [ ( l - 1 ) ] ) - 48 ) * 10
        elif l == 1 :
            gvalue = ( ord ( n [ ( l - 1 ) ] ) - 48 ) * 100
        else :
            gvalue = ( ord ( n [ ( l - 3 ) ] ) - 48 ) * 100 + ( ord ( n [ ( l - 2 ) ] ) - 48 ) * 10 + ( ord ( n [ ( l - 1 ) ] ) - 48 ) * 1
        l = l - 3
        g_sum = g_sum + gvalue
    if g_sum >= 1000 :
        return ( divisibleby37 ( str ( g_sum ) ) )
    else :
        return ( 1 if g_sum % 37 == 0 else 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 673
---> probID: codeforces_111_A
---> inputs:
5 15 15
---> outputs:
['4\n4\n1\n1\n2', '1\n1\n1\n1\n11']

def A111 ( ) :
    import sys
    import csv
    class A111 ( csv . Writer ) :
        def __init__ ( self ) :
            sys . stdout . write ( '' )
            self . csv . __init__ ( self )
            self . csv . seek ( 0 )
            self . csv . seek ( 0 )
            self . csv . truncate ( 0 )
            self . csv . seek ( 0 )
            self . csv . truncate ( 0 )
            self . csv . seek ( 0 )
            self . csv . truncate ( 0 )
        def sort ( self ) :
            l = [ ]
            for i in self . csv :
                l . append ( i )
            self . csv . sort ( l )
            for i in self . a :
                a . append ( self . csv [ i ] )
    class A111 ( list ) :
        def __init__ ( self ) :
            self . csv . seek ( 0 )
            self . csv . truncate ( 0 )
        def sort ( self ) :
            l = [ ]
            for i in self . csv :
                l . append ( self . csv [ i ] )
            self . csv . sort ( l )
            for i in self . a :
                l . append ( self . csv [ i ] )
        def read ( self ) :
            return int ( self . csv . read ( self . csv . truncate ( 0 ) ) )
        def read_array ( self , n ) :
            a = [ ]
            for i in range ( n ) :
                a . append ( self . csv [ i ] )
            return a
        def long ( self ) :
            return int ( self . csv . read ( 0 ) )
    return A111


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 674
---> probID: geeksforgeeks_3336_A
---> inputs:

---> outputs:
Minimum Cost to make two strings identical is =  60


def lcs ( X , Y , m , n ) :
    L = np . zeros ( ( m + 1 , n + 1 ) )
    for i in range ( 0 , m + 1 ) :
        for j in range ( 0 , n + 1 ) :
            if i == 0 or j == 0 :
                L [ i ] [ j ] = 0
            elif X [ i - 1 ] == Y [ j - 1 ] :
                L [ i ] [ j ] = L [ i - 1 ] [ j - 1 ] + 1
            else :
                L [ i ] [ j ] = max ( L [ i - 1 ] [ j ] , L [ i ] [ j - 1 ] )
    return L [ m ] [ n ]
    def find_min_cost ( X , Y , cost_x , cost_y ) :
        m = len ( X )
        n = len ( Y )
        global len_lcs
        len_lcs = lcs ( X , Y , m , n )
        return cost_x * ( m - len_lcs ) + cost_y * ( n - len_lcs )
    def main ( ) :
        X = 'ef'
        Y = 'gh'
        print ( 'Minimum Cost to make two strings ' 'identical is = %d' % find_min_cost ( X , Y , 10 , 20 ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(
 39%|███▊      | 674/1746 [00:15<00:25, 42.28it/s]

-------------------------------------


---> lineNum: 675
---> probID: geeksforgeeks_3156_A
---> inputs:

---> outputs:
6


def number_of_squares ( base ) :
    base = ( base - 2 )
    base = base // 2
    return base * ( base + 1 ) // 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 676
---> probID: geeksforgeeks_2553_A
---> inputs:

---> outputs:
7.3485


def rmsValue ( arr , n ) :
    square = 0
    mean = 0
    root = 0
    for i in range ( n ) :
        square += pow ( arr [ i ] , 2 )
    mean = ( square / float ( n ) )
    root = float ( math . sqrt ( mean ) )
    return root


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 677
---> probID: aizu_p00522_A
---> inputs:
4 3
180
160
170
190
2 100
3 120
4 250
---> outputs:
480

def main ( ) :
    import sys
    import numpy as np
    import numpy . testing . ufuncs as ufuncs
    M , N = np . mgrid [ 0 : 2 ]
    P = np . arange ( M )
    P . sort ( )
    dp = np . zeros ( M + 10001 )
    dp [ 0 ] = 0
    for i in range ( N ) :
        C = np . random . randint ( 0 , M )
        E = np . random . randint ( 0 , N )
        for j in range ( len ( dp ) - 1 , - C , - 1 ) :
            if dp [ j - C ] == np . inf :
                continue
            dp [ j ] = min ( dp [ j ] , dp [ j - C ] + E )
    sum = np . cumsum ( dp )
    for i in range ( M ) :
        sum [ i + 1 ] = sum [ i ] + P [ M - 1 - i ]
    for i in range ( M + 1 , len ( sum ) ) :
        sum [ i ] = sum [ M ]
    ans = 0
    for i in range ( len ( sum ) ) :
        if dp [ i ] == np . inf :
            continue
        ans = max ( ans , sum [ i ] - dp [ i ] )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 678
---> probID: aizu_p02287_A
---> inputs:
5
7 8 1 2 3
---> outputs:
node 1: key = 7, left key = 8, right key = 1, 
node 2: key = 8, parent key = 7, left key = 2, right key = 3, 
node 3: key = 1, parent key = 7, 
node 4: key = 2, parent key = 8, 
node 5: key = 3, parent key = 8,

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        n = n + 1
    x = [ ]
    for i in range ( 1 , n + 1 ) :
        x . append ( i )
    for i in range ( 1 , n + 1 ) :
        print ( "node %d: key = %d, " % ( i , x [ i ] ) )
        if i // 2 > 0 :
            print ( "parent key = %d, " % ( x [ i // 2 ] ) )
        if 2 * i <= n :
            print ( "left key = %d, " % ( x [ 2 * i ] ) )
        if ( 2 * i + 1 ) <= n :
            print ( "right key = %d, " % ( x [ 2 * i + 1 ] ) )
        print ( "\n" , end = "" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 679
---> probID: geeksforgeeks_634_A
---> inputs:

---> outputs:
35


def max_sum ( arr ) :
    dp = np . zeros ( ( n + 1 , 3 ) )
    for i in range ( n ) :
        m1 , m2 , m3 = 0 , 0 , 0
        for j in range ( m ) :
            if ( j / ( m / 3 ) ) == 0 :
                m1 = max ( m1 , arr [ i ] [ j ] )
            elif ( j / ( m / 3 ) ) == 1 :
                m2 = max ( m2 , arr [ i ] [ j ] )
            elif ( j / ( m / 3 ) ) == 2 :
                m3 = max ( m3 , arr [ i ] [ j ] )
        dp [ i + 1 ] [ 0 ] = max ( dp [ i ] [ 1 ] , dp [ i ] [ 2 ] ) + m1
        dp [ i + 1 ] [ 1 ] = max ( dp [ i ] [ 0 ] , dp [ i ] [ 2 ] ) + m2
        dp [ i + 1 ] [ 2 ] = max ( dp [ i ] [ 1 ] , dp [ i ] [ 0 ] ) + m3
    print ( max ( max ( dp [ n ] [ 0 ] , dp [ n ] [ 1 ] ) , dp [ n ] [ 2 ] ) , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
 39%|███▉      | 679/1746 [00:16<00:25, 42.36it/s]

-------------------------------------


---> lineNum: 680
---> probID: geeksforgeeks_4697_A
---> inputs:

---> outputs:
( 2 ,  3 )  ( 7 ,  8 )  ( 2 ,  8 )  ( 7 ,  3 ) 


def GFG ( x1 , y1 , x2 , y2 , x3 , y3 , x4 , y4 ) :
    x5 = max ( x1 , x3 )
    y5 = max ( y1 , y3 )
    x6 = min ( x2 , x4 )
    y6 = min ( y2 , y4 )
    if x5 > x6 or y5 > y6 :
        print ( "No intersection" )
        return
    print ( "(%d, %d) " % ( x5 , y5 ) , end = " " )
    print ( "(%d, %d) " % ( x6 , y6 ) , end = " " )
    x7 = x5
    y7 = y6
    print ( "(%d, %d) " % ( x7 , y7 ) , end = " " )
    x8 = x6
    y8 = y5
    print ( "(%d, %d) " % ( x8 , y8 ) , end = " " )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552981705_5462/main.py", line 27
    

SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 681
---> probID: codeforces_424_A
---> inputs:
4
xxXx
---> outputs:
1
XxXx

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        sys . stdin . readline ( )
        s = sys . stdin . readline ( )
        sitting_to_standing = 0
        sitting , standing = 0 , 0
        for c in s :
            if c == 'x' :
                sitting += 1
            else :
                standing += 1
        sitting_to_standing = ( sitting - standing ) // 2
        print ( abs ( sitting_to_standing ) )
        for c in s :
            if c == 'x' and sitting_to_standing > 0 :
                print ( 'X' , end = 'SPACETOKEN' )
                sitting_to_standing -= 1
            elif c == 'X' and sitting_to_standing < 0 :
                print ( 'x' , end = 'SPACETOKEN' )
                sitting_to_standing += 1
            else :
                print ( c , end = 'SPACETOKEN' )
    except :
        print ( 'ErrorSPACETOKENinSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKEN%dSPACETOKENofSPACETOKEN%dSPACETOKEN%dSPACETOKEN%s' % ( sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write ( s ) , sys . stderr . write

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 682
---> probID: codeforces_1214_A
---> inputs:
100
60
70
---> outputs:
40

def _import ( arg ) :
    import sys
    import string
    import io
    import codecs
    class class1 ( object ) :
        class FastReader ( io . BufferedReader ) :
            def __init__ ( self ) :
                self . stream = io . BufferedReader ( )
                self . stream = None
            def readline ( self ) :
                while self . stream is None or not self . stream . eof :
                    try :
                        self . stream = stream . readline ( )
                    except AttributeError :
                        pass
                return self . stream . readline ( )
            def readline ( self ) :
                data = ""
                try :
                    data = self . stream . readline ( )
                except AttributeError :
                    pass
                return data
        def main ( self , arg ) :
            input = sys . stdin . readline ( )
            n = input . find ( " " )
            d = input . find ( " " )
            e = input . find ( " " )
            ans = n
            for i in range ( 0 , i * 5 * e <= n ) :
                ans = min ( ans , ( n - i * 5 * e ) % d )
            print ( ans )
    return class1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 683
---> probID: geeksforgeeks_981_A
---> inputs:

---> outputs:
244.44444444444446


def knapSack ( W , wt , val , n ) :
    maxratio = float ( 0 )
    maxindex = 0
    for i in range ( n ) :
        if ( val [ i ] / wt [ i ] ) > maxratio :
            maxratio = ( val [ i ] / wt [ i ] )
            maxindex = i
    return ( W * maxratio )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 684
---> probID: geeksforgeeks_4682_A
---> inputs:

---> outputs:
2 9 8 13 14 19 

def alternate ( arr , n ) :
    arr . sort ( )
    v1 = [ ]
    v2 = [ ]
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            v1 . append ( arr [ i ] )
        else :
            v2 . append ( arr [ i ] )
    index , i , j = 0 , 0 , 0
    flag = False
    if arr [ 0 ] % 2 == 0 :
        flag = True
    while index < n :
        if flag == True :
            arr [ index ] = int ( v1 [ i ] )
            i += 1
            index += 1
            flag = not flag
        else :
            arr [ index ] = int ( v2 [ j ] )
            j += 1
            index += 1
            flag = not flag
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
 39%|███▉      | 684/1746 [00:16<00:25, 42.10it/s]

-------------------------------------


---> lineNum: 685
---> probID: atcoder_ABC061_A
---> inputs:
1 3 2
---> outputs:
Yes

def main ( ) :
    import sys
    try :
        A = int ( sys . stdin . read ( ) )
        B = int ( sys . stdin . read ( ) )
        C = int ( sys . stdin . read ( ) )
        if A <= C and B >= C :
            print ( "Yes" )
        else :
            print ( "No" )
    except ValueError :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552981824_6652/main.py", line 35
    return '' . join ( find_occurrence ( arr , n , pattern ) )
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 686
---> probID: geeksforgeeks_1960_A
---> inputs:

---> outputs:
1 3 0 1 

def dec_to_binary ( n ) :
    binary_num = [ ]
    i = 0
    while n > 0 :
        binary_num . append ( n % 2 )
        n = n // 2
        i += 1
    binary = ""
    for j in range ( i - 1 , - 1 , - 1 ) :
        binary += str ( binary_num [ j ] )
    return binary
def count_freq ( pat , txt ) :
    M = len ( pat )
    N = len ( txt )
    res = 0
    for i in range ( 0 , N - M + 1 ) :
        j = 0
        for j in range ( M ) :
            if txt [ i + j ] != pat [ j ] :
                break
        if j == M :
            res += 1
            j = 0
    return res
def find_occurrence ( arr , n , pattern ) :
    for i in range ( n ) :
        binary = dec_to_binary ( arr [ i ] )
        print ( count_freq ( pattern , binary ) , end = ' ' )
    return '' . join ( find_occurrence ( arr , n , pattern ) )
def main ( ) :
    arr = [ 5 , 106 , 7 , 8 ]
    pattern = '10'
    n = len ( arr )
    find_occurrence ( arr , n , pattern )
return '' . join ( find_occurrence ( arr , n , pattern ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 687
---> probID: geeksforgeeks_2512_A
---> inputs:

---> outputs:
2


def GFG ( arr , n ) :
    x = 0
    for i in range ( n ) :
        x += ( arr [ i ] & 1 )
    print ( min ( x , n - x ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 688
---> probID: leetcode_215_A
---> inputs:

---> outputs:
5

def find_kth_largest ( nums , k ) :
    import random
    def find_kth_largest ( nums , k ) :
        random . shuffle ( nums )
        k = len ( nums ) - k
        lo = 0
        hi = len ( nums ) - 1
        while lo < hi :
            ( lo , hi ) = partition ( nums , lo , hi )
            if j < k :
                lo = j + 1
            elif j > k :
                hi = j - 1
            else :
                break
        return nums [ k ]
    def partition ( a , lo , hi ) :
        i = lo
        j = hi + 1
        while True :
            while i < hi and less ( a [ ++ i ] , a [ lo ] ) :
                i = i + 1
            while j > lo and less ( a [ lo ] , a [ -- j ] ) :
                if i >= j :
                    break
                exch ( a , i , j )
            exch ( a , lo , j )
            return j
    def exch ( a , i , j ) :
        tmp = a [ i ]
        a [ i ] = a [ j ]
        a [ j ] = tmp
    def less ( v , w ) :
        return v < w
    def shuffle ( a ) :
        random . seed ( )
        for ind in range ( 1 , len ( a ) ) :
            r = random . randint ( ind + 1 , len ( a ) )
            exch ( a , ind , r )
    def main ( ) :
        sobj = Solution ( )
        nums = [ 3 , 2 , 1 , 5 , 6 , 4 ]
        k = 2
        out = sobj . find_kth_largest ( nums , k )
        print ( out )
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 689
---> probID: geeksforgeeks_2291_A
---> inputs:

---> outputs:
YES


def GFG ( n ) :
    temp = n
    while n > 0 :
        k = n % 10
        if temp % k == 0 :
            return "YES"
        n //= 10
    return "NO"


---> console_out:
 
DIDN'T MATCH!! :(
 39%|███▉      | 689/1746 [00:16<00:25, 42.23it/s]

-------------------------------------


---> lineNum: 690
---> probID: geeksforgeeks_1809_A
---> inputs:

---> outputs:
NO


def is_divisible ( n ) :
    temp = n
    sum = 0
    while n != 0 :
        k = int ( n ) % 10
        sum += k
        n //= 10
    if temp % sum == 0 :
        return "YES"
    return "NO"


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 691
---> probID: atcoder_ABC059_B
---> inputs:
36
24
---> outputs:
GREATER

def main ( ) :
    import string
    s = list ( sys . stdin . readlines ( ) )
    a = s [ 0 ]
    b = s [ 1 ]
    answer = ""
    naa = len ( a )
    nab = len ( b )
    i = 0
    if naa == nab :
        if a == b :
            answer = "EQUAL"
        else :
            for q in a :
                l = ord ( b [ i ] ) - ord ( 'a' )
                if q > l :
                    answer = "GREATER"
                    break
                elif q < l :
                    answer = "LESS"
                    break
    elif naa > nab :
        answer = "GREATER"
    elif naa < nab :
        answer = "LESS"
    print ( answer )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 692
---> probID: geeksforgeeks_1237_A
---> inputs:

---> outputs:
54


def calculate_area_sum ( l , b ) :
    size = 1
    max_size = min ( l , b )
    total_area = 0
    for i in range ( 1 , max_size + 1 ) :
        total_squares = ( l - size + 1 ) * ( b - size + 1 )
        area = total_squares * size * size
        total_area += area
        size += 1
    return total_area


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 693
---> probID: geeksforgeeks_751_A
---> inputs:

---> outputs:
5 3 1 4 2 

def gf_arrange ( N ) :
    if N == 1 :
        print ( '1' )
        return
    if N == 2 or N == 3 :
        print ( '-1' )
        return
    even , odd = - 1 , - 1
    if N % 2 == 0 :
        even = N
        odd = N - 1
    else :
        odd = N
        even = N - 1
    while odd >= 1 :
        print ( odd , end = ' ' )
        odd = odd - 2
    while even >= 2 :
        print ( even , end = ' ' )
        even = even - 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 694
---> probID: geeksforgeeks_2339_A
---> inputs:

---> outputs:
4


def find_min_equal_sums ( a , N ) :
    import math
    sum = 0
    for i in range ( N ) :
        sum += a [ i ]
    sum1 , sum2 = 0 , 0
    min = sys . maxsize
    for i in range ( N ) :
        sum1 += a [ i ]
        sum2 = sum - sum1
        if abs ( sum1 - sum2 ) < min :
            min = abs ( sum1 - sum2 )
        if min == 0 :
            break
    return min


---> console_out:
 
DIDN'T MATCH!! :(
 40%|███▉      | 694/1746 [00:16<00:24, 42.43it/s]

-------------------------------------


---> lineNum: 695
---> probID: codeforces_1647_A
---> inputs:
5
1
2
3
4
5
---> outputs:
1
2
21
121
212

def main ( ) :
    import sys
    try :
        t = int ( sys . stdin . read ( ) )
    except ValueError :
        t = 0
    for i in range ( t ) :
        n = sys . stdin . read ( )
        s = [ ]
        mod = n % 3
        if mod == 1 :
            for j in range ( n // 3 ) :
                s . append ( 12 )
            s . append ( 1 )
        else :
            for j in range ( n // 3 ) :
                s . append ( 21 )
            if mod == 2 :
                s . append ( 2 )
        print ( '' . join ( s ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 696
---> probID: geeksforgeeks_1514_A
---> inputs:

---> outputs:
56


def find_optimal_solution ( a , N ) :
    import numpy as np
    import numpy . fft as np
    import numpy . random as np
    a = np . asarray ( a )
    points = 0
    for i in range ( N ) :
        points += a [ i ] * i
    return points


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552982082_5317/main.py", line 28
    from numpy . testing . as np
                           ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 697
---> probID: codeforces_644_B
---> inputs:
5 1
2 9
4 8
10 9
15 2
19 1
---> outputs:
11 19 -1 21 22

def main ( ) :
    import sys
    import csv
    import math
    import numpy . fft as np
    import numpy . random
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import random
    import numpy . testing as np
    from numpy . testing . as np
    import testing as np
    from numpy . testing . as np
    import testing as np
    from numpy . testing . as np
    import testing as np
    from numpy . testing . as np
    import testing as np
    from numpy . testing . as np
    import testing as np
    np . testing = np . testing
    np . testing = np . testing
    np . testing = np . testing
    np . testing . as np . testing = np . testing
    np . testing . as np . testing = np . np . testing
    np . testing . as np . testing = np . np . testing
    np . testing . as np . testing = np . np . testing
    np . testing . as np . testing = np . np . testing
    np . testing . as np . testing = np . np . testing
    np . testing . as np . testing = np . np . testing
    np . testing . as np . testing = np . np . testing . as_testing
    np . testing . as np . testing = np . np . testing . as_testing
    np . testing . as np . testing :
        np . testing . as_testing = np . testing
        np . testing . as_testing = np . testing . as_testing
        np . testing . as_testing = np . testing . as_testing
        np . testing . as_testing = np . testing . as_testing
        np . testing . as_testing = np . testing . as_testing
        np . testing . as_testing = np . testing . as_testing
        np . testing . as_testing = np . testing . as_testing
        np . testing . as_

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552982106_7023/main.py", line 15
    continue
    ^
SyntaxError: 'continue' not properly in loop


-------------------------------------


---> lineNum: 698
---> probID: codeforces_1668_B
---> inputs:
6
3 2
1 1 1
2 4
1 1
2 5
2 1
3 8
1 2 1
4 12
1 2 1 3
4 19
1 2 1 3
---> outputs:
NO
YES
NO
YES
NO
YES

def main ( ) :
    import sys
    import numpy as np
    import numpy . random
    class Practice ( np . array ) :
        def __init__ ( self ) :
            np . random . seed ( 0 )
            self . n = np . random . randint ( 0 , len ( self . n ) )
            self . m = np . random . randint ( 0 , len ( self . m ) )
            self . a = np . array ( self . n )
            for i in range ( self . n ) :
                self . a [ i ] = np . random . randint ( 0 , len ( self . a ) )
            if self . n > self . m :
                print ( 'NO' )
                continue
            self . a . sort ( )
            ans = self . a [ self . n - 1 ]
            for i in range ( self . n - 1 , - 1 , - 1 ) :
                ans += 1
                if i > 0 :
                    ans += self . a [ i ]
            if ans <= self . m :
                print ( 'YES' )
            else :
                print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 699
---> probID: geeksforgeeks_428_A
---> inputs:

---> outputs:
6


def GFG ( a ) :
    count = 0
    for i in range ( len ( a ) ) :
        for j in range ( len ( a ) ) :
            if a [ i ] < a [ j ] :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 40%|████      | 699/1746 [00:16<00:24, 42.50it/s]

-------------------------------------


---> lineNum: 700
---> probID: codeforces_1230_B
---> inputs:
5 3
51528
---> outputs:
10028

def pre5 ( args ) :
    import sys
    import string
    import string
    import string
    import string
    import math
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import math
    from string import encode
    from string import strip
    from string import strip
    from string import join
    from string import join
    from string import join
    if not isinstance ( args , str ) :
        args = [ args ]
    else :
        args = list ( args )
    if args :
        out = [ ]
    else :
        out = None
    for arg in args :
        if not isinstance ( arg , str ) :
            out . append ( arg )
        else :
            out . append ( str ( arg ) )
    return out


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 701
---> probID: codeforces_812_A
---> inputs:
1 0 0 1
0 1 0 0
0 0 1 0
0 0 0 1
---> outputs:
YES

def main1 ( ) :
    import sys
    arr = [ ]
    for i in range ( 4 ) :
        for j in range ( 4 ) :
            arr [ i ] [ j ] = sys . stdin . read ( 4 )
    if arr [ 0 ] [ 3 ] == 1 :
        if arr [ 0 ] [ 1 ] == 1 or arr [ 0 ] [ 2 ] == 1 or arr [ 0 ] [ 0 ] == 1 or arr [ 1 ] [ 0 ] == 1 or arr [ 2 ] [ 1 ] == 1 or arr [ 3 ] [ 2 ] == 1 :
            print ( "YES" )
            return
    if arr [ 1 ] [ 3 ] == 1 :
        if arr [ 1 ] [ 1 ] == 1 or arr [ 1 ] [ 2 ] == 1 or arr [ 1 ] [ 0 ] == 1 or arr [ 2 ] [ 0 ] == 1 or arr [ 3 ] [ 1 ] == 1 or arr [ 0 ] [ 2 ] == 1 :
            print ( "YES" )
            return
    if arr [ 2 ] [ 3 ] == 1 :
        if arr [ 2 ] [ 1 ] == 1 or arr [ 2 ] [ 2 ] == 1 or arr [ 2 ] [ 0 ] == 1 or arr [ 3 ] [ 0 ] == 1 or arr [ 0 ] [ 1 ] == 1 or arr [ 1 ] [ 2 ] == 1 :
            print ( "YES" )
            return
    if arr [ 3 ] [ 3 ] == 1 :
        if arr [ 3 ] [ 1 ] == 1 or arr [ 3 ] [ 2 ] == 1 or arr [ 3 ] [ 0 ] == 1 or arr [ 0 ] [ 0 ] == 1 or arr [ 1 ] [ 1 ] == 1 or arr [ 2 ] [ 2 ] == 1 :
            print ( "YES" )
            return
    print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 702
---> probID: geeksforgeeks_140_A
---> inputs:

---> outputs:
47


def GFG ( ) :
    N = 10000
    MOD = 1000000007
    F = [ ]
    def precompute ( ) :
        F . append ( 2 )
        F . append ( 3 )
        F . append ( 4 )
        for i in range ( 4 , N ) :
            F [ i ] = ( F [ i - 1 ] + F [ i - 2 ] ) % MOD
    def main ( ) :
        n = 8
        precompute ( )
        print ( F [ n ] )
    return '' . join ( F )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552982224_5568/main.py", line 6
    for b in range ( i = 0 , t ) :
                             ^
SyntaxError: positional argument follows keyword argument


-------------------------------------


---> lineNum: 703
---> probID: aizu_p01314_A
---> inputs:
9
500
0
---> outputs:
2
3

def main ( z ) :
    global i , j , k , c , t , b
    s = [ ]
    for t in range ( len ( z ) ) :
        print ( b )
        for b in range ( i = 0 , t ) :
            for c in range ( i + 1 , t ) :
                b += 1 if c == t else 0
                for k in range ( 0 , i , j ) :
                    c += k


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 704
---> probID: geeksforgeeks_4886_A
---> inputs:

---> outputs:
Length of Longest Increasing Subsequence is  6


def ceil_index ( A , l , r , key ) :
    import sys
    class LIS ( int ) :
        def ceil_index ( A , l , r , key ) :
            while r - l > 1 :
                m = l + ( r - l ) // 2
                if A [ m ] >= key :
                    r = m
                else :
                    l = m
            return r
        def longest_increasing_subsequence_length ( A , size ) :
            tail_table = [ ]
            tail_table . append ( A [ 0 ] )
            size = 1
            for i in range ( 1 , size ) :
                if A [ i ] < tail_table [ 0 ] :
                    tail_table [ 0 ] = A [ i ]
                elif A [ i ] > tail_table [ size - 1 ] :
                    tail_table [ size - 1 ] = A [ i ]
                else :
                    tail_table [ ceil_index ( tail_table , - 1 , size - 1 , A [ i ] ) ] = A [ i ]
            return size
    A = [ 2 , 5 , 3 , 7 , 11 , 8 , 10 , 13 , 6 ]
    n = len ( A )
    print ( 'Length of Longest Increasing Subsequence is %d' % longest_increasing_subsequence_length ( A , n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 40%|████      | 704/1746 [00:16<00:24, 42.40it/s]

-------------------------------------


---> lineNum: 705
---> probID: aizu_p00402_A
---> inputs:
3
4 0 1
---> outputs:
2

def main ( ) :
    import sys
    s = sys . stdin . read ( )
    N = len ( s )
    ban = [ s [ i ] for i in range ( N ) ]
    ban . sort ( )
    print ( ( ban [ N - 1 ] - ban [ 0 ] + 1 ) / 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 706
---> probID: projecteuler_p074_A
---> inputs:

---> outputs:
402

def p074 ( ) :
    import math
    import re
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    math = math


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 707
---> probID: geeksforgeeks_2975_A
---> inputs:

---> outputs:
2


def colour_visible ( height , colour , K ) :
    import numpy as np
    arr = np . zeros ( K + 1 )
    visible = 0
    max = height [ K - 1 ]
    arr [ colour [ K - 1 ] ] = 1
    for i in range ( K - 2 , - 1 , - 1 ) :
        if height [ i ] > max :
            max = height [ i ]
            arr [ colour [ i ] ] = 1
    for i in range ( 1 , K + 1 ) :
        if arr [ i ] == 1 :
            visible += 1
    return visible


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 708
---> probID: geeksforgeeks_2959_A
---> inputs:

---> outputs:
No


def GFG ( n ) :
    i = math . log ( n ) / math . log ( 8 )
    return ( i - math . floor ( i ) < 0.000001 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 709
---> probID: codeforces_1611_B
---> inputs:
6
5 5
10 1
2 3
0 0
17 2
1000000000 1000000000
---> outputs:
2
1
1
0
2
500000000

def main ( ) :
    import sys
    for t in range ( sys . maxsize , 0 , - 1 ) :
        a = sys . maxsize
        b = sys . maxsize
        res = min ( ( a + b ) // 4 , min ( a , b ) )
        print ( res )


---> console_out:
 
DIDN'T MATCH!! :(
 41%|████      | 709/1746 [00:16<00:24, 42.67it/s]

-------------------------------------


---> lineNum: 710
---> probID: aizu_p01117_A
---> inputs:
5 2
10 20 30 40 50
15 25 35 45 55
6 3
10 20 30 15 25 35
21 34 11 52 20 18
31 15 42 10 21 19
4 2
0 0 0 0
0 0 0 0
0 0
---> outputs:
105
83
0

def main ( ) :
    import sys
    import os
    class Main ( object ) :
        def __init__ ( self ) :
            self . maxes = [ ]
        def go ( self ) :
            self . maxes . append ( 0 )
            with open ( self . path ) as f :
                while True :
                    n = len ( f . read ( 1 ) )
                    m = len ( f . read ( 1 ) )
                    if n == 0 and m == 0 :
                        break
                    points = [ 0 ] * n
                    max = 0
                    for i in range ( m ) :
                        for j in range ( n ) :
                            points [ j ] += f . read ( 1 )
                            if i == m - 1 and max < points [ j ] :
                                max = points [ j ]
                self . maxes . append ( max )
            for max in self . maxes :
                print ( max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 711
---> probID: codeforces_920_B
---> inputs:
2
2
1 3
1 4
3
1 5
1 1
2 3
---> outputs:
1 2
1 0 2

def main ( ) :
    import sys
    import string
    t = len ( sys . argv )
    while t > 0 :
        n = len ( sys . argv )
        l = [ ]
        r = [ ]
        for i in range ( n ) :
            l . append ( sys . stdin . read ( n ) )
            r . append ( sys . stdin . read ( n ) )
        s = 0
        for i in range ( n ) :
            if s < r [ i ] :
                if l [ i ] > s :
                    s = l [ i ]
                else :
                    s += 1
            sys . stdout . write ( '%d ' % s )
        else :
            sys . stdout . write ( '%d ' % 0 )
    sys . stdout . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 712
---> probID: geeksforgeeks_728_A
---> inputs:

---> outputs:
Number of ways =  5


def count_ways ( n , m ) :
    import sys
    count = [ 0 ] * ( n + 1 )
    count [ 0 ] = 0
    i = 0
    for i in range ( 1 , n + 1 ) :
        if i > m :
            count [ i ] = count [ i - 1 ] + count [ i - m ]
        elif i < m :
            count [ i ] = 1
        else :
            count [ i ] = 2
    return count [ n ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 713
---> probID: geeksforgeeks_4845_A
---> inputs:

---> outputs:
4
2 1 3 2 

def GFG ( n ) :
    print ( n + n // 2 )
    for i in range ( 2 , n + 1 , 2 ) :
        print ( i , end = ' ' )
    for i in range ( 1 , n + 1 , 2 ) :
        print ( i , end = ' ' )
    for i in range ( 2 , n + 1 , 2 ) :
        print ( i , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
./junk/1692552982479_2856/main.py:13: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if data is "" :


-------------------------------------


---> lineNum: 714
---> probID: aizu_p02116_A
---> inputs:
2
---> outputs:
1

def main ( ) :
    import sys
    bfr = sys . stdin
    data = ""
    try :
        data = bfr . read ( )
    except AttributeError :
        pass
    res = 0
    han = 0
    ni_beki = 1
    ruijyo = 0
    if data is "" :
        sys . exit ( 0 )
    else :
        res = int ( data )
        for i in range ( 1 ) :
            han = ( res >> ruijyo ) % 2
            if han == 0 :
                res = ( res % ni_beki ) + 1
                i = 1
                break
            else :
                ni_beki = ni_beki * 2
                ruijyo += 1
        print ( res )


---> console_out:
 
DIDN'T MATCH!! :(
 41%|████      | 714/1746 [00:16<00:24, 42.28it/s]

-------------------------------------


---> lineNum: 715
---> probID: atcoder_ABC043_B
---> inputs:
01B0
---> outputs:
00

def main ( ) :
    import re
    s = ''
    while '0B' in s or '1B' in s :
        s = s . replace ( '0B' , '' )
        s = s . replace ( '1B' , '' )
    s = s . replace ( 'B' , '' )
    print ( s )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552982530_2102/main.py", line 111
    
        ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 716
---> probID: aizu_p02412_A
---> inputs:
5 9
0 0
---> outputs:
2

def main ( ) :
    import sys
    import string
    import string
    import list
    import string
    import int
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import sys
    import string
    import string
    import sys
    import string
    import string
    import sys
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    try :
        string
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552982554_6255/main.py", line 17
    return dp [ ind ] [ cnt ] = ans
                              ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 717
---> probID: geeksforgeeks_2835_A
---> inputs:

---> outputs:
9


def GFG ( ind , cnt , last , a , n , k , dp ) :
    import numpy as np
    MAX = 100
    def recur ( ind , cnt , last , a , n , k , dp ) :
        if cnt == k :
            return 0
        if ind == n :
            return int ( - 1e9 )
        if dp [ ind ] [ cnt ] != - 1 :
            return dp [ ind ] [ cnt ]
        ans = 0
        for i in range ( ind , n ) :
            if cnt % 2 == 0 :
                ans = max ( ans , recur ( i + 1 , cnt + 1 , i , a , n , k , dp ) )
            else :
                ans = max ( ans , __gcd ( a [ last ] , a [ i ] ) + recur ( i + 1 , cnt + 1 , 0 , a , n , k , dp ) )
        return dp [ ind ] [ cnt ] = ans
    def __gcd ( a , b ) :
        if not b :
            return a
        return __gcd ( b , a % b )
    def main ( ) :
        a = [ 4 , 5 , 3 , 7 , 8 , 10 , 9 , 8 ]
        n = len ( a )
        k = 4
        dp = np . zeros ( ( n , MAX ) )
        for i in range ( n ) :
            for j in range ( MAX ) :
                dp [ i ] [ j ] = - 1
        print ( recur ( 0 , 0 , 0 , a , n , k , dp ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 718
---> probID: codeforces_351_A
---> inputs:
3
0.000 0.500 0.750 1.000 2.000 3.000
---> outputs:
0.250

def main ( ) :
    import sys
    import math
    n = int ( sys . stdin . readline ( ) )
    parts = parts . split ( ' ' )
    arr = [ ]
    non_int = 0
    sum_before , sum = 0 , 0
    for i in range ( 2 * n ) :
        num = float ( parts [ i ] )
        sum_before += num
        if num != math . floor ( num ) :
            non_int += 1
        sum += math . floor ( num )
        arr . append ( num )
    max_sum = min ( n , non_int ) + sum
    min_sum = max ( 0 , non_int - n ) + sum
    if min_sum > sum_before :
        ans = ( min_sum - sum_before )
    elif max_sum < sum_before :
        ans = ( sum_before - max_sum )
    else :
        x = sum_before - math . floor ( sum_before )
        ans = min ( 1 - x , x )
    sys . stdout . write ( '%.3f\n' % ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 719
---> probID: geeksforgeeks_3293_A
---> inputs:

---> outputs:
Yes


def equivalent_base4 ( bin ) :
    if bin == '00' :
        return 0
    if bin == '01' :
        return 1
    if bin == '10' :
        return 2
    return 3
def is_divisible_by5 ( bin ) :
    l = len ( bin )
    if l % 2 :
        bin = '0' + bin
    odd_sum , even_sum = 0 , 0
    is_odd_digit = 1
    for i in range ( 0 , len ( bin ) , 2 ) :
        if is_odd_digit != 0 :
            odd_sum += equivalent_base4 ( bin [ i : i + 2 ] )
        else :
            even_sum += equivalent_base4 ( bin [ i : i + 2 ] )
        is_odd_digit ^= 1
    if abs ( odd_sum - even_sum ) % 5 == 0 :
        return 'Yes'
    return 'No'


---> console_out:
 
DIDN'T MATCH!! :(
 41%|████      | 719/1746 [00:16<00:24, 42.19it/s]

-------------------------------------


---> lineNum: 720
---> probID: aizu_p00121_A
---> inputs:
0 1 2 3 4 5 6 7
1 0 2 3 4 5 6 7
7 6 5 4 3 2 1 0
---> outputs:
0
1
28

def main ( ) :
    import os
    import re
    import sys
    import string
    import string
    import string
    import math
    import os
    import string
    import string
    import math
    d = { }
    import string
    import string
    import int
    d = { }
    import string
    d [ 'a' ] = 0
    d [ 'b' ] = 0
    d [ 'c' ] = 0
    d [ 'd' ] = d [ 'c' ] = 0
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]
    d [ 'd' ] = d [ 'd' ]


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552982652_4195/main.py", line 28
    return 0
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 721
---> probID: codeforces_55_B
---> inputs:
1 1 1 1
+ + *
---> outputs:
3

def SmallestNumber ( ) :
    import string
    min = int ( sys . maxsize )
    arr = [ ]
    for i in range ( 4 ) :
        arr . append ( string . strip ( ) )
    ops = [ ]
    for i in range ( 3 ) :
        ops . append ( string . strip ( ) )
    util ( arr , ops , 0 )
    print ( min )
def util ( arr , ops , idx ) :
    if idx == 3 :
        min = min ( min , arr [ 0 ] )
        return
    for i in range ( len ( arr ) ) :
        for j in range ( i + 1 , len ( arr ) ) :
            a = [ ]
            for k in arr :
                if k != j and k != i :
                    a . append ( arr [ k ] )
            if idx < 3 and ops [ idx ] == '+' :
                res = arr [ i ] + arr [ j ]
            else :
                res = arr [ i ] * arr [ j ]
            a . append ( res )
            util ( a , ops , idx + 1 )
return 0


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552982676_8551/main.py", line 18
    from numpy . testing . as np
                           ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 722
---> probID: geeksforgeeks_4183_A
---> inputs:

---> outputs:
Minimum Number of Square Free Divisors is 3
Minimum Number of Square Free Divisors is 1


def test_sum_same_free_divisors ( ) :
    import numpy as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    from numpy . testing . as np
    import testing as np
    from numpy . testing . as np
    import testing as np
    from numpy . testing . as np
    import testing as np
    from numpy . testing . as np
    import testing as np
    from numpy . testing . as np
    import testing as np
    from numpy . testing . as np
    import testing as np
    testing = np . testing as np
    testing = np . testing
    np . testing = np . testing
    np . testing . as np . testing = np . testing
    np . testing . as np . testing = np . testing
    np . testing . as np . testing = np . np . testing
    np . testing . as np . testing = np . np . testing
    np . testing . as np . testing = np . np . testing . as np . testing
    np . testing . as np . testing = np . np . testing . as np . testing
    np . testing . as np . testing = np . np . testing . as np . testing
    np . testing . as np . testing . as np . testing :
        np . testing . as_testing = np . testing . as_testing
        np . testing . as_testing = np . testing . as_testing
        np . testing . as_testing = np . testing . as_testing = np . testing . as_testing
        np . testing . as_testing = np . testing . as_testing = np . testing . as_testing = np . as_testing
        np . testing . as_testing = np . testing . as_testing = np . testing . as_testing = np . as_testing = np . testing . as_testing
        np . testing . as_testing = np . testing . as_testing = np . testing . as_testing = np . as_testing = np . testing . as_testing = np . as_testing = np . testing . as_testing


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 723
---> probID: atcoder_ABC087_A
---> inputs:
1234
150
100
---> outputs:
84

def main ( ) :
    import sys
    import os
    import sys
    import os
    import sys
    x = int ( sys . stdin . read ( ) )
    a = int ( sys . stdin . read ( ) )
    b = int ( sys . stdin . read ( ) )
    print ( ( x - a ) % b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 724
---> probID: codeforces_222_A
---> inputs:
3 2
3 1 1
---> outputs:
1

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        k = int ( sys . stdin . readline ( ) )
        arr = [ ]
        for i in range ( n ) :
            arr . append ( sys . stdin . readline ( ) )
        idx = k - 1
        flag = True
        while idx < n :
            if arr [ idx ] != arr [ k - 1 ] :
                flag = False
                break
            idx += 1
        if not flag :
            sys . stdout . write ( - 1 )
        else :
            i = k - 1
            while i >= 0 :
                if arr [ i ] != arr [ k - 1 ] :
                    break
                i -= 1
            print ( i + 1 )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(
 41%|████▏     | 724/1746 [00:17<00:24, 42.05it/s]

-------------------------------------


---> lineNum: 725
---> probID: geeksforgeeks_4747_A
---> inputs:

---> outputs:
The number after unsetting the rightmost set bit 6


def GFG ( n ) : return n & ( n - 1 )
def main ( arg ) :
    n = 7
    print ( "The number after unsetting ""the rightmost set bit %d" % fun ( n ) , end = "" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 726
---> probID: geeksforgeeks_2348_A
---> inputs:

---> outputs:
5


def LongestFibSubseq ( A , n ) :
    import bisect
    S = [ t for t in A if t > n ]
    maxLen , x , y = 0 , 0 , 0 , 0
    for i in range ( n ) :
        for j in range ( i + 1 , n ) :
            x = A [ j ]
            y = A [ i ] + A [ j ]
            length = 3
            while y in S and ( y != S . pop ( ) ) :
                z = x + y
                x = y
                y = z
                maxLen = max ( maxLen , 1 )
    return maxLen if maxLen >= 3 else 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 727
---> probID: geeksforgeeks_2188_A
---> inputs:

---> outputs:
7


def count_pairs ( a , b , n , m ) :
    cnt = 0
    s = set ( )
    for i in range ( n ) :
        for j in range ( m ) :
            sum = a [ i ] + b [ j ]
            if sum in s :
                cnt += 1
                s . add ( sum )
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 728
---> probID: geeksforgeeks_94_A
---> inputs:

---> outputs:
Yes


def GFG ( arr , x , n ) :
    sum = 0
    for i in range ( n ) :
        y = math . sqrt ( arr [ i ] )
        if math . floor ( y ) == math . ceil ( y ) :
            sum += arr [ i ]
    if sum % x == 0 :
        return True
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 729
---> probID: aizu_p02437_A
---> inputs:
2 10
0 0 3
0 0 9
0 0 1
1 0
2 0
1 0
0 0 4
1 0
0 1 8
1 1
---> outputs:
9
3
4
8

def main ( args ) :
    import sys
    import collections
    import random
    import sys
    try :
        n = int ( sys . stdin . read ( ) )
    except ValueError :
        pass
    pque = [ collections . deque ( maxlen = None ) ]
    q = sys . stdin . read ( )
    for command , t in zip ( range ( q ) , range ( n ) ) :
        if command == 0 :
            x = random . choice ( pque )
            pque [ t ] . append ( x )
        elif command == 1 :
            if not pque [ t ] . empty ( ) :
                print ( pque [ t ] . popleft ( ) )
        elif command == 2 :
            if not pque [ t ] . empty ( ) :
                pque [ t ] . popleft ( )


---> console_out:
 
DIDN'T MATCH!! :(
 42%|████▏     | 729/1746 [00:17<00:24, 42.34it/s]

-------------------------------------


---> lineNum: 730
---> probID: geeksforgeeks_2928_A
---> inputs:

---> outputs:
The minimum sum of pairs is 40
The maximum sum of pairs is 80


def calculate_min_sum ( a , n ) :
    import math
    a . sort ( )
    min_sum = 0
    for i in range ( 1 , n , 2 ) :
        min_sum += abs ( a [ i ] - a [ i - 1 ] )
    return min_sum
    def calculate_max_sum ( a , n ) :
        a . sort ( )
        max_sum = 0
        for i in range ( n // 2 ) :
            max_sum += abs ( a [ n - 1 - i ] - a [ i ] )
        return max_sum
    def main ( ) :
        a = [ 10 , - 10 , 20 , - 40 ]
        n = len ( a )
        print ( 'The minimum sum of pairs is %d' % calculate_min_sum ( a , n ) )
        print ( 'The maximum sum of pairs is %d' % calculate_max_sum ( a , n ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 731
---> probID: aizu_p02442_A
---> inputs:
3
1 2 3
2
2 4
---> outputs:
1

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        a = [ ]
        for i in range ( n ) :
            a . append ( sys . stdin . readline ( ) )
        m = int ( sys . stdin . readline ( ) )
        b = [ ]
        for i in range ( m ) :
            b . append ( sys . stdin . readline ( ) )
        i = 0
        while True :
            if i >= len ( b ) :
                print ( '0' )
                break
            if i >= len ( a ) :
                print ( '1' )
                break
            if a [ i ] > b [ i ] :
                print ( '0' )
                break
            if a [ i ] < b [ i ] :
                print ( '1' )
                break
            i += 1
    except ValueError :
        print ( 'Invalid input' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 732
---> probID: atcoder_ABC069_C
---> inputs:
3
1 10 100
---> outputs:
Yes

def main ( ) :
    import sys
    import string
    import string
    import string
    import string
    import string
    class Main ( ) :
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
        def __init__ ( self ) :
            self . sum = 0
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 733
---> probID: geeksforgeeks_2852_A
---> inputs:

---> outputs:
2


def is_palindrome ( s ) :
    import string
    import math
    s = 'nolon'
    print ( solve ( s ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 734
---> probID: geeksforgeeks_2565_A
---> inputs:

---> outputs:
891


def count_numbers ( k , n ) :
    import numpy as np
    dp = np . zeros ( ( n + 1 , 2 ) )
    dp [ 1 ] [ 0 ] = 0
    dp [ 1 ] [ 1 ] = k - 1
    for i in range ( 2 , n + 1 ) :
        dp [ i ] [ 0 ] = dp [ i - 1 ] [ 1 ]
        dp [ i ] [ 1 ] = ( dp [ i - 1 ] [ 0 ] + dp [ i - 1 ] [ 1 ] ) * ( k - 1 )
    return dp [ n ] [ 0 ] + dp [ n ] [ 1 ]


---> console_out:
 
DIDN'T MATCH!! :(
 42%|████▏     | 734/1746 [00:17<00:23, 42.26it/s]

-------------------------------------


---> lineNum: 735
---> probID: geeksforgeeks_1186_A
---> inputs:

---> outputs:
31


def min_cost ( n , arr , cost ) :
    sum , total_cost = 0 , 0
    for i in range ( n - 1 ) :
        sum += arr [ i ]
    total_cost += cost * sum
    arr [ n - 1 ] += sum
    total_cost += ( 2 * cost * arr [ n - 1 ] )
    return total_cost


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 736
---> probID: aizu_p00276_A
---> inputs:
4
3 0 0
1 1 1
9 4 1
0 1 2
---> outputs:
1
1
4
0

def main ( ) :
    import sys
    from string import strip
    from string import join
    from string import strip
    from string import join
    from string import strip
    from string import join
    from string import join
    from string import strip
    from string import join
    from string import join
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join , strip
    from string import join
    from string import join , strip
    from string import join
    from string import join
    from string import join
    from string import strip
    from string import join
    from string import join
    from string import strip
    from string import join
    from string import join


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 737
---> probID: aizu_p00461_A
---> inputs:
1
13
OOIOIOIOIIOII
2
13
OOIOIOIOIIOII
0
---> outputs:
4
2

def main ( ) :
    import string
    for n in range ( len ( sys . stdin ) ) :
        if n == 0 :
            break
        m = len ( sys . stdin ) - ( n << 1 )
        ch = ( '' . join ( sys . stdin ) )
        count = 0
        for i in range ( m ) :
            if ch [ i ] == 'I' :
                for j in range ( n ) :
                    if ch [ i + 1 + ( j << 1 ) ] != 'O' or ch [ i + ( ( j + 1 ) << 1 ) ] != 'I' :
                        break
                    elif j == n - 1 :
                        count += 1
                        i += 1
        print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 738
---> probID: codeforces_1593_B
---> inputs:
5
100
71345
3259
50555
2050047
---> outputs:
0
3
1
3
2

def B1593 ( ) :
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552983079_6181/main.py", line 59
    self . right = self .
                        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 739
---> probID: geeksforgeeks_1277_A
---> inputs:

---> outputs:
1 2 3 4 5 

def main ( ) :
    import sys
    class Node ( object ) :
        def __init__ ( self , data ) :
            self . data = data
            self . left = self . right = None
        def insert ( self , data ) :
            self . data = data
            self . left = self . right = None
        def insert ( self , data ) :
            self . data = data
            self . right = None
        def append ( self , data ) :
            self . left = self . left
            self . right = self . right
        def append ( self , data ) :
            self . left = self . left
            self . right = self . right
        def append ( self , data ) :
            self . right = self . right
            self . append ( data )
        def append ( self , data ) :
            self . left = self . left
            self . right = self . right
        def append ( self , data ) :
            self . left = self . left
            self . right = self . right
        def append ( self , data ) :
            self . left = self . left
            self . right = self . right
        def append ( self , data ) :
            self . left = self . left
            self . right = self . right
        def append ( self , data ) :
            self . left = self . left
            self . right = self . right
        def append ( self , data ) :
            self . left = self . left
            self . right = self . right
        def append ( self , data ) :
            self . left = self . left
            self . right = self . right
        def append ( self , data ) :
            self . left = self . left
            self . right = self . right
        def append ( self , data ) :
            self . left = self . left
            self . right = self . right
            self . append ( data )
        def append ( self , data ) :
            self . left = self . left
            self . right = self . right
        def append ( self , data ) :
            self . left = self . left
            self . right = self . right
            self . append ( data )
        def append ( self , data ) :
            self . left = self . left
            self . right = self .

---> console_out:
 
DIDN'T MATCH!! :(
 42%|████▏     | 739/1746 [00:17<00:24, 41.77it/s]

-------------------------------------


---> lineNum: 740
---> probID: geeksforgeeks_2710_A
---> inputs:

---> outputs:
geeksgeeks


def GFG ( data , k ) :
    MAX_CHAR = 26
    hash = [ 0 ] * MAX_CHAR
    n = len ( data )
    for c in data :
        hash [ ord ( c ) - ord ( 'a' ) ] += 1
    res = ""
    for c in data :
        if ord ( c ) - ord ( 'a' ) >= k :
            res += c
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 741
---> probID: geeksforgeeks_3533_A
---> inputs:

---> outputs:
Length of Longest Common Substring is 10


def LongestCommonSubStr ( X , Y , m , n ) :
    LCStuff = np . zeros ( ( m + 1 , n + 1 ) )
    result = 0
    for i in range ( 0 , m + 1 ) :
        for j in range ( 0 , n + 1 ) :
            if i == 0 or j == 0 :
                LCStuff [ i ] [ j ] = 0
            elif X [ i - 1 ] == Y [ j - 1 ] :
                LCStuff [ i ] [ j ] = LCStuff [ i - 1 ] [ j - 1 ] + 1
                result = max ( result , LCStuff [ i ] [ j ] )
            else :
                LCStuff [ i ] [ j ] = 0
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 742
---> probID: geeksforgeeks_1502_A
---> inputs:

---> outputs:
Max occurring digit is 5


def count_occurrences ( x , d ) :
    count = 0
    while x > 0 :
        if x % 10 == d :
            count += 1
        x = x // 10
    return count
    def max_occurring ( x ) :
        if x < 0 :
            x = - x
        return 0
    def max_occurring ( x ) :
        if x < 0 :
            x = - x
        return 0
    def max_occurring ( x ) :
        count = count_occurrences ( x , d )
        if count >= max_occurring :
            max_occurring = count
            result = d
        return result
    def main ( ) :
        x = 1223355
        print ( "Max occurring digit is %d" % max_occurring ( x ) )
    return max_occurring


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 743
---> probID: geeksforgeeks_311_A
---> inputs:

---> outputs:
3 5 7 8 9 

def print_logest_inc_sub_arr ( arr , n ) :
    max , len_ , max_index = 1 , 1 , 0
    for i in range ( 1 , n ) :
        if arr [ i ] > arr [ i - 1 ] :
            len_ += 1
        else :
            if max < len_ :
                max = len_
                max_index = i - max
            len_ = 1
    if max < len_ :
        max = len_
        max_index = n - max
    for i in range ( max_index , max + max_index ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 744
---> probID: codeforces_58_B
---> inputs:
10
---> outputs:
10 5 1

def main ( ) :
    import sys
    import os
    import os
    import sys
    import subprocess
    import subprocess
    try :
        n = int ( sys . stdin . readline ( ) )
    except :
        pass
    print ( n , file = sys . stderr )
    m = n
    for i in range ( n - 1 , 0 , - 1 ) :
        if m % i == 0 :
            print ( i , file = sys . stderr )
            m = i


---> console_out:
 
DIDN'T MATCH!! :(
 43%|████▎     | 744/1746 [00:17<00:23, 42.07it/s]

-------------------------------------


---> lineNum: 745
---> probID: codeforces_811_B
---> inputs:
5 5
5 4 3 2 1
1 5 3
1 3 1
2 4 3
4 4 4
2 5 3
---> outputs:
Yes
No
Yes
Yes
No

def main ( ) :
    import string
    import math
    import io
    import sys
    t = 1
    for t1 in range ( t ) :
        n = math . pi
        m = math . pi
        p = list ( range ( n ) )
        hash = [ 0 ] * ( n + 1 )
        for i in range ( n ) :
            p [ i ] = math . pi
            hash [ i ] = p [ i ]
        for i in range ( m ) :
            l = math . pi
            r = math . pi
            x = math . pi
            l -= 1
            r -= 1
            x -= 1
            ind = x
            if ind < l or ind > r :
                print ( "Yes" )
            else :
                hash1 = { }
                for j in range ( l ) :
                    hash1 [ p [ j ] ] += 1
                for j in range ( r + 1 , n ) :
                    hash1 [ p [ j ] ] += 1
                cnt = 0
                for j in range ( 1 , n + 1 ) :
                    if hash1 [ j ] == 0 :
                        cnt += 1
                    if j == hash [ x ] :
                        break
                dif1 = ind - l + 1
                if dif1 != cnt :
                    print ( "No" )
                else :
                    print ( "Yes" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 746
---> probID: geeksforgeeks_3778_A
---> inputs:

---> outputs:
Maximum sum is: 25


def Max_Sum ( a , n ) :
    import math
    b = [ 0 ] * n
    S = 0
    res = 0
    for i in range ( n ) :
        b [ i ] = res
        res += a [ i ]
        S += a [ i ]
        res = max ( res , - S )
    ans = S
    ans = max ( ans , res )
    g = 0
    for i in range ( n - 1 , - 1 , - 1 ) :
        g -= a [ i ]
        ans = max ( ans , g + b [ i ] )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 747
---> probID: codeforces_1452_A
---> inputs:
5
5 5
3 4
7 1
0 0
2 0
---> outputs:
10
7
13
0
3

def A1452 ( ) :
    import sys
    try :
        t = sys . maxsize
    except AttributeError :
        pass
    while t > 0 :
        a = [ sys . maxsize ]
        a . sort ( )
        if a [ 0 ] == a [ 1 ] :
            print ( 2 * a [ 0 ] )
        else :
            print ( 2 * a [ 1 ] - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 748
---> probID: geeksforgeeks_2945_A
---> inputs:

---> outputs:
geeksrofgeeks

def GFG ( x ) :
    n = ( len ( x ) - x ) // 2
    for i in range ( n ) :
        print ( i , end = ' ' )
    for i in range ( n + x - 1 , - 1 , - 1 ) :
        print ( i , end = ' ' )
    for i in range ( n + x , len ( x ) ) :
        print ( i , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 749
---> probID: geeksforgeeks_2859_A
---> inputs:

---> outputs:
Minimum number of deletions =  8


def GFG ( data ) :
    n = len ( data )
    L = np . zeros ( ( n , n ) )
    for i in range ( n ) :
        L [ i ] [ i ] = 1
    for cl in range ( 2 , n + 1 ) :
        for i in range ( n - cl + 1 ) :
            j = i + cl - 1
            if data [ i ] == data [ j ] and cl == 2 :
                L [ i ] [ j ] = 2
            elif data [ i ] == data [ j ] :
                L [ i ] [ j ] = L [ i + 1 ] [ j - 1 ] + 2
            else :
                L [ i ] [ j ] = max ( L [ i ] [ j - 1 ] , L [ i + 1 ] [ j ] )
    return L [ 0 ] [ n - 1 ]
def minimumNumberOfDeletions ( data ) :
    n = len ( data )
    data = lps ( data )
    return ( n - data )


---> console_out:
 
DIDN'T MATCH!! :(
 43%|████▎     | 749/1746 [00:17<00:23, 42.30it/s]

-------------------------------------


---> lineNum: 750
---> probID: geeksforgeeks_561_A
---> inputs:

---> outputs:
0


def GFG ( n ) :
    if ( n & ( n - 1 ) ) == 0 :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 751
---> probID: codeforces_1213_B
---> inputs:
5
6
3 9 4 6 7 5
1
1000000
2
2 1
10
31 41 59 26 53 58 97 93 23 84
7
3 2 1 2 3 4 5
---> outputs:
3
0
1
8
2

def test ( ) :
    import sys
    t = sys . maxsize
    while t > 0 :
        n = sys . maxsize
        arr = [ ]
        for i in range ( n ) :
            arr . append ( sys . stdin . read ( ) )
        curr = arr [ n - 1 ]
        c = 0
        for i in range ( n - 2 , - 1 , - 1 ) :
            if arr [ i ] <= curr :
                curr = arr [ i ]
            else :
                c += 1
        print ( c )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 752
---> probID: projecteuler_p187_A
---> inputs:

---> outputs:
17427258

def p187 ( ) :
    import math
    print ( math . pow ( 10 , 8 ) )
    LIMIT = math . pow ( 10 , 8 ) - 1
    def run ( ) :
        count = 0
        primes = math . list_primes ( LIMIT // 2 )
        for i , sqrt in enumerate ( primes ) :
            end = math . find ( LIMIT // primes [ i ] , i )
            if end >= 0 :
                end += 1
            else :
                end = - end - 1
            count += end - i
        return str ( count )
    return run


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552983409_2172/main.py", line 20
    return dp [ pos ] [ cnt ] [ tight ] [ nonz ] = ans
                                                 ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 753
---> probID: geeksforgeeks_2098_A
---> inputs:

---> outputs:
17


def count ( pos , cnt , tight , nonz , num ) :
    import sys
    if pos == len ( num ) :
        if cnt == K :
            return 1
        return 0
    if dp [ pos ] [ cnt ] [ tight ] [ nonz ] != - 1 :
        return dp [ pos ] [ cnt ] [ tight ] [ nonz ]
    ans = 0
    limit = ( ( 9 if tight != 0 else num [ pos ] ) )
    for dig in range ( 0 , limit + 1 ) :
        curr_cnt = cnt
        if dig == d :
            if d != 0 or ( d == 0 and nonz != 0 ) :
                curr_cnt += 1
        curr_tight = tight
        if dig < num [ pos ] :
            curr_tight = 1
        ans += count ( pos + 1 , curr_cnt , curr_tight , ( 1 if dig != 0 else 0 ) , num )
    return dp [ pos ] [ cnt ] [ tight ] [ nonz ] = ans
def solve ( x ) :
    num = [ ]
    while x != 0 :
        num . append ( x % 10 )
        x //= 10
    num . reverse ( )
    for i in range ( M ) :
        for j in range ( M ) :
            for k in range ( 2 ) :
                for l in range ( 2 ) :
                    dp [ i ] [ j ] [ k ] [ l ] = - 1
        return count ( 0 , 0 , 0 , 0 , 0 , num )
    def main ( args ) :
        L , R = 11 , 100
        d = 2 , K = 1
        print ( solve ( R ) - solve ( L - 1 ) , end = ' ' )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 754
---> probID: codeforces_514_A
---> inputs:
27
---> outputs:
22

def main ( args ) :
    import math
    import random
    data = [ ]
    x = random . randint ( 0 , len ( args ) )
    while x > 0 :
        r = x % 10
        if 9 - r < r :
            if x // 10 == 0 and 9 - r == 0 :
                data . append ( r )
            else :
                data . append ( 9 - r )
        else :
            data . append ( r )
        x = x // 10
    pow = 0
    new_number = 0
    for i in data :
        new_number = new_number + i * int ( math . pow ( 10 , pow ) )
        pow += 1
    print ( new_number )


---> console_out:
 
DIDN'T MATCH!! :(
 43%|████▎     | 754/1746 [00:17<00:23, 42.28it/s]

-------------------------------------


---> lineNum: 755
---> probID: geeksforgeeks_5076_A
---> inputs:

---> outputs:
Peaks : 10 7 5 
Troughs : 5 5 3 

def is_peak ( arr , n , num , i , j ) :
    import sys
    if i >= 0 and arr [ i ] > num :
        return False
    if j < n and arr [ j ] > num :
        return False
    return True
def isrough ( arr , n , num , i , j ) :
    if i >= 0 and arr [ i ] < num :
        return False
    if j < n and arr [ j ] < num :
        return False
    return True
def print_peaks_toughs ( arr , n ) :
    sys . stdout . write ( 'Peaks : ' )
    for i in range ( n ) :
        if is_peak ( arr , n , arr [ i ] , i - 1 , i + 1 ) :
            sys . stdout . write ( '%d ' % arr [ i ] )
    sys . stdout . write ( '' )
    sys . stdout . write ( 'Troughs : ' )
    for i in range ( n ) :
        if isrough ( arr , n , arr [ i ] , i - 1 , i + 1 ) :
            sys . stdout . write ( '%d ' % arr [ i ] )
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 756
---> probID: geeksforgeeks_1173_A
---> inputs:

---> outputs:
30 is positive
-20 is negative
0 is zero


def GFG ( i ) : return 1 + ( i >> 31 ) - ( - i >> 31 )
def check ( n ) :
    s = [ "negative" , "zero" , "positive" ]
    val = index ( n )
    print ( "%d is %s" % ( n , s [ val ] ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 757
---> probID: geeksforgeeks_2932_A
---> inputs:

---> outputs:
3


def GFG ( a , n , x ) :
    count = 0
    for i in range ( n ) :
        if a [ i ] == x :
            count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 758
---> probID: geeksforgeeks_1807_A
---> inputs:

---> outputs:
YES


def is_num_balanced ( num ) :
    import string
    num = "%d" % num
    ch_arr = list ( str )
    hs = set ( )
    for ch in ch_arr :
        hs . add ( ch )
    str_len = len ( str )
    hs_len = len ( hs )
    if hs_len <= str_len // 2 or hs_len == str_len :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 759
---> probID: geeksforgeeks_4836_A
---> inputs:

---> outputs:
Yes
No
No


def GFG ( n ) :
    if n <= 1 :
        return False
    if n <= 3 :
        return True
    if n % 2 == 0 or n % 3 == 0 :
        return False
    for i in range ( 5 , n ** 2 + 6 ) :
        if n % i == 0 or n % ( i + 2 ) == 0 :
            return False
    return True if is_prime ( n ) else False


---> console_out:
 
DIDN'T MATCH!! :(
 43%|████▎     | 759/1746 [00:17<00:23, 42.68it/s]

-------------------------------------


---> lineNum: 760
---> probID: projecteuler_p065_A
---> inputs:

---> outputs:
272

def p065 ( ) :
    import math
    print ( math . factorial ( ) )
    def run ( ) :
        n = 1
        d = 0
        for i in range ( 99 , - 1 , - 1 ) :
            temp = math . pow ( continued_fraction_term ( i ) , n ) + d
            d = n
            n = temp
        sum = 0
        while not n :
            divrem = n // 2
            sum += divrem [ 1 ]
            n = divrem [ 0 ]
        return str ( sum )
    def continued_fraction_term ( i ) :
        if i == 0 :
            return 2
        elif i % 3 == 2 :
            return i // 3 * 2 + 2
        else :
            return 1
    return run


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 761
---> probID: geeksforgeeks_2334_A
---> inputs:

---> outputs:
1020


def GFG ( a , b ) :
    if b == 0 :
        return a
    else :
        return __gcd ( b , a % b )
def LCM ( x , y , z ) :
    ans = ( ( x * y ) / ( __gcd ( x , y ) ) )
    return ( ( z * ans ) / ( __gcd ( ans , z ) ) )
def findDivisible ( n , x , y , z ) :
    lcm = LCM ( x , y , z )
    ndigitnumber = int ( pow ( 10 , n - 1 ) )
    reminder = ndigitnumber % lcm
    if reminder == 0 :
        return ndigitnumber
    ndigitnumber += lcm - reminder
    if ndigitnumber < pow ( 10 , n ) :
        return ndigitnumber
    else :
        return 0
def main ( ) :
    n , x , y , z = 4 , 2 , 3 , 5
    res = findDivisible ( n , x , y , z )
    if res :
        print ( res )
    else :
        print ( 'Not possible' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 762
---> probID: geeksforgeeks_1101_A
---> inputs:

---> outputs:
2 3 

def GFG ( ) :
    MAXN = 100001
    prime = [ True ] * MAXN
    def SieveOfEratosthenes ( ) :
        for i in range ( MAXN ) :
            prime [ i ] = True
        prime [ 0 ] = False
        prime [ 1 ] = False
        for p in range ( 2 , MAXN ) :
            if prime [ p ] == True :
                for i in range ( p * p , MAXN , p ) :
                    prime [ i ] = False
    def common_prime ( a , b ) :
        gcd = int ( __gcd ( a , b ) )
        for i in range ( 2 , ( gcd ) + 1 ) :
            if prime [ i ] and gcd % i == 0 :
                print ( i , end = ' ' )
    def __gcd ( a , b ) :
        if not a :
            return b
        return __gcd ( b % a , a )
    def main ( ) :
        SieveOfEratosthenes ( )
        a , b = 6 , 12
        common_prime ( a , b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 763
---> probID: aizu_p01614_A
---> inputs:
3
4 5 15
2 3 4
7 8 39
2
6
8
---> outputs:
19
39

def main ( ) :
    import sys
    import numpy as np
    import math
    import numpy . inf
    import numpy . sup as sup
    import numpy . random
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    import numpy . random as pi
    p = pi / pi
    p = pi / 2
    for i in range ( pi ) :
        p [ i ] = pi [ i ]
    return p


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 764
---> probID: atcoder_AGC014_D
---> inputs:
2
1 2
---> outputs:
Second

def main ( ) :
    import sys
    import os
    g = [ ]
    def max_matching ( v , p ) :
        a = 0
        o = 0
        for w in g [ v ] :
            if w == p :
                continue
            r = max_matching ( w , v )
            a += r // 2
            o += r % 2
        return 2 * a + min ( 1 , o ) + 1
    def my_open ( ) :
        out = sys . stdout
        n = len ( g )
        g = [ [ ] ] * n
        g [ : ] = [ [ ] ] * n
        for i in range ( n - 1 ) :
            a = len ( g [ i ] ) - 1
            b = len ( g [ i ] ) - 1
            g [ a ] . append ( b )
            g [ b ] . append ( a )
        m = max_matching ( 0 , - 1 ) // 2
        out . write ( 'Second' if 2 * m == n else 'First' )
        out . close ( )
    import os
    import sys
    import os
    import subprocess
    import shlex
    try :
        line = sys . stdin . readline ( )
    except :
        pass
    else :
        try :
            line = shlex . split ( line )
            return line
        except :
            pass
    def my_open ( ) :
        return os . path . join ( os . path . dirname ( sys . argv [ 0 ] ) , 'first.txt' )
    def my_open ( ) :
        data = ''
        try :
            data = open ( ) . read ( )
        except :
            pass
        return data
    return my_open ( )


---> console_out:
 
DIDN'T MATCH!! :(
 44%|████▍     | 764/1746 [00:18<00:23, 42.55it/s]

-------------------------------------


---> lineNum: 765
---> probID: codeforces_1647_B
---> inputs:
5
3 3
100
011
011
3 3
110
111
110
1 5
01111
4 5
11111
01010
01000
01000
3 2
11
00
11
---> outputs:
YES
NO
YES
NO
YES

def main ( ) :
    import sys
    N , M = 205 , 205
    grid = np . zeros ( ( N , M ) )
    def solve ( s ) :
        t = s . find ( ' ' )
        while t > 0 :
            t -= 1
        return t
    def solve ( s ) :
        n , m = s . split ( ' ' )
        for i in range ( n ) :
            line = s [ i + 1 : ]
            for j in range ( m ) :
                grid [ i ] [ j ] = line [ j ] - '0'
        return grid
    for i in range ( n - 1 ) :
        for j in range ( m - 1 ) :
            sum = grid [ i ] [ j ] + grid [ i + 1 ] [ j ] + grid [ i ] [ j + 1 ] + grid [ i + 1 ] [ j + 1 ]
            if sum == 3 :
                print ( 'NO' )
                return
    print ( 'YES' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 766
---> probID: codeforces_721_B
---> inputs:
5 2
cba
abc
bb1
abC
ABC
abc
---> outputs:
1 15

def main ( ) :
    import string
    import sys
    tc = 1
    while tc > 0 :
        n = len ( sys . stdin . readline ( ) )
        k = len ( sys . stdin . readline ( ) )
        s = [ ]
        min , max = 0 , 0
        for i in range ( n ) :
            s = s . strip ( )
            s . append ( len ( s ) )
        p = sys . stdin . readline ( )
        plen = len ( p )
        kk = k
        s . sort ( )
        for i in range ( n ) :
            if s [ i ] == plen :
                min += 1
                break
            if k > 0 :
                k -= 1
                min += 1
            if k == 0 :
                k = kk
                min += 5
        k = kk
        for i in range ( n - 1 ) :
            if ( s [ i ] == plen and s [ i + 1 ] > plen ) :
                max += 1
                break
            if k > 0 :
                k -= 1
                max += 1
            if k == 0 :
                k = kk
                max += 5
        if s [ n - 1 ] == plen :
            max += 1
        print ( min , max )
    sys . exit ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 767
---> probID: codeforces_61_B
---> inputs:
Iran_
Persian;
W_o;n;d;e;r;f;u;l;
7
WonderfulPersianIran
wonderful_PersIAN_IRAN;;_
WONDERFUL___IRAN__PERSIAN__;;
Ira__Persiann__Wonderful
Wonder;;fulPersian___;I;r;a;n;
__________IranPersianWonderful__________
PersianIran_is_Wonderful
---> outputs:
ACC
ACC
ACC
WA
ACC
ACC
WA

def main ( ) :
    import string
    with open ( 'test.txt' ) as inp :
        word1 = inp . readline ( ) . strip ( ) . lower ( )
        word2 = inp . readline ( ) . strip ( ) . lower ( )
        word3 = inp . readline ( ) . strip ( ) . lower ( )
        perm1 = word1 + word2 + word3
        perm2 = word1 + word3 + word2
        perm3 = word2 + word1 + word3
        perm4 = word2 + word3 + word1
        perm5 = word3 + word2 + word1
        perm6 = word3 + word1 + word2
        students = len ( inp )
        inp . readline ( )
        for i in range ( students ) :
            case = inp . readline ( ) . strip ( ) . lower ( )
            if case in [ perm1 , perm2 , perm3 , perm4 , perm5 , perm6 ] :
                print ( 'ACC' )
            else :
                print ( 'WA' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 768
---> probID: codejam_14_11
---> inputs:
3
3 2
01 11 10
11 00 10
2 3
101 111
010 001
2 2
01 10
10 01

---> outputs:
Case #1: 1
Case #2: NOT POSSIBLE
Case #3: 0


def main ( ) :
    import string
    import random
    import sys
    try :
        random . seed ( 0 )
    except :
        pass
    else :
        print ( "Case #%d: %s" % ( caze , "NOT POSSIBLE" if len ( sys . argv ) > 1 else ans ) )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552983784_6395/main.py", line 72
    np . testing = np . testing as np . testing
                                ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 769
---> probID: leetcode_695_A
---> inputs:

---> outputs:
6

def max_area_of_land ( grid ) :
    import numpy as np
    import numpy as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    np . testing = np . testing as np . testing


---> console_out:
 
DIDN'T MATCH!! :(
 44%|████▍     | 769/1746 [00:18<00:23, 42.31it/s]

-------------------------------------


---> lineNum: 770
---> probID: geeksforgeeks_5288_A
---> inputs:

---> outputs:
40


def GFG ( x , y , n ) :
    sum1 = int ( ( pow ( x , 2 ) * ( pow ( x , 2 * n ) - 1 ) ) / ( pow ( x , 2 ) - 1 ) )
    sum2 = int ( ( x * y * ( pow ( x , n ) * pow ( y , n ) - 1 ) ) / ( x * y - 1 ) )
    return sum1 + sum2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 771
---> probID: geeksforgeeks_1614_A
---> inputs:

---> outputs:
8


def GFG ( n ) :
    import sys
    n -= 1
    sum = 0
    sum += ( n * ( n + 1 ) ) / 2
    sum += ( n * ( n + 1 ) * ( 2 * n + 1 ) ) / 6
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 772
---> probID: geeksforgeeks_3145_A
---> inputs:

---> outputs:
21


def get_sum ( n ) :
    import math
    sum = 0
    while n != 0 :
        sum = sum + n % 10
        n = n // 10
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552983877_6387/main.py", line 4
    
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 773
---> probID: geeksforgeeks_3146_A
---> inputs:

---> outputs:
21


def get_sum ( n ) :
    import math
    for sum in [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29 , 29

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 774
---> probID: geeksforgeeks_5092_A
---> inputs:

---> outputs:
Original List: 
15 16 6 7 17 
Modified List: 
7 17 

def GFG ( head_ref , new_data ) :
    class Node ( object ) :
        data = new_data
        next = ( head_ref , )
    def push ( head_ref , new_data ) :
        new_node = Node ( )
        new_node . data = new_data
        new_node . next = ( head_ref , )
        ( head_ref , ) = new_node
        return head_ref
    def is_prime ( n ) :
        if n <= 1 :
            return False
        if n <= 3 :
            return True
        if n % 2 == 0 or n % 3 == 0 :
            return False
        for i in range ( 5 , n ** 2 + 1 ) :
            if n % i == 0 or n % ( i + 2 ) == 0 :
                return False
        return True
    def delete_non_prime_nodes ( head_ref ) :
        ptr = head_ref
        while ptr and not is_prime ( ptr . data ) :
            temp = ptr
            ptr = ptr . next
        head_ref = ptr
        if not ptr :
            return None
        curr = ptr . next
        while curr :
            if not is_prime ( curr . data ) :
                ptr . next = curr . next
                curr = ptr . next
            else :
                ptr = curr
                curr = curr . next
        return head_ref
    def print_list ( head ) :
        while head :
            print ( head . data , end = ' ' )
            head = head . next
    def main ( args ) :
        head = None
        head = push ( head , 17 )
        head = push ( head , 7 )
        head = push ( head , 6 )
        head = push ( head , 16 )
        head = push ( head , 15 )
        print ( 'Original List: ' , end = ' ' )
        print_list ( head )
        head = delete_non_prime_nodes ( head )
        print ( '\nModified List: ' , end = ' ' )
        print_list ( head )
    return head_ref


---> console_out:
 
DIDN'T MATCH!! :(
 44%|████▍     | 774/1746 [00:18<00:22, 42.34it/s]

-------------------------------------


---> lineNum: 775
---> probID: aizu_p01074_A
---> inputs:
3 7 3
0 1 1 1
0 1 1 2
1 1 3 4
1 1 1 1
1 2 1 2
2 1 1 3
2 2 2 1
---> outputs:
9

def main ( ) :
    import sys
    import random
    try :
        N = int ( sys . stdin . read ( ) )
        M = int ( sys . stdin . read ( ) )
        L = int ( sys . stdin . read ( ) )
    except ValueError :
        pass
    cs = [ [ ] for i in range ( N * M ) ]
    for D in range ( M ) :
        A = random . randint ( - 1 , 1 )
        K = random . randint ( 0 , 1 )
        T = random . randint ( 0 , 1 )
        start = D * N + A
        cs [ start ] . append ( ( K << 16 ) | T )
    dp = np . zeros ( ( L + 1 , N * M + 1 ) )
    for i in range ( N * M ) :
        for j in range ( L ) :
            for c in cs [ i ] :
                len_ = c >> 16
                t = c & 0xFFFF
                dp [ j + 1 ] [ i + len_ ] = max ( dp [ j + 1 ] [ i + len_ ] , dp [ j ] [ i ] + t )
        for j in range ( 0 , L + 1 ) :
            dp [ j ] [ i + 1 ] = max ( dp [ j ] [ i + 1 ] , dp [ j ] [ i ] )
    ans = 0
    for i in range ( 0 , L + 1 ) :
        ans = max ( ans , dp [ i ] [ N * M ] )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 776
---> probID: atcoder_AGC002_B
---> inputs:
3 2
1 2
2 3
---> outputs:
2

def main ( ) :
    import sys
    class Main ( object ) :
        def __init__ ( self ) :
            self . bolls = 1
            self . is_red = False
        def add ( self , src ) :
            self . is_red |= src . is_red
            self . bolls += 1
            self . bolls -= 1
            if not self . bolls :
                self . is_red = False
        def main ( self ) :
            n = self . n
            m = self . m
            boxs = [ ]
            for i in range ( n ) :
                boxs . append ( Box ( ) )
            boxs [ 0 ] . is_red = True
            for i in range ( m ) :
                x = self . n
                y = self . m
                boxs [ y - 1 ] . add ( boxs [ x - 1 ] )
            print ( sum ( boxs ) )
    return Main ( )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552983975_4794/main.py", line 19
    max = max max
              ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 777
---> probID: aizu_p02052_A
---> inputs:
3 3
B.B
..B
.BB
---> outputs:
4

def main ( ) :
    import string
    try :
        h = int ( sys . stdin . readline ( ) )
        w = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        list = [ ]
        max = 0
        for i in range ( h ) :
            arr = list [ i ]
            for j in range ( w ) :
                if arr [ j ] == '.' :
                    continue
                for x in list :
                    hh = x // w
                    ww = x % w
                    max = max max
                    max = max ( abs ( i - hh ) + abs ( j - ww ) )
            list . append ( i * w + j )
    print ( max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 778
---> probID: geeksforgeeks_3350_A
---> inputs:

---> outputs:
abcxdefy


def min_replacement ( data ) :
    if len ( data ) > 26 :
        print ( 'IMPOSSIBLE' )
    else :
        hash = [ 0 ] * 26
        for c in data :
            hash [ ord ( c ) - ord ( 'a' ) ] += 1
        count = 0
        for c in data :
            if ord ( c ) > 1 :
                for j in range ( 26 ) :
                    if hash [ j ] == 0 :
                        hash [ ord ( c ) - ord ( 'a' ) ] -= 1
                        c = c [ : i ] + chr ( j + ord ( 'a' ) ) + c [ i + 1 : ]
                        hash [ j ] += 1
                        break
        print ( c )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 779
---> probID: geeksforgeeks_1286_A
---> inputs:

---> outputs:
12


def longest_subseq ( s ) :
    n = len ( s )
    pre_count_0 = [ 0 ] * ( n + 2 )
    pre_count_1 = [ 0 ] * ( n + 1 )
    post_count_0 = [ 0 ] * ( n + 2 )
    pre_count_0 [ 0 ] = 0
    post_count_0 [ n + 1 ] = 0
    pre_count_1 [ 0 ] = 0
    pre_count_1 [ n + 2 ] = 0
    for j in range ( 1 , n + 1 ) :
        pre_count_0 [ j ] = pre_count_0 [ j - 1 ]
        pre_count_1 [ j ] = pre_count_1 [ j - 1 ]
        post_count_0 [ n - j + 1 ] = post_count_0 [ n - j + 2 ]
        if s [ j - 1 ] == '0' :
            pre_count_0 [ j ] += 1
        else :
            pre_count_1 [ j ] += 1
        if s [ n - j ] == '0' :
            post_count_0 [ n - j + 1 ] += 1
    if pre_count_0 [ n ] == n or pre_count_0 [ n ] == 0 :
        return n
    ans = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( i , n + 1 ) :
            ans = max ( pre_count_0 [ i - 1 ] + pre_count_1 [ j ] - pre_count_1 [ i - 1 ] + post_count_0 [ j + 1 ] , ans )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 45%|████▍     | 779/1746 [00:18<00:22, 42.18it/s]

-------------------------------------


---> lineNum: 780
---> probID: geeksforgeeks_549_A
---> inputs:

---> outputs:
Factor Power
2	3
3	2
5	1


def GFG ( N , s ) :
    prime = [ False ] * ( N + 1 )
    for i in range ( 2 , N + 1 , 2 ) :
        s [ i ] = 2
    for i in range ( 3 , N + 1 , 2 ) :
        if prime [ i ] == False :
            s [ i ] = i
            for j in range ( i , i + 1 , 2 ) :
                if prime [ i * j ] == False :
                    prime [ i * j ] = True
                    s [ i * j ] = i


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 781
---> probID: geeksforgeeks_1380_A
---> inputs:

---> outputs:
4


def longest_substring ( a , n ) :
    hash = np . zeros ( ( n , 10 ) )
    for i in range ( n ) :
        num = a [ i ]
        while num != 0 :
            hash [ i ] [ num % 10 ] = 1
            num //= 10
    longest = np . inf
    count = 0
    for i in range ( n - 1 ) :
        for j in range ( 10 ) :
            if hash [ i ] [ j ] == 1 & hash [ i + 1 ] [ j ] == 1 :
                count += 1
                break
        if j == 10 :
            longest = max ( longest , count + 1 )
            count = 0
    longest = max ( longest , count + 1 )
    return longest


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552984095_8744/main.py", line 8
    print ( ' % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 782
---> probID: codeforces_1196_A
---> inputs:
4
1 3 4
1 10 100
10000000000000000 10000000000000000 10000000000000000
23 34 45
---> outputs:
4
55
15000000000000000
51

def _1196A_ThreePilesOfCandies ( ) :
    import sys
    try :
        test = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        print ( ' % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d SPACETOKEN % d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d % SPACETOKEN d

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 783
---> probID: geeksforgeeks_3567_A
---> inputs:

---> outputs:
1


def Divisors ( x ) :
    import math
    c = 0
    v = [ ]
    while x % 2 == 0 :
        c += 1
        x //= 2
    v . append ( c )
    c = 0
    while x % 3 == 0 :
        c += 1
        x //= 3
    v . append ( c )
    c = 0
    while x % 7 == 0 :
        c += 1
        x //= 7
    v . append ( c )
    v . append ( x )
    return v


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 784
---> probID: geeksforgeeks_122_A
---> inputs:

---> outputs:
4


def GFG ( a , b , v , vis ) :
    vis [ a ] = 1
    c += 1
    for i in v [ a ] :
        if vis [ i ] == 0 and i != b :
            dfs ( i , b , v , vis )
    def Calculate ( v ) :
        vis = [ 0 ] * ( n + 1 )
        vis [ a ] = 0
        c = 0
        dfs ( a , b , v , vis )
        ans1 = n - c - 1
        vis [ a ] = 0
        c = 0
        dfs ( b , a , v , vis )
        ans2 = n - c - 1
        print ( ans1 * ans2 , end = '\n' )
    def main ( ) :
        n = 7
        m = 7
        a = 3
        b = 5
        edges = [ [ 1 , 2 ] , [ 2 , 3 ] , [ 3 , 4 ] , [ 4 , 5 ] , [ 5 , 6 ] , [ 6 , 7 ] , [ 7 , 5 ] ]
        v = [ [ ] * ( n + 1 ) for i in range ( 0 , n + 1 ) ]
        for i in range ( m ) :
            v [ i ] = [ ]
        for i in range ( 0 , m ) :
            v [ i ] [ 0 ] . append ( edges [ i ] [ 1 ] )
            v [ i ] [ 1 ] . append ( edges [ i ] [ 0 ] )
        Calculate ( v )
    return '' . join ( v )


---> console_out:
 
DIDN'T MATCH!! :(
 45%|████▍     | 784/1746 [00:18<00:23, 41.78it/s]

-------------------------------------


---> lineNum: 785
---> probID: codeforces_1143_B
---> inputs:
390
---> outputs:
216

def B_Nirvana ( ) :
    import sys
    import string
    import string
    import random
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import math
    from math import pi
    from math import radians
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 786
---> probID: codeforces_379_A
---> inputs:
4 2
---> outputs:
7

def main ( ) :
    import sys
    try :
        a = int ( sys . stdin . read ( ) )
        b = int ( sys . stdin . read ( ) )
        res = a
        while a >= b :
            res += ( a // b )
            a = ( a // b ) + ( a % b )
        print ( res )
    except :
        print ( 'No such file' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 787
---> probID: geeksforgeeks_1317_A
---> inputs:

---> outputs:
7


def GFG ( n ) :
    import math
    sum = 0
    while n != 0 :
        sum = sum + n % 10
        n = n // 10
    return sum
    def largestDigitSumdivisior ( n ) :
        res = 0
        for i in range ( 1 , math . sqrt ( n ) + 1 ) :
            if n % i == 0 :
                res = max ( res , sum ( i ) )
                res = max ( res , sum ( n // i ) )
        return res
    def main ( args ) :
        n = 14
        print ( largestDigitSumdivisior ( n ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 788
---> probID: codeforces_86_A
---> inputs:
3 7
---> outputs:
20

def power ( a ) :
    res = 0
    while a > 0 :
        res += 1
        a = a // 10
    return res
    def mult ( a ) :
        pow = power ( a )
        max = 0
        for j in range ( pow ) :
            max = max * 10 + 9
        return a * ( max - a )
    def main ( ) :
        l = int ( a )
        r = int ( a )
        res = 0
        maxxes = [ ]
        temp = 0
        for i in range ( 10 ) :
            temp = temp * 10 + 9
            maxxes . append ( temp / 2 * ( temp - temp / 2 ) )
        res = max ( mult ( l ) , res )
        res = max ( mult ( r ) , res )
        temp = 0
        for i in range ( 10 ) :
            temp = temp * 10 + 9
            if l <= temp / 2 <= r :
                res = max ( maxxes [ i ] , res )
        print ( res )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 789
---> probID: aizu_p02255_A
---> inputs:
6
5 2 4 6 1 3
---> outputs:
5 2 4 6 1 3
2 5 4 6 1 3
2 4 5 6 1 3
2 4 5 6 1 3
1 2 4 5 6 3
1 2 3 4 5 6

def main ( * args ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    a = [ None ] * n
    print ( a )
    for i in range ( 1 , n ) :
        key = a [ i ]
        j = i - 1
        while j >= 0 and a [ j ] > key :
            a [ j + 1 ] = a [ j ]
            j -= 1
        a [ j + 1 ] = key
        print ( a )
    def print_array ( a ) :
        for i in range ( len ( a ) - 1 ) :
            print ( a [ i ] , end = ' ' )
        print ( a [ - 1 ] )


---> console_out:
 
DIDN'T MATCH!! :(
 45%|████▌     | 789/1746 [00:18<00:22, 41.89it/s]

-------------------------------------


---> lineNum: 790
---> probID: geeksforgeeks_861_A
---> inputs:

---> outputs:
6 10 14 15 21 22 26 

def is_perfect_square ( x ) :
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    math
    import math
    import math
    import math
    import math
    import math
    import math
    math
    import math
    import math
    math
    import math
    math
    import math
    math
    import math
    math
    import math
    math
    import math
    math
    import math
    math
    math = math


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 791
---> probID: codeforces_290_B
---> inputs:
1 1
---> outputs:
0

def main ( ) :
    import sys
    s
    s = s . split ( )
    x = int ( s [ 0 ] )
    y = int ( s [ 1 ] )
    print ( s [ x ] [ y ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 792
---> probID: codeforces_1520_B
---> inputs:
6
1
2
3
4
5
100
---> outputs:
1
2
3
4
5
18

def new_class37 ( ) :
    import sys
    t = sys . maxsize
    p = 1
    while t > 0 :
        n = sys . maxsize
        count = 0
        x = n
        if n < 10 :
            print ( n )
            continue
        while x > 0 :
            count += 1
            x //= 10
        first = 0
        while count > 0 :
            first = first * 10 + 1
            count -= 1
        sum = 0
        if first <= n :
            sum += n / first
        first //= 10
        while first > 0 :
            sum += 9
            first //= 10
        print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 793
---> probID: geeksforgeeks_897_A
---> inputs:

---> outputs:
Equivalent


def div_sum ( n ) :
    import math
    sum = 1
    for i in range ( 2 , n + 1 ) :
        if n % i == 0 :
            sum = sum + i + n / i
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 794
---> probID: geeksforgeeks_516_A
---> inputs:

---> outputs:
3


def find_y ( x ) :
    import math
    if x > 2 :
        return x - 2
    return x + 2


---> console_out:
 
DIDN'T MATCH!! :(
 45%|████▌     | 794/1746 [00:18<00:22, 42.00it/s]

-------------------------------------


---> lineNum: 795
---> probID: geeksforgeeks_4018_A
---> inputs:

---> outputs:
2


def mod_fact ( n , m ) :
    mod = 1000000007
    result = 1
    for i in range ( 1 , m + 1 ) :
        result = ( result * i ) % mod
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 796
---> probID: aizu_p02260_A
---> inputs:
6
5 6 4 2 1 3
---> outputs:
1 2 3 4 5 6
4

def main ( ) :
    import sys
    import string
    try :
        a = open ( "/dev/urandom" )
        n = int ( a . read ( ) )
    except :
        print ( "Error opening file" )
        return
    A = [ None ] * n
    for i in range ( n ) :
        A [ i ] = a . read ( )
    minj = None
    count = 0
    for i in range ( 0 , n - 2 + 1 ) :
        minj = i
        c = 0
        for j in range ( i + 1 , n - 1 + 1 ) :
            if A [ j ] < A [ minj ] :
                minj = j
                c = 1
        if c == 1 :
            x = A [ i ]
            A [ i ] = A [ minj ]
            A [ minj ] = x
            count += 1
    for i in range ( n ) :
        print ( A [ i ] , end = " " )
        if i < n - 1 :
            print ( " " , end = " " )
    print ( )
    print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 797
---> probID: aizu_p00492_A
---> inputs:
8 4
0 1 0 1 0 1 1 1
0 1 1 0 0 1 0 0
1 0 1 0 1 1 1 1
0 1 1 0 1 0 1 0
---> outputs:
64

def main ( ) :
    import sys
    import os
    import sys
    w = sys . maxsize
    h = sys . maxsize
    map = np . zeros ( ( h + 2 , w + 2 ) )
    v = np . zeros ( ( h + 2 , w + 2 ) )
    for i in range ( 1 , h + 1 ) :
        for j in range ( 1 , w + 1 ) :
            map [ i ] [ j ] = sys . maxsize == 1
    print ( slove ( 0 , 0 ) )
    def slove ( y , x ) :
        v [ y ] [ x ] = True
        res = 0
        for i in range ( 6 ) :
            ny = y + dy [ i ]
            nx = x + ( dx1 [ i ] if y % 2 == 1 else dx2 [ i ] )
            if not is_ok ( ny , nx ) :
                continue
            if map [ ny ] [ nx ] :
                res += 1
                continue
            if v [ ny ] [ nx ] :
                continue
            res += slove ( ny , nx )
        return res
    def is_ok ( ny , nx ) :
        if 0 <= ny <= h + 1 and 0 <= nx <= w + 1 :
            return True
        return False
    h , w = h , w
    map = np . zeros ( ( h + 2 , w + 2 ) )
    v = np . zeros ( ( h + 2 , w + 2 ) )
    dy = np . zeros ( ( h + 2 , w + 2 ) )
    v [ dy ] = True
    dx1 = np . zeros ( ( h + 2 , w + 2 ) )
    dx2 = np . zeros ( ( h + 2 , w + 2 ) )
    dx2 = np . zeros ( ( h + 2 , w + 2 ) )
    v [ dy ] = True
    v [ dy ] = True
    return map , v


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 798
---> probID: codeforces_847_B
---> inputs:
5
1 3 2 5 4
---> outputs:
1 3 5
2 4

def prepformerge ( ) :
    import sys
    f = sys . stdin
    f . readline ( ) . strip ( ) . split ( ' ' )
    n = int ( f . readline ( ) )
    lists = [ ]
    a = [ 0 ] * ( n + 1 )
    f = open ( f , 'r' )
    for i in range ( 1 , n + 1 ) :
        a [ i ] = int ( f . readline ( ) )
    for i in range ( 1 , n + 1 ) :
        if i == 1 :
            start = [ ]
            start . append ( a [ i ] )
            lists . append ( start )
        else :
            lo = 0
            hi = len ( lists ) - 1
            if lists [ hi ] [ - 1 ] > a [ i ] :
                start = [ ]
                start . append ( a [ i ] )
                lists . append ( start )
            else :
                while lo != hi :
                    mid = ( lo + hi ) // 2
                    if lists [ mid ] [ - 1 ] < a [ i ] :
                        hi = mid
                    else :
                        lo = mid + 1
                lists [ lo ] . append ( a [ i ] )
    for lis in lists :
        for i in lis :
            print ( i , end = ' ' )
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 799
---> probID: geeksforgeeks_1213_A
---> inputs:

---> outputs:
30.634146341463413


def circlearea ( a , b ) :
    if a < 0 or b < 0 :
        return - 1
    A = float ( ( 3.14 * pow ( a , 2 ) * pow ( b , 2 ) ) / ( 4 * ( pow ( a , 2 ) + pow ( b , 2 ) ) ) )
    return A


---> console_out:
 
DIDN'T MATCH!! :(
 46%|████▌     | 799/1746 [00:18<00:22, 42.05it/s]

-------------------------------------


---> lineNum: 800
---> probID: geeksforgeeks_736_A
---> inputs:

---> outputs:
YES


def GFG ( arr , length , s ) :
    for i in range ( 1 , ( pow ( 2 , length ) + 1 ) + 1 ) :
        sum = 0
        for j in range ( length ) :
            if ( ( i >> j ) & 1 ) % 2 == 1 :
                sum += arr [ j ]
        if sum == s :
            print ( "YES" )
            return
    print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 801
---> probID: geeksforgeeks_1941_A
---> inputs:

---> outputs:
ab


def K_string ( s , k ) :
    n = len ( s )
    fre = [ 0 ] * 26
    for c in s :
        fre [ ord ( c ) - ord ( 'a' ) ] += 1
    data = ""
    for i in range ( 26 ) :
        if fre [ i ] % k == 0 :
            x = fre [ i ] // k
            while x != 0 :
                data += chr ( i ) + ord ( 'a' )
                x -= 1
        else :
            return "-1"
    return data


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 802
---> probID: aizu_p00642_A
---> inputs:
1
2
3
0
---> outputs:
1.00000000
1.50000000
2.12500000

def main ( ) :
    import math
    import list
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    math
    import math
    import math
    import math
    math
    import math
    import math
    math
    import math
    import math
    import math
    math
    import math
    if math is None :
        return math
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 803
---> probID: aizu_p00054_A
---> inputs:
1 2 3
2 3 4
5 4 3
4 3 2
---> outputs:
5
24
7
6

def main ( ) :
    import math
    import numpy as np
    import math
    import numpy . random
    import numpy . math as np
    class Main ( object ) :
        def __init__ ( self ) :
            sc = np . random . random ( )
            for a , b , n in np . ndenumerate ( sc ) :
                c = np . float ( ( a / b ) )
                f = [ ]
                idx = c . find ( "." )
                f . append ( np . int ( c [ idx - 1 : idx ] ) )
                for i in range ( 1 , min ( 200 , len ( c [ idx + 1 ] ) + 1 ) ) :
                    f . append ( np . int ( c [ idx + i : idx + i + 1 ] ) )
                res = 0
                for i in range ( 1 , n + 1 ) :
                    res += f [ i ]
                print ( res )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552984618_1053/main.py", line 21
    out :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 804
---> probID: atcoder_AGC029_C
---> inputs:
1
1
---> outputs:
1

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        a = [ ]
        for i in range ( n ) :
            a . append ( sys . stdin . readline ( ) )
    except :
        pass
    nodec = True
    for i in range ( 1 , n ) :
        if a [ i ] <= a [ i - 1 ] :
            nodec = False
    if nodec :
        print ( 1 )
        return
    m = 500
    l , r = 1 , 210000
    mid = 2
    dec = [ 0 ] * m
    out :
        while r - l > 1 :
            mid = ( l + r ) // 2
            dec = [ 1 ] * m
            nout :
                for i in range ( 1 , n ) :
                    if a [ i ] <= a [ i - 1 ] < m :
                        if dec [ a [ i ] - 1 ] < mid :
                            dec [ a [ i ] - 1 ] += 1
                        else :
                            pos = a [ i ] - 1
                            while pos > 0 :
                                dec [ pos - 1 ] += 1
                                for j in range ( pos , m ) :
                                    dec [ j ] = 1
                                if dec [ pos - 1 ] <= mid :
                                    continue
                                pos -= 1
                        l = mid
                        continue
                else :
                    for j in range ( a [ i ] - 1 , m ) :
                        dec [ j ] = 1
            r = mid
        print ( r )


---> console_out:
 
DIDN'T MATCH!! :(
 46%|████▌     | 804/1746 [00:19<00:22, 41.95it/s]

-------------------------------------


---> lineNum: 805
---> probID: aizu_p00605_A
---> inputs:
2 3
5 4 5
1 2 3
3 2 1
3 5
1 2 3 4 5
0 1 0 1 2
0 1 1 2 2
1 0 3 1 1
0 0
---> outputs:
Yes
No

def main ( ) :
    import sys
    f = sys . stdin
    while True :
        try :
            line = None
            lines = f . readline ( ) . strip ( ) . split ( )
        except :
            pass
        else :
            lines = line . split ( )
        N = int ( lines [ 0 ] )
        K = int ( lines [ 1 ] )
        if N == 0 and K == 0 :
            return
        line = f . readline ( ) . strip ( )
        lines = line . split ( )
        bloodAmt = [ 0 ] * K
        for i in range ( K ) :
            bloodAmt [ i ] = int ( lines [ i ] )
        for i in range ( N ) :
            line = f . readline ( ) . strip ( )
            lines = line . split ( )
            for j in range ( K ) :
                bloodAmt [ j ] -= int ( lines [ j ] )
        for i in range ( K ) :
            if bloodAmt [ i ] < 0 :
                print ( "No" )
                break
            if i == K - 1 :
                print ( "Yes" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 806
---> probID: geeksforgeeks_2779_A
---> inputs:

---> outputs:
4


def max_freq ( s , a , b ) :
    import sys
    fre = [ 0 ] * 10
    n = len ( s )
    if a > b :
        temp = a
        a = b
        b = temp
    for c in s :
        fre [ ord ( c ) - ord ( '0' ) ] += 1
    if not fre [ a ] and not fre [ b ] :
        return - 1
    elif fre [ a ] >= fre [ b ] :
        return a
    else :
        return b


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 807
---> probID: geeksforgeeks_1966_A
---> inputs:

---> outputs:
3


def max_zeros ( n ) :
    if n == 0 or ( n & ( n - 1 ) ) == 0 :
        return - 1
    b = 4
    set_bit , prev , i = 1 , 0 , i
    for i in range ( 1 , b * 8 + 1 ) :
        prev += 1
        if n & set_bit == set_bit :
            set_bit = set_bit << 1
            break
        set_bit = set_bit << 1
    max_0 , cur = int ( prev ) , prev
    for j in range ( i + 1 , b * 8 + 1 ) :
        cur += 1
        if n & set_bit == set_bit :
            if max_0 < ( cur - prev - 1 ) :
                max_0 = cur - prev - 1
            prev = cur
        set_bit = set_bit << 1
    return max_0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 808
---> probID: geeksforgeeks_1675_A
---> inputs:

---> outputs:
42.0


def sum_powers_k ( n , k ) :
    import math
    sum , num = 0 , 1
    while num <= n :
        sum += num
        num *= k
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 809
---> probID: geeksforgeeks_817_A
---> inputs:

---> outputs:
[-4.0, -1.6, -1.1428571428571428]


def XandYandZintercept ( A , B , C , D ) :
    import numpy as np
    rslt = np . zeros ( ( 3 , 3 ) )
    x = - D / A
    y = - D / B
    z = - D / C
    rslt [ 0 ] = x
    rslt [ 1 ] = y
    rslt [ 2 ] = z
    return rslt


---> console_out:
 
DIDN'T MATCH!! :(
 46%|████▋     | 809/1746 [00:19<00:22, 42.45it/s]

-------------------------------------


---> lineNum: 810
---> probID: geeksforgeeks_5109_A
---> inputs:

---> outputs:
10
2 1 3 2


def max_sum ( a , n ) :
    import math
    l = [ ]
    s = 0
    for i in range ( n ) :
        s += abs ( a [ i ] )
        if a [ i ] >= 0 :
            continue
        if i == 0 :
            l . append ( i + 1 )
        else :
            l . append ( i + 1 )
            l . append ( i )
    print ( s )
    for i in l :
        print ( i , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552984782_4533/main.py", line 2
    global data
    ^
SyntaxError: name 'data' is parameter and global


-------------------------------------


---> lineNum: 811
---> probID: geeksforgeeks_3067_A
---> inputs:

---> outputs:
Mr%20John%20Smith


def GFG ( data ) :
    global data
    global data
    global data
    global data
    global data
    global data
    global data
    global data
    global data
    global data
    data = [ ]
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    data . append ( data )
    return data


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 812
---> probID: aizu_p01866_A
---> inputs:
5
00001
3
---> outputs:
11101

def main ( ) :
    import string
    class B ( string ) :
        def do_it ( self ) :
            n = len ( self . s )
            data = self . s [ n : ]
            ctr = data . upper ( )
            m = len ( self . s )
            num = n
            s = [ ]
            for c in self . s :
                if m == 0 :
                    s . append ( c )
                elif m < num :
                    if c == '0' :
                        s . append ( 1 )
                        m -= 1
                    else :
                        s . append ( 1 )
                else :
                    if c == '0' :
                        s . append ( 1 )
                    else :
                        s . append ( 0 )
                num -= 1
            print ( s )
    return B


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 813
---> probID: geeksforgeeks_2186_A
---> inputs:

---> outputs:
5


def GFG ( n ) :
    import sys
    m = n
    while n != 0 :
        r = n % 10
        if r > 0 :
            if ( m % r ) != 0 :
                return False
            n //= 10
    return True
    def count ( l , r ) :
        ans = 0
        for i in range ( l , r + 1 ) :
            if check ( i ) :
                ans += 1
        return ans
    def main ( args ) :
        l , r = 10 , 20
        print ( count ( 10 , 20 ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 814
---> probID: codeforces_1225_A
---> inputs:
1 2
---> outputs:
['199 200', '1 2\n']

def main ( agrs ) :
    import sys
    a = sys . stdin . read ( )
    b = sys . stdin . read ( )
    if a == b :
        print ( a * 10 + 1 , ( a * 10 + 2 ) )
    elif a + 1 == b :
        print ( a , b )
    elif a + 1 == b * 10 :
        print ( a , b * 10 )
    else :
        print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 47%|████▋     | 814/1746 [00:19<00:22, 42.33it/s]

-------------------------------------


---> lineNum: 815
---> probID: codeforces_496_A
---> inputs:
3
1 4 6
---> outputs:
5

def python_application115 ( ) :
    import sys
    try :
        num = int ( sys . stdin . readline ( ) )
    except ValueError :
        num = 0
    arr = [ ]
    arra = [ ]
    max_dif = 0
    max_all = 1000000000
    for i in range ( num ) :
        h = sys . stdin . readline ( )
        arr . append ( h )
        arra . append ( h )
    for i in range ( 1 , num - 1 ) :
        for j in range ( len ( arr ) - 1 ) :
            if j == i :
                max_dif = max ( abs ( arr [ j - 1 ] - arr [ j + 1 ] ) , max_dif )
            else :
                max_dif = max ( abs ( arr [ j ] - arr [ j + 1 ] ) , max_dif )
        max_all = min ( max_all , max_dif )
        max_dif = 0
    print ( max_all )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 816
---> probID: codeforces_456_B
---> inputs:
4
---> outputs:
4

def hw19 ( ) :
    import string
    import sys
    try :
        inp = list ( sys . stdin . readlines ( ) )
    except :
        pass
    i = int ( str ( inp [ - 1 ] ) )
    if len ( inp ) > 1 and ( int ( str ( inp [ - 2 ] ) ) * 10 + i ) % 4 == 0 :
        print ( 4 )
    elif len ( inp ) == 1 and i % 4 == 0 :
        print ( 4 )
    else :
        print ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 817
---> probID: codeforces_835_B
---> inputs:
3
11
---> outputs:
1

def pre5 ( args ) :
    import sys
    import string
    import string
    import string
    import string
    import math
    class pre5 ( sys . stdout ) :
        class fastfile ( sys . stdout ) :
            def __init__ ( self ) :
                sys . stdout . write ( '' )
                self . stream = None
                self . stream = None
            def next ( self ) :
                while self . stream is None or not self . stream . eof :
                    try :
                        self . stream = stream . next ( )
                    except string . ParseError :
                        pass
                return self . stream . getvalue ( )
            def randint ( self ) :
                return int ( self . stream . read ( ) )
            def long ( self ) :
                return int ( self . stream . read ( ) )
            def double ( self ) :
                return float ( self . stream . read ( ) )
            def readline ( self ) :
                data = ''
                try :
                    data = self . stream . readline ( )
                except string . ParseError :
                    pass
                return data
        def main ( args ) :
            obj = fastfile ( )
            k = obj . __next__ ( )
            data = obj . next ( ) . split ( ' ' )
            n = len ( data )
            data . sort ( )
            sum = 0
            for i in data :
                sum += ord ( i ) - ord ( '0' )
            idx , ans = 0 , 0
            while idx < n and sum < k :
                sum -= data [ idx ] - ord ( '0' )
                data [ idx ] = '9'
                sum += 9
                idx += 1
                ans += 1
            out . write ( ans )
    return pre5


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 818
---> probID: codeforces_940_B
---> inputs:
9
2
3
1
---> outputs:
6

def B940 ( ) :
    import string
    N = int ( sys . stdin . read ( ) )
    K = int ( sys . stdin . read ( ) )
    A = long ( sys . stdin . read ( ) )
    B = long ( sys . stdin . read ( ) )
    cost = 0
    while N != 1 :
        if N < K :
            cost += ( N - 1 ) * A
            break
        r = N % K
        cost += r * A
        N -= r
        if B >= ( N - N // K ) * A :
            cost += ( N - 1 ) * A
            break
        cost += B
        N //= K
    print ( cost )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 819
---> probID: geeksforgeeks_858_A
---> inputs:

---> outputs:
1


def digit_sum ( n ) :
    import sys
    sum = 0
    while n > 0 or sum > 9 :
        if n == 0 :
            n = sum
            sum = 0
        sum += n % 10
        n //= 10
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
 47%|████▋     | 819/1746 [00:19<00:21, 42.38it/s]

-------------------------------------


---> lineNum: 820
---> probID: codeforces_1446_B
---> inputs:
4 5
abba
babab
---> outputs:
5

def main ( ) :
    import string
    try :
        n , m = int ( raw_input ( ) ) , int ( raw_input ( ) )
        a , b = string . split ( a ) , string . split ( b )
        dp = np . zeros ( ( n + 1 , m + 1 ) )
        for i in range ( 1 , n + 1 ) :
            for j in range ( 1 , m + 1 ) :
                dp [ i ] [ j ] = max ( dp [ i ] [ j ] , max ( dp [ i - 1 ] [ j ] , dp [ i ] [ j - 1 ] ) - 1 )
                if a [ i - 1 ] == b [ j - 1 ] :
                    dp [ i ] [ j ] = max ( dp [ i ] [ j ] , dp [ i - 1 ] [ j - 1 ] + 2 )
        ans = 0
        for i in range ( 1 , n + 1 ) :
            for j in range ( 1 , m + 1 ) :
                ans = max ( ans , dp [ i ] [ j ] )
        print ( ans )
    except ValueError :
        pass


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552985018_7598/main.py", line 50
    np . testing as np . testing as np
                 ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 821
---> probID: geeksforgeeks_1729_A
---> inputs:

---> outputs:
5th Centered heptagonal number :  71


def main ( ) :
    import sys
    import os
    import math
    import numpy as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    np . testing as np . testing as np
    import testing as np
    np . testing . enable ( )
    np . testing . enable ( )
    np . testing . enable ( )
    np . testing . enable ( )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 822
---> probID: geeksforgeeks_4441_A
---> inputs:

---> outputs:
14


def missing_num ( arr , n ) :
    import sys
    arr = [ int ( i ) for i in arr ]
    minvalue = min ( arr )
    xornum = 0
    for i in range ( n ) :
        xornum ^= ( minvalue ) ^ arr [ i ]
        minvalue += 1
    return xornum ^ minvalue


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 823
---> probID: geeksforgeeks_5032_A
---> inputs:

---> outputs:
2143675


def GFG ( n ) :
    res = [ ]
    if n % 2 == 0 :
        for i in range ( n ) :
            if i % 2 == 0 :
                res . append ( chr ( 48 + i + 2 ) )
            else :
                res . append ( chr ( 48 + i ) )
    else :
        for i in range ( n - 2 ) :
            if i % 2 == 0 :
                res . append ( chr ( 48 + i + 2 ) )
            else :
                res . append ( chr ( 48 + i ) )
        res . append ( '\0' )
        for i in range ( n ) :
            print ( res [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 824
---> probID: geeksforgeeks_1189_A
---> inputs:

---> outputs:
1


def min_operations ( a , n , K ) :
    d = { }
    for i in range ( n ) :
        try :
            if d [ a [ i ] ] :
                return 1
        except :
            pass
        try :
            d [ a [ i ] ] = True
        except :
            pass
    b = [ ]
    for i in range ( n ) :
        b . append ( a [ i ] & K )
    d = { }
    for i in range ( n ) :
        if a [ i ] != b [ i ] :
            try :
                d [ b [ i ] ] = True
            except :
                pass
    for i in range ( n ) :
        try :
            if d [ a [ i ] ] :
                return 1
        except :
            pass
    d = { }
    for i in range ( n ) :
        try :
            if d [ b [ i ] ] :
                return 2
        except :
            pass
        try :
            d [ b [ i ] ] = True
        except :
            pass
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(
 47%|████▋     | 824/1746 [00:19<00:21, 42.18it/s]  File "./junk/1692552985115_4321/main.py", line 7
    from char , to = [ 0 , 0 , 1 , - 1 ]
              ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 825
---> probID: aizu_p01139_A
---> inputs:
10 10
.....W....
....W.W...
...W...W..
....W...W.
.....W...W
......W.W.
BBB....W..
..B..BBBBB
..B..B....
..B..B..W.
5 3
...B.
...BB
.....
1 1
.
0 0
---> outputs:
6 21
12 0
0 0

def main ( ) :
    import string
    global B , W
    global count_b , count_w
    dx = [ 1 , - 1 , 0 , 0 ]
    dy = [ 0 , 0 , 1 , - 1 ]
    from char , to = [ 0 , 0 , 1 , - 1 ]
    def solve ( ) :
        w = len ( sys . stdin . readline ( ) )
        while w != 0 :
            h = len ( sys . stdin . readline ( ) )
            grid = [ ]
            for line in sys . stdin . readlines ( ) :
                grid . append ( line . decode ( 'utf-8' ) )
            count_b = 0
            count_w = 0
            for i in range ( h ) :
                for j in range ( w ) :
                    if grid [ i ] [ j ] == '.' :
                        B = False
                        W = False
                        count_grid = 0
                        dfs ( j , i )
                        if B and not W :
                            count_b += count_grid
                        if not B and W :
                            count_w += count_grid
            print ( count_b , count_w )
            w = len ( sys . stdin . readline ( ) )
    def dfs ( x , y ) :
        grid [ y ] [ x ] = 'x'
        count_grid += 1
        for i in range ( 4 ) :
            nx = x + dx [ i ]
            ny = y + dy [ i ]
            if nx < w and nx >= 0 and ny < h and ny >= 0 :
                if grid [ ny ] [ nx ] == 'B' :
                    B = True
                elif grid [ ny ] [ nx ] == 'W' :
                    W = True
                elif grid [ ny ] [ nx ] == '.' :
                    dfs ( nx , ny )
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 826
---> probID: codeforces_270_A
---> inputs:
3
30
60
90
---> outputs:
NO
YES
YES

def main ( ) :
    import sys
    try :
        t = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    while t > 0 :
        n = int ( sys . stdin . readline ( ) )
        if 360 % ( 180 - n ) == 0 :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552985163_7894/main.py", line 25
    import numpy = np
                 ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 827
---> probID: projecteuler_p493_A
---> inputs:

---> outputs:
6.818741802

def p493 ( ) :
    import math
    import math
    import math
    import math
    import math
    import math
    import traceback
    import sys
    import numpy as np
    import math
    import math
    import numpy as np
    import math
    import numpy as np
    import math
    import numpy as np
    import math
    import numpy as np
    import math
    import numpy as np
    import math
    import numpy as np
    import math
    import numpy = np
    def f ( x ) :
        return x
    def g ( x ) :
        return x + math . cos ( x )
    def g ( x ) :
        return x + math . sin ( x )
    def g ( x ) :
        return x + math . sin ( x )
    def g ( x ) :
        return x + math . cos ( x )
    def g ( x ) :
        return x + math . sin ( x )
    def g ( x ) :
        return x + math . sin ( x )
    def g ( x ) :
        return x + math . cos ( x )
    def g ( x ) :
        return x + math . sin ( x )
    def g ( x ) :
        return x + math . sin ( x )
    def g ( x ) :
        return x + math . sin ( x )
    def g ( x ) :
        return x + math . cos ( x )
    def g ( x ) :
        return x + math . sin ( x )
    def g ( x ) :
        return x + math . sin ( x )
    def g ( x ) :
        return x + math . cos ( x )
    def g ( x ) :
        return x + math . sin ( x )
    def g ( x ) :
        return x + math . sin ( x )
    def g ( x ) :
        return x + math . cos ( x )
    def g ( x ) :
        return x + math . sin ( x )
    def g ( x ) :
        return x + math . sin ( x )
    def g ( x ) :
        return x + math . cos ( x )
    def g ( x ) :
        return x + math . sin ( x )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 828
---> probID: codeforces_967_A
---> inputs:
6 60
0 0
1 20
3 21
5 0
19 30
23 40
---> outputs:
6 1

def main ( args ) :
    import sys
    import math
    import termios
    import sys
    import termios
    import sys
    if args [ 0 ] == '-' :
        landings = int ( sys . stdin . read ( ) )
        time = int ( sys . stdin . read ( ) )
    else :
        landings = int ( sys . stdin . read ( ) )
        time = int ( sys . stdin . read ( ) )
    minutes = [ ]
    for i in range ( landings ) :
        hours = int ( sys . stdin . read ( ) ) * 60
        minute = int ( sys . stdin . read ( ) )
        minutes . append ( minute + hours )
    if time + 1 <= minutes [ 0 ] :
        print ( 0 , 0 )
        return
    for i in range ( landings - 1 ) :
        if minutes [ i + 1 ] - minutes [ i ] >= 2 * time + 2 :
            flight = minutes [ i ] + time + 1
            h = flight // 60
            m = flight % 60
            print ( h , m )
            return
    flight = minutes [ landings - 1 ] + time + 1
    h = flight // 60
    m = flight % 60
    print ( h , m )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 829
---> probID: codeforces_1521_A
---> inputs:
3
5 3
13 2
7 11
---> outputs:
['YES\n10 50 60\nYES\n169 39 208\nYES\n28 154 182', 'YES\n5 15 20\nYES\n13 26 39\nYES\n7 77 84\n']

def main ( ) :
    import sys
    try :
        k = len ( sys . argv )
        for i in range ( k ) :
            A = sys . stdin . read ( )
            B = sys . stdin . read ( )
            if B == 1 :
                print ( 'NO' )
            else :
                print ( 'YES' )
                print ( '%d %d %d' % ( A , A * B , ( B + 1 ) * A ) )
    except :
        print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(
 47%|████▋     | 829/1746 [00:19<00:21, 41.81it/s]

-------------------------------------


---> lineNum: 830
---> probID: aizu_p00226_A
---> inputs:
1234 5678
1234 1354
1234 1234
1230 1023
0123 1234
0 0
---> outputs:
0 0
2 1
4 0
1 3
0 3

def main ( ) :
    import sys
    import math
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import core as np
    import numpy . core as np
    import core as np
    import numpy . core as np
    import core as np
    import core as np
    import core as np


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 831
---> probID: geeksforgeeks_1509_A
---> inputs:

---> outputs:
23


def find_max_value ( arr , n ) :
    import numpy as np
    if n < 4 :
        print ( "The array should have" " atleast 4 elements" )
    table1 = np . zeros ( n + 1 )
    table2 = np . zeros ( n )
    table3 = np . zeros ( n - 1 )
    table4 = np . zeros ( n - 2 )
    table1 [ : ] = np . inf
    table2 [ : ] = np . inf
    table3 [ : ] = np . inf
    table4 [ : ] = np . inf
    for i in range ( n - 1 , - 1 , - 1 ) :
        table1 [ i ] = max ( table1 [ i + 1 ] , arr [ i ] )
    for i in range ( n - 2 , - 1 , - 1 ) :
        table2 [ i ] = max ( table2 [ i + 1 ] , table1 [ i + 1 ] - arr [ i ] )
    for i in range ( n - 3 , - 1 , - 1 ) :
        table3 [ i ] = max ( table3 [ i + 1 ] , table2 [ i + 1 ] + arr [ i ] )
    for i in range ( n - 4 , - 1 , - 1 ) :
        table4 [ i ] = max ( table4 [ i + 1 ] , table3 [ i + 1 ] - arr [ i ] )
    return table4 [ 0 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 832
---> probID: geeksforgeeks_1726_A
---> inputs:

---> outputs:
1 7 19 37 61 91 127 169 217 271 

def centered_hexagonal ( n ) :
    import sys
    for i in range ( 1 , n + 1 ) :
        sys . stdout . write ( 3 * i * ( i - 1 ) + 1 + ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552985309_6943/main.py", line 17
    out :
        ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 833
---> probID: aizu_p01811_A
---> inputs:
ABC
---> outputs:
Yes

def main ( ) :
    import string
    global ABC
    ABC = [ "A" , "B" , "C" ]
    def dfs ( S ) :
        if S == "ABC" :
            return True
        cnt = 0
        f = False
        pos = [ False ] * len ( S )
        for j in range ( 0 , len ( S ) + 3 ) :
            if S [ j : j + 3 ] == "ABC" :
                pos [ j ] = True
                cnt += 1
        if cnt < 1 :
            return False
        out :
            for i in range ( 3 ) :
                for j in range ( len ( S ) ) :
                    if S [ j ] == "A" + str ( i ) :
                        if j - i < 0 or not pos [ j - i ] :
                            continue
            next = S . replace ( "ABC" , ABC [ i ] )
            f |= dfs ( str ( next ) )
        return f
    def tr ( * args ) :
        print ( " " . join ( str ( x ) for x in args ) )
    return tr


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 834
---> probID: codeforces_1028_A
---> inputs:
5 6
WWBBBW
WWBBBW
WWBBBW
WWWWWW
WWWWWW
---> outputs:
2 4

def code_ninety_seven ( ) :
    import string
    import sys
    m = len ( sys . stdin )
    n = len ( sys . stdin )
    array_one = [ [ ] for i in range ( m ) ]
    for data in sys . stdin :
        if data . find ( ' ' ) != - 1 :
            data = data . strip ( )
        else :
            break
    for j in range ( n ) :
        array_one [ i ] [ j ] = data [ j ]
    sumr = 0
    sumc = 0
    count1 = 0
    count2 = 0
    for i in range ( m ) :
        for j in range ( n ) :
            if array_one [ i ] [ j ] == 66 :
                sumr += i + 1
                count1 += 1
    for i in range ( m ) :
        for j in range ( n ) :
            if array_one [ i ] [ j ] == 66 :
                sumc += j + 1
                count2 += 1
    print ( sumr / count1 , sumc / count2 )


---> console_out:
 
DIDN'T MATCH!! :(
 48%|████▊     | 834/1746 [00:19<00:21, 41.82it/s]

-------------------------------------


---> lineNum: 835
---> probID: geeksforgeeks_4333_A
---> inputs:

---> outputs:
Principal Diagonal Smallest Element:  -5
Principal Diagonal Greatest Element :  11
Secondary Diagonal Smallest Element:  4
Secondary Diagonal Greatest Element:  11


def diagonal_minmax ( mat ) :
    n = len ( mat )
    if not n :
        return
    principal_min , principal_max = mat [ 0 ] [ 0 ] , mat [ 0 ] [ 0 ]
    secondary_min , secondary_max = mat [ n - 1 ] [ 0 ] , mat [ n - 1 ] [ 0 ]
    for i in range ( 1 , n ) :
        for j in range ( 1 , n ) :
            if i == j :
                if mat [ i ] [ j ] < principal_min :
                    principal_min = mat [ i ] [ j ]
                if mat [ i ] [ j ] > principal_max :
                    principal_max = mat [ i ] [ j ]
        if ( i + j ) == ( n - 1 ) :
            if mat [ i ] [ j ] < secondary_min :
                secondary_min = mat [ i ] [ j ]
            if mat [ i ] [ j ] > secondary_max :
                secondary_max = mat [ i ] [ j ]
    print ( "Principal Diagonal Smallest Element:  %d" % principal_min )
    print ( "Principal Diagonal Greatest Element : %d" % principal_max )
    print ( "Secondary Diagonal Smallest Element: %d" % secondary_min )
    print ( "Secondary Diagonal Greatest Element: %d" % secondary_max )
    def main ( ) :
        matrix = [ [ 1 , 2 , 3 , 4 , - 10 ] , [ 5 , 6 , 7 , 8 , 6 ] , [ 1 , 2 , 11 , 3 , 4 ] , [ 5 , 6 , 70 , 5 , 8 ] , [ 4 , 9 , 7 , 1 , - 5 ] ]
        return matrix
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 836
---> probID: geeksforgeeks_4334_A
---> inputs:

---> outputs:
Principal Diagonal Smallest Element:  -5
Principal Diagonal Greatest Element :  11
Secondary Diagonal Smallest Element:  -10
Secondary Diagonal Greatest Element:  11


def diagonal_minmax ( mat ) :
    n = len ( mat )
    if not n :
        return
    principal_min , principal_max = mat [ 0 ] [ 0 ] , mat [ 0 ] [ 0 ]
    secondary_min , secondary_max = mat [ n - 1 ] [ 0 ] , mat [ n - 1 ] [ 0 ]
    for i in range ( n ) :
        if mat [ i ] [ i ] < principal_min :
            principal_min = mat [ i ] [ i ]
        if mat [ i ] [ i ] > principal_max :
            principal_max = mat [ i ] [ i ]
        if mat [ n - 1 - i ] [ i ] < secondary_min :
            secondary_min = mat [ n - 1 - i ] [ i ]
        if mat [ n - 1 - i ] [ i ] > secondary_max :
            secondary_max = mat [ n - 1 - i ] [ i ]
    print ( "Principal Diagonal Smallest Element:  %d" % principal_min )
    print ( "Principal Diagonal Greatest Element : %d" % principal_max )
    print ( "Secondary Diagonal Smallest Element: %d" % secondary_min )
    print ( "Secondary Diagonal Greatest Element: %d" % secondary_max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 837
---> probID: geeksforgeeks_4783_A
---> inputs:

---> outputs:
8


def average_odd ( n ) :
    import sys
    if n % 2 == 0 :
        print ( 'Invalid Input' )
        return - 1
    sum , count = 0 , 0
    while n >= 1 :
        count += 1
        sum += n
        n = n - 2
    return sum // count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 838
---> probID: geeksforgeeks_4784_A
---> inputs:

---> outputs:
8


def average_odd ( n ) :
    import sys
    if n % 2 == 0 :
        print ( 'Invalid Input' )
        return - 1
    return ( n + 1 ) // 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 839
---> probID: geeksforgeeks_4027_A
---> inputs:

---> outputs:
Yes


def is_same_as_int ( arr , n ) :
    import re
    us = set ( )
    for i in range ( n ) :
        us . add ( arr [ i ] )
    count = 1
    curr_ele = arr [ 0 ] - 1
    while curr_ele in us :
        count += 1
        curr_ele -= 1
    curr_ele = arr [ 0 ] + 1
    while curr_ele in us :
        count += 1
        curr_ele += 1
    return ( count == ( len ( us ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 48%|████▊     | 839/1746 [00:19<00:21, 42.01it/s]

-------------------------------------


---> lineNum: 840
---> probID: geeksforgeeks_3398_A
---> inputs:

---> outputs:
0
1
-1


def get_left_most_zero ( zero ) :
    if zero == None :
        return - 1
    zero . pop ( )
    return 0
def get_left_most_one ( one ) :
    if one == None :
        return - 1
    one . pop ( )
    return 1
def get_left_most_element ( zero , one ) :
    if zero == None and one == None :
        return - 1
    elif zero == None :
        one . pop ( )
        return 1
    elif one == None :
        zero . pop ( )
        return 0
    res = ( 0 if zero [ - 1 ] < one [ - 1 ] else 1 )
    if res == 0 :
        zero . pop ( )
    else :
        one . pop ( )
    return res
def perform_queries ( arr , n , queries , q ) :
    zero = list ( )
    one = list ( )
    for i in range ( n ) :
        if arr [ i ] == 0 :
            zero . append ( i )
        else :
            one . append ( i )
    for i in range ( q ) :
        type = queries [ i ]
        if type == 1 :
            print ( get_left_most_zero ( zero ) )
        elif type == 2 :
            print ( get_left_most_one ( one ) )
        elif type == 3 :
            print ( get_left_most_element ( zero , one ) )
    def main ( args ) :
        arr = [ 1 , 0 , 1 , 1 , 1 ]
        n = len ( arr )
        queries = [ 1 , 3 , 1 ]
        q = len ( queries )
        return '' . join ( sorted ( arr ) )
    return main ( args )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 841
---> probID: geeksforgeeks_4079_A
---> inputs:

---> outputs:
6 0 0 6


def Vertices ( x , y ) :
    val = abs ( x ) + abs ( y )
    print ( val * ( - 1 if x < 0 else 1 ) , end = ' ' )
    print ( '0 ' + str ( val * ( - 1 if y < 0 else 1 ) ) , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 842
---> probID: geeksforgeeks_1932_A
---> inputs:

---> outputs:
3 4 6 

def get_sum ( a , n ) :
    P = list ( a )
    P [ 0 ] = a [ 0 ]
    for i in range ( 1 , n ) :
        P [ i ] = a [ i ] + P [ i - 1 ]
    S = P [ n - 1 ]
    hash = { }
    for i in range ( n ) :
        hash [ P [ i ] ] = 1
    res = set ( )
    for i in range ( 1 , S + 1 ) :
        if S % i == 0 :
            pres = True
            div1 , div2 = i , S // i
            for j in range ( div1 , S + 1 , div1 ) :
                if hash [ j ] is None or hash [ j ] != 1 :
                    pres = False
                    break
            if pres and div1 != S :
                res . add ( div1 )
            pres = True
            for j in range ( S // i , S + 1 , S // i ) :
                if hash [ j ] is None or hash [ j ] != 1 :
                    pres = False
                    break
            if pres and div2 != S :
                res . add ( div2 )
    if len ( res ) == 0 :
        print ( '-1' )
        return
    for i in res :
        print ( i , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 843
---> probID: geeksforgeeks_4554_A
---> inputs:

---> outputs:
1 4 5 6 7 2 3 

def original_array ( greater , n ) :
    import numpy as np
    temp = [ ]
    for i in range ( 0 , n + 1 ) :
        temp . append ( i )
    arr = np . zeros ( n )
    for i in range ( n ) :
        k = n - greater [ i ] - i
        arr [ i ] = temp [ k ]
        del temp [ k ]
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 844
---> probID: codeforces_154_A
---> inputs:
ababa
1
ab
---> outputs:
2

def main ( ) :
    import string
    import math
    s , p = string . split ( p )
    k , x , y , ans = len ( s ) , 0 , 0 , 0
    a , b = 0 , 0
    for i in range ( k ) :
        p = s [ i ]
        for c in s :
            if c == p [ 0 ] :
                x += 1
            elif c == p [ 1 ] :
                y += 1
            else :
                ans += min ( x , y )
                x , y = 0 , 0
        ans += min ( x , y )
        x , y = 0 , 0
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 48%|████▊     | 844/1746 [00:19<00:21, 42.25it/s]

-------------------------------------


---> lineNum: 845
---> probID: leetcode_475_A
---> inputs:

---> outputs:
1

def find_radius ( houses , heaters ) :
    import bisect
    heaters . sort ( )
    result = bisect . bisect_left ( heaters , house )
    for house in houses :
        index = bisect . bisect_left ( heaters , house )
        if index < 0 :
            index = - ( index + 1 )
        dist1 = house - heaters [ index - 1 ] if index - 1 >= 0 else bisect . bisect_left ( heaters , house )
        dist2 = heaters [ index ] - house if index < len ( heaters ) else bisect . bisect_left ( heaters , house )
        result = max ( result , min ( dist1 , dist2 ) )
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 846
---> probID: projecteuler_p130_A
---> inputs:

---> outputs:
149253

def p130 ( ) :
    print ( eval ( 'p130()' ) )
    def run ( ) :
        sum = 0
        found = 0
        for i in range ( 7 , 25 , 2 ) :
            if i % 5 != 0 and not math . isnan ( i ) and ( i - 1 ) % eval ( 'p130()' ) == 0 :
                sum += i
                found += 1
        return str ( sum )
    def find_least_divisible_repunit ( n ) :
        if n % 2 == 0 or n % 5 == 0 :
            return 0
        if n > math . pi / 10 :
            raise ValueError ( 'Arithmetic overflow' )
        sum = 1
        pow = 1
        k = 1
        while sum % n != 0 :
            k += 1
            pow = pow * 10 % n
            sum = ( sum + pow ) % n
        return k
    return run


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 847
---> probID: geeksforgeeks_873_A
---> inputs:

---> outputs:
1


def check_recursive ( num , x , k , n ) :
    import math
    res = 0
    def check_recursive ( num , x , k , n ) :
        if not x :
            res += 1
        r = int ( math . floor ( math . pow ( num , 1.0 / n ) ) )
        for i in range ( k + 1 , r + 1 ) :
            a = x - int ( math . pow ( i , n ) )
            if a >= 0 :
                check_recursive ( num , x - int ( math . pow ( i , n ) ) , i , n )
        return res
    def check ( x , n ) :
        return check_recursive ( x , x , 0 , n )
    def main ( ) :
        print ( check ( 10 , 2 ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 848
---> probID: atcoder_ABC079_C
---> inputs:
1222
---> outputs:
1+2+2+2=7

def main ( args ) :
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 849
---> probID: codeforces_1458_B
---> inputs:
3
6 5
6 5
10 2
---> outputs:
7.0000000000 11.0000000000 12.0000000000

def main ( agrs ) :
    import sys
    import math
    import os
    import sys
    import math
    n = len ( agrs )
    a = [ ]
    b = [ ]
    total = 0
    for i in range ( n ) :
        a . append ( int ( agrs [ i ] ) )
        b . append ( float ( agrs [ i ] ) )
        total += b [ i ] / 2.0
    dp = np . zeros ( ( n + 1 , 10001 ) )
    for i in range ( 0 , n + 1 ) :
        dp [ i ] = - 1
    dp [ 0 ] [ 0 ] = total
    for i in range ( n ) :
        for k in range ( n - 1 , - 1 , - 1 ) :
            for j in range ( 10001 ) :
                if dp [ k ] [ j ] == - 1 :
                    continue
                dp [ k + 1 ] [ j + a [ i ] ] = float ( max ( dp [ k + 1 ] [ j + a [ i ] ] , dp [ k ] [ j ] + b [ i ] / 2.0 ) )
    max = 0
    for k in range ( 1 , n + 1 ) :
        max = 0
        for j in range ( 10001 ) :
            max = float ( max )
        print ( max , end = ' ' )
    print ( max , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
 49%|████▊     | 849/1746 [00:20<00:21, 42.13it/s]

-------------------------------------


---> lineNum: 850
---> probID: codeforces_1060_B
---> inputs:
35
---> outputs:
17

def main ( ) :
    import string
    import random
    n = random . randint ( 1 , 10000 )
    print ( solve ( n ) )
    def solve ( n ) :
        sum = [ ch - '0' for ch in str ( n ) ]
        for i in range ( len ( sum ) - 1 ) :
            sum [ i ] -= 1
            sum [ i + 1 ] += 10
        for i in range ( len ( sum ) - 1 , 1 , - 1 ) :
            if sum [ i ] == 19 :
                sum [ i ] -= 10
                sum [ i - 1 ] += 1
        return sum
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 851
---> probID: geeksforgeeks_5282_A
---> inputs:

---> outputs:
3


def GFG ( n ) :
    import sys
    for i in range ( 2 , n + 1 ) :
        if n % i == 0 :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 852
---> probID: geeksforgeeks_3153_A
---> inputs:

---> outputs:
4


def squares ( arr ) :
    import math
    return ( ( m + a - 1 ) // a ) ** 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 853
---> probID: codeforces_1312_A
---> inputs:
2
6 3
7 3
---> outputs:
YES
NO

def two_regular_polygons ( ) :
    import sys
    try :
        t = sys . stdin . read ( )
    except AttributeError :
        pass
    else :
        n , m = n , m
        print ( 'YES' if ( n % m ) == 0 else 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 854
---> probID: geeksforgeeks_5067_A
---> inputs:

---> outputs:
Count of Cubes is  2


def count_cubes ( a , b ) :
    cnt = 0
    for i in range ( a , b + 1 ) :
        for j in range ( 1 , 2 * j ** 2 + i + 1 ) :
            if j ** 2 == i :
                cnt += 1
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(
 49%|████▉     | 854/1746 [00:20<00:20, 42.68it/s]

-------------------------------------


---> lineNum: 855
---> probID: atcoder_ABC111_C
---> inputs:
4
3 1 3 2
---> outputs:
1

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . read ( ) )
    except ValueError :
        pass
    oddlist = [ 0 ] * 100001
    evenlist = [ 0 ] * 100001
    for i in range ( 1 , n + 1 ) :
        v = sys . stdin . read ( )
        if i % 2 == 1 :
            oddlist [ v ] += 1
        if i % 2 == 0 :
            evenlist [ v ] += 1
    max_odd , max_even , secondmax_odd , secondmax_even , count_odd , count_even = 0 , 0 , 0 , 0 , 0
    for i in range ( 1 , 100001 ) :
        max_odd = max ( oddlist [ i ] , max_odd )
        max_even = max ( evenlist [ i ] , max_even )
    oddnum , evennum = 0 , 0
    for i in range ( 1 , 100001 ) :
        if oddlist [ i ] == max_odd :
            oddnum = i
            count_odd += 1
        if evenlist [ i ] == max_even :
            evennum = i
            count_even += 1
    for i in range ( 1 , 100001 ) :
        if oddlist [ i ] != max_odd :
            secondmax_odd = max ( oddlist [ i ] , secondmax_odd )
        if evenlist [ i ] != max_even :
            secondmax_even = max ( evenlist [ i ] , secondmax_even )
    if count_odd >= 2 :
        secondmax_odd = max_odd
    if count_even >= 2 :
        secondmax_even = max_even
    for i in range ( 1 , 100001 ) :
        if oddlist [ i ] == max_odd :
            oddnum = i
        if evenlist [ i ] == max_even :
            evennum = i
    if oddnum == evennum :
        if max_odd > max_even :
            max_even = secondmax_even
        elif max_odd < max_even :
            max_odd = secondmax_odd
        else :
            max_even = max ( secondmax_odd , secondmax_even )
    ans = n - max_odd - max_even
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 856
---> probID: geeksforgeeks_4177_A
---> inputs:

---> outputs:
a
ab
abc
abcd
b
bc
bcd
c
cd
d


def GFG ( str , n ) :
    for i in range ( n ) :
        for j in range ( i + 1 , n + 1 ) :
            print ( str [ i : j ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 857
---> probID: geeksforgeeks_4268_A
---> inputs:

---> outputs:
Number of 0s = 1
Number of 1s = 1


def GFG ( n ) :
    if n <= 1 :
        return False
    for i in range ( 2 , n ) :
        if n % i == 0 :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 858
---> probID: geeksforgeeks_834_A
---> inputs:

---> outputs:
The exterior angle of thecyclic quadrilateral is 48  degrees


def angleextcycquad ( z ) :
    import sys
    sys . stdout . write ( "The exterior angle of the" " cyclic quadrilateral is %d degrees\n" % z )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 859
---> probID: geeksforgeeks_2767_A
---> inputs:

---> outputs:
Minimum Index Character =  e


def GFG ( data , patt ) :
    min_index = sys . maxsize
    m = len ( data )
    n = len ( patt )
    for i in range ( n ) :
        for j in range ( m ) :
            if patt [ i ] == data [ j ] and j < min_index :
                min_index = j
                break
    if min_index != sys . maxsize :
        print ( "Minimum Index Character = %s" % data [ min_index ] )
    else :
        print ( "No character present" )


---> console_out:
 
DIDN'T MATCH!! :(
 49%|████▉     | 859/1746 [00:20<00:20, 42.38it/s]

-------------------------------------


---> lineNum: 860
---> probID: codeforces_456_A
---> inputs:
2
1 2
2 1
---> outputs:
Happy Alex

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    for a , b in zip ( n , sys . stdin . readline ( ) . strip ( ) ) :
        if b < a :
            print ( "Happy Alex" )
            return
    print ( "Poor Alex" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 861
---> probID: geeksforgeeks_545_A
---> inputs:

---> outputs:
658


def maxnumber ( n , k ) :
    import math
    for j in range ( k ) :
        ans = 0
        i = 1
        while n // i > 0 :
            temp = ( n // ( i * 10 ) ) * i + ( n % i )
            i *= 10
            ans = max ( ans , temp )
        n = ans
    return n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 862
---> probID: aizu_p01037_A
---> inputs:
5 3
0 1
2 1
3 1
---> outputs:
2 1
1 1

def main ( ) :
    import sys
    import os
    import subprocess
    import sys
    import subprocess
    import subprocess
    import sys
    log = open ( '/dev/null' , 'w' )
    result = sys . stdout
    with open ( '/dev/null' , 'r' ) as f :
        N = len ( f . read ( ) )
        M = len ( f . read ( ) )
        w = [ 0 ] * N
        for i in range ( M ) :
            a = int ( f . read ( ) )
            L = len ( f . read ( ) )
            for j in range ( L ) :
                w [ ( a + j ) % N ] = 1
        t = [ 0 ] * ( N + 1 )
        s = None
        f = None
        s0 = None
        i = None
        for i in range ( N ) :
            if f == None and w [ i ] == 1 :
                s = i
                f = 1
            elif f == 1 and w [ i ] == 0 :
                f = 0
                if s == None :
                    s0 = i
                else :
                    t [ i - s ] += 1
        if f == 1 :
            t [ i - s + s0 ] += 1
        elif s0 is not None :
            t [ s0 ] += 1
        for i in range ( N , 0 , - 1 ) :
            if t [ i ] > 0 :
                result . write ( '%d %d\n' % ( i , t [ i ] ) )
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 863
---> probID: atcoder_ABC059_C
---> inputs:
4
1 -3 1 0
---> outputs:
4

def main ( ) :
    import sys
    io = sys . stdin
    n = len ( io )
    a = [ ]
    for i in range ( 1 , n + 1 ) :
        a . append ( io . read ( ) )
    sum = 0
    now = 0
    border = 1
    end = 0
    ans_p = 0
    for i in range ( 1 , n + 1 ) :
        sum += a [ i ]
        end = border - sum
        if border > 0 :
            if now < end :
                ans_p += abs ( now - end )
                now = end
        else :
            if now > end :
                ans_p += abs ( now - end )
                now = end
        border = - border
    sum = 0
    now = 0
    border = - 1
    end = 0
    ans_m = 0
    for i in range ( 1 , n + 1 ) :
        sum += a [ i ]
        end = border - sum
        if border > 0 :
            if now < end :
                ans_m += abs ( now - end )
                now = end
        else :
            if now > end :
                ans_m += abs ( now - end )
                now = end
        border = - border
    print ( min ( ans_p , ans_m ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 864
---> probID: geeksforgeeks_2964_A
---> inputs:

---> outputs:
For N =  1 :  1
For N =  2 :  3
For N =  3 :  9
For N =  4 :  33
For N =  5 :  53
For N =  6 :  73
For N =  7 :  13
For N =  8 :  33
For N =  9 :  13
For N =  10 :  13


def get_last_two_digit ( N ) :
    if N <= 10 :
        ans , fac = 0 , 1
        for i in range ( 1 , N + 1 ) :
            fac = fac * i
            ans += fac
        return int ( ans ) % 100
    else :
        return 13


---> console_out:
 
DIDN'T MATCH!! :(
 49%|████▉     | 864/1746 [00:20<00:21, 41.80it/s]

-------------------------------------


---> lineNum: 865
---> probID: geeksforgeeks_2148_A
---> inputs:

---> outputs:
9


def GFG ( args ) :
    binary_number = "1001"
    print ( int ( binary_number , 2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 866
---> probID: geeksforgeeks_3617_A
---> inputs:

---> outputs:
Yes


def is_possible ( x , y , z ) :
    import math
    a = x * x + y * y + z * z
    if math . ceil ( a ) == 1 and math . floor ( a ) == 1 :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 867
---> probID: geeksforgeeks_2541_A
---> inputs:

---> outputs:
288
34560


def GFG ( ) :
    import re
    MAX = 1000000
    MOD = 10000007
    result = [ 0 ] * ( MAX + 1 )
    fact = [ 0 ] * ( MAX + 1 )
    def pre_compute ( ) :
        fact [ 0 ] = 1
        result [ 0 ] = 1
        for i in range ( 1 , MAX + 1 ) :
            fact [ i ] = ( ( fact [ i - 1 ] % MOD ) * i ) % MOD
            result [ i ] = ( ( result [ i - 1 ] % MOD ) * ( fact [ i ] % MOD ) ) % MOD
    def perform_queries ( q , n ) :
        pre_compute ( )
        for i in range ( n ) :
            print ( result [ q [ i ] ] )
    def main ( ) :
        q = [ 4 , 5 ]
        n = len ( q )
        perform_queries ( q , n )
    return '' . join ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 868
---> probID: codeforces_1540_A
---> inputs:
3
3
0 2 3
2
0 1000000000
1
0
---> outputs:
-3
0
0

def main ( ) :
    import sys
    try :
        T = int ( sys . stdin . read ( ) )
    except ValueError :
        pass
    else :
        T -= 1
    n = len ( sys . stdin )
    a = [ ]
    for i in range ( n ) :
        a . append ( sys . stdin . read ( ) )
    a . sort ( )
    mini = 0
    ans = 0
    for i in range ( 1 , n ) :
        diff = a [ i ] - a [ i - 1 ]
        mini = mini + ( - 1 ) * diff * i
        ans += mini
    print ( ans + str ( a [ n - 1 ] ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 869
---> probID: geeksforgeeks_3171_A
---> inputs:

---> outputs:
The smallest positive missing number is  1


def segregate ( arr , size ) :
    j , i = 0 , 0
    for i in range ( size ) :
        if arr [ i ] <= 0 :
            temp = arr [ i ]
            arr [ i ] = arr [ j ]
            arr [ j ] = temp
            j += 1
    return j
    def find_missing_positive ( arr , size ) :
        i = 0
        for i in range ( size ) :
            x = abs ( arr [ i ] )
            if x - 1 < size and arr [ x - 1 ] > 0 :
                arr [ x - 1 ] = - arr [ x - 1 ]
        for i in range ( size ) :
            if arr [ i ] > 0 :
                return i + 1
        return size + 1
    def find_missing ( arr , size ) :
        shift = segregate ( arr , size )
        arr2 = [ 0 ] * ( size - shift )
        j = 0
        for i in range ( shift , size ) :
            arr2 [ j ] = arr [ i ]
            j += 1
        return find_missing_positive ( arr2 , j )
    def main ( ) :
        arr = [ 0 , 10 , 2 , - 10 , - 20 ]
        arr_size = len ( arr )
        missing = find_missing ( arr , arr_size )
        print ( "The smallest positive missing number is %d" % missing )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(
 50%|████▉     | 869/1746 [00:20<00:21, 41.68it/s]

-------------------------------------


---> lineNum: 870
---> probID: geeksforgeeks_1382_A
---> inputs:

---> outputs:
648


def GFG ( n ) :
    import math
    mod = 1000000007
    def digital_number ( n ) :
        if n == 0 :
            return 1
        if n == 1 :
            return 9
        if n % 2 :
            temp = digital_number ( ( n - 1 ) // 2 ) % mod
            return ( 9 * ( temp * temp ) % mod ) % mod
        else :
            temp = digital_number ( n // 2 ) % mod
            return ( temp * temp ) % mod
    def count_excluded ( n , d ) :
        if d == 0 :
            return ( 9 * digital_number ( n - 1 ) ) % mod
        else :
            return ( 8 * digital_number ( n - 1 ) ) % mod
    def main ( n ) :
        d = 9
        n = 3
        print ( count_excluded ( n , d ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552986212_2802/main.py", line 26
    import None
           ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 871
---> probID: codeforces_1398_A
---> inputs:
3
7
4 6 11 11 15 18 20
4
10 10 10 11
3
1 1 1000000000
---> outputs:
['2 3 6\n-1\n1 2 3', '1 2 7\n-1\n1 2 3\n']

def main ( ) :
    import sys
    import os
    import subprocess
    import shlex
    import subprocess
    import shlex
    import subprocess
    import shlex
    import sys
    import subprocess
    import shlex
    import subprocess
    import shlex
    import subprocess
    import shlex
    import subprocess
    import shlex
    import subprocess
    import shlex
    import subprocess
    import shlex
    import subprocess
    import shlex
    import subprocess
    import None
    import subprocess
    try :
        subprocess = subprocess
    except :
        pass
    else :
        pass
    def readline ( ) :
        try :
            return subprocess . readline ( )
        except :
            pass
        return None
    def readline ( ) :
        try :
            return subprocess . readline ( )
        except :
            pass
        return None
    def readline ( ) :
        try :
            return subprocess . readline ( )
        except :
            pass
        return None
    def write ( ) :
        try :
            return subprocess . readline ( )
        except :
            pass
        return None
    return write


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 872
---> probID: geeksforgeeks_1132_A
---> inputs:

---> outputs:
5:35:20 PM


def convert12 ( data ) :
    import string
    h1 = ord ( data [ 0 ] ) - ord ( '0' )
    h2 = ord ( data [ 1 ] ) - ord ( '0' )
    hh = h1 * 10 + h2
    if hh < 12 :
        Meridien = "AM"
    else :
        Meridien = "PM"
    hh %= 12
    if hh == 0 :
        print ( "12" , end = " " )
        for c in data [ 2 : 8 ] :
            print ( c , end = " " )
    else :
        print ( hh , end = " " )
        for c in data [ 2 : 8 ] :
            print ( c , end = " " )
    print ( " " , Meridien )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 873
---> probID: geeksforgeeks_2662_A
---> inputs:

---> outputs:
2


def GFG ( s , k ) :
    for i in range ( len ( s ) ) :
        if s [ i ] != s [ i % k ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 874
---> probID: geeksforgeeks_979_A
---> inputs:

---> outputs:
220
30
20


def GFG ( W , wt , val , n ) :
    global K
    K = np . zeros ( ( n + 1 , W + 1 ) )
    for i in range ( 0 , n + 1 ) :
        for w in range ( 0 , W + 1 ) :
            if i == 0 or w == 0 :
                K [ i ] [ w ] = 0
            elif wt [ i - 1 ] <= w :
                K [ i ] [ w ] = max ( val [ i - 1 ] + K [ i - 1 ] [ w - wt [ i - 1 ] ] , K [ i - 1 ] [ w ] )
            else :
                K [ i ] [ w ] = K [ i - 1 ] [ w ]
    res = K [ n ] [ W ]
    print ( res )
    w = W
    for i in range ( n , 0 , - 1 ) :
        if res == K [ i - 1 ] [ w ] :
            continue
        else :
            print ( wt [ i - 1 ] , end = ' ' )
            res = res - val [ i - 1 ]
            w = w - wt [ i - 1 ]
def main ( arg ) :
    val = [ 60 , 100 , 120 ]
    wt = [ 10 , 20 , 30 ]
    W = 50
    n = len ( val )
    printknapSack ( W , wt , val , n )


---> console_out:
 
DIDN'T MATCH!! :(
 50%|█████     | 874/1746 [00:20<00:20, 41.96it/s]

-------------------------------------


---> lineNum: 875
---> probID: codeforces_268_A
---> inputs:
3
1 2
2 4
3 4
---> outputs:
1

def main ( ) :
    import sys
    try :
        n = len ( sys . argv )
        z = n * 2
        c = 0
        arr = [ ]
        ff = [ ]
        ss = [ ]
        while n > 0 :
            n -= 1
            ff . append ( sys . stdin . readline ( ) )
            ss . append ( sys . stdin . readline ( ) )
        pp = len ( ff )
        for i in range ( pp ) :
            for j in range ( pp ) :
                if ff [ i ] == ss [ j ] :
                    c += 1
                else :
                    continue
        sys . stdout . write ( c )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 876
---> probID: geeksforgeeks_3438_A
---> inputs:

---> outputs:
Found at index 2


def indexed_sequential_search ( arr , n , k ) :
    elements = [ 0 ] * 20
    indices = [ 0 ] * 20
    temp , i = 0 , 0 , 0 , 0 , 0
    j , ind , start , end = 0 , 0 , 0 , 0
    for i in range ( 0 , n , 3 ) :
        elements [ ind ] = arr [ i ]
        indices [ ind ] = i
        ind += 1
    if k < elements [ 0 ] :
        print ( 'Not found' )
        return
    else :
        for i in range ( 1 , ind + 1 ) :
            if k < elements [ i ] :
                start = indices [ i - 1 ]
                end = indices [ i ]
                break
        for i in range ( start , end + 1 ) :
            if k == arr [ i ] :
                j = 1
                break
        if j == 1 :
            print ( 'Found at index %d' % i )
        else :
            print ( 'Not found' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 877
---> probID: geeksforgeeks_3029_A
---> inputs:

---> outputs:
9009


def larrgestPalindrome ( n ) :
    upperLimit = 0
    for i in range ( 1 , n + 1 ) :
        upperLimit *= 10
        upperLimit += 9
    lowerLimit = 1 + upperLimit // 10
    maxProduct = 0
    for i in range ( upperLimit , lowerLimit - 1 , - 1 ) :
        for j in range ( i , lowerLimit - 1 , - 1 ) :
            product = i * j
            if product < maxProduct :
                break
            number = product
            reverse = 0
            while number != 0 :
                reverse = reverse * 10 + number % 10
                number //= 10
            if product == reverse and product > maxProduct :
                maxProduct = product
    return maxProduct


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 878
---> probID: aizu_p02317_A
---> inputs:
5
5
1
3
2
4
---> outputs:
3

def check ( dp , a ) :
    import math
    start = 0
    end = len ( dp ) - 1
    while True :
        if dp [ start ] >= a :
            return start
        elif dp [ end ] <= a :
            return end
        else :
            if start + 1 == end :
                return end
            else :
                mid = ( start + end ) // 2
                if dp [ mid ] == a :
                    return mid
                elif dp [ mid ] > a :
                    end = mid
                else :
                    start = mid


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 879
---> probID: codeforces_1313_A
---> inputs:
7
1 2 1
0 0 0
9 1 7
2 2 3
2 3 2
3 2 2
4 4 4
---> outputs:
3
0
4
5
5
5
7

def fast_food_restaurant ( ) :
    import sys
    test = sys . maxsize
    while test > 0 :
        a = sys . maxsize
        b = sys . maxsize
        c = sys . maxsize
        if a == 0 and b == 0 and c == 0 :
            print ( 0 )
        else :
            if b > c and b > a :
                k = a
                a = b
                b = k
            if c > b and c > a :
                k = a
                a = c
                c = k
            res = 0
            if a >= 1 :
                a -= 1
                res += 1
            if b >= 1 :
                b -= 1
                res += 1
            if c >= 1 :
                c -= 1
                res += 1
            if a >= 1 and b >= 1 :
                a -= 1
                b -= 1
                res += 1
            if a >= 1 and c >= 1 :
                a -= 1
                c -= 1
                res += 1
            if c >= 1 and b >= 1 :
                c -= 1
                b -= 1
                res += 1
            if a >= 1 and b >= 1 and c >= 1 :
                res += 1
            print ( res )


---> console_out:
 
DIDN'T MATCH!! :(
 50%|█████     | 879/1746 [00:20<00:20, 42.07it/s]

-------------------------------------


---> lineNum: 880
---> probID: codeforces_788_A
---> inputs:
5
1 4 2 3 1
---> outputs:
3

def Solution788A ( ) :
    import math
    arr = [ 0 ] * 100001
    dist = [ 0 ] * 100001
    def Solution788A ( n ) :
        f = open ( '/dev/null' )
        n = int ( f . readline ( ) )
        f . readline ( )
        for i in range ( 1 , n + 1 ) :
            arr [ i ] = int ( f . readline ( ) )
    final_max = 0
    for start in range ( 1 , 3 ) :
        max = 0
        sum = 0
        add = True
        for i in range ( start , n ) :
            dist [ i ] = abs ( arr [ i ] - arr [ i + 1 ] )
            if add :
                sum += dist [ i ]
                max = sum if sum > max else max
                add = False
            else :
                sum -= dist [ i ]
                add = True
            if sum < 0 :
                sum = 0
                add = True
        final_max = max if max > final_max else final_max
    print ( final_max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 881
---> probID: geeksforgeeks_910_A
---> inputs:

---> outputs:
9


def maximum_xor ( arr , n ) :
    from math import max , abs
    sForward , sBackward = [ ] , [ ]
    ans = - 1
    for i in range ( n ) :
        while not sForward and arr [ i ] < arr [ sForward [ - 1 ] ] :
            ans = max ( ans , arr [ i ] ^ arr [ sForward [ - 1 ] ] )
            sForward . pop ( )
        sForward . append ( i )
        while not sBackward and arr [ n - i - 1 ] < arr [ sBackward [ - 1 ] ] :
            ans = max ( ans , arr [ n - i - 1 ] ^ arr [ sBackward [ - 1 ] ] )
            sBackward . pop ( )
        sBackward . append ( n - i - 1 )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 882
---> probID: geeksforgeeks_1247_A
---> inputs:

---> outputs:
9F1

def dec_to_hexa ( n ) :
    hexadeci_num = [ ]
    i = 0
    while n != 0 :
        temp = 0
        temp = n % 16
        if temp < 10 :
            hexadeci_num . append ( chr ( temp + 48 ) )
            i += 1
        else :
            hexadeci_num . append ( chr ( temp + 55 ) )
            i += 1
        n = n // 16
    for j in range ( i - 1 , - 1 , - 1 ) :
        sys . stdout . write ( hexadeci_num [ j ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 883
---> probID: atcoder_ABC072_C
---> inputs:
7
3 1 4 1 5 9 2
---> outputs:
4

def main ( ) :
    import sys
    import os
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        d = { }
        for i in range ( - 1 , 1.0e+5 + 2 ) :
            d [ i ] = 0
    for i in range ( n ) :
        a = sys . stdin . readline ( )
        d [ a ] = d [ a ] + 1
    def solve ( ) :
        max = sys . maxsize
        for x in range ( 0 , 1.0e+5 + 1 ) :
            max = max ( max , d [ x - 1 ] + d [ x ] + d [ x + 1 ] )
        print ( max )
    return solve


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 884
---> probID: aizu_p01118_A
---> inputs:
3 9
ABCDEFGHI
JKLMNOPQR
STUVWXYZ_
ICPC
5 11
___________
____A______
________M__
___________
_C_________
ACM
4 21
1_2_3_4_5_6_7_8_9_0_-
QqWwEeRrTtYyUuIiOoPp@
AaSsDdFfGgHhJjKkLl;_:
ZzXxCcVvBbNnMm,_._/__
ICPC2019,AsiaYokohamaRegional,QualificationRound
0 0
---> outputs:
28
23
493

def main ( ) :
    import re
    for line in open ( '../../' ) . readlines ( ) :
        R = len ( line )
        C = len ( line )
        if R == 0 and C == 0 :
            break
        hm = { }
        for i in range ( R ) :
            data = line . strip ( )
            for j in range ( C ) :
                c = data [ j ]
                if c == '_' :
                    continue
                hm [ c ] = ( i , j )
        data = line . strip ( )
        iPos = 0
        jPos = 0
        count = len ( data )
        for c in data :
            loc = hm [ c ]
            count += abs ( iPos - loc [ 0 ] ) + abs ( jPos - loc [ 1 ] )
            iPos = loc [ 0 ]
            jPos = loc [ 1 ]
        print ( count )
    class Loc ( int ) :
        def __init__ ( self , i , j ) :
            self . i = i
            self . j = j


---> console_out:
 
DIDN'T MATCH!! :(
 51%|█████     | 884/1746 [00:20<00:20, 42.18it/s]

-------------------------------------


---> lineNum: 885
---> probID: atcoder_ABC112_A
---> inputs:
2
1
1
---> outputs:
2

def main ( ) :
    import sys
    m = sys . modules [ '__main__' ]
    m . run ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 886
---> probID: geeksforgeeks_375_A
---> inputs:

---> outputs:
564


def GFG ( data ) :
    num , res = 0 , 0
    for c in data :
        if c . isdigit ( ) :
            num = num * 10 + ord ( c ) - ord ( '0' )
        else :
            res = max ( res , num )
            num = 0
    return max ( res , num )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 887
---> probID: geeksforgeeks_3204_A
---> inputs:

---> outputs:
0   1   3


def GFG ( arr , n ) :
    sum = [ 0 ] * max
    index_1 , index_2 , index_3 , index = 0 , 0 , 0 , 0
    for i , k in enumerate ( arr [ 1 : ] ) :
        sum [ i ] = sum [ i - 1 ] + arr [ k ]
        k += 1
    ans = - ( 1e15 )
    index_1 = index_2 = index_3 = - 1
    for l in range ( 0 , n + 1 ) :
        index = 0
        vmin = ( 1e15 )
        for r in range ( l , n + 1 ) :
            if sum [ r ] < vmin :
                vmin = sum [ r ]
                index = r
            if sum [ l ] + sum [ r ] - vmin > ans :
                ans = sum [ l ] + sum [ r ] - vmin
                index_1 = l
                index_2 = index
                index_3 = r
    print ( index_1 , index_2 , index_3 , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 888
---> probID: geeksforgeeks_481_A
---> inputs:

---> outputs:
3 5 9 

def GFG ( arr , n ) :
    for i in range ( 1 , n - 1 ) :
        if arr [ i ] > arr [ i - 1 ] and arr [ i ] > arr [ i + 1 ] :
            print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 889
---> probID: geeksforgeeks_1405_A
---> inputs:

---> outputs:
5


def valueofX ( ar , n ) :
    sum = 0
    for i in ar :
        sum = sum + i
    if sum % n == 0 :
        return sum // n
    else :
        A , B = sum // n , sum // n + 1
        ValueA , ValueB = 0 , 0
        for i in range ( n ) :
            ValueA += ( ar [ i ] - A ) ** 2
            ValueB += ( ar [ i ] - B ) ** 2
        if ValueA < ValueB :
            return A
        else :
            return B


---> console_out:
 
DIDN'T MATCH!! :(
 51%|█████     | 889/1746 [00:21<00:20, 42.49it/s]

-------------------------------------


---> lineNum: 890
---> probID: codeforces_1625_A
---> inputs:
7
3 5
18 9 21
3 5
18 18 18
1 1
1
5 30
1 2 3 4 5
6 10
99 35 85 46 78 55
2 1
0 1
8 8
5 16 42 15 83 65 78 42
---> outputs:
17
18
1
1
39
0
2

def main ( args ) :
    import string
    import sys
    for i in range ( t ) :
        n = len ( sys . stdin . readline ( ) )
        l = len ( sys . stdin . readline ( ) )
        s = ""
        arr = [ 0 ] * l
        for j in range ( n ) :
            temp = string . atoi ( sys . stdin . readline ( ) )
            while len ( temp ) < l :
                temp = '0' + temp
            for k in range ( l ) :
                if k < len ( temp ) and temp [ k ] == '1' :
                    arr [ k ] += 1
        for j in range ( l ) :
            if n - arr [ j ] >= arr [ j ] :
                s += " "
            else :
                s += 1
        print ( int ( s , 2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 891
---> probID: atcoder_ABC066_B
---> inputs:
abaababaab
---> outputs:
6

def main ( ) :
    import string
    class Main ( object ) :
        def __init__ ( self , s ) :
            self . s = s
            self . _L = len ( s )
            self . _T = s
            for i in range ( len ( s ) // 2 ) :
                self . _L -= 2
                self . _T = self . _T [ : self . _L ]
                if self . _T [ : self . _L // 2 ] == self . _T [ self . _L // 2 : ] :
                    print ( self . _L )
                    break


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 892
---> probID: geeksforgeeks_2582_A
---> inputs:

---> outputs:
55


def find_nth ( n ) :
    import sys
    count = 0
    for curr in range ( 19 , 9 ) :
        sum = 0
        for x in range ( curr , 0 , - 1 ) :
            sum = sum + x % 10
        if sum == 10 :
            count += 1
        if count == n :
            return curr
    sys . stdout . write ( find_nth ( 5 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 893
---> probID: geeksforgeeks_2581_A
---> inputs:

---> outputs:
55


def find_nth ( n ) :
    import sys
    count = 0
    for curr in range ( 1 ) :
        sum = 0
        for x in curr :
            sum = sum + x % 10
        if sum == 10 :
            count += 1
        if count == n :
            return curr
    sys . stdout . write ( find_nth ( 5 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 894
---> probID: geeksforgeeks_1113_A
---> inputs:

---> outputs:
3


def count_number ( N , S ) :
    count_elements = 0
    curr_sum = 0
    while curr_sum <= S :
        curr_sum += N
        N -= 1
        count_elements += 1
    return count_elements


---> console_out:
 
DIDN'T MATCH!! :(
 51%|█████     | 894/1746 [00:21<00:20, 42.58it/s]

-------------------------------------


---> lineNum: 895
---> probID: geeksforgeeks_2822_A
---> inputs:

---> outputs:
Yes


def strmatch ( data , pattern , n , m ) :
    import re
    if not m :
        return ( n == 0 )
    lookup = np . zeros ( ( n + 1 , m + 1 ) )
    for i in range ( n + 1 ) :
        lookup [ i ] = False
    lookup [ 0 ] [ 0 ] = True
    for j in range ( 1 , m + 1 ) :
        if pattern [ j - 1 ] == '*' :
            lookup [ 0 ] [ j ] = lookup [ 0 ] [ j - 1 ]
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , m + 1 ) :
            if pattern [ j - 1 ] == '*' :
                lookup [ i ] [ j ] = lookup [ i ] [ j - 1 ] or lookup [ i - 1 ] [ j ]
            elif pattern [ j - 1 ] == '?' or data [ i - 1 ] == pattern [ j - 1 ] :
                lookup [ i ] [ j ] = lookup [ i - 1 ] [ j - 1 ]
            else :
                lookup [ i ] [ j ] = False
    return lookup [ n ] [ m ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 896
---> probID: aizu_p01171_A
---> inputs:
10 15
30 20
0 0
---> outputs:
a
b

def main ( ) :
    import sys
    import numpy as np
    import numpy . testing . utils as np
    import numpy . testing . utils as np
    class Main ( object ) :
        def run ( self ) :
            with self . open ( '/tmp/' ) as f :
                N = 1000001
                p = np . zeros ( N )
                p [ 0 ] = p [ 1 ] = False
                for i in range ( 2 , N ) :
                    if p [ i ] :
                        for j in range ( i + i , N , i ) :
                            p [ j ] = False
            while True :
                a = np . random . randint ( 0 , 1 )
                b = np . random . randint ( 0 , 1 )
                if ( a | b ) == 0 :
                    break
            sa = [ ]
            sb = [ ]
            k = 2
            while a > 1 :
                if p [ k ] and a % k == 0 :
                    a //= k
                    sa . append ( k )
                else :
                    k += 1
            k = 2
            while b > 1 :
                if p [ k ] and b % k == 0 :
                    b //= k
                    sb . append ( k )
                else :
                    k += 1
            pa = sa . pop ( )
            sa . remove ( pa )
            pb = sb . pop ( )
            sb . remove ( pb )
            for x in sa :
                pa -= x
            for x in sb :
                pb -= x
            print ( 'a' if pa > pb else 'b' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 897
---> probID: geeksforgeeks_4378_A
---> inputs:

---> outputs:
11.0


def nCr ( n , r ) :
    import numpy as np
    fac = np . zeros ( 100 )
    for i in range ( n ) :
        fac [ i ] = 1
    for i in range ( 1 , n + 1 ) :
        fac [ i ] = fac [ i - 1 ] * i
    ans = fac [ n ] / ( fac [ n - r ] ** 2 )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 898
---> probID: atcoder_ABC094_D
---> inputs:
5
6 9 4 2 11
---> outputs:
11 6

def main ( ) :
    import sys
    import math
    try :
        n = int ( sys . stdin . readline ( ) )
        a = [ ]
        for i in range ( n ) :
            a . append ( int ( sys . stdin . readline ( ) ) )
        a . sort ( )
        min = sys . maxsize
        ans = 0
        for i in range ( n - 1 ) :
            sa = abs ( a [ n - 1 ] - a [ i ] * 2 )
            if sa < min :
                min = sa
                ans = a [ i ]
        sys . stdout . write ( '%d ' % a [ n - 1 ] )
        sys . stdout . write ( '%d\n' % ans )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 899
---> probID: geeksforgeeks_918_A
---> inputs:

---> outputs:
5


def _gg_gcd ( a , b ) :
    import math
    if not a :
        return b
    return math . gcd ( b % a , a )
def _gg_gcd ( a , n , b ) :
    for i in range ( n ) :
        a = a * a
    return math . gcd ( a , b )


---> console_out:
 
DIDN'T MATCH!! :(
 51%|█████▏    | 899/1746 [00:21<00:20, 42.11it/s]

-------------------------------------


---> lineNum: 900
---> probID: aizu_p02275_A
---> inputs:
7
2 5 1 3 2 3 0
---> outputs:
0 1 2 2 3 3 5

def main ( ) :
    import sys
    import string
    import string
    import list
    import list
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    try :
        from math import sin , cos , exp , string
    except :
        import math
    try :
        from math import pi
    except :
        import math
    return math


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 901
---> probID: codeforces_1060_A
---> inputs:
11
00000000008
---> outputs:
1

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        s = sys . stdin . readline ( )
        count = 0
        for c in s :
            if c == '8' :
                count += 1
        print ( min ( count , n // 11 ) )
    except ValueError :
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 902
---> probID: geeksforgeeks_1813_A
---> inputs:

---> outputs:
3


def sum_of_digit ( n , b ) :
    unit_digit , sum = 0 , 0
    while n > 0 :
        unit_digit = n % b
        sum += unit_digit
        n = n // b
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 903
---> probID: geeksforgeeks_157_A
---> inputs:

---> outputs:
5555555550

def print_largest_divisible ( n , a ) :
    import math
    import sys
    c0 , c5 = 0 , 0
    for i in range ( n ) :
        if a [ i ] == 0 :
            c0 += 1
        else :
            c5 += 1
    c5 = int ( math . floor ( c5 / 9 ) ) * 9
    if c0 == 0 :
        sys . stdout . write ( - 1 )
    elif c5 == 0 :
        sys . stdout . write ( 0 )
    else :
        for i in range ( c5 ) :
            sys . stdout . write ( 5 )
        for i in range ( c0 ) :
            sys . stdout . write ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 904
---> probID: geeksforgeeks_2209_A
---> inputs:

---> outputs:
5


def count_ways ( n ) :
    import sys
    counter = 0
    for i in range ( 1 , n ) :
        for j in range ( i , n ) :
            for k in range ( j , n ) :
                for l in range ( k , n ) :
                    if i + j + k + l == n :
                        counter += 1
    return counter


---> console_out:
 
DIDN'T MATCH!! :(
 52%|█████▏    | 904/1746 [00:21<00:19, 42.55it/s]

-------------------------------------


---> lineNum: 905
---> probID: geeksforgeeks_2060_A
---> inputs:

---> outputs:
40 min


def number_of_minutes ( S , S1 ) :
    import math
    Min = 0
    Min = int ( ( ( S - S1 ) / math . floor ( S ) ) * 60 )
    return Min


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 906
---> probID: codeforces_1110_B
---> inputs:
4 100 2
20 30 75 80
---> outputs:
17

def codechef_submission ( ) :
    import sys
    try :
        n , m , k = select . select ( [ sys . stdin ] )
        b = [ ]
        if n < k :
            print ( n )
            return
        for i in range ( n ) :
            b . append ( sys . stdin . read ( ) )
        d = [ ]
        for i in range ( n - 1 ) :
            d . append ( b [ i + 1 ] - b [ i ] - 1 )
        d . sort ( )
        sum = b [ - 1 ] - b [ 0 ] + 1
        for i in range ( len ( d ) - 1 , len ( d ) - 1 - ( k - 1 ) , - 1 ) :
            sum -= d [ i ]
        print ( sum )
    except KeyboardInterrupt :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 907
---> probID: geeksforgeeks_1816_A
---> inputs:

---> outputs:
9


def GFG ( n ) :
    number_of_bits = int ( math . floor ( math . log ( n ) / math . log ( 2 ) ) ) + 1
    return ( ( 1 << number_of_bits ) - 1 ) ^ n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 908
---> probID: codeforces_1472_A
---> inputs:
5
2 2 3
3 3 2
5 10 2
11 13 1
1 4 4
---> outputs:
YES
NO
YES
YES
YES

def new_class27 ( ) :
    import sys
    t = sys . maxsize
    while t > 0 :
        w , h , n = sys . maxsize
        sheet = 1
        while w % 2 == 0 :
            w //= 2
            sheet *= 2
        while h % 2 == 0 :
            h //= 2
            sheet *= 2
        if sheet >= n :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 909
---> probID: geeksforgeeks_4194_A
---> inputs:

---> outputs:
( 2 , 2 )


def find_point ( x1 , y1 , x2 , y2 ) :
    print ( "(%d,%d )" % ( int ( 2 * x2 - x1 ) , int ( 2 * y2 - y1 ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 52%|█████▏    | 909/1746 [00:21<00:19, 41.88it/s]  File "./junk/1692552987134_9722/main.py", line 7
    
                                                                                                                                         ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 910
---> probID: aizu_p00479_A
---> inputs:
11
4
5 2
9 7
4 4
3 9
---> outputs:
2
3
1
3

def main ( z ) :
    import sys
    s = sys . stdin . read ( )
    for n , m , a , b , i in enumerate ( s ) :
        i -= 1
        print ( ( m - 1 - max ( abs ( ( a - 1 if a > 0 and n % 2 else a ) , abs ( ( b - 1 if b > 0 and n % 2 else b ) ) ) % 3 + 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 911
---> probID: geeksforgeeks_388_A
---> inputs:

---> outputs:
X = 0 ,  Y = 1


def alter ( x , y ) :
    import sys
    sys . stderr . write ( 'X = %d, Y = %d\n' % ( x , y ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 912
---> probID: aizu_p00969_A
---> inputs:
6
0 1 3 5 6 9
---> outputs:
4

def main ( ) :
    import random
    import sys
    try :
        n = len ( sys . stdin )
        v = [ None ] * n
        seen = set ( )
        for i in range ( n ) :
            v [ i ] = random . randint ( 0 , n )
            seen . add ( v [ i ] )
        for i in range ( 1 , n ) :
            swap ( v , int ( random . uniform ( - 1 , 1 ) ) , i )
        v . sort ( )
        ans = 2
        for i in range ( n ) :
            for j in range ( i + 1 , n ) :
                d = v [ j ] - v [ i ]
                if v [ i ] - d in seen :
                    continue
                cnt , cur = 2 , v [ j ]
                while cur + d in seen :
                    cur += d
                    cnt += 1
                ans = max ( ans , cnt )
        sys . stdout . write ( '%d %d %d\n' % ( ans , x , y ) )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552987204_2938/main.py", line 6
    sys . stderr . write ( ' Please SPACETOKEN enter SPACETOKEN a SPACETOKEN list SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 913
---> probID: codeforces_1569_A
---> inputs:
4
1
a
6
abbaba
6
abbaba
9
babbabbaa
---> outputs:
['-1 -1\n1 6\n3 6\n2 5', '-1 -1\n1 2\n1 2\n1 2\n']

def main ( ) :
    import sys
    try :
        cases = len ( sys . argv )
    except :
        sys . stderr . write ( ' Please SPACETOKEN enter SPACETOKEN a SPACETOKEN list SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN or SPACETOKEN a SPACETOKEN string SPACETOKEN of SPACETOKEN numbers SPACETOKEN or SPACETOKEN a SPACETOKEN string

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 914
---> probID: geeksforgeeks_4637_A
---> inputs:

---> outputs:
252666158


def GFG ( num ) :
    import string
    mod = 1000000007
    inv2 = 500000004
    def modulo ( num ) :
        res = 0
        for c in num :
            res = ( res * 10 + ord ( c ) - ord ( '0' ) ) % mod
        return res
    def findSum ( L , R ) :
        global a , b , l , r , ret
        a = modulo ( L )
        b = modulo ( R )
        l = ( ( a * ( a - 1 ) ) % mod * inv2 ) % mod
        r = ( ( b * ( b + 1 ) ) % mod * inv2 ) % mod
        ret = ( r % mod - l % mod )
        if ret < 0 :
            ret = ret + mod
        else :
            ret = ret % mod
        return ret
    def main ( ) :
        L = '88949273204'
        R = '8429729474298592'
        print ( findSum ( L , R ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(
 52%|█████▏    | 914/1746 [00:21<00:19, 42.03it/s]

-------------------------------------


---> lineNum: 915
---> probID: geeksforgeeks_4459_A
---> inputs:

---> outputs:
3  1  4  6  2  8  5  9  10  7  

def GFG ( ) :
    if k < 1 or l + 1 == r :
        return
    k -= 2
    mid = ( l + r ) // 2
    temp = a [ mid - 1 ]
    a [ mid - 1 ] = a [ mid ]
    a [ mid ] = temp
    unsort ( l , mid , a , k )
    unsort ( mid , r , a , k )
    def arrayWithKCalls ( n , k ) :
        if k % 2 == 0 :
            print ( 'NO SOLUTION' , end = ' ' )
            return
        a = [ 1 ] * ( n + 1 )
        a [ 0 ] = 1
        for i in range ( 1 , n ) :
            a [ i ] = i + 1
        k -= 1
        unsort ( 0 , n , a , k )
        for i in range ( n ) :
            print ( '%d ' % a [ i ] , end = ' ' )
    def main ( ) :
        n , k = 10 , 17
        arrayWithKCalls ( n , k )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 916
---> probID: geeksforgeeks_3056_A
---> inputs:

---> outputs:
15.756968956847974


def mean ( mid , freq , n ) :
    sum , freq_sum = 0 , 0
    for i in range ( n ) :
        sum = sum + mid [ i ] * freq [ i ]
        freq_sum = freq_sum + freq [ i ]
    return sum / freq_sum
    def grouped_sd ( lower_limit , upper_limit , freq , n ) :
        mid = [ ]
        sum , freq_sum , sd = 0 , 0 , 0
        for i in range ( n ) :
            mid . append ( ( lower_limit [ i ] + upper_limit [ i ] ) / 2 )
            sum = sum + freq [ i ] * mid [ i ] ** 2
            freq_sum = freq_sum + freq [ i ]
        sd = float ( math . sqrt ( ( sum - freq_sum * mean ( mid , freq , n ) ** 2 ) / ( freq_sum - 1 ) ) )
        return sd
    def main ( ) :
        lower_limit = [ 50 , 61 , 71 , 86 , 96 ]
        upper_limit = [ 60 , 70 , 85 , 95 , 100 ]
        freq = [ 9 , 7 , 9 , 12 , 8 ]
        n = len ( lower_limit )
        print ( grouped_sd ( lower_limit , upper_limit , freq , n ) )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 917
---> probID: geeksforgeeks_886_A
---> inputs:

---> outputs:
2


def ggcd ( a , b ) :
    import math
    if not a :
        return b
    return math . gcd ( b % a , a )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552987322_1703/main.py", line 16
    
                                                                                                                                                                                                                                                                                                                ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 918
---> probID: geeksforgeeks_2458_A
---> inputs:

---> outputs:
160


def GFG ( args ) :
    import math
    import os
    import sys
    import math
    import io
    class GFG ( math . Float ) :
        def rectanglearea ( a , b ) :
            if a < 0 or b < 0 :
                return - 1
            return 2 * a * b
        def rectanglearea ( a , b ) :
            a , b = 10 , 8
            print ( rectanglearea ( a , b ) )
    return GFG ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float ( math . Float1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 919
---> probID: codeforces_397_B
---> inputs:
2
5 2 3
6 4 5
---> outputs:
Yes
No

def CF427_1 ( args ) :
    import sys
    import random
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import struct
    from math import fabs , string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    if string is None :
        return None
    return string


---> console_out:
 
DIDN'T MATCH!! :(
 53%|█████▎    | 919/1746 [00:21<00:19, 42.17it/s]

-------------------------------------


---> lineNum: 920
---> probID: geeksforgeeks_3302_A
---> inputs:

---> outputs:
5


def GFG ( x ) : return ( x * ( x + 1 ) ) / 2
def count_jumps ( n ) :
    n = abs ( n )
    ans = 0
    while getsum ( ans ) < n or ( ( getsum ( ans ) - n ) & 1 ) > 0 :
        ans += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 921
---> probID: geeksforgeeks_3538_A
---> inputs:

---> outputs:
3


def GFG ( dp , arr1 , n , arr2 , m , k ) :
    if k < 0 :
        return - 10000000
    if n < 0 or m < 0 :
        return 0
    ans = dp [ n ] [ m ] [ k ]
    if ans != - 1 :
        return ans
    try :
        ans = max ( lcs ( dp , arr1 , n - 1 , arr2 , m , k ) , lcs ( dp , arr1 , n , arr2 , m - 1 , k ) )
        if arr1 [ n - 1 ] == arr2 [ m - 1 ] :
            ans = max ( ans , 1 + lcs ( dp , arr1 , n - 1 , arr2 , m - 1 , k ) )
        ans = max ( ans , 1 + lcs ( dp , arr1 , n - 1 , arr2 , m - 1 , k - 1 ) )
    except :
        pass
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 922
---> probID: atcoder_AGC007_C
---> inputs:
3 75 91
---> outputs:
1310.833333333333258

def main ( ) :
    import math
    import string
    import math
    import math
    import math
    import math
    N = math . sqrt ( math . pi )
    d = math . sqrt ( math . pi )
    x = math . sqrt ( math . pi )
    ans = decimal . Decimal ( "0.0" )
    while N > 0.5 :
        adnum = decimal . Decimal ( d + x * ( N - 0.5 ) )
        ans = ans + adnum
        d = ( N + 1.0 ) * d / N + ( 5.0 * x ) / ( 2.0 * N )
        x = ( 1.0 + ( 2.0 / N ) ) * x
        N -= 1
    format = "%d.%d.%d" % ( N , math . pi / 20 )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 923
---> probID: geeksforgeeks_5143_A
---> inputs:

---> outputs:
Prime number in reverse order
23 19 17 13 11 7 5 3 2 

def reverseorder ( n ) :
    prime = [ True for i in range ( n + 1 ) ]
    for p in range ( 2 , n + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , n + 1 , p ) :
                prime [ i ] = False
    for i in range ( n , 2 , - 1 ) :
        if prime [ i ] == True :
            print ( i , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 924
---> probID: geeksforgeeks_4501_A
---> inputs:

---> outputs:
    *        *
   ***      ***
  *****    *****
 *******  *******
******************


def pattern ( min_stars , p_height ) :
    global p_space
    p_space = p_height - 1
    i , j , k , n , x = 0 , p_height , 0 , 0
    x = 1
    for i in range ( p_height ) :
        for j in range ( p_space , i - 1 , - 1 ) :
            print ( " " , end = '' )
        for k in range ( min_stars ) :
            print ( "*" , end = '' )
        for n in range ( ( p_height + p_height - 2 ) , x - 1 , - 1 ) :
            print ( " " , end = '' )
        for k in range ( min_stars ) :
            print ( "*" , end = '' )
        min_stars = min_stars + 2
        x = x + 2
        print ( )


---> console_out:
 
MATCHED!! :D
 53%|█████▎    | 924/1746 [00:21<00:19, 42.20it/s]

-------------------------------------


---> lineNum: 925
---> probID: codeforces_629_B
---> inputs:
4
M 151 307
F 343 352
F 117 145
M 24 128
---> outputs:
2

def B629 ( ) :
    import string
    try :
        n = len ( string . ascii_lowercase )
    except AttributeError :
        n = 0
    FfriendPerDay = [ 0 ] * 367
    MfriendPerDay = [ 0 ] * 367
    answer = 0
    for c in string . ascii_lowercase :
        a = ord ( c )
        b = ord ( c )
        for j in range ( a , b + 1 ) :
            if c == 'M' :
                MfriendPerDay [ j ] += 1
            else :
                FfriendPerDay [ j ] += 1
            if MfriendPerDay [ j ] < FfriendPerDay [ j ] :
                if MfriendPerDay [ j ] > answer :
                    answer = MfriendPerDay [ j ]
            else :
                if FfriendPerDay [ j ] > answer :
                    answer = FfriendPerDay [ j ]
    print ( answer * 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 926
---> probID: geeksforgeeks_3694_A
---> inputs:

---> outputs:
22


def distancesum ( x , y , n ) :
    import math
    sum = 0
    for i in range ( n ) :
        for j in range ( i + 1 , n ) :
            sum += ( abs ( x [ i ] - x [ j ] ) + abs ( y [ i ] - y [ j ] ) )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 927
---> probID: geeksforgeeks_351_A
---> inputs:

---> outputs:
10


def fib ( n ) :
    import math
    phi = ( 1 + math . sqrt ( 5 ) ) / 2
    return int ( round ( math . pow ( phi , n ) / math . sqrt ( 5 ) ) )
    def calculate_sum ( l , r ) :
        sum = fib ( r + 2 ) - fib ( l + 1 )
        return sum
    def sum_fibonacci ( k ) :
        l = ( k * ( k - 1 ) ) // 2
        r = l + k
        sum = calculate_sum ( l , r - 1 )
        return sum
    def main ( args ) :
        k = 3
        print ( sum_fibonacci ( k ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 928
---> probID: geeksforgeeks_2646_A
---> inputs:

---> outputs:
50


def fib ( n ) :
    import math
    phi = ( 1 + math . sqrt ( 5 ) ) / 2
    return int ( round ( math . pow ( phi , n ) / math . sqrt ( 5 ) ) )
    def calculate_sum ( l , r ) :
        sum = 0
        for i in range ( l , r + 1 ) :
            sum += fib ( i )
        return sum
    def main ( ) :
        l , r = 4 , 8
        print ( calculate_sum ( l , r ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 929
---> probID: geeksforgeeks_2647_A
---> inputs:

---> outputs:
50


def GFG ( n ) :
    phi = ( 1 + math . sqrt ( 5 ) ) / 2
    return int ( round ( math . pow ( phi , n ) / math . sqrt ( 5 ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 53%|█████▎    | 929/1746 [00:21<00:19, 42.31it/s]

-------------------------------------


---> lineNum: 930
---> probID: codeforces_897_A
---> inputs:
3 1
ioi
1 1 i n
---> outputs:
noi

def main ( ) :
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    try :
        string = string . replace ( " " , " " )
    except :
        string = ""
    return string


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 931
---> probID: geeksforgeeks_2672_A
---> inputs:

---> outputs:
10


def compare_strings ( str1 , str2 ) :
    i = 0
    while i < len ( str1 ) - 1 and str1 [ i ] == str2 [ i ] :
        i += 1
    if str1 [ i ] > str2 [ i ] :
        return - 1
    if str1 [ i ] < str2 [ i ] :
        return 1
    else :
        return 0
def search_str ( arr , str , first , last ) :
    if first > last :
        return - 1
    mid = ( last + first ) // 2
    if arr [ mid ] == '' :
        left = mid - 1
        right = mid + 1
        while True :
            if left < right and right > last :
                return - 1
            if right <= last and not arr [ right ] . startswith ( ' ' ) :
                mid = right
                break
            if left >= right and not arr [ left ] . startswith ( ' ' ) :
                mid = left
                break
            right += 1
            left -= 1
    if compare_strings ( str , arr [ mid ] ) == 0 :
        return mid
    if compare_strings ( str , arr [ mid ] ) < 0 :
        return search_str ( arr , str , mid + 1 , last )
    return search_str ( arr , str , first , mid - 1 )
def main ( ) :
    arr = [ 'for' , '' , '' , 'geeks' , 'ide' , '' , 'practice' , '' , '' , 'quiz' , '' , '' ]
    str = 'quiz'
    n = len ( arr )
    print ( search_str ( arr , str , 0 , n - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 932
---> probID: codeforces_171_A
---> inputs:
3 14
---> outputs:
44

def main ( ) :
    import sys
    try :
        a = int ( sys . stdin . read ( ) )
        b = int ( sys . stdin . read ( ) )
        ans = get_num ( a , b )
        print ( ans )
    except :
        print ( 'Could not find num in %r' % sys . argv )
        return 1
    reverse_b = 0
    while b > 0 :
        reverse_b = reverse_b * 10 + b % 10
        b //= 10
    return a + reverse_b


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 933
---> probID: codeforces_749_B
---> inputs:
0 0
1 0
0 1
---> outputs:
3
1 -1
-1 1
1 1

def A1133 ( args ) :
    import sys
    import math
    try :
        x1 = int ( sys . stdin . readline ( ) )
        y1 = int ( sys . stdin . readline ( ) )
        x2 = int ( sys . stdin . readline ( ) )
        y2 = int ( sys . stdin . readline ( ) )
        x3 = int ( sys . stdin . readline ( ) )
        y3 = int ( sys . stdin . readline ( ) )
        print ( '3' )
        print ( ( x1 + x2 - x3 ) , y1 + y2 - y3 )
        print ( ( x3 + x2 - x1 ) , y3 + y2 - y1 )
        print ( ( x1 + x3 - x2 ) , y1 + y3 - y2 )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 934
---> probID: codeforces_1552_A
---> inputs:
4
3
lol
10
codeforces
5
aaaaa
4
dcba
---> outputs:
2
6
0
4

def main ( ) :
    import sys
    import string
    import string
    import math
    import csv
    class Main ( sys . stdout ) :
        def __init__ ( self ) :
            sys . stdout . write ( '' )
            self . count = 0
        def __iter__ ( self ) :
            return self . count
        def next ( self ) :
            return self . count
        def __eq__ ( self , other ) :
            return self . count == other . count
        def __ne__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __ne__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __ne__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __eq__ ( self , other ) :
            return self . __eq__ ( other )
        def __ne__ ( self , other ) :
            return self . __eq__ ( other )
    

---> console_out:
 
DIDN'T MATCH!! :(
 53%|█████▎    | 934/1746 [00:22<00:19, 41.91it/s]

-------------------------------------


---> lineNum: 935
---> probID: geeksforgeeks_2374_A
---> inputs:

---> outputs:
110


def sum_ap ( n , d ) :
    n //= d
    return ( n ) * ( 1 + n ) * d / 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 936
---> probID: aizu_p00238_A
---> inputs:
10
3
6 11
12 15
18 22
14
2
6 11
13 20
0
---> outputs:
OK
2

def main ( ) :
    import sys
    import string
    t = 0
    while t > 0 :
        n = len ( sys . stdin )
        global s
        global f
        sum = 0
        for i in range ( n ) :
            s = string . atoi ( n )
            f = string . atoi ( n )
            sum += f - s
        if t <= sum :
            print ( 'OK' )
        else :
            print ( t - sum )
        t = len ( sys . stdin )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 937
---> probID: geeksforgeeks_124_A
---> inputs:

---> outputs:
14 5 4 5 14 

def GFG ( num ) :
    fact = 1
    while num > 1 :
        fact *= num
        num -= 1
    return fact
    def catalan ( n ) :
        return fact ( 2 * n ) / ( fact ( n ) * fact ( n + 1 ) )
    def main ( ) :
        n = 5
        arr = [ 1 , 2 , 3 , 4 , 5 ]
        i , k = 0 , 0
        for k in range ( n ) :
            s = 0
            for i in range ( n ) :
                if arr [ i ] < arr [ k ] :
                    s += 1
            catalan_left_bst = catalan ( s )
            catalan_right_bst = catalan ( n - s - 1 )
            total_bst = catalan_right_bst * catalan_left_bst
            print ( total_bst , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 938
---> probID: codeforces_1238_A
---> inputs:
4
100 98
42 32
1000000000000000000 1
41 40
---> outputs:
YES
YES
YES
NO

def main ( ) :
    import sys
    try :
        n = len ( sys . argv )
        for j in range ( n ) :
            a = sys . argv [ j ]
            b = sys . argv [ j ]
            if abs ( a - b ) == 1 :
                print ( 'NO' )
            else :
                print ( 'YES' )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 939
---> probID: codeforces_1401_A
---> inputs:
6
4 0
5 8
0 1000000
0 0
1 0
1000000 1000000
---> outputs:
0
3
1000000
0
1
0

def code_chef ( ) :
    import sys
    try :
        s = open ( '/etc/codechef.d' )
        t = len ( s )
        while t > 0 :
            a = s . read ( 1 )
            b = s . read ( 1 )
            if a < b :
                print ( b - a )
            else :
                if a % 2 != b % 2 :
                    print ( 1 )
                else :
                    print ( 0 )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(
 54%|█████▍    | 939/1746 [00:22<00:19, 42.20it/s]

-------------------------------------


---> lineNum: 940
---> probID: geeksforgeeks_2252_A
---> inputs:

---> outputs:
5


def count_ways ( n , arr , len_ ) :
    count = [ 1 ] * ( n + 1 )
    count [ 0 ] = 1
    if not n :
        return 1
    for i in range ( 1 , n + 1 ) :
        no_ways = 0
        for j in range ( len_ ) :
            if i - arr [ j ] >= 0 :
                no_ways += count [ i - arr [ j ] ]
            count [ i ] = no_ways
    return count [ n ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 941
---> probID: aizu_p00206_A
---> inputs:
10000
5000 3150
5000 5000
0 0
5000 1050
5000 3980
5000 210
5000 5000
5000 5000
0 0
5000 2100
5000 2100
5000 2100
29170
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 100000
100000 70831
0
---> outputs:
6
NA

def main ( ) :
    import sys
    import string
    import math
    import numpy . pi
    import numpy . random . seed as seed
    class Main ( object ) :
        def doit ( self ) :
            while True :
                n = len ( self . s )
                if n == 0 :
                    break
                data = [ ]
                for i in range ( 12 ) :
                    data . append ( self . s [ i ] - self . s [ i ] )
                sum = 0
                flg = False
                ans = - 1
                for i in range ( 12 ) :
                    sum += data [ i ]
                    if sum >= n :
                        ans = i + 1
                        flg = True
                        break
                if flg :
                    print ( ans )
                else :
                    print ( 'NA' )
        def debug ( * x ) :
            print ( 'debug = %r' % str ( x ) )
        def doit ( * x ) :
            return int ( x )
    return Main ( )


---> console_out:
 
DIDN'T MATCH!! :(
s_push: parser stack overflow
MemoryError


-------------------------------------


---> lineNum: 942
---> probID: codeforces_1272_A
---> inputs:
8
3 3 4
10 20 30
5 5 5
2 4 3
1 1000000000 1000000000
1 1000000000 999999999
3 2 5
3 2 6
---> outputs:
0
36
0
0
1999999994
1999999994
2
4

def main ( ) :
    import math
    try :
        t = int ( math . ceil ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math . log ( math ( math . log ( math ( math . log ( math ( math . log ( math ( math ( math ( math ( math ( math ( math ( math ( math ( math ( math ( math ( math ( ) ( math ( math ( math ( math ( ) ( math ( math ( ) ( math ( ) ( math ( math ( ) ( math ( math ( ) ( math ( math ( math ( ) ( math ( math ( ) ( math ( math ( math ( ) ( math ( math ( math ( ) ( ) ( math ( math ( ) ( math ( math ( ) ( math ( ) ( math ( math ( ) ( math ( ) ( math ( math ( math ( ) ( math ( ) ( math ( math ( ) ( math ( math ( math ( ) ( math ( ) ( math ( math ( ) ( math ( math ( ) ( math ( math ( ) ( math ( math ( math ( ) ( ) ( math ( math ( math ( math ( ) ( math ( math ( ) ( math ( ) ( math ( math ( math ( ) ( math ( math ( ) ( math ( ) ( math ( math ( math ( math ( ) ( math ( math ( ) ( math ( math ( ( math ( math ( math ( ) ( math ( ) ( math ( ( math ( math ( ( math ( math ( ( ( math ( ( math ( ( math ( ( ( math ( ( ( math ( ( ( ( math ( ( ( math ( ( ( math ( ( ( ( ( math ( ( ( ( ( math ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 943
---> probID: codeforces_709_A
---> inputs:
2 7 10
5 6
---> outputs:
1

def CF709A ( ) :
    import sys
    try :
        n = len ( sys . argv )
        b = len ( sys . argv )
        d = len ( sys . argv )
        a , sum , count = 0 , 0
        while n > 0 :
            a = sys . argv [ n ]
            if a <= b :
                sum += a
            if sum > d :
                sum = 0
                count += 1
        print ( count )
        sys . exit ( )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 944
---> probID: geeksforgeeks_1543_A
---> inputs:

---> outputs:
Index: 5


def main ( arr , low , high , key ) :
    if high < low :
        return - 1
    mid = ( low + high ) // 2
    if key == arr [ mid ] :
        return mid
    if key > arr [ mid ] :
        return binary_search ( arr , ( mid + 1 ) , high , key )
    return binary_search ( arr , low , ( mid - 1 ) , key )


---> console_out:
 
DIDN'T MATCH!! :(
 54%|█████▍    | 944/1746 [00:22<00:19, 42.17it/s]

-------------------------------------


---> lineNum: 945
---> probID: geeksforgeeks_1078_A
---> inputs:

---> outputs:
NO


def equal_xor_sum ( arr , n ) :
    Sum = 0
    Xor = 0
    for i in range ( n ) :
        Sum = Sum + arr [ i ]
        Xor = Xor ^ arr [ i ]
    if Sum == Xor :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 946
---> probID: codeforces_796_B
---> inputs:
7 3 4
3 4 6
1 2
2 5
5 7
7 1
---> outputs:
1

def main ( ) :
    import sys
    import string
    import string
    import math
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 947
---> probID: geeksforgeeks_430_A
---> inputs:

---> outputs:
Odd pairs =  6
Even pairs =  4


def GFG ( arr , n ) :
    cntEven , cntOdd = 0 , 0
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            cntEven += 1
        else :
            cntOdd += 1
    evenPairs = 0
    evenPairs += ( ( cntEven * ( cntEven - 1 ) ) // 2 )
    evenPairs += ( ( cntOdd * ( cntOdd - 1 ) ) // 2 )
    oddPairs = 0
    oddPairs += ( cntEven * cntOdd )
    print ( "Odd pairs = %d" % oddPairs )
    print ( "Even pairs = %d" % evenPairs )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 948
---> probID: geeksforgeeks_1150_A
---> inputs:

---> outputs:
20


def min_broadcast_range ( houses , towers ) :
    n = len ( houses )
    m = len ( towers )
    left_tower = sys . maxsize
    right_tower = towers [ 0 ]
    j , k = 0 , 0
    min_range = 0
    while j < n :
        if houses [ j ] < right_tower :
            left = houses [ j ] - left_tower
            right = right_tower - houses [ j ]
            local_max = left if left < right else right
            if local_max > min_range :
                min_range = local_max
            j += 1
        else :
            left_tower = towers [ k ]
            if k < m - 1 :
                k += 1
                right_tower = towers [ k ]
            else :
                right_tower = sys . maxsize
    return min_range


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 949
---> probID: geeksforgeeks_1922_A
---> inputs:

---> outputs:
2


def get_remaining_der ( num , divisor ) :
    import math
    return ( num - divisor * ( num / divisor ) )


---> console_out:
 
DIDN'T MATCH!! :(
 54%|█████▍    | 949/1746 [00:22<00:18, 42.13it/s]

-------------------------------------


---> lineNum: 950
---> probID: codeforces_764_A
---> inputs:
1 1 10
---> outputs:
10

def tennis ( ) :
    import string
    s = [ ]
    res , cnt1 , cnt2 = 0 , 0 , 0
    n , m , z = s . pop ( 0 ) , s . pop ( 0 ) , s . pop ( 0 )
    for i in range ( m , z + 1 , m ) :
        for j in range ( n , z + 1 , n ) :
            if i == j :
                res . append ( cnt1 )
    print ( res )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 951
---> probID: aizu_p00181_A
---> inputs:
3 9
500
300
800
200
100
600
900
700
400
4 3
1000
1000
1000
0 0
---> outputs:
1800
1000

def main ( ) :
    import sys
    try :
        import aoj0181
    except :
        pass
    else :
        try :
            import aoj0181
        except :
            pass
        else :
            return False
    class aoj0181 ( aoj0181 ) :
        def __init__ ( self , width ) :
            self . width = width
            self . books = [ ]
            self . width = width
        def is_possible ( self ) :
            w , cnt = 0 , 1
            for i in range ( self . n ) :
                w += self . books [ i ]
                if self . books [ i ] > width :
                    return False
                if w > width :
                    cnt += 1
                    w = self . books [ i ]
            return cnt > self . m and self . width
        def do_it ( self ) :
            while True :
                m = self . m
                n = self . n
                if n + m == 0 :
                    return False
                self . books = [ ]
                for i in range ( n ) :
                    self . books . append ( self . width )
                left = 1
                right = 1500000
                while right - left != 1 :
                    next = ( left + right ) // 2
                    if is_possible ( next ) :
                        right = next
                    else :
                        left = next
                print ( right )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552988130_9976/main.py", line 10
    def __lt__ ( self , self ) :
    ^
SyntaxError: duplicate argument 'self' in function definition


-------------------------------------


---> lineNum: 952
---> probID: aizu_p02252_A
---> inputs:
3 50
60 10
100 20
120 30
---> outputs:
240

def main ( ) :
    import math
    import collections
    import sys
    class Stuff ( object ) :
        def __init__ ( self , v ) :
            self . v = v
            self . w = w
            self . performance = 1.0 * v / w
        def __lt__ ( self , self ) :
            if self . performance < self . performance :
                return 1
            if self . performance > self . performance :
                return - 1
            return 0
    class Main ( object ) :
        def __init__ ( self , n ) :
            self . n = n
            self . w = w
            self . que = collections . deque ( )
            for i in range ( n ) :
                vi , wi = self . n
                self . que . append ( ( vi , wi ) )
    res = 0
    while w > 0 and not que . empty ( ) :
        s = que . popleft ( )
        if w >= s . w :
            res += s . v
            w -= s . w
        else :
            res += s . performance * w
            w = 0
    print ( math . floor ( res ) )
    sys . exit ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 953
---> probID: geeksforgeeks_1766_A
---> inputs:

---> outputs:
The element with single occurrence is  2


def GFG ( arr , n ) :
    ones , twos = 0 , 0
    common_bit_mask = 0
    for i in range ( n ) :
        twos = twos | ( ones & arr [ i ] )
        ones = ones ^ arr [ i ]
        common_bit_mask = ~ ( ones & twos )
        ones &= common_bit_mask
        twos &= common_bit_mask
    return ones


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 954
---> probID: geeksforgeeks_491_A
---> inputs:

---> outputs:
2


def maxdiff ( arr , n ) :
    freq = { }
    for i in range ( n ) :
        freq [ arr [ i ] ] = freq . get ( arr [ i ] , None ) or 1
    ans = 0
    for i in range ( n ) :
        for j in range ( n ) :
            if freq [ arr [ i ] ] > freq [ arr [ j ] ] and arr [ i ] > arr [ j ] :
                ans = max ( ans , freq [ arr [ i ] ] - freq [ arr [ j ] ] )
            elif freq [ arr [ i ] ] < freq [ arr [ j ] ] and arr [ i ] < arr [ j ] :
                ans = max ( ans , freq [ arr [ j ] ] - freq [ arr [ i ] ] )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 55%|█████▍    | 954/1746 [00:22<00:18, 42.23it/s]

-------------------------------------


---> lineNum: 955
---> probID: codeforces_1447_B
---> inputs:
2
2 2
-1 1
1 1
3 4
0 -1 -2 -3
-1 -2 -3 -4
-2 -3 -4 -5
---> outputs:
2
30

def CF_1447B_numbersBox ( ) :
    import sys
    count = sys . maxsize
    for i in range ( count ) :
        n = sys . maxsize
        m = sys . maxsize
        arr = [ 0 ] * n
        nagiviteTimes = 0
        minNum = sys . maxsize
        sumNum = 0
        for j in range ( len ( arr ) ) :
            arr [ j ] = sys . maxsize
            if arr [ j ] < 0 :
                arr [ j ] = 0 - arr [ j ]
                nagiviteTimes += 1
                sumNum += arr [ j ]
                if minNum > arr [ j ] :
                    minNum = arr [ j ]
            else :
                sumNum += arr [ j ]
                if minNum > arr [ j ] :
                    minNum = arr [ j ]
        if nagiviteTimes % 2 == 0 :
            print ( sumNum )
        else :
            print ( sumNum - minNum * 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 956
---> probID: geeksforgeeks_2253_A
---> inputs:

---> outputs:
-1 3 7 


def make_ap ( arr , n ) :
    if n == 3 :
        common_difference = arr [ 2 ] - arr [ 1 ]
        initial_term = arr [ 1 ] - common_difference
    elif ( arr [ 1 ] - arr [ 0 ] ) == arr [ 2 ] - arr [ 1 ] :
        initial_term = arr [ 0 ]
        common_difference = arr [ 1 ] - arr [ 0 ]
    elif ( arr [ 2 ] - arr [ 1 ] ) == ( arr [ 3 ] - arr [ 2 ] ) :
        common_difference = arr [ 2 ] - arr [ 1 ]
        initial_term = arr [ 1 ] - common_difference
    else :
        common_difference = ( arr [ 3 ] - arr [ 0 ] ) // 3
        initial_term = arr [ 0 ]
    for i in range ( n ) :
        print ( initial_term + str ( i * common_difference ) , end = ' ' )
    print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 957
---> probID: geeksforgeeks_4205_A
---> inputs:

---> outputs:
11


def count_pairs ( n ) :
    count = 0
    for x in range ( 1 , n ) :
        for y in range ( x + 1 , n + 1 ) :
            if ( y + x ) % ( y ^ x ) == 0 :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 958
---> probID: geeksforgeeks_3030_A
---> inputs:

---> outputs:
4


def count_pairs ( n ) :
    import sys
    count = 0
    for x in range ( 1 , n ) :
        for y in range ( x + 1 , n + 1 ) :
            if ( y * x ) % ( y + x ) == 0 :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 959
---> probID: leetcode_409_A
---> inputs:

---> outputs:
7

def longest_palindrome ( s ) :
    count = [ 0 ] * 128
    for c in s :
        count [ ord ( c ) ] += 1
    ans = 0
    for v in count :
        ans += v // 2 * 2
        if ans % 2 == 0 and v % 2 == 1 :
            ans += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 55%|█████▍    | 959/1746 [00:22<00:18, 42.60it/s]

-------------------------------------


---> lineNum: 960
---> probID: geeksforgeeks_2569_A
---> inputs:

---> outputs:
Total possible expressions of length 6 is 5


def GFG ( n , k ) :
    res = 1
    if k > n - k :
        k = n - k
    for i in range ( k ) :
        res *= ( n - i )
        res //= ( i + 1 )
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 961
---> probID: codeforces_400_A
---> inputs:
4
OXXXOXOOXOOX
OXOXOXOXOXOX
XXXXXXXXXXXX
OOOOOOOOOOOO
---> outputs:
3 1x12 2x6 4x3
4 1x12 2x6 3x4 6x2
6 1x12 2x6 3x4 4x3 6x2 12x1
0

def ex8 ( ) :
    import string
    import sys
    import math
    count = 0
    flag = 0
    s = [ ]
    for i in range ( n ) :
        s . append ( ' %s' % i )
    for i in range ( n ) :
        res = ''
        count = 0
        for q in range ( 1 , 12 + 1 ) :
            if s [ q ] == 'X' :
                res = ' 1x12'
                count += 1
                break
        for j in range ( 2 , 6 + 1 ) :
            flag = 0
            if 12 % j == 0 :
                for k in range ( 1 , 12 // j + 1 ) :
                    flag = 0
                    for p in range ( k , 12 + 1 , 12 // j ) :
                        if s [ p ] == 'O' :
                            flag = 1
                            break
                    if flag == 0 :
                        count += 1
                        res += ' %dx%d' % ( j , 12 // j )
                        break
        flag = 0
        for l in range ( 1 , 12 + 1 ) :
            if s [ l ] == 'O' :
                flag = 1
                break
        if flag == 0 :
            res += ' 12x1'
            count += 1
        print ( '%d%s' % ( count , res ) )
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 962
---> probID: codeforces_203_A
---> inputs:
30 5 20 20 3 5
---> outputs:
YES

def main ( ) :
    import sys
    from io import BytesIO
    from io import TextIOWrapper
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 963
---> probID: geeksforgeeks_1676_A
---> inputs:

---> outputs:
Yes


def GFG ( n ) :
    if n % 2 == 1 :
        return False
    else :
        return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 964
---> probID: geeksforgeeks_4796_A
---> inputs:

---> outputs:
14


def count_number ( n ) :
    import sys
    result = 0
    for i in range ( 1 , 9 + 1 ) :
        s = [ ]
        if i <= n :
            s . append ( i )
            result += 1
        while not s :
            tp = s [ - 1 ]
            s . append ( tp )
            for j in range ( tp % 10 , 9 + 1 ) :
                x = tp * 10 + j
                if x <= n :
                    s . append ( x )
                    result += 1
    return result


---> console_out:
 
DIDN'T MATCH!! :(
 55%|█████▌    | 964/1746 [00:22<00:18, 42.69it/s]

-------------------------------------


---> lineNum: 965
---> probID: geeksforgeeks_3477_A
---> inputs:

---> outputs:
5.2


def max_average_of_path ( cost , N ) :
    dp = np . zeros ( ( N + 1 , N + 1 ) )
    dp [ 0 ] [ 0 ] = cost [ 0 ] [ 0 ]
    for i in range ( 1 , N ) :
        dp [ i ] [ 0 ] = dp [ i - 1 ] [ 0 ] + cost [ i ] [ 0 ]
    for j in range ( 1 , N ) :
        dp [ 0 ] [ j ] = dp [ 0 ] [ j - 1 ] + cost [ 0 ] [ j ]
    for i in range ( 1 , N ) :
        for j in range ( 1 , N ) :
            dp [ i ] [ j ] = max ( dp [ i - 1 ] [ j ] , dp [ i ] [ j - 1 ] ) + cost [ i ] [ j ]
    return float ( dp [ N - 1 ] [ N - 1 ] ) / ( 2 * N - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 966
---> probID: geeksforgeeks_1374_A
---> inputs:

---> outputs:
Count = 500000
Count = 166667


def GFG ( ) :
    import numpy as np
    global sieve_prime
    global sieve_count
    sieve_prime [ 1 ] = 1
    for i in range ( 2 , MAX + 1 ) :
        if sieve_prime [ i ] == 0 :
            for j in range ( i * 2 , MAX + 1 , i ) :
                if sieve_prime [ j ] == 0 :
                    sieve_prime [ j ] = 1
                    sieve_count [ i ] += 1
    return np . array ( sieve_prime )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 967
---> probID: aizu_p01415_A
---> inputs:
1 1 1 2 3 100
50
---> outputs:
49.500000000

def main ( ) :
    import sys
    try :
        n , k , t , u , v , l = select . select ( [ sys . stdin ] )
        d = [ None ] * ( n + 1 )
    except :
        pass
    d [ n ] = l
    pos , c , nk = 0 , 0 , 0
    tm = 0
    while pos < l :
        if pos < d [ c ] :
            if nk > 0 :
                nk -= 1
                x = min ( l , pos + t * v )
                tm += ( x - pos ) / float ( v )
                pos = x
            else :
                tm += ( d [ c ] - pos ) / float ( u )
                pos = d [ c ]
        else :
            if d [ c ] == pos :
                x = min ( l , pos + t * v )
                tm += ( x - pos ) / float ( v )
                pos = x
                c += 1
            else :
                if nk < k :
                    c += 1
                    nk += 1
                else :
                    x = min ( l , d [ c ] + t * v )
                    c += 1
    print ( tm )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 968
---> probID: geeksforgeeks_462_A
---> inputs:

---> outputs:
2


def ways_to_split ( s ) :
    n = len ( s )
    answer = 0
    prefix = [ 0 ] * n
    suffix = [ 0 ] * n
    seen = [ 0 ] * 26
    for i in range ( n ) :
        prev = ( prefix [ i - 1 ] if i - 1 >= 0 else 0 )
        if seen [ s [ i ] - 'a' ] == 0 :
            prefix [ i ] += ( prev + 1 )
        else :
            prefix [ i ] = prev
        seen [ s [ i ] - 'a' ] = 1
    for i in range ( 26 ) :
        seen [ i ] = 0
    suffix [ n - 1 ] = 0
    for i in range ( n - 1 , 1 , - 1 ) :
        prev = suffix [ i ]
        if seen [ s [ i ] - 'a' ] == 0 :
            suffix [ i - 1 ] += ( prev + 1 )
        else :
            suffix [ i - 1 ] = prev
            seen [ s [ i ] - 'a' ] = 1
    for i in range ( n ) :
        if prefix [ i ] == suffix [ i ] :
            answer += 1
    return answer


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 969
---> probID: projecteuler_p121_A
---> inputs:

---> outputs:
2269

def p121 ( ) :
    import math
    print ( math . factorial ( ) )
    TURNS = 15
    ways = [ [ 1 ] ]
    for i in range ( 1 , TURNS + 1 ) :
        ways . append ( [ 1 ] )
        for j in range ( 0 , i + 1 ) :
            temp = 0
            if j < i :
                temp = ways [ i - 1 ] [ j ] * math . log ( i )
            if j > 0 :
                temp = temp + ways [ i - 1 ] [ j - 1 ]
            ways [ i ] [ j ] = temp
    numer = 0
    for i in range ( TURNS // 2 + 1 , TURNS + 1 ) :
        numer = numer + ways [ TURNS ] [ i ]
    denom = math . factorial ( TURNS + 1 )
    return math . divide ( numer , 2 )


---> console_out:
 
DIDN'T MATCH!! :(
 55%|█████▌    | 969/1746 [00:22<00:18, 42.35it/s]  File "./junk/1692552988551_8771/main.py", line 43
    from math
            ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 970
---> probID: codeforces_350_B
---> inputs:
5
0 0 0 0 1
0 1 2 3 4
---> outputs:
5
1 2 3 4 5

def main ( ) :
    import sys
    import string
    import string
    import list
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    from math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    try :
        string
            string = string
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 971
---> probID: geeksforgeeks_1469_A
---> inputs:

---> outputs:
After Merging 
First Array: [1, 2, 3, 5, 8, 9]
Second Array: [10, 13, 15, 20]


def merge ( m , n ) :
    import sys
    arr1 = [ 1 , 5 , 9 , 10 , 15 , 20 ]
    arr2 = [ 2 , 3 , 8 , 13 ]
    def merge ( m , n ) :
        for i in range ( n - 1 , - 1 , - 1 ) :
            j , last = arr1 [ m - 1 ]
            for j in range ( m - 2 , - 1 , - 1 ) :
                arr1 [ j + 1 ] = arr1 [ j ]
            if j != m - 2 or last > arr2 [ i ] :
                arr1 [ j + 1 ] = arr2 [ i ]
                arr2 [ i ] = last
    return np . array ( arr1 ) , np . array ( arr2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 972
---> probID: geeksforgeeks_1925_A
---> inputs:

---> outputs:
35


def ggcd ( a , b ) :
    if not a :
        return b
    return ggcd ( b % a , a )
def same_remainder ( a , b , c ) :
    a1 , b1 , c1 = ( b - a ) , ( c - b ) , ( c - a )
    return ggcd ( a1 , ggcd ( b1 , c1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 973
---> probID: codeforces_1185_A
---> inputs:
5 2 6 3
---> outputs:
2

def main ( ) :
    import sys
    import random
    import string
    import math
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct
    import struct


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 974
---> probID: geeksforgeeks_2210_A
---> inputs:

---> outputs:
5


def GFG ( n , parts , next_part ) :
    if not parts and not n :
        return 1
    if n <= 0 or parts <= 0 :
        return 0
    if dp [ n ] [ next_part ] [ parts ] != - 1 :
        return dp [ n ] [ next_part ] [ parts ]
    ans = 0
    for i in range ( next_part , n + 1 ) :
        ans += count_ways ( n - i , parts - 1 , i )
    return ( dp [ n ] [ next_part ] [ parts ] , ans )
def count_ways ( n ) :
    for i in range ( 5001 ) :
        for j in range ( 5001 ) :
            for l in range ( 5 ) :
                dp [ i ] [ j ] [ l ] = - 1
    return count_ways ( n , 4 , 1 )
def main ( ) :
    n = 8
    print ( count_ways ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 56%|█████▌    | 974/1746 [00:23<00:18, 42.15it/s]

-------------------------------------


---> lineNum: 975
---> probID: geeksforgeeks_5051_A
---> inputs:

---> outputs:
9


def GFG ( a , b ) :
    if ( a + b ) % 2 == 0 :
        return ( ( a + b ) // 2 )
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 976
---> probID: geeksforgeeks_2045_A
---> inputs:

---> outputs:
3675.0


def GFG ( x , y , z ) :
    N = 101
    mod = int ( 1e9 ) + 7
    exactsum = [ [ 0 ] * N for i in range ( N ) ]
    exactnum = [ [ 0 ] * N for i in range ( N ) ]
    def sum ( x , y , z ) :
        ans = 0
        exactnum [ 0 ] [ 0 ] = 1
        for i in range ( 0 , x + 1 ) :
            for j in range ( 0 , y + 1 ) :
                for k in range ( 0 , z + 1 ) :
                    if i > 0 :
                        exactsum [ i ] [ j ] [ k ] += ( exactsum [ i - 1 ] [ j ] [ k ] * 10 + 4 * exactnum [ i - 1 ] [ j ] [ k ] ) % mod
                        exactnum [ i ] [ j ] [ k ] += exactnum [ i - 1 ] [ j ] [ k ] % mod
                    if j > 0 :
                        exactsum [ i ] [ j ] [ k ] += ( exactsum [ i ] [ j - 1 ] [ k ] * 10 + 5 * exactnum [ i ] [ j - 1 ] [ k ] ) % mod
                        exactnum [ i ] [ j ] [ k ] += exactnum [ i ] [ j - 1 ] [ k ] % mod
                    if k > 0 :
                        exactsum [ i ] [ j ] [ k ] += ( exactsum [ i ] [ j ] [ k - 1 ] * 10 + 6 * exactnum [ i ] [ j ] [ k - 1 ] ) % mod
                        exactnum [ i ] [ j ] [ k ] += exactnum [ i ] [ j ] [ k - 1 ] % mod
                    ans += exactsum [ i ] [ j ] [ k ] % mod
                    ans %= mod
        return ans
    def main ( ) :
        x , y , z = 1 , 1 , 1
        print ( sum ( x , y , z ) % mod )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 977
---> probID: geeksforgeeks_2704_A
---> inputs:

---> outputs:
YES


def is_valid_string ( data ) :
    global freq
    freq = [ 0 ] * ( CHARS )
    for c in data :
        freq [ ord ( c ) - ord ( 'a' ) ] += 1
    i , freq1 , count_freq1 = 0 , 0 , 0
    for i in range ( CHARS ) :
        if freq [ i ] != 0 :
            freq1 = freq [ i ]
            count_freq1 = 1
            break
    j , freq2 , count_freq2 = 0 , 0 , 0
    for j in range ( i + 1 , CHARS ) :
        if freq [ j ] != 0 :
            if freq [ j ] == freq1 :
                count_freq1 += 1
            else :
                count_freq2 = 1
                freq2 = freq [ j ]
                break
    for k in range ( j + 1 , CHARS ) :
        if freq [ k ] != 0 :
            if freq [ k ] == freq1 :
                count_freq1 += 1
            if freq [ k ] == freq2 :
                count_freq2 += 1
            else :
                return False
        if count_freq1 > 1 and count_freq2 > 1 :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 978
---> probID: codeforces_1480_A
---> inputs:
3
a
bbbb
az
---> outputs:
b
azaz
by

def code_chef ( ) :
    import string
    import sys
    import string
    import io
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 979
---> probID: geeksforgeeks_3321_A
---> inputs:

---> outputs:
3


def find_minimum_subsequences ( A , B ) :
    number_of_subsequences = 1
    size_of_b = len ( B )
    size_of_a = len ( A )
    inf = 1000000
    next = np . zeros ( ( 26 , size_of_b ) )
    for i in range ( 26 ) :
        for j in range ( size_of_b ) :
            next [ i ] [ j ] = inf
    for i in range ( size_of_b ) :
        next [ B [ i ] - 'a' ] [ i ] = i
    for i in range ( 26 ) :
        for j in range ( size_of_b - 2 , - 1 , - 1 ) :
            if next [ i ] [ j ] == inf :
                next [ i ] [ j ] = next [ i ] [ j + 1 ]
    pos = 0
    i = 0
    while i < size_of_a :
        if pos == 0 and next [ A [ i ] - 'a' ] [ pos ] == inf :
            number_of_subsequences = - 1
            break
        elif pos < size_of_b and next [ A [ i ] - 'a' ] [ pos ] < inf :
            next_index = next [ A [ i ] - 'a' ] [ pos ] + 1
            pos = next_index
            i += 1
        else :
            number_of_subsequences += 1
            pos = 0
    return number_of_subsequences


---> console_out:
 
DIDN'T MATCH!! :(
 56%|█████▌    | 979/1746 [00:23<00:18, 42.00it/s]

-------------------------------------


---> lineNum: 980
---> probID: codeforces_1627_B
---> inputs:
2
4 3
1 2
---> outputs:
3 3 4 4 4 4 4 4 5 5 5 5 
1 1

def main ( rgs ) :
    import sys
    fh = sys . stdin
    pieces = [ ]
    t = int ( fh . readline ( ) )
    for i in range ( t ) :
        a = fh . readline ( ) . split ( )
        row = int ( a [ 0 ] )
        col = int ( a [ 1 ] )
        ans = [ ]
        ansarray = [ 0 ] * row * col
        p = 0
        rowarray = [ 0 , 0 , row - 1 , row - 1 ]
        colarray = [ 0 , col - 1 , 0 , col - 1 ]
        for j in range ( row ) :
            for k in range ( col ) :
                dis = 0
                for l in range ( 4 ) :
                    dis = max ( dis , abs ( rowarray [ l ] - j ) + abs ( colarray [ l ] - k ) )
                ansarray [ p ] = dis
                p += 1
        ansarray . sort ( )
        for j in ansarray :
            ans . append ( '%d %s' % ( j , j ) )
        pieces . append ( '%s\n' % ans )
    print ( pieces )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 981
---> probID: geeksforgeeks_1555_A
---> inputs:

---> outputs:
1 2 2 3 4 1 

def find_rank ( arr , length ) :
    import sys
    sys . stdout . write ( '1' + ' ' )
    for i in range ( 1 , len ( arr ) ) :
        rank = 1
        for j in range ( i ) :
            if arr [ j ] > arr [ i ] :
                rank += 1
        sys . stdout . write ( '%d ' % rank )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 982
---> probID: atcoder_ABC085_D
---> inputs:
1 10
3 5
---> outputs:
3

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        h = int ( sys . stdin . readline ( ) )
        a = [ ]
        b = [ None ] * n
    except :
        pass
    a . sort ( )
    b . sort ( )
    ans = sys . maxsize
    for i in range ( 0 , n + 1 ) :
        if i != 0 :
            h -= b [ i - 1 ]
        cnt = 0
        if h > 0 :
            cnt = ( h + a [ n - 1 ] - 1 ) / a [ n - 1 ]
        ans = min ( ans , cnt + i )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 983
---> probID: geeksforgeeks_2324_A
---> inputs:

---> outputs:
4378


def firstkdigits ( n , k ) :
    product = 1
    for i in range ( n ) :
        product *= n
    while int ( product / pow ( 10 , k ) ) != 0 :
        product = product // 10
    return product


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 984
---> probID: aizu_p00595_A
---> inputs:
57 38
60 84
---> outputs:
19
12

def main ( ) :
    import sys
    r = sys . stdin . readlines ( )
    for line in r :
        m , n = int ( line . split ( ) [ 0 ] ) , int ( line . split ( ) [ 1 ] )
        if m < n :
            t = m
            m = n
            n = t
        while n != 0 :
            t = n
            n = m % n
            m = t
        print ( m )


---> console_out:
 
DIDN'T MATCH!! :(
 56%|█████▋    | 984/1746 [00:23<00:17, 42.40it/s]

-------------------------------------


---> lineNum: 985
---> probID: aizu_p01916_A
---> inputs:
hcpc
---> outputs:
1

def main ( ) :
    import string
    s = list ( sys . stdin . readlines ( ) )
    a = [ 0 ] * 26
    sum = 0
    for c in s :
        a [ ord ( c ) - ord ( 'a' ) ] += 1
    for i in range ( 26 ) :
        sum += a [ i ] % 2
    print ( sum / 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 986
---> probID: geeksforgeeks_558_A
---> inputs:

---> outputs:
75
544


def complement ( num ) :
    import math
    import math
    temp = num
    while True :
        num , num = 0 , num // 10 , num
        if abs ( num ) == 0 :
            break
    num = temp
    comp = int ( math . pow ( 10 , len ( num ) ) ) - num
    return comp


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 987
---> probID: geeksforgeeks_4490_A
---> inputs:

---> outputs:
3


def count_unset_bits ( n ) :
    x = n
    n |= n >> 1
    n |= n >> 2
    n |= n >> 4
    n |= n >> 8
    n |= n >> 16
    return sum ( x ^ n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 988
---> probID: geeksforgeeks_1519_A
---> inputs:

---> outputs:
1


def min_operations ( arr , n ) :
    import numpy as np
    maxi , result = 0 , 0
    freq = np . zeros ( 1000001 )
    for i in range ( n ) :
        x = arr [ i ]
        freq [ x ] += 1
    maxi = np . max ( arr )
    for i in range ( 1 , maxi + 1 ) :
        if freq [ i ] != 0 :
            for j in range ( i * 2 , maxi , 4 , 4 ) :
                freq [ j ] = 0
            result += 1
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 989
---> probID: geeksforgeeks_3277_A
---> inputs:

---> outputs:
3


def total_ways ( N , M , X ) :
    dp = np . zeros ( ( N + 1 , 2 ) )
    if X == 1 :
        dp [ 0 ] [ 0 ] = 1
    else :
        dp [ 0 ] [ 1 ] = 0
    if X == 1 :
        dp [ 1 ] [ 0 ] = 0
        dp [ 1 ] [ 1 ] = M - 1
    else :
        dp [ 1 ] [ 0 ] = 1
        dp [ 1 ] [ 1 ] = ( M - 2 )
    for i in range ( 2 , N ) :
        dp [ i ] [ 0 ] = dp [ i - 1 ] [ 1 ]
        dp [ i ] [ 1 ] = dp [ i - 1 ] [ 0 ] * ( M - 1 ) + dp [ i - 1 ] [ 1 ] * ( M - 2 )
    return dp [ N - 1 ] [ 0 ]


---> console_out:
 
DIDN'T MATCH!! :(
 57%|█████▋    | 989/1746 [00:23<00:17, 42.57it/s]

-------------------------------------


---> lineNum: 990
---> probID: geeksforgeeks_1984_A
---> inputs:

---> outputs:
8


def get_min_num ( a , b , c ) :
    import sys
    if c < a or c > b :
        return c
    x = ( ( b // c ) * c ) + c
    return x


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 991
---> probID: atcoder_ABC052_B
---> inputs:
5
IIDID
---> outputs:
2

def main ( ) :
    import sys
    try :
        n = len ( sys . stdin )
        s = sys . stdin . read ( ) . strip ( )
    except AttributeError :
        pass
    x = 0
    max = 0
    for c in s :
        if c == 'I' :
            x += 1
        else :
            x -= 1
        max = max ( max , x )
    print ( max )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552989069_8867/main.py", line 7
    break
    ^
SyntaxError: 'break' outside loop


-------------------------------------


---> lineNum: 992
---> probID: aizu_p01144_A
---> inputs:
2 8
5 6
4 5
3 1
5 10
5 10
5 10
0 0
---> outputs:
5
140

def main ( ) :
    import sys
    try :
        n , m = sys . stdin . read ( ) . split ( ' ' )
        al = [ ]
        if not n and not m :
            break
        for i in range ( n ) :
            al . append ( ( sys . stdin . read ( ) , sys . stdin . read ( ) ) )
        al . sort ( )
        while not al :
            st = al . pop ( 0 )
            m -= st . d
            if m <= 0 :
                ans -= m * st . p
                break
        while not al :
            st = al . pop ( 0 )
            ans += st . d * st . p
        print ( ans )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 993
---> probID: atcoder_ABC062_D
---> inputs:
2
3 1 4 1 5 9
---> outputs:
1

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . read ( ) )
    except ValueError :
        pass
    front = [ ]
    back = [ ]
    arr = [ 0 ] * n
    front_sum = 0
    back_sum = 0
    for i in range ( n ) :
        x = int ( sys . stdin . read ( ) )
        front_sum += x
        front . append ( x )
    for i in range ( n ) :
        arr [ i ] = int ( sys . stdin . read ( ) )
    for i in range ( n ) :
        x = int ( sys . stdin . read ( ) )
        back_sum += x
        back . append ( - x )
    values = [ front_sum , - back_sum ]
    for i in range ( n ) :
        front_sum += arr [ i ]
        front . append ( arr [ i ] )
        front_sum -= front [ i - 1 ]
        values [ i + 1 ] += front_sum
        back_sum += arr [ n - i - 1 ]
        back . append ( - arr [ n - i - 1 ] )
        back_sum += back [ i - 1 ]
        values [ n - i - 1 ] -= back_sum
    max = 0
    for i in range ( 0 , n + 1 ) :
        max = max ( max , values [ i ] )
    print ( max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 994
---> probID: geeksforgeeks_4045_A
---> inputs:

---> outputs:
Total number of ways =  6


def GFG ( N ) :
    arr = [ 1 , 5 , 6 ]
    count = [ 0 ] * ( N + 1 )
    count [ 0 ] = 1
    for i in range ( 1 , N + 1 ) :
        for j in range ( len ( arr ) ) :
            if i >= arr [ j ] :
                count [ i ] += count [ i - arr [ j ] ]
    return count [ N ]


---> console_out:
 
DIDN'T MATCH!! :(
 57%|█████▋    | 994/1746 [00:23<00:17, 42.55it/s]

-------------------------------------


---> lineNum: 995
---> probID: geeksforgeeks_3702_A
---> inputs:

---> outputs:
4


def number_of_ways ( x ) :
    import sys
    if not x or x == 1 :
        return 1
    else :
        return number_of_ways ( x - 1 ) + ( x - 1 ) * number_of_ways ( x - 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 996
---> probID: geeksforgeeks_2931_A
---> inputs:

---> outputs:
1 -> 2
3 -> 3
2 -> 5
4 -> 6


def count_freq ( a , n ) :
    hm = [ 0 ] * n
    for i in range ( n ) :
        hm [ a [ i ] ] += 1
    cumul = 0
    for i in range ( n ) :
        cumul += hm [ a [ i ] ]
        if hm [ a [ i ] ] != 0 :
            print ( '%d->%d' % ( a [ i ] , cumul ) )
        hm [ a [ i ] ] = 0


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552989187_2250/main.py", line 24
    print ( "(%d, %d, %d)" " is one such possible" " triplet between %d and %d" " and %d" " % ( possible_a , possible_b , possible_c , possible_c , L , R ) )
                                                                                                                                                            ^
SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 997
---> probID: geeksforgeeks_2899_A
---> inputs:

---> outputs:
( 2 , 3 , 4 ) is one such possible triplet between 2 and 10
( 24 , 25 , 26 ) is one such possible triplet between 24 and 46


def possible_triplet_in_range ( L , R ) :
    import sys
    flag = False
    possible_a , possible_b , possible_c = 0 , 0 , 0
    numbers_in_range = ( R - L + 1 )
    if numbers_in_range < 3 :
        flag = False
    elif numbers_in_range > 3 :
        flag = True
        if L % 2 > 0 :
            L += 1
        possible_a = L
        possible_b = L + 1
        possible_c = L + 2
    else :
        if not ( L % 2 > 0 ) :
            flag = True
            possible_a = L
            possible_b = L + 1
            possible_c = L + 2
        else :
            flag = False
    if flag == True :
        print ( "(%d, %d, %d)" " is one such possible" " triplet between %d and %d" " and %d" " % ( possible_a , possible_b , possible_c , possible_c , L , R ) )
    else :
        print ( "No Such Triplet" " exists between %d and %d" " and %d" " % ( L , R ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 998
---> probID: geeksforgeeks_2688_A
---> inputs:

---> outputs:
code


def GFG ( charSet , str1 ) :
    global alphabet
    s2 = ""
    for i in str1 :
        s2 += alphabet [ charSet . find ( i ) ]
    return s2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 999
---> probID: geeksforgeeks_3206_A
---> inputs:

---> outputs:
The 10 distinct integers are:
6 8 10 11 13 16 20 22 25 34 

def generate_number ( count , a , n , num , k ) :
    if count == k :
        a = sorted ( a )
        return
    for i in range ( n ) :
        generate_number ( count + 1 , a , n , num + a [ i ] , k )
    def print_distinct_integers ( k , a , n ) :
        generate_number ( 0 , a , n , 0 , k )
        print ( "The" , " " . join ( sorted ( a ) ) , " " , "distinct integers are: " )
        print ( )
        for ( i , j ) in enumerate ( a ) :
            print ( i , end = " " )
    def main ( ) :
        arr = [ 3 , 8 , 17 , 5 ]
        n = len ( arr )
        k = 2
        print_distinct_integers ( k , arr , n )
    return main


---> console_out:
 
DIDN'T MATCH!! :(
 57%|█████▋    | 999/1746 [00:23<00:17, 42.71it/s]

-------------------------------------


---> lineNum: 1000
---> probID: geeksforgeeks_2230_A
---> inputs:

---> outputs:
9
59


def product ( x ) :
    prod = 1
    while x > 0 :
        prod *= ( x % 10 )
        x //= 10
    return prod
    def find_number ( l , r ) :
        b = str ( r )
        ans = r
        for i in range ( len ( b ) ) :
            if b [ i ] == '0' :
                continue
            curr = b [ i ] + chr ( ( ord ( b [ i ] ) - ord ( '0' ) ) - 1 ) + chr ( ord ( '0' ) )
            for c in curr [ i + 1 : ] :
                c = '9'
            num = 0
            for c in c :
                num = num * 10 + ord ( c ) - ord ( '0' )
            if num >= l and product ( ans ) < product ( num ) :
                ans = num
        return ans
    def main ( ) :
        l , r = 1 , 10
        print ( find_number ( l , r ) )
        l , r = 51 , 62
        print ( find_number ( l , r ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1001
---> probID: geeksforgeeks_4265_A
---> inputs:

---> outputs:
5


def GFG ( ) :
    global isPrime
    MAX = 100005
    isPrime = [ False ] * MAX
    def sieveOfEratostheneses ( ) :
        isPrime [ 1 ] = True
        for i in range ( 2 , 2 * MAX ) :
            if not isPrime [ i ] :
                for j in range ( 2 * i , MAX , i ) :
                    isPrime [ j ] = True
    def findPrime ( n ) :
        num = n + 1
        while num > 0 :
            if not isPrime [ num ] :
                return num
            num = num + 1
        return 0
    def minNumber ( arr , n ) :
        sieveOfEratostheneses ( )
        sum = 0
        for i in range ( n ) :
            sum += arr [ i ]
        if not isPrime [ sum ] :
            return 0
        num = findPrime ( sum )
        return num - sum
    def main ( ) :
        arr = [ 2 , 4 , 6 , 8 , 12 ]
        n = len ( arr )
        print ( minNumber ( arr , n ) )
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1002
---> probID: geeksforgeeks_3062_A
---> inputs:

---> outputs:
26


def get_min_sum ( arr , n ) :
    bits_count , max_bit , sum , ans = [ 0 ] * MAX , 0 , 0 , 0
    for d in range ( n ) :
        e , f = arr [ d ] , 0
        while e > 0 :
            rem = e % 2
            e = e // 2
            if rem == 1 :
                bits_count [ f ] += rem
            f += 1
        max_bit = max ( max_bit , f )
    for d in range ( max_bit ) :
        temp = int ( math . pow ( 2 , d ) )
        if bits_count [ d ] > n // 2 :
            ans = ans + temp
    for d in range ( n ) :
        arr [ d ] = arr [ d ] ^ ans
        sum = sum + arr [ d ]
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1003
---> probID: codeforces_70_B
---> inputs:
25
Hello. I am a little walrus.
---> outputs:
2

def _70B ( ) :
    import sys
    import string
    import string
    import sys
    class _70B ( object ) :
        def __init__ ( self ) :
            self . stdin = None
            self . stdout = None
            self . stdout = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
            self . _70B = None
    return _70B


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1004
---> probID: codeforces_689_B
---> inputs:
3
2 2 3
---> outputs:
0 1 2

def mikeandShortcuts ( ) :
    import sys
    f = sys . stdin
    out = [ ]
    global n
    n = int ( f . readline ( ) )
    a = [ 0 ] * n
    tk = list ( f . readline ( ) )
    for i in range ( n ) :
        a [ i ] = int ( tk [ i ] ) - 1
    g = [ [ ] for i in range ( n ) ]
    for i in range ( n - 1 ) :
        if a [ i ] != i :
            g [ i ] . append ( a [ i ] )
        g [ i ] . append ( i + 1 )
        g [ i + 1 ] . append ( i )
    if a [ n - 1 ] != n - 1 :
        g [ n - 1 ] . append ( a [ n - 1 ] )
    dist = [ 0 ] * n
    dist [ 0 ] = - 1
    dist [ 0 ] = 0
    q = [ 0 ]
    while not q . empty ( ) :
        u = q . pop ( )
        for v in g [ u ] :
            if dist [ v ] == - 1 :
                q . append ( v )
                dist [ v ] = dist [ u ] + 1
    out . append ( dist [ 0 ] )
    for i in range ( 1 , n ) :
        out . append ( ' %d' % dist [ i ] )
    print ( out )


---> console_out:
 
DIDN'T MATCH!! :(
 58%|█████▊    | 1004/1746 [00:23<00:17, 42.39it/s]

-------------------------------------


---> lineNum: 1005
---> probID: codeforces_1470_A
---> inputs:
2
5 4
2 3 4 3 2
3 5 12 20
5 5
5 4 3 2 1
10 40 90 160 250
---> outputs:
30
190

def strange_birth_day ( n , m ) :
    import sys
    import random
    ans = 0
    j = 0
    for k in n [ : : - 1 ] :
        if k < len ( m ) :
            if m [ k ] > m [ j ] :
                ans += m [ j ]
                j += 1
            else :
                ans += m [ k ]
    print ( ans )
    def main ( ) :
        f = sys . stdin
        test = len ( f )
        while test > 0 :
            n = f . tell ( )
            m = f . tell ( )
            arr = [ ]
            marr = [ ]
            for i in range ( n ) :
                arr . append ( f . read ( ) - 1 )
            for i in range ( m ) :
                marr . append ( f . read ( ) )
            strange = strange_birth_day ( )
            strange . help_birth_day_bow ( arr , marr )
    class f ( object ) :
        def readline ( self ) :
            f . readline ( )
            try :
                return f . readline ( )
            except :
                pass
            return None
        def readline ( self ) :
            data = ''
            try :
                data = f . readline ( ) . strip ( )
            except :
                pass
            return data
    return f


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1006
---> probID: geeksforgeeks_3217_A
---> inputs:

---> outputs:
3


def find_maximum_num ( arr , n ) :
    import sys
    for i in range ( n , 1 , - 1 ) :
        count = 0
        for j in range ( n ) :
            if i <= arr [ j ] :
                count += 1
        if count >= i :
            return i
    return 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1007
---> probID: aizu_p02422_A
---> inputs:
abcde
3
replace 1 3 xyz
reverse 0 2
print 1 4
---> outputs:
xaze

def main ( ) :
    import sys
    f = sys . stdin
    s = list ( f )
    n = int ( f . strip ( ) )
    for i in range ( n ) :
        split_command = f . strip ( ) . split ( )
        a = int ( split_command [ 1 ] )
        b = int ( split_command [ 2 ] )
        if split_command [ 0 ] . startswith ( 'p' ) :
            print ( s [ a : b + 1 ] )
        elif split_command [ 0 ] . startswith ( 'rev' ) :
            temp = list ( s [ a : b + 1 ] )
            temp . reverse ( )
            s [ a : b + 1 ] = '' . join ( temp )
        else :
            p = split_command [ 3 ]
            s [ a : b + 1 ] = p


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1008
---> probID: geeksforgeeks_3833_A
---> inputs:

---> outputs:
3


def GFG ( A , n ) :
    dp = np . zeros ( ( 2000 , 2000 ) )
    flag = 1
    sum = 0
    for i in range ( n ) :
        sum += A [ i ]
    for i in range ( - sum , sum + 1 ) :
        try :
            dp [ 0 ] [ i ] = np . inf
        except :
            pass
    dp [ 0 ] [ 0 ] = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( 0 , sum + 1 ) :
            try :
                dp [ flag ] [ j ] = np . inf
                if j - A [ i - 1 ] <= sum and j - A [ i - 1 ] >= - sum :
                    dp [ flag ] [ j ] = dp [ flag ^ 1 ] [ j - A [ i - 1 ] ]
                if j + A [ i - 1 ] <= sum and j + A [ i - 1 ] >= - sum and dp [ flag ^ 1 ] [ j + A [ i - 1 ] ] != np . inf :
                    dp [ flag ] [ j ] = min ( dp [ flag ] [ j ] , dp [ flag ^ 1 ] [ j + A [ i - 1 ] ] + 1 )
            except :
                pass
        flag = flag ^ 1
    for i in range ( 0 , sum + 1 ) :
        if dp [ flag ^ 1 ] [ i ] != np . inf :
            return dp [ flag ^ 1 ] [ i ]
    return n - 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552989471_7911/main.py", line 4
    with open

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1009
---> probID: aizu_p00058_A
---> inputs:
1.0 1.0 2.0 2.0 0.0 0.0 1.0 -1.0
0.0 0.0 2.0 0.0 -1.0 2.0 2.0 2.0
10.0 6.0 3.4 5.2 6.8 9.5 4.3 2.1
2.5 3.5 2.5 4.5 -3.3 -2.3 6.8 -2.3
---> outputs:
YES
NO
NO
YES

def main ( ) :
    import sys
    eps = 1e-10
    with open ( ' . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . . / . / . . / . . / . / . . / . / . . / . / . . / . / . . / . / . . / . / . / . . / . / . / . . / . / . / . / . / . . / . / . / . / . / . . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . / . . / . / . / . / . / . / . / . / .

---> console_out:
 
DIDN'T MATCH!! :(
 58%|█████▊    | 1009/1746 [00:23<00:17, 42.37it/s]

-------------------------------------


---> lineNum: 1010
---> probID: aizu_p00221_A
---> inputs:
5 7
1
2
Fizz
4
Buzz
6
7
3 5
1
2
3
4
5
0 0
---> outputs:
2 3 4 5
1

def main ( ) :
    import sys
    import os
    try :
        import aoj0221
    except :
        pass
    else :
        try :
            import aoj0221
        except :
            pass
        else :
            return - 1
    class aoj0221 :
        person = [ False ]
        m , n = 0 , 0
        def do_it ( ) :
            while True :
                m = len ( sys . stdin . readline ( ) )
                n = len ( sys . stdin . readline ( ) )
                if m + n == 0 :
                    break
                person . append ( True )
                user = 0
                cnt = 0
                for i in range ( 1 , n + 1 ) :
                    input = sys . stdin . readline ( )
                    talk = getTalk ( i )
                    if input == talk and m - cnt > 1 :
                        person [ user ] = True
                        cnt += 1
                    user = getUser ( user )
                i = 0
                for i in range ( m ) :
                    if person [ i ] == False :
                        print ( i + 1 , end = ' ' )
                        break
                for i in range ( i + 1 , m ) :
                    if person [ i ] == False :
                        print ( ' ' , end = ' ' )
                    print ( )
        def getTalk ( num ) :
            return 'FizzBuzz' if num % 15 == 0 else 'Fizz' if num % 3 == 0 else 'Fizz' if num % 5 == 0 else 'Buzz' if num % 5 == 0 else str ( num )
        def getUser ( currentUser ) :
            for i in range ( 1 , m + 1 ) :
                if not person [ ( currentUser + i ) % m ] :
                    return ( currentUser + i ) % m
                return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1011
---> probID: geeksforgeeks_2552_A
---> inputs:

---> outputs:
56


def GFG ( ) :
    l = [ [ 0 ] * 1001 ] * 1001
    def initialize ( ) :
        l [ 0 ] [ 0 ] = 1
        for i in range ( 1 , 1001 ) :
            l [ i ] [ 0 ] = 1
            for j in range ( 1 , i + 1 ) :
                l [ i ] [ j ] = ( l [ i - 1 ] [ j - 1 ] + l [ i - 1 ] [ j ] )
    def nCr ( n , r ) :
        return l [ n ] [ r ]
    def main ( ) :
        initialize ( )
        n = 8
        r = 3
        print ( nCr ( n , r ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1012
---> probID: atcoder_ABC070_B
---> inputs:
0 75 25 100
---> outputs:
50

def main ( ) :
    import sys
    try :
        a = int ( sys . stdin . readline ( ) )
        b = int ( sys . stdin . readline ( ) )
        c = int ( sys . stdin . readline ( ) )
        d = int ( sys . stdin . readline ( ) )
        x = [ 0 ] * 101
        for i in range ( a , b ) :
            x [ i ] += 1
        for i in range ( c , d ) :
            x [ i ] += 1
        ans = 0
        for i in range ( 101 ) :
            if x [ i ] == 2 :
                ans += 1
        print ( ans )
    except :
        print ( 'No input found' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1013
---> probID: geeksforgeeks_1125_A
---> inputs:

---> outputs:
0 16 1 

def GFG ( a , b , n , m ) :
    mul = 1
    for i in range ( m ) :
        if b [ i ] != 0 :
            mul = mul * b [ i ]
    for i in range ( n ) :
        x = int ( math . floor ( a [ i ] / mul ) )
        print ( x , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1014
---> probID: codeforces_519_B
---> inputs:
5
1 5 8 123 7
123 7 5 1
5 1 7
---> outputs:
8
123

def quick_sort ( a , d , c ) :
    i = d
    j = c
    mid = a [ ( d + c ) // 2 ]
    while i <= j :
        while a [ i ] < mid :
            i += 1
        while a [ j ] > mid :
            j -= 1
        if i <= j :
            tg = a [ i ]
            a [ i ] = a [ j ]
            a [ j ] = tg
            i += 1
            j -= 1
    if d < j :
        quick_sort ( a , d , j )
    if i < c :
        quick_sort ( a , i , c )
    def main ( ) :
        sc = sys . stdin
        n = sc . tell ( )
        a = [ None ] * ( n + 5 )
        for i in range ( 1 , n + 1 ) :
            a [ i ] = sc . read ( n )
        b = [ None ] * ( n + 5 )
        for i in range ( 1 , n ) :
            b [ i ] = sc . read ( n )
        c = [ None ] * ( n + 5 )
        for i in range ( 1 , n - 2 + 1 ) :
            c [ i ] = sc . read ( n )
        quick_sort ( a , 1 , n )
        quick_sort ( b , 1 , n - 1 )
        quick_sort ( c , 1 , n - 2 )
        res_a = a [ n ]
        for i in range ( 1 , n ) :
            if a [ i ] != b [ i ] :
                res_a = a [ i ]
                break
        print ( res_a )
        res_b = b [ n - 1 ]
        for i in range ( 1 , n - 2 + 1 ) :
            if b [ i ] != c [ i ] :
                res_b = b [ i ]
                break
        print ( res_b )
        sc . close ( )


---> console_out:
 
DIDN'T MATCH!! :(
 58%|█████▊    | 1014/1746 [00:23<00:17, 41.94it/s]  File "./junk/1692552989617_9265/main.py", line 12
    del n - 1
        ^
SyntaxError: cannot delete operator


-------------------------------------


---> lineNum: 1015
---> probID: codeforces_1140_B
---> inputs:
3
2
<>
3
><<
1
>
---> outputs:
1
0
0

def main ( args ) :
    import string
    import sys
    try :
        T = int ( sys . stdin . read ( ) )
    except ValueError :
        pass
    else :
        T -= 1
    n = len ( args )
    c = list ( args )
    del n - 1
    for i in range ( n ) :
        if c [ i ] == '>' or c [ n - 1 - i ] == '<' :
            print ( i )
            break


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1016
---> probID: codeforces_579_A
---> inputs:
5
---> outputs:
2

def codforce ( ) :
    import string
    import math
    import math
    import os
    n = math . pi
    s = ""
    while n > 0 :
        x = n % 2
        n //= 2
        s += "%d" % x
    ans = 0
    for c in s :
        if c == '1' :
            ans += 1
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552989662_5362/main.py", line 47
    

SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1017
---> probID: codeforces_148_B
---> inputs:
1
2
1
1
10
---> outputs:
2

def main ( ) :
    import sys
    import math
    import numpy as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    import testing as np
    import numpy . testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    import testing as np
    testing = np . testing . as_np ( np . testing . as_np ( np . testing . as_np ( np . testing . as_np ( np . testing . as_np ( np . testing . as_np ( np . np . testing . as_np ( np . np . testing . as_np ( np . np . testing . as_np ( np . np . testing . as_np ( np . np . testing . as_np ( np . np . testing . as_np ( np . np . testing . as_np ( np . np . testing . np ( np . np . testing . np ( np . np . testing . np ( np . np . testing . np ( np . np . np . testing . np ( np . np . testing . np ( np . np . testing . np ( np . np . np ( np . np . testing . np ( np . np . np ( np . np . testing . np ( np . np . np ( np . np . testing . np ( np . np . np ( np . np . np ( np . np . np ( np . np ( np . np ( np . np

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1018
---> probID: codeforces_387_A
---> inputs:
05:50
05:44
---> outputs:
00:06

def main ( ) :
    import sys
    s = sys . stdin . read ( ) . split ( ':' )
    t = sys . stdin . read ( ) . split ( ':' )
    x = time . localtime ( int ( s [ 0 ] ) , int ( s [ 1 ] ) )
    y = time . localtime ( int ( t [ 0 ] ) , int ( t [ 1 ] ) )
    print ( x - y . tm_hour - y . tm_min )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1019
---> probID: geeksforgeeks_316_A
---> inputs:

---> outputs:
3


def longest_alternating_substring ( a , n ) :
    longest = 1
    cnt = 1
    for i in range ( 1 , n ) :
        if a [ i ] * a [ i - 1 ] < 0 :
            cnt += 1
            longest = max ( longest , cnt )
        else :
            cnt = 1
    return longest


---> console_out:
 
DIDN'T MATCH!! :(
 58%|█████▊    | 1019/1746 [00:24<00:17, 42.51it/s]

-------------------------------------


---> lineNum: 1020
---> probID: geeksforgeeks_443_A
---> inputs:

---> outputs:
Acute-angled Triangle


def check_type_of_triangle ( a , b , c ) :
    import math
    sqa = int ( math . pow ( a , 2 ) )
    sqb = int ( math . pow ( b , 2 ) )
    sqc = int ( math . pow ( c , 2 ) )
    if sqa == sqa + sqb or sqb == sqa + sqc or sqc == sqa + sqb :
        print ( "Right-angled Triangle" , end = " " )
    elif sqa > sqc + sqb or sqb > sqa + sqc or sqc > sqa + sqb :
        print ( "Obtuse-angled Triangle" , end = " " )
    else :
        print ( "Acute-angled Triangle" , end = " " )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1021
---> probID: geeksforgeeks_1569_A
---> inputs:

---> outputs:
4


def count_subgraph ( s , n ) :
    global result , C
    cntG , cntF , result , C = 0 , 0 , 0 , 0
    for c in s :
        if c == 'G' :
            cntG += 1
            result += C
        elif c == 'F' :
            cntF += 1
            C += cntG
        else :
            continue
    print ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1022
---> probID: atcoder_ABC112_C
---> inputs:
2
0 0 180291302
20 20 180291262
---> outputs:
0 0 180291302

def main ( ) :
    import sys
    import numpy as np
    MAX = 100
    try :
        with open ( '../examples/test.txt' ) as f :
            n = len ( f . readlines ( ) )
            x , y , h = np . zeros ( n ) , np . zeros ( n ) , np . zeros ( n )
            np . random . seed ( 0 )
            for i in range ( 0 , MAX + 1 ) :
                x [ i ] = f . read ( )
                y [ i ] = f . read ( )
                h [ i ] = f . read ( )
    except :
        pass
    for i in range ( 0 , MAX + 1 ) :
        for j in range ( 0 , MAX + 1 ) :
            ch = check ( n , x , y , h , i , j )
            if ch > 0 :
                print ( i , j , ch )
def check ( n , x , y , h , cx , cy ) :
    ch = - 1
    for i in range ( n ) :
        if h [ i ] > 0 :
            ch = abs ( x [ i ] - cx ) + abs ( y [ i ] - cy ) + h [ i ]
            break
    for i in range ( n ) :
        if h [ i ] != max ( ch - abs ( x [ i ] - cx ) - abs ( y [ i ] - cy ) , 0 ) :
            return - 1
    return ch


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1023
---> probID: geeksforgeeks_1262_A
---> inputs:

---> outputs:
5


def count_steps ( n ) :
    steps = 0
    while n > 0 :
        largest = int ( math . cbrt ( n ) )
        n -= ( largest * largest * largest )
        steps += 1
    return steps


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1024
---> probID: aizu_p00138_A
---> inputs:
18 25.46
16 26.23
3 23.00
10 24.79
5 22.88
11 23.87
19 23.90
1 25.11
23 23.88
4 23.46
7 24.12
12 22.91
13 21.99
14 22.86
21 23.12
9 24.09
17 22.51
22 23.49
6 23.02
20 22.23
24 21.89
15 24.14
8 23.77
2 23.42
---> outputs:
5 22.88
3 23.00
13 21.99
14 22.86
24 21.89
20 22.23
17 22.51
12 22.91

def main ( ) :
    import sys
    import os
    import math
    class AOJ_0138 ( object ) :
        def __init__ ( self ) :
            self . num = None
            self . time = None
        def __lt__ ( self , other ) :
            return self . time < other . time
        def __gt__ ( self , other ) :
            return self . time > other . time
        def __eq__ ( self , other ) :
            return self . num == other . num
        def __eq__ ( self , other ) :
            return self . num == other . num
        def __ne__ ( self , other ) :
            return self . time == other . time
        def __eq__ ( self , other ) :
            return self . num == other . num
        def __eq__ ( self , other ) :
            return self . time == other . time
        def __ne__ ( self , other ) :
            return self . time == other . time
        def __eq__ ( self , other ) :
            return self . num == other . num
        def __eq__ ( self , other ) :
            return self . time == other . time
        def __ne__ ( self , other ) :
            return self . time == other . time
        def __eq__ ( self , other ) :
            return self . num == other . num
        def __eq__ ( self , other ) :
            return self . time == other . time
        def __eq__ ( self , other ) :
            return self . num == other . num
        def __eq__ ( self , other ) :
            return self . time == other . time
        def __ne__ ( self , other ) :
            return self . time == other . time
        def __eq__ ( self , other ) :
            return self . num == other . num
        def __eq__ ( self , other ) :
            return self . time == other . time
        def __ne__ ( self , other ) :
            return self . time == other . time
        def __eq__ ( self , other ) :
            return self . num == other . num
        def __eq__ ( self , other ) :
            return self . time == other . time
        def __ne__ ( self , other ) :
            return self . time == other . time
        def __eq__ ( self , other ) :
            return self . num == other . num
    

---> console_out:
 
DIDN'T MATCH!! :(
 59%|█████▊    | 1024/1746 [00:24<00:16, 42.58it/s]

-------------------------------------


---> lineNum: 1025
---> probID: codeforces_459_B
---> inputs:
2
1 2
---> outputs:
1 1

def main ( args ) :
    import sys
    import math
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    arr = [ ]
    mx , mn , mxcount , mncount = 0 , 0 , 0 , 0
    for i in range ( n ) :
        arr . append ( math . floor ( math . log ( arr [ i ] , 2 ) ) )
        mx = max ( arr [ i ] , mx )
        mn = min ( arr [ i ] , mn )
    for i in range ( n ) :
        if arr [ i ] == mx :
            mxcount += 1
        if arr [ i ] == mn :
            mncount += 1
    if mx != mn :
        print ( mx - mn , mxcount * mncount )
    else :
        print ( mx - mn , mxcount * ( mxcount - 1 ) / 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1026
---> probID: geeksforgeeks_855_A
---> inputs:

---> outputs:
4


def GFG ( arr ) :
    ans = 0
    for i in arr :
        x = sum ( i )
        if i % x == 0 :
            ans += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1027
---> probID: atcoder_AGC010_B
---> inputs:
1
1
---> outputs:
YES

def main ( ) :
    import sys
    try :
        N = len ( sys . stdin )
        A = [ ]
        for i in range ( N ) :
            A . append ( sys . stdin . read ( ) )
        print ( 'YES' if check ( A ) else 'NO' )
    except :
        print ( 'NO' )
        return 0
    def check ( A ) :
        N = len ( A )
        sum = 0
        for i in A :
            sum += A [ i ]
        if sum % ( int ( N ) * ( N + 1 ) / 2 ) != 0 :
            return 0
        op = int ( sum / ( int ( N ) * ( N + 1 ) / 2 ) )
        for i in range ( N ) :
            diff = A [ ( i + 1 ) % N ] - A [ i ]
            if ( diff > op ) :
                return 0
            if ( op - diff ) % N :
                return 0
        return 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1028
---> probID: geeksforgeeks_2304_A
---> inputs:

---> outputs:
216


def max_prod ( N ) :
    import math
    if N == 0 :
        return 1
    if N < 10 :
        return N
    return max ( max_prod ( N // 10 ) * ( N % 10 ) , max_prod ( N // 10 - 1 ) * 9 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1029
---> probID: aizu_p00565_A
---> inputs:
5
0 1 0 0 0
---> outputs:
2

def main ( ) :
    import string
    import sys
    n = int ( sys . stdin . readline ( ) )
    sugoroku = ""
    def main ( ) :
        global n
        n = int ( n )
        global sugoroku
        sugoroku = ""
    def solve_sugoroku ( ) :
        dice = 0
        safes = sugoroku . split ( "0" )
        for i in safes :
            dice = max ( dice , len ( i ) )
        print ( dice + 1 )
    def input_sugoroku ( ) :
        s = [ ]
        for i in range ( n ) :
            s . append ( str ( i ) )
        sugoroku = "" . join ( s )
    return sugoroku


---> console_out:
 
DIDN'T MATCH!! :(
 59%|█████▉    | 1029/1746 [00:24<00:16, 42.92it/s]

-------------------------------------


---> lineNum: 1030
---> probID: codeforces_1495_A
---> inputs:
3
2
0 1
1 0
0 -1
-2 0
4
1 0
3 0
-5 0
6 0
0 3
0 1
0 2
0 4
5
3 0
0 4
0 -3
4 0
2 0
1 0
-3 0
0 -10
0 -2
0 -10
---> outputs:
3.650281539872885
18.061819283610362
32.052255376143336

def practice2 ( ) :
    import math
    import numpy as np
    import os
    import sys
    class practice2 ( np . array ) :
        def __init__ ( self ) :
            np . array ( self )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )
        def fit ( self , x ) :
            return np . sqrt ( x [ 0 ] + x [ 1 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1031
---> probID: geeksforgeeks_1711_A
---> inputs:

---> outputs:
220


def count_non_decreasing ( n ) :
    N = 10
    count = 1
    for i in range ( 1 , n + 1 ) :
        count *= ( N + i - 1 )
        count //= i
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1032
---> probID: geeksforgeeks_4675_A
---> inputs:

---> outputs:
2


def reduce_string ( s , l ) :
    import string
    count , steps = 1 , 0
    for i in range ( 1 , l ) :
        if s [ i ] == s [ i - 1 ] :
            count += 1
        else :
            steps += ( count // 2 )
            count = 1
    steps += count // 2
    return steps


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1033
---> probID: atcoder_ARC070_D
---> inputs:
3 6
1 4 3
---> outputs:
Impossible


def main ( ) :
    import sys
    class Main ( object ) :
        def __init__ ( self ) :
            self . read = sys . stdin . read ( )
            self . a = self . read ( )
            self . b = self . read ( )
            self . n = self . a + self . b
            if self . b >= self . a :
                print ( "Impossible" , end = " " )
            else :
                ans = ""
                honest = self . get_honest ( )
                for i in range ( self . n ) :
                    ans += "1" if self . q ( honest , i ) else "0"
                print ( "! " + ans , end = " " )
        def get_honest ( self ) :
            dis = self . b + 1
            self . data = list ( )
            for i in range ( self . n ) :
                if self . data == [ ] :
                    self . data . append ( i )
                else :
                    if self . q ( self . data [ - 1 ] , i ) :
                        self . data . append ( i )
                    else :
                        self . data . pop ( )
                        dis -= 1
                if len ( self . data ) >= dis :
                    return self . data . pop ( )
            return - 1
        def q ( self , a , b ) :
            print ( "? %d %d" % ( self . a , self . b ) )
            return self . read ( ) == "Y"
    return Main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1034
---> probID: codeforces_242_A
---> inputs:
3 2 1 1
---> outputs:
3
2 1
3 1
3 2

def main ( ) :
    import sys
    import os
    import subprocess
    import sys
    x , y , a , b = sys . stdin . read ( ) . split ( ' ' )
    res = [ ]
    for i in range ( a , x + 1 ) :
        for j in range ( b , y + 1 ) :
            if i <= j :
                continue
            res . append ( '%d %d' % ( i , j ) )
    sys . stderr . write ( '\n' . join ( res ) )
    sys . stderr . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(
 59%|█████▉    | 1034/1746 [00:24<00:16, 42.76it/s]  File "./junk/1692552990080_9098/main.py", line 2
    mod = 1000000007L
                    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1035
---> probID: geeksforgeeks_215_A
---> inputs:

---> outputs:
8


def GFG ( ) :
    mod = 1000000007L
    def mult ( a , b ) :
        return ( ( a % mod ) * ( b % mod ) ) % mod
    def calculate_factors ( n ) :
        ans , cnt = 1 , 0
        ans = 1
        while n % 2 == 0 :
            cnt += 1
            n = n // 2
        if cnt % 2 == 1 :
            ans = mult ( ans , ( cnt + 1 ) )
        for i in range ( 3 , math . sqrt ( n ) + 1 , 2 ) :
            cnt = 0
            while n % i == 0 :
                cnt += 1
                n = n // i
            if cnt % 2 == 1 :
                ans = mult ( ans , ( cnt + 1 ) )
        if n > 2 :
            ans = mult ( ans , ( 2 ) )
        return ans % mod
    def main ( ) :
        n = 193748576239475639L
        mod = 17
        print ( calculate_factors ( n ) , end = '' )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1036
---> probID: codeforces_32_B
---> inputs:
.-.--
---> outputs:
012

def cf32A ( ) :
    import string
    s = string . strip ( )
    data = ""
    for i in range ( len ( s ) ) :
        if s [ i ] == "." :
            data += " "
        else :
            if s [ i ] == "-" and s [ i + 1 ] == "." :
                data += " "
            else :
                data += " "
            data += " "
        i += 1
    print ( data )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1037
---> probID: geeksforgeeks_756_A
---> inputs:

---> outputs:
4


def max_abs_diff ( arr , n ) :
    min_ele = arr [ 0 ]
    max_ele = arr [ 0 ]
    for i in range ( 1 , n ) :
        min_ele = min ( min_ele , arr [ i ] )
        max_ele = max ( max_ele , arr [ i ] )
    return ( max_ele - min_ele )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1038
---> probID: aizu_p00437_A
---> inputs:
2 2 2
4
2 4 5 0
2 3 6 0
1 4 5 0
2 3 5 1
0 0 0
---> outputs:
2
1
1
0
1
0

def main ( args ) :
    import sys
    try :
        a , b , c , N = int ( sys . stdin . read ( ) )
    except ValueError :
        pass
    else :
        if a == 0 and b == 0 and c == 0 :
            sys . exit ( 0 )
        N = sys . stdin . read ( )
    checking = [ 0 ] * a + b + c
    temp = list ( )
    checking . append ( 0 )
    for j in range ( 2 ) :
        for i in range ( N ) :
            if j == 0 :
                a1 , b1 , c1 , check = select . select ( [ a , b , c ] )
                a1 = int ( a1 )
                b1 = int ( b1 )
                c1 = int ( c1 )
                check = int ( check )
                if check == 1 :
                    checking [ a1 - 1 ] = 1
                    checking [ b1 - 1 ] = 1
                    checking [ c1 - 1 ] = 1
                else :
                    temp . append ( a1 )
                    temp . append ( b1 )
                    temp . append ( c1 )
            else :
                if not temp :
                    break
                a2 , b2 , c2 = temp . pop ( )
                if checking [ a2 - 1 ] + checking [ b2 - 1 ] + checking [ c2 - 1 ] == 2 :
                    if checking [ a2 - 1 ] != 1 :
                        checking [ a2 - 1 ] = 3
                    elif checking [ b2 - 1 ] != 1 :
                        checking [ b2 - 1 ] = 3
                    else :
                        checking [ c2 - 1 ] = 3
    for contents in checking :
        if contents == 3 :
            result = 0
        elif contents == 0 :
            result = 2
        else :
            result = 1
        print ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1039
---> probID: geeksforgeeks_1903_A
---> inputs:

---> outputs:
3


def min_remove ( a , b , n , m ) :
    count_a = { }
    count_b = { }
    for i in range ( n ) :
        if a [ i ] in count_a :
            count_a [ a [ i ] ] = count_a [ a [ i ] ] + 1
        else :
            count_a [ a [ i ] ] = 1
    for i in range ( m ) :
        if b [ i ] in count_b :
            count_b [ b [ i ] ] = count_b [ b [ i ] ] + 1
        else :
            count_b [ b [ i ] ] = 1
    res = 0
    s = count_a . keys ( )
    for x in s :
        if x in count_b :
            res += min ( count_b [ x ] , count_a [ x ] )
    return res


---> console_out:
 
DIDN'T MATCH!! :(
 60%|█████▉    | 1039/1746 [00:24<00:16, 42.87it/s]  File "./junk/1692552990196_8547/main.py", line 27
    from numpy . random import as np
                               ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1040
---> probID: geeksforgeeks_798_A
---> inputs:

---> outputs:
13
108


def GFG ( x ) :
    import re
    import math
    import math
    import numpy as np
    import numpy as np
    import numpy . fft as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random
    from numpy . random import as np
    from numpy . random import random
    from numpy . random import as np
    from numpy . random import random
    from numpy . random import as np
    from numpy . random import random
    from numpy . random import as np
    from numpy . random import random
    from numpy . random import as np
    from numpy . random import as np
    from numpy . random import random
    from numpy . random import as np
    from numpy . random import random
    from numpy . random import as np
    from numpy . random import as np
    from numpy . random import random
    from numpy . random import as np
    from numpy . random import as np
    from numpy . random import random
    from numpy . random import as np
    from numpy . random import as np
    from numpy . random import seed , randint
    from numpy . linalg import norm
    from numpy . random import norm
    from numpy . random import seed , randint
    seed = np . random ( seed = None )
    random = np . random ( seed = None )
    for i in range ( len ( np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . randint ( 0 , np . random . randint ( 0 , np . randint ( 0 , np . random ( 0 , np . random ( 0 ) ) ) ) ) )

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1041
---> probID: codeforces_617_B
---> inputs:
3
0 1 0
---> outputs:
1

def python_application125 ( ) :
    import sys
    try :
        num = int ( sys . stdin . readline ( ) )
        old = - 1
        ans = 0
        for i in range ( num ) :
            s = int ( sys . stdin . readline ( ) )
            if s == 1 :
                if old >= 0 :
                    ans *= ( i - old )
                else :
                    ans = 1
                old = i
        print ( ans )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1042
---> probID: geeksforgeeks_1347_A
---> inputs:

---> outputs:
4


def GFG ( x ) :
    import math
    ans = 0
    while x > 0 :
        x //= 2
        ans += 1
    return ans
    def check ( d , x ) :
        if x / d <= x :
            return True
        return False
    def bs ( n ) :
        l , r = 1 , int ( math . sqrt ( n ) )
        while l < r :
            m = ( l + r ) // 2
            if check ( m , n ) :
                r = m
            else :
                l = m + 1
        if not check ( l , n ) :
            return l + 1
        else :
            return l
    def count_divisor ( n ) :
        return n - bs ( n ) + 1
    def main ( ) :
        n = 5
        print ( count_divisor ( n ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1043
---> probID: geeksforgeeks_4102_A
---> inputs:

---> outputs:
4


def minimal_steps ( s , n ) :
    dp = [ 0 ] * n
    s1 , s2 = "" , ""
    dp [ 0 ] = 1
    s1 += s [ 0 ]
    for i in range ( 1 , n ) :
        s1 += s [ i ]
        s2 = s [ i + 1 : i + 1 ]
        dp [ i ] = min ( dp [ i ] , dp [ i - 1 ] + 1 )
        if s1 == s2 :
            dp [ i * 2 + 1 ] = min ( dp [ i ] + 1 , dp [ i * 2 + 1 ] )
    return dp [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1044
---> probID: geeksforgeeks_2399_A
---> inputs:

---> outputs:
No


def check_util ( num , dig , base ) :
    if dig == 1 and num < base :
        return True
    if dig > 1 and num >= base :
        return check_util ( num // base , -- dig , base )
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 60%|█████▉    | 1044/1746 [00:24<00:16, 42.76it/s]

-------------------------------------


---> lineNum: 1045
---> probID: geeksforgeeks_3847_A
---> inputs:

---> outputs:
5 3 3 2 1 

def GFG ( arr , n ) :
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )
    def getMin ( arr , i , j ) :
        minVal = arr [ i ]
        i += 1
        while i <= j :
            minVal = min ( minVal , arr [ i ] )
            i += 1
        return minVal
    def getMax ( arr , i , j ) :
        maxVal = arr [ i ]
        i += 1
        while i <= j :
            maxVal = max ( maxVal , arr [ i ] )
            i += 1
        return maxVal
    def generateArr ( arr , n ) :
        if n == 0 :
            return
        if n == 1 :
            print ( arr [ 0 ] )
            return
        tmpArr = [ ]
        tmpArr . append ( getMax ( arr , 1 , n - 1 ) )
        for i in range ( 1 , n - 1 ) :
            tmpArr . append ( abs ( getMax ( arr , i + 1 , n - 1 ) - getMin ( arr , 0 , i - 1 ) ) )
        tmpArr . append ( getMin ( arr , 0 , n - 2 ) )
        printArray ( tmpArr , n )
    def main ( ) :
        arr = [ 1 , 5 , 2 , 4 , 3 ]
        n = len ( arr )
        generateArr ( arr , n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1046
---> probID: codeforces_632_B
---> inputs:
5
1 2 3 4 5
ABABA
---> outputs:
11

def main ( ) :
    import string
    try :
        n = int ( sys . stdin . readline ( ) )
        a = [ ]
        for i in range ( n ) :
            a . append ( int ( sys . stdin . readline ( ) ) )
        s = list ( s )
        sum = 0
        for ch in s :
            if ch == 'B' :
                sum += a [ i ]
        ans = sum
        sum1 = sum
        for ch in s :
            if ch == 'A' :
                sum1 += a [ i ]
            else :
                sum1 -= a [ i ]
            ans = max ( ans , sum1 )
        sum1 = sum
        for ch in s [ : : - 1 ] :
            if ch == 'A' :
                sum1 += a [ i ]
            else :
                sum1 -= a [ i ]
            ans = max ( ans , sum1 )
        print ( ans )
    except ValueError :
        print ( 'Error running %s' % s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1047
---> probID: aizu_p00021_A
---> inputs:
2
0.0 0.0 1.0 1.0 1.0 0.0 2.0 1.0
3.0 2.0 9.0 6.0 13.0 5.0 7.0 9.0
---> outputs:
YES
NO

def main ( ) :
    import sys
    try :
        n = len ( sys . argv )
    except AttributeError :
        pass
    else :
        n -= 1
    xa , ya , xb , yb , xc , yc , xd , yd = sys . argv [ 1 : ]
    katamukiab = ( yb - ya ) / ( xb - xa )
    katamukicd = ( yd - yc ) / ( xd - xc )
    if katamukiab == katamukicd :
        print ( "YES" )
    else :
        print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1048
---> probID: geeksforgeeks_643_A
---> inputs:

---> outputs:
2


def nth_xor_fib ( n , a , b ) :
    if n == 0 :
        return a
    if n == 1 :
        return b
    if n == 2 :
        return ( a ^ b )
    return nth_xor_fib ( n % 3 , a , b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1049
---> probID: aizu_p02421_A
---> inputs:
3
cat dog
fish fish
lion tiger
---> outputs:
1 7

def main ( ) :
    import sys
    try :
        n = len ( sys . argv )
    except :
        pass
    else :
        print ( '%d %d' % ( n , n ) )
        return 0
    player1 , player2 = 0 , 0
    for i in range ( n ) :
        card1 = sys . stdin . read ( )
        card2 = sys . stdin . read ( )
        if card1 >= card2 :
            player1 += 3
        elif card1 <= card2 :
            player2 += 3
        elif card1 == card2 :
            player1 += 1
            player2 += 1
    print ( '%d %d' % ( player1 , player2 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 60%|██████    | 1049/1746 [00:24<00:16, 43.04it/s]

-------------------------------------


---> lineNum: 1050
---> probID: geeksforgeeks_2313_A
---> inputs:

---> outputs:
28.328653012


def area ( a ) :
    import math
    if a < 0 :
        return - 1
    h = float ( 1.268 ) * a
    A = float ( 0.70477 * math . pow ( h , 2 ) )
    return A


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1051
---> probID: projecteuler_p073_A
---> inputs:

---> outputs:
7295372

def p073 ( ) :
    print ( eval ( 'p073()' ) )
    return str ( stern_brocot_count ( 1 , 3 , 1 , 2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1052
---> probID: codeforces_1182_A
---> inputs:
4
---> outputs:
4

def Filling_Shapes ( n ) :
    import sys
    import math
    import tempfile
    import os
    import sys
    import os
    import math
    import math
    import tempfile
    import os
    import sys
    import os
    import sys
    import os
    import math
    import math
    import math
    import math
    import math
    import tempfile
    import tempfile
    import os
    import sys
    import tempfile
    import os
    import tempfile
    import os
    import tempfile
    import tempfile
    import os
    os = tempfile
    try :
        os = os
        os = os
    except :
        pass
    try :
        os = os . popen ( '%s --version' % n ) . read ( )
    except :
        pass
    try :
        os . close ( os )
    except :
        pass
    return int ( os . getpid ( ) ) , int ( os . getpid ( ) ) , int ( os . getpid ( ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1053
---> probID: geeksforgeeks_1373_A
---> inputs:

---> outputs:
76127


def GFG ( prime , n ) :
    prime [ 0 ] = False
    prime [ 1 ] = False
    for p in range ( 2 , p * n + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * p , n + 1 , p ) :
                prime [ i ] = False
    def sumPrime ( d ) :
        global i
        maxVal = int ( math . pow ( 10 , d ) ) - 1
        prime = [ True ] * ( maxVal + 1 )
        for i in range ( maxVal + 1 ) :
            prime [ i ] = True
        return sum
    sum = 0
    for i in range ( 2 , maxVal + 1 ) :
        if prime [ i ] :
            sum += i
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1054
---> probID: geeksforgeeks_515_A
---> inputs:

---> outputs:
6081


def sum_prime ( d ) :
    import math
    prime [ 0 ] = False
    prime [ 1 ] = False
    for p in range ( 2 , n + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * p , n + 1 , p ) :
                prime [ i ] = False
    def sum_prime ( d ) :
        maxVal = int ( math . pow ( 2 , d ) - 1 )
        prime = [ True ] * ( maxVal + 1 )
        return prime [ maxVal ]
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
 60%|██████    | 1054/1746 [00:24<00:16, 43.05it/s]

-------------------------------------


---> lineNum: 1055
---> probID: codeforces_1334_B
---> inputs:
4
4 3
5 1 2 1
4 10
11 9 11 9
2 5
4 3
3 7
9 4 9
---> outputs:
2
4
0
3

def main ( ) :
    import sys
    import string
    import string
    import math
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    if sys :
        raise ImportError ( 'No csv file found' )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1056
---> probID: aizu_p00365_A
---> inputs:
1999 9 9
2001 11 3
---> outputs:
3

def age_difference ( ) :
    import datetime
    import sys
    import os
    d = [ ]
    for i in range ( 6 ) :
        d . append ( os . stat ( '/etc/init.d' ) . st_mtime )
    d1 = datetime . date ( d [ 0 ] , d [ 1 ] , d [ 2 ] )
    d2 = datetime . date ( d [ 3 ] , d [ 4 ] , d [ 5 ] )
    age_diff = abs ( datetime . date ( d1 , d2 ) . total_seconds ( ) )
    if d [ 1 ] == d [ 4 ] and d [ 2 ] == d [ 5 ] :
        print ( age_diff )
    else :
        print ( age_diff + 1 )
    os . remove ( '/etc/init.d' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1057
---> probID: geeksforgeeks_3326_A
---> inputs:

---> outputs:
4


def max_partitions ( arr , n ) :
    import numpy as np
    ans , max_so_far = 0 , 0
    for i in range ( n ) :
        max_so_far = np . maximum ( max_so_far , arr [ i ] )
        if max_so_far == i :
            ans += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1058
---> probID: geeksforgeeks_3583_A
---> inputs:

---> outputs:
3


def count_max_contiguous ( arr , n ) :
    import numpy as np
    current_max , max_so_far = 0 , 0
    for i in range ( n ) :
        if arr [ i ] % 2 :
            current_max = 0
        else :
            current_max += 1
            max_so_far = np . maximum ( current_max , max_so_far )
    return max_so_far


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1059
---> probID: geeksforgeeks_1420_A
---> inputs:

---> outputs:
3.1461269285965052 



def cube ( h , r ) :
    import math
    if h < 0 and r < 0 :
        return - 1
    a = ( h * r * float ( math . sqrt ( 2 ) ) ) / ( h + float ( math . sqrt ( 2 ) ) * r )
    return a


---> console_out:
 
DIDN'T MATCH!! :(
 61%|██████    | 1059/1746 [00:25<00:16, 42.77it/s]

-------------------------------------


---> lineNum: 1060
---> probID: geeksforgeeks_4310_A
---> inputs:

---> outputs:
1 2 3 4 5 6 7 
 2 3 4 5 6 7 
  3 4 5 6 7 
   4 5 6 7 
    5 6 7 
     6 7 
      7 
     6 7 
    5 6 7 
   4 5 6 7 
  3 4 5 6 7 
 2 3 4 5 6 7 
1 2 3 4 5 6 7 


def pattern ( rows_no ) :
    import sys
    for i in range ( 1 , rows_no + 1 ) :
        for k in range ( 1 , i + 1 ) :
            sys . stdout . write ( " " )
        for j in range ( i , rows_no + 1 ) :
            sys . stdout . write ( "%d " % j )
        sys . stdout . write ( "\n" )
    for i in range ( rows_no - 1 , - 1 , - 1 ) :
        for k in range ( 1 , i + 1 ) :
            sys . stdout . write ( " " )
        for j in range ( i , rows_no + 1 ) :
            sys . stdout . write ( "%d " % j )
        sys . stdout . write ( "\n" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1061
---> probID: atcoder_AGC025_A
---> inputs:
7392
---> outputs:
21

def main ( ) :
    import sys
    try :
        n = sys . stdin . read ( )
    except AttributeError :
        pass
    for c in n [ 1 : ] :
        if c != '0' :
            sum = 0
            for i in range ( len ( c ) ) :
                sum += ord ( c ) - ord ( '0' )
            print ( sum )
            return
    if c == '1' :
        print ( 10 )
        return
    print ( c )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1062
---> probID: geeksforgeeks_2232_A
---> inputs:

---> outputs:
3111


def geeks ( n ) :
    while n > 0 :
        if ( n % 10 ) % 2 == 0 :
            return 0
        n //= 10
    return 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1063
---> probID: geeksforgeeks_2030_A
---> inputs:

---> outputs:
2400


def GFG ( n ) :
    while n != 0 :
        if ( n % 10 ) % 2 :
            return 0
        n //= 10
    return 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1064
---> probID: geeksforgeeks_5127_A
---> inputs:

---> outputs:
1 3 6 10 15 

def triangular_series ( n ) :
    import sys
    i , j , k = 1 , 1 , 1
    for i in range ( 1 , n + 1 ) :
        sys . stdout . write ( '%d ' % k )
        j = j + 1
        k = k + j


---> console_out:
 
DIDN'T MATCH!! :(
 61%|██████    | 1064/1746 [00:25<00:15, 43.06it/s]

-------------------------------------


---> lineNum: 1065
---> probID: codeforces_609_B
---> inputs:
4 3
2 1 3 1
---> outputs:
5

def main ( ) :
    import sys
    f = open ( sys . argv [ 1 ] )
    data = f . read ( ) . split ( )
    n = int ( data [ 0 ] )
    m = int ( data [ 1 ] )
    arr = [ 0 ] * m
    data = f . read ( ) . split ( )
    for i in range ( n ) :
        arr [ int ( data [ i ] ) - 1 ] += 1
    print ( get_number_of_ways2 ( arr , n ) )
    def get_number_of_ways1 ( arr , n ) :
        count = 0
        for i in range ( len ( arr ) ) :
            count = count + ( arr [ i ] * ( n - arr [ i ] ) )
        return count / 2
    def sum_natual ( n ) :
        return ( int ( n ) * ( n + 1 ) ) / 2
    def get_number_of_ways2 ( arr , n ) :
        t = get_number_of_ways1 ( n )
        for x in arr :
            t -= get_number_of_ways2 ( x )
        return t
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1066
---> probID: geeksforgeeks_4474_A
---> inputs:

---> outputs:
Position of n'th multiple of k in Fibonacci Series is 30


def find_position ( k , n ) :
    f1 , f2 , f3 = 0 , 1 , 2
    i = 2
    while i != 0 :
        f3 = f1 + f2
        f1 = f2
        f2 = f3
        if f2 % k == 0 :
            return n * i
        i += 1
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1067
---> probID: atcoder_ABC048_D
---> inputs:
aba
---> outputs:
Second

def main ( ) :
    import string
    s = list ( sys . stdin . readlines ( ) )
    s = list ( s )
    n = 0
    c = 0
    ans = ""
    e = [ False ] * 26
    for c in s :
        if e [ ord ( c ) - 97 ] == False :
            n += 1
        e [ ord ( c ) - 97 ] = True
    if n == 2 :
        c = 0
    else :
        c = len ( s ) - 2
        if s [ 0 ] == s [ - 1 ] :
            c -= 1
    if c % 2 == 0 :
        ans = "Second"
    else :
        ans = "First"
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1068
---> probID: geeksforgeeks_5091_A
---> inputs:

---> outputs:
3


def count_minimum_moves ( arr , n , k ) :
    import sys
    for i in range ( k - 1 , n ) :
        if arr [ i ] != arr [ k - 1 ] :
            return - 1
    for i in range ( k - 1 , - 1 , - 1 ) :
        if arr [ i ] != arr [ k - 1 ] :
            return i + 1
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1069
---> probID: geeksforgeeks_919_A
---> inputs:

---> outputs:
1


def power ( x , y , p ) :
    res = 1
    x = x % p
    while y > 0 :
        if y & 1 :
            res = ( res * x ) % p
        y = y >> 1
        x = ( x * x ) % p
    return res
    def gcd ( a , b ) :
        if not a :
            return b
        return gcd ( b % a , a )
    def power_gcd ( a , b , n ) :
        e = power ( a , n , b )
        return gcd ( e , b )
    def main ( args ) :
        a , b , n = 5 , 4 , 2
        print ( power_gcd ( a , b , n ) , end = ' ' )
    return main


---> console_out:
 
DIDN'T MATCH!! :(
 61%|██████    | 1069/1746 [00:25<00:15, 42.87it/s]

-------------------------------------


---> lineNum: 1070
---> probID: codeforces_569_A
---> inputs:
5 2 2
---> outputs:
2

def main ( ) :
    import sys
    import os
    import math
    import os
    import sys
    import os
    import sys
    import os
    import subprocess
    import sys
    import subprocess
    import sys
    import subprocess
    import sys
    import subprocess
    import sys
    import subprocess
    import sys
    import os
    import sys
    import subprocess
    import sys
    import os
    import sys
    import subprocess
    import sys
    import os
    import sys
    import subprocess
    import sys
    import os
    import sys
    try :
        os . environ [ 'PATH' ] = os . environ [ 'PATH' ]
    except :
        sys . stderr . write ( 'No PATH %s found in %s\n' % ( sys . executable , sys . executable ) )
        return None
    try :
        subprocess . check_output ( [ sys . executable , sys . stdout ] )
    except :
        pass
    else :
        sys . stderr . write ( 'No PATH found in %s\n' % sys . executable )
        return None
    try :
        subprocess . check_output ( [ sys . executable , sys . stdout ] )
    except :
        pass
    else :
        return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1071
---> probID: codeforces_592_B
---> inputs:
5
---> outputs:
9

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        s = n - 2
        print ( s * s )
    except ValueError :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1072
---> probID: geeksforgeeks_451_A
---> inputs:

---> outputs:
2


def count_identical_rows ( mat ) :
    import set
    count = 0
    for i in range ( len ( mat ) ) :
        hs = set ( )
        for j in mat [ i ] :
            hs . add ( j )
        if len ( hs ) == 1 :
            count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1073
---> probID: geeksforgeeks_1533_A
---> inputs:

---> outputs:
2 4 5 8 9 

def create_sorted ( a , n ) :
    import numpy as np
    b = [ ]
    for j in range ( n ) :
        if not b :
            b . append ( a [ j ] )
        else :
            start , end = 0 , len ( b ) - 1
            pos = 0
            while start <= end :
                mid = start + ( end - start ) // 2
                if b [ mid ] == a [ j ] :
                    b . append ( ( max ( 0 , mid + 1 ) , a [ j ] ) )
                    break
                elif b [ mid ] > a [ j ] :
                    pos = end = mid - 1
                else :
                    pos = start = mid + 1
                if start > end :
                    pos = start
                    b . append ( ( max ( 0 , pos ) , a [ j ] ) )
                    break
    for i in range ( n ) :
        print ( b [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1074
---> probID: geeksforgeeks_2734_A
---> inputs:

---> outputs:
18


def count_total_distinct ( data ) :
    cnt = 0
    items = set ( )
    for i in range ( len ( data ) ) :
        temp = ""
        ans = set ( )
        for c in data [ i : ] :
            temp = temp + c
            ans . add ( c )
            if temp not in items :
                items . add ( temp )
                cnt += len ( ans )
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(
 62%|██████▏   | 1074/1746 [00:25<00:15, 42.87it/s]

-------------------------------------


---> lineNum: 1075
---> probID: geeksforgeeks_3049_A
---> inputs:

---> outputs:
9 2


def GFG ( n ) :
    import math
    digits = int ( math . log10 ( n ) )
    n = int ( n / int ( math . pow ( 10 , digits ) ) )
    return n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1076
---> probID: geeksforgeeks_5147_A
---> inputs:

---> outputs:
1 2 0 3 

def remove_zeros ( a , n ) :
    import sys
    ind = - 1
    for i in range ( n ) :
        if a [ i ] != 0 :
            ind = i
            break
    if ind == - 1 :
        sys . stdout . write ( "Array has leading zeros only\n" )
        return
    b = [ 0 ] * n - ind
    for i in range ( n - ind ) :
        b [ i ] = a [ ind + i ]
    for i in range ( n - ind ) :
        sys . stdout . write ( "%d " % b [ i ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1077
---> probID: geeksforgeeks_2409_A
---> inputs:

---> outputs:
3


def find_maxm ( arr , n ) :
    import sys
    mp = { }
    for i in range ( n ) :
        if arr [ i ] in mp :
            mp [ arr [ i ] ] = mp [ arr [ i ] ] + 1
        else :
            mp [ arr [ i ] ] = 1
    ans = 0
    for x , freq in mp . items ( ) :
        if x == freq :
            ans = max ( ans , x )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1078
---> probID: atcoder_ABC107_D
---> inputs:
3
10 30 20
---> outputs:
30

def main ( ) :
    import sys
    import string
    import string
    import list
    import string
    import defaultdict
    class Main ( object ) :
        def __init__ ( self ) :
            self . stream = sys . stdin
            self . N = len ( self . stream )
            arr = [ ]
            for i in range ( self . N ) :
                arr . append ( self . stream . read ( ) )
            self . tsk = Task ( )
            print ( self . tsk ( arr ) )
        def solve ( self , arr ) :
            n = len ( arr )
            arr = list ( arr )
            arr . sort ( )
            total = int ( n ) * ( n + 1 ) / 2
            l , r = 0 , n - 1
            while l < r :
                mid = l + ( r - l ) // 2
                target = arr [ mid ]
                cur = 0
                cnt = 0
                bit = [ 0 ] * ( 2 * n + 2 )
                for x in range ( n + 1 , len ( bit ) ) :
                    x += 1 if x & - x else 1
                    bit [ x ] += 1
                for i in range ( n ) :
                    cur += 1 if arr [ i ] <= target else - 1
                    for x in range ( cur + n + 1 , len ( bit ) ) :
                        x += 1 if x & - x else 1
                        bit [ x ] += 1
                    for x in range ( cur + n ) :
                        if x > 0 :
                            cnt += bit [ x ]
                if cnt >= total // 2 + 1 :
                    r = mid
                else :
                    l = mid + 1
            return arr [ l ]
    return Main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1079
---> probID: geeksforgeeks_1800_A
---> inputs:

---> outputs:
17


def GFG ( x ) :
    import sys
    import math
    import os
    import sys
    class GFG ( int ) :
        def sum_of_digits_single ( x ) :
            ans = 0
            while x != 0 :
                ans += x % 10
                x //= 10
            return ans
        def closest ( x ) :
            ans = 0
            while ans * 10 + 9 <= x :
                ans = ans * 10 + 9
            return ans
        def sum_of_digits_two_parts ( N ) :
            A = closest ( N )
            return sum_of_digits_single ( A ) + sum_of_digits_single ( N - A )
    def main ( args ) :
        N = 35
        sys . stdout . write ( sum_of_digits_two_parts ( N ) )
    return GFG ( )


---> console_out:
 
DIDN'T MATCH!! :(
 62%|██████▏   | 1079/1746 [00:25<00:15, 42.63it/s]

-------------------------------------


---> lineNum: 1080
---> probID: aizu_p00123_A
---> inputs:
40.0 70.0
72.5 140.51
---> outputs:
B
NA

def main ( ) :
    import sys
    try :
        import math
        ca = np . array ( [ 35.5 , 37.5 , 40 , 43 , 50 , 55 , 70 ] )
        cb = np . array ( [ 71 , 77 , 83 , 89 , 105 , 116 , 148 ] )
        c = [ 'AAA' , 'AA' , 'A' , 'B' , 'C' , 'D' , 'E' , 'NA' ]
        for a , b in zip ( ca , cb ) :
            ar = 100
            br = 100
            for i in range ( len ( ca ) ) :
                if ca [ i ] > a :
                    ar = i
                    break
            for i in range ( len ( cb ) ) :
                if cb [ i ] > b :
                    br = i
                    break
            ans = max ( ar , br )
            if ans == 100 :
                ans = len ( c ) - 1
            print ( c [ ans ] )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1081
---> probID: codeforces_1415_A
---> inputs:
3
10 10 1 1
3 5 2 4
10 2 5 1
---> outputs:
18
4
6

def main ( ) :
    import math
    try :
        t = int ( math . ceil ( math . log ( math . pi / 4 ) ) )
    except ValueError :
        pass
    else :
        t -= 1
    a , b , c , d = math . log ( math . pi / 4 )
    res = max ( c - 1 , a - c ) + max ( d - 1 , b - d )
    print ( res )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1082
---> probID: codeforces_1399_A
---> inputs:
5
3
1 2 2
4
5 5 5 5
3
1 2 4
4
1 3 4 4
1
100
---> outputs:
YES
YES
NO
NO
YES

def A_remove_Smallest ( ) :
    import string
    import sys
    import os
    try :
        os . remove ( '' )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552991200_9654/main.py", line 3
    accuracy = float ( 0.0001 ) , denominator , sinx , sinval = float ( n )
               ^
SyntaxError: cannot assign to function call


-------------------------------------


---> lineNum: 1083
---> probID: geeksforgeeks_342_A
---> inputs:

---> outputs:
1


def cal_sin ( n ) :
    import math
    accuracy = float ( 0.0001 ) , denominator , sinx , sinval = float ( n )
    n = n * float ( 3.142 / 180.0 )
    x1 = n
    sinx = n
    sinval = float ( math . sin ( n ) )
    i = 1
    while True :
        denominator = 2 * i * ( 2 * i + 1 )
        x1 = - x1 * n * n / denominator
        sinx = sinx + x1
        i = i + 1
        if accuracy <= sinval - sinx :
            break
    print ( sinx )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1084
---> probID: geeksforgeeks_4319_A
---> inputs:

---> outputs:
720


def GFG ( ) :
    arr = [ 1 , 2 , 3 , 4 , 5 , 6 ]
    def multiply ( ) :
        pro = 1
        for i in arr :
            pro = pro * i
        return pro
    def main ( ) :
        print ( multiply )


---> console_out:
 
DIDN'T MATCH!! :(
 62%|██████▏   | 1084/1746 [00:25<00:15, 42.79it/s]  File "./junk/1692552991246_5594/main.py", line 54
    except :
    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1085
---> probID: aizu_p02425_A
---> inputs:
14
1 0
1 1
1 2
2 1
0 0
0 1
0 2
0 3
3 3
4
5
6
7
8
---> outputs:
1
0
1
0
0
1
0
3
13

def main ( ) :
    import decimal
    import sys
    flag = [ False ] * 64
    try :
        with open ( 'test.txt' , 'r' ) as f :
            q = int ( f . read ( ) )
            for j in range ( q ) :
                order_num = int ( f . read ( ) )
                if order_num <= 3 :
                    n = int ( f . read ( ) )
                if order_num == 0 :
                    print ( '1' if flag [ n ] else '0' )
                elif order_num == 1 :
                    flag [ n ] = True
                elif order_num == 2 :
                    flag [ n ] = False
                elif order_num == 3 :
                    flag [ n ] = not flag [ n ]
                elif order_num == 4 :
                    counter = 1
                    for i in range ( 64 ) :
                        if flag [ i ] != True :
                            counter = 0
                            break
                    print ( counter )
                elif order_num == 5 :
                    counter = 0
                    for i in range ( 64 ) :
                        if flag [ i ] != False :
                            counter = 1
                            break
                    print ( counter )
                elif order_num == 6 :
                    counter = 1
                    for i in range ( 64 ) :
                        if flag [ i ] == True :
                            counter = 0
                            break
                    print ( counter )
                elif order_num == 7 :
                    counter = 0
                    for i in range ( 64 ) :
                        if flag [ i ] == True :
                            counter = 1
                    print ( counter )
                elif order_num == 8 :
                    sum = decimal . Decimal ( '0' )
                    big = decimal . Decimal ( '2' )
                    for i in range ( 64 ) :
                        if flag [ i ] :
                            sum = sum + big ** i
                    print ( sum )
        except :
            pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1086
---> probID: geeksforgeeks_653_A
---> inputs:

---> outputs:
9


def GFG ( n ) :
    import sys
    import math
    import io
    class GFG ( int ) :
        def bit ( n ) :
            count = 0
            while n > 0 :
                count += 1
                n = n & ( n - 1 )
            return count
        def max_sum_of_bits ( arr , n ) :
            for i in range ( n ) :
                arr [ i ] = bit ( arr [ i ] )
            incl = arr [ 0 ]
            excl = 0
            excl_new = 0
            for i in range ( 1 , n ) :
                excl_new = ( incl if incl > excl else excl )
                incl = excl + arr [ i ]
                excl = excl_new
            return ( ( incl if incl > excl else excl ) )
        def main ( args ) :
            arr = [ 1 , 2 , 4 , 5 , 6 , 7 , 20 , 25 ]
            n = len ( arr )
            print ( max_sum_of_bits ( arr , n ) , end = ' ' )
    return GFG ( n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1087
---> probID: codeforces_629_A
---> inputs:
3
.CC
C..
C.C
---> outputs:
4

def python_application_70 ( ) :
    import string
    num = len ( sys . stdin )
    counter = 0
    fine = 0
    arr = [ ]
    for i in range ( num ) :
        s = sys . stdin . readline ( )
        arr . append ( s )
    for i in range ( num ) :
        for k in range ( num ) :
            if arr [ k ] [ i ] == 'C' :
                counter += 1
        fine += ( counter * ( counter - 1 ) ) / 2
        counter = 0
    for i in range ( num ) :
        for k in range ( num ) :
            if arr [ i ] [ k ] == 'C' :
                counter += 1
        fine += ( counter * ( counter - 1 ) ) / 2
        counter = 0
    print ( fine )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1088
---> probID: geeksforgeeks_1539_A
---> inputs:

---> outputs:
Count = 6


def find_min_index ( arr , low , high ) :
    if high < low :
        return 0
    if high == low :
        return low
    mid = ( low + high ) // 2
    if mid < high and arr [ mid + 1 ] < arr [ mid ] :
        return ( mid + 1 )
    if mid > low and arr [ mid ] < arr [ mid - 1 ] :
        return mid
    if arr [ high ] > arr [ mid ] :
        return find_min_index ( arr , low , mid - 1 )
    return find_min_index ( arr , mid + 1 , high )
def binary_search ( arr , l , h , x ) :
    while l <= h :
        mid = ( l + h ) // 2
        if arr [ mid ] <= x :
            l = mid + 1
        else :
            h = mid - 1
    return h
def count_elest_less_than ( arr , n , x ) :
    min_index = find_min_index ( arr , 0 , n - 1 )
    if x <= arr [ n - 1 ] :
        return ( binary_search ( arr , min_index , n - 1 , x ) + 1 - min_index )
    if ( min_index - 1 ) >= 0 and x <= arr [ min_index - 1 ] :
        return ( n - min_index + binary_search ( arr , 0 , min_index - 1 , x ) + 1 )
    return n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1089
---> probID: geeksforgeeks_2312_A
---> inputs:

---> outputs:
The final value of y at x = 1 is : 2.1839


def GFG ( x , y ) :
    import math
    v = y - 2 * x * x + 1
    return v
def predict ( x , y , h ) :
    y1p = y + h * f ( x , y )
    return y1p
def correct ( x , y , x1 , y1 , h ) :
    e = 0.00001
    y1c = y1
    while abs ( y1c - y1 ) > e :
        y1 = y1c
        y1c = y + 0.5 * h * ( f ( x , y ) + f ( x1 , y1 ) )
    return y1c
def print_final_values ( x , xn , y , h ) :
    while x < xn :
        x1 = x + h
        y1p = predict ( x , y , h )
        y1c = correct ( x , y , x1 , y1p , h )
        x = x1
        y = y1c
    print ( 'The final value of y at x = %d is : %s' % ( int ( x ) , '%.4f' % y ) )
def main ( ) :
    x , y = 0 , 0.5
    xn = 1 , 0.2
    print_final_values ( x , xn , y , h )


---> console_out:
 
DIDN'T MATCH!! :(
 62%|██████▏   | 1089/1746 [00:25<00:15, 42.20it/s]

-------------------------------------


---> lineNum: 1090
---> probID: geeksforgeeks_4300_A
---> inputs:

---> outputs:
 ******  
 *     * 
 *     * 
 *     * 
 *     * 
 *     * 
 *     * 
 *     * 
 ******  



def D_pattern ( n ) :
    import sys
    for i in range ( n ) :
        for j in range ( 0 , n + 1 ) :
            if j == 1 or ( ( i == 0 or i == n - 1 ) and ( j > 1 and j < n - 2 ) ) or ( j == n - 2 and i != 0 and i != n - 1 ) :
                sys . stdout . write ( '*' )
            else :
                sys . stdout . write ( ' ' )
        sys . stdout . write ( '\n' )


---> console_out:
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1091
---> probID: geeksforgeeks_3859_A
---> inputs:

---> outputs:
xyxxy

def kth_string ( n , k ) :
    total = 0
    i = 1
    while total < k :
        total = total + n - i
        i += 1
    first_y_position = i - 1
    second_y_position = k - ( total - n + first_y_position )
    for j in range ( 1 , first_y_position ) :
        print ( "x" , end = " " )
    print ( "y" , end = " " )
    j = first_y_position + 1
    while second_y_position > 1 :
        print ( "x" , end = " " )
        second_y_position -= 1
        j += 1
    print ( "y" , end = " " )
    while j < n :
        print ( "x" , end = " " )
        j += 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1092
---> probID: geeksforgeeks_136_A
---> inputs:

---> outputs:
10


def binomial_coeff ( n , k ) :
    C = [ 1 ] * ( k + 1 )
    C [ 0 ] = 1
    for i in range ( 1 , n + 1 ) :
        for j in range ( min ( i , k ) , 0 , - 1 ) :
            C [ j ] = C [ j ] + C [ j - 1 ]
    return C [ k ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1093
---> probID: leetcode_238_A
---> inputs:

---> outputs:
[24,12,8,6]

def product_except_self ( nums ) :
    import numpy as np
    n = len ( nums )
    res = [ 1 ] * n
    res [ 0 ] = 1
    for i in range ( 1 , n ) :
        res [ i ] = res [ i - 1 ] * nums [ i - 1 ]
    right = 1
    for i in range ( n - 1 , - 1 , - 1 ) :
        res [ i ] *= right
        right *= nums [ i ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1094
---> probID: geeksforgeeks_5261_A
---> inputs:

---> outputs:
For
sFo


def get_smallest_and_largest ( s , k ) :
    curr_str = s [ : k ]
    lex_min = curr_str
    lex_max = curr_str
    for c in s [ k : ] :
        curr_str = curr_str [ 1 : k ] + c
        if lex_max < curr_str :
            lex_max = curr_str
        if lex_min > curr_str :
            lex_min = curr_str
    print ( lex_min )
    print ( lex_max )


---> console_out:
 
DIDN'T MATCH!! :(
 63%|██████▎   | 1094/1746 [00:25<00:15, 42.45it/s]

-------------------------------------


---> lineNum: 1095
---> probID: codeforces_840_A
---> inputs:
5
7 3 5 3 4
2 1 3 2 3
---> outputs:
['4 7 3 5 3', '5 7 3 4 3 ']

def main ( ) :
    import sys
    try :
        n = len ( sys . stdin . readlines ( ) )
    except ValueError :
        n = 0
    a = [ ]
    b = [ [ ] for i in range ( n ) ]
    for i in range ( n ) :
        b [ i ] . append ( int ( sys . stdin . readline ( ) ) )
        b [ i ] [ 1 ] = i
    a . sort ( reverse = True )
    b . sort ( reverse = True )
    res = [ 0 ] * n
    for i , e in enumerate ( b ) :
        res [ e [ 1 ] ] = a [ i ]
    for i in range ( n ) :
        sys . stdout . write ( '%d ' % i )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1096
---> probID: geeksforgeeks_3525_A
---> inputs:

---> outputs:
Max subset XOR is 13


def max_subarray_XOR ( set , n ) :
    import sys
    index = 0
    for i in range ( INT_BITS - 1 , - 1 , - 1 ) :
        max_ind = index
        max_le = sys . maxint
        for j in range ( index , n ) :
            if ( set [ j ] & ( 1 << i ) ) and set [ j ] > max_le :
                max_le = set [ j ]
                max_ind = j
        if max_le == - 2147483648 :
            continue
        temp = set [ index ]
        set [ index ] = set [ max_ind ]
        set [ max_ind ] = temp
        max_ind = index
        for j in range ( n ) :
            if j != max_ind and ( set [ j ] & ( 1 << i ) ) :
                set [ j ] = set [ j ] ^ set [ max_ind ]
        index += 1
    res = 0
    for i in range ( n ) :
        res ^= set [ i ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1097
---> probID: codeforces_37_A
---> inputs:
3
1 2 3
---> outputs:
1 3

def main ( ) :
    import sys
    try :
        number = int ( sys . stdin . read ( ) )
        wooden = [ ]
        for each in range ( number ) :
            wooden . append ( each )
        height = [ ]
        count = 0
        for i in wooden :
            if i == 0 :
                continue
            else :
                count = 1
                for j in range ( i + 1 , len ( wooden ) ) :
                    if wooden [ i ] == wooden [ j ] :
                        wooden [ j ] = 0
                        count += 1
                height . append ( count )
        index = 0
        max = height [ 0 ]
        for i in height :
            if i != 0 :
                index += 1
            if max < i :
                max = i
        print ( max , index )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1098
---> probID: geeksforgeeks_5192_A
---> inputs:

---> outputs:
The two elements whose sum is minimum are -80 and 85


def min_abs_sum_pair ( arr , n ) :
    import math
    sum , min_sum = 999999 , 999999
    l , r = 0 , n - 1
    min_l , min_r = l , n - 1
    if n < 2 :
        print ( 'Invalid Input' )
        return
    sort ( arr , l , r )
    while l < r :
        sum = arr [ l ] + arr [ r ]
        if abs ( sum ) < abs ( min_sum ) :
            min_sum = sum
            min_l = l
            min_r = r
        if sum < 0 :
            l += 1
        else :
            r -= 1
    print ( ' The two elements whose ' 'sum is minimum are %d and %d' % ( arr [ min_l ] , arr [ min_r ] ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1099
---> probID: leetcode_387_A
---> inputs:

---> outputs:
0

def first_uniq_char ( s ) :
    freq = [ 0 ] * 26
    for c in s :
        freq [ ord ( c ) - ord ( 'a' ) ] += 1
    for i in range ( len ( s ) ) :
        if freq [ ord ( s [ i ] ) - ord ( 'a' ) ] == 1 :
            return i
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(
 63%|██████▎   | 1099/1746 [00:25<00:15, 42.67it/s]

-------------------------------------


---> lineNum: 1100
---> probID: geeksforgeeks_3128_A
---> inputs:

---> outputs:
Yes


def check_stack_permutation ( ip , op , n ) :
    import collections
    input = collections . deque ( )
    output = collections . deque ( )
    for i in range ( n ) :
        output . append ( op [ i ] )
    temp_stack = [ ]
    while not input . empty ( ) :
        ele = input . popleft ( )
        if ele == output [ - 1 ] :
            output . popleft ( )
            while not temp_stack . empty ( ) :
                if temp_stack [ - 1 ] == output [ - 1 ] :
                    temp_stack . pop ( )
                    output . popleft ( )
                else :
                    break
        else :
            temp_stack . append ( ele )
    return ( input . empty ( ) and temp_stack . empty ( ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1101
---> probID: atcoder_ABC110_C
---> inputs:
x
z
---> outputs:
Yes

def main ( args ) :
    import string
    s = string . strip ( args )
    t = string . strip ( args )
    l = len ( s )
    ans = True
    for i in range ( l ) :
        if s . find ( s [ i ] , i + 1 ) != t . find ( t [ i ] , i + 1 ) :
            ans = False
            break
    print ( 'Yes' if ans else 'No' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1102
---> probID: geeksforgeeks_790_A
---> inputs:

---> outputs:
39


def get_sum ( n , d ) :
    import sys
    sum = 0
    for i in range ( 1 , n + 1 ) :
        if i % 10 == d :
            sum += i
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1103
---> probID: codeforces_1282_A
---> inputs:
9
1 10 7 1
3 3 3 0
8 2 10 4
8 2 10 100
-10 20 -17 2
-3 2 2 0
-3 1 2 0
2 3 2 3
-1 3 -2 2
---> outputs:
7
0
4
0
30
5
4
0
3

def main ( ) :
    import sys
    t = sys . maxsize
    while t > 0 :
        st = sys . maxsize
        end = sys . maxsize
        n = sys . maxsize
        m = sys . maxsize
        sum = 0
        if st > end :
            temp = end
            end = st
            st = temp
        if n + m <= st :
            sum = end - st
        elif n + m >= st and n - m < st :
            sum = end - n - m
        elif n - m >= st and n <= end - m :
            sum = end - st - 2 * m
        elif n - m < end and n + m >= end :
            sum = n - m - st
        else :
            sum = end - st
        if sum < 0 :
            sum = 0
        print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1104
---> probID: codeforces_1187_A
---> inputs:
3
10 5 7
10 10 10
2 1 1
---> outputs:
6
1
2

def code_chef ( ) :
    import sys
    import os
    import os
    import sys
    import math
    try :
        n = len ( sys . argv )
    except :
        pass
    else :
        n -= 1
    while n > 0 :
        e = sys . stdin . read ( n )
        s = sys . stdin . read ( n )
        t = sys . stdin . read ( n )
        temp = max ( e - s , e - t )
        print ( temp + 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 63%|██████▎   | 1104/1746 [00:26<00:15, 42.74it/s]

-------------------------------------


---> lineNum: 1105
---> probID: geeksforgeeks_1588_A
---> inputs:

---> outputs:
5


def find_sum ( N , K ) :
    import sys
    ans = 0
    for i in range ( 1 , N + 1 ) :
        ans += ( i % K )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1106
---> probID: codeforces_194_B
---> inputs:
3
4 8 100
---> outputs:
17
33
401

def ishu ( a , b ) :
    import math
    if not b :
        return a
    else :
        return math . gcd ( b , a % b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1107
---> probID: geeksforgeeks_1219_A
---> inputs:

---> outputs:
55.24


def GFG ( r , d ) :
    import math
    import math
    R = d / math . pi
    R += math . pow ( r , 2 )
    R = math . sqrt ( R )
    area = math . pi * math . pow ( R , 2 )
    return area


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1108
---> probID: geeksforgeeks_3565_A
---> inputs:

---> outputs:
3


def minimum_numbers ( n , s ) :
    import sys
    if ( s % n ) > 0 :
        return s // n + 1
    else :
        return s // n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1109
---> probID: geeksforgeeks_4238_A
---> inputs:

---> outputs:
6


def count_triplets ( arr , n , m ) :
    count = 0
    arr . sort ( )
    end , start , mid = 0 , len ( arr ) - 1 , len ( arr ) - 1
    for end in range ( n - 1 , 2 , - 1 ) :
        start = 0
        mid = end - 1
        while start < mid :
            prod = arr [ end ] * arr [ start ] * arr [ mid ]
            if prod > m :
                mid -= 1
            elif prod < m :
                start += 1
            elif prod == m :
                count += 1
                mid -= 1
                start += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 64%|██████▎   | 1109/1746 [00:26<00:14, 42.93it/s]

-------------------------------------


---> lineNum: 1110
---> probID: geeksforgeeks_600_A
---> inputs:

---> outputs:
8


def find_index ( n ) :
    import sys
    if n <= 1 :
        return n
    a , b , c = 0 , 1 , 1
    res = 1
    while c < n :
        c = a + b
        res += 1
        a = b
        b = c
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1111
---> probID: geeksforgeeks_723_A
---> inputs:

---> outputs:
No


def is_vowel ( ch ) :
    if ch in [ 'a' , 'e' , 'i' , 'o' , 'u' ] :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1112
---> probID: geeksforgeeks_848_A
---> inputs:

---> outputs:
9


def GFG ( n ) :
    dp = [ 0 ] * ( n + 1 )
    dp [ 0 ] = 0
    dp [ 1 ] = 1
    dp [ 2 ] = 1
    for i in range ( 3 , n + 1 ) :
        dp [ i ] = dp [ i - 1 ] + dp [ i - 3 ] + 1
    return dp [ n ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1113
---> probID: geeksforgeeks_378_A
---> inputs:

---> outputs:
4.958333333333334


def GFG ( m , n ) :
    ans , i = 0.0 , i
    for i in range ( m , 0 , - 1 ) :
        ans += ( pow ( i / m , n ) - pow ( ( i - 1 ) / m , n ) ) * i
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1114
---> probID: geeksforgeeks_925_A
---> inputs:

---> outputs:
210


def ProdOfPrimes ( n ) :
    import sys
    prime = [ True ] * ( n + 1 )
    for p in range ( 2 , p * n + 1 ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , n + 1 , p ) :
                prime [ i ] = False
    prod = 1
    for i in range ( 2 , n + 1 ) :
        if prime [ i ] :
            prod *= i
    return prod


---> console_out:
 
DIDN'T MATCH!! :(
 64%|██████▍   | 1114/1746 [00:26<00:14, 43.30it/s]

-------------------------------------


---> lineNum: 1115
---> probID: projecteuler_p019_A
---> inputs:

---> outputs:
171

def p019 ( ) :
    print ( eval ( 'p019()' ) )
    count = 0
    for y in range ( 1901 , 2000 + 1 ) :
        for m in range ( 1 , 12 + 1 ) :
            if weekday ( y , m , 1 ) == 0 :
                count += 1
    return str ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1116
---> probID: geeksforgeeks_4465_A
---> inputs:

---> outputs:
Difference between two dates is 1461


def GFG ( ) :
    class Date ( object ) :
        def __init__ ( self , d , m , y ) :
            self . d = d
            self . m = m
            self . y = y
    month_days = [ 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 ]
    def count_leap_years ( d ) :
        years = d . y
        if d . m <= 2 :
            years -= 1
        return years // 4 - years // 100 + years // 400
    def get_difference ( dt1 , dt2 ) :
        n1 = dt1 . y * 365 + dt1 . d
        for i in range ( dt1 . m - 1 ) :
            n1 += month_days [ i ]
        n1 += count_leap_years ( dt1 )
        n2 = dt2 . y * 365 + dt2 . d
        for i in range ( dt2 . m - 1 ) :
            n2 += month_days [ i ]
        n2 += count_leap_years ( dt2 )
        return ( n2 - n1 )
    def main ( ) :
        dt1 = datetime ( 1 , 2 , 2000 )
        dt2 = datetime ( 1 , 2 , 2004 )
        print ( "Difference between two dates is %d" % get_difference ( dt1 , dt2 ) )
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1117
---> probID: geeksforgeeks_663_A
---> inputs:

---> outputs:
The numbers are: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]


def GFG ( n , num , a , b ) :
    import sys
    st = set ( )
    def generateNumbers ( n , num , a , b ) :
        if num > 0 and num < n :
            st . add ( num )
        if num >= n :
            return
        if num * 10 + a > num :
            generateNumbers ( n , num * 10 + a , a , b )
    def printNumbers ( n ) :
        for i in range ( 0 , 9 + 1 ) :
            for j in range ( i + 1 , 9 + 1 ) :
                generateNumbers ( n , 0 , i , j )
        sys . stdout . write ( 'The numbers are: ' )
        sys . stdout . writelines ( st )
        st = set ( )
    def main ( args ) :
        n = 12
        printNumbers ( n )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1118
---> probID: codeforces_71_B
---> inputs:
10 10 54
---> outputs:
10 10 10 10 10 4 0 0 0 0

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        k = int ( sys . stdin . readline ( ) )
        t = int ( sys . stdin . readline ( ) )
        temp = ( t * k * n ) / 100.0
        x = 0
        while temp - k >= 0 :
            temp -= k
            x += 1
        for i in range ( x ) :
            print ( k , end = ' ' )
        if temp != 0 :
            print ( int ( temp ) , end = ' ' )
            x += 1
        for i in range ( x , n ) :
            print ( 0 , end = ' ' )
        print ( )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1119
---> probID: aizu_p00705_A
---> inputs:
3 2
2 1 4
0
3 3 4 8
3 2
4 1 5 8 9
3 2 5 9
5 2 4 5 7 9
3 3
2 1 4
3 2 5 9
2 2 4
3 3
2 1 2
3 1 2 9
2 2 4
0 0
---> outputs:
4
5
0
2

def main ( ) :
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import subprocess
    import subprocess
    import sys
    try :
        import subprocess
    except :
        pass
    else :
        try :
            subprocess . check_call ( [ '/bin/sh' , '-c' , '--' , '--' , '--' ] )
        except :
            pass
    try :
        import json
    except :
        pass
    else :
        pass
    return json . dumps ( list ( ) )


---> console_out:
 
DIDN'T MATCH!! :(
 64%|██████▍   | 1119/1746 [00:26<00:14, 42.91it/s]

-------------------------------------


---> lineNum: 1120
---> probID: geeksforgeeks_3728_A
---> inputs:

---> outputs:
5


def odd_occurrence ( ar , ar_size ) :
    global res
    res = 0
    for i in range ( ar_size ) :
        res = res ^ ar [ i ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1121
---> probID: geeksforgeeks_1823_A
---> inputs:

---> outputs:
1
1


def GFG ( x , k ) :
    rslt = ( 1 if ( x & ( 1 << ( k - 1 ) ) ) else 0 )
    return rslt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1122
---> probID: geeksforgeeks_862_A
---> inputs:

---> outputs:
3 13


def GFG ( n , isPrime ) :
    isPrime [ 0 ] = isPrime [ 1 ] = False
    for i in range ( 2 , n + 1 ) :
        isPrime [ i ] = True
    for p in range ( 2 , n + 1 ) :
        if isPrime [ p ] == True :
            for i in range ( p * 2 , n + 1 , p ) :
                isPrime [ i ] = False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1123
---> probID: geeksforgeeks_2065_A
---> inputs:

---> outputs:
GCD( 10 , 15 ) = 5
GCD( 35 , 10 ) = 5
GCD( 31 , 2 ) = 1


def ggcd ( a , b ) :
    import math
    if not a :
        return b
    return math . gcd ( b % a , a )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1124
---> probID: geeksforgeeks_785_A
---> inputs:

---> outputs:
GCD( 10 , 15 ) = 5
GCD( 35 , 10 ) = 5
GCD( 31 , 2 ) = 1


def ggcd ( a , b ) :
    import math
    if not a :
        return b
    return math . gcd ( b % a , a )


---> console_out:
 
DIDN'T MATCH!! :(
 64%|██████▍   | 1124/1746 [00:26<00:14, 42.79it/s]

-------------------------------------


---> lineNum: 1125
---> probID: projecteuler_p174_A
---> inputs:

---> outputs:
209566

def p174 ( ) :
    print ( eval ( 'p174()' ) )
    SIZE_LIMIT = 1000000
    TYPE_LIMIT = 10
    type = [ 0 ] * ( SIZE_LIMIT + 1 )
    for n in range ( 3 , ( n - 1 ) * 4 , SIZE_LIMIT + 1 ) :
        for m in range ( n - 2 , 1 , - 2 ) :
            tiles = n * n - m * m
            if tiles > SIZE_LIMIT :
                break
            type [ tiles ] += 1
    count = 0
    for t in type :
        if 1 <= t <= TYPE_LIMIT :
            count += 1
    return str ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1126
---> probID: codeforces_1499_B
---> inputs:
5
10101011011
0000
11111
110
1100
---> outputs:
YES
YES
YES
YES
NO

def binary_removal ( s ) :
    import sys
    one = 0
    zero = 0
    for c in s [ 1 : ] :
        if c == '1' :
            if c [ - 1 ] == '1' :
                one += 1
            else :
                if c [ - 1 ] == '0' and one > 0 :
                    print ( 'No' )
                    return
        print ( 'YES' )
    def main ( ) :
        f = sys . stdin
        out = sys . stdout
        test = sys . maxsize
        while test > 0 :
            s = f . readline ( )
            test -= 1
            s = s . strip ( )
        return s
    class FastReader ( ) :
        def readline ( self ) :
            s = None
            try :
                s = list ( f . readline ( ) . strip ( ) . split ( '\n' ) )
            except :
                pass
            return s
        def readline ( self ) :
            s = None
            try :
                s = s . strip ( )
            except :
                pass
            return s
        def readline ( self ) :
            s = None
            try :
                s = s . strip ( )
            except :
                pass
            return s
    class FastWriter ( ) :
        def write ( self , f ) :
            self . write ( '%r' % ( f , ) )
        def write ( self , f ) :
            print ( f )
            self . write ( '\n' )
        def close ( self ) :
            f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1127
---> probID: geeksforgeeks_1914_A
---> inputs:

---> outputs:
1


def GFG ( N ) :
    maxm = - 1
    cnt = 0
    while N != 0 :
        if N & 1 == 0 :
            cnt += 1
            N >>= 1
            maxm = max ( maxm , cnt )
        else :
            maxm = max ( maxm , cnt )
            cnt = 0
            N >>= 1
    return maxm


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1128
---> probID: geeksforgeeks_1463_A
---> inputs:

---> outputs:
Index : 7  ,Length : 5


def get_longest_seq ( a , n ) :
    max_idx , max_len , curr_len , curr_idx = 0 , 0 , 0 , 0 , 0
    for k in range ( n ) :
        if a [ k ] > 0 :
            curr_len += 1
            if curr_len == 1 :
                curr_idx = k
        else :
            if curr_len > max_len :
                max_len = curr_len
                max_idx = curr_idx
            curr_len = 0
    if max_len > 0 :
        print ( 'Index : %d' % max_idx , end = ' , Length : %d' % max_len )
        print ( ' ,Length : %d' % max_len , end = ' , Length : %d' % max_len )
    else :
        print ( 'No positive sequence detected.' )
        return
    arr = [ 1 , 2 , - 3 , 2 , 3 , 4 , - 6 , 1 , 2 , 3 , 4 , 5 , - 8 , 5 , 6 ]
    n = len ( arr )
    get_longest_seq ( arr , n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1129
---> probID: geeksforgeeks_1617_A
---> inputs:

---> outputs:
1 2 3 
4 5 6 
7 8 9 


def Linked_list_2D_Matrix ( arr , i , j , m , n ) :
    class Node ( object ) :
        data = None
        right = None
        down = None
    def construct ( arr , i , j , m , n ) :
        if i > n - 1 or j > m - 1 :
            return None
        temp = Node ( )
        temp . data = arr [ i ] [ j ]
        temp . right = construct ( arr , i , j + 1 , m , n )
        temp . down = construct ( arr , i + 1 , j , m , n )
        return temp
    def display ( head ) :
        global Rp
        Dp = head
        while Dp is not None :
            Rp = Dp
            while Rp is not None :
                print ( Rp . data , end = ' ' )
                Rp = Rp . right
            print ( )
            Dp = Dp . down
    def main ( args ) :
        arr = [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ]
        m , n = 3 , 3
        head = construct ( arr , 0 , 0 , m , n )
        display ( head )
    return Node ( )


---> console_out:
 
DIDN'T MATCH!! :(
 65%|██████▍   | 1129/1746 [00:26<00:14, 42.63it/s]

-------------------------------------


---> lineNum: 1130
---> probID: aizu_p02257_A
---> inputs:
5
2
3
4
5
6
---> outputs:
3

def main ( ) :
    import sys
    import os
    n = int ( sys . stdin . readline ( ) )
    ans = 0
    for i in range ( n ) :
        if is_prime ( int ( sys . stdin . readline ( ) ) ) :
            ans += 1
    print ( ans )
    def is_prime ( x ) :
        if x < 2 :
            return False
        if x <= 3 :
            return True
        if x % 2 == 0 or x % 3 == 0 :
            return False
        for i in range ( 5 , i * x , 6 ) :
            if x % i == 0 or x % ( i + 2 ) == 0 :
                return False
        return True
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1131
---> probID: geeksforgeeks_2623_A
---> inputs:

---> outputs:
14


def find_nth_term ( N ) :
    if N % 2 == 0 :
        ans = ( N // 2 ) * 6 + ( N // 2 ) * 2
    else :
        ans = ( N // 2 + 1 ) * 6 + ( N // 2 ) * 2
    print ( ans , end = '' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1132
---> probID: geeksforgeeks_4028_A
---> inputs:

---> outputs:
No


def GFG ( a , b , c , d ) :
    if a == b and a == c and a == d and c == d and b == c and b == d :
        return True
    elif a == b and c == d :
        return True
    elif a == d and c == b :
        return True
    elif a == c and d == b :
        return True
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1133
---> probID: geeksforgeeks_4597_A
---> inputs:

---> outputs:
3
-1


def gf_int ( a , b , m ) :
    n = int ( math . sqrt ( m ) + 1 )
    an = 1
    for i in range ( n ) :
        an = ( an * a ) % m
    value = [ 0 ] * m
    for i , cur in enumerate ( range ( 1 , an + n + 1 ) ) :
        if not value [ cur ] :
            value [ cur ] = i
        cur = ( cur * an ) % m
    for i , cur in enumerate ( range ( 0 , b + n + 1 ) ) :
        if value [ cur ] :
            ans = value [ cur ] * n - i
            if ans < m :
                return ans
        cur = ( cur * a ) % m
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552992392_6131/main.py", line 14
    return dp [ ind ] = ans
                      ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1134
---> probID: geeksforgeeks_3584_A
---> inputs:

---> outputs:
30


def find_minimum_cost ( ind , a , n , k , dp ) :
    import math
    if ind == ( n - 1 ) :
        return 0
    elif dp [ ind ] != - 1 :
        return dp [ ind ]
    else :
        ans = math . inf
        for i in range ( 1 , k + 1 ) :
            if ind + i < n :
                ans = min ( ans , abs ( a [ ind + i ] - a [ ind ] ) + find_minimum_cost ( ind + i , a , n , k , dp ) )
            else :
                break
        return dp [ ind ] = ans


---> console_out:
 
DIDN'T MATCH!! :(
 65%|██████▍   | 1134/1746 [00:26<00:14, 42.77it/s]

-------------------------------------


---> lineNum: 1135
---> probID: geeksforgeeks_3453_A
---> inputs:

---> outputs:
1 / 279936


def __gcd ( a , b ) :
    if not a :
        return b
    if not b :
        return a
    if a == b :
        return a
    if a > b :
        return __gcd ( a - b , b )
    return __gcd ( a , b - a )
def Probability ( sum , times ) :
    favorable , total = 0 , 36
    probability = 0
    for i in range ( 1 , 6 + 1 ) :
        for j in range ( 1 , 6 + 1 ) :
            if ( i + j ) == sum :
                favorable += 1
    gcd1 = __gcd ( int ( favorable ) , int ( total ) )
    favorable = favorable / float ( gcd1 )
    total = total / float ( gcd1 )
    probability = int ( math . pow ( total , times ) )
    return probability
def main ( ) :
    sum , times = 7 , 7
    print ( '1' + '/' + Probability ( sum , times ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1136
---> probID: atcoder_ARC102_C
---> inputs:
200 1
---> outputs:
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200
200


def main ( ) :
    import math
    mod = 998244353
    nchoosek = [ [ 0 ] * math . pi for i in range ( 4001 ) ]
    for i in range ( 4001 ) :
        nchoosek [ i ] [ 0 ] = nchoosek [ i ] [ i ] = 1
    for i in range ( 2 , len ( nchoosek ) ) :
        for j in range ( 1 , i ) :
            nchoosek [ i ] [ j ] = ( nchoosek [ i - 1 ] [ j ] + nchoosek [ i - 1 ] [ j - 1 ] ) % mod
    with open ( '/proc/%d/%d' % ( sys . argv [ 0 ] , sys . argv [ 1 ] ) ) as f :
        k = int ( f . read ( ) )
        n = int ( f . read ( ) )
        for i in range ( 2 , 2 * k + 1 ) :
            if i > k :
                pairs = k - i // 2
            else :
                pairs = ( i - 1 ) // 2
            active = k - 2 * pairs
            if i % 2 == 0 :
                active -= 1
            times2 = 1
            total = 0
            for j in range ( 0 , pairs + 1 ) :
                choice = times2 * nchoosek [ pairs ] [ j ] % mod
                times2 = times2 * 2 % mod
                if active + j - 1 < 0 :
                    continue
                total += choice * nchoosek [ n + active - 1 ] [ active + j - 1 ]
                if i % 2 == 0 :
                    total += choice * nchoosek [ n + active - 2 ] [ active + j - 1 ]
                total %= mod
            print ( total )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1137
---> probID: atcoder_ABC119_B
---> inputs:
2
10000 JPY
0.10000000 BTC
---> outputs:
48000.0

def main ( ) :
    import sys
    import string
    import string
    import string
    import string
    import string
    import math
    try :
        math . mp ( '' , 2 )
    except :
        pass
    N = int ( math . pi )
    total = 0
    for i in range ( N ) :
        money = math . mp ( '' , math . pi / 2 )
        A = string . strip ( )
        B = 'JPY'
        if A == B :
            total += money
        else :
            total += money * 380000
    print ( total )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1138
---> probID: geeksforgeeks_1012_A
---> inputs:

---> outputs:
5


def get_count ( arr , n , num1 , num2 ) :
    i = 0
    for i in range ( n ) :
        if arr [ i ] == num1 :
            break
        if i >= n - 1 :
            return 0
        j = 0
        for j in range ( n - 1 , i + 1 , - 1 ) :
            if arr [ j ] == num2 :
                break
        if j == i :
            return 0
        return ( j - i - 1 )
    def main ( ) :
        arr = [ 3 , 5 , 7 , 6 , 4 , 9 , 12 , 4 , 8 ]
        n = len ( arr )
        num1 , num2 = 5 , 4
        print ( get_count ( arr , n , num1 , num2 ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1139
---> probID: aizu_p01093_A
---> inputs:
5
10 10 10 10 10
5
1 5 8 9 11
7
11 34 83 47 59 29 70
0
---> outputs:
0
1
5

def main ( ) :
    import sys
    s = [ ]
    while True :
        n = len ( sys . stdin )
        if n == 0 :
            break
        arr = [ ]
        for i in range ( n ) :
            arr . append ( sys . stdin . read ( n ) )
        arr . sort ( )
        min = sys . maxsize
        for i in range ( 1 , n ) :
            min = min ( min , arr [ i ] - arr [ i - 1 ] )
        s . append ( '%d\n' % min )
    sys . stdout . write ( '' . join ( s ) )


---> console_out:
 
DIDN'T MATCH!! :(
 65%|██████▌   | 1139/1746 [00:26<00:14, 42.50it/s]

-------------------------------------


---> lineNum: 1140
---> probID: geeksforgeeks_4829_A
---> inputs:

---> outputs:
9


def count_set_bits ( n ) :
    import numpy as np
    cnt = 0
    set_bits = np . zeros ( n + 1 )
    set_bits [ 0 ] = 0
    set_bits [ 1 ] = 1
    for i in range ( 2 , n + 1 ) :
        if i % 2 == 0 :
            set_bits [ i ] = set_bits [ i // 2 ]
        else :
            set_bits [ i ] = set_bits [ i - 1 ] + 1
    for i in range ( 0 , n + 1 ) :
        cnt = cnt + set_bits [ i ]
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1141
---> probID: geeksforgeeks_1388_A
---> inputs:

---> outputs:
4


def gf_gcd ( a , b ) :
    if not a :
        return b
    return gf_gcd ( b % a , a )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1142
---> probID: projecteuler_p179_A
---> inputs:

---> outputs:
986262

def p179 ( ) :
    import math
    print ( math . pow ( 10 , 7 ) )
    LIMIT = math . pow ( 10 , 7 )
    def run ( ) :
        num_divisors = [ 0 ] * ( LIMIT + 1 )
        for i in range ( 2 , len ( num_divisors ) ) :
            for j in range ( i * 2 , len ( num_divisors ) , i ) :
                num_divisors [ j ] += 1
        count = 0
        for i in range ( 2 , len ( num_divisors ) - 1 ) :
            if num_divisors [ i ] == num_divisors [ i + 1 ] :
                count += 1
        return str ( count )
    return run


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1143
---> probID: geeksforgeeks_3873_A
---> inputs:

---> outputs:
-1 5 1 3 2 

def GFG ( arr , n ) :
    for i in range ( n - 1 , 0 , - 1 ) :
        arr [ i ] = arr [ i - 1 ]
    arr [ 0 ] = - 1
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1144
---> probID: geeksforgeeks_3878_A
---> inputs:

---> outputs:
10 14 12 13 11 

def GFG ( arr , n ) :
    sum = 0
    for i in range ( n ) :
        sum += arr [ i ]
    for i in range ( n ) :
        print ( sum - arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
 66%|██████▌   | 1144/1746 [00:27<00:14, 42.69it/s]

-------------------------------------


---> lineNum: 1145
---> probID: geeksforgeeks_3874_A
---> inputs:

---> outputs:
1 3 2 4 -1 

def GFG ( arr , n ) :
    for i in range ( 0 , n - 2 + 1 ) :
        arr [ i ] = arr [ i + 1 ]
    arr [ n - 1 ] = - 1
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1146
---> probID: geeksforgeeks_649_A
---> inputs:

---> outputs:
2


def find_min_difference ( arr , n ) :
    global min , second_min , max , second_max
    min = second_max = ( arr [ 0 ] if arr [ 0 ] < arr [ 1 ] else arr [ 1 ] )
    max = second_min = ( arr [ 1 ] if arr [ 0 ] < arr [ 1 ] else arr [ 0 ] )
    for i in range ( 2 , n ) :
        if arr [ i ] > max :
            second_max = max
            max = arr [ i ]
        elif arr [ i ] > second_max :
            second_max = arr [ i ]
        elif arr [ i ] < min :
            second_min = min
            min = arr [ i ]
        elif arr [ i ] < second_min :
            second_min = arr [ i ]
    diff = min ( max - second_min , second_max - min )
    return diff


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1147
---> probID: codeforces_1025_B
---> inputs:
3
17 18
15 24
12 15
---> outputs:
['6', '2\n']

def main ( ) :
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1148
---> probID: aizu_p00594_A
---> inputs:
8
3 1 2 3 3 1 5 3
7
5 2 5 3 4 5 5
0
---> outputs:
NO COLOR
5

def main ( args ) :
    import sys
    try :
        buf = sys . stdin . read ( )
    except :
        pass
    else :
        while not ( buf == '0' ) :
            n = int ( buf )
            buf = buf . strip ( )
            a = [ ]
            for i in range ( n ) :
                a . append ( int ( buf [ i ] ) )
            a . sort ( )
            end = False
            for i in range ( n ) :
                count = 1
                j = a [ i ]
                i += 1
                while i < len ( a ) and j == a [ i ] :
                    count += 1
                    i += 1
                if count > n // 2 :
                    print ( a [ i - 1 ] )
                    end = True
                if end :
                    break
            if not end :
                print ( 'NO COLOR' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1149
---> probID: geeksforgeeks_3996_A
---> inputs:

---> outputs:
Factorial of 5 is 120


def factorial ( n ) :
    return ( 1 if n == 1 or n == 0 else n * factorial ( n - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 66%|██████▌   | 1149/1746 [00:27<00:13, 42.81it/s]

-------------------------------------


---> lineNum: 1150
---> probID: aizu_p01719_A
---> inputs:
2 2 5
3 2
5 4
---> outputs:
9

def main ( ) :
    import sys
    try :
        words = sys . stdin . readline ( ) . split ( )
    except AttributeError :
        pass
    else :
        words = words [ : ]
    n , d , x = None , None , None
    n , d , x = int ( n ) , int ( d ) , int ( x ) , int ( n )
    price = np . zeros ( ( d , n ) )
    for i in range ( d ) :
        words = words [ i ]
        for j in range ( n ) :
            price [ i ] [ j ] = int ( words [ j ] )
    for i in range ( d - 1 ) :
        dp = np . zeros ( x + 1 )
        for j in range ( 0 , x + 1 ) :
            dp [ j ] = j
        for j in range ( n ) :
            for k in range ( 0 , x + 1 ) :
                if k >= price [ i ] [ j ] :
                    dp [ k ] = max ( dp [ k ] , dp [ k - price [ i ] [ j ] ] + price [ i + 1 ] [ j ] )
        x = dp [ x ]
    print ( x )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1151
---> probID: codeforces_433_B
---> inputs:
6
6 4 2 7 2 7
3
2 3 6
1 3 4
1 1 6
---> outputs:
24
9
28

def main ( ) :
    import sys
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    import csv
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import StringIO
    from io import StringIO
    from io import StringIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import StringIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import StringIO
    from io import BytesIO
    from io import StringIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    import BytesIO
    from io import BytesIO


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1152
---> probID: geeksforgeeks_2513_A
---> inputs:

---> outputs:
3


def find_minimum_x ( a , n ) :
    import set
    st = set ( a )
    if len ( st ) == 1 :
        return 0
    if len ( st ) == 2 :
        for ( el1 , el2 ) in st :
            if ( el2 - el1 ) % 2 == 0 :
                return ( el2 - el1 ) // 2
            else :
                return ( el2 - el1 )
    if len ( st ) == 3 :
        for ( el1 , el2 , el3 ) in st :
            if ( el2 - el1 ) == ( el3 - el2 ) :
                return el2 - el1
            else :
                return - 1
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552992839_2914/main.py", line 8
    for u = v = 0
          ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1153
---> probID: geeksforgeeks_2612_A
---> inputs:

---> outputs:
3


def find_x ( n , k ) :
    import math
    r = n , v , u = 0 , 0 , 0
    m = int ( math . sqrt ( k ) ) + 1
    for i in range ( 2 , m + 1 ) :
        if i == m :
            i = k
        for u = v = 0
        if k % i == 0 :
            v //= i
        if v > 0 :
            t = n
            while t > 0 :
                t //= i
                u += t
            r = min ( r , u / v )
    return r


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1154
---> probID: geeksforgeeks_3673_A
---> inputs:

---> outputs:
Given point lies inside the rectangle


def GFG ( ) :
    if x - y - b <= 0 and x - y + b >= 0 and x + y - 2 * a + b <= 0 and x + y - b >= 0 :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(
 66%|██████▌   | 1154/1746 [00:27<00:13, 42.78it/s]

-------------------------------------


---> lineNum: 1155
---> probID: geeksforgeeks_1008_A
---> inputs:

---> outputs:
7


def count_pairs ( arr , n ) :
    N = 1000
    freq = [ 0 ] * size
    for i in range ( n ) :
        x = arr [ i ]
        freq [ x + N ] += 1
    ans = 0
    for i in range ( size ) :
        if freq [ i ] > 0 :
            ans += ( ( freq [ i ] ) * ( freq [ i ] - 1 ) ) / 2
            for j in range ( i + 2 , 2001 , 2 ) :
                if freq [ j ] > 0 and ( freq [ ( i + j ) / 2 ] > 0 ) :
                    ans += ( freq [ i ] * freq [ j ] )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1156
---> probID: geeksforgeeks_1753_A
---> inputs:

---> outputs:
Average of 1 numbers is 10.0
Average of 2 numbers is 15.0
Average of 3 numbers is 20.0
Average of 4 numbers is 25.0
Average of 5 numbers is 30.0
Average of 6 numbers is 35.0


def GFG ( x ) :
    global sum , n
    sum += x
    return ( ( float ( sum ) ) / ++ n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1157
---> probID: geeksforgeeks_1327_A
---> inputs:

---> outputs:
YES
NO


def test_sieve_of_eratosthenes ( ) :
    import random
    prime = [ True ] * MAX
    prime [ 0 ] = False
    prime [ 1 ] = False
    for p in range ( 2 , MAX ) :
        if prime [ p ] == True :
            for i in range ( p * 2 , MAX , p ) :
                prime [ i ] = False
    product = 1
    for p in range ( 2 , MAX ) :
        if prime [ p ] :
            product = product * p
            s . append ( product + 1 )
    def is_euclid ( n ) :
        if n in s :
            return True
        else :
            return False
    def main ( ) :
        sieve_of_eratosthenes ( )
        n = 31
        if is_euclid ( n ) :
            print ( "YES" )
        else :
            print ( "NO" )
        n = 42
        if is_euclid ( n ) :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1158
---> probID: codeforces_998_B
---> inputs:
6 4
1 2 5 10 15 20
---> outputs:
1

def main ( ) :
    import sys
    import math
    import string
    import math
    import string
    class SS ( string ) :
        def __init__ ( self ) :
            string = ""
            n = int ( self . count )
            b = math . floor ( math . sqrt ( b ) )
            self . arr = [ ]
            v = [ ]
            odd , even , count = 0 , 0 , 0
            for i in range ( len ( self . arr ) ) :
                self . arr . append ( int ( self . arr [ i ] ) )
            for i in range ( len ( self . arr ) ) :
                if i != 0 and odd == even :
                    v . append ( abs ( self . arr [ i ] - self . arr [ i - 1 ] ) )
                if self . arr [ i ] % 2 == 0 :
                    even += 1
                else :
                    odd += 1
            self . v . sort ( )
            for i in range ( len ( self . v ) ) :
                if b >= self . v [ i ] :
                    count += 1
                    b -= self . v [ i ]
            print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1159
---> probID: geeksforgeeks_1892_A
---> inputs:

---> outputs:
1


def GFG ( data ) :
    global i , g , gk , gks
    i = g = gk = gks = 0
    for c in data :
        if c == 'g' :
            g += 1
        elif c == 'k' :
            if g > 0 :
                g -= 1
                gk += 1
        elif c == 's' :
            if gk > 0 :
                gk -= 1
                gks += 1
    return gks


---> console_out:
 
DIDN'T MATCH!! :(
 66%|██████▋   | 1159/1746 [00:27<00:13, 42.64it/s]

-------------------------------------


---> lineNum: 1160
---> probID: codeforces_1041_A
---> inputs:
4
10 13 12 8
---> outputs:
2

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        a = [ ]
        for i in range ( n ) :
            a . append ( sys . stdin . readline ( ) )
        a . sort ( )
        min , max = a [ 0 ] , a [ - 1 ]
        res = max - min + 1 - n
        print ( res )
    except :
        print ( 'No such file or directory' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1161
---> probID: codeforces_216_B
---> inputs:
5 4
1 2
2 4
5 3
1 4
---> outputs:
1

def main ( ) :
    import sys
    import collections
    import os
    import os
    import sys
    class Forming_Teams ( object ) :
        def __init__ ( self ) :
            self . count = 0
            self . seen = [ ]
            self . path , self . cycle = 0 , 1
            self . graph = [ ]
            def dfs ( self , child , par ) :
                if self . seen [ child ] == True :
                    return self . cycle
                self . seen . append ( True )
                for i in self . graph [ child ] :
                    if i != par :
                        self . count += 1
                        if self . dfs ( i , child ) == self . cycle :
                            return self . cycle
            return self . path
        def dfs ( self , child , par ) :
            if self . seen [ child ] == True :
                self . cycle += 1
            else :
                self . cycle += 1
    ft = Forming_Teams ( )
    ft . graph = list ( )
    for i in range ( 0 , m + 1 ) :
        ft . graph . append ( list ( ) )
    ft . seen = [ False ] * ( m + 1 )
    for i in range ( n ) :
        x , y = os . path . split ( ft . graph [ x ] )
        ft . graph [ x ] . append ( y )
        ft . graph [ y ] . append ( x )
    toremove = 0
    for i in range ( 1 , m + 1 ) :
        if not ft . seen [ i ] :
            ft . count = 0
            if ft . dfs ( i , 0 ) == ft . cycle :
                if ft . count % 2 == 1 :
                    toremove += 1
        if ( m - toremove ) % 2 == 1 :
            toremove += 1
        print ( toremove )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1162
---> probID: geeksforgeeks_3971_A
---> inputs:

---> outputs:
K'th smallest element is 5


def kth_smallest ( arr , k ) :
    arr . sort ( )
    return arr [ k - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1163
---> probID: codeforces_1689_B
---> inputs:
4
3
1 2 3
5
2 3 4 5 1
4
2 3 1 4
1
1
---> outputs:
2 3 1
1 2 3 4 5
1 2 4 3
-1

def main ( ) :
    import sys
    import string
    import math
    import math
    import numpy as np
    import math
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 1 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 1 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 1 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 1 )
    np . random . seed ( 0 )
    np . random . seed ( 1 )
    np . random . seed ( 0 )
    np . random . seed ( 1 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1164
---> probID: projecteuler_p329_A
---> inputs:

---> outputs:
199740353/29386561536000

def p329 ( ) :
    import math
    print ( math . pow ( 10 , 10 ) )
    START_NUM = 1
    END_NUM = 500
    CROAK_SEQ = 'PPPPNNPPPNPPNPN'
    def cross ( x ) :
        assert 0 <= x < START_NUM and x < END_NUM and x < int ( x )
        return x
    NUM_JUMPS = len ( CROAK_SEQ ) - 1
    NUM_TRIALS = 1 << NUM_JUMPS
    def run ( ) :
        global_numerator = 0
        is_prime = math . list_primality ( END_NUM )
        for i in range ( START_NUM , END_NUM + 1 ) :
            for j in range ( NUM_TRIALS ) :
                pos = i
                trial_numerator = 1
                if is_prime [ pos ] == ( CROAK_SEQ [ 0 ] == 'P' ) :
                    trial_numerator *= 2
                for k in range ( NUM_JUMPS ) :
                    if pos <= START_NUM :
                        pos += 1
                    elif pos >= END_NUM :
                        pos -= 1
                    elif ( ( j >> k ) & 1 ) == 0 :
                        pos += 1
                    else :
                        pos -= 1
                    if is_prime [ pos ] == ( CROAK_SEQ [ k + 1 ] == 'P' ) :
                        trial_numerator *= 2
                global_numerator += trial_numerator
        global_denominator = math . pow ( END_NUM + 1 - START_NUM , NUM_JUMPS ) * math . pow ( 3 , len ( CROAK_SEQ ) )
        return math . pow ( global_numerator , global_denominator )
    return '' . join ( run ( ) )


---> console_out:
 
DIDN'T MATCH!! :(
 67%|██████▋   | 1164/1746 [00:27<00:13, 42.29it/s]

-------------------------------------


---> lineNum: 1165
---> probID: geeksforgeeks_3653_A
---> inputs:

---> outputs:
2.0043678382716137 K.M


def distance ( lat1 , lat2 , lon1 , lon2 ) :
    lon1 = math . radians ( lon1 )
    lon2 = math . radians ( lon2 )
    lat1 = math . radians ( lat1 )
    lat2 = math . radians ( lat2 )
    dlon = lon2 - lon1
    dlat = lat2 - lat1
    a = math . pow ( math . sin ( dlat / 2 ) , 2 ) + math . cos ( lat1 ) * math . cos ( lat2 ) * math . pow ( math . sin ( dlon / 2 ) , 2 )
    c = 2 * math . asin ( math . sqrt ( a ) )
    r = 6371
    return ( c * r )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1166
---> probID: geeksforgeeks_1730_A
---> inputs:

---> outputs:
63
1159


def main ( ) :
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    import sys
    import os
    os = os
    sys = sys
    os = os
    sys = os
    sys = os
    try :
        os = os
    except :
        pass
    try :
        os = os
    except :
        pass
    try :
        os = os
    except :
        pass
    try :
        os = os
    except :
        pass
    try :
        os = os
    except :
        pass
    try :
        os = os
    except :
        pass
    return os


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552993169_5379/main.py", line 27
    from numpy . testing as np
                         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1167
---> probID: aizu_p00294_A
---> inputs:
5 4 0
1
2
3
4
---> outputs:
400

def main ( ) :
    import sys
    import numpy as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import numpy . testing as np
    import testing as np
    from numpy . testing as np
    import testing as np
    from numpy . testing as np
    import testing as np
    from numpy . testing as np
    import testing as np
    from numpy . testing as np
    import testing as np
    from numpy . testing as np
    import testing as np
    testing = np . testing as np
    np . testing = np . testing
    np . testing = np . testing
    np . testing = np . testing
    np . testing . as np . testing = np . testing
    np . testing . as np . testing = np . np . testing
    np . testing . as np . testing = np . np . testing
    np . testing . as np . testing = np . np . testing
    np . testing . as np . testing = np . np . testing . as np . np . testing
    np . testing . as np . testing = np . np . np . testing
    np . testing . as np . testing = np . np . np . testing
    np . testing . as np . testing = np . np . np . testing
    np . testing . as np . testing . as np . testing :
        np . testing . as_testing = np . testing . as_testing
        np . testing . as_testing = np . testing . as_testing
        np . testing . as_testing = np . testing . as_testing
        np . testing . testing = np . testing . as_testing
        np . testing . as_testing = np . testing . as_testing
        np . testing . testing = np . testing . as_testing
        np . testing . as_testing = np . testing . as_testing
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1168
---> probID: geeksforgeeks_90_A
---> inputs:

---> outputs:
YES


def SumDivPrime ( A , n ) :
    max = int ( 0 )
    for i in A :
        if max < i :
            max = i
    return max


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1169
---> probID: geeksforgeeks_4231_A
---> inputs:

---> outputs:
5 7 9 1 3 
7 9 1 3 5 
9 1 3 5 7 


def left_rotate ( arr , n , k ) :
    import sys
    arr = [ 1 , 3 , 5 , 7 , 9 ]
    n = len ( arr )
    k = 2
    left_rotate ( arr , n , k )
    print ( )
    k = 3
    left_rotate ( arr , n , k )
    print ( )
    k = 4
    left_rotate ( arr , n , k )
    print ( )


---> console_out:
 
DIDN'T MATCH!! :(
 67%|██████▋   | 1169/1746 [00:27<00:13, 42.53it/s]

-------------------------------------


---> lineNum: 1170
---> probID: geeksforgeeks_4568_A
---> inputs:

---> outputs:
56295


def closest_multiple ( n , x ) :
    import sys
    if x > n :
        return x
    n = n + x // 2
    n = n - ( n % x )
    return n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1171
---> probID: codeforces_1266_A
---> inputs:
6
603
006
205
228
1053
0000000000000000000000000000000000000000000000
---> outputs:
red
red
cyan
cyan
cyan
red

def compititive_programmer ( args ) :
    global t
    f = sys . stdin
    t = len ( f )
    f . close ( )
    while t != 0 :
        t -= 1
        s = f . readline ( )
        zero , sum , even = 0 , 0 , 0
        for c in s :
            sum += ord ( c ) - ord ( '0' )
            if c == '0' :
                zero += 1
            if c % 2 == 0 and c != '0' :
                even += 1
        if zero != len ( s ) and ( ( even == 0 and zero == 1 ) or zero == 0 or sum % 3 != 0 ) :
            print ( 'cyan' )
        else :
            print ( 'red' )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552993286_1324/main.py", line 16
    return dp [ a ] [ b ] = ans
                          ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1172
---> probID: geeksforgeeks_2258_A
---> inputs:

---> outputs:
99

def GFG ( a , b ) :
    import numpy as np
    dp = np . zeros ( ( 901 , 8101 ) )
    def minimumNumberOfDigits ( a , b ) :
        if a > b or a < 0 or b < 0 or a > 900 or b > 8100 :
            return - 1
        if a == 0 and b == 0 :
            return 0
        if dp [ a ] [ b ] != - 1 :
            return dp [ a ] [ b ]
        ans = 101
        for i in range ( 9 , 1 , - 1 ) :
            k = minimumNumberOfDigits ( a - i , b - ( i * i ) )
            if k != - 1 :
                ans = min ( ans , k + 1 )
        return dp [ a ] [ b ] = ans
    def printSmallestNumber ( a , b ) :
        for row in dp :
            row [ - 1 ] = 0
        dp [ 0 ] [ 0 ] = 0
        k = minimumNumberOfDigits ( a , b )
        if k == - 1 or k > 100 :
            print ( '-1' )
        else :
            while a > 0 and b > 0 :
                for i in range ( 1 , 9 + 1 ) :
                    if a >= i and b >= i * i and 1 + dp [ a - i ] [ b - i * i ] == dp [ a ] [ b ] :
                        print ( i , end = ' ' )
                        a -= i
                        b -= i * i
                        break
    def main ( args ) :
        a , b = 18 , 162
        printSmallestNumber ( a , b )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1173
---> probID: geeksforgeeks_4844_A
---> inputs:

---> outputs:
4


def GFG ( ) :
    import math
    N = 5005
    global n , k
    gr = [ ]
    d

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1174
---> probID: geeksforgeeks_2115_A
---> inputs:

---> outputs:
5


def find_subgraph ( arr , n ) :
    import numpy as np
    arr = np . array ( arr )
    dp = np . zeros ( 10 )
    cnt = np . zeros ( 10 )
    loc_max = 0
    tmp = arr [ 0 ]
    while tmp > 0 :
        dp [ tmp % 10 ] = 1
        tmp //= 10
    for i in range ( 1 , n ) :
        tmp = arr [ i ]
        loc_max = 1
        cnt [ 0 ] = 0
        while tmp > 0 :
            cnt [ tmp % 10 ] = 1
            tmp //= 10
        for d in range ( 0 , 9 + 1 ) :
            if cnt [ d ] == 1 :
                dp [ d ] += 1
                loc_max = np . maximum ( loc_max , dp [ d ] )
        for d in range ( 0 , 9 + 1 ) :
            if cnt [ d ] == 1 :
                dp [ d ] = loc_max
        arr = np . maximum ( arr , loc_max )
    return arr


---> console_out:
 
DIDN'T MATCH!! :(
 67%|██████▋   | 1174/1746 [00:27<00:13, 42.49it/s]

-------------------------------------


---> lineNum: 1175
---> probID: codeforces_1453_A
---> inputs:
3
1 2
1
3 4
3 2
1 3 4
2 4
9 14
2 7 16 28 33 57 59 86 99
3 9 14 19 25 26 28 35 41 59 85 87 99 100
---> outputs:
0
1
3

def main ( ) :
    import sys
    import set
    import os
    import sys
    t = sys . maxsize
    for i in range ( t ) :
        n = sys . maxsize
        m = sys . maxsize
        set = set ( )
        for j in range ( n ) :
            set . add ( sys . stdin . read ( ) )
        count = 0
        for j in range ( m ) :
            if set . add ( sys . stdin . read ( ) ) == False :
                count += 1
        print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1176
---> probID: geeksforgeeks_1336_A
---> inputs:

---> outputs:
Total possible pair with GCD 2 & LCM 12 = 4


def total_prime_factors ( n ) :
    count = 0
    if ( n % 2 == 0 ) :
        count += 1
        while ( n % 2 == 0 ) :
            n //= 2
    for i in range ( 3 , n * 2 + 2 ) :
        if ( n % i == 0 ) :
            count += 1
        while ( n % i == 0 ) :
            n //= 2
    if n > 2 :
        count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1177
---> probID: geeksforgeeks_2376_A
---> inputs:

---> outputs:
Sum of multiples of  7  up to  49  =  196.0


def calculate_sum ( a , N ) :
    m = N // a
    sum = m * ( m + 1 ) // 2
    ans = a * sum
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1178
---> probID: codeforces_105_A
---> inputs:
5 4 0.75
axe 350
impaler 300
ionize 80
megafire 120
magicboost 220
heal
megafire
shield
magicboost
---> outputs:
6
axe 262
heal 0
impaler 225
magicboost 165
megafire 0
shield 0

def main ( ) :
    import sys
    f = sys . stdin
    sys . stdout = sys . stdout
    parts = list ( f . strip ( ) . split ( ' ' ) )
    n = int ( parts [ 0 ] )
    m = int ( parts [ 1 ] )
    k = int ( parts [ 2 ] )
    skills = defaultdict ( int )
    for i in range ( n ) :
        parts = list ( parts )
        skill_name = parts [ 0 ]
        skill_score = int ( parts [ 1 ] )
        new_skill_score = skill_score * k / 100
        if new_skill_score < 100 :
            continue
        skills [ skill_name ] += new_skill_score
    for i in range ( m ) :
        skill_name = parts [ i ]
        if skill_name in skills :
            continue
        skills [ skill_name ] = 0
    sys . stdout . write ( '%d %d\n' % ( len ( skills ) , skill_name ) )
    sys . stdout . flush ( )
    sys . stdout . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1179
---> probID: geeksforgeeks_3737_A
---> inputs:

---> outputs:
4


def count_solutions ( a ) :
    import sys
    count = 0
    for i in range ( 0 , a + 1 ) :
        if a == ( i + ( a ^ i ) ) :
            count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 68%|██████▊   | 1179/1746 [00:27<00:13, 42.56it/s]

-------------------------------------


---> lineNum: 1180
---> probID: geeksforgeeks_3581_A
---> inputs:

---> outputs:
5


def next ( arr , target ) :
    start , end = 0 , len ( arr ) - 1
    ans = - 1
    while start <= end :
        mid = ( start + end ) // 2
        if arr [ mid ] <= target :
            start = mid + 1
        else :
            ans = mid
            end = mid - 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1181
---> probID: geeksforgeeks_5090_A
---> inputs:

---> outputs:
three five zero 

def GFG ( n ) :
    word = [ "zero" , "one" , "two" , "three" , "four" , "five" , "six" , "seven" , "eight" , "nine" ]
    digits = [ 0 ] * 10
    dc = 0
    while True :
        digits [ dc ] = n % 10
        n = n // 10
        dc += 1
    for i in range ( dc - 1 , - 1 , - 1 ) :
        print ( word [ digits [ i ] ] , end = " " )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1182
---> probID: codeforces_1111_B
---> inputs:
2 4 6
4 7
---> outputs:
11.00000000000000000000

def main ( ) :
    import sys
    f = sys . stdin
    out = sys . stdout
    parts = list ( f . strip ( ) . split ( ' ' ) )
    n = int ( parts [ 0 ] )
    k = int ( parts [ 1 ] )
    m = int ( parts [ 2 ] )
    a = [ ]
    parts = list ( parts )
    sum = 0
    for i in range ( n ) :
        a . append ( int ( parts [ i ] ) )
        sum += a [ i ]
    a . sort ( )
    max = ( sum + min ( m , n * k ) ) / float ( n )
    for i in range ( 1 , min ( n , m + 1 ) ) :
        sum -= a [ i - 1 ]
        max = max ( max , ( sum + min ( m - i , ( n - i ) * k ) ) / float ( n - i ) )
    out . write ( '%.20f\n' % max )
    f . close ( )
    out . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1183
---> probID: geeksforgeeks_4704_A
---> inputs:

---> outputs:
4


def GFG ( a , b ) :
    l = len ( a )
    min , max = 0 , 0
    for i in range ( l ) :
        if a [ i ] == '+' or b [ i ] == '+' or a [ i ] != b [ i ] :
            max += 1
        if a [ i ] != '+' and b [ i ] != '+' and a [ i ] != b [ i ] :
            min += 1
    print ( min + str ( max ) , end = '' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1184
---> probID: geeksforgeeks_464_A
---> inputs:

---> outputs:
Total Ways =  3


def GFG ( n , s , k ) :
    dp = [ 0 ] * n
    dp [ s - 1 ] = 1
    for i in range ( s , n ) :
        idx = max ( s - 1 , i - k )
        for j in range ( idx , i ) :
            dp [ i ] += dp [ j ]
    return dp [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(
 68%|██████▊   | 1184/1746 [00:27<00:13, 42.85it/s]

-------------------------------------


---> lineNum: 1185
---> probID: geeksforgeeks_5132_A
---> inputs:

---> outputs:
Even count :  2

Odd count :  5
YES


def count_even_odd ( n ) :
    import sys
    even_count = 0
    odd_count = 0
    while n > 0 :
        rem = n % 10
        if rem % 2 == 0 :
            even_count += 1
        else :
            odd_count += 1
        n = n // 10
    print ( "Even count : %d" % even_count )
    print ( "Odd count : %d" % odd_count )
    if even_count % 2 == 0 and odd_count % 2 != 0 :
        return 1
    else :
        return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1186
---> probID: aizu_p00484_A
---> inputs:
7 4
14 1
13 2
12 3
14 2
8 2
16 3
11 2
---> outputs:
60

def main ( ) :
    import sys
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )
    sys . stdin . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1187
---> probID: geeksforgeeks_3634_A
---> inputs:

---> outputs:
1


def GFG ( ) :
    import math
    class GFG ( math . Vector ) :
        def __init__ ( self , x , y ) :
            self . x , self . y = x , y
        def findmin ( self , n ) :
            a , b , c , d = 0 , 0 , 0 , 0 , 0
            for i in range ( n ) :
                if self . x <= 0 :
                    a += 1
                elif self . x >= 0 :
                    b += 1
                if self . y >= 0 :
                    c += 1
                elif self . y <= 0 :
                    d += 1
            return min ( min ( a , b ) , min ( c , d ) )
    return math . minimum ( math . minimum ( a , b ) , math . minimum ( c , d ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1188
---> probID: geeksforgeeks_5072_A
---> inputs:

---> outputs:
2


def max_gcd ( N , P ) :
    ans = 1
    prime_factors = { }
    for i in range ( 2 , 2 * P + 1 ) :
        while P % i == 0 :
            if prime_factors [ i ] is None :
                prime_factors [ i ] = 1
            else :
                prime_factors [ i ] = ( prime_factors [ i ] + 1 )
            P //= i
    if P != 1 :
        if prime_factors [ P ] is None :
            prime_factors [ P ] = 1
        else :
            prime_factors [ P ] = ( prime_factors [ P ] + 1 )
    st = prime_factors . items ( )
    for me , n in st :
        ans *= pow ( me , n / N )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1189
---> probID: aizu_p02429_A
---> inputs:
4
2 0 2
---> outputs:
0:
1: 0
4: 2
5: 0 2

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        k = int ( sys . stdin . readline ( ) )
        mask = [ 0 ] * k
        for i in range ( k ) :
            mask [ i ] = sys . stdin . read ( )
        for i in range ( pow ( 2 , k ) ) :
            bit_list = [ 0 ] * n
            temp = i
            index = 0
            for j in range ( 0 , temp ) :
                if temp % 2 == 1 :
                    bit_list [ mask [ j ] ] = 1
                    index += pow ( 2 , mask [ j ] )
                temp //= 2
            print ( '%d:' % index , end = ' ' )
            for j in range ( k ) :
                if bit_list [ mask [ j ] ] == 1 :
                    print ( ' %d' % mask [ j ] , end = ' ' )
            print ( )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(
 68%|██████▊   | 1189/1746 [00:28<00:13, 42.78it/s]

-------------------------------------


---> lineNum: 1190
---> probID: geeksforgeeks_9_A
---> inputs:

---> outputs:
1 3 2 6 

def GFG ( ) :
    import sys
    class PrimeFactorization ( int ) :
        def __init__ ( self , count_of_pf , prime_factor ) :
            self . count_of_pf = count_of_pf
            self . prime_factor = prime_factor
        def generate_divisors ( self , cur_index , cur_divisor , arr ) :
            if cur_index == len ( arr ) :
                print ( cur_divisor , end = ' ' )
                return
            for i in range ( 0 , len ( arr [ cur_index ] ) + 1 ) :
                generate_divisors ( self , cur_index + 1 , cur_divisor , arr )
                cur_divisor *= arr [ cur_index ] [ 'prime_factor' ]
        def find_divisors ( n ) :
            arr = [ ]
            for i in range ( 2 , i * n + 1 ) :
                if n % i == 0 :
                    count = 0
                    while n % i == 0 :
                        n //= i
                        count += 1
                    arr . append ( ( count , i ) )
            if n > 1 :
                arr . append ( ( 1 , n ) )
            self . cur_index , self . cur_divisor = 0 , 1
            generate_divisors ( self , cur_index , cur_divisor , arr )
        def main ( ) :
            n = 6
            find_divisors ( n )
    return None


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552993730_1509/main.py", line 10
    
                ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1191
---> probID: codeforces_607_A
---> inputs:
4
1 9
3 1
6 1
7 4
---> outputs:
1

def main ( ) :
    import sys
    import os
    import sys
    import subprocess
    import sys
    try :
        subprocess . check_call ( [ 'bash' , '-c' , '-s' , '-s
    except :

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1192
---> probID: geeksforgeeks_2850_A
---> inputs:

---> outputs:
ss


def largestPalinSub ( s ) :
    res = ""
    mx = s [ 0 ]
    for c in s [ 1 : ] :
        mx = chr ( max ( ord ( c ) , ord ( c ) ) )
    for c in s :
        if c == mx :
            res += c
    return res


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552993776_5385/main.py", line 9
    break
    ^
SyntaxError: 'break' outside loop


-------------------------------------


---> lineNum: 1193
---> probID: aizu_p00429_A
---> inputs:
5
11
5
11
0
---> outputs:
13112221
13112221

def main ( ) :
    import sys
    try :
        n = len ( sys . stdin )
    except :
        pass
    else :
        if n > 0 :
            break
    s = '' . join ( s )
    count = 0
    t = 0
    u = ''
    for k in range ( n ) :
        for i in range ( len ( s ) ) :
            count = 1
            t = s [ i ]
            while i < len ( s ) - 1 and s [ i + 1 ] == t :
                i += 1
                count += 1
            u += str ( count ) + chr ( t )
        s = u + s
        del u
    print ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1194
---> probID: codeforces_264_B
---> inputs:
5
2 3 4 6 9
---> outputs:
4

def good_seq ( n ) :
    import sys
    import os
    import glob
    import math
    dp = [ 0 ] * 100001
    def factoriseopt ( n ) :
        ans = [ ]
        if n == 1 :
            ans . append ( 1 )
            return ans
        for i in range ( 2 , n ** 2 + 1 ) :
            if n % i == 0 :
                cnt = 0
                while n % i == 0 :
                    cnt += 1
                    n = n // i
                ans . append ( i )
        if n != 1 :
            ans . append ( n )
        return ans
    def main ( ) :
        n = int ( n )
        arr = [ ]
        for i in range ( n ) :
            arr . append ( sc . randint ( 0 , n ) )
        for i in range ( n ) :
            anslist = factoriseopt ( arr [ i ] )
            best = 0
            for x in anslist :
                best = max ( best , dp [ x ] )
            for x in anslist :
                dp [ x ] = best + 1
        maxsofar = 0
        for x in dp :
            maxsofar = max ( maxsofar , x )
        print ( maxsofar )
    return None


---> console_out:
 
DIDN'T MATCH!! :(
 68%|██████▊   | 1194/1746 [00:28<00:12, 42.81it/s]

-------------------------------------


---> lineNum: 1195
---> probID: geeksforgeeks_3577_A
---> inputs:

---> outputs:
20 15 20 40 
20 35 70 60 


def GFG ( A , D ) :
    n = len ( A )
    D [ 0 ] = A [ 0 ]
    D [ n ] = 0
    for i in range ( 1 , n ) :
        D [ i ] = A [ i ] - A [ i - 1 ]
    def update ( D , l , r , x ) :
        D [ l ] += x
        D [ r + 1 ] -= x
    def print_array ( A , D ) :
        for i in range ( len ( A ) ) :
            if i == 0 :
                A [ i ] = D [ i ]
            else :
                A [ i ] = D [ i ] + A [ i - 1 ]
            print ( A [ i ] , end = ' ' )
        print ( )
        return 0
    def main ( ) :
        A = [ 10 , 5 , 20 , 40 ]
        n = len ( A )
        D = np . zeros ( n + 1 )
        initialize_diff_array ( A , D )
        update ( D , 0 , 1 , 10 )
        print_array ( A , D )
        update ( D , 1 , 3 , 20 )
        update ( D , 2 , 2 , 30 )
        print_array ( A , D )
    return 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1196
---> probID: geeksforgeeks_1559_A
---> inputs:

---> outputs:
Maximum Number of Guests = 3 at time 5


def find_max_guests ( arrl , exit , n ) :
    arrl . sort ( )
    exit . sort ( )
    guests_in , max_guests , time = 1 , 1 , arrl [ 0 ]
    i , j = 1 , 0
    while i < n and j < n :
        if arrl [ i ] <= exit [ j ] :
            guests_in += 1
            if guests_in > max_guests :
                max_guests = guests_in
                time = arrl [ i ]
            i += 1
        else :
            guests_in -= 1
            j += 1
    print ( "Maximum Number of Guests = %d at time %d" % ( max_guests , time ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1197
---> probID: aizu_p01213_A
---> inputs:
ABCABCABAB
ZZZZZZZZZZZZ
#END
---> outputs:
ABAB
ZZZZZZ

def main ( ) :
    import string
    sc = string . replace ( "#" , "" )
    for inp in sc :
        if inp == "#END" :
            return
        ans = ""
        for i in range ( 1 , len ( inp ) ) :
            lcs = lcs ( inp [ : i ] , inp [ i : len ( inp ) ] )
            if len ( lcs ) > len ( ans ) :
                ans = lcs
        print ( ans )
    def lcs ( s , t ) :
        n = len ( s )
        m = len ( t )
        dp = np . zeros ( ( n + 1 , m + 1 ) )
        for i in range ( n ) :
            for j in range ( m ) :
                if s [ i ] == t [ j ] :
                    dp [ i + 1 ] [ j + 1 ] = dp [ i ] [ j ] + 1
                else :
                    dp [ i + 1 ] [ j + 1 ] = max ( dp [ i + 1 ] [ j ] , dp [ i ] [ j + 1 ] )
        res = [ ]
        while n > 0 and m > 0 :
            if dp [ n ] [ m ] == dp [ n - 1 ] [ m ] :
                n -= 1
            elif dp [ n ] [ m ] == dp [ n ] [ m - 1 ] :
                m -= 1
            else :
                res . append ( s [ n - 1 ] )
                n -= 1
                m -= 1
        return '' . join ( res )
    def main ( ) :
        return '' . join ( res )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1198
---> probID: geeksforgeeks_5193_A
---> inputs:

---> outputs:
1/36450000


def GFG ( n , r ) :
    final_denominator = 1
    mx = max ( r , n - r )
    for i in range ( mx + 1 , n + 1 ) :
        denominator = int ( math . pow ( i , i ) )
        numerator = int ( math . pow ( i - mx , i - mx ) )
        final_denominator = ( final_denominator * denominator ) / numerator
    return final_denominator


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1199
---> probID: geeksforgeeks_3412_A
---> inputs:

---> outputs:
Yes


def is_perfect_square ( x ) :
    import math
    sr = int ( math . sqrt ( x ) )
    if sr ** 2 == x :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(
 69%|██████▊   | 1199/1746 [00:28<00:12, 42.47it/s]

-------------------------------------


---> lineNum: 1200
---> probID: atcoder_AGC003_C
---> inputs:
1
114
---> outputs:
0

def main ( ) :
    import sys
    import math
    N = int ( 1e5 + 2 )
    d = { }
    nums = [ ]
    for i in range ( N ) :
        tmp = int ( sys . stdin . read ( ) )
        nums . append ( tmp )
        d [ tmp ] = i
    bin = 0
    diff = 0
    while not nums :
        num = nums . pop ( )
        idx = d [ num ]
        if ( bin % 2 ) != ( idx % 2 ) :
            diff += 1
        bin += 1
        bin %= 2
    ans = ( diff // 2 )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1201
---> probID: codeforces_653_A
---> inputs:
4
18 55 16 17
---> outputs:
YES

def main ( ) :
    import sys
    try :
        with open ( './junk/1692552993966_1454/input.txt' , 'w' ) as inp :
            n = len ( inp )
            a = [ ]
            for i in range ( n ) :
                value = inp . read ( )
                a . append ( value )
            a = sorted ( a )
            found = False
            for i in range ( len ( a ) ) :
                if i + 1 < len ( a ) and i + 2 < len ( a ) :
                    if a [ i ] + 1 == a [ i + 1 ] and a [ i + 1 ] + 1 == a [ i + 2 ] :
                        found = True
            print ( 'YES' if found else 'NO' )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1202
---> probID: aizu_p00262_A
---> inputs:
6
1 4 1 3 2 4
5
1 2 3 4 5
10
1 1 1 1 1 1 1 1 1 1
9
1 1 1 1 1 1 1 1 1
12
1 4 1 3 2 4 3 3 2 1 2 2
1
5050
3
10000 10000 100
0
---> outputs:
24
0
10
-1
48
5049
-1

def main ( b ) :
    import sys
    import gc
    class Main ( list ) :
        def check ( b ) :
            if b [ 0 ] != 1 :
                return False
            for i in range ( 1 , len ( b ) ) :
                if b [ i - 1 ] != b [ i ] - 1 :
                    return False
            return True
        def gap ( b ) :
            for i in b :
                if b [ i ] <= 0 :
                    b . pop ( i )
                    i -= 1
                    continue
            b . pop ( 0 )
        def remove_gap ( b ) :
            for i in b :
                if b [ i ] <= 0 :
                    b . pop ( i )
                    i -= 1
                    continue
            b . pop ( 0 )
        def main ( ) :
            sys . stdin . close ( )
            sys . stdout . flush ( )
            sys . stdout . flush ( )
            sys . stdout . close ( )
            sys . stdout . flush ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stdout . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . exit ( )
    return Main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1203
---> probID: geeksforgeeks_2677_A
---> inputs:

---> outputs:
No
Yes


def is_divisible ( S ) :
    import re
    n = len ( S )
    if S [ n - 1 ] != '5' and S [ n - 1 ] != '0' :
        return False
    sum = 0
    for c in S :
        sum += ord ( c )
    if sum % 3 == 0 :
        return True
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1204
---> probID: projecteuler_p142_A
---> inputs:

---> outputs:
1006193

def p142 ( ) :
    print ( eval ( 'p142()' ) )
    global sum_limit
    sum_limit = 10
    while True :
        is_square = [ True ] * sum_limit
        for i in range ( 0 , sum_limit ) :
            is_square [ i ] = True
        sum = find_sum ( sum_limit )
        if sum != - 1 :
            sum = sum_limit
            break
        sum_limit *= 10
    while True :
        sum = find_sum ( sum_limit )
        if sum == - 1 :
            return str ( sum_limit )
        sum_limit = sum
    def find_sum ( limit ) :
        for a in range ( 1 , limit ) :
            for b in range ( a - 1 , 0 , - 1 ) :
                if ( a + b ) % 2 :
                    continue
                x = ( a * a + b * b ) // 2
                y = ( a * a - b * b ) // 2
                if x + y + 1 >= limit :
                    continue
                zlimit = min ( y , limit - x - y )
                for c in range ( math . sqrt ( y ) + 1 , math . sqrt ( c ) - y , zlimit ) :
                    z = c * c - y
                    if is_square [ x + z ] and is_square [ x - z ] and is_square [ y - z ] :
                        return x + y + z
        return - 1


---> console_out:
 
DIDN'T MATCH!! :(
 69%|██████▉   | 1204/1746 [00:28<00:12, 42.46it/s]

-------------------------------------


---> lineNum: 1205
---> probID: geeksforgeeks_2775_A
---> inputs:

---> outputs:
1101


def GFG ( c ) :
    return ( c in " a " or c in " e " or c in " i " or c in " o " or c in " u" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1206
---> probID: atcoder_AGC028_A
---> inputs:
3 2
acp
ae
---> outputs:
6

def main ( ) :
    import string
    for N , M , S , T in enumerate ( open ( 'test.txt' ) ) :
        gcdNM = gcd ( N , M )
        lcmNM = ( int ( N ) / gcd ( N , M ) ) * M
        stepS = M // gcdNM
        stepT = N // gcdNM
        curS = 0
        curT = 0
        isExisted = True
        while curS < len ( S ) and curT < len ( T ) :
            idxXS = curS * stepS + 1
            idxXT = curT * stepT + 1
            if idxXS == idxXT :
                if S [ curS ] != T [ curT ] :
                    isExisted = False
                    break
                else :
                    curS += 1
                    curT += 1
            elif idxXS < idxXT :
                curS += 1
            elif idxXT < idxXS :
                curT += 1
        if isExisted :
            print ( lcmNM )
        else :
            print ( - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1207
---> probID: codeforces_203_B
---> inputs:
4 11
1 1
1 2
1 3
2 2
2 3
1 4
2 4
3 4
3 2
3 3
4 1
---> outputs:
10

def main ( ) :
    import sys
    try :
        N = int ( sys . stdin . readline ( ) )
        M = int ( sys . stdin . readline ( ) )
        black = np . zeros ( ( N + 2 , N + 2 ) )
        for m in range ( 1 , M + 1 ) :
            x = int ( sys . stdin . readline ( ) )
            y = int ( sys . stdin . readline ( ) )
            for xx in range ( x - 1 , x + 1 ) :
                for yy in range ( y - 1 , y + 1 ) :
                    if 1 == black [ xx ] [ yy ] == 9 :
                        print ( m )
                        return
        print ( '-1' )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1208
---> probID: aizu_p00151_A
---> inputs:
5
00011
00101
01000
10101
00010
8
11000001
10110111
01100111
01111010
11111111
01011010
10100010
10000001
2
01
00
3
000
000
000
0
---> outputs:
4
8
1
0

def main ( ) :
    dx = { 1 , 1 , 0 , - 1 , }
    dy = { 0 , 1 , 1 , 1 }
    f = open ( 'test.txt' , 'r' )
    for _ in range ( len ( f ) ) :
        n = len ( f )
        if n == 0 :
            return
        a = np . zeros ( ( n , n ) )
        ans = 0
        for i , s in enumerate ( f ) :
            for j in range ( n ) :
                a [ i ] [ j ] = int ( s [ j ] ) - ord ( '0' )
        for i in range ( n ) :
            for j in range ( n ) :
                for k in range ( 4 ) :
                    cnt = 0
                    sy = i
                    sx = j
                    while 0 <= sx < n and sy < n and a [ sy ] [ sx ] == 1 :
                        cnt += 1
                        sx += dx [ k ]
                        sy += dy [ k ]
                    ans = max ( ans , cnt )
            print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1209
---> probID: geeksforgeeks_3044_A
---> inputs:

---> outputs:
2275.0


def _fourth_power_sum ( n ) :
    import math
    import random
    import math
    return ( ( 6 * math . pi * math . pi * math . pi * math . pi ) + ( 15 * math . pi * math . pi * math . pi ) + ( 10 * math . pi * math . pi * math . pi ) - n ) / 30


---> console_out:
 
DIDN'T MATCH!! :(
 69%|██████▉   | 1209/1746 [00:28<00:12, 42.65it/s]

-------------------------------------


---> lineNum: 1210
---> probID: geeksforgeeks_2831_A
---> inputs:

---> outputs:
Maximum length subsequence = 5


def max_length_sub ( arr ) :
    max_val = 0
    start = 0
    d = { }
    for i in range ( len ( arr ) ) :
        temp = 0
        if arr [ i ] - 1 in d :
            temp = d [ arr [ i ] - 1 ]
        if arr [ i ] in d :
            temp = max ( temp , d [ arr [ i ] ] )
        if arr [ i ] + 1 in d :
            temp = max ( temp , d [ arr [ i ] + 1 ] )
        temp += 1
        if temp > max_val :
            max_val = temp
        d [ arr [ i ] ] = temp
    return max_val


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1211
---> probID: geeksforgeeks_1474_A
---> inputs:

---> outputs:
1 2 3 4 5 6 

def rearrange ( arr ) :
    import sys
    if not arr or len ( arr ) % 2 == 1 :
        return
    curr_idx = ( len ( arr ) - 1 ) // 2
    while curr_idx > 0 :
        count , swap_idx = curr_idx , curr_idx
        while count > 0 :
            temp = arr [ swap_idx + 1 ]
            arr [ swap_idx + 1 ] = arr [ swap_idx ]
            arr [ swap_idx ] = temp
            swap_idx += 1
        curr_idx -= 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1212
---> probID: aizu_p00449_A
---> inputs:
3 8
1 3 1 10
0 2 3
1 2 3 20
1 1 2 5
0 3 2
1 1 3 7
1 2 1 9
0 2 3
5 16
1 1 2 343750
1 1 3 3343
1 1 4 347392
1 1 5 5497
1 2 3 123394
1 2 4 545492
1 2 5 458
1 3 4 343983
1 3 5 843468
1 4 5 15934
0 2 1
0 4 1
0 3 2
0 4 2
0 4 3
0 5 3
0 0
---> outputs:
-1
15
12
5955
21431
9298
16392
24774
8840

def main ( ) :
    import sys
    import random
    INF = 1 << 58
    while True :
        n = random . randint ( 1 , 10000 )
        k = random . randint ( 1 , 10000 )
        if ( n | k ) == 0 :
            break
        fare = [ [ INF ] * n for i in range ( n ) ]
        for i in range ( n ) :
            fare [ i ] [ i ] = 0
        for i in range ( k ) :
            init = random . randint ( 1 , n )
            if init == 1 :
                c = random . randint ( 1 , n - 1 )
                d = random . randint ( 1 , n - 1 )
                e = random . randint ( 1 , n - 1 )
                if e < fare [ c ] [ d ] :
                    fare [ c ] [ d ] = fare [ d ] [ c ] = e
                    for p in range ( n ) :
                        for q in range ( n ) :
                            fare [ p ] [ q ] = min ( fare [ p ] [ q ] , fare [ p ] [ c ] + fare [ c ] [ d ] + fare [ d ] [ q ] )
                            fare [ p ] [ q ] = min ( fare [ p ] [ q ] , fare [ p ] [ d ] + fare [ c ] [ d ] + fare [ c ] [ q ] )
            else :
                a = random . randint ( 1 , n - 1 )
                b = random . randint ( 1 , n - 1 )
                print ( fare [ a ] [ b ] if a != INF else - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1213
---> probID: geeksforgeeks_1157_A
---> inputs:

---> outputs:
Vowels: 5
Consonant: 8
Digit: 3
Special Character: 2


def count_character_type ( data ) :
    import string
    vowels , consonant , special_char , digit = 0 , 0 , 0 , 0
    for ch in data :
        if ( ch >= 'a' and ch <= 'z' ) or ( ch >= 'A' and ch <= 'Z' ) :
            ch = ch . lower ( )
            if ch in [ 'a' , 'e' , 'i' , 'o' , 'u' ] :
                vowels += 1
            else :
                consonant += 1
        elif ch >= '0' and ch <= '9' :
            digit += 1
        else :
            special_char += 1
    print ( 'Vowels: %d' % vowels )
    print ( 'Consonant: %d' % consonant )
    print ( 'Digit: %d' % digit )
    print ( 'Special Character: %d' % special_char )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1214
---> probID: geeksforgeeks_3734_A
---> inputs:

---> outputs:
98.0 %


def GFG ( l , b , h ) :
    percent_inc = ( 1 + ( l / 100 ) ) * ( 1 + ( b / 100 ) ) * ( 1 + ( h / 100 ) )
    percent_inc -= 1
    percent_inc *= 100
    return percent_inc


---> console_out:
 
DIDN'T MATCH!! :(
 70%|██████▉   | 1214/1746 [00:28<00:12, 42.54it/s]

-------------------------------------


---> lineNum: 1215
---> probID: geeksforgeeks_4679_A
---> inputs:

---> outputs:
282


def max_total_rectangle_area ( a , n ) :
    a . sort ( )
    sum = 0
    flag = 0
    len_ = 0
    for i in range ( n ) :
        if ( a [ i ] == a [ i + 1 ] or a [ i ] - a [ i + 1 ] == 1 ) and not flag :
            flag = 1
            len_ = a [ i + 1 ]
            i += 1
        elif ( a [ i ] == a [ i + 1 ] or a [ i ] - a [ i + 1 ] == 1 ) and ( flag ) :
            sum = sum + a [ i + 1 ] * len_
            flag = 0
            i += 1
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1216
---> probID: geeksforgeeks_2484_A
---> inputs:

---> outputs:
Current list:
Forward direction: 1 2 3 4 5
Backward direction: 5 4 3 2 1

Reversed list:
Forward direction: 5 4 3 2 1
Backward direction: 1 2 3 4 5


def GFG ( data ) :
    class Node ( object ) :
        data = None
        next , prev = None , None
    def get_node ( data ) :
        new_node = Node ( )
        new_node . data = data
        return new_node
    def insert_end ( head , new_node ) :
        if not head :
            new_node . next = new_node . prev = new_node
            head = new_node
            return head
        last = ( head . prev , head )
        new_node . next = head
        ( head . prev , new_node )
        new_node . prev = last
        last . next = new_node
        return head
    def reverse ( head ) :
        if not head :
            return None
        new_head = None
        last = head . prev
        curr , prev = last , prev
        while curr . prev != last :
            prev = curr . prev
            new_head = insert_end ( new_head , curr )
            curr = prev
        new_head = insert_end ( new_head , curr )
        return new_head
    def display ( head ) :
        if not head :
            return None
        temp = head
        print ( 'Forward direction: ' , end = ' ' )
        while temp . next != head :
            print ( temp . data , end = ' ' )
            temp = temp . next
        print ( temp . data , end = ' ' )
        last = head . prev
        temp = last
        print ( '\nBackward direction: ' , end = ' ' )
        while temp . prev != last :
            print ( temp . data , end = ' ' )
            temp = temp . prev
        print ( temp . data , end = ' ' )
    def main ( args ) :
        head = None
        head = insert_end ( head , get_node ( 1 ) )
        head = insert_end ( head , get_node ( 2 ) )
        head = insert_end ( head , get_node ( 3 ) )
        head = insert_end ( head , get_node ( 4 ) )
        head = insert_end ( head , get_node ( 5 ) )
        print ( 'Current list:\n' , end = ' ' )
        display ( head )
        head = reverse ( head )
        print ( '\n\nReversed list:\n' , end = ' ' )
        display ( head )
    return Node ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1217
---> probID: geeksforgeeks_915_A
---> inputs:

---> outputs:
71232


def last_five_digits ( n ) :
    n = ( n // 10000 ) * 10000 + ( ( n // 100 ) % 10 ) * 1000 + ( n % 10 ) * 100 + ( ( n // 10 ) % 10 ) * 10 + ( n // 1000 ) % 10
    ans = 1
    for i in range ( 5 ) :
        ans *= n
        ans %= 100000
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1218
---> probID: projecteuler_p080_A
---> inputs:

---> outputs:
40886

def p080 ( ) :
    import math
    print ( math . pow ( 100 * 2 , 2 ) )
    def run ( ) :
        sum = 0
        for i in range ( 1 , 100 + 1 ) :
            x = math . pow ( i , 100 * 2 )
            x = x * math . pow ( 100 * 2 , 2 )
            y = math . sqrt ( x )
            if not y * y == x :
                s = y . split ( ' ' ) [ 0 ]
                for c in s :
                    sum += ord ( c ) - ord ( '0' )
        return str ( sum )
    def sqrt ( x ) :
        i = 0
        while math . pow ( i * 2 , 2 ) <= x :
            i += 1
    y = 0
    for i in range ( 0 , - 1 , - 1 ) :
        global delta
        delta = None
        for j in range ( 9 , - 1 , - 1 ) :
            temp = math . pow ( j , 2 ) * math . pow ( i , 2 )
            delta = y + temp * temp
            if delta <= x :
                break
        if j < 0 :
            raise AssertionError ( )
        x = x - delta
        y = y + math . pow ( j , 2 ) * math . pow ( i , 2 )
    return y


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1219
---> probID: geeksforgeeks_2887_A
---> inputs:

---> outputs:
Pythagoras Triplets exist i.e. 22   120   122


def evaluate ( n ) :
    import sys
    if n == 1 or n == 2 :
        print ( "No Pythagoras " "Triplet exists" )
    elif n % 2 == 0 :
        var = 1 * n * n // 4
        print ( "Pythagoras Triplets " "exist i.e. " , end = " " )
        print ( n , end = " " )
        print ( var - 1 , end = " " )
        print ( var + 1 , end = " " )
    elif n % 2 != 0 :
        var = 1 * n * n + 1
        print ( "Pythagoras Triplets " "exist i.e. " , end = " " )
        print ( n , end = " " )
        print ( var / 2 - 1 , end = " " )
        print ( var / 2 , end = " " )


---> console_out:
 
DIDN'T MATCH!! :(
 70%|██████▉   | 1219/1746 [00:28<00:12, 42.15it/s]

-------------------------------------


---> lineNum: 1220
---> probID: atcoder_ABC048_B
---> inputs:
4 8 2
---> outputs:
3

def main ( ) :
    import sys
    try :
        a = int ( sys . stdin . read ( ) )
        b = int ( sys . stdin . read ( ) )
        x = int ( sys . stdin . read ( ) )
        count = 0
        count += b // x + 1
        if a != 0 :
            count -= ( a - 1 ) // x + 1
        print ( count )
    except ValueError :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1221
---> probID: geeksforgeeks_602_A
---> inputs:

---> outputs:
2


def gcd ( a , b ) :
    import math
    if not a :
        return b
    return math . gcd ( b % a , a )
def find_number ( arr , n ) :
    ans = arr [ 0 ]
    for i in range ( n ) :
        ans = math . gcd ( ans , arr [ i ] )
    for i in range ( n ) :
        if arr [ i ] == ans :
            return ans
    return - 1
def main ( args ) :
    arr = [ 2 , 2 , 4 ]
    n = len ( arr )
    print ( find_number ( arr , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1222
---> probID: geeksforgeeks_427_A
---> inputs:

---> outputs:
5


def count_kdiv_pairs ( A , n , K ) :
    freq = np . zeros ( K )
    ans = 0
    for i in range ( n ) :
        rem = A [ i ] % K
        if rem != 0 :
            ans += freq [ K - rem ]
        else :
            ans += freq [ 0 ]
        freq [ rem ] += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1223
---> probID: atcoder_ABC051_A
---> inputs:
happy,newyear,enjoy
---> outputs:
happy newyear enjoy

def main ( ) :
    import sys
    try :
        a = sys . stdin . readline ( )
        b = sys . stdin . readline ( )
        c = sys . stdin . readline ( )
        print ( a , b , c )
    except :
        print ( 'Error: %s' % sys . exc_info ( ) [ 0 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1224
---> probID: codeforces_1119_A
---> inputs:
5
1 2 3 2 3
---> outputs:
4

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    nums = [ ]
    for i in range ( n ) :
        nums . append ( i )
    l , r = 0 , 0
    for i in range ( n ) :
        if l == 0 and nums [ n - i - 1 ] != nums [ 0 ] :
            l = n - i - 1
        if r == 0 and nums [ i ] != nums [ n - 1 ] :
            r = n - i - 1
    print ( max ( l , r ) )


---> console_out:
 
DIDN'T MATCH!! :(
 70%|███████   | 1224/1746 [00:28<00:12, 42.16it/s]

-------------------------------------


---> lineNum: 1225
---> probID: geeksforgeeks_670_A
---> inputs:

---> outputs:
Total Number of Even-Odd subarrays are 7


def count_subarrays ( arr , n ) :
    difference = 0
    ans = 0
    hash_positive = [ 0 ] * ( n + 1 )
    hash_negative = [ 0 ] * ( n + 1 )
    hash_positive [ 0 ] = 1
    for i in range ( n ) :
        if arr [ i ] & 1 == 1 :
            difference += 1
        else :
            difference -= 1
        if difference < 0 :
            ans += hash_negative [ - difference ]
            hash_negative [ - difference ] += 1
        else :
            ans += hash_positive [ difference ]
            hash_positive [ difference ] += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1226
---> probID: geeksforgeeks_4910_A
---> inputs:

---> outputs:
geeksgeeks

def GFG ( data , n ) :
    import string
    SIZE = 26
    freq = [ 0 ] * SIZE
    for c in data [ n : ] :
        freq [ ord ( c ) - ord ( 'a' ) ] += 1
    for c in data [ n : ] :
        if ord ( c ) % 2 == 0 :
            print ( c , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1227
---> probID: geeksforgeeks_3597_A
---> inputs:

---> outputs:
for

def GFG ( data , n ) :
    freq = [ 0 ] * 26
    for c in data :
        freq [ ord ( c ) - ord ( 'a' ) ] += 1
    for c in data :
        if ord ( c ) % 2 == 1 :
            print ( c , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1228
---> probID: geeksforgeeks_1056_A
---> inputs:

---> outputs:
3


def count_greater ( arr , n , k ) :
    l = 0
    r = n - 1
    left_greater = n
    while l <= r :
        m = l + ( r - l ) // 2
        if arr [ m ] > k :
            left_greater = m
            r = m - 1
        else :
            l = m + 1
    return ( n - left_greater )


---> console_out:
 
DIDN'T MATCH!! :(
s_push: parser stack overflow
MemoryError


-------------------------------------


---> lineNum: 1229
---> probID: aizu_p01619_A
---> inputs:
1 1
---> outputs:
2

def main ( ) :
    import sys
    import numpy as np
    import math
    import numpy . inf
    import math
    import numpy . sup
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random
    import numpy . random . seed as random
    import numpy . random
    import numpy . random . seed as seed
    seed = seed or random . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random . randint ( 0 , np . random ( 0 , np . randint ( 0 , np . random . randint ( 0 , np . random ( 0 , np . abs ( np . abs ( np . abs ( np . abs ( np . abs ( np . abs ( np . abs ( np . abs ( np ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( abs ( ( abs

---> console_out:
 
DIDN'T MATCH!! :(
 70%|███████   | 1229/1746 [00:29<00:12, 42.39it/s]

-------------------------------------


---> lineNum: 1230
---> probID: geeksforgeeks_2542_A
---> inputs:

---> outputs:
a = 67.9851
b = 1.01493


def find_andB ( N ) :
    val = N * N - 4.0 * N
    if val < 0 :
        print ( "NO" )
        return
    a = ( N + math . sqrt ( val ) ) / 2.0
    b = ( N - math . sqrt ( val ) ) / 2.0
    print ( "a = %f" % a )
    print ( "b = %f" % b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1231
---> probID: codeforces_1227_A
---> inputs:
4
3
4 5
5 9
7 7
5
11 19
4 17
16 16
3 12
14 17
1
1 10
1
1 1
---> outputs:
2
4
0
0

def submit_ ( ) :
    import sys
    import math
    t = sys . maxsize
    while t != 0 :
        n = sys . maxsize
        x , y = 0 , 0
        temp1 , temp2 = math . inf , math . inf
        for i in range ( n ) :
            x = math . floor ( x )
            y = math . floor ( y )
            temp1 = max ( temp1 , x )
            temp2 = min ( temp2 , y )
        print ( max ( 0 , ( temp1 - temp2 ) ) )
        t -= 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1232
---> probID: codeforces_745_B
---> inputs:
2 3
XXX
XXX
---> outputs:
YES

def main ( ) :
    import string
    data = set ( )
    n , m = len ( sys . stdin ) , len ( sys . stdin )
    for x in sys . stdin :
        if 'X' in x :
            data . add ( x )
    if len ( data ) == 1 :
        print ( 'YES' )
    else :
        print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1233
---> probID: aizu_p01678_A
---> inputs:
3?4
12?
5?6
?2?4
5?7?
?9?2
?????
?????
?????
0
---> outputs:
2
40
200039979

def main ( ) :
    import string
    MOD = 1000000007
    with open ( '../../../../' ) as sc :
        while True :
            aa = sc . readline ( ) . strip ( )
            if aa [ 0 ] == '0' :
                break
            bb = sc . readline ( ) . strip ( )
            cc = sc . readline ( ) . strip ( )
            n = len ( aa )
            dp = np . zeros ( ( n + 1 , 2 ) )
            dp [ 0 ] [ 0 ] = 1
            for i in range ( 1 , n + 1 ) :
                da = - 1 if aa [ n - i ] == '?' else aa [ n - i ] - '0'
                db = - 1 if bb [ n - i ] == '?' else bb [ n - i ] - '0'
                dc = - 1 if cc [ n - i ] == '?' else cc [ n - i ] - '0'
                for j in range ( 2 ) :
                    for carry in range ( 2 ) :
                        patterns = 0
                        for a in range ( 10 ) :
                            if da != - 1 and da != a :
                                continue
                            for b in range ( 10 ) :
                                if db != - 1 and db != b :
                                    continue
                                c = a + b + carry
                                if ( j == 0 and c >= 10 ) or ( j == 1 and c < 10 ) :
                                    continue
                                if i == n :
                                    if a * b * c == 0 :
                                        continue
                                if dc == - 1 or dc == c % 10 :
                                    patterns += 1
                        dp [ i ] [ j ] += dp [ i - 1 ] [ carry ] * patterns % MOD
                        dp [ i ] [ j ] %= MOD
            print ( dp [ n ] [ 0 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1234
---> probID: codeforces_1374_B
---> inputs:
7
1
2
3
12
12345
15116544
387420489
---> outputs:
0
-1
2
-1
-1
12
36

def multiply ( ) :
    import sys
    t = sys . maxsize
    while t > 0 :
        a = sys . maxsize
        two = 0
        three = 0
        while a % 2 == 0 :
            a = a // 2
            two += 1
        while a % 3 == 0 :
            a = a // 3
            three += 1
        if a == 1 :
            if three >= two :
                temp = two
                three -= two
                temp += three * 2
                print ( temp )
            else :
                print ( '-1' )
        else :
            print ( '-1' )


---> console_out:
 
DIDN'T MATCH!! :(
 71%|███████   | 1234/1746 [00:29<00:12, 42.55it/s]

-------------------------------------


---> lineNum: 1235
---> probID: geeksforgeeks_290_A
---> inputs:

---> outputs:
6


def min_increment_for_unique ( A ) :
    import sys
    mpp = { }
    for i in A :
        if i in mpp :
            mpp [ i ] = mpp [ i ] + 1
        else :
            mpp [ i ] = 1
    taken = [ ]
    ans = 0
    for x in range ( 100000 ) :
        if x in mpp and mpp [ x ] >= 2 :
            taken . append ( x * ( mpp [ x ] - 1 ) )
        elif taken and ( ( x in mpp and mpp [ x ] == 0 ) or not mpp . has_key ( x ) ) :
            ans += x - taken [ - 1 ]
            taken . pop ( )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1236
---> probID: codeforces_70_A
---> inputs:
3
---> outputs:
9

def main ( ) :
    import sys
    import os
    import math
    MOD = 1000003
    f = open ( sys . stdin , 'r' )
    f . write ( '\n' )
    n = int ( f . readline ( ) )
    ans = 1 if n == 0 else math . pow ( 3 , n - 1 , MOD )
    f . write ( ans )
    f . close ( )
    os . chmod ( sys . stdout , 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1237
---> probID: geeksforgeeks_1203_A
---> inputs:

---> outputs:
1


def GFG ( s , n ) :
    global dp
    dp = np . zeros ( ( n + 1 , 13 ) )
    dp [ 0 ] [ 0 ] = 1
    for i in range ( n ) :
        for j in range ( 10 ) :
            nxt = ord ( s [ i ] ) - ord ( '0' )
            if s [ i ] == '?' :
                nxt = j
            for k in range ( 13 ) :
                rem = ( 10 * k + nxt ) % 13
                dp [ i + 1 ] [ rem ] += dp [ i ] [ k ]
                dp [ i + 1 ] [ rem ] %= MOD
            if s [ i ] != '?' :
                break
    return int ( dp [ n ] [ 5 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1238
---> probID: geeksforgeeks_3271_A
---> inputs:

---> outputs:
28


def count_nums ( a , b , c , d ) :
    x = b // c - ( a - 1 ) // c
    y = b // d - ( a - 1 ) // d
    k = ( c * d ) // gcd ( c , d )
    z = b // k - ( a - 1 ) // k
    return b - a + 1 - x - y + z


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1239
---> probID: geeksforgeeks_1817_A
---> inputs:

---> outputs:
1
12
123
2
23
3


def GFG ( n ) :
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    math
    import math
    import math
    import math
    import math
    math
    import math
    import math
    math
    import math
    import math
    math
    import math
    import math
    math
    import math
    math
    import math
    math
    math = math


---> console_out:
 
DIDN'T MATCH!! :(
 71%|███████   | 1239/1746 [00:29<00:11, 42.48it/s]

-------------------------------------


---> lineNum: 1240
---> probID: geeksforgeeks_4144_A
---> inputs:

---> outputs:
0


def GFG ( n ) :
    s = ""
    c = 1
    for i in range ( 1 ) :
        if c < 10 :
            s += str ( c )
        else :
            s1 = ""
            dup = c
            while dup > 0 :
                s1 += str ( dup % 10 )
                dup //= 10
            temp = list ( s1 )
            temp = temp . reverse ( )
            s += temp
        c += 1
        if len ( s ) >= n :
            return s [ n - 1 ]
    return "" . join ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1241
---> probID: aizu_p00760_A
---> inputs:
8
1 1 1
344 3 1
696 5 1
182 9 5
998 8 7
344 2 19
696 4 19
999 10 20
---> outputs:
196470
128976
59710
160715
252
128977
59712
1

def main ( args ) :
    import string
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    tosi = [ ]
    M = [ ]
    D = [ ]
    i = 0
    k = 0
    c = 0
    for k in range ( n ) :
        total = 0
        day = 0
        tosi . append ( int ( n ) )
        M . append ( int ( n ) )
        D . append ( int ( n ) )
        for i in range ( tosi [ k ] + 1 , 1000 + 1 ) :
            if i % 3 == 0 :
                total += 200
            else :
                total += 195
        if tosi [ k ] % 3 == 0 :
            tuki = ( M [ k ] - 1 ) * 20
            day = tuki + D [ k ] - 6
        else :
            if ( M [ k ] - 1 ) % 2 == 0 :
                day = ( ( M [ k ] - 1 ) / 2 ) * 20 + ( ( M [ k ] - 1 ) / 2 ) * 19 + D [ k ] - 1
            else :
                day = ( ( M [ k ] ) / 2 ) * 20 + ( ( M [ k ] - 1 ) / 2 ) * 19 + D [ k ] - 1
        total = total - day
        print ( total )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552994932_9743/main.py", line 28
    return main
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 1242
---> probID: geeksforgeeks_1071_A
---> inputs:

---> outputs:
3


def check_prime ( n ) :
    import string
    if n <= 1 :
        return False
    if n <= 3 :
        return True
    if n % 2 == 0 or n % 3 == 0 :
        return False
    for i in range ( 5 , n * 2 + 1 , 6 ) :
        if n % i == 0 or n % ( i + 2 ) == 0 :
            return False
    return True
def count_prime_freent ( s ) :
    count = 0
    mp = { }
    for c in s :
        if c in mp :
            mp [ c ] = mp [ c ] + 1
        else :
            mp [ c ] = 1
    for c , count in mp . items ( ) :
        if check_prime ( count ) :
            count += 1
    return count
def main ( ) :
    s = 'geeksforgeeks'
    print ( count_prime_freent ( s ) )
return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1243
---> probID: codeforces_387_B
---> inputs:
3 5
1 2 3
1 2 2 3 3
---> outputs:
0

def main ( ) :
    import sys
    import string
    import math
    import sys
    n = int ( sys . stdin . readline ( ) )
    m = int ( sys . stdin . readline ( ) )
    req = [ ]
    pre = [ ]
    for i in range ( n ) :
        req . append ( math . floor ( math . pi ) )
    for i in range ( m ) :
        pre . append ( math . floor ( math . pi ) )
    i , j = n - 1 , m - 1
    ans = 0
    while i >= 0 and j >= 0 :
        if req [ i ] > pre [ j ] :
            ans += 1
        else :
            j -= 1
        i -= 1
    sys . stdout . write ( str ( ans ) + str ( i + 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1244
---> probID: geeksforgeeks_3998_A
---> inputs:

---> outputs:
1 1 2 5 14 42 132 429 1430 4862 

def catalan_dp ( n ) :
    catalan = [ 1 ] * ( n + 2 )
    catalan [ 0 ] = 1
    catalan [ 1 ] = 1
    for i in range ( 2 , n + 1 ) :
        catalan [ i ] = 0
        for j in range ( i ) :
            catalan [ i ] += catalan [ j ] * catalan [ i - j - 1 ]
    return catalan [ n ]


---> console_out:
 
DIDN'T MATCH!! :(
 71%|███████   | 1244/1746 [00:29<00:11, 42.68it/s]

-------------------------------------


---> lineNum: 1245
---> probID: projecteuler_p243_A
---> inputs:

---> outputs:
892371480

def p243 ( ) :
    import math
    print ( math . tan ( math . pi / 15499 ) )
    import math
    TARGET = math . tan ( math . pi / 94744 )
    def run ( ) :
        totient = 1
        denominator = 1
        for p in range ( 2 ) :
            totient = totient * math . tan ( p - 1 )
            denominator = denominator * math . tan ( p )
            do
            p += 1
        if math . fabs ( totient - denominator ) < TARGET :
            for numer , denom in zip ( math . fabs ( totient - 1 ) , math . fabs ( denominator - 1 ) ) :
                if math . fabs ( numer - denom ) < TARGET :
                    return denom
    return ''


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1246
---> probID: codeforces_8_B
---> inputs:
LLUUUR
---> outputs:
OK

def main ( ) :
    import string
    try :
        i , j , x , y , k , dx , dy = 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
        flag = True
    except :
        flag = False
    ch = string . ascii_lowercase
    co = np . zeros ( ( 2 , 101 ) )
    s = s . replace ( ' ' , '' )
    ch = s . replace ( ' ' , '' )
    co [ 0 ] [ k ] = x
    co [ 1 ] [ k ] = y
    k += 1
    for c in ch :
        if c == 'L' :
            x -= 1
        elif c == 'R' :
            x += 1
        elif c == 'U' :
            y += 1
        elif c == 'D' :
            y -= 1
        co [ 0 ] [ k ] = x
        co [ 1 ] [ k ] = y
        k += 1
    for i in range ( k - 3 ) :
        for j in range ( i + 3 , k ) :
            dx = co [ 0 ] [ i ] - co [ 0 ] [ j ]
            dy = co [ 1 ] [ i ] - co [ 1 ] [ j ]
            if dx < 0 :
                dx *= ( - 1 )
            if dy < 0 :
                dy *= ( - 1 )
            if ( dx <= 1 and dy == 0 ) or ( dy <= 1 and dx == 0 ) :
                flag = False
                break
        if not flag :
            break
    if flag :
        print ( 'OK' )
    else :
        print ( 'BUG' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1247
---> probID: geeksforgeeks_10_A
---> inputs:

---> outputs:
Yes


def GFG ( n ) :
    if n <= 1 :
        return False
    for i in range ( 2 , math . sqrt ( n ) + 1 ) :
        if n % i == 0 :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1248
---> probID: geeksforgeeks_1371_A
---> inputs:

---> outputs:
Number of Dyck Paths is  14


def count_dyck_paths ( n ) :
    res = 1
    for i in range ( n ) :
        res *= ( 2 * n - i )
        res //= ( i + 1 )
    return res / ( n + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1249
---> probID: codeforces_1388_A
---> inputs:
7
7
23
31
36
44
100
258
---> outputs:
['NO\nNO\nYES\n14 10 6 1\nYES\n5 6 10 15\nYES\n6 7 10 21\nYES\n2 10 33 55\nYES\n10 21 221 6', 'NO\nNO\nYES\n6 10 14 1\nYES\n6 10 15  5\nYES\n6 10 15  13\nYES\n6 10 14 70\nYES\n6 10 14 228\n']

def main ( ) :
    import sys
    t = sys . maxsize
    for tc in range ( t ) :
        n = sys . maxsize
        print ( solve ( n ) )
    sys . maxsize = t
    def solve ( n ) :
        if n <= 30 :
            return "NO"
        elif n in [ 36 , 40 , 44 ] :
            return "YES\n6 10 15 %d" % ( n - 31 )
        else :
            return "YES\n6 10 14 %d" % ( n - 30 )
    return ""


---> console_out:
 
DIDN'T MATCH!! :(
 72%|███████▏  | 1249/1746 [00:29<00:11, 42.63it/s]

-------------------------------------


---> lineNum: 1250
---> probID: atcoder_ABC118_C
---> inputs:
2
956199757 202955748
---> outputs:
1

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    a = [ ]
    for i in range ( n ) :
        a . append ( sys . stdin . readline ( ) )
    ans = a [ 0 ]
    for i in range ( 1 , n ) :
        ans = gcd ( ans , a [ i ] )
    print ( ans )
    def gcd ( a , b ) :
        if b == 0 :
            return a
        return gcd ( b , a % b )
    return gcd ( a , b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1251
---> probID: codeforces_975_B
---> inputs:
0 1 1 0 0 0 0 0 0 7 0 0 0 0
---> outputs:
4

def main ( ) :
    import sys
    a = [ ]
    for i in range ( 14 ) :
        a . append ( sys . stdin . read ( ) )
    max = 0
    for from_index in range ( 14 ) :
        stones = a [ from_index ]
        remainder = stones // 14
        score = ( remainder if remainder % 2 == 0 else 0 )
        for i in range ( 1 , 14 ) :
            count = a [ ( from_index + i ) % 14 ] + ( stones + 14 - i ) // 14
            if count % 2 == 0 :
                score += count
        max = max
    print ( max )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1252
---> probID: geeksforgeeks_4585_A
---> inputs:

---> outputs:
7.32


def gf_gcd ( a ) :
    if a < 0 :
        return - 1
    d = 1.22 * a
    return d


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1253
---> probID: geeksforgeeks_4586_A
---> inputs:

---> outputs:
15.57


def hex_diagonal ( a ) :
    if a < 0 :
        return - 1
    d = float ( 1.73 ) * a
    return d


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1254
---> probID: geeksforgeeks_200_A
---> inputs:

---> outputs:
The modified string is :
helloCworldCGfG  


def translate ( str ) :
    import string
    s = list ( str )
    if len ( s ) < 2 :
        return
    i = 0
    j = 0
    while j < len ( s ) - 1 :
        if s [ j ] == 'A' and s [ j + 1 ] == 'B' :
            j = j + 2
            s [ i ] = 'C'
            continue
        s [ i ] = s [ j ]
        j = j + 1
    if j == len ( s ) - 1 :
        s [ i ] = s [ j ]
    s [ i ] = ' '
    s [ - 1 ] = ' '


---> console_out:
 
DIDN'T MATCH!! :(
 72%|███████▏  | 1254/1746 [00:29<00:11, 42.97it/s]

-------------------------------------


---> lineNum: 1255
---> probID: geeksforgeeks_199_A
---> inputs:

---> outputs:
The modified string is :
helloCworldCGfG  


def translate ( str ) :
    import string
    for i in range ( 1 , len ( str ) ) :
        if str [ i - 1 ] == 'A' and str [ i ] == 'B' :
            str [ i - 1 ] = 'C'
            j = i
            for j in range ( i , len ( str ) - 1 ) :
                str [ j ] = str [ j + 1 ]
            str [ j ] = ' '
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1256
---> probID: projecteuler_p128_A
---> inputs:

---> outputs:
14516824220

def p128 ( ) :
    print ( eval ( 'p128()' ) )
    TARGET = 2000
    count = 2
    for ring in range ( 2 ) :
        if int ( ring ) * 12 + 5 > sys . maxsize :
            raise OverflowError
        if math . isnan ( ring ) and math . isnan ( ring ) and math . isnan ( ring ) and math . isnan ( ring ) :
            count += 1
            if count == TARGET :
                return str ( int ( ring ) * ( ring - 1 ) * 3 + 2 )
        if math . isnan ( ring ) and math . isnan ( ring ) and math . isnan ( ring ) :
            count += 1
            if count == TARGET :
                return str ( int ( ring ) * ( ring + 1 ) * 3 + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1257
---> probID: codeforces_214_A
---> inputs:
9 3
---> outputs:
1

def main ( ) :
    import sys
    n = sys . maxsize
    m = sys . maxsize
    c = 0
    for i in range ( 0 , max ( n , m ) + 1 ) :
        for j in range ( 0 , max ( n , m ) + 1 ) :
            if ( i * i ) + j == n and i + ( j * j ) == m :
                c += 1
    print ( c )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1258
---> probID: geeksforgeeks_2193_A
---> inputs:

---> outputs:
6 2


def Digits ( n ) :
    import math
    import io
    class GFG ( int ) :
        largest = 0
        smallest = 9
        while n != 0 :
            r = n % 10
            largest = max ( r , largest )
            smallest = min ( r , smallest )
            n = n // 10
        print ( largest , smallest )
    def Digits ( n ) :
        n = 2346
        Digits ( n )
    return GFG


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1259
---> probID: geeksforgeeks_3696_A
---> inputs:

---> outputs:
( 0 , 0 ), ( 3 , 0 ) and ( 1 , 3 )


def solve ( d1 , d2 , d3 ) :
    import sys
    maxx = max ( d1 , max ( d2 , d3 ) )
    sum = ( d1 + d2 + d3 )
    if 2 * maxx > sum or sum % 2 == 1 :
        print ( "-1" , end = " " )
        return
    x1 , y1 = 0 , 0
    x2 , y2 = d1 , 0
    x3 = ( d1 + d2 - d3 ) // 2
    y3 = ( d2 + d3 - d1 ) // 2
    print ( "(%d, %d), (%d, %d) and (%d, %d)" % ( x1 , y1 , x2 , y2 , x3 , y3 ) , end = " " )


---> console_out:
 
DIDN'T MATCH!! :(
 72%|███████▏  | 1259/1746 [00:29<00:11, 42.57it/s]

-------------------------------------


---> lineNum: 1260
---> probID: geeksforgeeks_5246_A
---> inputs:

---> outputs:
NO


def gf_gall ( x ) :
    import string
    a = list ( x )
    for c in range ( n ) :
        a [ ord ( c ) - ord ( 'a' ) ] += 1
    for c in a :
        if ord ( c ) > ord ( 'a' ) :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1261
---> probID: codeforces_1509_B
---> inputs:
5
3
TMT
3
MTT
6
TMTMTT
6
TMTTTT
6
TTMMTT
---> outputs:
YES
NO
YES
NO
YES

def Lesson ( s ) :
    import string
    import string
    import string
    import string
    class Lesson ( string ) :
        def __init__ ( self ) :
            string . __init__ ( self )
            self . s = s
            self . OUTER_LOOP = None
        def check ( self ) :
            t = 0
            for c in self . s :
                if c . isspace ( ) :
                    t += 1
                elif c . isspace ( ) :
                    if t <= 0 :
                        return False
                    t -= 1
            return True
        def main ( self ) :
            t = self . OUTER_LOOP
            while t > 0 :
                n = self . OUTER_LOOP
                s = list ( self . s )
                if s . find ( 'M' ) < 0 :
                    self . OUTER_LOOP = True
                    continue
                T , m = 0 , 0
                for c in s :
                    if c . isspace ( ) :
                        T += 1
                    else :
                        m += 1
                if T // 2 != m :
                    self . OUTER_LOOP = True
                    continue
                if self . check ( s ) == True and self . check ( s . reverse ( ) ) == True :
                    self . OUTER_LOOP = True
                else :
                    self . OUTER_LOOP = True
    return Lesson


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1262
---> probID: aizu_p00341_A
---> inputs:
1 1 3 4 8 9 7 3 4 5 5 5
---> outputs:
no

def main ( ) :
    import string
    try :
        e = list ( range ( 13 ) )
    except :
        print ( "No such file" )
        return
    for i in range ( 12 ) :
        for j in range ( 12 - i ) :
            if e [ j ] < e [ j + 1 ] :
                y = e [ j ]
                e [ j ] = e [ j + 1 ]
                e [ j + 1 ] = y
    for u in range ( 3 ) :
        for k in range ( 4 ) :
            i = u * 4
            if e [ i ] == e [ i + 1 ] and e [ i + 2 ] == e [ i + 3 ] and e [ i ] == e [ i + 2 ] and e [ i + 1 ] == e [ i + 3 ] and e [ i ] == e [ i + 3 ] and e [ i + 1 ] == e [ i + 2 ] :
                p += 1
            else :
                p += 0
    if p == 12 :
        print ( "yes" )
    else :
        print ( "no" )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552995427_7007/main.py", line 31
    return 0
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 1263
---> probID: geeksforgeeks_4580_A
---> inputs:

---> outputs:
Row with min 0s: 3
Row with max 0s: 4


def GFG ( arr , low , high ) :
    if high >= low :
        mid = low + ( high - low ) // 2
        if ( mid == 0 or arr [ mid - 1 ] == 0 ) and arr [ mid ] == 1 :
            return mid
        elif arr [ mid ] == 0 :
            return first ( arr , ( mid + 1 ) , high )
        else :
            return first ( arr , low , ( mid - 1 ) )
    return - 1
def rowWith0s ( mat ) :
    max_row_index , max = 0 , sys . maxint
    min_row_index , min = 0 , sys . maxint
    for i in range ( R ) :
        index = first ( mat [ i ] , 0 , C - 1 )
        if index == - 1 :
            col_zeroes = C
        else :
            col_zeroes = index
        if max < col_zeroes :
            max = col_zeroes
            max_row_index = i
        if min > col_zeroes :
            min = col_zeroes
            min_row_index = i
    print ( "Row with min 0s: %d" % ( min_row_index + 1 ) )
    print ( "Row with max 0s: %d" % ( max_row_index + 1 ) )
def main ( ) :
    mat = [ [ 0 , 0 , 0 , 1 ] , [ 0 , 1 , 1 , 1 ] , [ 1 , 1 , 1 , 1 ] , [ 0 , 0 , 0 , 0 ] ]
    rowWith0s ( mat )
return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1264
---> probID: geeksforgeeks_4527_A
---> inputs:

---> outputs:
Set


def bit_at_given_pos_set_unset ( n , k ) :
    import sys
    new_num = n >> ( k - 1 )
    return ( new_num & 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 72%|███████▏  | 1264/1746 [00:29<00:11, 42.23it/s]

-------------------------------------


---> lineNum: 1265
---> probID: codeforces_747_B
---> inputs:
8
AG?C??CT
---> outputs:
AGACGTCT

def main ( ) :
    import sys
    f = open ( "/proc/cmdline" , "r" )
    n = int ( f . readline ( ) )
    if n % 4 != 0 :
        print ( "====" )
        return
    themost = n // 4
    numA = 0
    numG = 0
    numC = 0
    numT = 0
    numQM = 0
    s = f . read ( )
    s = '' . join ( s )
    for c in s :
        if c == "A" :
            numA += 1
        elif c == "G" :
            numG += 1
        elif c == "C" :
            numC += 1
        elif c == "T" :
            numT += 1
        else :
            numQM += 1
    if numA > themost or numC > themost or numG > themost or numT > themost :
        print ( "====" )
        return
    for j in range ( numQM ) :
        for i in range ( len ( s ) ) :
            if s [ i ] == "?" :
                if numA < themost :
                    s [ i ] = i + 1
                    numA += 1
                elif numC < themost :
                    s [ i ] = i + 1
                    numC += 1
                elif numG < themost :
                    s [ i ] = i + 1
                    numG += 1
                elif numT < themost :
                    s [ i ] = i + 1
                    numT += 1
        print ( s )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1266
---> probID: aizu_p00606_A
---> inputs:
1
E A C
1
E B C
2
E A B
0
---> outputs:
0.00000000
0.25000000
0.06250000

def main ( ) :
    import sys
    import numpy as np
    import numpy . testing . ufuncs as ufuncs
    import os
    import os . path as op
    import sys
    import os . path as op
    import numpy . testing . ufuncs as ufuncs
    import os . path as op
    import numpy . testing . ufuncs as ufuncs
    import os . path as op
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    import numpy . testing . ufuncs as ufuncs
    return ufuncs


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1267
---> probID: codeforces_926_A
---> inputs:
1 10
---> outputs:
7

def sol_main ( argc ) :
    import sys
    try :
        l = int ( sys . stdin . readline ( ) )
        r = int ( sys . stdin . readline ( ) )
        ans = 0
        for i in range ( 1 , r + 1 ) :
            for j in range ( 1 , r + 1 ) :
                if i * j >= l :
                    ans += 1
        print ( ans )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1268
---> probID: atcoder_ABC076_B
---> inputs:
4
3
---> outputs:
10

def main ( ) :
    import sys
    try :
        N = int ( sys . stdin . read ( ) )
        K = int ( sys . stdin . read ( ) )
    except ValueError :
        pass
    else :
        t = 1
        for i in range ( N ) :
            t = min ( 2 * t , t + K )
        print ( t )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1269
---> probID: geeksforgeeks_4806_A
---> inputs:

---> outputs:
Yes


def are_permutations ( a , b , n , m ) :
    import numpy as np
    sum1 , sum2 , mul1 , mul2 = 0 , 0 , 1 , 1
    for i in range ( n ) :
        sum1 += a [ i ]
        mul1 *= a [ i ]
    for i in range ( m ) :
        sum2 += b [ i ]
        mul2 *= b [ i ]
    return ( ( sum1 == sum2 ) and ( mul1 == mul2 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 73%|███████▎  | 1269/1746 [00:29<00:11, 42.29it/s]

-------------------------------------


---> lineNum: 1270
---> probID: geeksforgeeks_3105_A
---> inputs:

---> outputs:
b c l p r 

def GFG ( str1 , str2 ) :
    global present
    present = [ 0 for i in range ( MAX_CHAR ) ]
    l1 = len ( str1 )
    l2 = len ( str2 )
    for i in range ( l1 ) :
        present [ str1 [ i ] - 'a' ] = 1
    for i in range ( l2 ) :
        if present [ str2 [ i ] - 'a' ] == 1 or present [ str2 [ i ] - 'a' ] == - 1 :
            present [ str2 [ i ] - 'a' ] = - 1
        else :
            present [ str2 [ i ] - 'a' ] = 2
    for i in range ( MAX_CHAR ) :
        if present [ i ] == 1 or present [ i ] == 2 :
            print ( chr ( i + ord ( 'a' ) ) , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1271
---> probID: geeksforgeeks_3679_A
---> inputs:

---> outputs:
Inside


def is_inside ( circle_x , circle_y , rad , x , y ) :
    if ( x - circle_x ) ** 2 + ( y - circle_y ) ** 2 <= rad ** 2 :
        return True
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1272
---> probID: geeksforgeeks_3247_A
---> inputs:

---> outputs:
26


def min_sum ( arr , n , x ) :
    sum = 0
    largest_divisible , minimum = - 1 , arr [ 0 ]
    for i in range ( n ) :
        sum += arr [ i ]
        if arr [ i ] % x == 0 and largest_divisible < arr [ i ] :
            largest_divisible = arr [ i ]
        if arr [ i ] < minimum :
            minimum = arr [ i ]
    if largest_divisible == - 1 :
        return sum
    sum_after_operation = sum - minimum - largest_divisible + ( x * minimum ) + ( largest_divisible // x )
    return min ( sum , sum_after_operation )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1273
---> probID: geeksforgeeks_1828_A
---> inputs:

---> outputs:
45
1225
1249999950000000
125000006750000091


def nth_term ( n ) :
    if n % 2 == 0 :
        nth = 2 * ( ( n * n ) - n )
    else :
        nth = ( 2 * n * n ) - n
    return nth


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1274
---> probID: aizu_p02433_A
---> inputs:
5
0 1
0 2
0 3
1 1
2
---> outputs:
3
1

def main ( ) :
    import sys
    list = list ( )
    list . append ( 0 )
    with open ( '/proc/cmdline' , 'r' ) as f :
        n = len ( f . readlines ( ) )
        for i in range ( n ) :
            cmd = f . readline ( ) . strip ( )
            if cmd == 0 :
                list . append ( f . readline ( ) )
                list . pop ( )
            elif cmd == 1 :
                d = f . readline ( ) . strip ( )
                if d > 0 :
                    for j in range ( d ) :
                        list . append ( f . readline ( ) )
                else :
                    for j in range ( 0 , d - 1 , - 1 ) :
                        list . append ( f . readline ( ) )
            elif cmd == 2 :
                list . append ( f . readline ( ) )
                list . pop ( )
    for i in list :
        print ( i )


---> console_out:
 
DIDN'T MATCH!! :(
 73%|███████▎  | 1274/1746 [00:30<00:11, 42.37it/s]

-------------------------------------


---> lineNum: 1275
---> probID: codeforces_1029_A
---> inputs:
3 4
aba
---> outputs:
ababababa

def c1029_a ( ) :
    import string
    s = list ( string . ascii_lowercase )
    ans = 0
    for i in range ( 1 , len ( s ) ) :
        if s [ : i ] == s [ - i : ] :
            ans = i
    s = s [ - ans : ]
    for i in range ( k ) :
        s . append ( s [ ans : ] )
    print ( '' . join ( s ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1276
---> probID: geeksforgeeks_3091_A
---> inputs:

---> outputs:
4 2 5 1 6 3 7 

def GFG ( ) :
    class Node ( object ) :
        def __init__ ( self , data ) :
            self . data = data
            self . left , self . right = self . data , None
        def newNode ( self , data ) :
            temp = Node ( )
            temp . data = data
            temp . left = temp . right = None
            return temp
        def printInorder ( self , node ) :
            if not node :
                return
            printInorder ( node . left )
            print ( '%d ' % self . data )
            printInorder ( node . right )
        def conBinaryTreeUtil ( pre , preM , preIndex , l , h , size ) :
            if preIndex . a >= size or l > h :
                return
            root = newNode ( pre [ preIndex . a ] )
            preIndex += 1
            if l == h :
                return root
            i = 0
            for i in range ( l , h + 1 ) :
                if pre [ preIndex . a ] == preM [ i ] :
                    break
                if i <= h :
                    root . left = conBinaryTreeUtil ( pre , preM , preIndex , i , h , size )
                    root . right = conBinaryTreeUtil ( pre , preM , preIndex , l + 1 , i - 1 , size )
            return root
        def conBinaryTree ( root , pre , preMirror , size ) :
            preIndex = INT ( 0 )
            preMIndex = 0
            root = conBinaryTreeUtil ( pre , preMirror , preIndex , 0 , size - 1 , size )
            printInorder ( root )
        def main ( self , args ) :
            preOrder = [ 1 , 2 , 4 , 5 , 3 , 6 , 7 ]
            preOrderMirror = [ 1 , 3 , 7 , 6 , 2 , 5 , 4 ]
            size = len ( preOrder )
            root = Node ( )
            conBinaryTree ( root , preOrder , preOrderMirror , size )
    return Node ( )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552995757_3187/main.py", line 14
    if

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1277
---> probID: geeksforgeeks_1450_A
---> inputs:

---> outputs:
Smallest window is : 
t stri


def find_substring ( str , pat ) :
    no_of_chars = 256
    if len ( str ) < no_of_chars :
        print ( 'No such window exists' )
        return ''
    hash_pat = { }
    hash_str = { }
    for c in pat :
        hash_pat [ c ] += 1
    start , start_index , min_len = 0 , - 1 , 0
    count = 0
    for j in range ( len1 ) :
        hash_str [ str [ j ] ] += 1
        if

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552995782_6467/main.py", line 8
    if ( ( ccw ( p [ 0 ] , p [ 3 ] , p [ 1 ] ) > 0 and ccw ( p [ 1 ] , p [ 3 ] , p [ 2 ] ) > 0 and ccw ( p [ 2 ] , p [ 3 ] , p [ 0 ] ) > 0 ) or ( ccw ( p [ 0 ] , p [ 3 ] , p [ 1 ] ) < 0 and ccw ( p [ 1 ] , p [ 3 ] , p [ 2 ] ) < 0 and ccw ( p [ 2 ] , p [ 3 ] , p [ 0 ] ) < 0 ) :
                                                                                                                                                                                                                                                                                    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1278
---> probID: aizu_p00012_A
---> inputs:
0.0 0.0 2.0 0.0 2.0 2.0 1.5 0.5
0.0 0.0 1.0 4.0 5.0 3.0 -1.0 3.0
---> outputs:
YES
NO

def main ( ) :
    import sys
    for i in range ( 4 ) :
        p = [ ]
        for j in range ( 4 ) :
            p . append ( ( float ( i ) , float ( j ) ) )
        judge = False
        if ( ( ccw ( p [ 0 ] , p [ 3 ] , p [ 1 ] ) > 0 and ccw ( p [ 1 ] , p [ 3 ] , p [ 2 ] ) > 0 and ccw ( p [ 2 ] , p [ 3 ] , p [ 0 ] ) > 0 ) or ( ccw ( p [ 0 ] , p [ 3 ] , p [ 1 ] ) < 0 and ccw ( p [ 1 ] , p [ 3 ] , p [ 2 ] ) < 0 and ccw ( p [ 2 ] , p [ 3 ] , p [ 0 ] ) < 0 ) :
            judge = True
        print ( "YES" if judge else "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1279
---> probID: codeforces_755_B
---> inputs:
5 1
polandball
is
a
cool
character
nope
---> outputs:
YES

def PolandBoardAndGame ( ) :
    import re
    import sys
    n = int ( sys . stdin . readline ( ) )
    m = int ( sys . stdin . readline ( ) )
    if n > m :
        print ( "YES" )
    elif m > n :
        print ( "NO" )
    else :
        d = { }
        for i in range ( n ) :
            d [ i ] = 1
        dem = 0
        for i in range ( m ) :
            if d . has_key ( i ) :
                dem += 1
        if dem % 2 == 0 :
            print ( "NO" )
        else :
            print ( "YES" )


---> console_out:
 
DIDN'T MATCH!! :(
 73%|███████▎  | 1279/1746 [00:30<00:11, 42.08it/s]  File "./junk/1692552995830_2283/main.py", line 39
    return main
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 1280
---> probID: geeksforgeeks_2071_A
---> inputs:

---> outputs:
252


def GFG ( ) :
    import numpy as np
    MAX = 100005
    def add_primes ( ) :
        n = MAX
        prime = np . zeros ( n + 1 )
        prime [ n ] = True
        for p in range ( 2 , n + 1 ) :
            if prime [ p ] == True :
                for i in range ( p * p , n + 1 , p ) :
                    prime [ i ] = False
        return True
    ans = [ ]
    for p in range ( 2 , n + 1 ) :
        if prime [ p ] :
            ans . append ( p )
    return ans
def is_prime ( n ) :
    return ( n == 3 or n == 5 or n == 7 )
def find_sum ( n ) :
    sum = 0
    v = add_primes ( )
    for i in range ( len ( v ) and n > 0 ) :
        flag = 1
        a = v [ i ]
        while a != 0 :
            d = a % 10
            a = a // 10
            if is_prime ( d ) :
                flag = 0
                break
        if flag == 1 :
            n -= 1
            sum = sum + v [ i ]
    return sum
def main ( ) :
    n = 7
    print ( find_sum ( n ) )
return main


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552995854_1163/main.py", line 3
    with open
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^
SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1281
---> probID: aizu_p00542_A
---> inputs:
100
34
76
42
10
0
---> outputs:
228

def main ( ) :
    import sys
    with open

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1282
---> probID: codeforces_673_A
---> inputs:
3
7 20 88
---> outputs:
35

def main ( ) :
    import sys
    import csv
    class BearAndGame1 ( csv . reader ) :
        def __init__ ( self ) :
            sc = csv . reader ( sys . stdin )
            self . n = len ( sc )
            self . csv = sc
        def index ( self ) :
            return self . idx
    class BearAndGame2 ( list ) :
        def __init__ ( self ) :
            self . list = list ( range ( 100 ) )
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
        def index ( self ) :
            return self . idx
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552995902_5061/main.py", line 71
    return np .
              ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1283
---> probID: geeksforgeeks_665_A
---> inputs:

---> outputs:
4


def GFG ( index , even_sum , odds_sum , tight ) :
    import numpy as np
    import numpy as np
    import numpy . fft as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    return np .

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552995928_5411/main.py", line 10
    loop :
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1284
---> probID: atcoder_ABC088_C
---> inputs:
1 0 1
2 1 2
1 0 1
---> outputs:
Yes

def main ( ) :
    import string
    sc = string . split ( " " )
    s = [ ]
    c = [ [ ] for i in range ( 3 ) ]
    b = True
    for i in range ( 2 ) :
        for j in range ( i + 1 , 3 ) :
            c . append ( sc . split ( " " ) [ 0 ] )
    loop :
        for i in range ( 2 ) :
            for j in range ( i + 1 , 3 ) :
                if c [ i ] [ 0 ] - c [ j ] [ 0 ] == c [ i ] [ 1 ] - c [ j ] [ 1 ] and c [ i ] [ 1 ] - c [ j ] [ 1 ] == c [ i ] [ 2 ] - c [ j ] [ 2 ] :
                    pass
                else :
                    b = False
                    break loop
    loop :
        for i in range ( 2 ) :
            for j in range ( i + 1 , 3 ) :
                if c [ 0 ] [ i ] - c [ 0 ] [ j ] == c [ 1 ] [ i ] - c [ 1 ] [ j ] and c [ 1 ] [ i ] - c [ 1 ] [ j ] == c [ 2 ] [ i ] - c [ 2 ] [ j ] :
                    pass
                else :
                    b = False
                    break loop
        if b :
            print ( "Yes" )
        else :
            print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(
 74%|███████▎  | 1284/1746 [00:30<00:11, 41.64it/s]

-------------------------------------


---> lineNum: 1285
---> probID: codeforces_1739_B
---> inputs:
3
4
1 0 2 5
3
2 6 3
5
0 0 0 0 0
---> outputs:
1 1 3 8
-1
0 0 0 0 0

def main ( ) :
    import sys
    import os
    import sys
    import subprocess
    t = sys . maxsize
    while t > 0 :
        n = sys . maxsize
        a = [ ]
        b = [ ]
        for i in range ( n ) :
            a . append ( sys . stdin . read ( n ) )
        flag = True
        b . append ( a [ 0 ] )
        for i in range ( 1 , n ) :
            if a [ i ] != 0 and b [ i - 1 ] - a [ i ] >= 0 :
                flag = False
                break
            else :
                b [ i ] = b [ i - 1 ] + a [ i ]
        if not flag :
            sys . stdout . write ( - 1 )
        else :
            for i in range ( n ) :
                sys . stdout . write ( '%d ' % b [ i ] )
            sys . stdout . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1286
---> probID: projecteuler_p218_A
---> inputs:

---> outputs:
0

def p218 ( ) :
    print ( int ( ) )
    return '0'


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1287
---> probID: geeksforgeeks_1547_A
---> inputs:

---> outputs:
Element is present at index 3


def GFG ( arr , x ) :
    n = len ( arr )
    for i in range ( n ) :
        if arr [ i ] == x :
            return i
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1288
---> probID: atcoder_ABC095_D
---> inputs:
3 20
2 80
9 120
16 1
---> outputs:
191

def main ( ) :
    import sys
    import os
    import subprocess
    import sys
    class Main ( subprocess . Popen ) :
        def communicate ( self ) :
            return self . returncode
    x = sys . stdin . read ( ) . split ( )
    n = int ( x [ 0 ] )
    c = int ( x [ 1 ] )
    forward_max = [ 0 ] * ( n + 1 )
    backward_max = [ 0 ] * ( n + 1 )
    positions = [ 0 ] * ( n + 1 )
    values = [ 0 ] * ( n + 1 )
    positions [ 0 ] = 0
    values [ 0 ] = 0
    for i in range ( 1 , n + 1 ) :
        x = sys . stdin . read ( ) . split ( )
        positions [ i ] = int ( x [ 0 ] )
        values [ i ] = int ( x [ 1 ] )
    max = 0
    sum = 0
    for i in range ( 0 , n + 1 ) :
        sum += values [ i ]
        max = max ( max , sum - positions [ i ] )
        forward_max [ i ] = max
    max = 0
    sum = 0
    for i in range ( n , - 1 , - 1 ) :
        sum += values [ i ]
        max = max ( max , sum - ( c - positions [ i ] ) )
        backward_max [ i ] = max
    res = 0
    for i in range ( 0 , n + 1 ) :
        res = max ( res , forward_max [ i ] )
        if i != n :
            res = max ( res , forward_max [ i ] - ( positions [ i ] ) + backward_max [ i + 1 ] )
        res = max ( res , backward_max [ i ] )
        if i != 0 :
            res = max ( res , backward_max [ i ] - ( c - positions [ i ] ) + forward_max [ i - 1 ] )
    print ( res )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1289
---> probID: geeksforgeeks_1848_A
---> inputs:

---> outputs:
32


def toggle_bits_from_l_to_r ( n , l , r ) :
    import math
    num = ( ( 1 << r ) - 1 ) ^ ( ( 1 << ( l - 1 ) ) - 1 )
    return ( n ^ num )
def unset_bits_in_given_range ( n , l , r ) :
    num = ( 1 << ( 4 * 8 - 1 ) ) - 1
    num = toggle_bits_from_l_to_r ( num , l , r )
    return ( n & num )


---> console_out:
 
DIDN'T MATCH!! :(
 74%|███████▍  | 1289/1746 [00:30<00:10, 41.65it/s]

-------------------------------------


---> lineNum: 1290
---> probID: geeksforgeeks_3387_A
---> inputs:

---> outputs:
7


def GFG ( a , n ) :
    positive , negative , zero = 0 , 0 , 0
    step = 0
    for i in range ( n ) :
        if a [ i ] == 0 :
            zero += 1
        elif a [ i ] < 0 :
            negative += 1
            step = step + ( - 1 - a [ i ] )
        else :
            positive += 1
            step = step + ( a [ i ] - 1 )
    if negative % 2 == 0 :
        step = step + zero
    else :
        if zero > 0 :
            step = step + zero
        else :
            step = step + 2
    return step


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1291
---> probID: codeforces_743_A
---> inputs:
4 1 4
1010
---> outputs:
1

def main ( ) :
    import string
    try :
        number , start , end = int ( sys . stdin . readline ( ) ) , int ( sys . stdin . readline ( ) ) , int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    arr = [ 0 ] * ( number + 1 )
    data = list ( data )
    for i in range ( len ( data ) ) :
        arr [ i + 1 ] = data [ i ] - '0'
    if arr [ start ] == arr [ end ] :
        print ( 0 )
    else :
        print ( abs ( arr [ start ] - arr [ end ] ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1292
---> probID: codeforces_1654_A
---> inputs:
5
6
5 2 1 4 7 3
3
32 78 78
3
69 54 91
8
999021 999021 999021 999021 999652 999021 999021 999021
2
1000000000 1000000000
---> outputs:
12
156
160
1998673
2000000000

def main ( ) :
    import sys
    try :
        t = sys . maxsize
    except AttributeError :
        pass
    while t > 0 :
        n = sys . maxsize
        num = [ ]
        for i in range ( n ) :
            num . append ( sys . maxsize )
        num . sort ( )
        print ( num [ n - 1 ] + num [ n - 2 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1293
---> probID: geeksforgeeks_3154_A
---> inputs:

---> outputs:
4


def GFG ( a , b ) :
    if not b :
        return a
    return __gcd ( b , a % b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1294
---> probID: geeksforgeeks_2238_A
---> inputs:

---> outputs:
1557


def GFG ( s , a ) :
    n = len ( s )
    for i in range ( n ) :
        if s [ i ] - '0' < a [ s [ i ] - '0' ] :
            j = i
            while j < n and ( s [ j ] - '0' <= a [ s [ j ] - '0' ] ) :
                s [ j ] = chr ( ord ( '0' ) + a [ s [ j ] - '0' ] )
                j += 1
            return '' . join ( s )
    return '' . join ( s )


---> console_out:
 
DIDN'T MATCH!! :(
 74%|███████▍  | 1294/1746 [00:30<00:10, 41.83it/s]  File "./junk/1692552996192_9206/main.py", line 110
    
        ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1295
---> probID: geeksforgeeks_1820_A
---> inputs:

---> outputs:
Yes


def GFG ( n ) :
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    try :
        string = string
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1296
---> probID: codeforces_146_A
---> inputs:
2
47
---> outputs:
NO

def main ( args ) :
    import string
    import sys
    x , y = 0 , 0
    t = 0
    n = len ( args )
    data = args [ n ]
    l = list ( data )
    for c in l :
        if c != '4' and c != '7' :
            t = 1
    if t == 1 :
        print ( 'NO' )
    else :
        for i in range ( n // 2 ) :
            x = x + ord ( c )
        for i in range ( n - 1 , ( n // 2 ) - 1 , - 1 ) :
            y = y + ord ( c )
        if x == y :
            print ( 'YES' )
        else :
            print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1297
---> probID: geeksforgeeks_4040_A
---> inputs:

---> outputs:
Fixed Point is 2
Fixed Point is 3


def binary_search ( arr , low , high ) :
    if high < low :
        return - 1
    mid = ( low + high ) // 2
    mid_value = arr [ mid ]
    if mid == arr [ mid ] :
        return mid
    leftindex = min ( mid - 1 , mid_value )
    left = binary_search ( arr , low , leftindex )
    if left >= 0 :
        return left
    rightindex = max ( mid + 1 , mid_value )
    right = binary_search ( arr , rightindex , high )
    return right


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1298
---> probID: geeksforgeeks_4563_A
---> inputs:

---> outputs:
23 

def GFG ( x ) :
    import re
    MAX = 10000
    prodDig = [ 0 ] * MAX
    def getDigitProduct ( x ) :
        if x < 10 :
            return x
        if x in prodDig :
            return prodDig [ x ]
        prod = ( x % 10 ) * getDigitProduct ( x // 10 )
        return ( prodDig [ x ] , prod )
    def findSeed ( n ) :
        res = [ ]
        for i in range ( 1 , n // 2 + 1 ) :
            if i * getDigitProduct ( i ) == n :
                res . append ( i )
        if len ( res ) == 0 :
            print ( 'NO seed exists' )
            return
        for i in res :
            print ( i , end = ' ' )
    def main ( ) :
        n = 138
        findSeed ( n )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1299
---> probID: atcoder_ABC107_C
---> inputs:
5 3
-30 -10 10 20 50
---> outputs:
40

def main ( args ) :
    import sys
    f = sys . stdin
    data = f . read ( ) . split ( )
    n = int ( data [ 0 ] )
    k = int ( data [ 1 ] )
    x = [ 0 ] * n
    data = f . read ( ) . split ( )
    for i in range ( n ) :
        x [ i ] = int ( data [ i ] )
    ans = sys . maxsize
    for i in range ( 0 , k - 1 , n ) :
        left = x [ i ]
        right = x [ i + k - 1 ]
        ans = min ( ans , min ( abs ( left ) , abs ( right ) ) + right - left )
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 74%|███████▍  | 1299/1746 [00:30<00:10, 41.80it/s]

-------------------------------------


---> lineNum: 1300
---> probID: geeksforgeeks_4414_A
---> inputs:

---> outputs:
Cubic root of 3 is 1.44225


def diff ( n , mid ) :
    import math
    if n > ( mid ** 2 ) :
        return ( n - ( mid ** 2 ) )
    else :
        return ( ( mid ** 2 ) - n )
def cubicRoot ( n ) :
    start , end = 0 , n
    e = 0.0000001
    while True :
        mid = ( start + end ) / 2
        error = diff ( n , mid )
        if error <= e :
            return mid
        if ( mid ** 2 ) > n :
            end = mid
        else :
            start = mid
    return math . sqrt ( ( n - ( mid - 1 ) ) ** 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1301
---> probID: codeforces_1042_A
---> inputs:
4
6
1
1
1
1
---> outputs:
3 7

def main ( ) :
    import sys
    import string
    n = int ( sys . stdin . readline ( ) )
    m = int ( sys . stdin . readline ( ) )
    a = [ 0 ] * 105
    max = 0
    for i in range ( 0 , n - 1 + 1 ) :
        a [ i ] = int ( sys . stdin . readline ( ) )
        if i > 0 and a [ i ] > a [ max ] :
            max = i
    ansmax = a [ max ] + m
    for i in range ( 0 , m - 1 + 1 ) :
        min = 0
        for j in range ( 0 , n - 1 + 1 ) :
            if j > 0 and a [ j ] < a [ min ] :
                min = j
        a [ min ] += 1
    max = 0
    for i in range ( 1 , n - 1 + 1 ) :
        if a [ i ] > a [ max ] :
            max = i
    ansmin = a [ max ]
    sys . stdout . write ( str ( ansmin ) + ' ' + str ( ansmax ) )
    sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1302
---> probID: geeksforgeeks_4197_A
---> inputs:

---> outputs:
x is  11


def inv ( a , m ) :
    m0 = m , t , q = m
    x0 , x1 = 0 , 1
    if m == 1 :
        return 0
    while a > 1 :
        q = a // m
        t = m
        m = a % m
        a = t
        t = x0
        x0 = x1 - q * x0
        x1 = t
    if x1 < 0 :
        x1 += m0
    return x1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1303
---> probID: geeksforgeeks_721_A
---> inputs:

---> outputs:
2


def solution ( arrgs ) :
    import string
    def find_max_OR ( arr , n ) :
        for i in range ( n ) :
            for j in range ( i + 1 , n ) :
                if arr [ i ] < arr [ j ] :
                    temp = arr [ i ]
                    arr [ i ] = arr [ j ]
                    arr [ j ] = temp
        max_OR = arr [ 0 ]
        count = 1
        for i in range ( 1 , n ) :
            if ( max_OR | arr [ i ] ) > max_OR :
                max_OR = max_OR | arr [ i ]
                count += 1
        return count
    arr = [ 5 , 1 , 3 , 4 , 2 ]
    n = len ( arr )
    print ( find_max_OR ( arr , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1304
---> probID: geeksforgeeks_3181_A
---> inputs:

---> outputs:
20.0


def series_sum ( n ) :
    import sys
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += i * ( i + 1 ) / 2
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
 75%|███████▍  | 1304/1746 [00:30<00:10, 42.25it/s]

-------------------------------------


---> lineNum: 1305
---> probID: geeksforgeeks_2275_A
---> inputs:

---> outputs:
16


def aliquot_sum ( n ) :
    import sys
    sum = 0
    for i in range ( 1 , n ) :
        if n % i == 0 :
            sum += i
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1306
---> probID: geeksforgeeks_1714_A
---> inputs:

---> outputs:
40


def pentagon_pyramidal ( n ) :
    import sys
    sum = 0
    for i in range ( 1 , n + 1 ) :
        p = ( 3 * i ** 2 - i ) / 2
        sum = sum + p
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1307
---> probID: geeksforgeeks_1672_A
---> inputs:

---> outputs:
12201


def fifth_power_sum ( n ) :
    import sys
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum = sum + ( i * i * i * i * i )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1308
---> probID: geeksforgeeks_4067_A
---> inputs:

---> outputs:
30


def squaresum ( n ) :
    import sys
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += ( i * i )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1309
---> probID: geeksforgeeks_3046_A
---> inputs:

---> outputs:
20.0


def series_sum ( n ) :
    import sys
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += i * ( i + 1 ) / 2
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
 75%|███████▍  | 1309/1746 [00:30<00:10, 42.75it/s]

-------------------------------------


---> lineNum: 1310
---> probID: geeksforgeeks_4057_A
---> inputs:

---> outputs:
1330


def sum_of_series ( n ) :
    import sys
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum = sum + ( 2 * i - 1 ) ** 2
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1311
---> probID: geeksforgeeks_4824_A
---> inputs:

---> outputs:
20


def GFG ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += ( ( i * ( i + 1 ) * ( 2 * i + 1 ) ) / 6 )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1312
---> probID: geeksforgeeks_3043_A
---> inputs:

---> outputs:
2275


def fourth_power_sum ( n ) :
    import math
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum = sum + ( i * i * i * i )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1313
---> probID: geeksforgeeks_2336_A
---> inputs:

---> outputs:
816


def square_sum ( n ) :
    import sys
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += ( 2 * i ) ** 2
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1314
---> probID: geeksforgeeks_4689_A
---> inputs:

---> outputs:
2.5


def AvgofSquareN ( n ) :
    import math
    sum = 0
    for i in range ( 1 , n + 1 ) :
        sum += ( i * i )
    return sum / n


---> console_out:
 
DIDN'T MATCH!! :(
 75%|███████▌  | 1314/1746 [00:31<00:10, 42.41it/s]

-------------------------------------


---> lineNum: 1315
---> probID: geeksforgeeks_1613_A
---> inputs:

---> outputs:
8


def find_sum ( n ) :
    import sys
    sum = 0
    for i in range ( n ) :
        sum += i * ( n - i )
    return 2 * sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1316
---> probID: geeksforgeeks_4020_A
---> inputs:

---> outputs:
7


def GFG ( n , base ) :
    import sys
    sum = 0
    while n > 0 :
        remainder = n % base
        sum += remainder
        n = n // base
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1317
---> probID: aizu_p00053_A
---> inputs:
2
9
0
---> outputs:
5
100

def main ( ) :
    import sys
    import random
    N = 10000
    def solve ( ) :
        sc = sys . stdin
        p = [ ]
        for i in range ( 2 , len ( p ) + 1 ) :
            f = True
            for j in p :
                f &= i % j != 0
                if not f :
                    break
            if f :
                p . append ( i )
        while True :
            n = sc . recv_ready ( )
            if n == 0 :
                break
            sum = 0
            for i in range ( n ) :
                sum += p [ i ]
            print ( sum )
    def debug ( * os ) :
        sys . stderr . write ( '' . join ( str ( i ) for i in os ) + '\n' )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1318
---> probID: geeksforgeeks_1878_A
---> inputs:

---> outputs:
1
4


def main ( ) :
    import sys
    print ( sys . maxsize )
    print ( sys . maxsize )
    print ( sys . maxsize )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1319
---> probID: geeksforgeeks_4891_A
---> inputs:

---> outputs:
Cost of Optimal BST is 142


def optimal_search_tree ( keys , freq , n ) :
    cost = np . zeros ( ( n + 1 , n + 1 ) )
    for i in range ( n ) :
        cost [ i ] [ i ] = freq [ i ]
    for L in range ( 2 , n + 1 ) :
        for i in range ( 0 , n - L + 1 ) :
            j = i + L - 1
            cost [ i ] [ j ] = np . inf
            for r in range ( i , j + 1 ) :
                c = ( ( r > i ) and cost [ i ] [ r - 1 ] or 0 ) + ( ( r < j ) and cost [ r + 1 ] [ j ] or 0 ) + sum ( freq , i , j )
                if c < cost [ i ] [ j ] :
                    cost [ i ] [ j ] = c
    return cost [ 0 ] [ n - 1 ]
def sum ( freq , i , j ) :
    s = 0
    for k in range ( i , j + 1 ) :
        if k >= len ( freq ) :
            continue
        s += freq [ k ]
    return s


---> console_out:
 
DIDN'T MATCH!! :(
 76%|███████▌  | 1319/1746 [00:31<00:10, 42.63it/s]

-------------------------------------


---> lineNum: 1320
---> probID: geeksforgeeks_1139_A
---> inputs:

---> outputs:
6


def GFG ( x , y , z ) :
    if x > z :
        return - 1
    val = z - x
    div = ( z - x ) // y
    ans = div * y + x
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1321
---> probID: codeforces_612_B
---> inputs:
3
3 1 2
---> outputs:
3

def code_forces ( ) :
    BUFFERSIZE = 512000
    sc = sys . stdin . fileno ( )
    out = sys . stdout . fileno ( )
    def solve ( ) :
        n = sc . __next__ ( )
        d = { }
        for i in range ( n ) :
            d [ sc . __next__ ( ) ] = i
        last_loc = d [ 1 ]
        ans = 0
        for i in range ( 1 , n + 1 ) :
            new_loc = d [ i ]
            ans += abs ( last_loc - new_loc )
            last_loc = new_loc
        out . write ( ans )
    def main ( ) :
        sys . stdin . close ( )
        solve ( )
        sys . stdout . close ( )
    class inp ( ) :
        def __init__ ( self , stream ) :
            self . stream = stream
            self . stream = stream
            self . stream = stream
            self . stream = ''
        def next ( self ) :
            while not self . stream . eof ( ) :
                self . stream = self . stream . readline ( )
            return self . stream . __next__ ( )
        def next ( self ) :
            while not self . stream . eof ( ) :
                self . stream = self . stream . readline ( )
            return self . stream . __next__ ( )
        def next ( self ) :
            while self . stream . eof ( ) :
                self . stream . next ( )
            return self . stream . __next__ ( )
        def next ( self ) :
            return int ( self . stream . read ( ) )
        def next ( self ) :
            return float ( self . stream . read ( ) )
        def next ( self ) :
            return int ( self . stream . read ( ) )
        def next ( self ) :
            return int ( self . stream . read ( ) )
        def next ( self ) :
            return int ( self . stream . read ( ) )
        def next ( self ) :
            return int ( self . stream . read ( ) )
        def next ( self ) :
            return int ( self . stream . read ( ) )
    return inp


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1322
---> probID: geeksforgeeks_2993_A
---> inputs:

---> outputs:
6


def binomial_coeff ( n , k ) :
    import numpy as np
    C = np . zeros ( ( n + 1 , k + 1 ) )
    for i in range ( 0 , n + 1 ) :
        for j in range ( 0 , min ( i , k ) + 1 ) :
            if j == 0 or j == i :
                C [ i ] [ j ] = 1
            else :
                C [ i ] [ j ] = C [ i - 1 ] [ j - 1 ] + C [ i - 1 ] [ j ]
    return C [ n ] [ k ]
def max_coefficientvalue ( n ) :
    if n % 2 == 0 :
        return binomial_coeff ( n , n // 2 )
    else :
        return binomial_coeff ( n , ( n + 1 ) // 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1323
---> probID: geeksforgeeks_1163_A
---> inputs:

---> outputs:
2


def is_vowel ( ch ) :
    if ch in [ 'a' , 'e' , 'i' , 'o' , 'u' ] :
        return True
    else :
        return False
def vowelpairs ( s , n ) :
    cnt = 0
    for i in range ( n - 1 ) :
        if is_vowel ( s [ i ] ) and is_vowel ( s [ i + 1 ] ) :
            cnt += 1
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1324
---> probID: aizu_p00706_A
---> inputs:
16
10 8
2 2
2 5
2 7
3 3
3 8
4 2
4 5
4 8
6 4
6 7
7 5
7 8
8 1
8 4
9 6
10 3
4 3
8
6 4
1 2
2 1
2 4
3 4
4 2
5 3
6 1
6 2
3 2
0
---> outputs:
4
3

def solve ( ) :
    import sys
    solve ( )
    sys . stdout = sys . stderr
    while True :
        N = sys . stdin . tell ( )
        if not N :
            break
        W = sys . stdin . tell ( )
        H = sys . stdin . tell ( )
        map = np . zeros ( ( W + 1 , H + 1 ) )
        while N > 0 :
            N -= 1
        S = sys . stdin . tell ( )
        T = sys . stdin . tell ( )
        max = 0
        for s in range ( 1 , W - S + 1 ) :
            for t in range ( 1 , H - T + 1 ) :
                count = 0
                for a in range ( s , s + S ) :
                    for b in range ( t , t + T ) :
                        count += map [ a ] [ b ]
                if max < count :
                    max = count
        pr . write ( max )
    pr . flush ( )
    sys . stdout = sys . stderr


---> console_out:
 
DIDN'T MATCH!! :(
 76%|███████▌  | 1324/1746 [00:31<00:09, 42.56it/s]

-------------------------------------


---> lineNum: 1325
---> probID: geeksforgeeks_2780_A
---> inputs:

---> outputs:
Present at index 5


def is_substr ( s1 , s2 ) :
    M = len ( s1 )
    N = len ( s2 )
    for i in range ( 0 , N - M + 1 ) :
        j = 0
        for j in range ( M ) :
            if s2 [ i + j ] != s1 [ j ] :
                break
        if j == M :
            return i
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1326
---> probID: geeksforgeeks_836_A
---> inputs:

---> outputs:
The angle is 32.5 degrees


def GFG ( z ) :
    return ( z / 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1327
---> probID: geeksforgeeks_416_A
---> inputs:

---> outputs:
Count of subarrays of 0 only: 5
Count of subarrays of 1 only: 15


def count_subarraysof1and0 ( a , n ) :
    import numpy as np
    count1 , count0 = 0 , 0
    number1 , number0 = 0 , 0
    for i in range ( n ) :
        if a [ i ] == 1 :
            count1 += 1
        else :
            number1 += ( count1 ) * ( count1 + 1 ) / 2
            count1 = 0
    for i in range ( n ) :
        if a [ i ] == 0 :
            count0 += 1
        else :
            number0 += ( count0 ) * ( count0 + 1 ) / 2
            count0 = 0
    if count1 > 0 :
        number1 += ( count1 ) * ( count1 + 1 ) / 2
    if count0 > 0 :
        number0 += ( count0 ) * ( count0 + 1 ) / 2
    print ( 'Count of subarrays of 0 only: %d' % number0 )
    print ( '\nCount of subarrays of 1 only: %d' % number1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1328
---> probID: geeksforgeeks_5089_A
---> inputs:

---> outputs:
13 11 3 1 

def GFG ( N ) :
    flag = 1
    x = N
    if N > 0 :
        while x > 0 and flag == 1 :
            digit = x % 10
            if digit != 1 and digit != 3 :
                flag = 0
            x = x // 10
        if flag == 1 :
            print ( N , end = ' ' )
        PrintNumbers ( N - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552996985_9368/main.py", line 87
    from math import
                   ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1329
---> probID: geeksforgeeks_4831_A
---> inputs:

---> outputs:
5 4 3 1 2 

def print_permutation ( n , k ) :
    import sys
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import

---> console_out:
 
DIDN'T MATCH!! :(
 76%|███████▌  | 1329/1746 [00:31<00:09, 42.81it/s]

-------------------------------------


---> lineNum: 1330
---> probID: codeforces_1017_A
---> inputs:
5
100 98 100 100
100 100 100 100
100 100 99 99
90 99 90 100
100 98 60 99
---> outputs:
2

def the_rank ( ) :
    import sys
    n = len ( sys . stdin )
    ans = 0
    rank = 1
    arr = [ ]
    for i in range ( n ) :
        a = sys . stdin . read ( )
        b = sys . stdin . read ( )
        c = sys . stdin . read ( )
        d = sys . stdin . read ( )
        sum = a + b + c + d
        arr . append ( sum )
    for j in arr :
        if arr [ 0 ] < j :
            rank += 1
    print ( rank )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1331
---> probID: geeksforgeeks_2666_A
---> inputs:

---> outputs:
Yes


def GFG ( s1 , s2 ) :
    import re
    mp = { }
    for c in s1 :
        mp [ c ] = 1 if mp . get ( c ) is None else mp . get ( c ) + 1
    for c in s2 :
        if mp [ c ] > 0 :
            return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1332
---> probID: codeforces_1341_A
---> inputs:
5
7 20 3 101 18
11 11 10 234 2
8 9 7 250 122
19 41 21 321 10
3 10 8 6 1
---> outputs:
Yes
No
Yes
No
Yes

def main ( ) :
    import sys
    try :
        t = sys . stdin . read ( )
    except AttributeError :
        pass
    while t :
        n , a , b , c , d , flag = sys . stdin . read ( )
        if not flag :
            break
        else :
            t = t + 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1333
---> probID: geeksforgeeks_1483_A
---> inputs:

---> outputs:
2 -6 1 

def find_elements ( arr , n ) :
    import sys
    for i in range ( n ) :
        count = 0
        for j in range ( n ) :
            if arr [ j ] > arr [ i ] :
                count += 1
        if count >= 2 :
            sys . stdout . write ( '%d ' % arr [ i ] )
    import sys
    arr = [ 2 , - 6 , 3 , 5 , 1 ]
    n = len ( arr )
    find_elements ( arr , n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1334
---> probID: geeksforgeeks_3478_A
---> inputs:

---> outputs:
14


def max_path_sum ( tri , m , n ) :
    import numpy as np
    import numpy as np
    import numpy . fft as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    from numpy . random import random as np
    from numpy . random import gaussian_ratio
    from numpy . math import sqrt
    from numpy . random import gaussian_ratio
    from numpy . math import sqrt
    from numpy . random import gaussian_ratio
    from numpy . math import sqrt
    from numpy . random import gaussian_ratio
    from numpy . math import sqrt
    from numpy . random import gaussian_ratio
    from numpy . math import sqrt
    from numpy . random import gaussian_ratio
    from numpy . math import sqrt
    from numpy . random import gaussian_ratio
    from numpy . math import sqrt
    from numpy . random import gaussian_ratio
    from numpy . math import sqrt
    from numpy . random import gaussian_ratio
    from numpy . math import sqrt
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import sqrt
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import sqrt
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    from numpy . math import gaussian_ratio
    return gaussian_ratio


---> console_out:
 
DIDN'T MATCH!! :(
 76%|███████▋  | 1334/1746 [00:31<00:09, 42.82it/s]

-------------------------------------


---> lineNum: 1335
---> probID: geeksforgeeks_3197_A
---> inputs:

---> outputs:
Yes


def GFG ( arr , n ) :
    for i in range ( 0 , ( n - 2 ) // 2 + 1 ) :
        if arr [ 2 * i + 1 ] > arr [ i ] :
            return False
        if 2 * i + 2 < n and arr [ 2 * i + 2 ] > arr [ i ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1336
---> probID: geeksforgeeks_3196_A
---> inputs:

---> outputs:
Yes


def GFG ( arr , i , n ) :
    if i > ( n - 2 ) // 2 :
        return True
    if arr [ i ] >= arr [ 2 * i + 1 ] and arr [ i ] >= arr [ 2 * i + 2 ] and isHeap ( arr , 2 * i + 1 , n ) and isHeap ( arr , 2 * i + 2 , n ) :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1337
---> probID: codeforces_851_B
---> inputs:
0 1 1 1 1 0
---> outputs:
Yes

def main ( ) :
    import sys
    import os
    import subprocess
    import io
    import sys
    try :
        ax = int ( sys . stdin . readline ( ) )
        ay = int ( sys . stdin . readline ( ) )
        bx = int ( sys . stdin . readline ( ) )
        by = int ( sys . stdin . readline ( ) )
        cx = int ( sys . stdin . readline ( ) )
        cy = int ( sys . stdin . readline ( ) )
        print ( ( ( bx - ax ) * ( cy - ay ) == ( cx - ax ) * ( by - ay ) ) or ( ( ax - bx ) * ( ax - bx ) + ( ay - by ) * ( ay - by ) != ( cx - bx ) * ( cx - bx ) + ( cy - by ) * ( cy - by ) ) )
    except :
        print ( "No - %s" % sys . argv [ 0 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1338
---> probID: geeksforgeeks_1515_A
---> inputs:

---> outputs:
2


def find_min_del ( arr , n ) :
    min_num = sys . maxsize
    for i in range ( n ) :
        min_num = min ( arr [ i ] , min_num )
    cnt = 0
    for i in range ( n ) :
        if arr [ i ] == min_num :
            cnt += 1
    return n - cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1339
---> probID: geeksforgeeks_563_A
---> inputs:

---> outputs:
1
INF
1


def count ( x , y ) :
    ans = 0
    m = { }
    while x % y != 0 :
        x = x % y
        ans += 1
        if x in m :
            return - 1
        m [ x ] = 1
        x = x * 10
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 77%|███████▋  | 1339/1746 [00:31<00:09, 43.10it/s]

-------------------------------------


---> lineNum: 1340
---> probID: geeksforgeeks_2307_A
---> inputs:

---> outputs:
Yes


def is_possible_to_make_divisible ( arr , n ) :
    import sys
    remainder = 0
    for i in range ( n ) :
        remainder = ( remainder + arr [ i ] ) % 3
    return ( remainder == 0 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552997263_1806/main.py", line 29
    return Main ( )
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 1341
---> probID: atcoder_AGC004_D
---> inputs:
3 1
2 3 1
---> outputs:
2

def main ( args ) :
    import sys
    class Main ( sys . stdin ) :
        def __init__ ( self ) :
            self . N , self . K = None , None
            self . ans = 0
            self . vec = [ [ 0 ] ] * N
            for i in range ( self . N ) :
                self . vec [ i ] = [ 0 ]
            for i in range ( self . N ) :
                a = self . N - 1
                if i != 0 :
                    self . vec [ a ] . append ( i )
                else :
                    if a != 0 :
                        self . ans += 1
            self . dfs ( 0 , 0 )
            print ( self . ans )
        def dfs ( v , pre ) :
            self . hight = 0
            for j in self . vec [ v ] :
                self . hight = max ( self . hight , self . dfs ( j , v ) )
            if pre != 0 and self . hight == self . K - 1 :
                self . hight = 0
                self . ans += 1
            else :
                self . hight += 1
            return self . hight
return Main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1342
---> probID: geeksforgeeks_269_A
---> inputs:

---> outputs:
Perfect cubes in given range: 
1 8 27 64 

def print_cubes ( a , b ) :
    for i in range ( a , b + 1 ) :
        for j in range ( 1 , j ** 2 + 1 ) :
            if j ** 2 == i :
                print ( j ** 2 , end = '  ' )
                break


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1343
---> probID: geeksforgeeks_2053_A
---> inputs:

---> outputs:
6 moduo 4 is 2


def GFG ( n , d ) :
    return ( n & ( d - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1344
---> probID: codeforces_940_A
---> inputs:
3 1
2 1 4
---> outputs:
1

def pre598 ( args ) :
    import sys
    import string
    import string
    import list
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import os
    import sys
    try :
        import readline
    except :
        pass
    else :
        import math
    try :
        data = string . strip ( )
    except :
        pass
    else :
        data = None
    return data


---> console_out:
 
DIDN'T MATCH!! :(
 77%|███████▋  | 1344/1746 [00:31<00:09, 43.03it/s]

-------------------------------------


---> lineNum: 1345
---> probID: codeforces_725_B
---> inputs:
1f
---> outputs:
1

def code_force ( ) :
    import sys
    import math
    import security
    import text
    import util
    import string
    import util
    class code_force ( None ) :
        def __init__ ( self ) :
            pass
        def encode ( self ) :
            return self . encode ( )
        def decode ( self ) :
            return self . encode ( )
        def encode ( self ) :
            return self . encode ( )
        def decode ( self ) :
            return self . decode ( )
        def encode ( self ) :
            return self . encode ( )
        def decode ( self ) :
            return self . decode ( )
        def encode ( self ) :
            return self . encode ( )
        def decode ( self ) :
            return self . decode ( )
        def encode ( self ) :
            return self . encode ( )
        def decode ( self ) :
            return self . decode ( )
        def encode ( self ) :
            return self . encode ( )
        def decode ( self ) :
            return self . decode ( )
        def encode ( self ) :
            return self . encode ( )
        def decode ( self ) :
            return self . decode ( )
        def encode ( self ) :
            return self . encode ( )
        def decode ( self ) :
            return self . decode ( )
        def encode ( self ) :
            return self . encode ( )
        def decode ( self ) :
            return self . decode ( )
        def encode ( self ) :
            return self . encode ( )
        def decode ( self ) :
            return self . decode ( )
        def encode ( self ) :
            return self . encode ( )
        def decode ( self ) :
            return self . decode ( )
        def encode ( self ) :
            return self . encode ( )
        def decode ( self ) :
            return self . decode ( )
        def encode ( self ) :
            return self . encode ( )
        def decode ( self ) :
            return self . decode ( )
        def encode ( self ) :
            return self . encode ( )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1346
---> probID: geeksforgeeks_1256_A
---> inputs:

---> outputs:
Yes
Yes
No


def is_perturb_cube ( x ) :
    cr = int ( math . cbrt ( x ) )
    return ( cr * cr * cr == x )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1347
---> probID: atcoder_AGC006_A
---> inputs:
3
abc
cde
---> outputs:
5

def main ( args ) :
    import string
    sc = string . split ( args )
    n = int ( sc )
    s = sc [ 0 ]
    t = sc [ 1 ]
    sc . close ( )
    result = 2 * n
    for i in range ( n ) :
        foot = t [ : n - i ]
        if s . endswith ( foot ) :
            result -= len ( foot )
            break
    print ( result )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1348
---> probID: geeksforgeeks_3900_A
---> inputs:

---> outputs:
Following is Depth First Traversal (starting from vertex 2)
2 0 1 3 

def DFS ( v ) :
    import sys
    import copy
    import copy
    adj = [ list ( ) ]
    def Graph ( v ) :
        V = v
        adj = [ [ ] ]
        for i in range ( v ) :
            adj [ i ] . append ( w )
    def addEdge ( v , w ) :
        adj [ v ] . append ( w )
    def DFSUtil ( v , visited ) :
        visited [ v ] = True
        print ( v , end = ' ' )
        for ( n , v ) in adj [ v ] :
            if not visited [ n ] :
                DFSUtil ( n , visited )
    def DFS ( v ) :
        visited = [ False ]
        DFSUtil ( v , visited )
    def main ( args ) :
        g = copy . deepcopy ( 4 )
        g . addEdge ( 0 , 1 )
        g . addEdge ( 0 , 2 )
        g . addEdge ( 1 , 2 )
        g . addEdge ( 2 , 0 )
        g . addEdge ( 2 , 3 )
        g . addEdge ( 3 , 3 )
        print ( 'Following is Depth First Traversal (starting from vertex 2)' )
        g . DFS ( 2 )
    return { 'V' : v }


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1349
---> probID: geeksforgeeks_2332_A
---> inputs:

---> outputs:
0 1 2 2 0 3 0 1 0 0 

def count_digits ( val , arr ) :
    while int ( val ) > 0 :
        digit = int ( val ) % 10
        arr [ int ( digit ) ] += 1
        val = int ( val ) // 10
    return


---> console_out:
 
DIDN'T MATCH!! :(
 77%|███████▋  | 1349/1746 [00:31<00:09, 42.62it/s]  File "./junk/1692552997477_9116/main.py", line 118
    string = string
    ^
IndentationError: unexpected indent


-------------------------------------


---> lineNum: 1350
---> probID: codeforces_108_B
---> inputs:
3
64 16 32
---> outputs:
NO

def encode ( a ) :
    import os
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import os
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import integer
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    try :
        string
            string = string
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1351
---> probID: codeforces_23_B
---> inputs:
1
3
---> outputs:
1

def main ( ) :
    import sys
    try :
        t = sys . stdin . read ( )
        for i in range ( t ) :
            n = sys . stdin . read ( )
            print ( max_left ( n ) )
    except :
        pass
    return n - 2 if n > 2 else 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1352
---> probID: codeforces_469_A
---> inputs:
4
3 1 2 3
2 2 4
---> outputs:
I become the guy.

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    hs = set ( )
    a = sys . stdin . readline ( ) . strip ( )
    for i in range ( a ) :
        hs . add ( sys . stdin . readline ( ) . strip ( ) )
    b = sys . stdin . readline ( ) . strip ( )
    for i in range ( b ) :
        hs . add ( sys . stdin . readline ( ) . strip ( ) )
    if len ( hs ) == n :
        print ( 'I become the guy.' )
    else :
        print ( 'Oh, my keyboard!' , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1353
---> probID: geeksforgeeks_4977_A
---> inputs:

---> outputs:
2


def linear_check ( ar , arr ) :
    import numpy as np
    m , n = 6 , 4
    def linear_check ( ar , arr ) :
        for i in range ( m ) :
            matched = True
            for j in range ( n ) :
                if ar [ i ] [ j ] != arr [ j ] :
                    matched = False
                    break
            if matched :
                return i + 1
        return - 1
    mat = np . array ( [ [ 0 , 0 , 1 , 0 ] , [ 10 , 9 , 22 , 23 ] , [ 40 , 40 , 40 , 40 ] , [ 43 , 44 , 55 , 68 ] , [ 81 , 73 , 100 , 132 ] , [ 100 , 75 , 125 , 133 ] ] )
    row = [ 10 , 9 , 22 , 23 ]
    print ( linear_check ( mat , row ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1354
---> probID: codeforces_1538_B
---> inputs:
5
4
4 5 2 5
2
0 4
5
10 8 5 1 4
1
10000
7
1 1 1 1 1 1 1
---> outputs:
2
1
-1
0
0

def main ( ) :
    import sys
    t = sys . maxsize
    while t > 0 :
        n = sys . maxsize
        a = [ ]
        sum , count = 0 , 0
        for i in range ( n ) :
            a . append ( sys . stdin . read ( n ) )
            sum += a [ i ]
        if sum % n == 0 :
            div = sum // n
            for i in range ( n ) :
                if a [ i ] > div :
                    count += 1
            print ( count )
        else :
            print ( - 1 )
        t -= 1


---> console_out:
 
DIDN'T MATCH!! :(
 78%|███████▊  | 1354/1746 [00:31<00:09, 42.69it/s]

-------------------------------------


---> lineNum: 1355
---> probID: atcoder_ABC076_D
---> inputs:
1
100
30
---> outputs:
2100.000000000000000

def main ( ) :
    import sys
    main = sys . modules [ 'main' ]
    main . solve_d ( )
    def solve_d ( ) :
        with open ( '/tmp/' , 'r' ) as f :
            N = len ( f . read ( ) )
        t = [ 0 ] * N
        sum_t = 0
        for i in range ( N ) :
            t [ i ] = f . read ( ) * 2
            sum_t += t [ i ]
        v = [ 0 ] * N
        for i in range ( N ) :
            v [ i ] = f . read ( ) * 2
        tmp_v = 0
        tmp_t = 0
        max_v = [ 0 ] * sum_t + 1
        for i in range ( N ) :
            max_v [ tmp_t ] = v [ i ] if v [ i ] < tmp_v else tmp_v
            tmp_v = max_v [ tmp_t ]
            for t_ind in range ( t [ i ] ) :
                max_v [ ++ tmp_t ] = v [ i ] if v [ i ] < tmp_v + 1 else tmp_v + 1
                tmp_v = max_v [ tmp_t ]
        tmp_v = 0
        for i in range ( N - 1 , - 1 , - 1 ) :
            max_v [ tmp_t ] = v [ i ] if v [ i ] < tmp_v else tmp_v
            tmp_v = max_v [ tmp_t ]
            for t_ind in range ( t [ i ] ) :
                back_v = v [ i ] if v [ i ] < tmp_v + 1 else tmp_v + 1
                del max_v [ tmp_t ]
                max_v [ tmp_t ] = max_v [ tmp_t ] if max_v [ tmp_t ] < back_v else back_v
                tmp_v = max_v [ tmp_t ]
        answer = 0
        for i in range ( sum_t ) :
            answer += ( max_v [ i ] + max_v [ i + 1 ] )
        print ( answer * 0.125 )
    return solve_d


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1356
---> probID: geeksforgeeks_5016_A
---> inputs:

---> outputs:
46


def nth_term ( n ) :
    import math
    def nth_term ( n ) :
        return 2 * int ( math . pow ( n , 2 ) ) + 4 * n - 2
    def main ( arr ) :
        N = 4
        print ( nth_term ( N ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1357
---> probID: geeksforgeeks_5023_A
---> inputs:

---> outputs:
91


def nth_term ( n ) :
    import math
    return 7 * int ( math . pow ( n , 2 ) ) - 7 * n + 7


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1358
---> probID: geeksforgeeks_3741_A
---> inputs:

---> outputs:
60


def nth_term ( n ) :
    import math
    return 5 * int ( math . pow ( n , 2 ) ) - 5 * n


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1359
---> probID: geeksforgeeks_5019_A
---> inputs:

---> outputs:
26.0


def nth_term ( n ) :
    import math
    def nth_term ( n ) :
        return int ( math . pow ( n , 2 ) ) + 2 * n + 2
    def main ( arr ) :
        N = 4
        print ( nth_term ( N ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(
 78%|███████▊  | 1359/1746 [00:32<00:09, 42.84it/s]

-------------------------------------


---> lineNum: 1360
---> probID: geeksforgeeks_5022_A
---> inputs:

---> outputs:
63


def nth_term ( n ) :
    import math
    return 2 * int ( math . pow ( n , 3 ) ) + int ( math . pow ( n , 2 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1361
---> probID: geeksforgeeks_5020_A
---> inputs:

---> outputs:
27


def nth_term ( n ) :
    import math
    def nth_term ( n ) :
        return 2 * int ( math . pow ( n , 2 ) ) - n - 1
    def main ( arr ) :
        N = 4
        print ( nth_term ( N ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1362
---> probID: geeksforgeeks_5021_A
---> inputs:

---> outputs:
10.0


def nth_term ( n ) :
    import math
    def nth_term ( n ) :
        return int ( math . pow ( n , 2 ) ) - 2 * n + 2
    def main ( arr ) :
        N = 4
        print ( nth_term ( N ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1363
---> probID: geeksforgeeks_3742_A
---> inputs:

---> outputs:
50


def nth_term ( n ) :
    import math
    def nth_term ( n ) :
        return 3 * int ( math . pow ( n , 2 ) ) + n - 2
    def main ( arr ) :
        N = 4
        print ( nth_term ( N ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1364
---> probID: codeforces_336_A
---> inputs:
10 5
---> outputs:
0 15 15 0

def shashwat ( args ) :
    import math
    n1 = math . pi
    n2 = math . pi
    x = abs ( n1 ) + abs ( n2 )
    if n1 >= 0 and n2 >= 0 :
        print ( '%d %d %d %d' % ( 0 , x , x , 0 ) )
    elif n1 < 0 and n2 >= 0 :
        print ( '-%d %d %d %d' % ( x , 0 , 0 , 0 , x ) )
    elif n1 < 0 and n2 < 0 :
        print ( '-%d %d %d %d -%d' % ( x , 0 , 0 , 0 , x ) )
    else :
        print ( '%d -%d %d %d %d' % ( 0 , x , x , 0 , 0 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 78%|███████▊  | 1364/1746 [00:32<00:08, 43.07it/s]

-------------------------------------


---> lineNum: 1365
---> probID: atcoder_ABC097_C
---> inputs:
aba
4
---> outputs:
b

def main ( args ) :
    import sys
    try :
        s = sys . stdin . read ( )
        K = int ( sys . argv [ 1 ] )
    except :
        print ( "Error: %s" % sys . exc_info ( ) [ 0 ] )
        return 1
    subs = set ( )
    for i in range ( len ( s ) ) :
        index = i
        for j in range ( K ) :
            if index + 1 + j <= len ( s ) :
                subs . add ( s [ index : index + 1 + j ] )
    subs2 = list ( subs )
    subs2 . sort ( )
    print ( subs2 [ K - 1 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1366
---> probID: leetcode_509_A
---> inputs:

---> outputs:
1

def main ( ) :
    import sys
    class Solution ( object ) :
        def __init__ ( self ) :
            self . memo = [ 0 , 1 ]
        def fib ( self , N ) :
            if N < len ( self . memo ) :
                return self . memo [ N ]
            for i in range ( len ( self . memo ) , N + 1 ) :
                self . memo [ i - 1 ] = self . memo [ i - 2 ]
            return self . memo [ N ]
        def fib ( self , N ) :
            self . memo [ N ] = 0
        def fib ( self , N ) :
            self . memo [ N ] = 1
            return self . memo [ N ]
        def fib ( self , N ) :
            self . memo [ N ] = 0
            return self . memo [ N ]
        def fib ( self , N ) :
            self . memo [ N ] = 1
            return self . memo [ N ]
        def fib ( self , N ) :
            self . memo [ N ] = 0
            return self . memo [ N ]
        def fib ( self , N ) :
            self . memo [ N ] = 1
            return self . memo [ N ]
        def fib ( self , N ) :
            self . memo [ N ] = 0
            return self . memo [ N ]
        def fib ( self , N ) :
            self . memo [ N ] = 0
            return self . memo [ N ]
        def fib ( self , N ) :
            self . memo [ N ] = 0
            return self . memo [ N ]
        def fib ( self , N ) :
            self . memo [ N ] = 1
            return self . memo [ N ]
        def fib ( self , N ) :
            self . memo [ N ] = 0
            return self . memo [ N ]
        def fib ( self , N ) :
            self . memo [ N ] = 0
            return self . memo [ N ]
        def fib ( self , N ) :
            self . memo [ N ] = 1
            return self . memo [ N ]
    

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552997871_4386/main.py", line 122
    from string
              ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1367
---> probID: codeforces_1617_A
---> inputs:
7
abacaba
abc
cccba
acb
dbsic
bac
abracadabra
abc
dddddddddddd
cba
bbc
abc
ac
abc
---> outputs:
aaaacbb
abccc
bcdis
aaaaacbbdrr
dddddddddddd
bbc
ac

def main ( ) :
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    from string
    import string
    import string
    if string is None :
        return string
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1368
---> probID: geeksforgeeks_4351_A
---> inputs:

---> outputs:
0.642701


def cos_x_serities_sum ( x , n ) :
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    math
    import math
    import math
    import math
    import math
    math
    import math
    import math
    math
    import math
    import math
    math
    import math
    math
    import math
    math
    import math
    math
    import math
    math
    import math
    math
    math = math


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1369
---> probID: geeksforgeeks_4019_A
---> inputs:

---> outputs:
Yes: 3 , 4
No


def GFG ( N , S ) :
    i = ( ( float ( N ) * float ( N + 1 ) ) / 4 ) - ( ( float ( S + 1 ) / 2 ) )
    return i


---> console_out:
 
DIDN'T MATCH!! :(
 78%|███████▊  | 1369/1746 [00:32<00:08, 42.82it/s]

-------------------------------------


---> lineNum: 1370
---> probID: geeksforgeeks_4592_A
---> inputs:

---> outputs:
No


def multiple_of_three ( K , dig0 , dig1 ) :
    import sys
    sum = 0
    temp = ( dig0 + dig1 ) % 10
    sum = dig0 + dig1
    if K == 2 :
        if sum % 3 == 0 :
            return True
        else :
            return False
    sum += temp
    numberof_groups = ( K - 3 ) // 4
    remnumberof_digits = ( K - 3 ) % 4
    sum += ( numberof_groups * 20 )
    for i in range ( remnumberof_digits ) :
        temp = ( 2 * temp ) % 10
        sum += temp
    if sum % 3 == 0 :
        return True
    else :
        return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1371
---> probID: codeforces_892_A
---> inputs:
2
3 5
3 6
---> outputs:
YES

def code_chef ( ) :
    import sys
    try :
        n = sys . stdin . tell ( )
        a = [ ]
        b = [ ]
        sum = 0
        for i in range ( n ) :
            a . append ( sys . stdin . read ( ) )
            sum += a [ i ]
        for i in range ( n ) :
            b . append ( sys . stdin . read ( ) )
        b . sort ( )
        ans = b [ n - 1 ] + b [ n - 2 ]
        if sum <= ans :
            print ( 'YES' )
        else :
            print ( 'NO' )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1372
---> probID: geeksforgeeks_3106_A
---> inputs:

---> outputs:
2


def count_occ ( s ) :
    cnt = 0
    for i in range ( len ( s ) - 3 ) :
        c , l , a , p = 0 , 0 , 0 , 0 , 0
        for j in range ( i , i + 4 ) :
            if s [ j ] == 'c' :
                c += 1
            elif s [ j ] == 'l' :
                l += 1
            elif s [ j ] == 'a' :
                a += 1
            elif s [ j ] == 'p' :
                p += 1
        if c == 1 and l == 1 and a == 1 and p == 1 :
            cnt += 1
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1373
---> probID: geeksforgeeks_1422_A
---> inputs:

---> outputs:
13


def count_steps ( x , y ) :
    import sys
    if x % y == 0 :
        return x // y
    return x // y + count_steps ( y , x % y )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1374
---> probID: geeksforgeeks_2347_A
---> inputs:

---> outputs:
Yes


def GFG ( x ) :
    sr = math . sqrt ( x )
    return ( ( sr - math . floor ( sr ) ) == 0 )


---> console_out:
 
DIDN'T MATCH!! :(
 79%|███████▊  | 1374/1746 [00:32<00:08, 42.72it/s]

-------------------------------------


---> lineNum: 1375
---> probID: geeksforgeeks_806_A
---> inputs:

---> outputs:
3.14159265


def area_inscribed ( P , B , H ) :
    import math
    PI = 3.14159265
    return ( ( P + B - H ) * ( P + B - H ) * ( PI / 4 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1376
---> probID: aizu_p00424_A
---> inputs:
3	
A a	
0 5	
5 4	
10	
A	
B	
C	
0	
1	
4	
5	
a	
b	
A
3	
A a	
0 5	
5 4	
10	
A	
B	
C	
0	
1	
4	
5	
a	
b	
A
0
---> outputs:
aBC5144aba
aBC5144aba

def main ( ) :
    import sys
    try :
        res = sys . stdin . read ( 256 )
    except AttributeError :
        res = sys . stdin . read ( 256 )
    while res :
        N = res . find ( ' ' )
        if N == - 1 :
            break
        replaces = [ res [ 0 ] ] * 256
        for i in range ( N ) :
            replaces [ i ] = res [ i + 1 ]
        M = res [ : M ]
        for i in range ( M ) :
            c = res [ i + 1 ]
            res [ i + 1 ] = replaces [ c ] if c in replaces else c
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1377
---> probID: geeksforgeeks_5274_A
---> inputs:

---> outputs:
1


def get_count ( v , n ) :
    import numpy as np
    v . sort ( )
    cnt = 0
    for i in range ( n ) :
        tmp = n - 1 - get_count ( v , n , v [ i ] - 1 )
        if tmp == v [ i ] :
            cnt += 1
    return cnt


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1378
---> probID: geeksforgeeks_3987_A
---> inputs:

---> outputs:
15


def trailing_zeros ( N ) :
    count_of_two , count_of_five = 0 , 0
    for i in range ( 1 , N + 1 ) :
        val = i
        while val % 2 == 0 and val > 0 :
            val //= 2
            count_of_two += i
        while val % 5 == 0 and val > 0 :
            val //= 5
            count_of_five += i
    ans = min ( count_of_two , count_of_five )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1379
---> probID: geeksforgeeks_3424_A
---> inputs:

---> outputs:
No


def gf_int ( n ) :
    res = 0
    d = 1
    while n > 0 :
        if n % 10 != 0 :
            res += ( n % 10 ) * d
            d *= 10
        n //= 10
    return res
    def is_equal ( a , b ) :
        if remove_zero ( a ) + remove_zero ( b ) == remove_zero ( a + b ) :
            return True
        return False
    def main ( ) :
        a , b = 105 , 106
        if is_equal ( a , b ) == True :
            print ( "Yes" )
        else :
            print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(
 79%|███████▉  | 1379/1746 [00:32<00:08, 42.36it/s]

-------------------------------------


---> lineNum: 1380
---> probID: aizu_p00304_A
---> inputs:
12
A
E
E
E
R?
E?
E?
E
E
E
E?
E
1 2
1 3
1 4
2 5
4 6
4 7
5 8
5 9
7 10
7 11
11 12
---> outputs:
11

def main ( args ) :
    import sys
    import os
    import os
    import math
    import random
    import math
    import os
    import sys
    import math
    import os
    import math
    import os
    import math
    import os
    import math
    import os
    import math
    import os
    import math
    import os
    import math
    import os
    import math
    import os
    import math
    import math
    import os
    import math
    import os
    import math
    import os
    import sys
    import os
    import sys
    import os
    import math
    from math import pi
    import math
    from math import cos
    import math
    from math import pi
    import math
    from math import pi
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    import math
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552998205_2577/main.py", line 13
    def asd ( self . arr ) :
                   ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1381
---> probID: codeforces_769_A
---> inputs:
3
2014 2016 2015
---> outputs:
2015

def main ( ) :
    import sys
    import locale
    import string
    class Main ( object ) :
        def __init__ ( self ) :
            self . scn = sys . stdin . read ( )
            self . size = len ( self . scn )
            self . arr = [ ]
            for i in range ( self . size ) :
                self . arr . append ( self . scn . read ( ) )
            print ( self . asd ( self . arr ) )
        def asd ( self . arr ) :
            self . arr . sort ( )
            return self . arr [ len ( self . arr ) // 2 ]
    return Main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1382
---> probID: codeforces_581_A
---> inputs:
3 1
---> outputs:
1 1

def main ( ) :
    import sys
    try :
        a , b = int ( sys . stdin . read ( ) ) , int ( sys . stdin . read ( ) )
        count = 0
        while True :
            if a > 0 and b > 0 :
                count += 1
                a -= 1
                b -= 1
            else :
                break
        ans = a // 2 + b // 2
        print ( count , ans )
    except :
        print ( 'No good input found' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1383
---> probID: codeforces_306_A
---> inputs:
12 3
---> outputs:
4 4 4

def main ( ) :
    import sys
    import csv
    import csv
    import math
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import csv
    import sys
    def readline ( ) :
        return None
    try :
        return sys . stdin . readline ( )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1384
---> probID: geeksforgeeks_4137_A
---> inputs:

---> outputs:
17


def total_pairs ( s1 , s2 ) :
    count = 0
    arr1 = [ 0 ] * 7
    arr2 = [ 0 ] * 7
    for c in s1 :
        set_bits = len ( ord ( c ) )
        arr1 [ set_bits ] += 1
    for c in s2 :
        set_bits = len ( ord ( c ) )
        arr2 [ set_bits ] += 1
    for i in range ( 1 , 6 + 1 ) :
        count += ( arr1 [ i ] * arr2 [ i ] )
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 79%|███████▉  | 1384/1746 [00:32<00:08, 42.16it/s]

-------------------------------------


---> lineNum: 1385
---> probID: geeksforgeeks_532_A
---> inputs:

---> outputs:
3


def count_sub_seq ( i , sum , cnt , a , n ) :
    if i == n :
        if sum == 0 and cnt > 0 :
            return 1
        else :
            return 0
    ans = 0
    ans += count_sub_seq ( i + 1 , sum , cnt , a , n )
    ans += count_sub_seq ( i + 1 , sum + a [ i ] , cnt + 1 , a , n )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1386
---> probID: codeforces_746_B
---> inputs:
5
logva
---> outputs:
volga

def Decoding ( ) :
    import string
    try :
        n = len ( sys . stdin )
        s = [ ]
        newS = [ ]
        input = sys . stdin . read ( n )
        s = list ( input )
        mid = ( n - 1 ) // 2
        counter = 0
        for i in range ( n ) :
            temp = i + 1
            if n % 2 == 0 :
                newS . append ( s [ i ] )
            else :
                newS . append ( s [ i ] )
            if counter >= 0 :
                counter = counter - temp
            else :
                counter = counter + temp
        print ( '' . join ( newS ) )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1387
---> probID: aizu_p00379_A
---> inputs:
16 2 1000
---> outputs:
2

def main ( ) :
    import math
    import numpy as np
    a = np . random . randint ( 1 , 4 )
    n = np . random . randint ( 1 , 4 )
    m = np . random . randint ( 1 , 4 )
    count = 0
    for i in range ( 1 , np . power ( i + a , n ) + 1 ) :
        x = int ( np . power ( i + a , n ) )
        y = get_count ( x )
        if y == i :
            count += 1
    print ( count )
    def get_count ( x ) :
        count = 0
        while x > 0 :
            count += x % 10
            x //= 10
        return count
    return np . array ( [ get_count ( x ) for x in range ( 1 , len ( x ) + 1 ) ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1388
---> probID: geeksforgeeks_1529_A
---> inputs:

---> outputs:
Index of the element is :  8


def pivoted_binary_search ( arr , n , key ) :
    pivot = find_pivot ( arr , 0 , n - 1 )
    if pivot == - 1 :
        return binary_search ( arr , 0 , n - 1 , key )
    if arr [ pivot ] == key :
        return pivot
    if arr [ 0 ] <= key :
        return binary_search ( arr , 0 , pivot - 1 , key )
    return binary_search ( arr , pivot + 1 , n - 1 , key )
def find_pivot ( arr , low , high ) :
    if high < low :
        return - 1
    if high == low :
        return low
    mid = ( low + high ) // 2
    if mid < high and arr [ mid ] > arr [ mid + 1 ] :
        return mid
    if mid > low and arr [ mid ] < arr [ mid - 1 ] :
        return ( mid - 1 )
    if arr [ low ] >= arr [ mid ] :
        return find_pivot ( arr , low , mid - 1 )
    return find_pivot ( arr , mid + 1 , high )
def binary_search ( arr , low , high , key ) :
    if high < low :
        return - 1
    mid = ( low + high ) // 2
    if key == arr [ mid ] :
        return mid
    if key > arr [ mid ] :
        return binary_search ( arr , ( mid + 1 ) , high , key )
    return binary_search ( arr , low , ( mid - 1 ) , key )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1389
---> probID: codeforces_568_B
---> inputs:
1
---> outputs:
1

def hoc_python ( ) :
    import sys
    n , mod = 1000000007 , 1000000007
    n = int ( n )
    res = 0
    c = np . zeros ( ( 4050 , 4050 ) )
    dp = np . zeros ( 4050 )
    for i in range ( 1 , n + 1 ) :
        c [ i ] [ 0 ] = 1
        for j in range ( 1 , i ) :
            c [ i ] [ j ] = ( c [ i - 1 ] [ j - 1 ] + c [ i - 1 ] [ j ] ) % mod
        c [ i ] [ i ] = 1
    dp [ 0 ] = 1
    dp [ 1 ] = 1
    for i in range ( 2 , n ) :
        for j in range ( i ) :
            dp [ i ] = ( dp [ i ] + dp [ j ] * c [ i - 1 ] [ j ] ) % mod
    for i in range ( n ) :
        g = dp [ i ] * c [ n ] [ i ] % mod
        res = ( res + g ) % mod
    print ( res )


---> console_out:
 
DIDN'T MATCH!! :(
 80%|███████▉  | 1389/1746 [00:32<00:08, 41.95it/s]

-------------------------------------


---> lineNum: 1390
---> probID: codeforces_843_A
---> inputs:
6
3 2 1 6 5 4
---> outputs:
4
2 1 3
1 2
2 4 6
1 5

def main ( ) :
    import sys
    import numpy as np
    import numpy . random
    import os
    import sys
    class A843 ( np . array ) :
        def __init__ ( self ) :
            np . random . seed ( 0 )
            N = len ( sys . stdin . readline ( ) . strip ( ) )
            P = [ ( n , i ) for n in range ( N ) ]
            P . sort ( key = lambda x : x [ 1 ] )
            output = [ ]
            self . lineCount = 0
            self . used = [ False ] * N
            for n in range ( N ) :
                if not self . used [ n ] :
                    self . lineCount += 1
                    count = 0
                    pos = n
                    line = [ ]
                    while not self . used [ pos ] :
                        count += 1
                        self . used [ pos ] = True
                        line . append ( ' ' + str ( pos + 1 ) )
                        pos = self . P [ pos ] [ 0 ]
                output . append ( '%d%s\n' % ( count , line ) )
    print ( linecount )
    sys . stdout . write ( '' . join ( output ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1391
---> probID: aizu_p00141_A
---> inputs:
2
5
6
---> outputs:
#####
#   #
# # #
# # #
# ###

######
#    #
# ## #
# #  #
# #  #
# ####

def main ( ) :
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import os
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import os
    if sys . version_info [ 0 ] < 3 :
        import string
    else :
        import sys
    if sys . version_info [ 0 ] < 3 :
        import string
    else :
        import string
    if sys . version_info [ 0 ] < 3 :
        import string
    else :
        import string
    if sys . version_info [ 0 ] < 3 :
        import string
    else :
        import string
    if sys . version_info [ 0 ] < 3 :
        import string
    else :
        import string
    return string


---> console_out:
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1392
---> probID: projecteuler_p090_A
---> inputs:

---> outputs:
1217

def p090 ( ) :
    print ( eval ( 'p090' ) )
    count = 0
    for i in range ( ( 1 << 10 ) ) :
        for j in range ( i , ( 1 << 10 ) ) :
            if len ( bin ( i ) ) == 6 and len ( bin ( j ) ) == 6 and is_order_valid ( i , j ) :
                count += 1
    return str ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1393
---> probID: aizu_p02237_A
---> inputs:
4
1 2 2 4
2 1 4
3 0
4 1 3
---> outputs:
0 1 0 1
0 0 0 1
0 0 0 0
0 0 1 0

def load_adj_list ( ) :
    import sys
    import os
    import sys
    class Graph ( object ) :
        def __init__ ( self ) :
            self . total_vertex = 0
            self . adj_list = [ ]
            for i in range ( self . total_vertex ) :
                tmp = [ ]
                idx1 = sys . stdin . readline ( ) . strip ( )
                degree = sys . stdin . readline ( ) . strip ( )
                for j in range ( degree ) :
                    idx2 = sys . stdin . readline ( ) . strip ( )
                    tmp . append ( idx2 )
                self . adj_list . append ( tmp )
    def print_adj_list ( self ) :
        self . adj_matrix = [ [ ] for i in range ( self . total_vertex ) ]
        for i in range ( self . adj_list ) :
            vertexes = self . adj_list [ i ]
            for j in range ( self . total_vertex ) :
                if j in vertexes :
                    self . adj_matrix [ i ] [ j ] = 1
                    print ( '1' , end = ' ' )
                else :
                    self . adj_matrix [ i ] [ j ] = 0
                    print ( '0' , end = ' ' )
                if j != self . total_vertex - 1 :
                    print ( ' ' , end = ' ' )
            print ( )
    class Main ( object ) :
        def __init__ ( self ) :
            self . total_vertex = 0
            self . adj_list = [ ]
        def load_adj_list ( self ) :
            self . total_vertex = 0
            self . adj_list = [ ]
        def load_adj_list ( self ) :
            self . total_vertex = 0
            self . adj_list = [ ]
            for i in range ( self . total_vertex ) :
                self . adj_list . append ( self . adj_list [ i ] )
            return self . adj_list
    return Main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1394
---> probID: codeforces_549_A
---> inputs:
4 4
xxxx
xfax
xcex
xxxx
---> outputs:
1

def main1 ( ) :
    import string
    import numpy as np
    import math
    n = int ( math . floor ( math . pi / 100 ) )
    m = int ( math . floor ( math . pi / 100 ) )
    pic = np . zeros ( ( n , m ) )
    for i in range ( n ) :
        temp = math . pi / 100
        for j in range ( m ) :
            pic [ i ] [ j ] = temp [ j ]
    inc , inc1 = 0 , 0
    come_in = np . zeros ( 4 )
    if n > 1 or m > 1 :
        for x in range ( n - 1 ) :
            for y in range ( m - 1 ) :
                for i in range ( x , 2 + x ) :
                    for j in range ( y , 2 + y ) :
                        if pic [ i ] [ j ] == 'f' and come_in [ 0 ] == False :
                            inc += 1
                            come_in [ 0 ] = True
                        elif pic [ i ] [ j ] == 'a' and come_in [ 1 ] == False :
                            inc += 1
                            come_in [ 1 ] = True
                        elif pic [ i ] [ j ] == 'c' and come_in [ 2 ] == False :
                            inc += 1
                            come_in [ 2 ] = True
                        elif pic [ i ] [ j ] == 'e' and come_in [ 3 ] == False :
                            inc += 1
                            come_in [ 3 ] = True
            if inc == 4 :
                inc1 += 1
            inc = 0
            np . fill ( come_in , False )
    print ( inc1 )


---> console_out:
 
DIDN'T MATCH!! :(
 80%|███████▉  | 1394/1746 [00:32<00:08, 42.03it/s]

-------------------------------------


---> lineNum: 1395
---> probID: codeforces_343_B
---> inputs:
-++-
---> outputs:
Yes

def main ( ) :
    import sys
    f = open ( '/etc/init.d/' )
    inp = f . read ( ) . strip ( ) . split ( ' ' )
    stk = [ ]
    for c in inp :
        if not stk :
            stk . append ( c )
            continue
        top = stk [ - 1 ]
        if top == c :
            stk . pop ( )
        else :
            stk . append ( c )
    if not stk :
        print ( 'Yes' )
    else :
        print ( 'No' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1396
---> probID: aizu_p02378_A
---> inputs:
3 4 6
0 0
0 2
0 3
1 1
2 1
2 3
---> outputs:
3

def main ( ) :
    import sys
    import numpy as np
    import os
    import os
    import sys
    class Main ( object ) :
        def __init__ ( self ) :
            self . X , self . Y , self . E = sys . stdin . read ( ) . strip ( ) . split ( ' ' )
            self . x , self . y = np . array ( self . x ) , np . array ( self . y )
            self . g = [ [ ] ]
            self . vis = [ False ]
            self . match_to = [ False ] * ( self . X + self . Y )
            self . match_to . append ( - 1 )
        def dfs ( v ) :
            if v < 0 :
                return True
            for u in self . g [ v ] :
                if self . vis [ u ] :
                    continue
                self . vis [ u ] = True
                if self . dfs ( v ) :
                    self . match_to [ u ] = v
                    self . match_to [ v ] = u
                    return True
            return False
    return Main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1397
---> probID: geeksforgeeks_35_A
---> inputs:

---> outputs:
1


def count_mountains ( a , n ) :
    import sys
    import math
    A = np . zeros ( ( n + 2 , n + 2 ) )
    count = 0
    for i in range ( n + 2 ) :
        for j in range ( n + 2 ) :
            if ( i == 0 or j == 0 or i == n + 1 or j == n + 1 ) :
                A [ i ] [ j ] = int ( a [ i - 1 ] [ j - 1 ] )
            else :
                A [ i ] [ j ] = a [ i - 1 ] [ j - 1 ]
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , n + 1 ) :
            if ( A [ i ] [ j ] > A [ i - 1 ] [ j ] and A [ i ] [ j ] > A [ i + 1 ] [ j ] and A [ i ] [ j ] > A [ i ] [ j - 1 ] and A [ i ] [ j ] > A [ i ] [ j + 1 ] and A [ i ] [ j ] > A [ i - 1 ] [ j - 1 ] and A [ i ] [ j ] > A [ i + 1 ] [ j + 1 ] and A [ i ] [ j ] > A [ i - 1 ] [ j + 1 ] and A [ i ] [ j ] > A [ i - 1 ] [ j + 1 ] and A [ i ] [ j ] > A [ i + 1 ] [ j - 1 ] ) :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1398
---> probID: geeksforgeeks_100_A
---> inputs:

---> outputs:
2


def GFG ( ) :
    N = 100005
    d , pre = [ 0 ] * N , [ 0 ] * N
    def Positive_Divisors ( ) :
        for i in range ( 1 , N ) :
            for j in range ( 1 , i + 1 ) :
                if i % j == 0 :
                    if j * j == i :
                        d [ i ] += 1
                    else :
                        d [ i ] += 2
        ans = 0
        for i in range ( 2 , N ) :
            if d [ i ] == d [ i - 1 ] :
                ans += 1
            pre [ i ] = ans
    def main ( ) :
        Positive_Divisors ( )
        n = 15
        print ( pre [ n ] )
    return main


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552998635_4461/main.py", line 28
    elif s [ j ] == 'erase' :
    ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1399
---> probID: codeforces_7_B
---> inputs:
6 10
alloc 5
alloc 3
erase 1
alloc 6
defragment
alloc 6
---> outputs:
1
2
NULL
3

def main ( ) :
    import sys
    s = sys . stdin
    t = len ( s )
    m = len ( s )
    memory = [ 0 ] * m
    alloc_idx = 0
    for j in range ( t ) :
        if s [ j ] == 'alloc' :
            n = s [ j ]
            data = 0
            can_alloc = False
            for i in range ( m ) :
                if not data :
                    data += 1
                else :
                    data = 0
                if data == n :
                    can_alloc = True
                    data = i - n + 1
            if can_alloc :
                alloc_idx += 1
                for i in range ( data , data + n ) :
                    memory [ i ] = alloc_idx
            print ( alloc_idx )
        else :
            print ( 'NULL' )
    elif s [ j ] == 'erase' :
        x = s [ j ]
        if x <= 0 :
            print ( 'ILLEGAL_ERASE_ARGUMENT' )
        has_erasesed = False
        for i in range ( m ) :
            if memory [ i ] == x :
                memory [ i ] = 0
                has_erasesed = True
        if not has_erasesed :
            print ( 'ILLEGAL_ERASE_ARGUMENT' )
    elif s [ j ] == 'defragment' :
        d = 0
        for i in range ( m ) :
            if not data :
                d += 1
            else :
                memory [ i - d ] = data
        for i in range ( m - d , m ) :
            memory [ i ] = 0
    else :
        print ( 'h' )


---> console_out:
 
DIDN'T MATCH!! :(
 80%|████████  | 1399/1746 [00:33<00:08, 41.97it/s]

-------------------------------------


---> lineNum: 1400
---> probID: geeksforgeeks_3685_A
---> inputs:

---> outputs:
129.904


def area_of_regular_polygon ( n , len_ ) :
    import math
    P = ( len_ * n )
    A = len_ / ( 2 * math . tan ( ( 180 / n ) * math . pi / 180 ) )
    area = ( P * A ) / 2
    return area


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1401
---> probID: geeksforgeeks_4158_A
---> inputs:

---> outputs:
r


def GFG ( data , n ) :
    global freq
    freq = [ 0 ] * MAX
    for c in data [ n : ] :
        freq [ ord ( c ) ] += 1
    for ch in data [ n - 1 : - 1 ] :
        if freq [ ch ] == 1 :
            return ( '%d' % ch )
    return '-1'


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1402
---> probID: codeforces_242_B
---> inputs:
3
1 1
2 2
3 3
---> outputs:
-1

def main ( ) :
    import sys
    import os
    import sys
    import math
    import math
    n = len ( sys . argv )
    a , b = [ 0 ] * n , [ 0 ] * n
    left , right = math . inf , math . inf
    for i in range ( n ) :
        a [ i ] = math . floor ( math . log ( a [ i ] , 2 ) )
        b [ i ] = math . floor ( math . log ( b [ i ] , 2 ) )
        left = min ( a [ i ] , left )
        right = max ( b [ i ] , right )
    ans = - 1
    for i in range ( n ) :
        if a [ i ] == left and b [ i ] == right :
            ans = i + 1
            break
    sys . stdout . write ( str ( ans ) )
    sys . stdout . flush ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1403
---> probID: geeksforgeeks_1954_A
---> inputs:

---> outputs:
f(x) = 1.6178


def GFG ( x ) : return ( 1 / ( 1 + x ) )
def BooleRule ( a , b ) :
    n = 4
    global h
    h = int ( ( b - a ) / n )
    sum = 0
    bl = ( 7 * y ( a ) + 32 * y ( a + h ) + 12 * y ( a + 2 * h ) + 32 * y ( a + 3 * h ) + 7 * y ( a + 4 * h ) ) * 2 * h / 45
    sum = sum + bl
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1404
---> probID: geeksforgeeks_995_A
---> inputs:

---> outputs:
3.0


def GFG ( arr , i , curr , n , m ) :
    import sys
    if i == n :
        if curr == m :
            return 0
        else :
            return - 1
    if v [ i ] [ curr ] :
        return dp [ i ] [ curr ]
    v [ i ] [ curr ] = True
    l = find_len ( arr , i + 1 , curr , n , m )
    r = find_len ( arr , i + 1 , curr & arr [ i ] , n , m )
    dp [ i ] [ curr ] = l
    if r != - 1 :
        dp [ i ] [ curr ] = max ( dp [ i ] [ curr ] , r + 1 )
    return dp [ i ] [ curr ]


---> console_out:
 
DIDN'T MATCH!! :(
 80%|████████  | 1404/1746 [00:33<00:08, 42.49it/s]

-------------------------------------


---> lineNum: 1405
---> probID: geeksforgeeks_3309_A
---> inputs:

---> outputs:
3.0


def GFG ( arr , i , curr , n , m ) :
    if i == n :
        if curr == m :
            return 0
        else :
            return - 1
    if v [ i ] [ curr ] :
        return dp [ i ] [ curr ]
    v [ i ] [ curr ] = True
    l = find_len ( arr , i + 1 , curr , n , m )
    r = find_len ( arr , i + 1 , curr | arr [ i ] , n , m )
    dp [ i ] [ curr ] = l
    if r != - 1 :
        dp [ i ] [ curr ] = max ( dp [ i ] [ curr ] , r + 1 )
    return dp [ i ] [ curr ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1406
---> probID: aizu_p00235_A
---> inputs:
7
1 2 5
2 3 2
3 4 3
2 5 3
5 6 3
5 7 8
0
---> outputs:
12

def main ( ) :
    import sys
    for _ in range ( sys . maxsize ) :
        n = sys . maxsize
        if n == 0 :
            return 0
        cost = np . zeros ( ( n + 1 , n + 1 ) )
        ans = 0
        for i in range ( n - 1 ) :
            a = np . random . randint ( 0 , n - 1 )
            b = np . random . randint ( 0 , n - 1 )
            c = np . random . randint ( 0 , n - 1 )
            cost [ a ] [ b ] = cost [ b ] [ a ] = c
            ans += cost [ a ] [ b ] * 2
        for i in range ( 1 , n + 1 ) :
            reaf = 0
            ii , jj = 0 , 0
            for j in range ( 1 , n + 1 ) :
                if cost [ i ] [ j ] > 0 or cost [ i ] [ j ] == - 1 :
                    reaf += 1
                    ii = i
                    jj = j
            if i != 1 and reaf == 1 :
                ans -= cost [ ii ] [ jj ] * 2
                cost [ ii ] [ jj ] = cost [ jj ] [ ii ] = - 1
        print ( ans - max ( 1 ) )
    def max ( m ) :
        cut = 0
        for i in range ( 2 , n + 1 ) :
            if cost [ m ] [ i ] > 0 :
                cost [ i ] [ m ] = 0
                cut = max ( cut , cost [ m ] [ i ] + max ( i ) )
        return cut


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1407
---> probID: atcoder_ABC114_C
---> inputs:
575
---> outputs:
4

def main ( ) :
    import string
    import math
    S = string . strip ( S )
    N = int ( S )
    ans = 0
    for i in range ( 3 , len ( S ) - 1 + 1 ) :
        ans += int ( math . pow ( 3 , i ) ) - 3 * int ( math . pow ( 2 , i ) ) + 3
    ans += math . pow ( 3 , int ( S [ - 1 ] ) ) , S [ - 2 ]
    ans += math . pow ( 5 , int ( S [ - 1 ] ) ) , S [ - 2 ]
    ans += math . pow ( 7 , int ( S [ - 1 ] ) ) , S [ - 2 ]
    print ( ans )
    def f ( a , m ) :
        if m >= 0 :
            return math . pow ( a + 3 * int ( math . pow ( 10 , m ) ) , m - 1 ) + math . pow ( a + 5 * int ( math . pow ( 10 , m ) ) , m - 1 ) + math . pow ( a + 7 * int ( math . pow ( 10 , m ) ) , m - 1 )
        else :
            s = str ( a )
            if s . find ( '3' ) != - 1 and s . find ( '5' ) != - 1 and s . find ( '7' ) != - 1 and a <= N :
                return 1
            else :
                return 0
    return math . pow ( 3 , int ( S [ - 1 ] ) ) + math . pow ( 5 , int ( S [ - 1 ] ) ) + math . pow ( 7 , int ( S [ - 1 ] ) ) + math . pow ( 7 , int ( S [ - 1 ] ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1408
---> probID: geeksforgeeks_748_A
---> inputs:

---> outputs:
20


def min_diff ( arr , n , k ) :
    result = sys . maxsize
    arr . sort ( )
    for i in range ( 0 , n - k + 1 ) :
        result = min ( result , arr [ i + k - 1 ] - arr [ i ] )
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1409
---> probID: aizu_p00033_A
---> inputs:
2
3 1 4 2 5 6 7 8 9 10
10 9 8 7 6 5 4 3 2 1
---> outputs:
YES
NO

def main ( ) :
    import sys
    import string
    t = [ ]
    def solve ( ) :
        n = len ( sys . stdin )
        while n > 0 :
            n -= 1
            for i in range ( 10 ) :
                t . append ( sys . stdin . read ( n ) )
            print ( solve ( ) )
    def solve ( ) :
        L , R = 0 , 0
        for i in range ( 10 ) :
            if L < t [ i ] :
                L = t [ i ]
            elif R < t [ i ] :
                R = t [ i ]
            else :
                return 'NO'
        return 'YES'
    return solve


---> console_out:
 
DIDN'T MATCH!! :(
 81%|████████  | 1409/1746 [00:33<00:07, 42.23it/s]

-------------------------------------


---> lineNum: 1410
---> probID: codeforces_1455_B
---> inputs:
5
1
2
3
4
5
---> outputs:
1
3
2
3
4

def problem1455b ( ) :
    import sys
    t = sys . maxsize
    while t > 0 :
        x = sys . maxsize
        val = 0
        turn = 0
        while val < x :
            val += turn + 1
            turn += 1
        if val == x :
            print ( turn )
        elif val == x + 1 :
            print ( turn + 1 )
        else :
            print ( turn )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1411
---> probID: geeksforgeeks_5131_A
---> inputs:

---> outputs:
2.6666666666666665


def Mean ( arr , n ) :
    import math
    sum = 0
    for i in range ( n ) :
        sum = sum + arr [ i ]
    return sum / n
    def MeanAbsDevtion ( arr , n ) :
        absSum = 0
        for i in range ( n ) :
            absSum = absSum + abs ( arr [ i ] - Mean ( arr , n ) )
        return absSum / n
    def main ( ) :
        arr = [ 10 , 15 , 15 , 17 , 18 , 21 ]
        n = len ( arr )
        print ( MeanAbsDevtion ( arr , n ) )
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1412
---> probID: projecteuler_p204_A
---> inputs:

---> outputs:
2944730

def p204 ( ) :
    print ( int ( count ( 0 , 1 ) ) )
    LIMIT = math . pow ( 10 , 9 )
    primes = math . list_primes ( 100 )
    def count ( prime_index , product ) :
        if prime_index == len ( primes ) :
            return 1 if product <= LIMIT else 0
        else :
            count = 0
            while product <= LIMIT :
                count += count ( prime_index + 1 , product )
                product *= primes [ prime_index ]
            return count
    return '' . join ( str ( x ) for x in range ( 100 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1413
---> probID: geeksforgeeks_880_A
---> inputs:

---> outputs:
The output is 23


def maximum_XOR ( n , l , r ) :
    import math
    x = 0
    for i in range ( int ( math . log ( r ) / math . log ( 2 ) ) , - 1 , - 1 ) :
        if ( n & ( 1 << i ) ) > 0 :
            if ( x > r or ( x + ( 1 << i ) - 1 < l ) ) :
                x ^= ( 1 << i )
        else :
            if ( x ^ ( 1 << i ) ) <= r :
                x ^= ( 1 << i )
    return n ^ x


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1414
---> probID: geeksforgeeks_1338_A
---> inputs:

---> outputs:
30


def max_primefactor_num ( N ) :
    import numpy as np
    arr = np . zeros ( N + 5 )
    for i in range ( 3 , N + 1 , 2 ) :
        if not arr [ i ] :
            for j in range ( i * i , N + 1 , i ) :
                arr [ j ] = True
    prime = np . zeros ( N + 5 )
    prime [ 2 ] = True
    for i in range ( 3 , N + 1 , 2 ) :
        if not arr [ i ] :
            prime [ 2 ] = True
    i , ans = 0 , 1
    while ans * prime [ i ] <= N and i < len ( prime ) :
        ans *= prime [ i ]
        i += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 81%|████████  | 1414/1746 [00:33<00:07, 42.53it/s]

-------------------------------------


---> lineNum: 1415
---> probID: geeksforgeeks_217_A
---> inputs:

---> outputs:
2


def count_trailing_zeros ( n ) :
    import string
    import string
    import io
    class GFG ( object ) :
        def count_trailing_zeros ( n ) :
            bit = string . ascii_lowercase [ n ]
            bit1 = list ( bit )
            bit1 = bit1 . reverse ( )
            zero = 0
            for i in range ( 64 ) :
                if bit1 [ i ] == '0' :
                    zero += 1
                else :
                    break
            return zero
        def main ( ) :
            n = 4
            ans = count_trailing_zeros ( n )
            print ( ans )
    return GFG ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1416
---> probID: codeforces_599_A
---> inputs:
10 20 30
---> outputs:
60

def input ( number_one , number_two , number_three ) :
    import sys
    class Shopping ( ) :
        def input ( number_one , number_two , number_three ) :
            one = number_one + number_two + number_three
            two = 2 * ( number_one + number_two )
            three = 2 * ( number_one + number_three )
            four = 2 * ( number_two + number_three )
            print ( min ( min ( one , two ) , min ( three , four ) ) )
    def main ( a ) :
        input ( a )
        instance = Shopping ( )
        num_one = input ( )
        num_two = input ( )
        num_three = input ( )
        instance . input ( num_one , num_two , num_three )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1417
---> probID: codeforces_1686_B
---> inputs:
5
3
1 2 3
4
4 3 2 1
2
1 2
2
2 1
6
4 5 6 1 2 3
---> outputs:
0
2
0
1
1

def main ( ) :
    import sys
    import string
    import random
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import sys
    import os
    import sys
    import subprocess
    import string
    import string
    import string
    import string
    import string
    import sys
    import os
    import sys
    try :
        os . environ [ 'wsgi.input' ] = string
    except :
        pass
    else :
        try :
            os . environ [ 'wsgi.input' ] = string
        except :
            pass
        else :
            pass
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1418
---> probID: geeksforgeeks_632_A
---> inputs:

---> outputs:
7


def distinctSubString ( P , Q , K , N ) :
    S = set ( )
    for i in range ( N ) :
        sum = 0
        s = ""
        for j in range ( i , N ) :
            pos = ord ( P [ j ] ) - ord ( 'a' )
            sum += ord ( Q [ pos ] ) - ord ( '0' )
            s += P [ j ]
            if sum <= K :
                S . add ( s )
            else :
                break
    return len ( S )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1419
---> probID: geeksforgeeks_5241_A
---> inputs:

---> outputs:
1356524


def make_even ( string ) :
    data = list ( string )
    n = len ( data )
    even , index = None , None
    for i in range ( n - 1 ) :
        if ( data [ i ] - '0' ) % 2 == 0 :
            even = ord ( data [ i ] )
            index = i
        if even <= ord ( data [ n - 1 ] ) - ord ( '0' ) :
            break
    if even == 0 :
        return data
    swap ( data , index , n - 1 )
    return data


---> console_out:
 
DIDN'T MATCH!! :(
 81%|████████▏ | 1419/1746 [00:33<00:07, 42.46it/s]

-------------------------------------


---> lineNum: 1420
---> probID: geeksforgeeks_1304_A
---> inputs:

---> outputs:
1 2 2 3 2 4 2 4 3 4 

def GFG ( n ) :
    div = [ 0 ] * ( n + 1 )
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , n + 1 ) :
            div [ i * j ] += 1
    for i in range ( 1 , n + 1 ) :
        print ( div [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1421
---> probID: codeforces_608_B
---> inputs:
01
00111
---> outputs:
3

def ProB ( ) :
    import string
    class ProB ( string ) :
        def __init__ ( self ) :
            self . a , self . b = 0 , 0
            self . ans = 0
            self . ss = string . strip ( self . ss )
            self . aa = self . aa
            self . a = len ( self . ss )
            self . ss = self . ss . strip ( self . ss )
            self . bb = self . bb
            self . b = len ( self . ss )
            for i in range ( 1 , self . b + 1 ) :
                self . mm [ i ] = self . mm [ i - 1 ] + self . bb [ i - 1 ] - '0'
    for i in range ( a ) :
        if self . aa [ i ] == '0' :
            self . ans += int ( self . mm [ b - a + i + 1 ] ) - self . mm [ i ]
        else :
            self . ans += int ( self . b - a + 1 ) - ( self . mm [ b - a + i + 1 ] - self . mm [ i ] )
    print ( self . ans )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552999176_3883/main.py", line 9
    for i in range ( MAX_CHAR ) :
                                ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1422
---> probID: geeksforgeeks_2847_A
---> inputs:

---> outputs:
for

def GFG ( data ) :
    import string
    import sys
    MAX_CHAR = 256
    def printDistinct ( data ) :
        n = len ( data )
        count = [ 0 ] * MAX_CHAR
        index = [ [ n ] * MAX_CHAR
        for i in range ( MAX_CHAR ) :
            count [ i ] = 0
            index [ i ] = n
        for x in data :
            count [ x ] += 1
            if count [ x ] == 1 and x != 'SPACETOKEN' :
                index [ x ] = i
            if count [ x ] == 2 :
                index [ x ] = n
        index . sort ( )
        for i in range ( MAX_CHAR , len ( index ) ) :
            sys . stdout . write ( data [ index [ i ] ] )
    def printDistinct ( data ) :
        data = 'GeeksforGeeks'
        printDistinct ( data )
    return data


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1423
---> probID: geeksforgeeks_2040_A
---> inputs:

---> outputs:
2


def GFG ( x , k , m ) :
    result = x
    k -= 1
    while k > 0 :
        result = int ( math . pow ( result , x ) )
        if result > m :
            result %= m
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1424
---> probID: geeksforgeeks_2083_A
---> inputs:

---> outputs:
17


def converthenumber ( n ) :
    import string
    import sys
    import os
    import sys
    import math
    import os
    import sys
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(
 82%|████████▏ | 1424/1746 [00:33<00:07, 42.29it/s]

-------------------------------------


---> lineNum: 1425
---> probID: codeforces_1536_B
---> inputs:
3
28
qaabzwsxedcrfvtgbyhnujmiklop
13
cleanairactbd
10
aannttoonn
---> outputs:
ac
f
b

def main ( ) :
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import os
    import sys
    from math import pi
    from math import log as pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1426
---> probID: codeforces_1642_B
---> inputs:
2
3
1 1 2
6
5 1 2 2 2 4
---> outputs:
2 2 3 
4 4 4 4 5 6

def main ( ) :
    import sys
    import os
    import subprocess
    import sys
    import subprocess
    import sys
    import subprocess
    import sys
    class Main ( object ) :
        def __init__ ( self ) :
            self . stdout = sys . stdout
            self . stderr = sys . stderr
            self . stdout = None
            self . pos = self . pos + 1
            self . pos = self . pos + 1
            self . pos = self . pos + 2
            self . pos = self . pos + 3
            self . pos = self . pos + 4
            self . pos = self . pos + 4
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos + 6
            self . pos = self . pos


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1427
---> probID: geeksforgeeks_448_A
---> inputs:

---> outputs:
30


def GFG ( n , an ) : return ( n * ( 1 + an ) ) / 2
def trace ( n , m ) :
    an = 1 + ( n - 1 ) * ( m + 1 )
    rowmajorsum = sn ( n , an )
    an = 1 + ( n - 1 ) * ( n + 1 )
    colmajorsum = sn ( n , an )
    return rowmajorsum + colmajorsum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1428
---> probID: aizu_p00581_A
---> inputs:
3 4
JOIJ
JIOO
IIII
---> outputs:
3

def main ( ) :
    import string
    try :
        h , w = int ( sys . stdin . read ( ) ) , int ( sys . stdin . read ( ) )
    except ValueError :
        pass
    field = [ ]
    orbs = [ [ 0 ] * ( h + 1 ) * ( w + 1 ) ]
    ingots = [ [ 0 ] * ( h + 1 ) * ( w + 1 ) ]
    for i in range ( h ) :
        field [ i ] = string . ascii_lowercase + field [ i ]
        for j in range ( w - 1 , - 1 , - 1 ) :
            orbs [ i ] [ j ] = orbs [ i ] [ j + 1 ]
            if field [ i ] [ j ] == 'O' :
                orbs [ i ] [ j ] += 1
    for j in range ( w ) :
        for i in range ( h - 1 , - 1 , - 1 ) :
            ingots [ i ] [ j ] = ingots [ i + 1 ] [ j ]
            if field [ i ] [ j ] == 'I' :
                ingots [ i ] [ j ] += 1
    total = 0
    for i in range ( h ) :
        for j in range ( w ) :
            if field [ i ] [ j ] == 'J' :
                total += orbs [ i ] [ j ] * ingots [ i ] [ j ]
    print ( total )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1429
---> probID: geeksforgeeks_6_A
---> inputs:

---> outputs:
3


def count_divisors ( n , k ) :
    import math
    count , i = 0 , 0
    for i in range ( 1 , math . sqrt ( n ) ) :
        if n % i == 0 :
            if i % k == 0 :
                count += 1
            if ( n // i ) % k == 0 :
                count += 1
    if ( i * i == n ) and ( i % k == 0 ) :
        count -= 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 82%|████████▏ | 1429/1746 [00:33<00:07, 42.12it/s]

-------------------------------------


---> lineNum: 1430
---> probID: geeksforgeeks_5_A
---> inputs:

---> outputs:
3


def count_divisors ( n , k ) :
    import sys
    count , i = 0 , 0
    for i in range ( 1 , n + 1 ) :
        if n % i == 0 and i % k == 0 :
            count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1431
---> probID: geeksforgeeks_4728_A
---> inputs:

---> outputs:
3


def GFG ( x , y , p ) :
    res = 1
    x = x % p
    while y > 0 :
        if y % 2 == 1 :
            res = ( res * x ) % p
        y = y >> 1
        x = ( x * x ) % p
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1432
---> probID: codeforces_1248_A
---> inputs:
3
3
1 3 2
2
0 3
1
1
1
1
1
2
1
1
---> outputs:
3
1
0

def integer_points ( ) :
    import sys
    try :
        t = int ( sys . stdin . readline ( ) )
    except ValueError :
        t = 0
    out = [ ]
    for i in range ( t ) :
        n = int ( sys . stdin . readline ( ) )
        p2 = 0
        for j in range ( n ) :
            p2 += ( sys . stdin . readline ( ) % 2 + 1 ) % 2
        m = int ( sys . stdin . readline ( ) )
        q2 = 0
        for j in range ( m ) :
            q2 += ( sys . stdin . readline ( ) % 2 + 1 ) % 2
        out . append ( int ( p2 ) * q2 + int ( n - p2 ) * ( m - q2 ) )
    for i in range ( t ) :
        print ( out [ i ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1433
---> probID: geeksforgeeks_1511_A
---> inputs:

---> outputs:
12


def find_max_diff ( arr , n ) :
    import sys
    if n < 2 :
        print ( "Invalid " )
        return 0
    min_val , max_val = sys . maxsize , sys . maxsize
    for i in range ( n ) :
        if ( arr [ i ] - i ) > max_val :
            max_val = arr [ i ] - i
        if ( arr [ i ] - i ) < min_val :
            min_val = arr [ i ] - i
    return ( max_val - min_val )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1434
---> probID: codeforces_1150_B
---> inputs:
3
#.#
...
#.#
---> outputs:
YES

def B1150 ( ) :
    import string
    f = open ( 'B1150.txt' )
    n = int ( f . readline ( ) )
    arr = [ [ '%d' % k for k in line . split ( ) ] for line in f . readlines ( ) ]
    print ( solve ( arr , n ) )
    def solve ( arr , n ) :
        for i in range ( n ) :
            for k in range ( n ) :
                if arr [ i ] [ k ] == '.' :
                    if i + 2 < n and k + 1 < n and k - 1 >= 0 :
                        if arr [ i ] [ k ] == '.' and arr [ i + 1 ] [ k ] == '.' and arr [ i + 1 ] [ k - 1 ] == '.' and arr [ i + 1 ] [ k + 1 ] == '.' and arr [ i + 2 ] [ k ] == '.' :
                            arr [ i ] [ k ] = '#'
                            arr [ i + 1 ] [ k ] = '#'
                            arr [ i + 1 ] [ k - 1 ] = '#'
                            arr [ i + 1 ] [ k + 1 ] = '#'
                            arr [ i + 2 ] [ k ] = '#'
                        else :
                            return 'NO'
                else :
                    return 'NO'
        return 'YES'
    return solve ( arr , n )


---> console_out:
 
DIDN'T MATCH!! :(
 82%|████████▏ | 1434/1746 [00:33<00:07, 40.77it/s]

-------------------------------------


---> lineNum: 1435
---> probID: geeksforgeeks_458_A
---> inputs:

---> outputs:
6


def number_of_paths ( m , n ) :
    count = np . zeros ( ( m , n ) )
    for i in range ( m ) :
        count [ i ] [ 0 ] = 1
    for j in range ( n ) :
        count [ 0 ] [ j ] = 1
    for i in range ( 1 , m ) :
        for j in range ( 1 , n ) :
            count [ i ] [ j ] = count [ i - 1 ] [ j ] + count [ i ] [ j - 1 ]
    return count [ m - 1 ] [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1436
---> probID: codeforces_1686_A
---> inputs:
4
3
42 42 42
5
1 2 3 4 5
4
4 3 2 1
3
24 2 22
---> outputs:
YES
YES
NO
NO

def main ( ) :
    import sys
    import random
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        n = int ( sys . stdin . readline ( ) )
    a = [ ]
    sum = 0
    for i in range ( n ) :
        a . append ( random . randint ( 0 , n ) )
        sum += a [ i ]
    if sum % n != 0 :
        print ( 'NO' )
    else :
        sum //= n
        flag = False
        for i in range ( n ) :
            if a [ i ] == sum :
                flag = True
                break
        if flag :
            print ( 'YES' )
        else :
            print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1437
---> probID: geeksforgeeks_4525_A
---> inputs:

---> outputs:
Yes


def GFG ( n , k ) :
    if ( n >> ( k - 1 ) ) == 1 :
        return True
    return False
def setKthBit ( n , k ) :
    return ( ( 1 << ( k - 1 ) ) | n )
def allBitsAreSet ( n ) :
    if ( ( n + 1 ) & n ) == 0 :
        return True
    return False
def bitsAreInAltOrder ( n ) :
    num = n ^ ( n >> 1 )
    return allBitsAreSet ( num )
def bitsAreInAltPatrnInGivenRange ( n , l , r ) :
    if isKthBitSet ( n , r ) :
        num = n
        left_shift = r
    else :
        num = setKthBit ( n , ( r + 1 ) )
        left_shift = r + 1
    num = num & ( ( 1 << left_shift ) - 1 )
    num = num >> ( l - 1 )
    return bitsAreInAltOrder ( num )
def main ( ) :
    n = 18
    l = 1 , 3
    if bitsAreInAltPatrnInGivenRange ( n , l , r ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1438
---> probID: geeksforgeeks_843_A
---> inputs:

---> outputs:
57600


def GFG ( n ) :
    import math
    import numpy as np
    import numpy as np
    class GFG ( np . ndarray ) :
        def factorial ( n ) :
            if n <= 1 :
                return 1
            return n * np . factorial ( n - 1 )
        def nCr ( n , r ) :
            return math . factorial ( n ) / ( math . factorial ( n - r ) ** 2 )
        def NumberOfWays ( n , x , y ) :
            return np . nCr ( 2 * n - x - y , n - x ) * math . factorial ( n ) ** 2
        def main ( ) :
            n , x , y = 5 , 4 , 2
            print ( NumberOfWays ( n , x , y ) )
    return GFG ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1439
---> probID: geeksforgeeks_2825_A
---> inputs:

---> outputs:
gee


def common_prefix_util ( str1 , str2 ) :
    import string
    result = ""
    n1 , n2 = len ( str1 ) , len ( str2 )
    for i , j in enumerate ( [ 0 , n1 - 1 , n2 - 1 ] ) :
        if str1 [ i ] != str2 [ j ] :
            break
        result += str1 [ i ]
    return ( result )


---> console_out:
 
DIDN'T MATCH!! :(
 82%|████████▏ | 1439/1746 [00:33<00:07, 41.15it/s]

-------------------------------------


---> lineNum: 1440
---> probID: atcoder_AGC012_A
---> inputs:
2
5 2 8 5 1 5
---> outputs:
10

def main ( ) :
    import sys
    import numpy as np
    import numpy . testing . ufuncs as ufuncs
    N = len ( sys . argv )
    a = np . zeros ( N * 3 )
    for i in range ( N * 3 ) :
        a [ i ] = ufuncs [ i ]
    a . sort ( )
    sum = 0
    for i in range ( N , 3 * N , 2 ) :
        sum += a [ i ]
    print ( sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1441
---> probID: atcoder_ABC065_B
---> inputs:
3
3
1
2
---> outputs:
2

def main ( ) :
    import sys
    try :
        N = int ( sys . stdin . read ( ) )
    except ValueError :
        N = 0
    a = [ ]
    for i in range ( 1 , N + 1 ) :
        a . append ( sys . stdin . read ( ) )
    sys . stdin . close ( )
    count = 0
    valid = True
    current = 1
    while valid :
        count += 1
        current = a [ current ]
        if current == 2 :
            valid = False
        if count == N :
            count = 0
            valid = False
    if count == 0 :
        print ( - 1 )
    else :
        print ( count )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1442
---> probID: projecteuler_p301_A
---> inputs:

---> outputs:
2178309

def p301 ( ) :
    print ( eval ( 'p301()' ) )
    def run ( ) :
        a = 0
        b = 1
        for i in range ( 32 ) :
            c = a + b
            a = b
            b = c
        return str ( a )
    return run


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1443
---> probID: geeksforgeeks_3216_A
---> inputs:

---> outputs:
Element 1 occurs 3 times
Element 2 occurs 1 times
Element 3 occurs 2 times
Element 5 occurs 2 times
Element 8 occurs 3 times
Element 9 occurs 2 times
Element 10 occurs 1 times


def find_frequency_util ( arr , low , high , freq ) :
    import numpy as np
    if arr [ low ] == arr [ high ] :
        freq [ arr [ low ] ] += high - low + 1
    else :
        mid = ( low + high ) // 2
        find_frequency_util ( arr , low , mid , freq )
        find_frequency_util ( arr , mid + 1 , high , freq )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692552999713_6132/main.py", line 124
    
                                                                                                                                                                                                                                                                                                                                                                                                                                              ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1444
---> probID: projecteuler_p070_A
---> inputs:

---> outputs:
8319823

def p070 ( ) :
    import math
    print ( math . pow ( 10 , 7 ) )
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    math
    import math
    import math
    import math
    import math
    import math
    import math
    math
    import math
    import math
    import math
    if math is None :
        return math . factorial ( )
    return math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( math . factorial ( ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 83%|████████▎ | 1444/1746 [00:34<00:07, 41.18it/s]

-------------------------------------


---> lineNum: 1445
---> probID: geeksforgeeks_1762_A
---> inputs:

---> outputs:
3 3 5 

def intersection ( a , b , n , m ) :
    i , j = 0 , 0
    while i < n and j < m :
        if a [ i ] > b [ j ] :
            j += 1
        elif b [ j ] > a [ i ] :
            i += 1
        else :
            print ( a [ i ] , end = ' ' )
            i += 1
            j += 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1446
---> probID: geeksforgeeks_2929_A
---> inputs:

---> outputs:
3


def find_min ( a , n ) :
    import math
    sum = 0
    for i in range ( n ) :
        sum += math . log ( a [ i ] )
    x = int ( math . exp ( sum / n ) )
    return x + 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1447
---> probID: geeksforgeeks_1092_A
---> inputs:

---> outputs:
44100


def gcd ( a , b ) :
    import math
    if not b :
        return a
    else :
        return math . gcd ( b , a % b )
def lcmOfArray ( arr , n ) :
    if n < 1 :
        return 0
    lcm = arr [ 0 ]
    for i in range ( 1 , n ) :
        lcm = ( lcm * arr [ i ] ) / math . gcd ( lcm , arr [ i ] )
    return lcm
def minPerfectSquare ( arr , n ) :
    global minPerfectSq
    lcm = lcmOfArray ( arr , n )
    minPerfectSq = int ( lcm )
    cnt = 0
    while lcm > 1 and lcm % 2 == 0 :
        cnt += 1
        lcm //= 2
    if cnt % 2 != 0 :
        minPerfectSq *= 2
    i = 3
    while lcm > 1 :
        cnt = 0
        while lcm % i == 0 :
            cnt += 1
            lcm //= i
        if cnt % 2 != 0 :
            minPerfectSq *= i
        i += 2
    return minPerfectSq
def main ( args ) :
    arr = [ 2 , 3 , 4 , 5 , 7 ]
    n = len ( arr )
    print ( minPerfectSquare ( arr , n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1448
---> probID: geeksforgeeks_950_A
---> inputs:

---> outputs:
6


def subarray_count ( arr , n ) :
    result = 0
    fast , slow = 0 , 0
    for i in range ( 1 , n ) :
        if arr [ i ] - arr [ i - 1 ] == 1 :
            fast += 1
        else :
            len_ = fast - slow + 1
            result += len_ * ( len_ - 1 ) / 2
            fast = i
            slow = i
    if fast != slow :
        len_ = fast - slow + 1
        result += len_ * ( len_ - 1 ) / 2
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1449
---> probID: codeforces_1425_A
---> inputs:
2
5
6
---> outputs:
2
4

def main ( arg ) :
    import sys
    class class1 ( object ) :
        def __init__ ( self , * args ) :
            self . input = sys . stdin . read ( )
            self . t = int ( args )
    for t in range ( 0 , len ( arg ) ) :
        n = int ( arg [ t ] )
        ans = 0
        flag = 0
        while n > 0 :
            x = 0
            if n % 2 == 0 :
                temp = n // 2
                if n % 4 == 0 and n > 8 :
                    temp = n - 1
                    x += 1
                n = temp
                if flag == 0 :
                    flag = 1
                    if x > 0 :
                        ans += 1
                    else :
                        ans += temp
                else :
                    flag = 0
            else :
                if flag == 0 :
                    n = n - 1
                    ans += 1
                    flag = 1
                else :
                    n = n - 1
                    flag = 0
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 83%|████████▎ | 1449/1746 [00:34<00:07, 41.86it/s]

-------------------------------------


---> lineNum: 1450
---> probID: aizu_p02402_A
---> inputs:
5
10 1 5 4 17
---> outputs:
1 17 37

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    a = [ ]
    for i in range ( n ) :
        a . append ( sys . stdin . readline ( ) )
    sum , min , max = 0 , - 1000000 , 1000000
    sum = 0
    max = - 1000000
    min = 1000000
    for i in range ( n ) :
        sum += a [ i ]
        if max <= a [ i ] :
            max = a [ i ]
        if min >= a [ i ] :
            min = a [ i ]
    print ( min , max , sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1451
---> probID: geeksforgeeks_1447_A
---> inputs:

---> outputs:
Smallest window containing all distinct characters is: dbca


def find_substr ( data ) :
    import string
    MAX_CHARS = 256
    def find_substr ( x ) :
        n = len ( x )
        dist_count = 0
        visited = [ False ] * MAX_CHARS
        for c in x :
            if visited [ c ] == False :
                visited [ c ] = True
                dist_count += 1
        start , start_index = 0 , - 1
        min_len = sys . maxsize
        count = 0
        curr_count = [ 0 ] * MAX_CHARS
        for c in x :
            curr_count [ c ] += 1
            if curr_count [ c ] == 1 :
                count += 1
            if count == dist_count :
                while curr_count [ start ] > 1 :
                    if curr_count [ start ] > 1 :
                        curr_count [ start ] -= 1
                    start += 1
                len_window = c - start + 1
                if min_len > len_window :
                    min_len = len_window
                    start_index = start
        return '' . join ( curr_count )
    def find_substr ( x ) :
        x = 'aabcbcdbca'
        print ( 'Smallest window containing all distinct'' characters is: %s' % str ( find_substr ( x ) ) )
        return x
    return find_substr ( data )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1452
---> probID: atcoder_ABC074_C
---> inputs:
1 2 10 20 15 200
---> outputs:
110 10

def main ( ) :
    import sys
    try :
        A = float ( sys . stdin . read ( ) )
        B = float ( sys . stdin . read ( ) )
        C = float ( sys . stdin . read ( ) )
        D = float ( sys . stdin . read ( ) )
        E = float ( sys . stdin . read ( ) )
        F = float ( sys . stdin . read ( ) )
        water = 0
        suger = 0
        watmax = 0
        sugmax = 0
        maxnodo = 100 * E / ( 100 + E )
        nodo = 0
        nodomax = 0
        for a in range ( 0 , F // 100 + 1 ) :
            for b in range ( 0 , F // 100 + 1 ) :
                for c in range ( 0 , F // 100 + 1 ) :
                    for d in range ( 0 , F // 100 + 1 ) :
                        water = 100 * a + 100 * b
                        suger = c + d
                        if water == 0 or water + suger > F :
                            break
                        nodo = 100 * suger / ( water + suger )
                        if nodo >= nodomax and nodo <= maxnodo :
                            watmax = water
                            sugmax = suger
                            nodomax = nodo
        print ( int ( watmax ) , int ( sugmax ) , int ( sugmax ) )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1453
---> probID: aizu_p00089_A
---> inputs:
7
3,8
8,1,0
2,7,4,4
4,5,2,6,5
2,7,4,4
8,1,0
3,8
7
---> outputs:
55

def main ( ) :
    import sys
    before = [ ]
    while True :
        if not sys . stdin . isatty ( ) :
            break
        data = sys . stdin . read ( ) . strip ( ) . split ( ',' )
        inner = [ int ( c ) for c in data ]
        if before is None :
            before = inner
        else :
            tmp = [ ]
            for i in range ( len ( before ) ) :
                if i < len ( tmp ) :
                    if tmp [ i ] < before [ i ] + inner [ i ] :
                        tmp . append ( before [ i ] + inner [ i ] )
            if len ( before ) > len ( tmp ) :
                if ( i - 1 ) < len ( tmp ) and ( i - 1 ) >= 0 :
                    if tmp [ i - 1 ] < before [ i ] + inner [ i - 1 ] :
                        tmp [ i - 1 ] = before [ i ] + inner [ i - 1 ]
            else :
                if ( i + 1 ) < len ( tmp ) :
                    if tmp [ i + 1 ] < before [ i ] + inner [ i + 1 ] :
                        tmp [ i + 1 ] = before [ i ] + inner [ i + 1 ]
        before = tmp
    print ( before [ 0 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1454
---> probID: geeksforgeeks_431_A
---> inputs:

---> outputs:
6
6


def count_pairs ( arr , n ) :
    even , odd = 0 , 0
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            even += 1
        else :
            odd += 1
    print ( ( even ) * ( n - 1 ) )
    print ( ( odd ) * ( n - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 83%|████████▎ | 1454/1746 [00:34<00:07, 41.70it/s]  File "./junk/1692552999974_9946/main.py", line 134
    import math
    ^
IndentationError: unexpected indent


-------------------------------------


---> lineNum: 1455
---> probID: codeforces_1613_A
---> inputs:
5
2 1
19 0
10 2
100 1
1999 0
2 3
1 0
1 0
99 0
1 2
---> outputs:
>
=
<
=
<

def A1613 ( ) :
    import math
    import string
    import math
    import math
    import math
    import math
    import sys
    import sys
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import math
    import sys
    import math
    import sys
    import math
    import math
    import sys
    import math
    import sys
    import math
    import sys
    import math
    import math
    import sys
    import math
    import sys
    import math
    import math
    import sys
    import math
    import sys
    import math
    import math
    import sys
    import math
    import math
    import sys
    import math
    import math
    import sys
    import math
    import math
    import sys
    import math
    import math
    import sys
    import math
    import sys
    import math
    import math
    import sys
    import math
    import math
    import sys
    import math
    import math
    import sys
    import math
    import sys
    import math
    import math
    import sys
    import math
    import math
    import math
    import sys
    import math
    import math
    import math
    import sys
    import math
    import math
    import math
    import sys
    import math
    import math
    import math
    import math
    import math
    import sys
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import sys
    if sys . platform == 'darwin' :
        import math
    elif sys . platform == 'linux2' :
        import math
            import math
        if math . isnan ( math . isnan ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( math . fabs ( ) ) ) ) ) )

---> console_out:
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1456
---> probID: codeforces_400_B
---> inputs:
3 4
*G*S
G**S
*G*S
---> outputs:
2

def main ( ) :
    import string
    import sys
    import os
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        m = int ( sys . stdin . readline ( ) )
        arrs = [ ]
        for i in range ( n ) :
            arrs . append ( sys . stdin . readline ( ) )
    except :
        pass
    else :
        arrs = [ ]
    length = [ 0 ] * n
    index = 0
    return_dereference = None
    for tmp in arrs :
        dex_g = tmp . find ( "G" )
        dex_s = tmp . find ( "S" )
        if dex_g > dex_s :
            return_dereference = - 1
        length [ index ] = dex_s - dex_g
        index += 1
        index += 1
        return_dereference = None
    length = set ( )
    for len in length :
        length . add ( len )
    if return_dereference == None :
        print ( return_dereference )
    else :
        print ( len ( length ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1457
---> probID: geeksforgeeks_3974_A
---> inputs:

---> outputs:
Yes


def GFG ( arr , n , x ) :
    front , back = 0 , n - 1
    while front <= back :
        if arr [ front ] == x or arr [ back ] == x :
            return True
        front += 1
        back -= 1
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1458
---> probID: geeksforgeeks_494_A
---> inputs:

---> outputs:
10 3
20 4
5 1


def count_freq ( arr , n ) :
    mp = { }
    for i in range ( n ) :
        mp [ arr [ i ] ] = 1 if mp . get ( arr [ i ] ) is None else mp . get ( arr [ i ] ) + 1
    for i in range ( n ) :
        if mp [ arr [ i ] ] != - 1 :
            print ( arr [ i ] , mp [ arr [ i ] ] )
            mp [ arr [ i ] ] = - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1459
---> probID: geeksforgeeks_3096_A
---> inputs:

---> outputs:
21


def MinCostTree ( arr , n ) :
    ans = 0
    st = [ sys . maxsize ]
    for i in range ( n ) :
        while st [ - 1 ] <= arr [ i ] :
            x = st [ - 1 ]
            st . pop ( - 1 )
            ans += x * min ( st [ - 1 ] , arr [ i ] )
        st . append ( arr [ i ] )
    for i in range ( 2 , len ( st ) ) :
        ans += st [ i ] * st [ i - 1 ]
    return ans


---> console_out:
 
DIDN'T MATCH!! :(
 84%|████████▎ | 1459/1746 [00:34<00:06, 41.97it/s]

-------------------------------------


---> lineNum: 1460
---> probID: codeforces_1015_B
---> inputs:
6
abcdef
abdfec
---> outputs:
4
3 5 4 5

def main ( ) :
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    try :
        string = string . strip ( string )
    except :
        pass
    else :
        return None
    if not string :
        return None
    return string


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1461
---> probID: geeksforgeeks_4615_A
---> inputs:

---> outputs:
x^2 - ( 5 x) + ( 6 ) = 0


def find_equation ( a , b ) :
    sum = ( a + b )
    product = ( a * b )
    print ( "x^2 - (%x) + (%d) = 0" % ( sum , product ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1462
---> probID: geeksforgeeks_2160_A
---> inputs:

---> outputs:
x^2 + ( -4 x) + y^2 + ( 6 y) = 51 .


def circle_equation ( x1 , y1 , r ) :
    import sys
    a = - 2 * x1
    b = - 2 * y1
    c = ( r ** 2 ) - ( x1 ** 2 ) - ( y1 ** 2 )
    print ( "x^2 + (%d x) + " % a , end = "" )
    print ( "y^2 + (%d y) = " % b , end = "" )
    print ( "%d." % c )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1463
---> probID: geeksforgeeks_5130_A
---> inputs:

---> outputs:
{1,  1,  6}
{1,  2,  5}
{1,  7}
{2,  6}


def unique_combination ( l , sum , K , local , A ) :
    if sum == K :
        print ( "{" , end = " " )
        for i in range ( len ( local ) ) :
            if i != 0 :
                print ( " " , end = " " )
            print ( local [ i ] , end = " " )
            if i != len ( local ) - 1 :
                print ( ", " , end = " " )
        print ( "}" )
        return
    for i in range ( l , len ( A ) ) :
        if sum + A [ i ] > K :
            continue
        if i == 1 and A [ i ] == A [ i - 1 ] and i > l :
            continue
        local . append ( A [ i ] )
        unique_combination ( i + 1 , sum + A [ i ] , K , local , A )
        local . pop ( )
    def combination ( A , K ) :
        A . sort ( )
        local = [ ]
        unique_combination ( 0 , 0 , K , local , A )
    def combination ( A , K ) :
        arr = [ 10 , 1 , 2 , 7 , 6 , 1 , 5 ]
        A = np . array ( sorted ( arr ) )
        K = 8
        combination ( A , K )
    return


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1464
---> probID: codeforces_706_B
---> inputs:
5
3 10 8 6 11
4
1
10
3
11
---> outputs:
0
4
1
5

def demo1 ( ) :
    import string
    n = len ( string . ascii_lowercase )
    arr = [ ]
    for i in range ( n ) :
        arr . append ( string . ascii_lowercase [ i ] )
    arr . sort ( )
    q = len ( string . ascii_lowercase )
    for j in range ( q ) :
        x = string . ascii_lowercase [ j ]
        l = 0
        r = n - 1
        m = 0
        while l <= r :
            m = ( l + r ) // 2
            if x >= arr [ m ] :
                l = m + 1
            else :
                r = m - 1
        print ( l )


---> console_out:
 
DIDN'T MATCH!! :(
 84%|████████▍ | 1464/1746 [00:34<00:06, 41.91it/s]  File "./junk/1692553000211_6569/main.py", line 14
    loop :
         ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1465
---> probID: aizu_p00040_A
---> inputs:
1
y eazqyp pnop pngtg ye obmpngt xmybp mr lygw
---> outputs:
i submit that there is another point of view

def main ( ) :
    import sys
    try :
        f = open ( sys . argv [ 1 ] )
    except IOError :
        pass
    else :
        n = int ( f . readline ( ) )
    pattern = re . compile ( 'that|this' )
    while n > 0 :
        n -= 1
        result = f . readline ( )
        a = result
        loop :
            for i in range ( 1 , 26 , i + 2 ) :
                for j in range ( 26 ) :
                    a = rep ( result , i , j )
                    if pattern . search ( a ) :
                        yield a + '\n'
                        break
    sys . stdout . write ( '' . join ( a ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1466
---> probID: geeksforgeeks_506_A
---> inputs:

---> outputs:
Even 

def GFG ( a , b , n ) :
    if not n :
        return True if ( a & 1 ) == 1 else False
    if n == 1 :
        return True if ( b & 1 ) == 1 else False
    if ( a & 1 ) == 0 :
        if ( b & 1 ) == 0 :
            return False
        else :
            return ( n % 3 )
    else :
        if ( b & 1 ) == 0 :
            return ( ( n - 1 ) % 3 )
        else :
            return ( ( n + 1 ) % 3 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1467
---> probID: aizu_p01802_A
---> inputs:
2 1
7 5
7 6
7 7
76 5
8 41
0 0
---> outputs:
0.4142135624
0
0.0827625303
0
48.7401153702
33

def main ( ) :
    import sys
    import math
    for a , b in enumerate ( sys . stdin ) :
        if not a :
            break
        print ( abs ( b - math . hypot ( i , a - i ) ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1468
---> probID: geeksforgeeks_4768_A
---> inputs:

---> outputs:
5


def max_sum ( a , n ) :
    dp = [ 0 ] * n
    if n == 1 :
        dp [ 0 ] = max ( 0 , a [ 0 ] )
    elif n == 2 :
        dp [ 0 ] = max ( 0 , a [ 0 ] )
        dp [ 1 ] = max ( a [ 1 ] , dp [ 0 ] )
    elif n >= 3 :
        dp [ 0 ] = max ( 0 , a [ 0 ] )
        dp [ 1 ] = max ( a [ 1 ] , max ( 0 , a [ 0 ] ) )
        dp [ 2 ] = max ( a [ 2 ] , max ( a [ 1 ] , max ( 0 , a [ 0 ] ) ) )
        i = 3
        while i < n :
            dp [ i ] = max ( dp [ i - 1 ] , a [ i ] + dp [ i - 3 ] )
            i += 1
    return dp [ n - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1469
---> probID: codeforces_49_A
---> inputs:
Is it a melon?
---> outputs:
NO

def main ( ) :
    import string
    import locale
    import os
    question = string . strip ( )
    original_q = question [ : - 1 ] . strip ( )
    ch = original_q [ - 1 : ]
    vowels = ( 'A' , 'E' , 'I' , 'O' , 'U' , 'Y' )
    b = [ e . lower ( ) in ch or e . lower ( ) in ch . lower ( ) for e in vowels ]
    print ( 'YES' if b else 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(
 84%|████████▍ | 1469/1746 [00:34<00:06, 42.39it/s]

-------------------------------------


---> lineNum: 1470
---> probID: geeksforgeeks_3835_A
---> inputs:

---> outputs:
10
26


def minimum_x ( n , k ) :
    mini = sys . maxsize
    for i in range ( 1 , n + 1 ) :
        if n % i == 0 :
            fir = i
            sec = n // i
            num1 = fir * k + sec
            res = ( num1 // k ) ** 2
            if res == n :
                mini = min ( num1 , mini )
            num2 = sec * k + fir
            res = ( num2 // k ) ** 2
            if res == n :
                mini = min ( num2 , mini )
    return mini


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1471
---> probID: codejam_16_13
---> inputs:
4
4
2 3 4 1
4
3 3 4 1
4
3 3 4 3
10
7 8 10 10 9 2 9 6 3 3

---> outputs:
Case #1: 4
Case #2: 3
Case #3: 3
Case #4: 6


def largestCircle ( ) :
    import sys
    C = sys . maxsize
    for thisCase in range ( 1 , C + 1 ) :
        print ( "Case #%d: %d" % ( thisCase , largestCircle ( ) ) )
    def largestCircle ( ) :
        N = sys . maxsize
        bff = [ ]
        for i in range ( N ) :
            bff . append ( sys . maxsize - 1 )
        status = [ - 2 ]
        chain_length = [ 0 ] * N
        for i in range ( N ) :
            status [ i ] = - 1
            chain_length [ i ] = 0
        for i in range ( N ) :
            if bff [ bff [ i ] ] == i :
                status [ i ] = - 1
        max_loop_size = 0
        for i in range ( N ) :
            if status [ i ] != - 1 :
                current = bff [ i ]
                status [ i ] = i
                steps = 1
                done = False
                while not done :
                    if current == i :
                        if steps > max_loop_size :
                            max_loop_size = steps
                        done = True
                    elif status [ current ] == i :
                        done = True
                    elif status [ current ] == - 1 :
                        if steps > chain_length [ current ] :
                            chain_length [ current ] = steps
                        done = True
                    else :
                        steps += 1
                        status [ current ] = i
                        current = bff [ current ]
        frankenCircle = 0
        for i in range ( N ) :
            if status [ i ] == - 1 :
                frankenCircle += ( chain_length [ i ] + 1 )
        return max ( frankenCircle , max_loop_size )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1472
---> probID: geeksforgeeks_371_A
---> inputs:

---> outputs:
813.5999999999999


def SellingPrice ( CP , PP ) :
    import math
    P_decimal = 1 + ( PP / 100 )
    res = P_decimal * CP
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1473
---> probID: codeforces_1265_B
---> inputs:
3
6
4 5 1 3 2 6
5
5 3 1 2 4
4
1 4 3 2
---> outputs:
101011
11111
1001

def main ( ) :
    import sys
    import string
    t , j , i , n , p1 , p2 , c , p = [ ]
    t = len ( sys . stdin )
    for j in range ( 1 , t + 1 ) :
        n = len ( sys . stdin )
        p = [ ]
        for i in range ( n + 5 ) :
            p . append ( i )
        p1 = p2 = p [ 1 ]
        sys . stdout . write ( '\n' )
        for i in range ( 2 , n + 1 ) :
            c = p [ i ]
            if c > p2 :
                p2 = c
            elif c < p1 :
                p1 = c
            if ( p2 - p1 ) == i - 1 :
                sys . stdout . write ( '\n' )
            else :
                sys . stdout . write ( '\n' )
        sys . stdout . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1474
---> probID: atcoder_ABC044_D
---> inputs:
87654
30
---> outputs:
10

def main ( ) :
    import math
    try :
        n = int ( math . ceil ( math . log ( math . log ( math . pi ) ) ) )
        s = int ( math . ceil ( math . log ( math . pi ) ) )
    except ValueError :
        pass
    if n < s :
        print ( - 1 )
        return 0
    for d in range ( 39 , 1 , - 1 ) :
        b = lower_bound ( d , n )
        while d * math . log ( b ) <= math . log ( n ) :
            if test ( b , n , s ) :
                print ( b )
                return 0
            b += 1
    for a1 in range ( int ( math . sqrt ( n - s ) ) , 1 , - 1 ) :
        if ( n - s ) % a1 == 0 :
            b = ( n - s ) // a1 + 1
            a0 = n - a1 * b
            if a0 >= 0 and a0 < b and a0 + a1 == s :
                print ( b )
                return 0
    if n == s :
        print ( n + 1 )
    else :
        print ( - 1 )
def test ( b , n , s ) :
    if b < 2 :
        return 0
    sum = 0
    while n > 0 :
        sum += n % b
        n //= b
    return sum == s
def lower_bound ( d , n ) :
    left = 1
    right = n
    logn = math . log ( n )
    while right - left > 1 :
        mid = ( left + right ) / 2
        logm = ( d + 1 ) * math . log ( mid )
        if logm > logn :
            right = mid
        else :
            left = mid
    return right


---> console_out:
 
DIDN'T MATCH!! :(
 84%|████████▍ | 1474/1746 [00:34<00:06, 42.18it/s]

-------------------------------------


---> lineNum: 1475
---> probID: codeforces_821_B
---> inputs:
1 5
---> outputs:
30

def _import ( ) :
    import sys
    import os
    import math
    import hex
    import abs
    import math
    import sin
    class B ( object ) :
        def __init__ ( self ) :
            self . stream = sys . stdin
            m = int ( self . stream . read ( ) )
            b = int ( self . stream . read ( ) )
            self . result = 0
            for x in range ( 1 , m * b + 1 ) :
                y = int ( - 1.0 * x / m + b )
                self . result = max ( self . result , 1 * ( x + 1 ) * ( y ) ** 2 / 2 + 1 * ( y + 1 ) * ( x ) ** 2 / 2 )
            print ( self . result )
    class B ( object ) :
        def __init__ ( self ) :
            self . stream = sys . stdin
        def readline ( self ) :
            return sys . stdin . readline ( )
        def readline ( self ) :
            while self . stream is None or not self . stream . readline ( ) :
                try :
                    self . stream . readline ( )
                except :
                    pass
            return self . stream . readline ( )
        def readline ( self ) :
            return sys . stdin . readline ( )
        def readline ( self ) :
            data = ''
            try :
                data = self . stream . readline ( )
            except :
                pass
            return data
    return B


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1476
---> probID: geeksforgeeks_442_A
---> inputs:

---> outputs:
YES


def GFG ( n , m ) :
    if m % n == 0 :
        print ( "YES" , end = " " )
    else :
        print ( "NO" , end = " " )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1477
---> probID: codeforces_1324_B
---> inputs:
5
3
1 2 1
5
1 2 2 3 2
3
1 1 2
4
1 2 2 1
10
1 1 2 2 3 3 4 4 5 5
---> outputs:
YES
YES
NO
YES
NO

def main ( argv ) :
    import sys
    f = open ( argv [ 1 ] )
    cantidad = f . readline ( )
    solucion = [ ]
    for cantidadfor in range ( int ( cantidad ) ) :
        cantidadfor = f . readline ( )
        cantidadelementos = int ( cantidadfor )
        elementos_s = f . readline ( ) . split ( )
        elementos = [ int ( j ) for j in elementos_s ]
        for centinela in range ( cantidadelementos ) :
            if elementos [ centinela ] == elementos [ k ] and k - j >= 2 :
                solucion . append ( 'YES' )
                break
        if centinela :
            break
    for i in solucion :
        if solucion [ i ] is None :
            solucion [ i ] = 'NO'
    for i in solucion :
        print ( i )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1478
---> probID: aizu_p00376_A
---> inputs:
20 30
---> outputs:
10

def main ( args ) :
    import sys
    try :
        a = int ( sys . stdin . readline ( ) )
        b = int ( sys . stdin . readline ( ) )
        if a <= b :
            print ( b - a )
        else :
            print ( a - b )
    except ValueError :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1479
---> probID: codeforces_591_B
---> inputs:
6 1
police
p m
---> outputs:
molice

def main ( ) :
    import string
    try :
        a = int ( sys . stdin . readline ( ) )
        b = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    c = [ ]
    s = list ( s )
    c = [ ]
    ch = [ None ] * 26
    for i in range ( b ) :
        m = s [ i ]
        n = s [ i ]
        mm = m [ 0 ]
        nn = n [ 0 ]
        flag = 1
        for j in range ( 26 ) :
            if ch [ j ] == mm and flag == 1 :
                ch [ j ] = nn
                flag = 0
            if ch [ j ] == nn and flag == 1 :
                ch [ j ] = mm
                flag = 0
            flag = 1
    for i in range ( a ) :
        c [ i ] = ch [ c [ i ] - 97 ]
    print ( c )


---> console_out:
 
DIDN'T MATCH!! :(
 85%|████████▍ | 1479/1746 [00:34<00:06, 42.35it/s]

-------------------------------------


---> lineNum: 1480
---> probID: geeksforgeeks_4156_A
---> inputs:

---> outputs:
2


def find_nth_occur ( str , ch , N ) :
    import sys
    occur = 0
    for i in range ( len ( str ) ) :
        if str [ i ] == ch :
            occur += 1
        if occur == N :
            return i
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1481
---> probID: codeforces_471_A
---> inputs:
4 2 5 4 4 4
---> outputs:
Bear

def muhandsticks ( ) :
    import string
    s = string . replace ( " " , "" )
    sticks = [ 0 ] * 9
    for i in range ( 6 ) :
        sticks [ s [ i - 1 ] ] += 1
    legs , headbody = False , False
    for i in range ( 9 ) :
        if sticks [ i ] >= 4 :
            legs = True
        if sticks [ i ] >= 6 :
            headbody = True
        if sticks [ i ] == 2 :
            headbody = True
    if legs and headbody :
        print ( "Elephant" )
    elif legs :
        print ( "Bear" )
    else :
        print ( "Alien" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1482
---> probID: projecteuler_p401_A
---> inputs:

---> outputs:
281632621

def p401 ( ) :
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    math = math


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1483
---> probID: codeforces_1389_B
---> inputs:
4
5 4 0
1 5 4 3 2
5 4 1
1 5 4 3 2
5 4 4
10 20 30 40 50
10 7 3
4 6 8 2 9 9 7 4 10 9
---> outputs:
15
19
150
56

def code_forces1389_b ( ) :
    import sys
    for i in range ( sys . maxsize ) :
        n , k , z = sys . maxsize
        a = [ ]
        for j in range ( n ) :
            a . append ( sys . stdin . read ( ) )
        res = 0
        for zz in range ( 0 , z + 1 ) :
            dist = k - 2 * zz
            if dist < 0 :
                break
            max , score = 0 , 0
            for j in range ( 0 , dist + 1 ) :
                if j < n - 1 :
                    max = max ( max , a [ j ] + a [ j + 1 ] )
                score += a [ j ]
            res = max ( res , score + max * zz )
        print ( res )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1484
---> probID: codeforces_56_B
---> inputs:
8
1 6 5 4 3 2 7 8
---> outputs:
2 6

def main ( ) :
    import sys
    import string
    import math
    class Main ( object ) :
        def __init__ ( self ) :
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]
            self . nums = [ ]


---> console_out:
 
DIDN'T MATCH!! :(
 85%|████████▍ | 1484/1746 [00:35<00:06, 42.43it/s]

-------------------------------------


---> lineNum: 1485
---> probID: aizu_p00367_A
---> inputs:
5
1 0 2 0 3 30 4 30 6 0 7 0
2 30 3 0 4 0 5 0 5 30 6 30
1 30 2 30 4 30 5 0 6 30 7 0
2 30 3 0 5 0 6 0 6 30 7 0
1 0 2 0 3 0 3 30 4 0 5 0
---> outputs:
3

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    b = np . zeros ( ( n , 3 , 2 ) )
    for i in range ( n ) :
        for j in range ( 3 ) :
            for k , h , m in enumerate ( b [ : , 0 ] ) :
                b [ i ] [ j ] [ k ] = sys . maxsize * 60 + sys . maxsize
    ans = 0
    for i in range ( n ) :
        for j in range ( n ) :
            for k in range ( n ) :
                res = 0
                for p in range ( n ) :
                    if b [ p ] [ 0 ] [ 0 ] <= b [ i ] [ 0 ] [ 1 ] and b [ i ] [ 0 ] [ 1 ] <= b [ p ] [ 0 ] [ 1 ] and b [ p ] [ 1 ] [ 0 ] <= b [ j ] [ 1 ] [ 1 ] and b [ j ] [ 1 ] [ 1 ] <= b [ p ] [ 1 ] [ 1 ] and b [ p ] [ 2 ] [ 0 ] <= b [ k ] [ 2 ] [ 1 ] and b [ k ] [ 2 ] [ 1 ] <= b [ p ] [ 2 ] [ 1 ] :
                        res += 1
            ans = max ( ans , res )
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1486
---> probID: aizu_p00740_A
---> inputs:
3 2
3 3
3 50
10 29
31 32
50 2
50 50
0 0
---> outputs:
1
0
1
5
30
1
13

def main ( ) :
    import sys
    import re
    try :
        return sys . stdin . read ( )
    except AttributeError :
        pass
    try :
        return sys . stdin . read ( )
    except AttributeError :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1487
---> probID: aizu_p02356_A
---> inputs:
6 5
1 2 3 4 5 6
6 9 12 21 15
---> outputs:
9
12
15
21
18

def main ( ) :
    import sys
    import os
    import subprocess
    import shlex
    import subprocess
    import shlex
    import subprocess
    import shlex
    import sys
    import subprocess
    import shlex
    try :
        p = subprocess . Popen ( [ '/usr/bin/python' , '-c' , '-d' , '--' , '--' ] , stdin = subprocess . PIPE , stdout = subprocess . PIPE , stderr = subprocess . PIPE )
        n = len ( p . stdout . read ( ) )
        q = len ( p . stdout . read ( ) )
        a = [ p . stdout . read ( ) ]
        for i in range ( 1 , n ) :
            a . append ( p . stdout . read ( ) )
    except :
        pass
    else :
        for i in range ( q ) :
            x = p . stdout . read ( )
            cnt = 0
            right = 0
            sum = 0
            for left in range ( n ) :
                while right < n and sum + a [ right ] <= x :
                    sum += a [ right ]
                    right += 1
                cnt += right - left
                if right == left :
                    right += 1
                else :
                    sum -= a [ left ]
            print ( cnt , file = sys . stdout )
    subprocess . check_call ( [ '/usr/bin/python' , '-c' , '--' , '-' , '--' ] , stdin = subprocess . PIPE , stdout = subprocess . PIPE , stderr = subprocess . PIPE )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1488
---> probID: codeforces_1409_A
---> inputs:
6
5 5
13 42
18 4
1337 420
123456789 1000000000
100500 9000
---> outputs:
0
3
2
92
87654322
9150

def code_force_1409_a ( ) :
    import sys
    t = sys . maxsize
    a , b = 0 , 0
    for i in range ( t ) :
        a = sys . maxsize
        b = sys . maxsize
        counter = 0
        if a < b :
            counter = ( b - a ) // 10
        elif a > b :
            counter = ( a - b ) // 10
        if a % 10 != b % 10 :
            counter += 1
        print ( counter )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553000777_8865/main.py", line 34
    from numpy . random import as np
                               ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1489
---> probID: geeksforgeeks_743_A
---> inputs:

---> outputs:
3
2
5


def GFG ( ) :
    import numpy as np
    import numpy as np
    import numpy . fft as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random
    from numpy . random import as np
    from numpy . random import random
    from numpy . random import as np
    from numpy . random import as np
    from numpy . random import ( np , np )
    from numpy . random import ( np , np )
    from numpy . random import as np
    from numpy . random import ( np , np )
    from numpy . random import as np
    from numpy . random import random
    from numpy . random import as np
    from numpy . random import ( np , np )
    from numpy . random import ( np , np )
    from numpy . random import ( np , np )
    from numpy . random import as np
    np . random = np . random
    from numpy . random import rand
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 1 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    np . random . seed ( 1 )
    np . random . seed ( 0 )
    np . random . seed ( 1 )
    np . random . seed ( 2 )
    np . random . seed ( 0 )


---> console_out:
 
DIDN'T MATCH!! :(
 85%|████████▌ | 1489/1746 [00:35<00:06, 42.07it/s]

-------------------------------------


---> lineNum: 1490
---> probID: codeforces_1642_A
---> inputs:
5
8 10
10 4
6 2
4 6
0 1
4 2
14 1
11 2
13 2
0 0
4 0
2 4
0 1
1 1
0 0
---> outputs:
0.0000000
0
2.0000
0.00
1

def main ( ) :
    import sys
    try :
        T = int ( sys . stdin . read ( ) )
    except ValueError :
        pass
    for t in range ( T ) :
        X = [ sys . stdin . read ( ) ]
        Y = [ sys . stdin . read ( ) ]
        answer = 0
        for i in range ( 3 ) :
            if Y [ i ] == Y [ ( i + 1 ) % 3 ] and Y [ i ] > Y [ ( i + 2 ) % 3 ] :
                answer += abs ( X [ ( i + 1 ) % 3 ] - X [ i ] )
        print ( answer )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1491
---> probID: geeksforgeeks_2417_A
---> inputs:

---> outputs:
Yes


def GFG ( data ) :
    data = list ( data )
    for i in range ( len ( data ) // 2 ) :
        if data [ i ] != data [ len ( data ) - 1 - i ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1492
---> probID: aizu_p02408_A
---> inputs:
47
S 10
S 11
S 12
S 13
H 1
H 2
S 6
S 7
S 8
S 9
H 6
H 8
H 9
H 10
H 11
H 4
H 5
S 2
S 3
S 4
S 5
H 12
H 13
C 1
C 2
D 1
D 2
D 3
D 4
D 5
D 6
D 7
C 3
C 4
C 5
C 6
C 7
C 8
C 9
C 10
C 11
C 13
D 9
D 10
D 11
D 12
D 13
---> outputs:
S 1
H 3
H 7
C 12
D 8

def main ( ) :
    import string
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    array = np . zeros ( ( 4 , 13 ) )
    for i in range ( 1 , n + 1 ) :
        s = s . strip ( )
        a = int ( sys . stdin . readline ( ) )
        if s == 'S' :
            array [ 0 ] [ a - 1 ] = 1
        elif s == 'H' :
            array [ 1 ] [ a - 1 ] = 1
        elif s == 'C' :
            array [ 2 ] [ a - 1 ] = 1
        elif s == 'D' :
            array [ 3 ] [ a - 1 ] = 1
    for i in range ( len ( array ) ) :
        for j in range ( len ( array [ 0 ] ) ) :
            if array [ i ] [ j ] == 0 and i == 0 :
                print ( 'S %d' % ( j + 1 ) )
            elif array [ i ] [ j ] == 0 and i == 1 :
                print ( 'H %d' % ( j + 1 ) )
            elif array [ i ] [ j ] == 0 and i == 2 :
                print ( 'C %d' % ( j + 1 ) )
            elif array [ i ] [ j ] == 0 and i == 3 :
                print ( 'D %d' % ( j + 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1493
---> probID: geeksforgeeks_3434_A
---> inputs:

---> outputs:
Sum of even numbers at  even indices is  30


def sum_even_and_even_index ( arr , n ) :
    i , sum = 0 , 0
    for i in range ( 0 , n , 2 ) :
        if arr [ i ] % 2 == 0 :
            sum += arr [ i ]
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1494
---> probID: codeforces_1671_A
---> inputs:
8
aaaabbb
bbaaaaabbb
aaaaaa
abab
a
b
aaaab
bbaaa
---> outputs:
YES
YES
YES
NO
NO
NO
NO
YES

def code_chef ( ) :
    import string
    import sys
    import os
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(
 86%|████████▌ | 1494/1746 [00:35<00:05, 42.20it/s]  File "./junk/1692553000919_6730/main.py", line 10
    arr [ i ] % n += n
    ^
SyntaxError: cannot assign to operator


-------------------------------------


---> lineNum: 1495
---> probID: geeksforgeeks_1479_A
---> inputs:

---> outputs:
1 3 6 

def print_duplicates ( arr , n ) :
    import sys
    import os
    import sys
    for i in range ( n ) :
        if arr [ i ] % n >= n :
            if arr [ i ] % n < 2 * n :
                sys . stdout . write ( '%d ' % arr [ i ] )
                fl = 1
        arr [ i ] % n += n
    if not ( fl > 0 ) :
        sys . stdout . write ( '-1' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1496
---> probID: codeforces_1293_B
---> inputs:
1
---> outputs:
1.000000000000

def main ( ) :
    import sys
    try :
        n = len ( sys . stdin )
        res = 0
        for i in range ( n ) :
            res += ( 1.0 / float ( n - i ) )
        print ( res )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1497
---> probID: geeksforgeeks_2020_A
---> inputs:

---> outputs:
8


def GFG ( n ) :
    return n * ( n + 1 ) * ( n + 2 ) / 3


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1498
---> probID: geeksforgeeks_2615_A
---> inputs:

---> outputs:
45


def GFG ( n ) :
    return ( n * ( n - 1 ) ) // 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1499
---> probID: geeksforgeeks_4781_A
---> inputs:

---> outputs:
15


def graycode ( n ) :
    return n ^ ( n >> 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 86%|████████▌ | 1499/1746 [00:35<00:05, 42.75it/s]

-------------------------------------


---> lineNum: 1500
---> probID: geeksforgeeks_3803_A
---> inputs:

---> outputs:
28


def GFG ( n ) :
    return ( n * ( n - 1 ) ) / 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1501
---> probID: geeksforgeeks_2214_A
---> inputs:

---> outputs:
4


def possibleways ( n ) :
    if n % 2 == 1 :
        return 0
    elif n % 4 == 0 :
        return n // 4 - 1
    else :
        return n // 4


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1502
---> probID: geeksforgeeks_4734_A
---> inputs:

---> outputs:
3


def GFG ( n ) :
    if not n :
        return 0
    if n & 1 == 1 :
        return 1 + CountSetBits ( n >> 1 )
    else :
        return CountSetBits ( n >> 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1503
---> probID: geeksforgeeks_5233_A
---> inputs:

---> outputs:
22


def GFG ( m , n ) :
    return 8 * m * n - 6 * m - 6 * n + 4


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1504
---> probID: geeksforgeeks_1793_A
---> inputs:

---> outputs:
SUM( 5 ,  3 ): 7260


def GFG ( n , m ) :
    if m == 1 :
        return ( n * ( n + 1 ) / 2 )
    sum = sum ( n , m - 1 )
    return ( sum * ( sum + 1 ) / 2 )


---> console_out:
 
DIDN'T MATCH!! :(
 86%|████████▌ | 1504/1746 [00:35<00:05, 42.09it/s]

-------------------------------------


---> lineNum: 1505
---> probID: geeksforgeeks_4715_A
---> inputs:

---> outputs:
6


def gf_gcd ( n ) :
    n = 3
    return ( n * ( n - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1506
---> probID: geeksforgeeks_4825_A
---> inputs:

---> outputs:
20


def GFG ( n ) :
    return ( n * ( n + 1 ) * ( n + 1 ) * ( n + 2 ) ) / 12


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1507
---> probID: geeksforgeeks_2240_A
---> inputs:

---> outputs:
4


def GFG ( n ) :
    if n % 2 == 1 :
        return 0
    else :
        return ( n - 2 ) // 4


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1508
---> probID: geeksforgeeks_3669_A
---> inputs:

---> outputs:
36 32


def GFG ( n ) :
    print ( 9 * n , 8 * n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1509
---> probID: geeksforgeeks_3562_A
---> inputs:

---> outputs:
1


def GFG ( n ) :
    if n < 3 :
        return 0
    return ( 1 if n & 1 else 6 )


---> console_out:
 
DIDN'T MATCH!! :(
 86%|████████▋ | 1509/1746 [00:35<00:05, 42.59it/s]

-------------------------------------


---> lineNum: 1510
---> probID: geeksforgeeks_3637_A
---> inputs:

---> outputs:
28


def count_max_intersect ( n ) :
    return ( n ) * ( n - 1 ) / 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1511
---> probID: geeksforgeeks_2019_A
---> inputs:

---> outputs:
8


def sum ( n ) :
    if n == 1 :
        return 2
    else :
        return ( n * ( n + 1 ) + sum ( n - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1512
---> probID: geeksforgeeks_2936_A
---> inputs:

---> outputs:
16


def highestPowerOf2 ( n ) :
    return ( n & ( ~ ( n - 1 ) ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1513
---> probID: geeksforgeeks_3117_A
---> inputs:

---> outputs:
3


def GFG ( n ) :
    return n * ( n - 1 ) // 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1514
---> probID: atcoder_ABC071_B
---> inputs:
atcoderregularcontest
---> outputs:
b

def main ( ) :
    import sys
    s = sys . stdin . read ( )
    sys . stdin . close ( )
    c = "None"
    for i in [ 'a' , 'z' ] :
        if '%c' % chr ( i ) not in s :
            c = "%c" % chr ( i )
            break
    print ( c )


---> console_out:
 
DIDN'T MATCH!! :(
 87%|████████▋ | 1514/1746 [00:35<00:05, 43.05it/s]

-------------------------------------


---> lineNum: 1515
---> probID: codeforces_299_A
---> inputs:
3
2 2 4
---> outputs:
2

def A1581 ( ) :
    import sys
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import math
    from math import pi
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import math
    from math import pi
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1516
---> probID: atcoder_ABC053_A
---> inputs:
1000
---> outputs:
ABC

def main ( ) :
    import sys
    sc = sys . stdin . read ( )
    print ( 'ABC' if 1200 > len ( sc ) else 'ARC' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1517
---> probID: codeforces_803_B
---> inputs:
9
2 1 0 3 0 0 3 2 4
---> outputs:
2 1 0 1 0 0 1 2 3

def main ( ) :
    import sys
    import math
    import math
    import sys
    class Main ( int ) :
        max_element_value = int ( math . pow ( 10 , 9 ) )
        def __init__ ( self ) :
            sys . stdout . write ( '\n' )
            self . max_element_value = int ( math . pow ( 10 , 9 ) )
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
        def __call__ ( self , * args ) :
            return self . max_element_value
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1518
---> probID: geeksforgeeks_4744_A
---> inputs:

---> outputs:
Minimum of 3 numbers is 5


def GFG ( x , y , z ) :
    c = 0
    while x != 0 and y != 0 and z != 0 :
        x -= 1
        y -= 1
        z -= 1
        c += 1
    return c


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1519
---> probID: aizu_p00291_A
---> inputs:
3 1 4 0 4 1
---> outputs:
0

def main ( ) :
    import sys
    try :
        c1 = int ( sys . stdin . readline ( ) )
        c5 = int ( sys . stdin . readline ( ) )
        c10 = int ( sys . stdin . readline ( ) )
        c50 = int ( sys . stdin . readline ( ) )
        c100 = int ( sys . stdin . readline ( ) )
        c500 = int ( sys . stdin . readline ( ) )
        if c1 + c5 * 5 + c10 * 10 + c50 * 50 + c100 * 100 + c500 * 500 < 1000 :
            print ( '0' )
        else :
            print ( '1' )
    except ValueError :
        pass


---> console_out:
 
DIDN'T MATCH!! :(
 87%|████████▋ | 1519/1746 [00:35<00:05, 42.87it/s]

-------------------------------------


---> lineNum: 1520
---> probID: codeforces_336_B
---> inputs:
1 1
---> outputs:
2.0000000000

def main ( ) :
    import sys
    from io import BytesIO
    from io import BufferedWriter
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import BytesIO
    from io import BufferedWriter
    from io import BytesIO
    from io import StringIO
    from io import BufferedWriter
    from io import StringIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    from io import BytesIO
    import BytesIO
    from io import BytesIO
    import BytesIO
    from io import BytesIO
    import BytesIO
    from io import BytesIO


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1521
---> probID: geeksforgeeks_5068_A
---> inputs:

---> outputs:
Count of cubes is 2


def count_cubes ( a , b ) :
    return int ( math . floor ( math . cbrt ( b ) ) - math . ceil ( math . cbrt ( a ) ) + 1 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553001549_9212/main.py", line 11
    sys . stderr . write ( 'Please enter a file or a file path to a file of file ' 'or a file path to a file of file ' 'or a file path to a file of file ' 'or a file path to a file of ' 'or a file path to a file of ' 'or a file of file ' 'or a file of ' ' and e of file to be created and ' 'or a file of file ' 'or a file of ' ' and e of file of ' ' and r of file of ' ' and a file of file of ' ' and r of file of ' ' and a file of file of ' ' and a file of file of ' ' and a file of file of ' ' and a file of file of ' ' and a file of file of ' ' and a file of file of ' ' and e of file of ' ' and a file of file of ' ' and a file of file ' ' and a file of file of ' ' and a file of file of ' ' and a file of file and a file of ' ' and e of file of file ' ' and r of file ' ' and a file of file ' 'or a file of ' % s ' % sys . argv [ 0 ] )

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1522
---> probID: aizu_p00283_A
---> inputs:
15 4
1 1 0
1 2 2
5 10 5
8 1 15
60 4
5 2 0
8 8 2
3 5 0
49 0 18
100 1
1 1 1
0 0
---> outputs:
6
4
NA

def main ( ) :
    import sys
    import os
    import math
    import random
    try :
        random . seed ( )
    except :
        pass
    else :
        sys . stderr . write ( 'Please enter a file or a file path to a file of file ' 'or a file path to a file of file ' 'or a file path to a file of file ' 'or a file path to a file of ' 'or a file path to a file of ' 'or a file of file ' 'or a file of ' ' and e of file to be created and ' 'or a file of file ' 'or a file of ' ' and e of file of ' ' and r of file of ' ' and a file of file of ' ' and r of file of ' ' and a file of file of ' ' and a file of file of ' ' and a file of file of ' ' and a file of file of ' ' and a file of file of ' ' and a file of file of ' ' and e of file of ' ' and a file of file of ' ' and a file of file ' ' and a file of file of ' ' and a file of file of ' ' and a file of file and a file of ' ' and e of file of file ' ' and r of file ' ' and a file of file ' 'or a file of ' % s ' % sys . argv [ 0 ] )

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1523
---> probID: projecteuler_p012_A
---> inputs:

---> outputs:
76576500

def p012 ( ) :
    print ( eval ( 'p012()' ) )
    def run ( ) :
        triangle = 0
        for i in range ( 1 ) :
            if int ( i ) - triangle < i :
                raise ZeroDivisionError ( 'Overflow' )
            triangle += i
            if count_divisors ( triangle ) > 500 :
                return str ( triangle )
    def count_divisors ( n ) :
        count = 0
        end = math . sqrt ( n )
        for i in range ( 1 , end ) :
            if n % i == 0 :
                count += 2
        if end * end == n :
            count += 1
        return count
    return run


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1524
---> probID: geeksforgeeks_1739_A
---> inputs:

---> outputs:
ΔX = 6


def find_delta ( a , b , c , d ) :
    import sys
    return ( b * c - a * d ) / ( d - c )


---> console_out:
 
DIDN'T MATCH!! :(
 87%|████████▋ | 1524/1746 [00:35<00:05, 42.83it/s]

-------------------------------------


---> lineNum: 1525
---> probID: geeksforgeeks_2005_A
---> inputs:

---> outputs:
3 71


def GFG ( n , is_prime ) :
    is_prime [ 0 ] = is_prime [ 1 ] = False
    for i in range ( 2 , n + 1 ) :
        is_prime [ i ] = True
    for p in range ( 2 , p * n + 1 ) :
        if is_prime [ p ] == True :
            for i in range ( p * p , n + 1 , p ) :
                is_prime [ i ] = False
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1526
---> probID: geeksforgeeks_194_A
---> inputs:

---> outputs:
545


def replace_digit ( x , d1 , d2 ) :
    result , multiply = 0 , 1
    while x % 10 > 0 :
        remainder = x % 10
        if remainder == d1 :
            result = result + d2 * multiply
        else :
            result = result + remainder * multiply
        multiply *= 10
        x = x // 10
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1527
---> probID: geeksforgeeks_1140_A
---> inputs:

---> outputs:
\*******/
*\*****/*
**\***/**
***\*/***
****/****
***/*\***
**/***\**
*/*****\*
/*******\


def GFG ( i , j , n ) :
    if j >= n :
        return 0
    if i >= n :
        return 1
    if j == i or j == n - 1 - i :
        if i == n - 1 - j :
            print ( "/" , end = " " )
        else :
            print ( "\\" , end = " " )
    else :
        print ( "*" , end = " " )
    if print_pattern ( i , j + 1 , n ) == 1 :
        return 1
    print ( )
    return print_pattern ( i + 1 , 0 , n )


---> console_out:
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1528
---> probID: geeksforgeeks_4201_A
---> inputs:

---> outputs:
Count of pairs is 3


def get_pairs_count ( n , sum ) :
    import collections
    arr = list ( range ( 1 , 5 , 7 , - 1 , 5 ) )
    hm = { }
    for i in range ( n ) :
        if arr [ i ] not in hm :
            hm [ arr [ i ] ] = 0
        hm [ arr [ i ] ] = hm [ arr [ i ] ] + 1
    twice_count = 0
    for i in range ( n ) :
        if hm [ sum - arr [ i ] ] in arr :
            twice_count += hm [ sum - arr [ i ] ]
        if sum - arr [ i ] == arr [ i ] :
            twice_count -= 1
    return twice_count / 2


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1529
---> probID: geeksforgeeks_2910_A
---> inputs:

---> outputs:
5


def Count_subarray ( arr , n ) :
    global subarray_sum , remaining_sum , count
    for i in range ( n ) :
        for j in range ( i , n ) :
            subarray_sum = 0
            remaining_sum = 0
            for k in range ( i , j + 1 ) :
                subarray_sum += arr [ k ]
            for l in arr [ i : ] :
                remaining_sum += arr [ l ]
            for l in arr [ j + 1 : ] :
                remaining_sum += arr [ l ]
            if subarray_sum > remaining_sum :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(
 88%|████████▊ | 1529/1746 [00:36<00:05, 43.07it/s]

-------------------------------------


---> lineNum: 1530
---> probID: codeforces_1257_A
---> inputs:
3
5 1 3 2
100 33 100 1
6 0 2 3
---> outputs:
2
99
1

def main ( ) :
    import sys
    t = sys . maxsize
    for i in range ( t ) :
        n = sys . maxsize
        x = sys . maxsize
        a = sys . maxsize
        b = sys . maxsize
        times = min ( a , b ) - 1 + n - max ( a , b )
        if times > x :
            print ( n - 1 - ( times - x ) )
        else :
            print ( n - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1531
---> probID: atcoder_ARC075_A
---> inputs:
6
1
2
3
4
5
6
---> outputs:
21


def main ( ) :
    import sys
    import string
    import math
    import csv
    class Main ( sys . stdout ) :
        def __init__ ( self ) :
            sys . stdout . write ( "\n" )
            self . N = len ( sys . stdin . readlines ( ) )
            self . sum = 0
            self . a = [ ]
            for i in range ( self . N ) :
                tmp = int ( sys . stdin . readline ( ) )
                self . sum += tmp
                if tmp % 10 != 0 :
                    self . a . append ( tmp )
            self . a . sort ( )
            self . i = 0
            while self . sum % 10 == 0 and i < len ( self . a ) :
                self . sum -= self . a [ i ]
                self . i += 1
            if self . sum % 10 == 0 :
                self . sum = 0
            print ( self . sum )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1532
---> probID: codeforces_1415_B
---> inputs:
3
10 2
1 1 2 2 1 1 2 2 2 1
7 1
1 2 3 4 5 6 7
10 3
1 3 3 3 3 1 2 1 3 3
---> outputs:
3
6
2

def RepaintingStreet ( ) :
    import sys
    try :
        t = sys . maxsize
    except AttributeError :
        t = 0
    while t > 0 :
        n = sys . maxsize
        k = sys . maxsize
        a = [ ]
        l = [ ]
        for i in range ( n ) :
            a . append ( sys . stdin . read ( 1 ) )
            if a [ i ] not in l :
                l . append ( a [ i ] )
        ans = sys . maxsize
        for j in l :
            moves = 0
            big = l [ j ]
            for i in range ( n ) :
                if a [ i ] == big :
                    i += 1
                    continue
                moves += 1
                i += k
            ans = min ( moves , ans )
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1533
---> probID: geeksforgeeks_1980_A
---> inputs:

---> outputs:
One of the numbers repeated in the array is: 1


def find_repeating_number ( arr , n ) :
    import math
    sq = int ( math . sqrt ( n ) )
    range = ( n // sq ) + 1
    count = [ 0 ] * range
    for i in range ( 0 , n + 1 ) :
        count [ ( arr [ i ] - 1 ) // sq ] += 1
    selected_block = range - 1
    for i in range ( range - 1 ) :
        if count [ i ] > sq :
            selected_block = i
            break
    m = { }
    for i in range ( 0 , n + 1 ) :
        if ( ( selected_block * sq ) < arr [ i ] ) and ( arr [ i ] <= ( ( selected_block + 1 ) * sq ) ) :
            m [ arr [ i ] ] = 1
            if m [ arr [ i ] ] == 1 :
                return arr [ i ]
    return - 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1534
---> probID: geeksforgeeks_520_A
---> inputs:

---> outputs:
5
328513


def gf_max_prime_factors ( n ) :
    import math
    max_prime = - 1
    while n % 2 == 0 :
        max_prime = 2
        n >>= 1
    for i in range ( 3 , math . sqrt ( n ) + 1 , 2 ) :
        while n % i == 0 :
            max_prime = i
            n = n // i
    if n > 2 :
        max_prime = n
    return max_prime


---> console_out:
 
DIDN'T MATCH!! :(
 88%|████████▊ | 1534/1746 [00:36<00:04, 42.60it/s]

-------------------------------------


---> lineNum: 1535
---> probID: codeforces_1691_A
---> inputs:
2
5
2 4 3 6 8
6
3 5 9 7 1 3
---> outputs:
1
0

def main ( a ) :
    import sys
    class Beat ( int ) :
        def __init__ ( self , number ) :
            self . number = number
        def number ( self ) :
            return self . number
        def number_even ( self ) :
            pass
        def number_odd ( self ) :
            pass
        def input ( number ) :
            if number % 2 == 0 :
                number_even ( )
            else :
                number_odd ( )
        def print_result ( ) :
            print ( min ( number_even , number_odd ) )
            number_even = 0
            number_odd = 0
        def main ( a ) :
            sys . stdout . write ( a )
    def number ( ) :
        return int ( a )
    instance = Beat ( number )
    for i in range ( instance . number ) :
        num = int ( i )
        for k in range ( num ) :
            n = int ( n )
            instance . input ( n )
        instance . print_result ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1536
---> probID: atcoder_ABC120_C
---> inputs:
0
---> outputs:
0

def main ( args ) :
    import string
    sc = string . split ( args )
    s1 = sc [ 0 ]
    ans = 0
    c1 = 0
    c0 = 0
    for c in s1 :
        if c == '1' :
            if c0 > 0 :
                c0 -= 1
                ans += 1
            else :
                c1 += 1
        else :
            if c1 > 0 :
                c1 -= 1
                ans += 1
            else :
                c0 += 1
    print ( ans * 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1537
---> probID: geeksforgeeks_5215_A
---> inputs:

---> outputs:
3, 4, 5


def pythagorean_triplet ( n ) :
    for i in range ( 1 , n // 3 + 1 ) :
        for j in range ( i + 1 , n // 2 + 1 ) :
            k = n - i - j
            if i * i + j * j == k * k :
                print ( i , j , k , end = ' ' )
                return
    print ( 'No Triplet' , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1538
---> probID: geeksforgeeks_2224_A
---> inputs:

---> outputs:
3


def count_digits ( a , b ) :
    if not a or not b :
        return 1
    return int ( math . floor ( math . log10 ( abs ( a ) ) + math . log10 ( abs ( b ) ) ) ) + 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1539
---> probID: geeksforgeeks_5039_A
---> inputs:

---> outputs:
Index =  2


def index_of_first_one ( arr , low , high ) :
    mid = 0
    while low <= high :
        mid = ( low + high ) // 2
        if arr [ mid ] == 1 and ( mid == 0 or arr [ mid - 1 ] == 0 ) :
            break
        elif arr [ mid ] == 1 :
            high = mid - 1
        else :
            low = mid + 1
    return mid


---> console_out:
 
DIDN'T MATCH!! :(
 88%|████████▊ | 1539/1746 [00:36<00:04, 42.70it/s]

-------------------------------------


---> lineNum: 1540
---> probID: codeforces_669_A
---> inputs:
1
---> outputs:
1

def main ( ) :
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import math
    import random
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1541
---> probID: aizu_p00220_A
---> inputs:
23.5
158.1
-1.0
---> outputs:
00010111.1000
NA

def main ( ) :
    import decimal
    import sys
    class Main ( object ) :
        def __init__ ( self ) :
            self . num = None
            self . bd = None
            self . integers = int ( self . num )
            self . decimals = decimal . Decimal ( self . num - self . integers )
        def judge ( self ) :
            if self . integers > 255 or self . decimals > 0.9375 :
                return False
            return True
        def to_binary_digits ( self ) :
            tmp = ""
            count = 1
            for i in self . integers :
                tmp += str ( i % 2 )
            s = tmp
            for i in range ( 8 - len ( tmp ) ) :
                s += "0"
            s += "."
            while True :
                if self . decimals == 0 :
                    s += "0000"
                    break
                if self . count > 4 :
                    return False
                self . decimals *= 2
                if self . decimals >= 1 :
                    self . decimals -= 1
                    s += "1"
                    if self . decimals == 0 :
                        for i in range ( 4 - self . count ) :
                            s += "0"
                        break
                else :
                    s += "0"
                count += 1
            return True
        def get_bd ( self ) :
            if self . to_binary_digits ( ) :
                return s
            return "NA"
    return Main ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1542
---> probID: geeksforgeeks_233_A
---> inputs:

---> outputs:
x =  35


def digit_sum ( n ) :
    sum , rem = 0 , 0
    while n > 0 :
        rem = n % 10
        sum += rem
        n //= 10
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1543
---> probID: atcoder_AGC024_B
---> inputs:
1
1
---> outputs:
0

def main ( ) :
    import math
    import string
    class Main ( int ) :
        mod = int ( math . pow ( 10 , 9 ) + 7 )
        def __init__ ( self ) :
            self . mod = int ( math . pow ( 10 , 9 ) + 7 )
        def __getitem__ ( self , i ) :
            return self . mod + i
    N = int ( sys . stdin . readline ( ) )
    a = [ 0 ] * N
    for i in range ( N ) :
        a [ int ( i ) - 1 ] = i
    ans = 1
    cnt = 1
    for i in range ( N ) :
        if i != N - 1 and a [ i ] < a [ i + 1 ] :
            cnt += 1
        else :
            ans = max ( ans , cnt )
            cnt = 1
    ans = max ( ans , cnt )
    ans = N - ans
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1544
---> probID: aizu_p00271_A
---> inputs:
30 19
39 20
19 18
25 20
22 21
23 10
10 -10
---> outputs:
11
19
1
5
1
13
20

def main ( ) :
    import sys
    import os
    class Main ( ) :
        def compute ( ) :
            with open ( '/proc/self/*' ) as f :
                for i in range ( 7 ) :
                    n_high = int ( f . read ( ) )
                    n_low = int ( f . read ( ) )
                    print ( n_high - n_low )
    return Main ( )


---> console_out:
 
DIDN'T MATCH!! :(
 88%|████████▊ | 1544/1746 [00:36<00:04, 42.49it/s]

-------------------------------------


---> lineNum: 1545
---> probID: geeksforgeeks_3731_A
---> inputs:

---> outputs:
No
Yes
Yes


def GFG ( A , q ) :
    import numpy as np
    class GFG ( object ) :
        def __init__ ( self , first , second ) :
            self . first = first
            self . second = second
        def performQueries ( self , A , q ) :
            n = len ( A )
            pref_xor = np . zeros ( n + 1 )
            for i in range ( 1 , n + 1 ) :
                pref_xor [ i ] = pref_xor [ i - 1 ] ^ A [ i - 1 ]
            for i in q :
                L , R = i
                if L > R :
                    temp = L
                    L = R
                    R = temp
                if L != R and pref_xor [ R ] == pref_xor [ L - 1 ] :
                    print ( "Yes" )
                else :
                    print ( "No" )
    def main ( arg ) :
        Arr = [ 1 , 1 , 2 , 2 , 1 ]
        q = [ np . array ( [ 1 , 5 ] ) , np . array ( [ 1 , 4 ] ) , np . array ( [ 3 , 4 ] ) ]
        return np . dot ( Arr , q )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553002113_4644/main.py", line 6
    except getopt . error , msg :
                          ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1546
---> probID: codeforces_682_B
---> inputs:
5
1 3 3 3 6
---> outputs:
5

def main ( ) :
    import sys
    import getopt
    try :
        opts , args = getopt . getopt ( sys . argv [ 1 : ] , "" )
    except getopt . error , msg :
        print ( msg , file = sys . stderr )
        return
    for o , a in opts :
        if o == "-d" :
            return
        elif o == "-u" :
            return
        elif o == "-v" :
            return
        elif o == "-t" :
            return
        elif o == "-v" :
            return
        elif o == "-t" :
            return
        elif o == "-t" :
            return
        elif o == "-v" :
            return
        elif o == "-t" :
            return
        elif o == "-t" :
            return
        elif o == "-v" :
            return
        elif o == "-t" :
            return
        elif o == "-t" :
            return
        elif o == "-v" :
            return
        elif o == "-t" :
            return
        elif o == "-p" :
            return
        elif o == "-q" :
            return
        elif o == "-p" :
            return
        elif o == "-t" :
            return
        elif o == "-p" :
            return
        elif o == "-q" :
            return
        elif o == "-p" :
            return
        elif o == "-p" :
            return
        elif o == "-p" :
            return
        elif o == "-p" :
            return
        elif o == "-p" :
            return
        elif o == "-p" :
            return
        elif o == "-p" :
            return
        else :
            raise Exception ( "Unknown option %s" % str ( o ) )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1547
---> probID: codeforces_215_B
---> inputs:
3 1 2 3
1 2
3 3 2 1
1 2
---> outputs:
2.683281573000

def main ( ) :
    import locale
    import sys
    try :
        N = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    R1 = [ ]
    for n in range ( N ) :
        R1 . append ( int ( sys . stdin . readline ( ) ) )
    M = int ( sys . stdin . readline ( ) )
    P1 = [ ]
    for m in range ( M ) :
        P1 . append ( int ( sys . stdin . readline ( ) ) )
    K = int ( sys . stdin . readline ( ) )
    P2 = [ ]
    for k in range ( K ) :
        P2 . append ( int ( sys . stdin . readline ( ) ) )
    A = int ( sys . stdin . readline ( ) )
    B = int ( sys . stdin . readline ( ) )
    max_r1 = 0
    for r1 in R1 :
        max_r1 = max ( max_r1 , r1 )
    max_p1 = 0
    for p1 in P1 :
        max_p1 = max ( max_p1 , p1 )
    min_p2 = sys . maxsize
    for p2 in P2 :
        min_p2 = min ( min_p2 , p2 )
    r2 = math . sqrt ( max_r1 ** 2 * float ( B ) ** 2 / ( A * min_p2 + B * max_p1 ) )
    print ( r2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1548
---> probID: geeksforgeeks_4317_A
---> inputs:

---> outputs:
 1*2*3*10*11*12
  4*5*8*9
   6*7
    


def trapezium_pattern ( num ) :
    firsthalf = 1
    secondhalf = ( num * num ) + 1
    nb_spaces = 0
    for nb_lines in range ( num , 1 , - 1 ) :
        for nb_spaces_counter in range ( nb_spaces , 1 , - 1 ) :
            print ( " " , end = "" )
        for first_half_counter in range ( 1 , nb_lines + 1 ) :
            if first_half_counter == nb_lines :
                print ( ( firsthalf , first_half ) )
                first_half += 1
            else :
                print ( ( firsthalf , first_half ) , end = "" )
                first_half += 1
        for second_half_counter in range ( 1 , nb_lines + 1 ) :
            print ( "*" , end = "" )
            second_half += 1
        print ( )
        nb_spaces += 2
        secondhalf = ( secondhalf - 1 ) - ( ( nb_lines - 1 ) * 2 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1549
---> probID: geeksforgeeks_4964_A
---> inputs:

---> outputs:
2 4 1 3 


def find_perm ( n , differences ) :
    import sys
    ans = [ 0 ]
    x = 0
    for i in range ( 0 , n - 2 + 1 ) :
        diff = differences [ i ]
        x = x + diff
        ans . append ( x )
    anss = [ obj for obj in ans if obj is not None ]
    ans . sort ( )
    flag = - 1
    for i in range ( 1 , n - 1 + 1 ) :
        res = ans [ i ] - ans [ i - 1 ]
        if res != 1 :
            flag = 0
    if flag == 0 :
        sys . stdout . write ( - 1 )
        return
    else :
        mpp = dict ( )
        mpp . clear ( )
        j = 1
        value_at_index = [ ]
        for x1 in ans :
            mpp [ x1 ] = j
            j += 1
        for x2 in anss :
            value_at_index . append ( mpp [ x2 ] )
        for x3 in value_at_index :
            sys . stdout . write ( '%d ' % x3 )
        sys . stdout . write ( '\n' )


---> console_out:
 
DIDN'T MATCH!! :(
 89%|████████▊ | 1549/1746 [00:36<00:04, 42.02it/s]

-------------------------------------


---> lineNum: 1550
---> probID: geeksforgeeks_2161_A
---> inputs:

---> outputs:
First 10 2-almost prime numbers:
4 6 9 10 14 15 21 22 25 26 

def count_prime_factors ( n ) :
    count = 0
    while n % 2 == 0 :
        n = n // 2
        count += 1
    for i in range ( 3 , math . sqrt ( n ) + 1 , 2 ) :
        while n % i == 0 :
            n = n // i
            count += 1
    if n > 2 :
        count += 1
    return ( count )
def print_k_almost_primes ( k , n ) :
    for i , num in enumerate ( [ 1 , 2 , n + 1 ] ) :
        if count_prime_factors ( num ) == k :
            print ( num , end = ' ' )
            i += 1
    return
def main ( ) :
    n , k = 10 , 2
    print ( 'First %d %d-almost prime numbers: ' % ( n , k ) )
    print_k_almost_primes ( k , n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1551
---> probID: geeksforgeeks_589_A
---> inputs:

---> outputs:
603


def GFG ( N , K ) :
    global combo
    combo = [ 1 ] * 50
    for i in range ( 1 , K + 1 ) :
        for j in range ( 0 , N + 1 ) :
            if j >= i :
                combo [ j ] += combo [ j - i ]
    return combo [ N ]


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553002257_8679/main.py", line 3
    sys . stdin . write

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1552
---> probID: aizu_p00233_A
---> inputs:
9
10
-10
-1944
-305432133
0
---> outputs:
9
190
10
2156
1715573947

def main ( ) :
    import sys
    sys . stdin . write

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1553
---> probID: geeksforgeeks_3656_A
---> inputs:

---> outputs:
2.5724787771376323


def GFG ( m , n ) :
    N = float ( ( abs ( m ) * abs ( n ) ) / math . sqrt ( ( abs ( m ) ** 2 ) + ( abs ( n ) ** 2 ) ) )
    return N


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1554
---> probID: codeforces_794_B
---> inputs:
3 2
---> outputs:
1.154700538379 1.632993161855

def assignment4 ( ) :
    import math
    f = open ( 'assignment4' )
    data = f . read ( )
    num = data . split ( )
    n = float ( num [ 0 ] )
    h = float ( num [ 1 ] )
    for i in range ( 1.0 , n ) :
        ans = h * math . sqrt ( i / n )
        print ( '%f ' % ans )
        if i == n - 1 :
            print ( )


---> console_out:
 
DIDN'T MATCH!! :(
 89%|████████▉ | 1554/1746 [00:36<00:04, 42.11it/s]

-------------------------------------


---> lineNum: 1555
---> probID: geeksforgeeks_4736_A
---> inputs:

---> outputs:
7


def count_bits ( n ) :
    count = 0
    while n != 0 :
        count += 1
        n >>= 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1556
---> probID: aizu_p02037_A
---> inputs:
5 8
2 2
---> outputs:
8

def main ( ) :
    import sys
    try :
        h = int ( sys . stdin . readline ( ) )
        w = int ( sys . stdin . readline ( ) )
        a = int ( sys . stdin . readline ( ) )
        b = int ( sys . stdin . readline ( ) )
        print ( h * w - ( h / a ** 2 ) * ( w / b ** 2 ) )
    except :
        print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1557
---> probID: aizu_p00366_A
---> inputs:
3
3
6
8
---> outputs:
3

def main ( ) :
    import sys
    import random
    n , max , ans = 0 , 0 , 0
    l = [ ]
    t = [ ]
    for i in range ( n ) :
        t . append ( random . randint ( 0 , max ) )
        max = max ( max , t [ i ] )
    for i in range ( 1 , max + 1 ) :
        if max % i == 0 :
            l . append ( i )
    for i in range ( n ) :
        for j in range ( len ( l ) ) :
            if l [ j ] >= t [ i ] :
                ans += l [ j ] - t [ i ]
                break
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1558
---> probID: geeksforgeeks_2117_A
---> inputs:

---> outputs:
3


def LongestSubarray ( arr , n , k ) :
    arr2 = [ ]
    for i in range ( n ) :
        arr2 . append ( arr [ i ] % k )
    current_length , max_length = 0 , 0
    for i in range ( n ) :
        current_length = 1
        for j in range ( i + 1 , n ) :
            if arr2 [ j ] == arr2 [ i ] :
                current_length += 1
            else :
                break
        max_length = max ( max_length , current_length )
        i = j
    return max_length


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553002419_3621/main.py", line 4
    T = 1 , i , j , k = 0 , 0 , 0
        ^
SyntaxError: cannot assign to literal


-------------------------------------


---> lineNum: 1559
---> probID: codeforces_570_B
---> inputs:
3 1
---> outputs:
2

def main ( ) :
    import sys
    fs = sys . stdin . fileno ( )
    T = 1 , i , j , k = 0 , 0 , 0
    n , m , l , ans , ans2 , ans3 , b , c = 0 , 0 , 0 , 0 , 0 , 0
    for tt in range ( T ) :
        n = fs . readline ( )
        m = fs . readline ( )
        if n == 1 :
            print ( 1 )
            return
        if n - m > m - 1 :
            print ( m + 1 )
        else :
            print ( m - 1 )
    import random
    random . seed ( )
    def ruffle_sort ( a ) :
        n = len ( a )
        for i in range ( n ) :
            oi , temp = random . randint ( n , i ) , a [ oi ]
            a [ oi ] = a [ i ]
            a [ i ] = temp
        a . sort ( )
    class FastScanner ( sys . stdin . readline ) :
        def readline ( ) :
            while not a :
                try :
                    a = list ( a )
                except ValueError :
                    pass
                return a [ 0 ]
            def readline ( ) :
                return int ( a )
            def read_array ( n ) :
                a = [ ]
                for i in range ( n ) :
                    a . append ( randint ( 1 , n ) )
                return a
            def readline ( ) :
                return int ( next ( ) )
    return FastScanner ( )


---> console_out:
 
DIDN'T MATCH!! :(
 89%|████████▉ | 1559/1746 [00:36<00:04, 42.33it/s]  File "./junk/1692553002445_6664/main.py", line 4
    if c in

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1560
---> probID: geeksforgeeks_5149_A
---> inputs:

---> outputs:
YES


def GFG ( s , n ) :
    hash = { }
    for c in s :
        if c in

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1561
---> probID: projecteuler_p024_A
---> inputs:

---> outputs:
2783915460

def p024 ( ) :
    print ( eval ( 'p024' ) )
    x = [ ]
    for i in range ( 10 ) :
        x . append ( i )
    for i in range ( 999999 ) :
        if not lib . next_permutation ( x ) :
            raise AssertionError
    ans = ''
    for i in x :
        ans += str ( i )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1562
---> probID: geeksforgeeks_3674_A
---> inputs:

---> outputs:
Yes


def GFG ( ) :
    if x > x1 and x < x2 and y > y1 and y < y2 :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1563
---> probID: geeksforgeeks_3676_A
---> inputs:

---> outputs:
1


def GFG ( n , points ) :
    import math
    import random
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    if math is None :
        return math
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1564
---> probID: atcoder_ABC083_C
---> inputs:
3 20
---> outputs:
3

def main ( ) :
    import sys
    import os
    import subprocess
    import sys
    try :
        import subprocess
    except :
        pass
    else :
        try :
            X = subprocess . check_output ( [ '/usr/bin/python' , '-m' , '--no-color' ] ) . strip ( )
        except :
            pass
        else :
            Y = int ( X )
            Z = Y / X
            answer = f ( Z ) + 1
            print ( answer )
    def f ( Z ) :
        t = 1
        result = 0
        while t < Z :
            t *= 2
            result += 1
        if t == Z :
            return result
        return result - 1


---> console_out:
 
DIDN'T MATCH!! :(
 90%|████████▉ | 1564/1746 [00:36<00:04, 41.73it/s]

-------------------------------------


---> lineNum: 1565
---> probID: geeksforgeeks_1298_A
---> inputs:

---> outputs:
11


def GFG ( data , n ) :
    import string
    sticks = [ 6 , 2 , 5 , 5 , 4 , 5 , 6 , 3 , 7 , 6 ]
    def count_sticks ( data , n ) :
        cnt = 0
        for c in data [ n : ] :
            cnt += ( sticks [ ord ( c ) - ord ( '0' ) ] )
        return cnt
    def main ( data ) :
        data = '56'
        n = len ( data )
        print ( count_sticks ( data , n ) )
    return '' . join ( str ( n ) for n in range ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1566
---> probID: codeforces_1635_B
---> inputs:
5
3
2 1 2
4
1 2 3 1
5
1 2 1 2 1
9
1 2 1 3 2 3 1 2 1
9
2 1 3 1 3 1 3 1 3
---> outputs:
['0\n2 1 2\n1\n1 3 3 1\n1\n1 2 2 2 1\n2\n1 2 3 3 2 3 3 2 1\n2\n2 1 3 3 3 1 1 1 3', '0\n2 1 2 \n1\n1 2 3 3 \n1\n1 2 2 2 1 \n2\n1 2 3 3 2 3 3 2 1 \n2\n2 1 3 3 3 1 3 3 3 \n']

def main ( args ) :
    import sys
    infile = sys . stdin
    outfile = sys . stdout
    t = int ( infile . readline ( ) )
    while t > 0 :
        n = int ( infile . readline ( ) )
        a = [ None ] * n
        f = open ( infile . readline ( ) , 'w' )
        for i in range ( n ) :
            a [ i ] = int ( f . readline ( ) )
        replace_next = False
        ans = 0
        for i in range ( 1 , n - 1 ) :
            if replace_next :
                a [ i ] = max ( a [ i - 1 ] , a [ i + 1 ] )
                ans += 1
                replace_next = False
            if a [ i ] > a [ i - 1 ] and a [ i ] > a [ i + 1 ] :
                replace_next = True
        if replace_next :
            a [ n - 1 ] = a [ n - 2 ]
            ans += 1
            replace_next = False
        outfile . write ( str ( ans ) )
        for i in range ( n ) :
            outfile . write ( str ( a [ i ] ) + ' ' )
        outfile . write ( '\n' )
    infile . close ( )
    outfile . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1567
---> probID: geeksforgeeks_4993_A
---> inputs:

---> outputs:
1 0 1 1 1 

def GFG ( arr , a , b ) :
    arr [ a ] ^= True
    arr [ b + 1 ] ^= True
    def process ( arr , n ) :
        for k in range ( 1 , n + 1 ) :
            arr [ k ] ^= arr [ k - 1 ]
    def result ( arr , n ) :
        for k in range ( 1 , n + 1 ) :
            if arr [ k ] == True :
                print ( '1' , end = ' ' )
            else :
                print ( '0' , end = ' ' )
    def main ( args ) :
        n , m = 5 , 3
        arr = [ False ] * ( n + 2 )
        command ( arr , 1 , 5 )
        command ( arr , 2 , 5 )
        command ( arr , 3 , 5 )
        process ( arr , n )
        result ( arr , n )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1568
---> probID: geeksforgeeks_2979_A
---> inputs:

---> outputs:
1


def most_frequent ( arr , n ) :
    arr . sort ( )
    max_count , res = 1 , arr [ 0 ]
    curr_count = 1
    for i in range ( 1 , n ) :
        if arr [ i ] == arr [ i - 1 ] :
            curr_count += 1
        else :
            if curr_count > max_count :
                max_count = curr_count
                res = arr [ i - 1 ]
            curr_count = 1
    if curr_count > max_count :
        max_count = curr_count
        res = arr [ n - 1 ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1569
---> probID: geeksforgeeks_69_A
---> inputs:

---> outputs:
12


def GFG ( data , len_ ) :
    res = 0
    last_pos = [ - 1 ] * MAX
    for i in range ( MAX ) :
        last_pos [ i ] = - 1
    for i in range ( len_ ) :
        C = ord ( data [ i ] ) - ord ( 'a' )
        if last_pos [ C ] != - 1 :
            res = max ( len_ - ( i - last_pos [ C ] - 1 ) - 1 , res )
        last_pos [ C ] = i
    return res


---> console_out:
 
DIDN'T MATCH!! :(
 90%|████████▉ | 1569/1746 [00:37<00:04, 41.81it/s]

-------------------------------------


---> lineNum: 1570
---> probID: geeksforgeeks_5070_A
---> inputs:

---> outputs:
2


def ksmallest ( arr , n , k ) :
    b = [ 0 ] * MAX
    for i in range ( n ) :
        b [ arr [ i ] ] = 1
    for j in range ( 1 , MAX ) :
        if b [ j ] != 1 :
            k -= 1
        if k != 1 :
            return j
    return sys . maxsize


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1571
---> probID: geeksforgeeks_13_A
---> inputs:

---> outputs:
Yes


def GFG ( n ) :
    while ( n // 100 ) > 0 :
        d = n % 10
        n //= 10
        n = abs ( n + ( d * 13 ) )
    return ( n % 43 == 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1572
---> probID: geeksforgeeks_15_A
---> inputs:

---> outputs:
Yes


def is_divisible ( n ) :
    import math
    while ( n // 100 ) > 0 :
        d = n % 10
        n //= 10
        n = abs ( n - ( d * 14 ) )
    return ( n % 47 == 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1573
---> probID: geeksforgeeks_16_A
---> inputs:

---> outputs:
Yes


def is_divisible ( n ) :
    import math
    while ( n // 100 ) > 0 :
        d = n % 10
        n //= 10
        n = abs ( n - ( d * 3 ) )
    return ( n % 31 == 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1574
---> probID: geeksforgeeks_18_A
---> inputs:

---> outputs:
Yes


def is_divisible ( n ) :
    import math
    while ( n // 100 ) <= 0 :
        d = n % 10
        n //= 10
        n = abs ( n - ( d * 7 ) )
    return ( n % 71 == 0 )


---> console_out:
 
DIDN'T MATCH!! :(
 90%|█████████ | 1574/1746 [00:37<00:04, 42.38it/s]

-------------------------------------


---> lineNum: 1575
---> probID: geeksforgeeks_1127_A
---> inputs:

---> outputs:
-3


def GFG ( n ) :
    total = ( n + 1 ) // 2
    odd = total * total
    return odd
def Even_Sum ( n ) :
    total = ( n ) // 2
    even = total * ( total + 1 )
    return even
def sumLtoR ( L , R ) :
    global odd_sum , even_sum
    odd_sum = Odd_Sum ( R ) - Odd_Sum ( L - 1 )
    even_sum = Even_Sum ( R ) - Even_Sum ( L - 1 )
    return even_sum - odd_sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1576
---> probID: geeksforgeeks_4618_A
---> inputs:

---> outputs:
No


def is_ratio_possible ( low_cost , up_cost , low_quant , up_quant , r ) :
    import sys
    for i in range ( low_quant , up_quant + 1 ) :
        ans = i * r
        if low_cost <= ans <= up_cost :
            return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1577
---> probID: geeksforgeeks_1328_A
---> inputs:

---> outputs:
No
Yes


def is_power_of_two ( n ) :
    if not n :
        return False
    return int ( math . ceil ( ( math . log ( n ) / math . log ( 2 ) ) ) ) == int ( math . floor ( ( ( math . log ( n ) / math . log ( 2 ) ) ) ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1578
---> probID: projecteuler_p087_A
---> inputs:

---> outputs:
1097343

def p087 ( ) :
    import numpy as np
    import numpy . fft as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import random as np
    from numpy . random import seed
    seed = np . random . randint ( 1 , 10 , size = ( 10 , 20 , 30 ) )
    seed = np . random ( seed )
    np . random . seed ( seed )
    np . random . seed ( seed )
    np . random . shuffle ( seed )
    np . random . seed ( seed )
    np . random . shuffle ( seed )
    np . random . seed ( seed )
    np . random . shuffle ( seed )
    np . random . seed ( seed )
    np . random . shuffle ( seed )
    np . random . seed ( seed )
    np . random . shuffle ( seed )
    np . random . seed ( seed )
    np . random . shuffle ( seed )
    np . random . seed ( seed )
    np . random . shuffle ( seed )
    np . random . seed ( seed )
    np . random . seed ( seed )
    np . random . shuffle ( seed )
    np . random . seed ( seed )
    np . random . seed ( seed )
    np . random . shuffle ( seed )
    np . random . seed ( seed )
    np . random . seed ( seed )
    np . random . shuffle ( seed )
    np . random . seed ( seed )
    np . random . seed ( seed )
    np . random . seed ( seed )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1579
---> probID: geeksforgeeks_1554_A
---> inputs:

---> outputs:
Longest length subsequence = 6


def long_len_sub ( arr , n ) :
    import re
    um = { }
    long_len = 0
    for i in range ( n ) :
        len = 0
        if arr [ i ] - 1 in um and len < um [ arr [ i ] - 1 ] :
            len = um [ arr [ i ] - 1 ]
        if arr [ i ] + 1 in um and len < um [ arr [ i ] + 1 ] :
            len = um [ arr [ i ] + 1 ]
        um [ arr [ i ] ] = len + 1
        if long_len < um [ arr [ i ] ] :
            long_len = um [ arr [ i ] ]
    return long_len


---> console_out:
 
DIDN'T MATCH!! :(
 90%|█████████ | 1579/1746 [00:37<00:03, 42.55it/s]

-------------------------------------


---> lineNum: 1580
---> probID: codeforces_1351_A
---> inputs:
4
1 5
314 15
-99 99
123 987
---> outputs:
6
329
0
1110

def main ( ) :
    import sys
    s = sys . stdin . read ( )
    t = sys . maxsize
    while t > 0 :
        a = s . find ( ' ' )
        b = s . find ( ' ' )
        print ( a + b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1581
---> probID: geeksforgeeks_3002_A
---> inputs:

---> outputs:
Sum of all elements: 1023


def calculate_sum ( n ) :
    import math
    sum = 0
    sum = 1 << n
    return ( sum - 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1582
---> probID: geeksforgeeks_3001_A
---> inputs:

---> outputs:
Sum of all elements: 1023


def calculate_sum ( n ) :
    import math
    sum = 0
    for row in range ( n ) :
        sum = sum + ( 1 << row )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1583
---> probID: geeksforgeeks_4905_A
---> inputs:

---> outputs:
Maximum difference is 98


def max_diff ( arr , n ) :
    diff = arr [ 1 ] - arr [ 0 ]
    curr_sum = diff
    max_sum = curr_sum
    for i in range ( 1 , n - 1 ) :
        diff = arr [ i + 1 ] - arr [ i ]
        if curr_sum > 0 :
            curr_sum += diff
        else :
            curr_sum = diff
        if curr_sum > max_sum :
            max_sum = curr_sum
    return max_sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1584
---> probID: aizu_p00667_A
---> inputs:
1
11
111111
111111111111
12345
11111111119999999999
11111111113333333333
11111111118888888888
11111111112222222222111111111
11111111110000000000444444444
11224111122411
888888888888999999999999888888888888999999999999999999
666666666666666777333333333338888888888
1111114444441111111444499999931111111222222222222888111111115555
#
---> outputs:
1
2
32
1856
1
230400
230400
156480
56217600
38181120
128
26681431
61684293
40046720

def main ( ) :
    import string
    import math
    import random
    import sys
    mod = 100000007
    def solve ( len , loop ) :
        ret = 0
        dp = [ 0 ] * len + 1
        dp [ 0 ] = 1
        for i in range ( 1 , len + 1 ) :
            for j in range ( 1 , min ( loop , i ) + 1 ) :
                dp [ i ] += dp [ i - j ]
            dp [ i ] %= mod
            if ( len - i ) % loop == 0 :
                ret += dp [ i ]
                ret %= mod
        return ret
    def solve ( ) :
        ans = 1
        prev = 0
        for i in range ( 1 , len ( line ) ) :
            if line [ i ] != line [ i - 1 ] :
                ans *= solve ( i - prev , loop ( line [ prev ] ) )
                ans %= mod
                prev = i
        ans *= solve ( len ( line ) - prev , loop ( line [ prev ] ) )
        ans %= mod
        return int ( ans )
    def loop ( c ) :
        return 3 if c in ( '8' , '0' ) else 5
    def main ( ) :
        while True :
            line = input ( )
            if line == '#' :
                break
            print ( solve ( ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(
 91%|█████████ | 1584/1746 [00:37<00:03, 42.18it/s]

-------------------------------------


---> lineNum: 1585
---> probID: geeksforgeeks_3592_A
---> inputs:

---> outputs:
3


def count_pairs ( n ) :
    num = ( ( n // 2 ) + 1 )
    max = n % num
    count = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , n + 1 ) :
            val = ( ( n % i ) % j ) % n
            if val == max :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1586
---> probID: codeforces_313_B
---> inputs:
......
4
3 4
2 3
1 6
2 6
---> outputs:
1
1
5
4

def main ( ) :
    import sys
    f = sys . stdin
    sys . stdout = sys . stderr
    f = Fast ( )
    f . sol ( f , sys . stdout )
    sys . stdout . close ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1587
---> probID: aizu_p00426_A
---> inputs:
3 10
0
1 1
2 2 3
4 20
2 1 2
1 3
1 4
2 5
2 1 2
0
0
3 3
0
1 1
2 2 3
0 0
---> outputs:
9
3
0
-1

def main ( ) :
    import sys
    import os
    import subprocess
    import sys
    try :
        subprocess . check_call ( [ '/usr/bin/env' , '-v' ] )
    except :
        pass
    else :
        sys . stderr . write ( 'Error: %s\n' % sys . exc_info ( ) [ 0 ] )
    while True :
        n = sys . stdin . read ( 1 )
        m = sys . stdin . read ( 1 )
        if ( n | m ) == 0 :
            break
        pow3 = [ 1 ] * n + [ 0 ]
        pow3 [ 0 ] = 1
        for i in range ( 1 , n + 1 ) :
            pow3 [ i ] = pow3 [ i - 1 ] * 3
        c = [ 0 ] * n
        for i in range ( 3 ) :
            a = sys . stdin . read ( 1 )
            for j in range ( a , 0 , - 1 ) :
                k = sys . stdin . read ( 1 )
                c [ n - k ] = i
        p = 0
        x = 0
        for i in range ( n - 1 , - 1 , - 1 ) :
            d = abs ( p - c [ i ] )
            x += pow3 [ i ] * d
            if d == 1 :
                p = 2 - p
        y = pow3 [ n ] - 1 - x
        if x > y :
            x = y
        print ( - 1 if x > m else x )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1588
---> probID: geeksforgeeks_1352_A
---> inputs:

---> outputs:
1 2 9 and 3 4 5 
1 2 4 5 and 3 9 
3 9 and 1 2 4 5 
3 4 5 and 1 2 9 


def GFG ( g1 , a , g2 , b ) :
    import sys
    MAX = 100000
    def print ( g1 , a , g2 , b ) :
        for i in range ( a ) :
            print ( g1 [ i ] , end = ' ' )
        print ( 'and ' , end = ' ' )
        for i in range ( b ) :
            print ( g2 [ i ] , end = ' ' )
        print ( )
    def checksum ( g1 , a , g2 , b ) :
        i , x = 0 , 0
        for i , x in enumerate ( g1 ) :
            x += g1 [ i ]
        for i in range ( b ) :
            x -= g2 [ i ]
        return ( x == 0 )
    def formgroups ( arr , x , g1 , a , g2 , b , n ) :
        if x == n :
            if checksum ( g1 , a , g2 , b ) :
                print ( g1 , a , g2 , b )
            return
        g1 [ a ] = arr [ x ]
        formgroups ( arr , x + 1 , g1 , a + 1 , g2 , b , n )
        g2 [ b ] = arr [ x ]
        formgroups ( arr , x + 1 , g1 , a , g2 , b + 1 , n )
    def main ( ) :
        arr = [ 1 , 2 , 3 , 9 , 4 , 5 ]
        n = len ( arr )
        g1 = [ 0 ] * MAX
        g2 = [ 0 ] * MAX
        formgroups ( arr , 0 , g1 , 0 , g2 , 0 , n )
    return '' . join ( g )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1589
---> probID: codeforces_189_A
---> inputs:
5 5 3 2
---> outputs:
2

def main ( args ) :
    import numpy as np
    import numpy . random
    n = len ( args )
    a = np . zeros ( ( 3 , n + 1 ) )
    a [ 0 ] = args [ 0 ]
    a [ 1 ] = args [ 1 ]
    a [ 2 ] = args [ 2 ]
    a . sort ( )
    max = 0
    d = np . zeros ( n + 1 )
    d [ - 500 : ] = 0
    d [ 0 ] = 0
    for i in range ( 0 , n + 1 ) :
        for j in range ( 3 ) :
            if i - a [ j ] >= 0 and d [ i - a [ j ] ] != - 1 :
                d [ i ] = max ( d [ i ] , d [ i - a [ j ] ] + 1 )
        print ( d [ n ] )


---> console_out:
 
DIDN'T MATCH!! :(
 91%|█████████ | 1589/1746 [00:37<00:03, 42.26it/s]

-------------------------------------


---> lineNum: 1590
---> probID: geeksforgeeks_993_A
---> inputs:

---> outputs:
4


def max_subseq ( vec , n ) :
    import numpy as np
    suffix = 0
    for i in range ( n - 1 , - 1 , - 1 ) :
        if vec [ i ] == 1 :
            suffix += 1
            vec [ i ] = suffix
    res = 0
    zero = 0
    for i in range ( n ) :
        if vec [ i ] == 0 :
            zero += 1
        if vec [ i ] > 0 :
            res = max ( res , zero + vec [ i ] )
    return max ( res , zero )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1591
---> probID: geeksforgeeks_587_A
---> inputs:

---> outputs:
4


def count_paths ( maze ) :
    import math
    R = 4
    C = 4
    def count_paths ( maze ) :
        if maze [ 0 ] [ 0 ] == - 1 :
            return 0
        for i in range ( R ) :
            if maze [ i ] [ 0 ] == 0 :
                maze [ i ] [ 0 ] = 1
            else :
                break
        for i in range ( 1 , C ) :
            if maze [ 0 ] [ i ] == 0 :
                maze [ 0 ] [ i ] = 1
            else :
                break
        for i in range ( 1 , R ) :
            for j in range ( 1 , C ) :
                if maze [ i ] [ j ] == - 1 :
                    continue
                if maze [ i - 1 ] [ j ] > 0 :
                    maze [ i ] [ j ] = ( maze [ i ] [ j ] + maze [ i - 1 ] [ j ] )
                if maze [ i ] [ j - 1 ] > 0 :
                    maze [ i ] [ j ] = ( maze [ i ] [ j ] + maze [ i ] [ j - 1 ] )
        return ( maze [ R - 1 ] [ C - 1 ] if maze [ R - 1 ] [ C - 1 ] > 0 else 0 )
    def main ( ) :
        maze = [ [ 0 , 0 , 0 , 0 ] , [ 0 , - 1 , 0 , 0 ] , [ - 1 , 0 , 0 , 0 ] , [ 0 , 0 , 0 , 0 ] ]
        print ( count_paths ( maze ) )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1592
---> probID: geeksforgeeks_2139_A
---> inputs:

---> outputs:
Not a Prime Number


def is_prime ( N ) :
    import math
    is_prime = True
    arr = [ 7 , 11 , 13 , 17 , 19 , 23 , 29 , 31 ]
    if N < 2 :
        is_prime = False
    if N % 2 == 0 or N % 3 == 0 or N % 5 == 0 :
        is_prime = False
    for i in range ( 0 , math . sqrt ( N ) , 30 ) :
        for c in arr :
            if c > math . sqrt ( N ) :
                break
            else :
                if N % ( c + i ) == 0 :
                    is_prime = False
                    break
            if not is_prime :
                break
    if is_prime :
        print ( "Prime Number" )
    else :
        print ( "Not a Prime Number" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1593
---> probID: atcoder_ABC108_B
---> inputs:
0 1 1 0
---> outputs:
2 1 1 2

def main ( ) :
    import sys
    try :
        x1 = sys . stdin . readline ( )
        y1 = sys . stdin . readline ( )
        x2 = sys . stdin . readline ( )
        y2 = sys . stdin . readline ( )
        x3 = x2 + ( y1 - y2 )
        y3 = y2 - ( x1 - x2 )
        x4 = x1 - ( y2 - y1 )
        y4 = y1 + ( x2 - x1 )
        print ( '%d %d %d %d' % ( x3 , y3 , x4 , y4 ) )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1594
---> probID: geeksforgeeks_3934_A
---> inputs:

---> outputs:
The length of the LPS is 5


def GFG ( x , y ) : return ( x if x > y else y )
def lps ( seq , i , j ) :
    if i == j :
        return 1
    if seq [ i ] == seq [ j ] and i + 1 == j :
        return 2
    if seq [ i ] == seq [ j ] :
        return lps ( seq , i + 1 , j - 1 ) + 2
    return max ( lps ( seq , i , j - 1 ) , lps ( seq , i + 1 , j ) )
def main ( ) :
    seq = 'GEEKSFORGEEKS'
    n = len ( seq )
    print ( 'The length of the LPS is %d' % lps ( seq [ : n - 1 ] ) )


---> console_out:
 
DIDN'T MATCH!! :(
 91%|█████████▏| 1594/1746 [00:37<00:03, 42.28it/s]

-------------------------------------


---> lineNum: 1595
---> probID: geeksforgeeks_3911_A
---> inputs:

---> outputs:
Length of the substring is 6


def find_length ( data , n ) :
    ans = 0
    for i in range ( 0 , n - 2 + 1 ) :
        l , r = i , i + 1
        lsum , rsum = 0 , 0
        while r < n and l >= 0 :
            lsum += ord ( data [ l ] ) - ord ( '0' )
            rsum += ord ( data [ r ] ) - ord ( '0' )
            if lsum == rsum :
                ans = max ( ans , r - l + 1 )
            l -= 1
            r += 1
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1596
---> probID: geeksforgeeks_3192_A
---> inputs:

---> outputs:
D E F A B C 

def GfG ( a , n , ind ) :
    for i in range ( ind , n + ind ) :
        print ( a [ ( i % n ) ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1597
---> probID: geeksforgeeks_3191_A
---> inputs:

---> outputs:
D E F A B C 

def main ( argc ) :
    import string
    import sys
    class GfG ( string ) :
        def __init__ ( self ) :
            self . a = list ( ( 2 * n ) )
            for i in range ( n ) :
                self . b [ n + i ] = a [ i ]
            for i in range ( self . ind , self . n + self . ind ) :
                print ( '%s ' % self . b [ i ] , end = ' ' )
        def __init__ ( self ) :
            self . a = list ( ( 'A' , 'B' , 'C' , 'D' , 'E' , 'F' ) )
            n = 6
            self . a = a [ n : n + 3 ]
        def __str__ ( self ) :
            return self . a [ n : n + 3 ]
    return GfG ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1598
---> probID: codeforces_962_B
---> inputs:
5 1 1
*...*
---> outputs:
2

def er42b ( ) :
    import string
    n , a , b = list ( string . ascii_lowercase ) , list ( string . ascii_uppercase ) , list ( string . ascii_lowercase )
    s = '' . join ( s )
    ans = a + b
    flip = 1 if a > b else - 1
    for i in range ( n ) :
        if not a and not b :
            break
        if s [ i ] == '*' :
            flip = 1 if a > b else - 1
        else :
            if flip == 1 :
                a = ( 0 if a == 0 else a - 1 )
            else :
                b = ( 0 if b == 0 else b - 1 )
            flip *= - 1
    print ( ans - a - b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1599
---> probID: aizu_p01731_A
---> inputs:
1
0
icpc
---> outputs:
icpc

def main ( ) :
    import sys
    import os
    import os
    import sys
    import os
    import sys
    n = len ( sys . argv )
    id = sys . argv [ 1 ]
    root = Node ( id = 1 , depth = 0 , name = sys . argv [ 2 ] )
    for i in range ( 1 , n ) :
        target_id = sys . argv [ 2 ]
        parent = root . find_node ( target_id )
        parent . children . append ( Node ( id = 1 , depth = parent . depth + 1 , name = sys . argv [ 3 ] ) )
    root . print_contents ( )
    sys . exit ( 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 92%|█████████▏| 1599/1746 [00:37<00:03, 42.36it/s]  File "./junk/1692553003393_5171/main.py", line 72
    for
      ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1600
---> probID: codeforces_534_B
---> inputs:
5 6
4 2
---> outputs:
26

def main ( ) :
    import sys
    import numpy as np
    import numpy . fft as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    import numpy . random as np
    np . random . seed ( 0 )
    import numpy . random as np
    import numpy . random as np
    np . random . seed ( 0 )
    import numpy . random as np
    np . random . seed ( 0 )
    import numpy . random as np
    np . random . seed ( 0 )
    import numpy . random as np
    np . random . seed ( 0 )
    np . random . seed ( 1 )
    np . random . seed ( 0 )
    np . random . seed ( 0 )
    dp = np . zeros ( t )
    for

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1601
---> probID: codeforces_777_B
---> inputs:
3
123
321
---> outputs:
0
2

def main ( ) :
    import sys
    try :
        n = len ( sys . stdin )
        a , b = sys . stdin . read ( ) . split ( ' ' )
        a . sort ( )
        b . sort ( )
        j = n - 1
        for i in range ( n - 1 , - 1 , - 1 ) :
            if b [ j ] >= a [ i ] :
                j -= 1
        print ( j + 1 )
        j = 0
        for i in range ( n ) :
            if b [ i ] > a [ j ] :
                j += 1
        print ( j , end = ' ' )
    except :
        pass


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1602
---> probID: atcoder_ARC094_A
---> inputs:
10 34 21
---> outputs:
20


def main ( ) :
    import sys
    import numpy as np
    import numpy . testing . ufuncs as ufuncs
    num = np . zeros ( 3 )
    num [ 0 ] = ufuncs [ 0 ]
    num [ 1 ] = ufuncs [ 1 ]
    num [ 2 ] = ufuncs [ 2 ]
    num . sort ( )
    dis1 = num [ 2 ] - num [ 0 ]
    dis2 = num [ 2 ] - num [ 1 ]
    ans = 0
    if dis1 % 2 == 0 and dis2 % 2 == 0 :
        ans = dis1 // 2 + dis2 // 2
    elif dis1 % 2 != 0 and dis2 % 2 != 0 :
        ans = dis1 // 2 + dis2 // 2 + 1
    else :
        ans = dis1 // 2 + dis2 // 2 + 2
    print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1603
---> probID: codeforces_1734_B
---> inputs:
3
1
2
3
---> outputs:
1 
1 
1 1 
1 
1 1 
1 0 1

def main ( ) :
    import sys
    try :
        T = int ( sys . stdin . read ( ) )
    except ValueError :
        pass
    while T > 0 :
        T -= 1
        n = sys . stdin . read ( )
        for i in range ( 1 , n + 1 ) :
            for j in range ( 1 , i + 1 ) :
                if j == 1 or i == j :
                    print ( 1 , end = ' ' )
                else :
                    print ( 0 , end = ' ' )
            print ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1604
---> probID: geeksforgeeks_2442_A
---> inputs:

---> outputs:
10000011
11

def bin ( n = None ) :
    if n > 1 :
        bin ( n >> 1 )
    print ( "%d" % ( n & 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 92%|█████████▏| 1604/1746 [00:37<00:03, 42.43it/s]

-------------------------------------


---> lineNum: 1605
---> probID: projecteuler_p001_A
---> inputs:

---> outputs:
233168

def p001 ( ) :
    print ( eval ( 'p001()' ) )
    def run ( ) :
        sum = 0
        for i in range ( 1000 ) :
            if i % 3 == 0 or i % 5 == 0 :
                sum += i
        return str ( sum )
    return run


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1606
---> probID: codeforces_1220_A
---> inputs:
4
ezor
---> outputs:
0

def main ( ) :
    import string
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        str = string . strip ( sys . stdin . readline ( ) )
        s = ""
        s1 = ""
        for c in str :
            if c == "n" :
                s += "1 "
            if c == "z" :
                s1 += "0 "
        print ( s + s1 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553003558_3708/main.py", line 8
    print

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1607
---> probID: atcoder_ABC076_A
---> inputs:
2002
2017
---> outputs:
2032

def solve ( ) :
    import sys
    try :
        R , G = sys . stdin . read ( ) . split ( 'SPACETOKEN' )
        print ( ( 2 * G ) - R )
        sys . stdin . close ( )
    except :
        print

---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553003582_6944/main.py", line 51
    from math import
                   ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1608
---> probID: geeksforgeeks_193_A
---> inputs:

---> outputs:
6


def Circular ( n ) :
    import sys
    from math import pi
    from math import sin , cos , pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import pi
    from math import

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1609
---> probID: geeksforgeeks_4321_A
---> inputs:

---> outputs:
9408
512


def product_diagonals ( arr , n ) :
    product = 1
    for i in range ( n ) :
        product = product * arr [ i ] [ i ]
        product = product * arr [ i ] [ n - i - 1 ]
    if n % 2 == 1 :
        product = product // arr [ n // 2 ] [ n // 2 ]
    return product


---> console_out:
 
DIDN'T MATCH!! :(
 92%|█████████▏| 1609/1746 [00:37<00:03, 42.42it/s]

-------------------------------------


---> lineNum: 1610
---> probID: aizu_p00219_A
---> inputs:
15
2
6
7
0
1
9
8
7
3
8
9
4
8
2
2
3
9
1
5
0
---> outputs:
*
*
***
*
*
-
*
**
***
**
-
*
-
-
-
*
-
-
-
*

def main ( ) :
    import string
    import math
    import sys
    for _ in range ( 10 ) :
        n = int ( sys . stdin . readline ( ) )
        if n == 0 :
            break
        map = [ 0 ] * 10
        for i in range ( n ) :
            map [ sys . stdin . readline ( ) ] += 1
        for i in range ( 10 ) :
            ans = '-'
            if map [ i ] != 0 :
                ch = list ( map [ i ] )
                ch [ i ] = '*'
                ans = ch [ i ]
            print ( ans )


---> console_out:
 
MATCHED!! :D


-------------------------------------


---> lineNum: 1611
---> probID: geeksforgeeks_4166_A
---> inputs:

---> outputs:
Second most frequent char is g


def GFG ( data ) :
    NO_OF_CHARS = 256
    count = [ 0 ] * NO_OF_CHARS
    for c in data :
        ( count [ ord ( c ) ] )
    first , second = 0 , 0
    for i in range ( NO_OF_CHARS ) :
        if count [ i ] > count [ first ] :
            second = first
            first = i
        elif count [ i ] > count [ second ] and count [ i ] != count [ first ] :
            second = i
    return chr ( second )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1612
---> probID: aizu_p00096_A
---> inputs:
2
3
35
---> outputs:
10
20
8436

def main ( ) :
    import sys
    import math
    dp = np . zeros ( ( 5 , 4001 ) )
    dp [ 0 ] [ 0 ] = 1
    for i in range ( 1 , 5 ) :
        for ii in range ( 0 , 1000 * i + 1 ) :
            for iii in range ( max ( 0 , ii - 1000 ) , ii + 1 ) :
                dp [ i ] [ ii ] += dp [ i - 1 ] [ iii ]
    for i in range ( 4 ) :
        print ( dp [ 4 ] [ i ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1613
---> probID: geeksforgeeks_1627_A
---> inputs:

---> outputs:
Modified Array : 
[2, 4, 5, 6, 9, 8, 7, 3, 1]


def my_sort ( arr = None ) :
    import sys
    n = len ( arr )
    arr . sort ( )
    arr . sort ( reverse = True )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1614
---> probID: geeksforgeeks_2360_A
---> inputs:

---> outputs:
3


def minflip ( arr1 , arr2 , arr3 , p , q , n ) :
    flip = 0
    for i in range ( n ) :
        if arr1 [ i ] > 0 ^ arr2 [ i ] > 0 != arr3 [ i ] > 0 :
            flip += 1
    return ( flip if flip <= p + q else - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
 92%|█████████▏| 1614/1746 [00:38<00:03, 42.50it/s]

-------------------------------------


---> lineNum: 1615
---> probID: geeksforgeeks_5010_A
---> inputs:

---> outputs:
Sum is 2.283333


def GFG ( n ) :
    import sys
    import math
    s = 0.0
    for i in range ( 1 , n + 1 ) :
        s = s + 1 / i
    return s


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1616
---> probID: geeksforgeeks_4866_A
---> inputs:

---> outputs:
1 2 3 6 8 9 7 5 4 0 

def bitonic_generator ( arr , n ) :
    import numpy as np
    evenarr = [ ]
    oddarr = [ ]
    for i in range ( n ) :
        if i % 2 != 1 :
            evenarr . append ( arr [ i ] )
        else :
            oddarr . append ( arr [ i ] )
    evenarr . sort ( )
    oddarr . sort ( reverse = True )
    i = 0
    for j in evenarr :
        arr [ i ] += 1
    for j in oddarr :
        arr [ i ] += 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1617
---> probID: geeksforgeeks_542_A
---> inputs:

---> outputs:
8


def count_pairs ( arr , n ) :
    count = 0
    right , left = 0 , 0
    visited = [ False ] * n
    for i in range ( n ) :
        visited [ i ] = False
    while right < n :
        while right < n and not visited [ arr [ right ] ] :
            count += ( right - left )
            visited [ arr [ right ] ] = True
            right += 1
        while left < right and ( right != n and visited [ arr [ right ] ] ) :
            visited [ arr [ left ] ] = False
            left += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1618
---> probID: leetcode_572_A
---> inputs:

---> outputs:
true

def preorder ( root_data ) :
    import string
    class TreeNode ( int ) :
        def __init__ ( self , root_data ) :
            self . val = root_data
            self . left = None
            self . right = None
    class Solution ( object ) :
        trees = set ( )
        def isSubtree ( self , s , t ) :
            tree1 = self . preorder ( s , True )
            tree2 = self . preorder ( t , True )
            return tree1 . find ( tree2 ) >= 0
        def preorder ( self , t , left ) :
            if t is None :
                if left :
                    return 'lnull'
                else :
                    return 'rnull'
            return '#%d %s %s' % ( t . val , self . preorder ( t . left , True ) , self . preorder ( t . right , False ) )
    def main ( ) :
        sObj = Solution ( )
        root = TreeNode ( 3 )
        root . left = TreeNode ( 4 )
        root . right = TreeNode ( 5 )
        root . left . left = TreeNode ( 1 )
        root . left . right = TreeNode ( 2 )
        subRoot = TreeNode ( 4 )
        subRoot . left = TreeNode ( 1 )
        subRoot . right = TreeNode ( 2 )
        out = sObj . isSubtree ( root , subRoot )
        print ( out )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553003837_7231/main.py", line 11
    return dp [ idx ] [ diff ] = ans % MOD
                               ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1619
---> probID: geeksforgeeks_3925_A
---> inputs:

---> outputs:
3


def GFG ( idx , diff , N , M , K ) :
    global dp
    if idx > N :
        if diff == K :
            return 1
        return 0
    if dp [ idx ] [ diff ] != - 1 :
        return dp [ idx ] [ diff ]
    ans = solve ( idx + 1 , diff , N , M , K )
    ans += ( M - 1 ) * solve ( idx + 1 , diff + 1 , N , M , K )
    return dp [ idx ] [ diff ] = ans % MOD


---> console_out:
 
DIDN'T MATCH!! :(
 93%|█████████▎| 1619/1746 [00:38<00:02, 42.81it/s]

-------------------------------------


---> lineNum: 1620
---> probID: projecteuler_p222_A
---> inputs:

---> outputs:
1590933

def p222 ( ) :
    print ( eval ( 'p222()' ) )
    global sphere_radii
    sphere_radii = [ ( i + 30 ) * 1000 for i in range ( 21 ) ]
    min_length = [ None ] * [ 1 << len ( sphere_radii ) ]
    min = float ( 'inf' )
    for i in range ( len ( sphere_radii ) ) :
        min = min ( find_minimum_length ( i , ( 1 << len ( sphere_radii ) ) - 1 ) + sphere_radii [ i ] , min )
    return str ( round ( min ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1621
---> probID: aizu_p00003_A
---> inputs:
3
4 3 5
4 3 6
8 8 8
---> outputs:
YES
NO
NO

def main ( args ) :
    import sys
    sides = [ 0 ] * 3
    judge = False
    for i in range ( len ( args ) ) :
        line = args [ i ]
        sides [ i ] = int ( line )
    for i in range ( n ) :
        line = args [ i ]
        tmp = line . split ( )
        for j in range ( len ( sides ) ) :
            sides [ j ] = int ( tmp [ j ] )
            sides [ j ] *= sides [ j ]
        for j in range ( len ( sides ) ) :
            if sides [ j % 3 ] == sides [ ( j + 1 ) % 3 ] + sides [ ( j + 2 ) % 3 ] :
                judge = True
                break
            else :
                judge = False
        Answer ( judge )
    def Answer ( j ) :
        if j :
            print ( "YES" )
        else :
            print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1622
---> probID: geeksforgeeks_1436_A
---> inputs:

---> outputs:
7


def get_total_xor_of_subarray_xors ( arr , N ) :
    import numpy as np
    if N % 2 == 0 :
        return 0
    res = 0
    for i in range ( 0 , N , 2 ) :
        res ^= arr [ i ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1623
---> probID: geeksforgeeks_4575_A
---> inputs:

---> outputs:
7


def get_total_xor_of_subarray_xors ( arr , N ) :
    res = 0
    for i in range ( N ) :
        freq = ( i + 1 ) * ( N - i )
        if freq % 2 == 1 :
            res = res ^ arr [ i ]
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1624
---> probID: codeforces_591_A
---> inputs:
100
50
50
---> outputs:
50

def main ( ) :
    import sys
    try :
        x = sys . stdin . read ( )
    except AttributeError :
        pass
    l , p , q = x . strip ( ) . split ( ' ' )
    print ( ( p * l ) / ( p + q ) )


---> console_out:
 
DIDN'T MATCH!! :(
 93%|█████████▎| 1624/1746 [00:38<00:02, 43.12it/s]

-------------------------------------


---> lineNum: 1625
---> probID: codeforces_1300_B
---> inputs:
3
1
1 1
3
6 5 4 1 2 3
5
13 4 20 13 2 5 8 3 17 16
---> outputs:
0
1
5

def main ( ) :
    import sys
    import math
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    arr = [ ]
    for i in range ( 2 * n ) :
        arr . append ( math . pi * ( 2 * n - i ) )
    arr . sort ( )
    print ( abs ( arr [ n ] - arr [ n - 1 ] ) )
    t -= 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1626
---> probID: codeforces_131_B
---> inputs:
5
-3 3 0 0 3
---> outputs:
3

def main ( ) :
    import sys
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    if math is None :
        return math
    if math is None :
        return math . nan
    elif math is None :
        return math . nan
    elif math is None :
        return math . nan
    elif math is None :
        return math . nan
    elif math is None :
        return math . nan
    elif math is None :
        return math . nan
    elif math is None :
        return math . nan
    elif math is None :
        return math . nan
    else :
        return math . nan


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1627
---> probID: codeforces_95_A
---> inputs:
3
bers
ucky
elu
PetrLoveLuckyNumbers
t
---> outputs:
PetrLovtTttttNumtttt

def CF95A ( ) :
    import sys
    class CF95A ( sys . stdout , True ) :
        def __init__ ( self ) :
            sys . stdout . write ( '' )
            self . flush ( )
    with open ( '' , 'rb' ) as f :
        def main ( * args , ** kwargs ) :
            o = CF95A ( )
            o . main ( * args , ** kwargs )
            o . flush ( )
        def compare ( aa , i , bb , j , m ) :
            while m > 0 :
                a = aa [ i ] . upper ( )
                b = bb [ j ] . upper ( )
                if a != b :
                    return a - b
                i += 1
                j += 1
            return 0
        def main ( * args , ** kwargs ) :
            n = len ( f )
            ss = [ ]
            for i in range ( n ) :
                ss . append ( f . read ( n ) )
            cc = list ( args )
            m = len ( cc )
            c = c . upper ( )
            c_ = c . upper ( )
            a = 'b' if c == 'a' else 'a'
            a_ = a . upper ( )
            lucky = [ False ] * m
            for j in range ( m ) :
                for i in range ( n ) :
                    l = len ( ss [ i ] )
                    if m - j >= l and compare ( cc , j , ss [ i ] , 0 , l ) == 0 :
                        for h in range ( l ) :
                            lucky [ j + h ] = True
                for j in range ( m ) :
                    if lucky [ j ] :
                        if cc [ j ] . lower ( ) == c :
                            cc [ j ] = a_ if cc [ j ] . isupper ( ) else a
                        else :
                            cc [ j ] = c_ if cc [ j ] . isupper ( ) else c
            print ( cc )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1628
---> probID: atcoder_ABC098_C
---> inputs:
5
WEEWW
---> outputs:
1

def main ( ) :
    import string
    try :
        a = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    c = list ( sys . stdin . readlines ( ) )
    w = [ 0 ] * ( a + 1 )
    e = [ 0 ] * ( a + 1 )
    min = a
    for i in range ( 1 , a + 1 ) :
        if c [ i - 1 ] == 'W' :
            w [ i ] += 1
        else :
            e [ i ] += 1
        w [ i ] += w [ i - 1 ]
        e [ i ] += e [ i - 1 ]
    for i in range ( 1 , a + 1 ) :
        min = min ( min , w [ i - 1 ] + e [ a ] - e [ i ] )
    print ( min )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1629
---> probID: codeforces_1213_A
---> inputs:
3
1 2 3
---> outputs:
1

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        even = 0
        odd = 0
        for i in range ( n ) :
            num1 = sys . stdin . readline ( )
            if num1 % 2 == 0 :
                even += 1
            else :
                odd += 1
        if even > odd :
            print ( odd )
        else :
            print ( even )
    except :
        print ( 'No such file or directory' )


---> console_out:
 
DIDN'T MATCH!! :(
 93%|█████████▎| 1629/1746 [00:38<00:02, 42.82it/s]

-------------------------------------


---> lineNum: 1630
---> probID: aizu_p00222_A
---> inputs:
13
14
15
16
17
18
19
20
10000
0
---> outputs:
13
13
13
13
13
13
19
19
9439

def do_it ( ) :
    import sys
    import os
    import math
    import random
    MAX = 10000000
    prime = [ False ] * ( MAX + 1 )
    for i in range ( 3 , MAX + 1 , 2 ) :
        prime [ i ] = True
    for i in range ( 3 , MAX + 1 , 2 ) :
        if prime [ i ] :
            for j in range ( i * 3 , MAX + 1 , 2 ) :
                prime [ j ] = False
    n = random . randint ( 0 , 1 )
    while n != 0 :
        if n % 2 == 0 :
            n -= 1
        for i in range ( n , 13 , - 2 ) :
            if prime [ i ] and prime [ i - 2 ] and prime [ i - 6 ] and prime [ i - 8 ] :
                print ( i )
                break
        n = random . randint ( 0 , 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1631
---> probID: codeforces_705_B
---> inputs:
3
1 2 3
---> outputs:
2
1
1

def B_Spider_Man ( ) :
    import sys
    import string
    import random
    import sys
    class B_Spider_Man ( object ) :
        def __init__ ( self ) :
            try :
                s = list ( sys . stdin . readline ( ) . split ( ) )
            except ValueError :
                pass
            else :
                return s
        def __next__ ( self ) :
            while not s or not s :
                try :
                    s . next ( )
                except ValueError :
                    pass
                else :
                    pass
            return s [ 0 ]
        def __next__ ( self ) :
            return int ( self . __next__ )
        def __next__ ( self ) :
            return int ( self . __next__ )
        def __next__ ( self ) :
            return int ( self . __next__ )
        def __next__ ( self ) :
            return int ( self . __next__ )
        def __next__ ( self ) :
            return float ( self . __next__ )
    return B_Spider_Man ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1632
---> probID: geeksforgeeks_4496_A
---> inputs:

---> outputs:
Yes


def power_of_two ( n ) :
    import re
    return ( ( n & n - 1 ) == 0 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1633
---> probID: geeksforgeeks_961_A
---> inputs:

---> outputs:
42


def minimum_cost_of_breaking ( X = None , Y = None , m = None , n = None ) :
    res = 0
    X . sort ( reverse = True )
    Y . sort ( reverse = True )
    hzntl , vert = 1 , 1
    i , j = 0 , 0
    while i < m and j < n :
        if X [ i ] > Y [ j ] :
            res += X [ i ] * vert
            hzntl += 1
            i += 1
        else :
            res += Y [ j ] * hzntl
            vert += 1
            j += 1
    total = 0
    while i < m :
        total += X [ i ]
        i += 1
    res += total * vert
    total = 0
    while j < n :
        total += Y [ j ]
        j += 1
    res += total * hzntl
    return res


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553004186_3380/main.py", line 15
    print ( " = %d" % count_pairs ( G , L ) , end = '   &   LCM   % d " % count_pairs ( G , L ) )
                                                                                                ^
SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1634
---> probID: geeksforgeeks_1335_A
---> inputs:

---> outputs:
Total possible pair with GCD  2 & LCM  12 =  4


def gcd ( a , b ) :
    if not a :
        return b
    return gcd ( b % a , a )
def count_pairs ( G , L ) :
    count = 0
    p = G * L
    for a in range ( 1 , L + 1 ) :
        if ( p % a == 0 ) and gcd ( a , p // a ) == G :
            count += 1
    return count
def main ( ) :
    G , L = 2 , 12
    print ( "Total possible pair with GCD %d" % G , end = ' & LCM %d' % L )
    print ( " = %d" % count_pairs ( G , L ) , end = '   &   LCM   % d " % count_pairs ( G , L ) )


---> console_out:
 
DIDN'T MATCH!! :(
 94%|█████████▎| 1634/1746 [00:38<00:02, 42.82it/s]

-------------------------------------


---> lineNum: 1635
---> probID: geeksforgeeks_2113_A
---> inputs:

---> outputs:
F(5) is 7


def multiply ( a , b ) :
    mul = np . zeros ( ( 3 , 3 ) )
    for i in range ( 3 ) :
        for j in range ( 3 ) :
            mul [ i ] [ j ] = 0
            for k in range ( 3 ) :
                mul [ i ] [ j ] += a [ i ] [ k ] * b [ k ] [ j ]
    for i in range ( 3 ) :
        for j in range ( 3 ) :
            a [ i ] [ j ] = mul [ i ] [ j ]
    def power ( F , n ) :
        M = np . array ( [ [ 1 , 1 , 1 ] , [ 1 , 0 , 0 ] , [ 0 , 1 , 0 ] ] )
        if n == 1 :
            return F [ 0 ] [ 0 ] + F [ 0 ] [ 1 ]
        power ( F , n // 2 )
        power ( F , F )
        if n % 2 :
            power ( F , M )
        return F [ 0 ] [ 0 ] + F [ 0 ] [ 1 ]
    def findNthTerm ( n ) :
        F = np . array ( [ [ 1 , 1 , 1 ] , [ 1 , 0 , 0 ] , [ 0 , 1 , 0 ] ] )
        return np . power ( F , n - 2 )
    def main ( ) :
        n = 5
        print ( 'F(5) is %d' % findNthTerm ( n ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1636
---> probID: geeksforgeeks_5007_A
---> inputs:

---> outputs:
1 12 111


def MinimumValue ( x , y ) :
    import sys
    if x > y :
        temp = x
        x = y
        y = temp
    a = 1
    b = x - 1
    c = y - b
    sys . stdout . write ( '%d %d %d\n' % ( a , b , c ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1637
---> probID: leetcode_665_A
---> inputs:

---> outputs:
true

def check_possibility ( nums ) :
    broken_point = 0
    for i in range ( len ( nums ) - 1 ) :
        if nums [ i ] > nums [ i + 1 ] :
            broken_point += 1
            if broken_point >= 2 :
                return False
            if i - 1 < 0 or nums [ i - 1 ] <= nums [ i + 1 ] :
                nums [ i ] = nums [ i + 1 ]
            else :
                nums [ i + 1 ] = nums [ i ]
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1638
---> probID: geeksforgeeks_3476_A
---> inputs:

---> outputs:
4


def GFG ( array , n , K ) :
    count = 0
    sum = 0
    for i in range ( n ) :
        if array [ i ] > mid :
            return False
        sum += array [ i ]
        if sum > mid :
            count += 1
            sum = array [ i ]
    count += 1
    if count <= K :
        return True
    return False


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1639
---> probID: aizu_p00881_A
---> inputs:
8 1
11010101
11 4
00111001100
01001101011
01010000011
01100110001
11 16
01000101111
01011000000
01011111001
01101101001
01110010111
01110100111
10000001010
10010001000
10010110100
10100010100
10101010110
10110100010
11001010011
11011001001
11111000111
11111011101
11 12
10000000000
01000000000
00100000000
00010000000
00001000000
00000100000
00000010000
00000001000
00000000100
00000000010
00000000001
00000000000
9 32
001000000
000100000
000010000
000001000
000000100
000000010
000000001
000000000
011000000
010100000
010010000
010001000
010000100
010000010
010000001
010000000
101000000
100100000
100010000
100001000
100000100
100000010
100000001
100000000
111000000
110100000
110010000
110001000
110000100
110000010
110000001
110000000
0 0
---> outputs:
0
2
4
11
9

def main ( ) :
    import string
    import list
    import math
    memo = [ 0 ] * ( 1 << 22 )
    while True :
        M , N = int ( sys . stdin . readline ( ) ) , int ( sys . stdin . readline ( ) )
        if not M :
            break
        list = [ int ( i , 2 ) for i in string . split ( sys . stdin . readline ( ) , ' ' ) ]
        memo [ used ] = - 1
        print ( rec ( 0 , list ) )
def rec ( used , list ) :
    if len ( list ) <= 1 :
        return 0
    if memo [ used ] >= 0 :
        return memo [ used ]
    ret = 99
    for i in range ( M ) :
        if used & ( 3 << ( 2 * i ) ) :
            continue
        on = [ ]
        off = [ ]
        for v in list :
            if v & ( 1 << i ) :
                on . append ( v )
            else :
                off . append ( v )
        if not on or not off :
            continue
        ret = min ( ret , max ( rec ( used | ( 1 << ( 2 * i ) ) , on ) , rec ( used | ( 2 << ( 2 * i ) ) , off ) ) )
    memo [ used ] = ret + 1
    return ret + 1


---> console_out:
 
DIDN'T MATCH!! :(
 94%|█████████▍| 1639/1746 [00:38<00:02, 42.40it/s]

-------------------------------------


---> lineNum: 1640
---> probID: codeforces_1360_A
---> inputs:
8
3 2
4 2
1 1
3 1
4 7
1 3
7 4
100 100
---> outputs:
16
16
4
9
64
9
64
40000

def main ( ) :
    import sys
    import math
    t = int ( sys . stdin . read ( ) )
    for tc in range ( t ) :
        a = math . randint ( 0 , t )
        b = math . randint ( 0 , t )
        print ( solve ( a , b ) )
    return min ( min ( compute_square_area ( a + a , b ) , compute_square_area ( a + b , max ( a , b ) ) ) , compute_square_area ( a , b + b ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1641
---> probID: codeforces_1690_B
---> inputs:
6
4
3 5 4 1
1 3 2 0
3
1 2 1
0 1 0
4
5 3 7 2
1 1 1 1
5
1 2 3 4 5
1 2 3 4 6
1
8
0
1
4
6
---> outputs:
YES
YES
NO
NO
YES
NO

def solve ( a , b , n ) :
    ans = [ ]
    max = sys . maxint
    for i in range ( n ) :
        max = max ( max , ( a [ i ] - b [ i ] ) )
    if max < 0 :
        return False
    for i in range ( n ) :
        temp = a [ i ] - max
        if temp <= 0 :
            ans . append ( 0 )
        else :
            ans . append ( temp )
    for i in range ( n ) :
        if ans [ i ] != b [ i ] :
            return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1642
---> probID: geeksforgeeks_1819_A
---> inputs:

---> outputs:
Odd


def even_or_odd ( N ) :
    N = list ( N )
    if N [ - 1 ] in [ '0' , '2' , '4' , '6' ] :
        return ( "Even" )
    else :
        return ( "Odd" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1643
---> probID: aizu_p02434_A
---> inputs:
3 13
0 0 1
0 0 2
0 0 3
0 1 -1
0 2 4
0 2 5
1 0
1 1
1 2
2 1
1 0
1 1
1 2
---> outputs:
1 2 3
-1
4 5
1 2 3

4 5

def main ( ) :
    import string
    import sys
    class Vector ( list ) :
        def __init__ ( self ) :
            self . A = [ 0 ] * 20
        def add ( self , x ) :
            if self . length == len ( self . A ) :
                self . A = [ self . A ] * self . length
            self . A . append ( x )
            self . length += 1
        def delete_back ( self ) :
            self . length -= 1
        def __str__ ( self ) :
            s = [ ]
            if self . length > 0 :
                s . append ( self . A [ 0 ] )
            for i in range ( 1 , self . length ) :
                s . append ( ' %d' % self . A [ i ] )
            return '' . join ( s )
    class Main ( ) :
        def main ( self ) :
            import sys
            try :
                n , q = sys . argv [ 1 ] . split ( ' ' )
                v = [ ]
                active = [ False ]
                for req , t in enumerate ( sys . argv [ 2 : ] ) :
                    if req == 0 :
                        if not active :
                            v . append ( [ ] )
                            active . append ( True )
                        v [ t ] . append ( sys . stdin . read ( ) )
                    elif req == 1 :
                        if active [ t ] :
                            print ( v [ t ] )
                        else :
                            print ( )
                    elif req == 2 :
                        active [ t ] = False
            except :
                pass
    return Main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1644
---> probID: codeforces_25_A
---> inputs:
5
2 4 7 8 10
---> outputs:
3

def pr6 ( ) :
    import string
    import sys
    n , k1 , k2 , w1 , w2 , a = list ( ) , 0 , 0 , 0 , 0 , 0 , 0
    for i in range ( n ) :
        a . append ( string . strip ( ) )
        if a [ i ] % 2 == 0 :
            w1 += 1
            k1 = i + 1
        else :
            w2 += 1
            k2 = i + 1
    print ( ( k1 if w1 == 1 else k2 ) )


---> console_out:
 
DIDN'T MATCH!! :(
 94%|█████████▍| 1644/1746 [00:38<00:02, 42.30it/s]

-------------------------------------


---> lineNum: 1645
---> probID: geeksforgeeks_4124_A
---> inputs:

---> outputs:
3


def GFG ( X , Y , N , K ) :
    count = [ 0 ] * ( N + 1 )
    sol = 0
    count [ 0 ] = 0
    for i in range ( 1 , N + 1 ) :
        count [ i ] = count [ i - 1 ] + abs ( X [ i - 1 ] - Y [ i - 1 ] )
    j = 0
    for i in range ( 1 , N + 1 ) :
        while ( count [ i ] - count [ j ] ) > K :
            j += 1
        sol = max ( sol , i - j )
    return sol


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1646
---> probID: aizu_p01574_A
---> inputs:
6 2
2
5
---> outputs:
Yes

def main ( ) :
    import sys
    import math
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    import numpy . core as np
    np . core . as_global ( np )
    np . core . as_global ( )
    np . core . as_global ( )
    np . core . as_global ( )
    np . core . as_global ( )
    np . core . as_global ( )
    np . core . as_global ( )
    np . core . as_global ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1647
---> probID: geeksforgeeks_597_A
---> inputs:

---> outputs:
No


def is_prime ( n , i ) :
    import sys
    if n <= 2 :
        return ( True if n == 2 else False )
    if n % i == 0 :
        return False
    if i * i > n :
        return True
    return is_prime ( n , i + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1648
---> probID: geeksforgeeks_2219_A
---> inputs:

---> outputs:
3


def is_prime ( n ) :
    import math
    i = 2
    while i * i <= n :
        if n % i == 0 :
            return False
        i += 1
    return True
    def minimum_sum ( n ) :
        if n == 1 :
            return 1
        if n % 2 == 0 :
            return 2
        if n == 2 :
            return 2
        if n == 3 :
            return 3
        return 4
    def main ( n ) :
        n = 27
        print ( minimum_sum ( n ) )
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1649
---> probID: geeksforgeeks_4767_A
---> inputs:

---> outputs:
2


def is_prime ( x ) :
    import math
    for i in range ( 2 , x + 1 ) :
        if x % i == 0 :
            return False
    return True
    def minimum_cost ( n ) :
        if is_prime ( n ) :
            return 1
        if n % 2 == 1 and is_prime ( n - 2 ) :
            return 2
        if n % 2 == 0 :
            return 2
        return 3
    def main ( args ) :
        n = 6
        print ( minimum_cost ( n ) )
    return None


---> console_out:
 
DIDN'T MATCH!! :(
 94%|█████████▍| 1649/1746 [00:38<00:02, 42.04it/s]

-------------------------------------


---> lineNum: 1650
---> probID: geeksforgeeks_4507_A
---> inputs:

---> outputs:
Next higher number with same number of set bits is 163


def GFG ( x ) :
    global next_higher_one_bit , right_ones_pattern , next
    if x > 0 :
        right_one = x & - x
        next_higher_one_bit = x + right_one
        right_ones_pattern = x ^ next_higher_one_bit
        right_ones_pattern = ( right_ones_pattern ) // right_one
        right_ones_pattern >>= 2
        next = next_higher_one_bit | right_ones_pattern
    return next


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1651
---> probID: geeksforgeeks_1666_A
---> inputs:

---> outputs:
5
6


def proper_divisor_sum ( n ) :
    sum = 0
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , 2 * i + 1 ) :
            if i % j == 0 :
                sum += j
            else :
                sum += j + i / j
        sum = sum - i
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1652
---> probID: geeksforgeeks_2359_A
---> inputs:

---> outputs:
2


def get_min_length ( arr , n ) :
    import math
    count = 0
    result = math . inf
    for i in range ( n ) :
        if arr [ i ] == 1 :
            count += 1
        else :
            if count != 0 :
                result = min ( result , count )
            count = 0
    return result


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1653
---> probID: geeksforgeeks_2858_A
---> inputs:

---> outputs:
12


def get_levenstein ( x ) :
    import string
    rev_input = list ( x )
    rev_input = rev_input . reverse ( )
    n = len ( x )
    dp = np . zeros ( ( n + 1 , n + 1 ) )
    for i in range ( 0 , n + 1 ) :
        dp [ 0 ] [ i ] = i
        dp [ i ] [ 0 ] = i
    for i in range ( 1 , n + 1 ) :
        for j in range ( 1 , n + 1 ) :
            if x [ i - 1 ] == rev_input [ j - 1 ] :
                dp [ i ] [ j ] = dp [ i - 1 ] [ j - 1 ]
            else :
                dp [ i ] [ j ] = 1 + min ( dp [ i - 1 ] [ j ] , dp [ i ] [ j - 1 ] )
    res = np . inf
    for i , j in enumerate ( dp [ n ] , 1 ) :
        res = min ( res , dp [ i ] [ j ] )
        if i < n :
            res = min ( res , dp [ i + 1 ] [ j ] )
        if i > 0 :
            res = min ( res , dp [ i - 1 ] [ j ] )
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1654
---> probID: projecteuler_p088_A
---> inputs:

---> outputs:
7587457

def p088 ( ) :
    import sys
    print ( sys . argv )
    LIMIT = 12000
    min_sum_product = [ 0 ] * ( LIMIT + 1 )
    for i in range ( 2 , LIMIT * 2 + 1 ) :
        factorize ( i , i , i , 0 , 0 )
    items = set ( )
    for i in range ( 2 , len ( min_sum_product ) ) :
        items . add ( min_sum_product [ i ] )
    sum = 0
    for n in items :
        sum += n
    def factorize ( n , remain , max_factor , sum , terms ) :
        if remain == 1 :
            if sum > n :
                raise AssertionError ( )
            terms += n - sum
            if terms <= LIMIT and n < min_sum_product [ terms ] :
                min_sum_product [ terms ] = n
        else :
            for i in range ( 2 , max_factor + 1 ) :
                if remain % i == 0 :
                    factor = i
                    factorize ( n , remain // factor , min ( factor , max_factor ) , sum + factor , terms + 1 )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
 95%|█████████▍| 1654/1746 [00:39<00:02, 42.08it/s]

-------------------------------------


---> lineNum: 1655
---> probID: atcoder_AGC028_B
---> inputs:
2
1 2
---> outputs:
9

def main ( ) :
    f = open ( '/etc/init.d/' )
    n = int ( f . readline ( ) )
    sa = f . readline ( ) . split ( )
    a = [ 0 ] * n
    for i in range ( n ) :
        a [ i ] = int ( sa [ i ] )
    f . close ( )
    mod = 1000000007
    p = 1
    for i in range ( 2 , n + 1 ) :
        p = p * i % mod
    q = [ 0 ] * n
    q [ 0 ] = 1
    for i in range ( 1 , n ) :
        q [ i ] = ( q [ i - 1 ] + modinv ( i + 1 , mod ) ) % mod
    ans = 0
    for i in range ( n ) :
        val = q [ i ] + q [ n - i - 1 ] - 1
        val *= a [ i ]
        val %= mod
        val *= p
        val %= mod
        ans += val
        ans %= mod
    print ( ans )
    def modinv ( a , m ) :
        b = m
        u = 1
        v = 0
        tmp = 0
        while b > 0 :
            t = a // b
            a -= t * b
            tmp = a
            a = b
            b = tmp
            u -= t * v
            tmp = u
            u = v
            v = tmp
        u %= m
        if u < 0 :
            u += m
        return u
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1656
---> probID: geeksforgeeks_3888_A
---> inputs:

---> outputs:
100 90 80 58 92 85 45 30 27 56 


def Queue_reverse ( q ) :
    import Queue
    import sys
    import traceback
    queue = Queue ( )
    def Print ( ) :
        while not sys . eof :
            print ( '%d ' % sys . maxsize )
            del sys . stdout
    def reverse_queue ( q ) :
        if not q :
            return q
        data = q [ - 1 ]
        del q [ - 1 ]
        q = reverse_queue ( q )
        q . append ( data )
        return q
    def main ( args ) :
        queue = Queue ( )
        queue . add ( 56 )
        queue . add ( 27 )
        queue . add ( 30 )
        queue . add ( 45 )
        queue . add ( 85 )
        queue . add ( 92 )
        queue . add ( 58 )
        queue . add ( 80 )
        queue . add ( 90 )
        queue . add ( 100 )
        queue = reverse_queue ( queue )
        Print ( )
    return queue


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1657
---> probID: geeksforgeeks_3576_A
---> inputs:

---> outputs:
Difference is  3


def GFG ( ) :
    import sys
    MAX = 1000000
    prime = [ False ] * ( MAX + 1 )
    def SieveOfEratosthenes ( ) :
        for i in range ( MAX + 1 ) :
            prime [ i ] = True
        prime [ 1 ] = False
        for p in range ( 2 , p * MAX + 1 ) :
            if prime [ p ] == True :
                for i in range ( p * 2 , MAX + 1 , p ) :
                    prime [ i ] = False
    def findDiff ( arr , n ) :
        min , max = MAX + 2 , - 1
        for i in range ( n ) :
            if prime [ arr [ i ] ] == True :
                if arr [ i ] > max :
                    max = arr [ i ]
                if arr [ i ] < min :
                    min = arr [ i ]
        return ( - 1 if max == - 1 else ( max - min ) )
    def main ( ) :
        import sys
        sys . stdout . write ( 'No prime numbers\n' )
        sys . stdout . flush ( )
    def findDiff ( arr , n ) :
        if not prime :
            sys . stdout . write ( 'No prime numbers\n' )
        else :
            sys . stdout . write ( 'Difference is %d\n' % res )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1658
---> probID: aizu_p00072_A
---> inputs:
4
4
0,1,1500
0,2,2000
1,2,600
1,3,500
0
---> outputs:
23

def main ( ) :
    import sys
    import os
    import sys
    import re
    import sys
    class AOJ_GRL_2 ( sys . stdin ) :
        def __init__ ( self ) :
            sys . stdin . close ( )
            sys . stdout . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
            sys . stderr . close ( )
            sys . stdout . close ( )
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1659
---> probID: codeforces_672_A
---> inputs:
3
---> outputs:
3

def A_Summer_Camp ( ) :
    import sys
    import os
    import math
    import os . environ as environ
    import os . path
    import sys
    import os . path
    import sys
    import sys
    try :
        os . environ [ 'A_Summer_Camp' ] = int ( sys . stdin . read ( ) )
    except :
        pass
    else :
        import os
        os . environ [ 'A_Summer_Camp' ] = int ( sys . stdin . read ( ) )


---> console_out:
 
DIDN'T MATCH!! :(
 95%|█████████▌| 1659/1746 [00:39<00:02, 42.09it/s]

-------------------------------------


---> lineNum: 1660
---> probID: geeksforgeeks_3355_A
---> inputs:

---> outputs:
4


def distinctSubString ( P , N ) :
    S = set ( )
    for i in range ( N ) :
        freq = [ False ] * 26
        s = ""
        for j in range ( i , N ) :
            pos = ord ( P [ j ] ) - ord ( "a" )
            if freq [ pos ] == True :
                break
            freq [ pos ] = True
            s += P [ j ]
            S . add ( s )
    return len ( S )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1661
---> probID: atcoder_ARC099_A
---> inputs:
7 3
1 2 3 4 5 6 7
---> outputs:
3


def solve ( ) :
    import sys
    solve ( )
    n = sys . maxsize
    k = sys . maxsize
    a = [ ]
    for i in range ( n ) :
        a . append ( sys . stdin . read ( ) )
    x = 0
    if ( n - k ) % ( k - 1 ) == 0 :
        x = ( n - k ) // ( k - 1 )
    else :
        x = ( n - k ) // ( k - 1 ) + 1
    print ( x + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1662
---> probID: geeksforgeeks_60_A
---> inputs:

---> outputs:
2


def minimum_adjacent_difference ( a , n , k ) :
    min_diff = sys . maxsize
    for i in range ( ( 1 << n ) ) :
        cnt = sys . maxsize
        if i == n - k :
            temp = [ ]
            for j in range ( n ) :
                if ( i & ( 1 << j ) ) :
                    temp . append ( a [ j ] )
            max_diff = sys . maxsize
            for j in range ( len ( temp ) - 1 ) :
                max_diff = max ( max_diff , temp [ j + 1 ] - temp [ j ] )
            min_diff = min ( min_diff , max_diff )
    return min_diff


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1663
---> probID: geeksforgeeks_3875_A
---> inputs:

---> outputs:
0 5 1 7 8 

def difference ( arr , n ) :
    largest = arr [ 0 ]
    i = 0
    for i in range ( n ) :
        if largest < arr [ i ] :
            largest = arr [ i ]
    for i in range ( n ) :
        arr [ i ] = largest - arr [ i ]
    for i in range ( n ) :
        print ( arr [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1664
---> probID: geeksforgeeks_432_A
---> inputs:

---> outputs:
5


def count_kdiv_pairs ( A , n , K ) :
    freq = [ 0 ] * K
    for i in range ( n ) :
        freq [ i % K ] += 1
    sum = freq [ 0 ] * ( freq [ 0 ] - 1 ) // 2
    for i in range ( 1 , K // 2 and i != ( K - i ) + 1 ) :
        sum += freq [ i ] * freq [ K - i ]
    if K % 2 == 0 :
        sum += ( freq [ K // 2 ] * ( freq [ K // 2 ] - 1 ) // 2 )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
 95%|█████████▌| 1664/1746 [00:39<00:01, 42.51it/s]

-------------------------------------


---> lineNum: 1665
---> probID: aizu_p00183_A
---> inputs:
bbw
wbw
+b+
bwb
wbw
wbw
0
---> outputs:
b
NA

def main ( args ) :
    import string
    class Main ( string ) :
        def __init__ ( self ) :
            self . s = [ ]
        def strip ( self ) :
            return ''
    S = [ ]
    S . append ( '' )
    while True :
        S . append ( '' )
        S . append ( '' )
        if S [ 0 ] == '0' :
            break
        S . append ( '' )
        S . append ( '' )
        f = True
        for i in range ( 3 ) :
            if S [ i ] [ 0 ] == S [ i ] [ 1 ] and S [ i ] [ 1 ] == S [ i ] [ 2 ] and S [ i ] [ 0 ] != '+' :
                print ( S [ i ] [ 0 ] )
                f = False
                break
            if S [ 0 ] [ i ] == S [ 1 ] [ i ] and S [ 1 ] [ i ] == S [ 2 ] [ i ] and S [ 0 ] [ i ] != '+' :
                print ( S [ 0 ] [ i ] )
                f = False
                break
        if f and S [ 0 ] [ 0 ] == S [ 1 ] [ 1 ] and S [ 1 ] [ 1 ] == S [ 2 ] [ 2 ] and S [ 0 ] [ 0 ] != '+' :
            print ( S [ 0 ] [ 0 ] )
            f = False
        if f and S [ 0 ] [ 2 ] == S [ 1 ] [ 1 ] and S [ 1 ] [ 1 ] == S [ 2 ] [ 0 ] and S [ 0 ] [ 2 ] != '+' :
            print ( S [ 0 ] [ 2 ] )
            f = False
        if f :
            print ( 'NA' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1666
---> probID: geeksforgeeks_2349_A
---> inputs:

---> outputs:
Index of 0 to be replaced is  9


def max_ones_index ( arr , n ) :
    import sys
    max_count = 0
    max_index = 0
    prev_zero = - 1
    prev_prev_zero = - 1
    for curr in range ( n ) :
        if arr [ curr ] == 0 :
            if curr - prev_prev_zero > max_count :
                max_count = curr - prev_prev_zero
                max_index = prev_zero
            prev_prev_zero = prev_zero
            prev_zero = curr
    if n - prev_prev_zero > max_count :
        max_index = prev_zero
    return max_index


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1667
---> probID: geeksforgeeks_3836_A
---> inputs:

---> outputs:
10.0
26.0


def minimum_x ( n , k ) :
    ans = sys . maxsize
    for rem in range ( k - 1 , 0 , - 1 ) :
        if n % rem == 0 :
            ans = min ( ans , rem + ( n // rem ) * k )
    return ans


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1668
---> probID: geeksforgeeks_2793_A
---> inputs:

---> outputs:
4652135769797794


def modulo_multiplication ( a , b , mod ) :
    res = 0
    a %= mod
    while b > 0 :
        if b & 1 :
            res = ( res + a ) % mod
        a = ( 2 * a ) % mod
        b >>= 1
    return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1669
---> probID: aizu_p00225_A
---> inputs:
5
apple
yellow
georgia
king
email
7
apple
yellow
georgia
king
email
wink
lucky
0
---> outputs:
NG
OK

def main ( ) :
    import sys
    import string
    MAX = 'Z' - 'A' + 1
    global n
    global in_deg , out_deg , vis
    global nei
    def check ( ) :
        for i in range ( MAX ) :
            if vis [ i ] != 1 :
                return False
        cnt = 0
        for i in range ( MAX ) :
            if in_deg [ i ] != out_deg [ i ] :
                return False
        return True
    def dfs ( k ) :
        if vis [ k ] == 1 :
            return True
        vis [ k ] = 1
        for i in range ( MAX ) :
            if 0 < nei [ k ] [ i ] :
                dfs ( i )
    def run ( ) :
        with open ( '/tmp/' , 'r' ) as f :
            while True :
                n = len ( f . read ( ) )
                if n == 0 :
                    break
                s = 0
                in_deg = [ 0 ] * MAX
                out_deg = [ 0 ] * MAX
                vis = [ 0 ] * MAX
                nei = [ [ 0 ] * MAX ] * MAX
                vis [ n ] = 1
                for c in f . read ( ) :
                    u = ord ( c [ 0 ] ) - ord ( 'a' )
                    v = ord ( c [ - 1 ] ) - ord ( 'a' )
                    out_deg [ u ] += 1
                    in_deg [ v ] += 1
                    nei [ u ] [ v ] = 1
                    vis [ u ] = vis [ v ] = - 1
                    s = u
            dfs ( s )
            if check ( ) :
                print ( 'OK' )
            else :
                print ( 'NG' )
    return '' . join ( [ str ( n ) for n in range ( MAX ) ] )


---> console_out:
 
DIDN'T MATCH!! :(
 96%|█████████▌| 1669/1746 [00:39<00:01, 42.44it/s]

-------------------------------------


---> lineNum: 1670
---> probID: atcoder_ARC086_B
---> inputs:
10
421554480 455557976 91974192 793727424 721379432 356319592 904205072 341283792 430860808 474298152
---> outputs:
19
7 1
7 2
7 3
7 4
7 5
7 6
7 7
7 8
7 9
7 10
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10


def main ( ) :
    import sys
    import math
    N = len ( sys . argv )
    a = list ( range ( N ) )
    index = 0
    for i in range ( N ) :
        if abs ( a [ index ] ) < abs ( a [ i ] ) :
            index = i
    print ( 2 * N - 1 )
    for i in range ( N ) :
        print ( ( index + 1 ) , ( i + 1 ) )
    if a [ index ] > 0 :
        for i in range ( 2 , N + 1 ) :
            print ( ( i - 1 ) , i )
    else :
        for i in range ( N - 1 , 1 , - 1 ) :
            print ( ( i + 1 ) , i )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553005064_8811/main.py", line 37
    return '' . join ( partitions )
    ^
SyntaxError: 'return' outside function


-------------------------------------


---> lineNum: 1671
---> probID: geeksforgeeks_4957_A
---> inputs:

---> outputs:
g e e k s 
g ee k s 


def check_palindrome ( data ) :
    data = list ( data )
    data . pop ( 0 )
    for i in range ( len ( data ) ) :
        if data [ i ] != data [ i ] :
            return False
        data . pop ( 0 )
    return True
def print_solution ( partitions ) :
    for i in partitions :
        for j in i :
            print ( j , end = ' ' )
        print ( )
def add_strings ( v , s , temp , index ) :
    data = ''
    current = [ ]
    if index == 0 :
        temp = [ ]
    for i in range ( index , len ( s ) ) :
        data = data + s [ i ]
        if check_palindrome ( data ) :
            temp . append ( data )
            if i + 1 < len ( s ) :
                v = add_strings ( v , s , temp , i + 1 )
            else :
                v . append ( temp )
            temp = [ current ]
    return v
def partition ( s , v ) :
    temp = [ ]
    v = add_strings ( v , s , temp , 0 )
    print_solution ( v )
def main ( args ) :
    s = 'geeks'
    partitions = [ ]
    partition ( s , partitions )
return '' . join ( partitions )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1672
---> probID: aizu_p00991_A
---> inputs:
4 4 0 0 3 3
---> outputs:
2

def comb ( n , c ) :
    import math
    M = 100000007
    for i in range ( c ) :
        b = math . pow ( math . floor ( str ( n - i ) ) / math . floor ( str ( i + 1 ) ) , 2 )
    return b % math . floor ( math . floor ( str ( M ) ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1673
---> probID: geeksforgeeks_1550_A
---> inputs:

---> outputs:
LCM = 12, Length = 3
Indexes = 0 1 2 

def find_subgraph ( arr , n , k ) :
    M = { }
    for i in range ( n ) :
        if arr [ i ] in M :
            M [ arr [ i ] ] = M [ arr [ i ] ] + 1
        else :
            M [ arr [ i ] ] = 1
    num_count = [ 0 ] * ( k + 1 )
    for i in range ( 0 , k + 1 ) :
        num_count [ i ] = 0
    for ( k , v ) in M . items ( ) :
        if k <= k :
            for i in range ( 1 , k + 1 ) :
                if k * i > k :
                    break
                num_count [ k * i ] += v
        else :
            break
    lcm , length = 0 , 0
    for i in range ( 1 , k + 1 ) :
        if num_count [ i ] > length :
            length = num_count [ i ]
            lcm = i
    if not lcm :
        print ( - 1 )
    else :
        print ( 'LCM = %d, Length = %d' % ( lcm , length ) )
        print ( 'Indexes = ' , end = ' ' )
        for i in range ( n ) :
            if lcm % arr [ i ] == 0 :
                print ( str ( i ) , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1674
---> probID: geeksforgeeks_4207_A
---> inputs:

---> outputs:
4


def count_pairs ( a , b , n , m ) :
    odd1 , even1 = 0 , 0
    odd2 , even2 = 0 , 0
    for i in range ( n ) :
        if a [ i ] % 2 == 1 :
            odd1 += 1
        else :
            even1 += 1
    for i in range ( m ) :
        if b [ i ] % 2 == 1 :
            odd2 += 1
        else :
            even2 += 1
    pairs = min ( odd1 , odd2 ) + min ( even1 , even2 )
    return pairs


---> console_out:
 
DIDN'T MATCH!! :(
 96%|█████████▌| 1674/1746 [00:39<00:01, 42.29it/s]

-------------------------------------


---> lineNum: 1675
---> probID: geeksforgeeks_1994_A
---> inputs:

---> outputs:
3


def count_pairs ( a , b , n , m ) :
    odd1 , even1 = 0 , 0
    odd2 , even2 = 0 , 0
    for i in range ( n ) :
        if a [ i ] % 2 == 1 :
            odd1 += 1
        else :
            even1 += 1
    for i in range ( m ) :
        if b [ i ] % 2 == 1 :
            odd2 += 1
        else :
            even2 += 1
    pairs = min ( odd1 , even2 ) + min ( odd2 , even1 )
    return pairs


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1676
---> probID: geeksforgeeks_4902_A
---> inputs:

---> outputs:
Maximum difference is 99


def max_diff ( arr , arr_size ) :
    max_diff = arr [ 1 ] - arr [ 0 ]
    min_element = arr [ 0 ]
    for i in range ( 1 , arr_size ) :
        if arr [ i ] - min_element > max_diff :
            max_diff = arr [ i ] - min_element
        if arr [ i ] < min_element :
            min_element = arr [ i ]
    return max_diff


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1677
---> probID: geeksforgeeks_3004_A
---> inputs:

---> outputs:
10


def binomial_coeff ( n , k ) :
    C = np . zeros ( ( n + 1 , k + 1 ) )
    i , j = 0 , 0
    for i in range ( 0 , n + 1 ) :
        for j in range ( 0 , min ( i , k ) + 1 ) :
            if j == 0 or j == i :
                C [ i ] [ j ] = 1
            else :
                C [ i ] [ j ] = C [ i - 1 ] [ j - 1 ] + C [ i - 1 ] [ j ]
    return C [ n ] [ k ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1678
---> probID: geeksforgeeks_3324_A
---> inputs:

---> outputs:
15


def GFG ( freq ) :
    MAX = 26
    max_ele = freq [ 0 ]
    for i in range ( MAX ) :
        if max_ele < freq [ i ] :
            max_ele = freq [ i ]
    return max_ele
    def minimum_addition ( data , len_ ) :
        freq = [ 0 ] * MAX
        for c in data :
            freq [ c ] - 'a'
        max_freq = max_element ( freq )
        min_addition = 0
        for i in range ( MAX ) :
            if freq [ i ] > 0 :
                min_addition += abs ( max_freq - freq [ i ] )
        return min_addition
    def main ( ) :
        data = 'geeksforgeeks'
        len_ = len ( data )
        print ( minimum_addition ( data , len_ ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1679
---> probID: codeforces_540_A
---> inputs:
5
82195
64723
---> outputs:
13

def test_195 ( ) :
    import string
    f = open ( 'test.txt' )
    n = len ( f . readlines ( ) )
    a = list ( f )
    b = list ( f )
    sum = 0
    for i in range ( n ) :
        if abs ( a [ i ] - b [ i ] ) > 5 :
            sum += 10 - abs ( a [ i ] - b [ i ] )
        else :
            sum += abs ( a [ i ] - b [ i ] )
    print ( sum )
    f . close ( )


---> console_out:
 
DIDN'T MATCH!! :(
 96%|█████████▌| 1679/1746 [00:39<00:01, 42.28it/s]

-------------------------------------


---> lineNum: 1680
---> probID: geeksforgeeks_1956_A
---> inputs:

---> outputs:
5 0 1 

def GFG ( ) :
    import sys
    MAX = 32
    pow2 = [ 0 ] * MAX
    visited = [ False ] * MAX
    ans = [ ]
    def power_2 ( ) :
        ans = 1
        for i in range ( MAX ) :
            pow2 [ i ] = ans
            ans *= 2
    def count_set_bits ( x ) :
        set_bits = 0
        while x :
            x = x & ( x - 1 )
            set_bits += 1
        return set_bits
    def add ( num ) :
        point = 0
        value = 0
        for i in range ( MAX ) :
            if visited [ i ] :
                continue
            else :
                if num % 2 == 1 :
                    value += ( 1 << i )
                num //= 2
        ans . append ( value )
    def solve ( n , k ) :
        ans . append ( k )
        countk = count_set_bits ( k )
        if pow2 [ countk ] < n :
            print ( - 1 , end = ' ' )
            return
        count = 0
        for i in range ( pow2 [ countk ] - 1 ) :
            add ( i )
            count += 1
            if count == n :
                break
        for i in range ( n ) :
            print ( ans [ i ] , end = ' ' )
    def main ( ) :
        n , k = 3 , 5
        power_2 ( )
        solve ( n , k )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1681
---> probID: projecteuler_p027_A
---> inputs:

---> outputs:
-59231

def p027 ( ) :
    print ( eval ( 'p027()' ) )
    best_num = 0
    best_a = 0
    best_b = 0
    for a in range ( - 1000 , 1000 + 1 ) :
        for b in range ( - 1000 , 1000 + 1 ) :
            num = number_of_consecutive_primes_generated ( a , b )
            if num > best_num :
                best_num = num
                best_a = a
                best_b = b
    return str ( best_a * best_b )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1682
---> probID: codeforces_1371_B
---> inputs:
5
3 4
3 2
3 1
13 7
1010000 9999999
---> outputs:
4
3
1
28
510049495001

def pre149 ( args ) :
    import sys
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import math
    from string import encode
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import sys
    import string
    import string
    import sys
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553005348_8386/main.py", line 8
    for i in range ( p * 2 , MAX , i += p ) :
                                     ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1683
---> probID: geeksforgeeks_4968_A
---> inputs:

---> outputs:
3
1 1 2


def GFG ( ) :
    import numpy as np
    MAX = 100001
    is_prime = np . zeros ( MAX )
    def sieve ( ) :
        for p in range ( 2 , MAX ) :
            if is_prime [ p ] == 0 :
                for i in range ( p * 2 , MAX , i += p ) :
                    is_prime [ i ] = 1
        return - 1
    def find_subset ( a , n ) :
        cnt1 = 0
        for i in range ( n ) :
            if a [ i ] == 1 :
                cnt1 += 1
            if cnt1 > 0 :
                for i in range ( n ) :
                    if ( a [ i ] != 1 ) and ( is_prime [ a [ i ] + 1 ] == 0 ) :
                        print ( cnt1 + 1 )
                        for j in range ( cnt1 ) :
                            print ( 1 , end = ' ' )
                        print ( a [ i ] )
                    return 0
        if cnt1 >= 2 :
            print ( cnt1 )
            for i in range ( cnt1 ) :
                print ( 1 , end = ' ' )
            print ( )
            return 0
        for i in range ( n ) :
            for j in range ( i + 1 , n ) :
                if is_prime [ a [ i ] + a [ j ] ] == 0 :
                    print ( 2 )
                    print ( a [ i ] , a [ j ] )
                    return 0
        print ( - 1 )
        return - 1
    def main ( ) :
        sieve ( )
        A = np . array ( [ 2 , 1 , 1 ] )
        n = len ( A )
        find_subset ( A , n )
    return 0


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1684
---> probID: aizu_p00302_A
---> inputs:
1 10 20
1
---> outputs:
11

def main ( ) :
    import sys
    try :
        n , r , t , sum , pos = select . select ( [ sys . stdin ] )
    except :
        print ( "No input found" )
        return
    p = [ 0 ] * n
    water = [ 0 ] * r
    empty = [ 0 ] * r
    for i in range ( n ) :
        p [ i ] = sys . stdin . read ( n )
    for i in range ( 1 , t + 1 ) :
        for j in range ( n ) :
            pos = ( p [ j ] * i % r )
            if i > 1 :
                empty [ pos ] += 1
            if water [ pos ] > 0 :
                water [ pos ] -= 1
            else :
                sum += 1
        for j in range ( r ) :
            if empty [ j ] > 0 :
                water [ j ] += empty [ j ]
                empty [ j ] = 0
    print ( sum )
    sys . exit ( )


---> console_out:
 
DIDN'T MATCH!! :(
 96%|█████████▋| 1684/1746 [00:39<00:01, 42.27it/s]

-------------------------------------


---> lineNum: 1685
---> probID: aizu_p00101_A
---> inputs:
3
Hoshino
Hashino
Masayuki Hoshino was the grandson of Ieyasu Tokugawa.
---> outputs:
Hoshina
Hashino
Masayuki Hoshina was the grandson of Ieyasu Tokugawa.

def main ( args ) :
    import string
    s = list ( args )
    n = len ( s )
    s . sort ( )
    for j in range ( n ) :
        c = s [ j ]
        for i in range ( len ( c ) - 6 ) :
            if c [ i ] == 'H' and c [ i + 1 ] == 'o' and c [ i + 2 ] == 's' and c [ i + 3 ] == 'h' and c [ i + 4 ] == 'i' and c [ i + 5 ] == 'n' and c [ i + 6 ] == 'o' :
                c [ i + 6 ] = 'a'
                i += 6
        print ( '' . join ( c ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1686
---> probID: geeksforgeeks_1541_A
---> inputs:

---> outputs:
2


def count_rotations ( arr , low , high ) :
    import numpy as np
    import numpy . fft as np
    class BinarySearch ( np . ndarray ) :
        def count_rotations ( arr , low , high ) :
            if high < low :
                return 0
            if high == low :
                return low
            mid = low + ( high - low ) // 2
            if mid < high and arr [ mid + 1 ] < arr [ mid ] :
                return ( mid + 1 )
            if mid > low and arr [ mid ] < arr [ mid - 1 ] :
                return mid
            if arr [ high ] > arr [ mid ] :
                return count_rotations ( arr , low , mid - 1 )
            return count_rotations ( arr , mid + 1 , high )
    arr = np . array ( [ 15 , 18 , 2 , 3 , 6 , 12 ] )
    n = len ( arr )
    print ( count_rotations ( arr , 0 , n - 1 ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1687
---> probID: codeforces_92_A
---> inputs:
4 11
---> outputs:
0

def main ( ) :
    import sys
    scn = sys . stdin . read ( )
    n = scn . find ( ' ' )
    k = scn . find ( ' ' )
    i , req = 1 , 1
    while k - req >= 0 :
        if k - req >= 0 :
            k = k - req
        else :
            break
        i += 1
        if i % n != 0 :
            req = i % n
        else :
            req = n
    print ( k )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1688
---> probID: geeksforgeeks_3522_A
---> inputs:

---> outputs:
NO


def modular_sum ( arr , n , m ) :
    import numpy as np
    if n > m :
        return True
    DP = np . zeros ( m )
    DP [ 0 ] = False
    for i in range ( n ) :
        if DP [ 0 ] :
            return True
        temp = np . zeros ( m )
        temp [ 0 ] = False
        for j in range ( m ) :
            if DP [ j ] == True :
                if DP [ ( j + arr [ i ] ) % m ] == False :
                    temp [ ( j + arr [ i ] ) % m ] = True
        for j in range ( m ) :
            if temp [ j ] :
                DP [ j ] = True
        DP [ arr [ i ] % m ] = True
    return DP


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1689
---> probID: aizu_p02441_A
---> inputs:
9
1 4 1 4 2 1 3 5 6
3
0 9 1
1 6 1
3 7 5
---> outputs:
3
2
0

def main ( ) :
    import sys
    import numpy as np
    class Main ( object ) :
        def __init__ ( self ) :
            self . n = len ( sys . argv )
            self . a = [ ]
            for i in range ( self . n ) :
                self . a . append ( np . random . randint ( 0 , n ) )
            self . q = len ( sys . argv )
            for i in range ( self . q ) :
                b , e , k = np . random . randint ( 0 , n )
                res = 0
                for j in range ( b , e ) :
                    if self . a [ j ] == k :
                        res += 1
                print ( res )


---> console_out:
 
DIDN'T MATCH!! :(
 97%|█████████▋| 1689/1746 [00:39<00:01, 42.24it/s]

-------------------------------------


---> lineNum: 1690
---> probID: atcoder_AGC004_B
---> inputs:
2 10
1 100
---> outputs:
12

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        x = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    arr = np . zeros ( ( n , n ) )
    totals = [ 0 ] * n
    for i in range ( n ) :
        arr [ 0 ] [ i ] = int ( sys . stdin . readline ( ) )
        totals [ 0 ] += arr [ 0 ] [ i ]
    for i in range ( 1 , n ) :
        for j in range ( n ) :
            arr [ i ] [ j ] = min ( arr [ i - 1 ] [ j ] , arr [ i - 1 ] [ ( j - 1 + n ) % n ] )
            totals [ i ] += arr [ i ] [ j ]
        totals [ i ] += x * i
    totals . sort ( )
    print ( totals [ 0 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1691
---> probID: aizu_p01103_A
---> inputs:
3 3
2 3 2
2 1 2
2 3 1
3 5
3 3 4 3 3
3 1 0 2 3
3 3 4 3 2
7 7
1 1 1 1 1 0 0
1 0 0 0 1 0 0
1 0 1 1 1 1 1
1 0 1 0 1 0 1
1 1 1 1 1 0 1
0 0 1 0 0 0 1
0 0 1 1 1 1 1
6 6
1 1 1 1 2 2
1 0 0 2 0 2
1 0 0 2 0 2
3 3 3 9 9 9
3 0 0 9 0 9
3 3 3 9 9 9
0 0
---> outputs:
0
3
1
9

def main ( ) :
    import sys
    while True :
        d , w = sys . stdin . read ( ) . split ( ' ' )
        if not d :
            break
        G = np . zeros ( ( d , w ) )
        max = 0
        for i in range ( d ) :
            for j in range ( w ) :
                G [ i ] [ j ] = int ( sys . stdin . read ( ) )
        for i in range ( 0 , d - 3 + 1 ) :
            for j in range ( 0 , w - 3 + 1 ) :
                solve ( G , i , j , 3 , 3 )
        print ( max )
    def solve ( A , y , x , dep , wid ) :
        if y + dep > d or x + wid > w :
            return
        edgmin , lkmax , maxv = 9 , 0 , 0
        for i in range ( y , dep + y ) :
            for j in range ( x , wid + x ) :
                if i == y or i == dep + y - 1 or j == x or j == wid + x - 1 :
                    edgmin = min ( edgmin , A [ i ] [ j ] )
                else :
                    lkmax = max ( lkmax , A [ i ] [ j ] )
        if edgmin > lkmax :
            for i in range ( y + 1 , dep + y - 1 ) :
                for j in range ( x + 1 , x + wid - 1 ) :
                    maxv += edgmin - A [ i ] [ j ]
        max = max ( maxv )
        solve ( A , y , x , dep + 1 , wid )
        solve ( A , y , x , dep , wid + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1692
---> probID: codeforces_274_A
---> inputs:
6 2
2 3 6 5 4 10
---> outputs:
3

def code_chef ( ) :
    import numpy as np
    import numpy . fft as fft
    import numpy . random as np
    n = np . random . randint ( 0 , 100 , size = ( 100 , 100 ) )
    k = np . random . randint ( 0 , 100 , size = ( 100 , 100 ) )
    arr = np . zeros ( ( int ( n ) , int ( k ) ) )
    for i in range ( int ( n ) ) :
        arr [ int ( n ) ] = fft ( n )
    if k == 1 :
        print ( n )
        sys . exit ( 0 )
    ans = np . zeros ( ( int ( n ) , int ( n ) ) )
    arr . sort ( )
    for i in range ( int ( n ) ) :
        if ans [ int ( i ) ] == 0 :
            ktimes = k * arr [ int ( i ) ]
            index = np . searchsorted ( arr , ktimes )
            if index >= 0 :
                ans [ int ( index ) ] = - 1
    ans1 = 0
    for i in range ( n ) :
        if ans [ int ( i ) ] == 0 :
            ans1 += 1
    print ( ans1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1693
---> probID: geeksforgeeks_4060_A
---> inputs:

---> outputs:
65


def GFG ( k , n ) :
    sum = int ( pow ( k , n + 1 ) - pow ( k - 1 , n + 1 ) )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553005608_5167/main.py", line 15
    for currdigit in [ '0' , '9' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9' , '10' , '10' , '11' , '11' , '13' , '14' , '14' , '15' , '16' , '17' , '17' , '18' , '19' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '

SyntaxError: EOL while scanning string literal


-------------------------------------


---> lineNum: 1694
---> probID: geeksforgeeks_2096_A
---> inputs:

---> outputs:
5


def GFG ( ) :
    dp = np . zeros ( ( 18 , 2 , 162 ) )
    def solve ( i , tight , sum_so_far , Sum , number , len_ ) :
        if i == len_ :
            if sum_so_far == Sum :
                return 1
            else :
                return 0
        ans = dp [ i ] [ 1 ] [ sum_so_far ]
        if ans != - 1 :
            return ans
        ans = 0
        ntight = False
        nsum_so_far = False
        for currdigit in [ '0' , '9' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9' , '10' , '10' , '11' , '11' , '13' , '14' , '14' , '15' , '16' , '17' , '17' , '18' , '19' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '20' , '

---> console_out:
 
DIDN'T MATCH!! :(
 97%|█████████▋| 1694/1746 [00:40<00:01, 42.31it/s]

-------------------------------------


---> lineNum: 1695
---> probID: codeforces_231_A
---> inputs:
3
1 1 0
1 1 1
1 0 0
---> outputs:
2

def main ( args ) :
    import sys
    count = 0
    for i in range ( len ( args ) ) :
        n = int ( args [ i ] )
        args [ i ] = args [ i ]
        arr = [ ]
        for i in range ( n ) :
            arr . append ( args [ i ] )
        print ( count )
    def decision ( entery ) :
        localct = 0
        inputs = entery . split ( )
        for i in inputs :
            if i == '1' :
                localct += 1
        if localct > 1 :
            count += 1
    return 0


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553005655_6494/main.py", line 56
    return self .
                ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1696
---> probID: geeksforgeeks_3504_A
---> inputs:

---> outputs:
Difference between sums is -9


def main ( args ) :
    import sys
    class Node ( int ) :
        data = None
        left = right = None
        def __init__ ( self , key ) :
            self . data = key
            self . left = right = None
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __setitem__ ( self , key , value ) :
            self . data [ key ] = value
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __setitem__ ( self , key , value ) :
            self . data [ key ] = value
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self . data [ key ]
        def __getitem__ ( self , key ) :
            return self .

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1697
---> probID: geeksforgeeks_949_A
---> inputs:

---> outputs:
6


def count_subarrays ( a , n , x ) :
    count = 0
    number = 0
    for i in range ( n ) :
        if a [ i ] > x :
            count += 1
        else :
            number += ( count ) * ( count + 1 ) / 2
            count = 0
    if count != 0 :
        number += ( count ) * ( count + 1 ) / 2
    return number


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1698
---> probID: geeksforgeeks_1025_A
---> inputs:

---> outputs:
2


def gf_min_cost ( arr , n ) :
    count_even = 0
    count_odd = 0
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            count_even += 1
        else :
            count_odd += 1
    return min ( count_even , count_odd )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1699
---> probID: geeksforgeeks_5271_A
---> inputs:

---> outputs:
5 6 1 

def print_last_occurrence ( a , n ) :
    d = { }
    for i in range ( n ) :
        d [ a [ i ] ] = i
    for i in range ( n ) :
        if d [ a [ i ] ] == i :
            print ( a [ i ] , end = ' ' )


---> console_out:
 
DIDN'T MATCH!! :(
 97%|█████████▋| 1699/1746 [00:40<00:01, 42.19it/s]

-------------------------------------


---> lineNum: 1700
---> probID: aizu_p00274_A
---> inputs:
2
3 2
3
0 1 1
1
1000
0
---> outputs:
3
NA
2

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
    except ValueError :
        pass
    else :
        if n == 0 :
            return 0
        up1 , up2 = 0 , 0
        k = [ ]
        for i in range ( n ) :
            k . append ( sys . stdin . readline ( ) )
            if k [ i ] > 0 :
                up1 += 1
                if k [ i ] >= 2 :
                    up2 += 1
        if up2 == 0 :
            print ( 'NA' )
        else :
            print ( up1 + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1701
---> probID: geeksforgeeks_455_A
---> inputs:

---> outputs:
70


def main ( args ) :
    import re
    import sys
    import os
    import sys
    if not args :
        return 0
    if not args [ 0 ] :
        return 0
    if not args [ 0 ] :
        return 0
    return int ( args [ 0 ] )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1702
---> probID: geeksforgeeks_4086_A
---> inputs:

---> outputs:
335.0


def sum_of_ap ( a , d , n ) :
    sum = ( n / 2 ) * ( 2 * a + ( n - 1 ) * d )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1703
---> probID: geeksforgeeks_903_A
---> inputs:

---> outputs:
3


def count_pairs ( arr , n ) :
    count = 0
    for i in range ( n - 1 ) :
        for j in range ( i + 1 , n ) :
            if arr [ i ] * arr [ j ] > arr [ i ] + arr [ j ] :
                count += 1
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1704
---> probID: geeksforgeeks_1000_A
---> inputs:

---> outputs:
4


def coordinateCompression ( arr , n ) :
    s = set ( arr )
    index = 0
    mp = { }
    for itr in s :
        index += 1
        mp [ itr ] = index
    for i in range ( n ) :
        arr [ i ] = mp [ arr [ i ] ]
    def query ( BIT , index , n ) :
        ans = 0
        while index > 0 :
            ans = max ( ans , BIT [ index ] )
            index -= index & ( - index )
        return ans
    def update ( BIT , index , n ) :
        x = query ( BIT , index - 1 , n )
        value = x + 1
        while index <= n :
            BIT [ index ] = max ( BIT [ index ] , value )
            index += index & ( - index )
    def findLISLength ( arr , n ) :
        coordinateCompression ( arr , n )
        BIT = [ 0 ] * ( n + 1 )
        for i in range ( 0 , n + 1 ) :
            BIT [ i ] = 0
        for i in arr :
            update ( BIT , i , n )
        ans = query ( BIT , n , n )
        return ans
    def main ( ) :
        arr = [ 6 , 5 , 1 , 3 , 2 , 4 , 8 , 7 ]
        n = len ( arr )
        ans = findLISLength ( arr , n )
        print ( ans )


---> console_out:
 
DIDN'T MATCH!! :(
 98%|█████████▊| 1704/1746 [00:40<00:01, 41.81it/s]  File "./junk/1692553005874_6534/main.py", line 16
    outer :
          ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1705
---> probID: codeforces_1598_B
---> inputs:
2
4
1 0 0 1 0
0 1 0 0 1
0 0 0 1 0
0 1 0 1 0
2
0 0 0 1 0
0 0 0 1 0
---> outputs:
YES
NO

def main ( ) :
    import sys
    f = open ( sys . argv [ 1 ] )
    Q = int ( f . readline ( ) )
    for i in range ( Q ) :
        N = int ( f . readline ( ) )
        schedule = np . zeros ( ( N , 5 ) )
        x = 0
        for j in range ( N ) :
            line = f . readline ( )
            sr = line . split ( )
            for k in range ( 5 ) :
                schedule [ x ] [ k ] = int ( sr [ k ] )
            x += 1
        check = False
        outer :
            for j in range ( 4 ) :
                for k in range ( j + 1 , 5 ) :
                    day1count = 0
                    day2count = 0
                    bothcount = 0
                    neither = 0
                    for l in range ( len ( schedule ) ) :
                        if schedule [ l ] [ j ] == 0 and schedule [ l ] [ k ] == 0 :
                            neither += 1
                        if schedule [ l ] [ j ] == 1 and schedule [ l ] [ k ] == 0 :
                            day1count += 1
                        elif schedule [ l ] [ j ] == 0 and schedule [ l ] [ k ] == 1 :
                            day2count += 1
                        elif schedule [ l ] [ j ] == 1 and schedule [ l ] [ k ] == 1 :
                            bothcount += 1
                    if neither > 0 :
                        continue
                    elif day1count > len ( schedule ) // 2 or day2count > len ( schedule ) // 2 :
                        continue
                    else :
                        check = True
                        break
            print ( check and "YES" or "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1706
---> probID: projecteuler_p164_A
---> inputs:

---> outputs:
378158756814587

def p164 ( ) :
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    import math
    math
    import math
    import math
    import math
    math
    import math
    import math
    math
    import math
    math
    import math
    import math
    math
    import math
    math
    import math
    math
    import math
    math
    import math
    math
    math = math


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553005921_4096/main.py", line 121
    string = string
    ^
IndentationError: unexpected indent


-------------------------------------


---> lineNum: 1707
---> probID: codeforces_287_A
---> inputs:
####
.#..
####
....
---> outputs:
YES

def main ( ) :
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    try :
        string
            string = string
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1708
---> probID: leetcode_766_A
---> inputs:

---> outputs:
true

def is_toeplitz_matrix ( matrix ) :
    for r in range ( 1 , len ( matrix ) ) :
        for c in range ( 1 , len ( matrix [ 0 ] ) ) :
            if matrix [ r - 1 ] [ c - 1 ] != matrix [ r ] [ c ] :
                return False
    return True


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1709
---> probID: projecteuler_p094_A
---> inputs:

---> outputs:
518408346

def p094 ( ) :
    print ( eval ( 'p094' ) )
    LIMIT = math . pow ( 10 , 9 )
    def run ( ) :
        sum = 0
        for s in range ( 1 , ( LIMIT + 1 ) // 3 + 1 , 2 ) :
            for t in range ( s - 2 , 0 , - 2 ) :
                if math . gcd ( s , t ) == 1 :
                    a = s * t
                    b = ( s * s - t * t ) // 2
                    c = ( s * s + t * t ) // 2
                    if a * 2 == c - 1 :
                        p = c * 3 - 1
                        if p <= LIMIT :
                            sum += p
                    if a * 2 == c + 1 :
                        p = c * 3 + 1
                        if p <= LIMIT :
                            sum += p
                    if b * 2 == c - 1 :
                        p = c * 3 - 1
                        if p <= LIMIT :
                            sum += p
                    if b * 2 == c + 1 :
                        p = c * 3 + 1
                        if p <= LIMIT :
                            sum += p
        return str ( sum )
    return run


---> console_out:
 
DIDN'T MATCH!! :(
 98%|█████████▊| 1709/1746 [00:40<00:00, 41.76it/s]

-------------------------------------


---> lineNum: 1710
---> probID: aizu_p00856_A
---> inputs:
6 1 0 0
7 1 0 0
7 2 0 0
6 6 1 1
2
5
7 10 0 6
1
2
3
4
5
6
0 0 0 0
---> outputs:
0.166667
0.000000
0.166667
0.619642
0.000000

def main ( ) :
    import sys
    class Main ( ) :
        def solve ( self ) :
            with self . open ( '/dev/null' ) as f :
                while True :
                    N = len ( f . read ( ) )
                    T = len ( f . read ( ) )
                    L = len ( f . read ( ) )
                    B = len ( f . read ( ) )
                    if N == 0 and T == 0 and L == 0 and B == 0 :
                        break
                    square = [ 0 for i in range ( L ) ]
                    for i in range ( B ) :
                        square [ i ] = 1
                dp = np . zeros ( ( N + 1 , T + 1 ) )
                dp [ 0 ] [ 0 ] = 1
                for j in range ( T ) :
                    for i in range ( N ) :
                        for s in range ( 1 , 6 + 1 ) :
                            idx = 1
                            num = i + s
                            if square [ i ] == 1 :
                                idx = 2
                            if i + s > N :
                                num = 2 * N - ( i + s )
                            if square [ num ] == 2 and j + idx <= T :
                                dp [ 0 ] [ j + idx ] += dp [ i ] [ j ] * 1.0 / 6
                            elif j + idx <= T :
                                dp [ num ] [ j + idx ] += dp [ i ] [ j ] * 1.0 / 6
            goal = 0.0
            for i in range ( 0 , T + 1 ) :
                goal += dp [ N ] [ i ]
            print ( '%.6f\n' % goal )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1711
---> probID: codeforces_1296_A
---> inputs:
5
2
2 3
4
2 2 8 8
3
3 3 3
4
5 5 5 5
4
1 1 1 1
---> outputs:
YES
NO
YES
NO
NO

def oddsum ( ) :
    import sys
    t = sys . maxsize
    while t > 0 :
        s = 0
        o = 0
        e = 0
        a = sys . maxsize
        x = 0
        for i in range ( a ) :
            x = sys . maxsize
            s += x
            if x % 2 :
                o += 1
            else :
                e += 1
        if s % 2 :
            print ( "YES" )
        else :
            if o >= 1 and e >= 1 :
                print ( "YES" )
            else :
                print ( "NO" )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1712
---> probID: geeksforgeeks_3343_A
---> inputs:

---> outputs:
3


def GFG ( H , n , K ) :
    inser = 0
    for i in range ( 1 , n ) :
        diff = abs ( H [ i ] - H [ i - 1 ] )
        if diff <= K :
            continue
        else :
            inser += math . ceil ( diff / K ) - 1
    return inser


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1713
---> probID: geeksforgeeks_4932_A
---> inputs:

---> outputs:
12


def count_words ( data , len_ ) :
    count = 1
    if len_ == 1 :
        return count
    if data [ 0 ] == data [ 1 ] :
        count *= 1
    else :
        count *= 2
    for j in range ( 1 , len_ - 1 ) :
        if data [ j ] == data [ j - 1 ] and data [ j ] == data [ j + 1 ] :
            count *= 1
        elif data [ j ] == data [ j - 1 ] or data [ j ] == data [ j + 1 ] or data [ j - 1 ] == data [ j + 1 ] :
            count *= 2
        else :
            count *= 3
    if data [ len_ - 1 ] == data [ len_ - 2 ] :
        count *= 1
    else :
        count *= 2
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1714
---> probID: codeforces_621_A
---> inputs:
3
1 2 3
---> outputs:
6

def evenSum ( ) :
    import sys
    import os
    import subprocess
    import subprocess
    import time
    import sys
    import subprocess
    import subprocess
    import sys
    class evenSum ( subprocess ) :
        def __init__ ( self ) :
            self . stdout = subprocess . PIPE
            self . stderr = subprocess . STDOUT
            self . stdout = subprocess . PIPE
        def run ( self ) :
            n = int ( self . stdout . readline ( ) )
            self . max = 0
            s = self . stdout . readline ( )
            x = s . split ( )
            self . even = [ ]
            self . odd = [ ]
            while n > 0 :
                n -= 1
                y = int ( x [ n ] )
                if y % 2 == 0 :
                    self . even . append ( y )
                else :
                    self . odd . append ( y )
            for i in range ( len ( self . even ) ) :
                self . max += self . even [ i ]
        def odd2 ( self , odd ) :
            self . odd += [ odd [ i ] ]
    odd2 . sort ( )
    for i in range ( len ( odd2 ) - 1 , 0 , - 1 ) :
        self . max += odd2 [ i ]
    if len ( odd2 ) % 2 == 0 and len ( odd2 ) > 0 :
        self . max += odd2 [ 0 ]
    subprocess . call ( '%d %s' % ( max , len ( odd2 ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 98%|█████████▊| 1714/1746 [00:40<00:00, 41.72it/s]

-------------------------------------


---> lineNum: 1715
---> probID: geeksforgeeks_3437_A
---> inputs:

---> outputs:
2


def get_perfect_squares ( n ) :
    perfect_squares = [ ]
    current , i = 1 , 1
    while current <= n :
        perfect_squares . append ( current )
        current = int ( math . pow ( i , 2 ) )
        i += 1
    return perfect_squares


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1716
---> probID: geeksforgeeks_1221_A
---> inputs:

---> outputs:
5.0


def find_hypotenuse ( side1 , side2 ) :
    h = math . sqrt ( ( side1 ** 2 ) + ( side2 ** 2 ) )
    return h


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1717
---> probID: geeksforgeeks_3973_A
---> inputs:

---> outputs:
The two ODD elements are 5 & 1


def print_two_odd ( arr , size ) :
    import sys
    xor2 = arr [ 0 ]
    set_bit_no = 0
    i = size - 2
    x , y = 0 , 0
    for i in range ( 1 , size ) :
        xor2 = xor2 ^ arr [ i ]
        set_bit_no = xor2 & ~ ( xor2 - 1 )
    for i in range ( size ) :
        if arr [ i ] & set_bit_no :
            x = x ^ arr [ i ]
        else :
            y = y ^ arr [ i ]
    print ( "The two ODD elements are %d & %d" % ( x , y ) )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553006186_4605/main.py", line 19
    pos1 , pos2 = 1 , pos3 , pos4 = 1 , a , b , mm , total = 0
                  ^
SyntaxError: cannot assign to literal


-------------------------------------


---> lineNum: 1718
---> probID: codeforces_1538_A
---> inputs:
5
5
1 5 4 3 2
8
2 1 3 4 5 6 8 7
8
4 2 3 1 8 6 7 5
4
3 4 2 1
4
2 3 1 4
---> outputs:
2
4
5
3
2

def main ( ) :
    import sys
    t = sys . maxsize
    while t > 0 :
        n = len ( sys . argv )
        ar = [ ]
        max = 0
        min = 100000
        x = 0
        y = 0
        for i in range ( n ) :
            ar . append ( sys . stdin . read ( n ) )
            if ar [ i ] < min :
                min = ar [ i ]
                x = i + 1
            if ar [ i ] > max :
                max = ar [ i ]
                y = i + 1
        pos1 , pos2 = 1 , pos3 , pos4 = 1 , a , b , mm , total = 0
        pos1 = x
        pos2 += n - x
        if pos1 < pos2 :
            a = pos1
        else :
            a = pos2
        pos3 = y
        pos4 += n - y
        if pos3 < pos4 :
            b = pos3
        else :
            b = pos4
        div = abs ( y - x )
        if div < a or div < b :
            mm = min ( a , b )
            total += mm + div
        else :
            total += a + b
        print ( total )
        t -= 1


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1719
---> probID: codeforces_724_A
---> inputs:
monday
tuesday
---> outputs:
NO

def main ( ) :
    import sys
    import os
    import subprocess
    import re
    try :
        res = subprocess . check_output ( [ '/usr/bin/env' , '-c' , '-s' , '--no-color' ] )
    except Exception as e :
        res = None
    else :
        res = res . decode ( 'utf-8' )
    return res


---> console_out:
 
DIDN'T MATCH!! :(
 98%|█████████▊| 1719/1746 [00:40<00:00, 41.56it/s]  File "./junk/1692553006235_3599/main.py", line 22
    print ( '+++'+'+'+'+'\n' )
                             ^
SyntaxError: unexpected character after line continuation character


-------------------------------------


---> lineNum: 1720
---> probID: codeforces_711_A
---> inputs:
6
OO|OX
XO|XX
OX|OO
XX|OX
OO|OO
OO|XX
---> outputs:
YES
++|OX
XO|XX
OX|OO
XX|OX
OO|OO
OO|XX

def main ( ) :
    import string
    f = False
    s = False
    ind = 0
    x = [ ]
    for i in range ( n ) :
        x . append ( string . strip ( ) )
        if f == False :
            if 'OO' in x [ i ] :
                f = True
                ind = i
    if f == True :
        print ( 'YES' )
        for i in range ( n ) :
            if i != ind :
                print ( x [ i ] )
            else :
                if x [ i ] [ : 2 ] == 'OO' :
                    print ( '++' + x [ i ] [ 2 : 5 ] + '\n' , end = '' )
                elif x [ i ] [ 3 : 5 ] == 'OO' :
                    print ( '+++'+'+'+'+'\n' )
    else :
        print ( 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1721
---> probID: geeksforgeeks_2481_A
---> inputs:

---> outputs:
1->2->3->4->5->6->7->8->9->1
1->2->3->4->6->7->8->9->1
1->2->3->4->6->7->8->1
1->2->3->6->7->8->1
2->3->6->7->8->2
2->3->6->8->2
2->3->8->2
2->3->2
2->2


def GFG ( x ) :
    class GFG ( object ) :
        data = None
        next = None
        def __init__ ( self , x ) :
            self . data = x
            self . next = None
    def printList ( head ) :
        if not head :
            return
        temp = head
        while True :
            print ( '%s->' % temp . data , end = ' ' )
            temp = temp . next
            if temp is not head :
                break
            print ( head . data )
    def deleteK ( head_ref , k ) :
        head = head_ref
        if not head :
            return None
        curr , prev = head , None
        while True :
            if curr . next == head and curr == head :
                break
            printList ( head )
            for i in range ( k ) :
                prev = curr
                curr = curr . next
            if curr is head :
                prev = head
                while prev . next != head :
                    prev = prev . next
                head = curr . next
                prev . next = head
                head_ref = head
            elif curr . next == head :
                prev . next = head
            else :
                prev . next = curr . next
        return head
    def insertNode ( head_ref , x ) :
        head = head_ref
        temp = GFG ( x )
        if not head :
            temp . next = temp
            head_ref = temp
            return head_ref
        else :
            temp1 = head
            while temp1 . next != head :
                temp1 = temp1 . next
            temp1 . next = temp
            temp . next = head
        return head
    def main ( args ) :
        head = None
        head = insertNode ( head , 1 )
        head = insertNode ( head , 2 )
        head = insertNode ( head , 3 )
        head = insertNode ( head , 4 )
        head = insertNode ( head , 5 )
        head = insertNode ( head , 6 )
        head = insertNode ( head , 7 )
        head = insertNode ( head , 8 )
        head = insertNode ( head , 9 )
        k = 4
        head = deleteK ( head , k )
    return GFG ( head )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1722
---> probID: geeksforgeeks_3246_A
---> inputs:

---> outputs:
4


def GFG ( cur , x , n ) :
    if not x :
        return sys . maxsize
    if x > 0 :
        return abs ( ( n - cur ) / x )
    else :
        return abs ( ( cur - 1 ) / x )
def count_steps ( curx , cury , n , m , moves ) :
    count = 0
    k = len ( moves )
    for x , y in moves :
        stepct = min ( steps ( curx , x , n ) , steps ( cury , y , m ) )
        count += stepct
        curx += stepct * x
        cury += stepct * y
    return count


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1723
---> probID: codeforces_723_A
---> inputs:
7 1 4
---> outputs:
6

def main ( ) :
    import sys
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import math
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import math
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1724
---> probID: geeksforgeeks_768_A
---> inputs:

---> outputs:
6


def gf_gcd ( a , b ) :
    arr = [ 1 , 1 , 1 ]
    n = len ( arr )
    print ( gf_gcd ( arr , n ) )


---> console_out:
 
DIDN'T MATCH!! :(
 99%|█████████▊| 1724/1746 [00:40<00:00, 41.72it/s]

-------------------------------------


---> lineNum: 1725
---> probID: geeksforgeeks_4452_A
---> inputs:

---> outputs:
No


def is_vowel ( c ) :
    import string
    if c in " a " or c in " e " or c in " i " or c in " o " or c in " u" :
        return True
    return False
def is_vowelprime ( data , n ) :
    prime = [ True ] * n
    prime [ 0 ] = False
    prime [ 1 ] = False
    for p in range ( 2 , n ) :
        if prime [ p ] == True :
            for i in range ( p * p , n , p ) :
                prime [ i ] = False
    for i in range ( n ) :
        if is_vowel ( data [ i ] ) and not prime [ i ] :
            return False
    return True
def main ( ) :
    data = "geeksforgeeks"
    n = len ( data )
    if is_vowelprime ( data , n ) :
        print ( "Yes" )
    else :
        print ( "No" )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553006378_7983/main.py", line 7
    for len ( data ) in range ( 1 , N + 1 ) :
        ^
SyntaxError: cannot assign to function call


-------------------------------------


---> lineNum: 1726
---> probID: geeksforgeeks_2869_A
---> inputs:

---> outputs:
2


def minStepToDeleteString ( data ) :
    N = len ( data )
    dp = np . zeros ( ( N + 1 , N + 1 ) )
    for i in range ( 0 , N + 1 ) :
        for j in range ( 0 , N + 1 ) :
            dp [ i ] [ j ] = 0
    for len ( data ) in range ( 1 , N + 1 ) :
        for i , j in enumerate ( data ) :
            if len ( data ) == 1 :
                dp [ i ] [ j ] = 1
            else :
                dp [ i ] [ j ] = 1 + dp [ i + 1 ] [ j ]
                if data [ i ] == data [ i + 1 ] :
                    dp [ i ] [ j ] = min ( 1 + dp [ i + 2 ] [ j ] , dp [ i ] [ j ] )
                for K in range ( i + 2 , j + 1 ) :
                    if data [ i ] == data [ K ] :
                        dp [ i ] [ j ] = min ( dp [ i + 1 ] [ K - 1 ] + dp [ K + 1 ] [ j ] , dp [ i ] [ j ] )
    return dp [ 0 ] [ N - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1727
---> probID: geeksforgeeks_38_A
---> inputs:

---> outputs:
5


def GFG ( ) :
    limit = 10000000
    position = [ - 1 ] * ( limit + 1 )
    def sieve ( ) :
        position [ 0 ] = - 1
        position [ 1 ] = - 1
        pos = 0
        for i in range ( 2 , limit + 1 ) :
            if position [ i ] == 0 :
                position [ i ] = 1
                pos += 1
                for j in range ( i * 2 , limit + 1 , i ) :
                    position [ j ] = - 1
    def main ( ) :
        sieve ( )
        n = 11
        print ( position [ n ] , end = ' ' )
    return '' . join ( position )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1728
---> probID: geeksforgeeks_2602_A
---> inputs:

---> outputs:
43758


def get_sum_monotone ( len_ ) :
    DP_s = 9
    DP = np . zeros ( ( len_ , DP_s ) )
    for i in range ( DP_s ) :
        DP [ 0 ] [ i ] = i + 1
    for i in range ( len_ ) :
        DP [ i ] [ 0 ] = 1
    for i in range ( 1 , len_ ) :
        for j in range ( 1 , DP_s ) :
            DP [ i ] [ j ] = DP [ i - 1 ] [ j ] + DP [ i ] [ j - 1 ]
    return DP [ len_ - 1 ] [ DP_s - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1729
---> probID: geeksforgeeks_2609_A
---> inputs:

---> outputs:
43758


def get_sum_monotone ( len_ ) :
    DP_s = 9
    DP = np . zeros ( ( len_ , DP_s ) )
    for i in range ( DP_s ) :
        DP [ 0 ] [ i ] = i + 1
    for i in range ( len_ ) :
        DP [ i ] [ 0 ] = 1
    for i in range ( 1 , len_ ) :
        for j in range ( 1 , DP_s ) :
            DP [ i ] [ j ] = DP [ i - 1 ] [ j ] + DP [ i ] [ j - 1 ]
    return DP [ len_ - 1 ] [ DP_s - 1 ]


---> console_out:
 
DIDN'T MATCH!! :(
 99%|█████████▉| 1729/1746 [00:40<00:00, 41.98it/s]

-------------------------------------


---> lineNum: 1730
---> probID: geeksforgeeks_1604_A
---> inputs:

---> outputs:
8


def gf_max_cost ( a , n , l , r ) :
    mx , k = 0 , 0
    for i in range ( n ) :
        mx = max ( mx , a [ i ] )
    count = [ 0 ] * ( mx + 1 )
    for i in range ( n ) :
        count [ a [ i ] ] += 1
    res = [ 0 ] * ( mx + 1 )
    res [ 0 ] = 0
    l = min ( l , r )
    for num in range ( 1 , mx + 1 ) :
        k = max ( num - l - 1 , 0 )
        res [ num ] = max ( res [ num - 1 ] , num * count [ num ] + res [ k ] )
    return res [ mx ]


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553006495_1987/main.py", line 13
    outer :
          ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1731
---> probID: codeforces_1680_B
---> inputs:
6
1 3
ERR
2 2
ER
RE
2 2
ER
ER
1 1
R
4 3
EEE
EEE
ERR
EER
3 3
EEE
EER
REE
---> outputs:
YES
NO
YES
YES
YES
NO

def main ( ) :
    import string
    import sys
    T = len ( sys . stdin )
    for t in range ( T ) :
        R = len ( sys . stdin )
        C = len ( sys . stdin )
        A = [ ]
        for r in sys . stdin :
            A . append ( '' . join ( sys . stdin ) )
        r = - 1
        c = - 1
        outer :
            for rr in range ( R ) :
                for cc in range ( C ) :
                    if A [ rr ] [ cc ] == 'R' :
                        r = rr
                        c = cc
                        break
        ok = True
        for rr in range ( r + 1 , R ) :
            for cc in range ( c ) :
                if A [ rr ] [ cc ] == 'R' :
                    ok = False
        print ( 'YES' if ok else 'NO' )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1732
---> probID: geeksforgeeks_3665_A
---> inputs:

---> outputs:
Area is 78.550000


def Test ( r ) :
    PI = math . pi
    def findArea ( r ) :
        return PI * math . pow ( r , 2 )
    def main ( ) :
        print ( "Area is %d" % findArea ( 5 ) )
    return main


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1733
---> probID: codeforces_700_B
---> inputs:
7 2
1 5 6 2
1 3
3 2
4 5
3 7
4 3
4 6
---> outputs:
6

def DmwS ( ) :
    import sys
    import random
    import math
    from math import sin , cos , pi
    from math import pi , pi , pi
    from math import sin , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi , pi

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1734
---> probID: geeksforgeeks_2922_A
---> inputs:

---> outputs:
90


def nth_term ( N ) :
    import math
    return abs ( N * ( ( N - 1 ) * ( N - 3 ) * ( N - 5 ) ) )


---> console_out:
 
DIDN'T MATCH!! :(
 99%|█████████▉| 1734/1746 [00:40<00:00, 42.31it/s]

-------------------------------------


---> lineNum: 1735
---> probID: geeksforgeeks_807_A
---> inputs:

---> outputs:
70


def GFG ( X ) :
    import math
    import numpy as np
    import numpy as np
    class GFG ( np . ndarray ) :
        def get_height ( X ) :
            return ( 2 * X )
        def get_height ( X ) :
            X = 35
            return np . sum ( np . abs ( X - X ) )
    return GFG ( )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1736
---> probID: geeksforgeeks_3897_A
---> inputs:

---> outputs:
2


def countwalks ( graph , u , v , k ) :
    import sys
    V = 4
    def countwalks ( graph , u , v , k ) :
        if k == 0 and u == v :
            return 1
        if k == 1 and graph [ u ] [ v ] == 1 :
            return 1
        if k <= 0 :
            return 0
        count = 0
        for i in range ( V ) :
            if graph [ u ] [ i ] == 1 :
                count += countwalks ( graph , i , v , k - 1 )
        return count
    graph = np . array ( [ [ 0 , 1 , 1 , 1 ] , [ 0 , 0 , 0 , 1 ] , [ 0 , 0 , 0 , 1 ] , [ 0 , 0 , 0 , 0 ] ] )
    u , v , k = 0 , 3 , 2
    p = KPaths ( )
    print ( p . countwalks ( graph , u , v , k ) )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1737
---> probID: geeksforgeeks_2556_A
---> inputs:

---> outputs:
2
3
8
16


def find_digits ( n , b ) :
    if n < 0 :
        return 0
    if n <= 1 :
        return 1
    math . pi = math . pi
    M_E = 2.7182
    x = ( ( n * math . log10 ( n / M_E ) + math . log10 ( 2 * math . pi * n ) / 2.0 ) ) / ( math . log10 ( b ) )
    return int ( math . floor ( x ) + 1 )


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1738
---> probID: aizu_p02346_A
---> inputs:
3 5
0 1 1
0 2 2
0 3 3
1 1 2
1 2 2
---> outputs:
3
2

def main ( ) :
    import sys
    try :
        n = int ( sys . stdin . readline ( ) )
        q = int ( sys . stdin . readline ( ) )
        init ( n )
        for i in range ( q ) :
            if sys . stdin . readline ( ) == '' :
                add ( sys . stdin . readline ( ) , sys . stdin . readline ( ) )
            else :
                print ( sum ( sys . stdin . readline ( ) , sys . stdin . readline ( ) ) )
    except ValueError :
        pass
    else :
        nodes = [ 0 ] * ( n - 1 )
    def add ( target , value ) :
        while target < len ( nodes ) :
            nodes [ target ] += value
            target += target & ( - target )
    def sum ( s , t ) :
        return sum ( t ) - sum ( s - 1 )
    def sum ( t ) :
        res = 0
        while t > 0 :
            res += nodes [ t ]
            t -= t & ( - t )
        return res


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1739
---> probID: atcoder_ARC066_B
---> inputs:
3
2 1 4
2
1 1
2 3
---> outputs:
5


def main ( ) :
    import sys
    import string
    check = { }
    def solve ( n ) :
        if n == 0 :
            return 1
        if n == 1 :
            return 2
        if n // 2 in check :
            a = check [ n // 2 ]
        else :
            a = solve ( n // 2 ) % 1000000007
            check [ n // 2 ] = a
        if n // 2 - 1 in check :
            b = check [ n // 2 - 1 ]
        else :
            b = solve ( n // 2 - 1 ) % 1000000007
            check [ n // 2 - 1 ] = b
        if n % 2 == 1 :
            return ( 2 * a + b ) % 1000000007
        else :
            return ( 2 * b + a ) % 1000000007
    return 0


---> console_out:
 
DIDN'T MATCH!! :(
100%|█████████▉| 1739/1746 [00:41<00:00, 42.45it/s]  File "./junk/1692553006704_5464/main.py", line 10
    break
    ^
SyntaxError: 'break' outside loop


-------------------------------------


---> lineNum: 1740
---> probID: aizu_p00712_A
---> inputs:
2 3 120 3
2 3 300 3
2 3 299 3
2 3 12 3
2 3 12000 7
54 795 12000 7
2 3 300 1
2 1 200 5
2 4 54 2
0 0 0 0
---> outputs:
4
7
6
2
42
1
0
9
3

def main ( ) :
    import sys
    import re
    try :
        numerator = int ( sys . stdin . readline ( ) )
        denominator = int ( sys . stdin . readline ( ) )
        maxproduct = int ( sys . stdin . readline ( ) )
        parts = int ( sys . stdin . readline ( ) )
        if not parts :
            break
        count = 0
        count += Judge ( numerator , denominator , parts , 1 , 0 )
        print ( count )
    except :
        pass
    return count


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553006728_6301/main.py", line 120
    
        ^
SyntaxError: unexpected EOF while parsing


-------------------------------------


---> lineNum: 1741
---> probID: geeksforgeeks_1936_A
---> inputs:

---> outputs:
1


def GFG ( s ) :
    import string
    import sys
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    import string
    try :
        string
    

---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1742
---> probID: geeksforgeeks_329_A
---> inputs:

---> outputs:
Number of subsets = 7


def count_subsets ( arr , n ) :
    import math
    us = set ( )
    even_count = 0
    for i in range ( n ) :
        if arr [ i ] % 2 == 0 :
            us . add ( arr [ i ] )
    even_count = len ( us )
    return int ( math . pow ( 2 , even_count ) - 1 )


---> console_out:
 
DIDN'T MATCH!! :(
  File "./junk/1692553006775_9152/main.py", line 9
    return ( f [ n ] = 1 )
                     ^
SyntaxError: invalid syntax


-------------------------------------


---> lineNum: 1743
---> probID: geeksforgeeks_1575_A
---> inputs:

---> outputs:
144


def GFG ( n ) :
    import string
    MAX = 1000
    f = [ 0 ] * MAX
    def fib ( n ) :
        if n == 0 :
            return 0
        if n in [ 1 , 2 ] :
            return ( f [ n ] = 1 )
        if f [ n ] :
            return f [ n ]
        k = 0
        if n & 1 :
            k = ( n + 1 ) // 2
        else :
            k = n // 2
        if n & 1 :
            f [ n ] = ( fib ( k ) ** 2 + fib ( k - 1 ) ** 2 )
        else :
            f [ n ] = ( 2 * fib ( k - 1 ) + fib ( k ) ) ** 2
        return f [ n ]
    def gcd ( a , b ) :
        if not a :
            return b
        return gcd ( b % a , a )
    def find_lcmfibonacci ( a , b ) :
        return ( fib ( a ) * fib ( b ) ) / fib ( gcd ( a , b ) )
    def main ( args ) :
        a , b = 3 , 12
        print ( find_lcmfibonacci ( a , b ) )
    return None


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1744
---> probID: geeksforgeeks_190_A
---> inputs:

---> outputs:
50


def GFG ( n , w ) :
    x , sum = 0 , 0
    if w >= 0 and w <= 8 :
        x = 9 - w
    elif w >= - 9 and w <= - 1 :
        x = 10 + w
    sum = int ( math . pow ( 10 , n - 2 ) )
    sum = ( x * sum )
    return sum


---> console_out:
 
DIDN'T MATCH!! :(
100%|█████████▉| 1744/1746 [00:41<00:00, 42.57it/s]

-------------------------------------


---> lineNum: 1745
---> probID: geeksforgeeks_4161_A
---> inputs:

---> outputs:
c


def find_kth_char ( s , k ) :
    s = list ( s )
    i = 0
    total_len = 0
    while i < len ( s ) :
        if s [ i ] . isalpha ( ) :
            total_len += 1
            if total_len == k :
                return s [ i ]
            i += 1
        else :
            n = 0
            while i < len ( s ) and not s [ i ] . isalpha ( ) :
                n = n * 10 + ( s [ i ] - '0' )
                i += 1
            next_total_len = total_len * n
            if k <= next_total_len :
                pos = k % total_len
                if pos == 0 :
                    pos = total_len
                return find_kth_char ( s , pos )
            else :
                total_len = next_total_len
    return ' '


---> console_out:
 
DIDN'T MATCH!! :(


-------------------------------------


---> lineNum: 1746
---> probID: geeksforgeeks_3285_A
---> inputs:

---> outputs:
15


def count_non_empty_substr ( x ) :
    import string
    n = len ( x )
    return n * ( n + 1 ) / 2


---> console_out:
 
DIDN'T MATCH!! :(
100%|██████████| 1746/1746 [00:41<00:00, 42.34it/s]
Success-RuntimeEq - 8, TotalChecked-RuntimeEq - 1746, Total-RuntimeEq - 1746
RunEqAcc: 8/1746 = 0.4581901489117984 %
matches_bySource {'aizu': 2, 'atcoder': 1, 'codeforces': 1, 'codejam': 0, 'geeksforgeeks': 4, 'leetcode': 0, 'projecteuler': 0}
totalChecked_bySource {'aizu': 190, 'atcoder': 97, 'codeforces': 401, 'codejam': 4, 'geeksforgeeks': 995, 'leetcode': 18, 'projecteuler': 41}
